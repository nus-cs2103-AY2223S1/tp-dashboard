[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"darrtzj"},"content":"[![CI Status](https://github.com/AY2223S1-CS2103T-W15-4/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S1-CS2103T-W15-4/tp/actions)","lastModifiedDate":"2022-09-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/nus-cs2103-AY2223S1/tp/branch/master/graph/badge.svg?token\u003dA2FU6P932B)](https://codecov.io/gh/nus-cs2103-AY2223S1/tp)","lastModifiedDate":"2022-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"darrtzj"},"content":"# FRIDAY","lastModifiedDate":"2022-09-27"},{"lineNumber":6,"author":{"gitId":"darrtzj"},"content":"FRIDAY is a one easy-to-access desktop app for you to track your student\u0027s progress, optimized for use via a","lastModifiedDate":"2022-09-27"},{"lineNumber":7,"author":{"gitId":"darrtzj"},"content":"Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast,","lastModifiedDate":"2022-09-27"},{"lineNumber":8,"author":{"gitId":"darrtzj"},"content":"FRIDAY can get your student\u0027s progress management tasks done faster than traditional GUI apps !","lastModifiedDate":"2022-09-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":10,"author":{"gitId":"darrtzj"},"content":"* For the detailed documentation of this project, see the [FRIDAY Website](https://ay2223s1-cs2103t-w15-4.github.io/tp/).","lastModifiedDate":"2022-09-28"},{"lineNumber":11,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":12,"author":{"gitId":"darrtzj"},"content":"**Acknowledgements**","lastModifiedDate":"2022-09-28"},{"lineNumber":13,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":14,"author":{"gitId":"darrtzj"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2022-09-27"}],"authorContributionMap":{"darrtzj":10,"-":4}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"HowSuen"},"content":"mainClassName \u003d \u0027friday.Main\u0027","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"jorrdansoh"},"content":"tasks.withType(JavaCompile) {","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"jorrdansoh"},"content":"    options.compilerArgs \u003c\u003c \u0027-Xlint:unchecked\u0027","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"jorrdansoh"},"content":"    options.deprecation \u003d true","lastModifiedDate":"2022-10-21"},{"lineNumber":22,"author":{"gitId":"jorrdansoh"},"content":"}","lastModifiedDate":"2022-10-21"},{"lineNumber":23,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":28,"author":{"gitId":"jorrdansoh"},"content":"run {","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"jorrdansoh"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"jorrdansoh"},"content":"}","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":78,"author":{"gitId":"jorrdansoh"},"content":"    archiveFileName \u003d \u0027friday.jar\u0027","lastModifiedDate":"2022-10-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"jorrdansoh":10,"-":70,"HowSuen":1}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"darrtzj"},"content":"You can reach us via [GitHub Issues](https://github.com/AY2223S1-CS2103T-W15-4/tp/issues)","lastModifiedDate":"2022-11-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"Yuvaraj0702"},"content":"## Project FRIDAY","lastModifiedDate":"2022-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"Yuvaraj0702"},"content":"### Yuvaraj Kumaresan","lastModifiedDate":"2022-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"Yuvaraj0702"},"content":"\u003cimg src\u003d\"images/yuvaraj0702.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"Yuvaraj0702"},"content":"[[github](https://github.com/Yuvaraj0702)]","lastModifiedDate":"2022-09-25"},{"lineNumber":17,"author":{"gitId":"Yuvaraj0702"},"content":"[[portfolio](team/yuvaraj0702.md)]","lastModifiedDate":"2022-09-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"Yuvaraj0702"},"content":"* Role: Team Lead","lastModifiedDate":"2022-11-07"},{"lineNumber":20,"author":{"gitId":"Yuvaraj0702"},"content":"* Responsibilities: Ensure adherence to deadlines and implement core features.","lastModifiedDate":"2022-11-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"darrtzj"},"content":"### Darren Teo Zhi Jie","lastModifiedDate":"2022-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"darrtzj"},"content":"\u003cimg src\u003d\"images/darrtzj.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"darrtzj"},"content":"[[github](http://github.com/darrtzj)]","lastModifiedDate":"2022-09-25"},{"lineNumber":27,"author":{"gitId":"darrtzj"},"content":"[[portfolio](team/darrtzj.md)]","lastModifiedDate":"2022-09-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"Yuvaraj0702"},"content":"* Role: Project advisor","lastModifiedDate":"2022-11-07"},{"lineNumber":30,"author":{"gitId":"Yuvaraj0702"},"content":"* Responsibilities: Advise team on progress and suggest changes to implementation.","lastModifiedDate":"2022-11-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"HowSuen"},"content":"### Tan How Suen","lastModifiedDate":"2022-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"HowSuen"},"content":"\u003cimg src\u003d\"images/howsuen.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"Yuvaraj0702"},"content":"[[github](http://github.com/HowSuen)]","lastModifiedDate":"2022-09-27"},{"lineNumber":37,"author":{"gitId":"Yuvaraj0702"},"content":"[[portfolio](team/howsuen.md)]","lastModifiedDate":"2022-09-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"HowSuen"},"content":"* Responsibilities: UI, Dev Ops","lastModifiedDate":"2022-11-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"jorrdansoh"},"content":"### Soh Jing Ren","lastModifiedDate":"2022-09-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"jorrdansoh"},"content":"\u003cimg src\u003d\"images/jorrdansoh.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"jorrdansoh"},"content":"[[github](http://github.com/jorrdansoh)]","lastModifiedDate":"2022-09-25"},{"lineNumber":47,"author":{"gitId":"jorrdansoh"},"content":"[[portfolio](team/jorrdansoh.md)]","lastModifiedDate":"2022-09-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"Yuvaraj0702"},"content":"* Responsibilities: Data and Parsing","lastModifiedDate":"2022-11-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"kaij77"},"content":"### Yeo Kai Jiun","lastModifiedDate":"2022-09-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"kaij77"},"content":"\u003cimg src\u003d\"images/kaij77.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"kaij77"},"content":"[[github](http://github.com/kaij77)]","lastModifiedDate":"2022-09-25"},{"lineNumber":57,"author":{"gitId":"kaij77"},"content":"[[portfolio](team/kaij77.md)]","lastModifiedDate":"2022-11-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"Yuvaraj0702"},"content":"* Responsibilities: Testing and Dev Ops","lastModifiedDate":"2022-11-07"}],"authorContributionMap":{"jorrdansoh":4,"Yuvaraj0702":13,"darrtzj":5,"kaij77":4,"-":31,"HowSuen":3}},{"path":"docs/DevOps.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: DevOps guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Build automation","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"This project uses Gradle for **build automation and dependency management**. **You are recommended to read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html)**.","lastModifiedDate":"2020-06-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Given below are how to use Gradle for some important project tasks.","lastModifiedDate":"2020-05-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* **`clean`**: Deletes the files created during the previous build tasks (e.g. files in the `build` folder).\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  e.g. `./gradlew clean`","lastModifiedDate":"2020-05-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* **`shadowJar`**: Uses the ShadowJar plugin to creat a fat JAR file in the `build/lib` folder, *if the current file is outdated*.\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  e.g. `./gradlew shadowJar`.","lastModifiedDate":"2020-05-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"* **`run`**: Builds and runs the application.\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  **`runShadow`**: Builds the application as a fat JAR, and then runs it.","lastModifiedDate":"2020-05-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"* **`checkstyleMain`**: Runs the code style check for the main code base.\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  **`checkstyleTest`**: Runs the code style check for the test code base.","lastModifiedDate":"2020-05-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"* **`test`**: Runs all tests.\u003c","lastModifiedDate":"2020-05-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  * `./gradlew test` — Runs all tests","lastModifiedDate":"2020-05-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * `./gradlew clean test` — Cleans the project and runs tests","lastModifiedDate":"2020-05-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"## Continuous integration (CI)","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"This project uses GitHub Actions for CI. The project comes with the necessary GitHub Actions configurations files (in the `.github/workflows` folder). No further setting up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"### Code coverage","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"As part of CI, this project uses Codecov to generate coverage reports. When CI runs, it will generate code coverage data (based on the tests run by CI) and upload that data to the CodeCov website, which in turn can provide you more info about the coverage of your testes. Here are the steps to set up CodeCov for a fork of this repository.","lastModifiedDate":"2022-02-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"1. Sign up with Codecov using your GitHub account [here](https://codecov.io/signup).","lastModifiedDate":"2020-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Once you are inside Codecov web app, add your org (that contains the fork) to CodeCov.","lastModifiedDate":"2022-02-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"1. Wait for the next run of CI in your fork (or push a dummy commit to it to trigger CI) to confirm CI is able to upload generated coverage data to CodeCov. If CodeCov is not set up correctly, the CI run will fail with an error message that mentions CodeCov.","lastModifiedDate":"2022-02-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Get the Markdown code for the Codecov badge provided in `Settings \u003e Badges` and update the `docs/index.md` of your repo with it so that the badge [![codecov](https://codecov.io/gh/se-edu/addressbook-level3/branch/master/graph/badge.svg)](https://codecov.io/gh/se-edu/addressbook-level3) in that page reflects the coverage of your project.","lastModifiedDate":"2020-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Repository-wide checks","lastModifiedDate":"2020-07-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"In addition to running Gradle checks, CI includes some repository-wide checks. Unlike the Gradle checks which only cover files used in the build process, these repository-wide checks cover all files in the repository. They check for repository rules which are hard to enforce on development machines such as line ending requirements.","lastModifiedDate":"2020-07-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"These checks are implemented as POSIX shell scripts, and thus can only be run on POSIX-compliant operating systems such as macOS and Linux. To run all checks locally on these operating systems, execute the following in the repository root directory:","lastModifiedDate":"2020-07-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"`./config/travis/run-checks.sh`","lastModifiedDate":"2020-07-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"Any warnings or errors will be printed out to the console.","lastModifiedDate":"2020-07-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"**If adding new checks:**","lastModifiedDate":"2020-07-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* Checks are implemented as executable `check-*` scripts within the `.github` directory. The `run-checks.sh` script will automatically pick up and run files named as such. That is, you can add more such files if you need and the CI will do the rest.","lastModifiedDate":"2020-07-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"* Check scripts should print out errors in the format `SEVERITY:FILENAME:LINE: MESSAGE`","lastModifiedDate":"2020-07-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  * SEVERITY is either ERROR or WARN.","lastModifiedDate":"2020-07-28"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  * FILENAME is the path to the file relative to the current directory.","lastModifiedDate":"2020-07-28"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  * LINE is the line of the file where the error occurred and MESSAGE is the message explaining the error.","lastModifiedDate":"2020-07-28"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"* Check scripts must exit with a non-zero exit code if any errors occur.","lastModifiedDate":"2020-07-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":71,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"## Making a release","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"Here are the steps to create a new release.","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"jorrdansoh"},"content":"1. Update the version number in [`MainApp.java`](https://github.com/AY2223S1-CS2103T-W15-4/tp/blob/master/src/main/java/friday/MainApp.java).","lastModifiedDate":"2022-11-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"1. Generate a fat JAR file using Gradle (i.e., `gradlew shadowJar`).","lastModifiedDate":"2021-08-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"1. Tag the repo with the version number. e.g. `v0.1`","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"1. [Create a new release using GitHub](https://help.github.com/articles/creating-releases/). Upload the JAR file you created.","lastModifiedDate":"2020-05-26"}],"authorContributionMap":{"jorrdansoh":1,"-":79}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"Yuvaraj0702"},"content":"This project is based on the Friday-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2022-11-02"},{"lineNumber":13,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"jorrdansoh"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/AY2223S1-CS2103T-W15-4/tp/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2022-11-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"HowSuen"},"content":"**`Main`** has two classes called [`Main`](https://github.com/AY2223S1-CS2103T-W15-4/tp/blob/master/src/main/java/friday/Main.java) and [`MainApp`](https://github.com/AY2223S1-CS2103T-W15-4/tp/blob/master/src/main/java/friday/MainApp.java). It is responsible for,","lastModifiedDate":"2022-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"HowSuen"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/AY2223S1-CS2103T-W15-4/tp/blob/master/src/main/java/friday/ui/Ui.java)","lastModifiedDate":"2022-10-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"HowSuen"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `StudentListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2022-10-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"HowSuen"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/AY2223S1-CS2103T-W15-4/tp/blob/master/src/main/java/friday/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/AY2223S1-CS2103T-W15-4/tp/blob/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2022-10-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"HowSuen"},"content":"* depends on some classes in the `Model` component, as it displays `Student` object residing in the `Model`.","lastModifiedDate":"2022-10-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"HowSuen"},"content":"**API** : [`Logic.java`](https://github.com/AY2223S1-CS2103T-W15-4/tp/blob/master/src/main/java/friday/logic/Logic.java)","lastModifiedDate":"2022-10-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"HowSuen"},"content":"1. When `Logic` is called upon to execute a command, it uses the `FridayParser` class to parse the user command.","lastModifiedDate":"2022-10-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"kaij77"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a student).","lastModifiedDate":"2022-10-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"HowSuen"},"content":"* When called upon to parse a user command, the `FridayParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `FridayParser` returns back as a `Command` object.","lastModifiedDate":"2022-10-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"jorrdansoh"},"content":"**API** : [`Model.java`](https://github.com/AY2223S1-CS2103T-W15-4/tp/blob/master/src/main/java/friday/model/Model.java)","lastModifiedDate":"2022-11-01"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"darrtzj"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"600\" /\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"jorrdansoh"},"content":"* stores the FRIDAY data i.e., all `Student` objects (which are contained in a `UniqueStudentList` object).","lastModifiedDate":"2022-10-20"},{"lineNumber":125,"author":{"gitId":"jorrdansoh"},"content":"* stores the currently \u0027selected\u0027 `Student` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cStudent\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2022-10-20"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"Yuvaraj0702"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `Friday`, which `Student` references. This allows `Friday` to only require one `Tag` object per unique tag, instead of each `Student` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"darrtzj"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"700\" /\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"jorrdansoh"},"content":"**API** : [`Storage.java`](https://github.com/AY2223S1-CS2103T-W15-4/tp/blob/master/src/main/java/friday/storage/Storage.java)","lastModifiedDate":"2022-11-01"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"darrtzj"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"650\" /\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"jorrdansoh"},"content":"* can save both FRIDAY data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2022-10-09"},{"lineNumber":144,"author":{"gitId":"Yuvaraj0702"},"content":"* inherits from both `FridayStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2022-10-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"Yuvaraj0702"},"content":"Classes used by multiple components are in the `friday.commons` package.","lastModifiedDate":"2022-11-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"jorrdansoh"},"content":"### Sort feature","lastModifiedDate":"2022-10-20"},{"lineNumber":158,"author":{"gitId":"jorrdansoh"},"content":"#### Rationale","lastModifiedDate":"2022-11-01"},{"lineNumber":159,"author":{"gitId":"jorrdansoh"},"content":"Students in FRIDAY have details such as name, Telegram handle, consultation and Mastery Check dates, and grades.","lastModifiedDate":"2022-11-05"},{"lineNumber":160,"author":{"gitId":"jorrdansoh"},"content":"This feature enables the sorting of students using the aforementioned details as criteria. With many students to keep track of, we","lastModifiedDate":"2022-11-05"},{"lineNumber":161,"author":{"gitId":"jorrdansoh"},"content":"decided to add this feature to allow users to quickly organize their students in different ways.","lastModifiedDate":"2022-11-01"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":163,"author":{"gitId":"jorrdansoh"},"content":"#### Implementation","lastModifiedDate":"2022-10-20"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":165,"author":{"gitId":"jorrdansoh"},"content":"The current implementation of the sort feature allows users to sort all students based on the given criteria, in ascending","lastModifiedDate":"2022-11-01"},{"lineNumber":166,"author":{"gitId":"jorrdansoh"},"content":"or descending order. The classes corresponding to the current list of criteria are: `Name`, `TelegramHandle`, `Consultation`,","lastModifiedDate":"2022-11-01"},{"lineNumber":167,"author":{"gitId":"jorrdansoh"},"content":"`MasteryCheck`, and `Grade`.","lastModifiedDate":"2022-11-01"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":169,"author":{"gitId":"jorrdansoh"},"content":"In this section, we will use the following Activity Diagram to outline the process when the `sort` command is executed.","lastModifiedDate":"2022-11-01"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":171,"author":{"gitId":"jorrdansoh"},"content":"![Sort Command Activity Diagram](images/SortCommandActivityDiagram.png)","lastModifiedDate":"2022-11-01"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":173,"author":{"gitId":"jorrdansoh"},"content":"The `sort` command will be executed by `SortCommand`. Before that, `SortCommandParser` uses instances of `Prefix` and","lastModifiedDate":"2022-11-01"},{"lineNumber":174,"author":{"gitId":"jorrdansoh"},"content":"`Order` in `CliSyntax` to parse the user input and decide what comparator is passed to `SortCommand`. The sorted list","lastModifiedDate":"2022-11-01"},{"lineNumber":175,"author":{"gitId":"jorrdansoh"},"content":"is stored as `sortedStudents` in `ModelManager`, and is updated every time `SortCommand` is run.","lastModifiedDate":"2022-11-01"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":177,"author":{"gitId":"jorrdansoh"},"content":"To assist with the sorting, classes `Name`, `TelegramHandle`, `Consultation`, and `MasteryCheck` implement the `Comparable`","lastModifiedDate":"2022-10-27"},{"lineNumber":178,"author":{"gitId":"jorrdansoh"},"content":"interface, where the natural ordering of `String` and `LocalDate` are used to implement the `compareTo` method. The `Grade`","lastModifiedDate":"2022-10-27"},{"lineNumber":179,"author":{"gitId":"jorrdansoh"},"content":"class does not implement the interface as its attributes are `String`s.","lastModifiedDate":"2022-11-01"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":181,"author":{"gitId":"jorrdansoh"},"content":"Given below is an example usage scenario and how the sort mechanism behaves at each step.","lastModifiedDate":"2022-10-20"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":183,"author":{"gitId":"jorrdansoh"},"content":"1. FRIDAY initialises an `ObservableList\u003cStudent\u003e` named `students` and","lastModifiedDate":"2022-11-01"},{"lineNumber":184,"author":{"gitId":"jorrdansoh"},"content":"   a `SortedList\u003cStudent\u003e` named `sortedStudents` upon launch.","lastModifiedDate":"2022-11-01"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":186,"author":{"gitId":"jorrdansoh"},"content":"2. The user executes `sort n/a` command to sort the students by name in ascending order.","lastModifiedDate":"2022-11-01"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":188,"author":{"gitId":"jorrdansoh"},"content":"3. The user input is passed to","lastModifiedDate":"2022-11-01"},{"lineNumber":189,"author":{"gitId":"jorrdansoh"},"content":"   `LogicManager`, which then calls the `SortCommandParser#parse` method to parse the argument `n/a`.","lastModifiedDate":"2022-11-01"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":191,"author":{"gitId":"jorrdansoh"},"content":"4. The `SortCommandParser` checks that the criteria and order are valid, and creates a `SortCommand` with a `Comparator`","lastModifiedDate":"2022-11-01"},{"lineNumber":192,"author":{"gitId":"jorrdansoh"},"content":"   that orders the student names alphabetically.","lastModifiedDate":"2022-11-01"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":194,"author":{"gitId":"jorrdansoh"},"content":"5. The `LogicManager` calls the `SortCommand#execute` method, which in turn calls  `Model#updateSortedStudentList`","lastModifiedDate":"2022-11-01"},{"lineNumber":195,"author":{"gitId":"jorrdansoh"},"content":"   to update `sortedStudents` with the given `Comparator`.","lastModifiedDate":"2022-11-01"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":197,"author":{"gitId":"jorrdansoh"},"content":"6. The list `students` is set to `sortedStudents`, after which  `CommandResult` is returned by the `SortCommand` to signal success.","lastModifiedDate":"2022-11-05"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":199,"author":{"gitId":"jorrdansoh"},"content":"7. The `StudentListPanel#setList` method is called to refresh the","lastModifiedDate":"2022-11-05"},{"lineNumber":200,"author":{"gitId":"jorrdansoh"},"content":"   `ListView` in the UI with the new `students` list, and the success message from `CommandResult` is displayed.","lastModifiedDate":"2022-11-05"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":202,"author":{"gitId":"jorrdansoh"},"content":"The following Sequence Diagram summarises the aforementioned steps.","lastModifiedDate":"2022-11-01"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":204,"author":{"gitId":"jorrdansoh"},"content":"![Sort Command Sequence Diagram](images/SortCommandSequenceDiagram.png)","lastModifiedDate":"2022-11-01"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":206,"author":{"gitId":"jorrdansoh"},"content":"#### Design considerations","lastModifiedDate":"2022-11-05"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":208,"author":{"gitId":"jorrdansoh"},"content":"**Aspect: How many criteria should the `sort` command accept**","lastModifiedDate":"2022-11-05"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":210,"author":{"gitId":"jorrdansoh"},"content":"|                                                                                 | **Pros**                                                                                     | **Cons**                                                                                                   |","lastModifiedDate":"2022-11-05"},{"lineNumber":211,"author":{"gitId":"HowSuen"},"content":"|---------------------------------------------------------------------------------|----------------------------------------------------------------------------------------------|------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-11-07"},{"lineNumber":212,"author":{"gitId":"jorrdansoh"},"content":"| **Option 1 (current choice)** \u003cbr\u003e Accept only one criterion                    | Easier to implement and also clearer for the user                                            | Unable to further sort students with a secondary criteria should the first criteria of some students match |","lastModifiedDate":"2022-11-05"},{"lineNumber":213,"author":{"gitId":"jorrdansoh"},"content":"| **Option 2** \u003cbr\u003e Accept multiple criteria and sort in the order they are given | More precise sorting when many students have matching details, e.g. same Mastery Check dates | Sorting becomes confusing for the user and difficult to implement if many criteria are given               |","lastModifiedDate":"2022-11-05"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"jorrdansoh"},"content":"### Alias feature","lastModifiedDate":"2022-10-27"},{"lineNumber":216,"author":{"gitId":"darrtzj"},"content":"#### Rationale","lastModifiedDate":"2022-11-07"},{"lineNumber":217,"author":{"gitId":"darrtzj"},"content":"Some advanced users might want to customise the command words.","lastModifiedDate":"2022-11-07"},{"lineNumber":218,"author":{"gitId":"darrtzj"},"content":"This feature will allow them to do so, enabling these users to be more efficient in using FRIDAY.","lastModifiedDate":"2022-11-07"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":220,"author":{"gitId":"jorrdansoh"},"content":"#### Implementation","lastModifiedDate":"2022-10-27"},{"lineNumber":221,"author":{"gitId":"darrtzj"},"content":"The current implementation of the alias feature will allow users to add a non-empty one word alias for a [default command](#glossary).","lastModifiedDate":"2022-11-07"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":223,"author":{"gitId":"darrtzj"},"content":"The following activity diagram will outline the process when the `alias` command is executed.","lastModifiedDate":"2022-11-07"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":225,"author":{"gitId":"darrtzj"},"content":"![Alias Command Activity Diagram](images/AliasCommandActivityDiagram.png)","lastModifiedDate":"2022-11-06"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":227,"author":{"gitId":"darrtzj"},"content":"The alias command will be executed by `AliasCommand`. Aliases added will be stored in a `AliasMap`, while","lastModifiedDate":"2022-11-07"},{"lineNumber":228,"author":{"gitId":"darrtzj"},"content":"default command names (e.g. add, delete) will be stored in a constant `LIST_RESERVED_KEYWORD` in the `ReservedKeyword` class.","lastModifiedDate":"2022-11-07"},{"lineNumber":229,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":230,"author":{"gitId":"darrtzj"},"content":"Given below is an example usage scenario and how the alias mechanism behaves at each step.","lastModifiedDate":"2022-10-19"},{"lineNumber":231,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":232,"author":{"gitId":"darrtzj"},"content":"1. The user launches the application for the first time. FRIDAY will initialise a `Friday`","lastModifiedDate":"2022-11-03"},{"lineNumber":233,"author":{"gitId":"darrtzj"},"content":"with an empty `AliasMap`.","lastModifiedDate":"2022-11-03"},{"lineNumber":234,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":235,"author":{"gitId":"darrtzj"},"content":"2. The user executes `alias a/ls k/list` command to add an alias `ls` for the default command `list`. `FridayParser` will parse","lastModifiedDate":"2022-11-07"},{"lineNumber":236,"author":{"gitId":"darrtzj"},"content":"`alias` and create a new `AliasCommandParser`.`AliasCommandParser` will parse `a/ls k/list` and create an `AlliasCommand` with `Alias(\"ls\")`","lastModifiedDate":"2022-11-03"},{"lineNumber":237,"author":{"gitId":"darrtzj"},"content":"and a `ReservedKeyword(\"list\")`. When executing the `AliasCommand`, the command will check that `list` is in the `LIST_RESERVED_KEYWORD`,`ls` is not in the","lastModifiedDate":"2022-11-03"},{"lineNumber":238,"author":{"gitId":"darrtzj"},"content":"`AliasMap` and `ls` is a valid alias. After all the conditions are fulfilled, `Model#addAlias(Alias(\"ls\"), ReservedKeyword(\"list\"))` will be called to add","lastModifiedDate":"2022-11-07"},{"lineNumber":239,"author":{"gitId":"darrtzj"},"content":"this alias-keyword mapping into `AliasMap`.","lastModifiedDate":"2022-11-03"},{"lineNumber":240,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":241,"author":{"gitId":"darrtzj"},"content":"3. The user executes `ls` using the alias of the `list` command. `Model#getKeyword(\"ls\")` will check `AliasMap` in `Model`","lastModifiedDate":"2022-11-03"},{"lineNumber":242,"author":{"gitId":"darrtzj"},"content":"for an alias-keyword mapping. As there is a mapping of `ls` to `list`, `Model#getKeyword(\"ls\")` will return `list`.","lastModifiedDate":"2022-11-06"},{"lineNumber":243,"author":{"gitId":"darrtzj"},"content":"`list` will then be assigned to `commandWord` in `FridayParser`. `commandWord` will then be used to get the command to be executed.","lastModifiedDate":"2022-11-03"},{"lineNumber":244,"author":{"gitId":"darrtzj"},"content":"`ListCommand` will then be executed.","lastModifiedDate":"2022-11-07"},{"lineNumber":245,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":246,"author":{"gitId":"darrtzj"},"content":"The following sequence diagram shows how the alias `ls` is used to execute the default command `list`.","lastModifiedDate":"2022-11-07"},{"lineNumber":247,"author":{"gitId":"darrtzj"},"content":"![Using Alias Sequence Diagram](images/UsingAliasSequenceDiagram.png)","lastModifiedDate":"2022-11-06"},{"lineNumber":248,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":249,"author":{"gitId":"jorrdansoh"},"content":"#### Design considerations","lastModifiedDate":"2022-11-05"},{"lineNumber":250,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":251,"author":{"gitId":"darrtzj"},"content":"**Aspect: How `Alias` is stored in `AliasMap`:**","lastModifiedDate":"2022-11-06"},{"lineNumber":252,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":253,"author":{"gitId":"darrtzj"},"content":"|                                                                                          | **Pros**                       | **Cons**                                                                                                                                                                                     |","lastModifiedDate":"2022-11-06"},{"lineNumber":254,"author":{"gitId":"HowSuen"},"content":"|------------------------------------------------------------------------------------------|--------------------------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-11-07"},{"lineNumber":255,"author":{"gitId":"darrtzj"},"content":"| **Option 1 (current choice)** \u003cbr\u003e Stored as an Alias-ReservedKeyword mapping in a Map   | Fast with O(1) time complexity | At high capacity, there might be complications due to collision in Map                                                                                                                       |","lastModifiedDate":"2022-11-06"},{"lineNumber":256,"author":{"gitId":"darrtzj"},"content":"| **Option 2** \u003cbr\u003e Alias and ReservedKeyword stored within an association class in a List | Can store more Aliases         | To get an Alias, iteration through the whole list must be done causing the time complexity to be at O(Number of Aliases) and this might cause performance issues when there are many aliases |","lastModifiedDate":"2022-11-06"},{"lineNumber":257,"author":{"gitId":"darrtzj"},"content":"_","lastModifiedDate":"2022-11-06"},{"lineNumber":258,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":259,"author":{"gitId":"HowSuen"},"content":"### Grade Feature","lastModifiedDate":"2022-10-25"},{"lineNumber":260,"author":{"gitId":"HowSuen"},"content":"#### Rationale","lastModifiedDate":"2022-11-07"},{"lineNumber":261,"author":{"gitId":"HowSuen"},"content":"FRIDAY allows the user to record their students\u0027 grades for assessments and examinations in CS1101S. There are 5","lastModifiedDate":"2022-11-01"},{"lineNumber":262,"author":{"gitId":"HowSuen"},"content":"assessments in CS1101S, namely Reading Assessment 1 (RA1), Reading Assessment 2 (RA2), Practical Assessment, Midterm","lastModifiedDate":"2022-11-01"},{"lineNumber":263,"author":{"gitId":"HowSuen"},"content":"exam, and the Final exam. Each student in FRIDAY will have a list of their grades for the 5 assessments, showing the","lastModifiedDate":"2022-11-01"},{"lineNumber":264,"author":{"gitId":"HowSuen"},"content":"name of the assessment and the student\u0027s score for the assessment. Users are able to view and edit the individual","lastModifiedDate":"2022-11-01"},{"lineNumber":265,"author":{"gitId":"HowSuen"},"content":"students\u0027 grades for the assessments.","lastModifiedDate":"2022-11-01"},{"lineNumber":266,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":267,"author":{"gitId":"HowSuen"},"content":"#### Implementation","lastModifiedDate":"2022-10-25"},{"lineNumber":268,"author":{"gitId":"HowSuen"},"content":"The `grade` command is executed by `GradeCommand`. In CS1101S, the 5 main examinations are Reading Assessment 1, Reading Assessment 2, Practical Assessment, Midterm exam, and Final exam, which are denoted by \"ra1\", \"ra2\", \"pa\", \"mt\", and \"ft\" respectively.","lastModifiedDate":"2022-10-25"},{"lineNumber":269,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":270,"author":{"gitId":"HowSuen"},"content":"For each student, there are 5 grades, each with the result scored by the student, in percentages between 0% and 100% inclusive, and up to 2 decimal places, and the name of the examination it is associated with.","lastModifiedDate":"2022-11-06"},{"lineNumber":271,"author":{"gitId":"HowSuen"},"content":"The grades are then stored in a `GradesList` which is unique for every student and has a fixed length of 5 for every student managed by the user.","lastModifiedDate":"2022-10-25"},{"lineNumber":272,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":273,"author":{"gitId":"HowSuen"},"content":"![Grade Command Activity Diagram](images/GradeCommandActivityDiagram.png)","lastModifiedDate":"2022-11-06"},{"lineNumber":274,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":275,"author":{"gitId":"HowSuen"},"content":"The 5 grades are stored as `Grade` objects in a unique `GradesList` for each student. `GradesList` uses a `HashMap` for","lastModifiedDate":"2022-11-06"},{"lineNumber":276,"author":{"gitId":"HowSuen"},"content":"the data structure in storing the `Grade` objects as it allows for fast access of the individual grades. It is also","lastModifiedDate":"2022-11-06"},{"lineNumber":277,"author":{"gitId":"HowSuen"},"content":"useful for potential future implementation where there may be more grades in the module, hence allowing FRIDAY to be","lastModifiedDate":"2022-11-06"},{"lineNumber":278,"author":{"gitId":"HowSuen"},"content":"expandable and adaptable for such possible scenarios. `ArrayList` is only utilised when the order of the grades is","lastModifiedDate":"2022-11-06"},{"lineNumber":279,"author":{"gitId":"HowSuen"},"content":"necessary, such as when displaying the grades in the GUI and for storage purposes.","lastModifiedDate":"2022-11-06"},{"lineNumber":280,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":281,"author":{"gitId":"HowSuen"},"content":"Given below is an example usage scenario and how the grading mechanism behaves at each step.","lastModifiedDate":"2022-10-25"},{"lineNumber":282,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":283,"author":{"gitId":"jorrdansoh"},"content":"1. The user executes the `grade 5 ra1/90 pa/69.90` command to edit the grades of Reading Assessment 1 and","lastModifiedDate":"2022-11-01"},{"lineNumber":284,"author":{"gitId":"HowSuen"},"content":"Practical Assessment for the 5th student in FRIDAY. `GradeCommandParser` checks that the command is valid, and searches for the specific scores from the user\u0027s input using the `Prefix` of the examinations. `GradeCommandParser` then creates a new `EditGradeDescriptor` which is then used to create the new `GradeCommand`.","lastModifiedDate":"2022-10-25"},{"lineNumber":285,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":286,"author":{"gitId":"jorrdansoh"},"content":"2. The `GradeCommand` will access the `GradesList` of the specified student and the individual grades specified by the user. The `GradesList` is updated, where Reading Assessment 1 and Practical Assessment examinations are updated with the new scores, and the other examinations have the same scores as before.","lastModifiedDate":"2022-11-01"},{"lineNumber":287,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":288,"author":{"gitId":"HowSuen"},"content":"The following Sequence Diagram summarises the aforementioned steps.","lastModifiedDate":"2022-11-06"},{"lineNumber":289,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":290,"author":{"gitId":"jorrdansoh"},"content":"![Grade Command Sequence Diagram](images/GradeSequenceDiagram.png)","lastModifiedDate":"2022-11-07"},{"lineNumber":291,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":292,"author":{"gitId":"jorrdansoh"},"content":"#### Design considerations","lastModifiedDate":"2022-11-05"},{"lineNumber":293,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":294,"author":{"gitId":"HowSuen"},"content":"**Aspect: Should we allow users to determine the examinations**","lastModifiedDate":"2022-11-06"},{"lineNumber":295,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":296,"author":{"gitId":"HowSuen"},"content":"|                                                                                                 | **Pros**                                                                                                                           | **Cons**                                                                                                                                                                                      |","lastModifiedDate":"2022-11-07"},{"lineNumber":297,"author":{"gitId":"HowSuen"},"content":"|-------------------------------------------------------------------------------------------------|------------------------------------------------------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-11-07"},{"lineNumber":298,"author":{"gitId":"HowSuen"},"content":"| **Option 1 (current choice)** \u003cbr\u003e Fix the examinations in the list of grades for every student | Standardised for every student, without the need to check, create or delete examinations for every student, and easy to implement. | Less freedom for users. Unaccounted for unforeseen circumstances (e.g. There is a change in the assessments for the CS1101S module).                                                          |","lastModifiedDate":"2022-11-07"},{"lineNumber":299,"author":{"gitId":"HowSuen"},"content":"| **Option 2** \u003cbr\u003e Allow users to create and delete their own examinations                       | Provides freedom for users and flexibility for changes in the grading system of the module.                                        | Not standardised for every student, and more prone to user error, as each examination will thus need to create new unique prefixes and identity to know which examination it is referring to. |","lastModifiedDate":"2022-11-07"},{"lineNumber":300,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":301,"author":{"gitId":"HowSuen"},"content":"**Aspect: Should we allow users to set the scores of each grade in their own way (e.g. \"99%\", \"A\", \"65/70\", etc.)**","lastModifiedDate":"2022-11-06"},{"lineNumber":302,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":303,"author":{"gitId":"HowSuen"},"content":"|                                                                                             | **Pros**                                                                                                                                         | **Cons**                                                                                                                                                                                                                                   |","lastModifiedDate":"2022-11-07"},{"lineNumber":304,"author":{"gitId":"HowSuen"},"content":"|---------------------------------------------------------------------------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-11-07"},{"lineNumber":305,"author":{"gitId":"HowSuen"},"content":"| **Option 1 (current choice)** \u003cbr\u003e Standardise scoring of each grade in terms of percentage | Standardised and neat for every assessment and for every student, applicable for the 5 assessments in the CS1101S module, and easy to implement. | Less flexible for assessments whereby percentage scores are not applicable. (e.g. Pass/Fail assessments, alphabetical grading, etc.), and the possible need to manually calculate the percentage.                                          |","lastModifiedDate":"2022-11-07"},{"lineNumber":306,"author":{"gitId":"HowSuen"},"content":"| **Option 2** \u003cbr\u003e Users can input the scores in any String they desire                      | More flexibility and freedom for user                                                                                                            | Very difficult to check for valid scores due to large number of possibility, not standardised for every student and grade, less able to compare the students\u0027 strengths and weaknesses in certain assessments, and difficult to implement. |","lastModifiedDate":"2022-11-07"},{"lineNumber":307,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":308,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":309,"author":{"gitId":"Yuvaraj0702"},"content":"### Find feature","lastModifiedDate":"2022-10-25"},{"lineNumber":310,"author":{"gitId":"Yuvaraj0702"},"content":"FRIDAY allows the user to search through all the fields entered for any student and outputs a modified list of students that match the criteria. This list can then be modified and the changes will be reflected in the storage used.","lastModifiedDate":"2022-11-06"},{"lineNumber":311,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":312,"author":{"gitId":"Yuvaraj0702"},"content":"#### Implementation","lastModifiedDate":"2022-10-25"},{"lineNumber":313,"author":{"gitId":"Yuvaraj0702"},"content":"The find command is executed similar to all other commands. It goes through the parser and is interpreted using the","lastModifiedDate":"2022-10-20"},{"lineNumber":314,"author":{"gitId":"Yuvaraj0702"},"content":"logic established. However, it is unique in the sense that it will look through all the possible fields and data","lastModifiedDate":"2022-10-20"},{"lineNumber":315,"author":{"gitId":"Yuvaraj0702"},"content":"and return matches.","lastModifiedDate":"2022-10-20"},{"lineNumber":316,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":317,"author":{"gitId":"Yuvaraj0702"},"content":"Below is the activity diagram depicting how the find function is implemented","lastModifiedDate":"2022-11-06"},{"lineNumber":318,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":319,"author":{"gitId":"Yuvaraj0702"},"content":"![Find command activity diagram](images/FindCommandActivityDiagram.png)","lastModifiedDate":"2022-11-06"},{"lineNumber":320,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":321,"author":{"gitId":"Yuvaraj0702"},"content":"The `find` command will be executed by `FindCommand`. Before that, `FindCommandParser` parses the user input and decide what predicate is passed to `FindCommand`. The filtered list","lastModifiedDate":"2022-11-06"},{"lineNumber":322,"author":{"gitId":"Yuvaraj0702"},"content":"is stored as `filteredStudents` in `ModelManager`, and is updated every time `FindCommand` is run.","lastModifiedDate":"2022-11-06"},{"lineNumber":323,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":324,"author":{"gitId":"Yuvaraj0702"},"content":"Given below is an example usage scenario and how the sort mechanism behaves at each step.","lastModifiedDate":"2022-11-06"},{"lineNumber":325,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":326,"author":{"gitId":"Yuvaraj0702"},"content":"1. FRIDAY initialises an `ObservableList\u003cStudent\u003e` named `students` and","lastModifiedDate":"2022-11-06"},{"lineNumber":327,"author":{"gitId":"Yuvaraj0702"},"content":"   a `FilteredList\u003cStudent\u003e` named `filteredStudents` upon launch.","lastModifiedDate":"2022-11-06"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":329,"author":{"gitId":"Yuvaraj0702"},"content":"2. The user executes `find keyword` command to sort the students by name in ascending order.","lastModifiedDate":"2022-11-06"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":331,"author":{"gitId":"Yuvaraj0702"},"content":"3. The user input is passed to","lastModifiedDate":"2022-11-06"},{"lineNumber":332,"author":{"gitId":"Yuvaraj0702"},"content":"   `LogicManager`, which then calls the `FindCommandParser#parse` method to parse the argument `keyword`.","lastModifiedDate":"2022-11-06"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":334,"author":{"gitId":"Yuvaraj0702"},"content":"4. The `FindCommandParser` checks that the criteria is valid, and creates a `FindCommand` with a `Predicate`","lastModifiedDate":"2022-11-06"},{"lineNumber":335,"author":{"gitId":"Yuvaraj0702"},"content":"   that is used to filter the students list.","lastModifiedDate":"2022-11-06"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":337,"author":{"gitId":"Yuvaraj0702"},"content":"5. The `LogicManager` calls the `FindCommand#execute` method, which in turn calls  `Model#updateFilteredStudentList`","lastModifiedDate":"2022-11-06"},{"lineNumber":338,"author":{"gitId":"Yuvaraj0702"},"content":"   to update `sortedStudents` with the given `Predicate`.","lastModifiedDate":"2022-11-06"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":340,"author":{"gitId":"Yuvaraj0702"},"content":"6. The list `students` is set to `filteredStudents`, and the `StudentListPanel#setList` method is called to refresh the","lastModifiedDate":"2022-11-06"},{"lineNumber":341,"author":{"gitId":"Yuvaraj0702"},"content":"   `ListView` in the UI with the new `students` list.","lastModifiedDate":"2022-11-06"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":343,"author":{"gitId":"Yuvaraj0702"},"content":"The following sequence diagram summarizes the aforementioned steps.","lastModifiedDate":"2022-11-06"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":345,"author":{"gitId":"Yuvaraj0702"},"content":"![Find command sequence diagram](images/FindCommandSequenceDiagram.png)","lastModifiedDate":"2022-11-07"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":347,"author":{"gitId":"Yuvaraj0702"},"content":"#### Design considerations","lastModifiedDate":"2022-11-06"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":349,"author":{"gitId":"Yuvaraj0702"},"content":"**Aspect: Should we allow users to find block keywords :**","lastModifiedDate":"2022-11-06"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":351,"author":{"gitId":"kaij77"},"content":"|                                                                          | **Pros**                                                                   | **Cons**                                                                        |","lastModifiedDate":"2022-11-07"},{"lineNumber":352,"author":{"gitId":"HowSuen"},"content":"|--------------------------------------------------------------------------|----------------------------------------------------------------------------|---------------------------------------------------------------------------------|","lastModifiedDate":"2022-11-07"},{"lineNumber":353,"author":{"gitId":"kaij77"},"content":"| **Option 1 (current choice)** \u003cbr\u003e Allow user to find by single keywords | Provides more search results and the expected student is part of the list. | The expected student may not appear at the top of the list due to lexicography. |","lastModifiedDate":"2022-11-07"},{"lineNumber":354,"author":{"gitId":"kaij77"},"content":"| **Option 2** \u003cbr\u003e Allow users to find by block keywords                  | Possibly more accurate searches.                                           | Higher possibly that search is unsuccessful due to error in keywords.           |","lastModifiedDate":"2022-11-07"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":356,"author":{"gitId":"kaij77"},"content":"### Mark feature","lastModifiedDate":"2022-11-07"},{"lineNumber":357,"author":{"gitId":"kaij77"},"content":"#### Rationale","lastModifiedDate":"2022-11-07"},{"lineNumber":358,"author":{"gitId":"kaij77"},"content":"FRIDAY allows users to mark the Mastery Checks of certain students as passed. This would help the user keep track of which students have already completed and passed their Mastery Checks.","lastModifiedDate":"2022-11-07"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":360,"author":{"gitId":"kaij77"},"content":"#### Implementation","lastModifiedDate":"2022-11-07"},{"lineNumber":361,"author":{"gitId":"kaij77"},"content":"The mark command is implemented by a `MarkMasteryCheckCommand`. The `MasteryCheck` of a student contains a boolean `isPassed`, which is set to false by default for sample students and when a student is added to the list.","lastModifiedDate":"2022-11-07"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":363,"author":{"gitId":"kaij77"},"content":"Below is an activity diagram depicting the implementation of the mark command.","lastModifiedDate":"2022-11-07"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":365,"author":{"gitId":"kaij77"},"content":"![mark command activity diagram](images/MarkCommandActivityDiagram.png)","lastModifiedDate":"2022-11-07"},{"lineNumber":366,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":367,"author":{"gitId":"kaij77"},"content":"The `MarkMasteryCheckCommand` checks for the following conditions to determine if the student\u0027s Mastery Check can be marked as passed:","lastModifiedDate":"2022-11-07"},{"lineNumber":368,"author":{"gitId":"kaij77"},"content":"1. The given student\u0027s Mastery Check is not empty.","lastModifiedDate":"2022-11-07"},{"lineNumber":369,"author":{"gitId":"kaij77"},"content":"2. The given student\u0027s Mastery Check has not already been marked as passed.","lastModifiedDate":"2022-11-07"},{"lineNumber":370,"author":{"gitId":"kaij77"},"content":"3. The given student\u0027s Mastery Check date is not beyond the current date.","lastModifiedDate":"2022-11-07"},{"lineNumber":371,"author":{"gitId":"kaij77"},"content":"   * e.g. A student with their Mastery Check scheduled for 2030-09-01 cannot be marked as passed if the current date is 2022-11-07.","lastModifiedDate":"2022-11-07"},{"lineNumber":372,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":373,"author":{"gitId":"kaij77"},"content":"Only if all 3 of these conditions are met will the `MarkMasteryCheckCommand` set `isPassed` of the given student\u0027s Mastery Check to `true`, hence marking it as passed.","lastModifiedDate":"2022-11-07"},{"lineNumber":374,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":375,"author":{"gitId":"kaij77"},"content":"Given below is an example usage scenario and how the marking mechanism behaves at each stage.","lastModifiedDate":"2022-11-07"},{"lineNumber":376,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":377,"author":{"gitId":"kaij77"},"content":"1. The user launches the application for the first time. FRIDAY will open with a list populated with sample students whose Mastery Checks have `isPassed` set to `false` by default.","lastModifiedDate":"2022-11-07"},{"lineNumber":378,"author":{"gitId":"kaij77"},"content":"2. The user executes the `mark 1` command to mark the Mastery Check of the first student as passed. `MarkMasteryCheckCommandParser` checks that the command is valid. If so, it creates a new `MarkMasteryCheckCommand` with 1 as the `index`.","lastModifiedDate":"2022-11-07"},{"lineNumber":379,"author":{"gitId":"kaij77"},"content":"3. The `MarkMasteryCheckCommand` checks student 1\u0027s Mastery Check for the 3 conditions listed above. Since student 1\u0027s Mastery Check meets all 3 of these conditions, the `MarkMasteryCheckCommand` sets the value of the student\u0027s Mastery Check\u0027s `isPassed` to `true`.","lastModifiedDate":"2022-11-07"},{"lineNumber":380,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":381,"author":{"gitId":"kaij77"},"content":"The following Sequence Diagram summarises the aforementioned steps.","lastModifiedDate":"2022-11-07"},{"lineNumber":382,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":383,"author":{"gitId":"kaij77"},"content":"![Mark command sequence diagram](images/MarkCommandSequenceDiagram.png)","lastModifiedDate":"2022-11-07"},{"lineNumber":384,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":385,"author":{"gitId":"kaij77"},"content":"#### Design considerations","lastModifiedDate":"2022-11-07"},{"lineNumber":386,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":387,"author":{"gitId":"kaij77"},"content":"**Aspect: Should we allow users to mark empty Mastery Checks as passed**","lastModifiedDate":"2022-11-07"},{"lineNumber":388,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":389,"author":{"gitId":"kaij77"},"content":"|                                                                                 | **Pros**                                                                                                           | **Cons**                                                                                                                                                                                                                |","lastModifiedDate":"2022-11-07"},{"lineNumber":390,"author":{"gitId":"HowSuen"},"content":"|---------------------------------------------------------------------------------|--------------------------------------------------------------------------------------------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-11-07"},{"lineNumber":391,"author":{"gitId":"kaij77"},"content":"| **Option 1 (current choice)** \u003cbr\u003e Do not allow marking of empty Mastery Checks | More intuitive and makes more sense                                                                                | May be useful in certain cases                                                                                                                                                                                          |","lastModifiedDate":"2022-11-07"},{"lineNumber":392,"author":{"gitId":"kaij77"},"content":"| **Option 2** \u003cbr\u003e Allow marking of empty Mastery Checks                         | Could be useful in certain cases, for example when a student is exempted from having to complete the Mastery Check | These cases are rare. Also does not make sense to allow this as there is an empty Mastery Check means that the student has not scheduled or completed any Mastery Check. Hence, there is nothing to be marked as passed |","lastModifiedDate":"2022-11-07"},{"lineNumber":393,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":394,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":395,"author":{"gitId":"kaij77"},"content":"### Unmark feature","lastModifiedDate":"2022-11-07"},{"lineNumber":396,"author":{"gitId":"kaij77"},"content":"#### Rationale","lastModifiedDate":"2022-11-07"},{"lineNumber":397,"author":{"gitId":"kaij77"},"content":"FRIDAY allows users to unmark the Mastery Checks of certain students as passed. This would be useful in cases where the user accidentally marks the Mastery Check of a student who has not passed their Mastery Check.","lastModifiedDate":"2022-11-07"},{"lineNumber":398,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":399,"author":{"gitId":"kaij77"},"content":"#### Implementation","lastModifiedDate":"2022-11-07"},{"lineNumber":400,"author":{"gitId":"kaij77"},"content":"The unmark command is implemented by an `UnmarkMasteryCheckCommand`. As mentioned above the `MasteryCheck` of a student contains a boolean `isPassed`, which is set to false by default but can be changed to `true` by a `MarkMasteryCheckCommand`.","lastModifiedDate":"2022-11-07"},{"lineNumber":401,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":402,"author":{"gitId":"kaij77"},"content":"Below is an activity diagram depicting how the unmark command is implemented.","lastModifiedDate":"2022-11-07"},{"lineNumber":403,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":404,"author":{"gitId":"kaij77"},"content":"![Unmark command activity diagram](images/UnmarkCommandActivityDiagram.png)","lastModifiedDate":"2022-11-07"},{"lineNumber":405,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":406,"author":{"gitId":"kaij77"},"content":"The `UnmarkMasteryCheckCommand` checks for the following conditions to determine if the student\u0027s Mastery Check can be unmarked:","lastModifiedDate":"2022-11-07"},{"lineNumber":407,"author":{"gitId":"kaij77"},"content":"1. The given student\u0027s Mastery Check is not empty.","lastModifiedDate":"2022-11-07"},{"lineNumber":408,"author":{"gitId":"kaij77"},"content":"2. The given student\u0027s Mastery Check has already been marked as passed.","lastModifiedDate":"2022-11-07"},{"lineNumber":409,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":410,"author":{"gitId":"kaij77"},"content":"Only if both of these conditions are met will the `UnmarkMasteryCheckCommand` set `isPassed` of the given student\u0027s Mastery Check to `false`, hence unmarking it as passed.","lastModifiedDate":"2022-11-07"},{"lineNumber":411,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":412,"author":{"gitId":"kaij77"},"content":"Given below is an example usage scenario and how the marking mechanism behaves at each stage.","lastModifiedDate":"2022-11-07"},{"lineNumber":413,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":414,"author":{"gitId":"kaij77"},"content":"1. The user launches the application for the first time. FRIDAY will open with a list populated with sample students whose Mastery Checks have `isPassed` set to `false` by default.","lastModifiedDate":"2022-11-07"},{"lineNumber":415,"author":{"gitId":"kaij77"},"content":"2. The user executes the `mark 1` command to mark the Mastery Check of the first student as passed.","lastModifiedDate":"2022-11-07"},{"lineNumber":416,"author":{"gitId":"kaij77"},"content":"3. The user realises this was a mistake, as they actually wanted to mark the Mastery Check of another student as passed.","lastModifiedDate":"2022-11-07"},{"lineNumber":417,"author":{"gitId":"kaij77"},"content":"4. The user executes the `unmark 1` command to unmark the Mastery Check of the first student. `UnmarkMasteryCheckCommandParser` checks that the command is valid. If so, it creates a new `UnmarkMasteryCheckCommand` with 1 as the `index`.","lastModifiedDate":"2022-11-07"},{"lineNumber":418,"author":{"gitId":"kaij77"},"content":"5. The `UnmarkMasteryCheckCommand` checks student 1\u0027s Mastery Check for the 2 conditions listed above. Since student 1\u0027s Mastery Check meets both of these conditions, the `UnmarkMasteryCheckCommand` sets the value of the student\u0027s Mastery Check\u0027s `isPassed` to `false`.","lastModifiedDate":"2022-11-07"},{"lineNumber":419,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":420,"author":{"gitId":"kaij77"},"content":"The following Sequence Diagram summarises steps 4 to 5.","lastModifiedDate":"2022-11-07"},{"lineNumber":421,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":422,"author":{"gitId":"kaij77"},"content":"![Unmark command sequence diagram](images/UnmarkCommandSequenceDiagram.png)","lastModifiedDate":"2022-11-07"},{"lineNumber":423,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":424,"author":{"gitId":"kaij77"},"content":"#### Design considerations","lastModifiedDate":"2022-11-07"},{"lineNumber":425,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":426,"author":{"gitId":"kaij77"},"content":"**Aspect: Should we allow users to unmark empty Mastery Checks as passed**","lastModifiedDate":"2022-11-07"},{"lineNumber":427,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":428,"author":{"gitId":"kaij77"},"content":"|                                                                                   | **Pros**                                                                                                                       | **Cons**                                                                                                                                                             |","lastModifiedDate":"2022-11-07"},{"lineNumber":429,"author":{"gitId":"HowSuen"},"content":"|-----------------------------------------------------------------------------------|--------------------------------------------------------------------------------------------------------------------------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-11-07"},{"lineNumber":430,"author":{"gitId":"kaij77"},"content":"| **Option 1 (current choice)** \u003cbr\u003e Do not allow unmarking of empty Mastery Checks | More intuitive and makes more sense                                                                                            | May be useful in certain cases                                                                                                                                       |","lastModifiedDate":"2022-11-07"},{"lineNumber":431,"author":{"gitId":"kaij77"},"content":"| **Option 2** \u003cbr\u003e Allow marking of empty Mastery Checks                           | Could be useful in certain cases, for example when the user accidentally marks a student with an empty Mastery Check as passed | This would require the marking of empty Mastery Checks to be allowed. Refer to the design considerations in implementing the `mark` command for the cons of doing so |","lastModifiedDate":"2022-11-07"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":433,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":436,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":438,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":439,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":440,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":441,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":442,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"jorrdansoh"},"content":"* CS1101S Teaching Assistants","lastModifiedDate":"2022-09-27"},{"lineNumber":452,"author":{"gitId":"jorrdansoh"},"content":"* prefers desktop apps over other types","lastModifiedDate":"2022-10-27"},{"lineNumber":453,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":455,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":457,"author":{"gitId":"Yuvaraj0702"},"content":"**Value proposition**","lastModifiedDate":"2022-09-27"},{"lineNumber":458,"author":{"gitId":"Yuvaraj0702"},"content":"1. One easy-to-access place to track each student’s individual progress","lastModifiedDate":"2022-09-27"},{"lineNumber":459,"author":{"gitId":"Yuvaraj0702"},"content":"2. Makes TA’s lives easier by removing the need to manually filter students","lastModifiedDate":"2022-09-27"},{"lineNumber":460,"author":{"gitId":"Yuvaraj0702"},"content":"3. Easier and more convenient to manage and schedule meetings with students","lastModifiedDate":"2022-09-27"},{"lineNumber":461,"author":{"gitId":"Yuvaraj0702"},"content":"4. Manage students faster than a typical mouse/GUI driven app","lastModifiedDate":"2022-09-27"},{"lineNumber":462,"author":{"gitId":"jorrdansoh"},"content":"5. Constraint: won’t be able to actually grade assignments using FRIDAY","lastModifiedDate":"2022-10-27"},{"lineNumber":463,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":466,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":469,"author":{"gitId":"-"},"content":"| Priority | As a …​           | I want to …​                                                        | So that I can…​                                                  |","lastModifiedDate":"2020-05-23"},{"lineNumber":470,"author":{"gitId":"HowSuen"},"content":"|----------|-------------------|---------------------------------------------------------------------|------------------------------------------------------------------|","lastModifiedDate":"2022-10-19"},{"lineNumber":471,"author":{"gitId":"darrtzj"},"content":"| `* * *`  | user              | add students                                                        |                                                                  |","lastModifiedDate":"2022-09-27"},{"lineNumber":472,"author":{"gitId":"darrtzj"},"content":"| `* * *`  | user              | remove students                                                     |                                                                  |","lastModifiedDate":"2022-09-27"},{"lineNumber":473,"author":{"gitId":"darrtzj"},"content":"| `* * *`  | user              | add my students’ contact details                                    | contact them when I need to                                      |","lastModifiedDate":"2022-09-27"},{"lineNumber":474,"author":{"gitId":"darrtzj"},"content":"| `* * *`  | user              | delete my students’ contact details                                 | remove outdated information                                      |","lastModifiedDate":"2022-09-27"},{"lineNumber":475,"author":{"gitId":"darrtzj"},"content":"| `* * *`  | user              | add my students’ grades and marks for tests                         | assess and see how well they are performing                      |","lastModifiedDate":"2022-09-27"},{"lineNumber":476,"author":{"gitId":"darrtzj"},"content":"| `* * *`  | user              | delete my students’ grades and marks for tests                      | remove outdated results                                          |","lastModifiedDate":"2022-09-27"},{"lineNumber":477,"author":{"gitId":"HowSuen"},"content":"| `* * *`  | user              | add queries from students                                           | keep track and be reminded of the students\u0027 questions            |","lastModifiedDate":"2022-10-19"},{"lineNumber":478,"author":{"gitId":"HowSuen"},"content":"| `* * *`  | user              | delete certain comments that are no longer relevant                 | not clutter up space with old comments                           |","lastModifiedDate":"2022-10-19"},{"lineNumber":479,"author":{"gitId":"darrtzj"},"content":"| `* * *`  | user              | add comments for a specific student                                 | take note of their progress                                      |","lastModifiedDate":"2022-09-27"},{"lineNumber":480,"author":{"gitId":"darrtzj"},"content":"| `* * *`  | user              | view the information of a specific student                          | retrieve details about the student                               |","lastModifiedDate":"2022-09-27"},{"lineNumber":481,"author":{"gitId":"darrtzj"},"content":"| `* * *`  | user              | search for keywords                                                 | look for information i need from my students                     |","lastModifiedDate":"2022-09-27"},{"lineNumber":482,"author":{"gitId":"darrtzj"},"content":"| `* * *`  | user              | be given helpful error messages when I give an invalid command      | troubleshoot easily without consulting the User Guide every time |","lastModifiedDate":"2022-09-27"},{"lineNumber":483,"author":{"gitId":"darrtzj"},"content":"| `* * *`  | user              | add dates for my students’ Mastery Checks                           | schedule the meetings                                            |","lastModifiedDate":"2022-09-27"},{"lineNumber":484,"author":{"gitId":"darrtzj"},"content":"| `* * *`  | user              | delete dates for my students’ Mastery Checks                        | remove outdated dates and Mastery Checks                         |","lastModifiedDate":"2022-09-27"},{"lineNumber":485,"author":{"gitId":"darrtzj"},"content":"| `* *`    | user              | get help in the app itself                                          | get help without consulting the User Guide                       |","lastModifiedDate":"2022-09-27"},{"lineNumber":486,"author":{"gitId":"darrtzj"},"content":"| `* *`    | user              | edit my students’ grades and marks for tests                        | update the student’s results                                     |","lastModifiedDate":"2022-09-27"},{"lineNumber":487,"author":{"gitId":"darrtzj"},"content":"| `* *`    | user              | edit the contact details of a specific student                      | update the student’s contact details                             |","lastModifiedDate":"2022-09-27"},{"lineNumber":488,"author":{"gitId":"darrtzj"},"content":"| `* *`    | user              | edit the information of a specific student                          | update the student’s details.                                    |","lastModifiedDate":"2022-09-27"},{"lineNumber":489,"author":{"gitId":"darrtzj"},"content":"| `* *`    | user              | edit previously added comments                                      | update my comments for a student.                                |","lastModifiedDate":"2022-09-27"},{"lineNumber":490,"author":{"gitId":"jorrdansoh"},"content":"| `* *`    | user              | sort my students by Mastery Check dates                             | easily see when is the next Mastery Check.                       |","lastModifiedDate":"2022-10-19"},{"lineNumber":491,"author":{"gitId":"jorrdansoh"},"content":"| `* *`    | user              | sort my students by consultation dates                              | easily see when is the next consultation.                        |","lastModifiedDate":"2022-10-19"},{"lineNumber":492,"author":{"gitId":"darrtzj"},"content":"| `* *`    | new user          | see the app populated with sample data                              | easily see how the app will look when it is in use               |","lastModifiedDate":"2022-09-27"},{"lineNumber":493,"author":{"gitId":"darrtzj"},"content":"| `* *`    | new user          | purge all current data                                              | get rid of sample/experimental data I used for exploring the app |","lastModifiedDate":"2022-09-27"},{"lineNumber":494,"author":{"gitId":"darrtzj"},"content":"| `* *`    | expert user       | create custom alias for my commands                                 | enter commands more efficiently                                  |","lastModifiedDate":"2022-09-27"},{"lineNumber":495,"author":{"gitId":"darrtzj"},"content":"| `* *`    | expert user       | delete a custom alias                                               | remove aliases I no longer need                                  |","lastModifiedDate":"2022-09-27"},{"lineNumber":496,"author":{"gitId":"darrtzj"},"content":"| `* *`    | intermediate user | generate random pairs to group my students into pairs               | split my students for pair work                                  |","lastModifiedDate":"2022-09-27"},{"lineNumber":497,"author":{"gitId":"darrtzj"},"content":"| `*`      | expert user       | view all my current macros                                          | view all my macros and know what they do                         |","lastModifiedDate":"2022-09-27"},{"lineNumber":498,"author":{"gitId":"darrtzj"},"content":"| `*`      | expert user       | create my own macros to  perform certain functions                  | be more efficient using the app                                  |","lastModifiedDate":"2022-09-27"},{"lineNumber":499,"author":{"gitId":"darrtzj"},"content":"| `*`      | intermediate user | have suggestions on comments to give students for generic  feedback | provide fast feedback                                            |","lastModifiedDate":"2022-09-27"},{"lineNumber":500,"author":{"gitId":"darrtzj"},"content":"| `*`      | intermediate user | customize the look and feel of the software                         | make the software feel like my own                               |","lastModifiedDate":"2022-09-27"},{"lineNumber":501,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":502,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":503,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":504,"author":{"gitId":"jorrdansoh"},"content":"For all use cases below, the **System** is `FRIDAY` and the **Actor** is the `user`, unless specified otherwise.","lastModifiedDate":"2022-11-05"},{"lineNumber":505,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":506,"author":{"gitId":"jorrdansoh"},"content":"**Use Case 1: Add a student**","lastModifiedDate":"2022-11-05"},{"lineNumber":507,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":508,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2022-11-05"},{"lineNumber":509,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":510,"author":{"gitId":"jorrdansoh"},"content":"1. User requests to add a student with details","lastModifiedDate":"2022-11-05"},{"lineNumber":511,"author":{"gitId":"jorrdansoh"},"content":"2. FRIDAY adds the student","lastModifiedDate":"2022-11-05"},{"lineNumber":512,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":513,"author":{"gitId":"jorrdansoh"},"content":"   Use case ends.","lastModifiedDate":"2022-11-05"},{"lineNumber":514,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":515,"author":{"gitId":"jorrdansoh"},"content":"**Extensions**","lastModifiedDate":"2022-11-05"},{"lineNumber":516,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":517,"author":{"gitId":"jorrdansoh"},"content":"* 1a. The given details are not supported in FRIDAY.","lastModifiedDate":"2022-11-05"},{"lineNumber":518,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":519,"author":{"gitId":"jorrdansoh"},"content":"    * 1a1. FRIDAY shows an error message listing the supported details.","lastModifiedDate":"2022-11-05"},{"lineNumber":520,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":521,"author":{"gitId":"jorrdansoh"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2022-11-05"},{"lineNumber":522,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":523,"author":{"gitId":"jorrdansoh"},"content":"* 1b. The given details are supported but have the wrong format.","lastModifiedDate":"2022-11-05"},{"lineNumber":524,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":525,"author":{"gitId":"jorrdansoh"},"content":"    * 1b1. FRIDAY shows an error message providing the correct format.","lastModifiedDate":"2022-11-05"},{"lineNumber":526,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":527,"author":{"gitId":"jorrdansoh"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2022-11-05"},{"lineNumber":528,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":529,"author":{"gitId":"jorrdansoh"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":530,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":531,"author":{"gitId":"jorrdansoh"},"content":"**Use Case 2: Delete a student**","lastModifiedDate":"2022-11-05"},{"lineNumber":532,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":533,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":534,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":535,"author":{"gitId":"kaij77"},"content":"1.  User requests to list students","lastModifiedDate":"2022-10-06"},{"lineNumber":536,"author":{"gitId":"kaij77"},"content":"2.  FRIDAY shows a list of students","lastModifiedDate":"2022-10-06"},{"lineNumber":537,"author":{"gitId":"kaij77"},"content":"3.  User requests to delete a specific student in the list","lastModifiedDate":"2022-10-06"},{"lineNumber":538,"author":{"gitId":"kaij77"},"content":"4.  FRIDAY deletes the student","lastModifiedDate":"2022-10-06"},{"lineNumber":539,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":540,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":541,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":542,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":543,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":544,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":545,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":546,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":547,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":548,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":549,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":550,"author":{"gitId":"kaij77"},"content":"    * 3a1. FRIDAY shows an error message.","lastModifiedDate":"2022-09-27"},{"lineNumber":551,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":552,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":553,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":554,"author":{"gitId":"jorrdansoh"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":555,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":556,"author":{"gitId":"jorrdansoh"},"content":"**Use Case 3: List a student\u0027s details**","lastModifiedDate":"2022-11-05"},{"lineNumber":557,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":558,"author":{"gitId":"kaij77"},"content":"**MSS**","lastModifiedDate":"2022-09-27"},{"lineNumber":559,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":560,"author":{"gitId":"kaij77"},"content":"1. User requests to list all students","lastModifiedDate":"2022-10-06"},{"lineNumber":561,"author":{"gitId":"kaij77"},"content":"2. FRIDAY shows a list of students","lastModifiedDate":"2022-10-06"},{"lineNumber":562,"author":{"gitId":"kaij77"},"content":"3. User requests to view the details of a specific student in the list","lastModifiedDate":"2022-10-06"},{"lineNumber":563,"author":{"gitId":"kaij77"},"content":"4. FRIDAY displays the details of the student","lastModifiedDate":"2022-10-06"},{"lineNumber":564,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":565,"author":{"gitId":"kaij77"},"content":"    Use case ends.","lastModifiedDate":"2022-09-27"},{"lineNumber":566,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":567,"author":{"gitId":"kaij77"},"content":"**Extensions**","lastModifiedDate":"2022-09-27"},{"lineNumber":568,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":569,"author":{"gitId":"kaij77"},"content":"* 2a. The list is empty.","lastModifiedDate":"2022-09-27"},{"lineNumber":570,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":571,"author":{"gitId":"kaij77"},"content":"  Use case ends.","lastModifiedDate":"2022-09-27"},{"lineNumber":572,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":573,"author":{"gitId":"kaij77"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2022-09-27"},{"lineNumber":574,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":575,"author":{"gitId":"kaij77"},"content":"    * 3a1. FRIDAY shows an error message.","lastModifiedDate":"2022-09-27"},{"lineNumber":576,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":577,"author":{"gitId":"kaij77"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2022-09-27"},{"lineNumber":578,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":579,"author":{"gitId":"jorrdansoh"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":580,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":581,"author":{"gitId":"jorrdansoh"},"content":"**Use Case 4: Edit details of a student**","lastModifiedDate":"2022-11-05"},{"lineNumber":582,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":583,"author":{"gitId":"kaij77"},"content":"**MSS**","lastModifiedDate":"2022-09-27"},{"lineNumber":584,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":585,"author":{"gitId":"kaij77"},"content":"1. User requests to list students","lastModifiedDate":"2022-10-06"},{"lineNumber":586,"author":{"gitId":"kaij77"},"content":"2. FRIDAY shows a list of students","lastModifiedDate":"2022-10-06"},{"lineNumber":587,"author":{"gitId":"kaij77"},"content":"3. User requests to edit details for a specific student in the list","lastModifiedDate":"2022-10-06"},{"lineNumber":588,"author":{"gitId":"kaij77"},"content":"4. FRIDAY edits details for the student","lastModifiedDate":"2022-10-06"},{"lineNumber":589,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":590,"author":{"gitId":"kaij77"},"content":"    Use case ends.","lastModifiedDate":"2022-09-27"},{"lineNumber":591,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":592,"author":{"gitId":"kaij77"},"content":"**Extensions**","lastModifiedDate":"2022-09-27"},{"lineNumber":593,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":594,"author":{"gitId":"kaij77"},"content":"* 2a. The list is empty.","lastModifiedDate":"2022-09-27"},{"lineNumber":595,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":596,"author":{"gitId":"kaij77"},"content":"  Use case ends.","lastModifiedDate":"2022-09-27"},{"lineNumber":597,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":598,"author":{"gitId":"kaij77"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2022-09-27"},{"lineNumber":599,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":600,"author":{"gitId":"kaij77"},"content":"    * 3a1. FRIDAY shows an error message.","lastModifiedDate":"2022-09-27"},{"lineNumber":601,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":602,"author":{"gitId":"kaij77"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2022-09-27"},{"lineNumber":603,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":604,"author":{"gitId":"kaij77"},"content":"* 3b. The given details have the wrong formats or tags","lastModifiedDate":"2022-09-27"},{"lineNumber":605,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":606,"author":{"gitId":"kaij77"},"content":"    * 3b1. FRIDAY shows an error message.","lastModifiedDate":"2022-09-27"},{"lineNumber":607,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":608,"author":{"gitId":"kaij77"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2022-09-27"},{"lineNumber":609,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":610,"author":{"gitId":"jorrdansoh"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":611,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":612,"author":{"gitId":"jorrdansoh"},"content":"**Use Case 5: Edit remarks for a student**","lastModifiedDate":"2022-11-05"},{"lineNumber":613,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":614,"author":{"gitId":"HowSuen"},"content":"**MSS**","lastModifiedDate":"2022-10-19"},{"lineNumber":615,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":616,"author":{"gitId":"HowSuen"},"content":"1. User requests to list students","lastModifiedDate":"2022-10-19"},{"lineNumber":617,"author":{"gitId":"HowSuen"},"content":"2. FRIDAY shows a list of students","lastModifiedDate":"2022-10-19"},{"lineNumber":618,"author":{"gitId":"HowSuen"},"content":"3. User requests to edit remarks for a specific student in the list","lastModifiedDate":"2022-10-19"},{"lineNumber":619,"author":{"gitId":"HowSuen"},"content":"4. FRIDAY edits details for the student","lastModifiedDate":"2022-10-19"},{"lineNumber":620,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":621,"author":{"gitId":"HowSuen"},"content":"   Use case ends.","lastModifiedDate":"2022-10-19"},{"lineNumber":622,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":623,"author":{"gitId":"HowSuen"},"content":"**Extensions**","lastModifiedDate":"2022-10-19"},{"lineNumber":624,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":625,"author":{"gitId":"HowSuen"},"content":"* 2a. The list is empty.","lastModifiedDate":"2022-10-19"},{"lineNumber":626,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":627,"author":{"gitId":"HowSuen"},"content":"  Use case ends.","lastModifiedDate":"2022-10-19"},{"lineNumber":628,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":629,"author":{"gitId":"HowSuen"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2022-10-19"},{"lineNumber":630,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":631,"author":{"gitId":"HowSuen"},"content":"    * 3a1. FRIDAY shows an error message.","lastModifiedDate":"2022-10-19"},{"lineNumber":632,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":633,"author":{"gitId":"HowSuen"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2022-10-19"},{"lineNumber":634,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":635,"author":{"gitId":"HowSuen"},"content":"* 3b. The given remark is empty.","lastModifiedDate":"2022-10-19"},{"lineNumber":636,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":637,"author":{"gitId":"HowSuen"},"content":"    * 3b1. FRIDAY removes remarks for the specified student.","lastModifiedDate":"2022-10-19"},{"lineNumber":638,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":639,"author":{"gitId":"HowSuen"},"content":"      Use case ends.","lastModifiedDate":"2022-10-19"},{"lineNumber":640,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":641,"author":{"gitId":"jorrdansoh"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":642,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":643,"author":{"gitId":"jorrdansoh"},"content":"**Use Case 6: Delete details of a student**","lastModifiedDate":"2022-11-05"},{"lineNumber":644,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":645,"author":{"gitId":"kaij77"},"content":"**MSS**","lastModifiedDate":"2022-09-27"},{"lineNumber":646,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":647,"author":{"gitId":"kaij77"},"content":"1. User requests to list students","lastModifiedDate":"2022-10-06"},{"lineNumber":648,"author":{"gitId":"kaij77"},"content":"2. FRIDAY shows a list of students","lastModifiedDate":"2022-10-06"},{"lineNumber":649,"author":{"gitId":"kaij77"},"content":"3. User requests to delete details for a specific student in the list","lastModifiedDate":"2022-10-06"},{"lineNumber":650,"author":{"gitId":"kaij77"},"content":"4. FRIDAY deletes details for the student","lastModifiedDate":"2022-10-06"},{"lineNumber":651,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":652,"author":{"gitId":"kaij77"},"content":"    Use case ends.","lastModifiedDate":"2022-09-27"},{"lineNumber":653,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":654,"author":{"gitId":"kaij77"},"content":"**Extensions**","lastModifiedDate":"2022-09-27"},{"lineNumber":655,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":656,"author":{"gitId":"kaij77"},"content":"* 2a. The list is empty.","lastModifiedDate":"2022-09-27"},{"lineNumber":657,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":658,"author":{"gitId":"kaij77"},"content":"  Use case ends.","lastModifiedDate":"2022-09-27"},{"lineNumber":659,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":660,"author":{"gitId":"kaij77"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2022-09-27"},{"lineNumber":661,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":662,"author":{"gitId":"kaij77"},"content":"    * 3a1. FRIDAY shows an error message.","lastModifiedDate":"2022-09-27"},{"lineNumber":663,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":664,"author":{"gitId":"kaij77"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2022-09-27"},{"lineNumber":665,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":666,"author":{"gitId":"kaij77"},"content":"* 3b. The given details have the wrong formats or tags","lastModifiedDate":"2022-09-27"},{"lineNumber":667,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":668,"author":{"gitId":"kaij77"},"content":"    * 3b1. FRIDAY shows an error message.","lastModifiedDate":"2022-09-27"},{"lineNumber":669,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":670,"author":{"gitId":"kaij77"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2022-09-27"},{"lineNumber":671,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":672,"author":{"gitId":"jorrdansoh"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":673,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":674,"author":{"gitId":"jorrdansoh"},"content":"**Use Case 7: Edit grades for a student**","lastModifiedDate":"2022-11-05"},{"lineNumber":675,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":676,"author":{"gitId":"HowSuen"},"content":"**MSS**","lastModifiedDate":"2022-10-21"},{"lineNumber":677,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":678,"author":{"gitId":"HowSuen"},"content":"1. User requests to list students","lastModifiedDate":"2022-10-21"},{"lineNumber":679,"author":{"gitId":"HowSuen"},"content":"2. FRIDAY shows a list of students","lastModifiedDate":"2022-10-21"},{"lineNumber":680,"author":{"gitId":"HowSuen"},"content":"3. User requests to edit grades for a specific student in the list","lastModifiedDate":"2022-10-21"},{"lineNumber":681,"author":{"gitId":"HowSuen"},"content":"4. FRIDAY edits grades for the student","lastModifiedDate":"2022-10-21"},{"lineNumber":682,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":683,"author":{"gitId":"HowSuen"},"content":"   Use case ends.","lastModifiedDate":"2022-10-21"},{"lineNumber":684,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":685,"author":{"gitId":"HowSuen"},"content":"**Extensions**","lastModifiedDate":"2022-10-21"},{"lineNumber":686,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":687,"author":{"gitId":"HowSuen"},"content":"* 2a. The list is empty.","lastModifiedDate":"2022-10-21"},{"lineNumber":688,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":689,"author":{"gitId":"HowSuen"},"content":"  Use case ends.","lastModifiedDate":"2022-10-21"},{"lineNumber":690,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":691,"author":{"gitId":"HowSuen"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2022-10-21"},{"lineNumber":692,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":693,"author":{"gitId":"HowSuen"},"content":"    * 3a1. FRIDAY shows an error message.","lastModifiedDate":"2022-10-21"},{"lineNumber":694,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":695,"author":{"gitId":"HowSuen"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2022-10-21"},{"lineNumber":696,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":697,"author":{"gitId":"HowSuen"},"content":"* 3b. The given score of the grade is empty.","lastModifiedDate":"2022-10-21"},{"lineNumber":698,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":699,"author":{"gitId":"HowSuen"},"content":"    * 3b1. FRIDAY shows an error message.","lastModifiedDate":"2022-10-21"},{"lineNumber":700,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":701,"author":{"gitId":"HowSuen"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2022-10-21"},{"lineNumber":702,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":703,"author":{"gitId":"jorrdansoh"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":704,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":705,"author":{"gitId":"jorrdansoh"},"content":"**Use Case 8: Sort students**","lastModifiedDate":"2022-11-05"},{"lineNumber":706,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":707,"author":{"gitId":"jorrdansoh"},"content":"**MSS**","lastModifiedDate":"2022-10-19"},{"lineNumber":708,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":709,"author":{"gitId":"jorrdansoh"},"content":"1. User requests to list students","lastModifiedDate":"2022-11-05"},{"lineNumber":710,"author":{"gitId":"jorrdansoh"},"content":"2. FRIDAY shows a list of students","lastModifiedDate":"2022-11-05"},{"lineNumber":711,"author":{"gitId":"jorrdansoh"},"content":"3. User requests to sort all students with a specific criteria and order","lastModifiedDate":"2022-11-05"},{"lineNumber":712,"author":{"gitId":"jorrdansoh"},"content":"4. FRIDAY displays the students in sorted order","lastModifiedDate":"2022-11-05"},{"lineNumber":713,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":714,"author":{"gitId":"jorrdansoh"},"content":"   Use case ends.","lastModifiedDate":"2022-10-19"},{"lineNumber":715,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":716,"author":{"gitId":"jorrdansoh"},"content":"**Extensions**","lastModifiedDate":"2022-10-19"},{"lineNumber":717,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":718,"author":{"gitId":"jorrdansoh"},"content":"* 2a. The list is empty.","lastModifiedDate":"2022-11-05"},{"lineNumber":719,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":720,"author":{"gitId":"jorrdansoh"},"content":"  Use case ends.","lastModifiedDate":"2022-11-05"},{"lineNumber":721,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":722,"author":{"gitId":"jorrdansoh"},"content":"* 3a. The given criteria or order is invalid.","lastModifiedDate":"2022-11-05"},{"lineNumber":723,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":724,"author":{"gitId":"jorrdansoh"},"content":"    * 3a1. FRIDAY shows an error message listing the accepted criteria and orders.","lastModifiedDate":"2022-11-05"},{"lineNumber":725,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":726,"author":{"gitId":"jorrdansoh"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2022-11-05"},{"lineNumber":727,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":728,"author":{"gitId":"jorrdansoh"},"content":"* 3b. More than one criterion is given.","lastModifiedDate":"2022-11-05"},{"lineNumber":729,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":730,"author":{"gitId":"jorrdansoh"},"content":"    * 3b1. FRIDAY shows an error message.","lastModifiedDate":"2022-11-05"},{"lineNumber":731,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":732,"author":{"gitId":"jorrdansoh"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2022-11-05"},{"lineNumber":733,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":734,"author":{"gitId":"jorrdansoh"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":735,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":736,"author":{"gitId":"jorrdansoh"},"content":"**Use Case 9: Mark a student\u0027s Mastery Check as passed.**","lastModifiedDate":"2022-11-05"},{"lineNumber":737,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":738,"author":{"gitId":"kaij77"},"content":"**MSS**","lastModifiedDate":"2022-10-20"},{"lineNumber":739,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":740,"author":{"gitId":"kaij77"},"content":"1. User requests to list students","lastModifiedDate":"2022-10-20"},{"lineNumber":741,"author":{"gitId":"kaij77"},"content":"2. FRIDAY shows a list of students","lastModifiedDate":"2022-10-20"},{"lineNumber":742,"author":{"gitId":"kaij77"},"content":"3. User requests to mark the Mastery Check of a specific student as passed","lastModifiedDate":"2022-10-20"},{"lineNumber":743,"author":{"gitId":"kaij77"},"content":"4. FRIDAY marks the student\u0027s Mastery Check as passed","lastModifiedDate":"2022-10-20"},{"lineNumber":744,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":745,"author":{"gitId":"kaij77"},"content":"   Use case ends.","lastModifiedDate":"2022-10-20"},{"lineNumber":746,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":747,"author":{"gitId":"kaij77"},"content":"**Extensions**","lastModifiedDate":"2022-10-20"},{"lineNumber":748,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":749,"author":{"gitId":"kaij77"},"content":"* 2a. The list is empty.","lastModifiedDate":"2022-10-20"},{"lineNumber":750,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":751,"author":{"gitId":"kaij77"},"content":"  Use case ends","lastModifiedDate":"2022-10-20"},{"lineNumber":752,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":753,"author":{"gitId":"kaij77"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2022-10-20"},{"lineNumber":754,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":755,"author":{"gitId":"kaij77"},"content":"    * 3a1. FRIDAY shows an error message.","lastModifiedDate":"2022-10-20"},{"lineNumber":756,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":757,"author":{"gitId":"kaij77"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2022-10-20"},{"lineNumber":758,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":759,"author":{"gitId":"kaij77"},"content":"* 3b. The Mastery Check of the student has already been marked as passed.","lastModifiedDate":"2022-10-20"},{"lineNumber":760,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":761,"author":{"gitId":"kaij77"},"content":"    * 3b1. FRIDAY shows an error message.","lastModifiedDate":"2022-10-20"},{"lineNumber":762,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":763,"author":{"gitId":"kaij77"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2022-10-20"},{"lineNumber":764,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":765,"author":{"gitId":"jorrdansoh"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":766,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":767,"author":{"gitId":"jorrdansoh"},"content":"**Use Case 10: Unmark a student\u0027s Mastery Check.**","lastModifiedDate":"2022-11-05"},{"lineNumber":768,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":769,"author":{"gitId":"jorrdansoh"},"content":"**MSS**","lastModifiedDate":"2022-11-01"},{"lineNumber":770,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":771,"author":{"gitId":"kaij77"},"content":"1. User requests to list students","lastModifiedDate":"2022-10-25"},{"lineNumber":772,"author":{"gitId":"kaij77"},"content":"2. FRIDAY shows a list of students","lastModifiedDate":"2022-10-25"},{"lineNumber":773,"author":{"gitId":"kaij77"},"content":"3. User requests to unmark the Mastery Check of a specific student","lastModifiedDate":"2022-10-25"},{"lineNumber":774,"author":{"gitId":"kaij77"},"content":"4. FRIDAY unmarks the student\u0027s Mastery Check as passed","lastModifiedDate":"2022-10-25"},{"lineNumber":775,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":776,"author":{"gitId":"kaij77"},"content":"   Use case ends.","lastModifiedDate":"2022-10-25"},{"lineNumber":777,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":778,"author":{"gitId":"kaij77"},"content":"**Extensions**","lastModifiedDate":"2022-10-25"},{"lineNumber":779,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":780,"author":{"gitId":"kaij77"},"content":"* 2a. The list is empty.","lastModifiedDate":"2022-10-25"},{"lineNumber":781,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":782,"author":{"gitId":"kaij77"},"content":"  Use case ends","lastModifiedDate":"2022-10-25"},{"lineNumber":783,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":784,"author":{"gitId":"kaij77"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2022-10-25"},{"lineNumber":785,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":786,"author":{"gitId":"kaij77"},"content":"    * 3a1. FRIDAY shows an error message.","lastModifiedDate":"2022-10-25"},{"lineNumber":787,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":788,"author":{"gitId":"kaij77"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2022-10-25"},{"lineNumber":789,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":790,"author":{"gitId":"kaij77"},"content":"* 3b. The Mastery Check of the student has not yet been marked as passed.","lastModifiedDate":"2022-10-25"},{"lineNumber":791,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":792,"author":{"gitId":"kaij77"},"content":"    * 3b1. FRIDAY shows an error message.","lastModifiedDate":"2022-10-25"},{"lineNumber":793,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":794,"author":{"gitId":"kaij77"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2022-10-25"},{"lineNumber":795,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":796,"author":{"gitId":"darrtzj"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-11-06"},{"lineNumber":797,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":798,"author":{"gitId":"darrtzj"},"content":"**Use Case 11: Add an alias.**","lastModifiedDate":"2022-11-06"},{"lineNumber":799,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":800,"author":{"gitId":"darrtzj"},"content":"**MSS**","lastModifiedDate":"2022-11-06"},{"lineNumber":801,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":802,"author":{"gitId":"darrtzj"},"content":"1. User requests to add alias for a default command","lastModifiedDate":"2022-11-06"},{"lineNumber":803,"author":{"gitId":"darrtzj"},"content":"2. FRIDAY adds alias","lastModifiedDate":"2022-11-06"},{"lineNumber":804,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":805,"author":{"gitId":"darrtzj"},"content":"   Use case ends.","lastModifiedDate":"2022-11-06"},{"lineNumber":806,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":807,"author":{"gitId":"darrtzj"},"content":"**Extensions**","lastModifiedDate":"2022-11-06"},{"lineNumber":808,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":809,"author":{"gitId":"darrtzj"},"content":"* 2a. The given alias is invalid.","lastModifiedDate":"2022-11-06"},{"lineNumber":810,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":811,"author":{"gitId":"darrtzj"},"content":"    * 2a1. FRIDAY shows an error message showing what is an invalid alias.","lastModifiedDate":"2022-11-06"},{"lineNumber":812,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":813,"author":{"gitId":"darrtzj"},"content":"      Use case resumes at step 1","lastModifiedDate":"2022-11-06"},{"lineNumber":814,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":815,"author":{"gitId":"darrtzj"},"content":"* 2b. The given default command is invalid.","lastModifiedDate":"2022-11-06"},{"lineNumber":816,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":817,"author":{"gitId":"darrtzj"},"content":"    * 2b1. FRIDAY shows an error message showing that default command is invalid.","lastModifiedDate":"2022-11-06"},{"lineNumber":818,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":819,"author":{"gitId":"darrtzj"},"content":"      Use case resumes at step 1","lastModifiedDate":"2022-11-06"},{"lineNumber":820,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":821,"author":{"gitId":"darrtzj"},"content":"* 2c. The given alias and default command is in the wrong format.","lastModifiedDate":"2022-11-06"},{"lineNumber":822,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":823,"author":{"gitId":"darrtzj"},"content":"    * 2c1. FRIDAY shows an error message showing the correct format.","lastModifiedDate":"2022-11-06"},{"lineNumber":824,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":825,"author":{"gitId":"darrtzj"},"content":"      Use case resumes at step 1","lastModifiedDate":"2022-11-06"},{"lineNumber":826,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":827,"author":{"gitId":"darrtzj"},"content":"* 2d. The given alias already exists in FRIDAY.","lastModifiedDate":"2022-11-06"},{"lineNumber":828,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":829,"author":{"gitId":"darrtzj"},"content":"    * 2d1. FRIDAY shows an error message showing that alias already exists in FRIDAY.","lastModifiedDate":"2022-11-06"},{"lineNumber":830,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":831,"author":{"gitId":"darrtzj"},"content":"      Use case resumes at step 1","lastModifiedDate":"2022-11-06"},{"lineNumber":832,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":833,"author":{"gitId":"darrtzj"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-11-06"},{"lineNumber":834,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":835,"author":{"gitId":"darrtzj"},"content":"**Use Case 12: Deleting an alias.**","lastModifiedDate":"2022-11-06"},{"lineNumber":836,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":837,"author":{"gitId":"darrtzj"},"content":"**MSS**","lastModifiedDate":"2022-11-06"},{"lineNumber":838,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":839,"author":{"gitId":"darrtzj"},"content":"1. User requests to delete an alias","lastModifiedDate":"2022-11-06"},{"lineNumber":840,"author":{"gitId":"darrtzj"},"content":"2. FRIDAY deletes alias","lastModifiedDate":"2022-11-06"},{"lineNumber":841,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":842,"author":{"gitId":"darrtzj"},"content":"   Use case ends.","lastModifiedDate":"2022-11-06"},{"lineNumber":843,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":844,"author":{"gitId":"darrtzj"},"content":"**Extensions**","lastModifiedDate":"2022-11-06"},{"lineNumber":845,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":846,"author":{"gitId":"darrtzj"},"content":"* 2a. The given alias is not in FRIDAY.","lastModifiedDate":"2022-11-06"},{"lineNumber":847,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":848,"author":{"gitId":"darrtzj"},"content":"    * 2a1. FRIDAY shows an error message showing that alias is not in FRIDAY.","lastModifiedDate":"2022-11-06"},{"lineNumber":849,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":850,"author":{"gitId":"darrtzj"},"content":"      Use case resumes at step 1","lastModifiedDate":"2022-11-06"},{"lineNumber":851,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":852,"author":{"gitId":"darrtzj"},"content":"* 2b. The given alias is in the wrong format.","lastModifiedDate":"2022-11-06"},{"lineNumber":853,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":854,"author":{"gitId":"darrtzj"},"content":"    * 2b1. FRIDAY shows an error message showing the correct format.","lastModifiedDate":"2022-11-06"},{"lineNumber":855,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":856,"author":{"gitId":"darrtzj"},"content":"      Use case resumes at step 1","lastModifiedDate":"2022-11-06"},{"lineNumber":857,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":858,"author":{"gitId":"darrtzj"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-11-06"},{"lineNumber":859,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":860,"author":{"gitId":"Yuvaraj0702"},"content":"**Use Case 13: Find students**","lastModifiedDate":"2022-11-07"},{"lineNumber":861,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":862,"author":{"gitId":"Yuvaraj0702"},"content":"**MSS**","lastModifiedDate":"2022-11-07"},{"lineNumber":863,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":864,"author":{"gitId":"Yuvaraj0702"},"content":"1. User requests to list students","lastModifiedDate":"2022-11-07"},{"lineNumber":865,"author":{"gitId":"Yuvaraj0702"},"content":"2. FRIDAY shows a list of students","lastModifiedDate":"2022-11-07"},{"lineNumber":866,"author":{"gitId":"Yuvaraj0702"},"content":"3. User requests to find students with specific keywords","lastModifiedDate":"2022-11-07"},{"lineNumber":867,"author":{"gitId":"Yuvaraj0702"},"content":"4. FRIDAY displays the students with matching keywords","lastModifiedDate":"2022-11-07"},{"lineNumber":868,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":869,"author":{"gitId":"Yuvaraj0702"},"content":"   Use case ends.","lastModifiedDate":"2022-11-07"},{"lineNumber":870,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":871,"author":{"gitId":"Yuvaraj0702"},"content":"**Extensions**","lastModifiedDate":"2022-11-07"},{"lineNumber":872,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":873,"author":{"gitId":"Yuvaraj0702"},"content":"* 2a. The list is empty.","lastModifiedDate":"2022-11-07"},{"lineNumber":874,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":875,"author":{"gitId":"Yuvaraj0702"},"content":"  Use case ends.","lastModifiedDate":"2022-11-07"},{"lineNumber":876,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":877,"author":{"gitId":"Yuvaraj0702"},"content":"* 3a. The given command format is invalid.","lastModifiedDate":"2022-11-07"},{"lineNumber":878,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":879,"author":{"gitId":"Yuvaraj0702"},"content":"    * 3a1. FRIDAY shows an error message listing the accepted format.","lastModifiedDate":"2022-11-07"},{"lineNumber":880,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":881,"author":{"gitId":"Yuvaraj0702"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2022-11-07"},{"lineNumber":882,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":883,"author":{"gitId":"Yuvaraj0702"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":884,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":885,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":886,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":887,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":888,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":889,"author":{"gitId":"kaij77"},"content":"2. Should be able to hold up to 100 students without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2022-10-06"},{"lineNumber":890,"author":{"gitId":"darrtzj"},"content":"3. Should be able to hold up to 50 aliases without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2022-11-06"},{"lineNumber":891,"author":{"gitId":"darrtzj"},"content":"4. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2022-11-06"},{"lineNumber":892,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":893,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":894,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":895,"author":{"gitId":"kaij77"},"content":"1. **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2022-11-07"},{"lineNumber":896,"author":{"gitId":"kaij77"},"content":"2. **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2022-11-07"},{"lineNumber":897,"author":{"gitId":"kaij77"},"content":"3. **TA / Avenger**: Teaching assistants, namely CS1101S teaching assistants (also called \"Avengers\"), who are the target audience of our product FRIDAY.","lastModifiedDate":"2022-11-07"},{"lineNumber":898,"author":{"gitId":"kaij77"},"content":"4. **Reading Assessment**: Assessments in the form of online quiz with Multiple-Choice Questions (MCQ). There are a total of two reading assessments, namely RA1 and RA2, throughout the semester. Reading Assessments have weightage in the students\u0027 final grade for the module.","lastModifiedDate":"2022-11-07"},{"lineNumber":899,"author":{"gitId":"kaij77"},"content":"5. **Mastery Check**: An assessment of the students\u0027 understanding of topics conducted by the user (the teaching assistants).","lastModifiedDate":"2022-11-07"},{"lineNumber":900,"author":{"gitId":"HowSuen"},"content":"There are two Mastery Checks through the semester. Students will be assessed by their knowledge of the topics covered by presenting to their teaching assistant in pairs.","lastModifiedDate":"2022-10-19"},{"lineNumber":901,"author":{"gitId":"HowSuen"},"content":"Since users have to arrange dates to meet with their students to conduct the Mastery Checks, FRIDAY allows users to record the scheduled dates for each student.","lastModifiedDate":"2022-10-19"},{"lineNumber":902,"author":{"gitId":"darrtzj"},"content":"* **Default Command**: The original command word for a command in FRIDAY. (e.g. `add`,`sort`)","lastModifiedDate":"2022-11-07"},{"lineNumber":903,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":904,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":905,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":906,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":907,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":908,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":909,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":910,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":911,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":912,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":913,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":914,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":915,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":916,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":917,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":918,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":919,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":920,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":921,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":922,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":923,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":924,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":925,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":926,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":927,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":928,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":929,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":930,"author":{"gitId":"jorrdansoh"},"content":"### Adding a student","lastModifiedDate":"2022-11-01"},{"lineNumber":931,"author":{"gitId":"jorrdansoh"},"content":"1. Adding a student with different details","lastModifiedDate":"2022-11-01"},{"lineNumber":932,"author":{"gitId":"jorrdansoh"},"content":"   1. Prerequisites: A student named `Alex Yeoh` and a student with Telegram handle `tommy123` have already been added.","lastModifiedDate":"2022-11-05"},{"lineNumber":933,"author":{"gitId":"jorrdansoh"},"content":"   2. Test case: `add n/Jacelyn c/2022-07-08` \u003cbr\u003e","lastModifiedDate":"2022-11-01"},{"lineNumber":934,"author":{"gitId":"jorrdansoh"},"content":"      Expected: A student named Jacelyn with consultation date 8 July 2022 is added.","lastModifiedDate":"2022-11-01"},{"lineNumber":935,"author":{"gitId":"jorrdansoh"},"content":"   3. Test case: `add n/alex yeoh` \u003cbr\u003e","lastModifiedDate":"2022-11-01"},{"lineNumber":936,"author":{"gitId":"jorrdansoh"},"content":"      Expected: No student is added. Error details shown in the status message.","lastModifiedDate":"2022-11-01"},{"lineNumber":937,"author":{"gitId":"jorrdansoh"},"content":"   4. Test case: `add n/Tom t/tommy123` \u003cbr\u003e","lastModifiedDate":"2022-11-01"},{"lineNumber":938,"author":{"gitId":"jorrdansoh"},"content":"      Expected: No student is added. Error details shown in the status message.","lastModifiedDate":"2022-11-01"},{"lineNumber":939,"author":{"gitId":"jorrdansoh"},"content":"   5. Other incorrect delete commands to try: `add`, `add Ben`, `add n/` \u003cbr\u003e","lastModifiedDate":"2022-11-01"},{"lineNumber":940,"author":{"gitId":"jorrdansoh"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2022-11-01"},{"lineNumber":941,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":942,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":943,"author":{"gitId":"kaij77"},"content":"### Deleting a student","lastModifiedDate":"2022-10-06"},{"lineNumber":944,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":945,"author":{"gitId":"kaij77"},"content":"1. Deleting a student while all students are being shown","lastModifiedDate":"2022-10-06"},{"lineNumber":946,"author":{"gitId":"kaij77"},"content":"   1. Prerequisites: List all students using the `list` command. Multiple students in the list.","lastModifiedDate":"2022-10-06"},{"lineNumber":947,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":948,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":949,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":950,"author":{"gitId":"kaij77"},"content":"      Expected: No student is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2022-10-06"},{"lineNumber":951,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":952,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":953,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":954,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":955,"author":{"gitId":"jorrdansoh"},"content":"### Sorting students","lastModifiedDate":"2022-11-01"},{"lineNumber":956,"author":{"gitId":"jorrdansoh"},"content":"1. Sorting students with different criteria and order","lastModifiedDate":"2022-11-01"},{"lineNumber":957,"author":{"gitId":"jorrdansoh"},"content":"    1. Prerequisites: List all students using the `list` command. Multiple students in the list.","lastModifiedDate":"2022-11-01"},{"lineNumber":958,"author":{"gitId":"jorrdansoh"},"content":"    2. Test case: `sort t/a` \u003cbr\u003e","lastModifiedDate":"2022-11-01"},{"lineNumber":959,"author":{"gitId":"jorrdansoh"},"content":"       Expected: Students sorted by Telegram handle in ascending alphabetical order. Students with missing Telegram handles are sorted last.","lastModifiedDate":"2022-11-05"},{"lineNumber":960,"author":{"gitId":"jorrdansoh"},"content":"    3. Test case: `sort m/d` \u003cbr\u003e","lastModifiedDate":"2022-11-01"},{"lineNumber":961,"author":{"gitId":"jorrdansoh"},"content":"       Expected: Students sorted by Mastery Check dates, from latest to earliest. Students with missing Mastery Check dates are sorted first.","lastModifiedDate":"2022-11-01"},{"lineNumber":962,"author":{"gitId":"jorrdansoh"},"content":"    4. Test case: `sort g/a` \u003cbr\u003e","lastModifiedDate":"2022-11-01"},{"lineNumber":963,"author":{"gitId":"jorrdansoh"},"content":"       Expected: Students not sorted. Error details shown in the status message.","lastModifiedDate":"2022-11-01"},{"lineNumber":964,"author":{"gitId":"jorrdansoh"},"content":"    5. Other incorrect delete commands to try: `sort`, `sort n/`, `sort c/b` \u003cbr\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":965,"author":{"gitId":"jorrdansoh"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2022-11-01"},{"lineNumber":966,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":967,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":968,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":969,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":970,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":971,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":972,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":973,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"jorrdansoh":157,"Yuvaraj0702":66,"darrtzj":133,"kaij77":218,"-":280,"HowSuen":119}},{"path":"docs/SettingUp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Setting up and getting started","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Setting up the project in your computer","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2020-06-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps.","lastModifiedDate":"2020-06-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"First, **fork** this repo, and **clone** the fork into your computer.","lastModifiedDate":"2020-06-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2020-06-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK 11**.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.\u003cbr\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  :exclamation: Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2020-06-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. **Verify the setup**:","lastModifiedDate":"2020-06-07"},{"lineNumber":26,"author":{"gitId":"HowSuen"},"content":"   1. Run the `Main` and try a few commands.","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   1. [Run the tests](Testing.md) to ensure they all pass.","lastModifiedDate":"2020-06-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## Before writing code","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. **Configure the coding style**","lastModifiedDate":"2020-06-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours.","lastModifiedDate":"2020-09-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code.","lastModifiedDate":"2020-06-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. **Set up CI**","lastModifiedDate":"2020-06-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. **Learn the design**","lastModifiedDate":"2020-06-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"Yuvaraj0702"},"content":"   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [FRIDAY’s architecture](DeveloperGuide.md#architecture).","lastModifiedDate":"2022-10-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"1. **Do the tutorials**","lastModifiedDate":"2020-06-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"   These tutorials will help you get acquainted with the codebase.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   * [Tracing code](tutorials/TracingCode.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   * [Adding a new command](tutorials/AddRemark.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   * [Removing fields](tutorials/RemovingFields.md)","lastModifiedDate":"2021-08-01"}],"authorContributionMap":{"Yuvaraj0702":1,"-":53,"HowSuen":1}},{"path":"docs/Testing.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Testing guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Running tests","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"There are two ways to run tests.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"* **Method 1: Using IntelliJ JUnit test runner**","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * To run all tests, right-click on the `src/test/java` folder and choose `Run \u0027All Tests\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  * To run a subset of tests, you can right-click on a test package,","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    test class, or a test and choose `Run \u0027ABC\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* **Method 2: Using Gradle**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  * Open a console and run the command `gradlew clean test` (Mac/Linux: `./gradlew clean test`)","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-secondary\"\u003e:link: **Link**: Read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html) to learn more about using Gradle.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"## Types of tests","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"This project has three types of tests:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"1. *Unit tests* targeting the lowest level methods/classes.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"Yuvaraj0702"},"content":"   e.g. `seedu.friday.commons.StringUtilTest`","lastModifiedDate":"2022-10-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. *Integration tests* that are checking the integration of multiple code units (those code units are assumed to be working).\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"HowSuen"},"content":"   e.g. `StorageManagerTest`","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"1. Hybrids of unit and integration tests. These test are checking multiple code units as well as how the are connected together.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"HowSuen"},"content":"   e.g. `LogicManagerTest`","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"Yuvaraj0702":1,"-":33,"HowSuen":2}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2022-11-07"},{"lineNumber":7,"author":{"gitId":"jorrdansoh"},"content":"  {:toc}","lastModifiedDate":"2022-11-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-11-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":11,"author":{"gitId":"jorrdansoh"},"content":"## Introduction","lastModifiedDate":"2022-11-07"},{"lineNumber":12,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":13,"author":{"gitId":"HowSuen"},"content":"Welcome to the User Guide of **FRIDAY**!","lastModifiedDate":"2022-11-07"},{"lineNumber":14,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":15,"author":{"gitId":"HowSuen"},"content":"As a [CS1101S teaching assistant](#glossary), do you find yourself scrambling between your notes, students\u0027 contacts, ","lastModifiedDate":"2022-11-07"},{"lineNumber":16,"author":{"gitId":"HowSuen"},"content":"and calendar to consolidate and manage of all your students\u0027 information? Do you spend hours consolidating your students\u0027","lastModifiedDate":"2022-11-07"},{"lineNumber":17,"author":{"gitId":"HowSuen"},"content":"work and keeping track of their progress to ensure that they have completed their tasks on time and are coping well in ","lastModifiedDate":"2022-11-07"},{"lineNumber":18,"author":{"gitId":"HowSuen"},"content":"the module?","lastModifiedDate":"2022-11-07"},{"lineNumber":19,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":20,"author":{"gitId":"HowSuen"},"content":"Worry no more! Our application, **FRIDAY**, will reduce the hassle of managing your students and save you valuable time","lastModifiedDate":"2022-11-07"},{"lineNumber":21,"author":{"gitId":"HowSuen"},"content":"and effort by alleviating your workload. You can spend more time focusing on your own studies, improving your ","lastModifiedDate":"2022-11-07"},{"lineNumber":22,"author":{"gitId":"HowSuen"},"content":"teaching methods, and provide a better learning experience for your students!","lastModifiedDate":"2022-11-07"},{"lineNumber":23,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":24,"author":{"gitId":"HowSuen"},"content":"**FRIDAY** is an intuitive and easy-to-use application that helps CS1101S teaching assistants consolidate","lastModifiedDate":"2022-11-07"},{"lineNumber":25,"author":{"gitId":"HowSuen"},"content":"their students\u0027 information - such as contact details, grades, consultation dates, and assignments - into a single ","lastModifiedDate":"2022-11-07"},{"lineNumber":26,"author":{"gitId":"HowSuen"},"content":"application.","lastModifiedDate":"2022-11-07"},{"lineNumber":27,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":28,"author":{"gitId":"HowSuen"},"content":"The application is optimised for use via a [Command Line Interface (CLI)](#glossary), while having the benefits of a ","lastModifiedDate":"2022-11-07"},{"lineNumber":29,"author":{"gitId":"HowSuen"},"content":"[Graphical User Interface (GUI)](#glossary). This means that you can operate the application by typing and inputting ","lastModifiedDate":"2022-11-07"},{"lineNumber":30,"author":{"gitId":"HowSuen"},"content":"commands into a Command Box. If you are fast at typing, **FRIDAY** can get your student management tasks done faster ","lastModifiedDate":"2022-11-07"},{"lineNumber":31,"author":{"gitId":"HowSuen"},"content":"than other GUI applications. As a GUI application, it also allows users to interact with the application through ","lastModifiedDate":"2022-11-07"},{"lineNumber":32,"author":{"gitId":"HowSuen"},"content":"interactive graphical icons such as buttons.","lastModifiedDate":"2022-11-07"},{"lineNumber":33,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":34,"author":{"gitId":"HowSuen"},"content":"If you are interested to try, jump to [Quick Start](#quick-start) to learn how to start using **FRIDAY**!","lastModifiedDate":"2022-11-07"},{"lineNumber":35,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2022-11-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"kaij77"},"content":"This section guides you along the process of downloading and opening FRIDAY.","lastModifiedDate":"2022-11-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":41,"author":{"gitId":"darrtzj"},"content":"1. Ensure you have [Java](#glossary) 11 or above installed in your computer.","lastModifiedDate":"2022-11-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":43,"author":{"gitId":"darrtzj"},"content":"2. Download the latest [JAR](#glossary) file `friday.jar` from [here](https://github.com/AY2223S1-CS2103T-W15-4/tp/releases).","lastModifiedDate":"2022-11-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":45,"author":{"gitId":"jorrdansoh"},"content":"3. Copy the file to the folder you want to use as the *home folder* for your FRIDAY.","lastModifiedDate":"2022-11-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":47,"author":{"gitId":"jorrdansoh"},"content":"4. Double-click the file to start the app. The GUI similar to the one below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":48,"author":{"gitId":"Yuvaraj0702"},"content":"   ![Startup.png](images/Startup.png)","lastModifiedDate":"2022-11-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"darrtzj"},"content":"5. Type the [command](#glossary) in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2022-11-05"},{"lineNumber":52,"author":{"gitId":"jorrdansoh"},"content":"    * **`add n/Alex Yeoh t/al3xx c/2022-10-25`** : Adds a student named `Alex Yeoh` to FRIDAY.","lastModifiedDate":"2022-11-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":54,"author":{"gitId":"jorrdansoh"},"content":"    * **`list`** : Lists all students.","lastModifiedDate":"2022-11-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":56,"author":{"gitId":"jorrdansoh"},"content":"    * **`delete 2`** : Deletes the 2nd student shown in the current list.","lastModifiedDate":"2022-11-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":58,"author":{"gitId":"jorrdansoh"},"content":"    * **`clear`** : Deletes all students.","lastModifiedDate":"2022-11-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":60,"author":{"gitId":"jorrdansoh"},"content":"    * **`exit`** : Exits FRIDAY.","lastModifiedDate":"2022-11-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":62,"author":{"gitId":"jorrdansoh"},"content":"6. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2022-11-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"darrtzj"},"content":"[Table of Contents](#table-of-contents)","lastModifiedDate":"2022-11-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-09-27"},{"lineNumber":67,"author":{"gitId":"Yuvaraj0702"},"content":"## About","lastModifiedDate":"2022-11-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":69,"author":{"gitId":"Yuvaraj0702"},"content":"### Document structure","lastModifiedDate":"2022-11-07"},{"lineNumber":70,"author":{"gitId":"Yuvaraj0702"},"content":"This User Guide has been structured in a way to help you find information easily and quickly. In the next subsection","lastModifiedDate":"2022-11-07"},{"lineNumber":71,"author":{"gitId":"Yuvaraj0702"},"content":",Section - reading this document you can find a multitude of tips on how to use this User Guide. The following sections ","lastModifiedDate":"2022-11-07"},{"lineNumber":72,"author":{"gitId":"Yuvaraj0702"},"content":"documents the main features of FRIDAY","lastModifiedDate":"2022-11-07"},{"lineNumber":73,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":74,"author":{"gitId":"Yuvaraj0702"},"content":"1. [Student management](#student-management)","lastModifiedDate":"2022-11-07"},{"lineNumber":75,"author":{"gitId":"Yuvaraj0702"},"content":"2. [Organizing students](#organizing-students)","lastModifiedDate":"2022-11-07"},{"lineNumber":76,"author":{"gitId":"Yuvaraj0702"},"content":"3. [Grading students](#grading-students)","lastModifiedDate":"2022-11-07"},{"lineNumber":77,"author":{"gitId":"Yuvaraj0702"},"content":"4. [Miscellaneous features](#miscellaneous-features)","lastModifiedDate":"2022-11-07"},{"lineNumber":78,"author":{"gitId":"Yuvaraj0702"},"content":"5. [Features for advanced users](#features-for-advanced-users)","lastModifiedDate":"2022-11-07"},{"lineNumber":79,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":80,"author":{"gitId":"Yuvaraj0702"},"content":"### Reading this document","lastModifiedDate":"2022-11-07"},{"lineNumber":81,"author":{"gitId":"Yuvaraj0702"},"content":"This section on reading the document will introduce you to some technical terms and formats that will be used throughout the guide.","lastModifiedDate":"2022-11-07"},{"lineNumber":82,"author":{"gitId":"Yuvaraj0702"},"content":"Please make yourself familiar with the content here before moving to other sections in this user guide.","lastModifiedDate":"2022-11-07"},{"lineNumber":83,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":84,"author":{"gitId":"Yuvaraj0702"},"content":"#### Understanding the GUI","lastModifiedDate":"2022-11-07"},{"lineNumber":85,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":86,"author":{"gitId":"darrtzj"},"content":"Figure 2 depicts the [GUI](#glossary) of FRIDAY which is annotated with a description of each GUI component","lastModifiedDate":"2022-11-07"},{"lineNumber":87,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":88,"author":{"gitId":"darrtzj"},"content":"![Layout](images/layout.png)","lastModifiedDate":"2022-11-07"},{"lineNumber":89,"author":{"gitId":"Yuvaraj0702"},"content":"\u003ci\u003e Figure 2 Layout\u003c/i\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":90,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":91,"author":{"gitId":"Yuvaraj0702"},"content":"#### Understanding Symbols and syntax","lastModifiedDate":"2022-11-07"},{"lineNumber":92,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":93,"author":{"gitId":"Yuvaraj0702"},"content":"The table explains the general syntax and common occurrences throughout the user guide","lastModifiedDate":"2022-11-07"},{"lineNumber":94,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":95,"author":{"gitId":"Yuvaraj0702"},"content":"| Syntax                         | Meaning and usage                                                                                                   |","lastModifiedDate":"2022-11-07"},{"lineNumber":96,"author":{"gitId":"Yuvaraj0702"},"content":"|--------------------------------|---------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-11-07"},{"lineNumber":97,"author":{"gitId":"Yuvaraj0702"},"content":"| `Sample command`               | A purple color highlighted box specifying an executable command that can be entered in the command box              |","lastModifiedDate":"2022-11-07"},{"lineNumber":98,"author":{"gitId":"Yuvaraj0702"},"content":"| CAPITALIZED TEXT               | Indicates a parameter that follows the first word of a command                                                      |","lastModifiedDate":"2022-11-07"},{"lineNumber":99,"author":{"gitId":"Yuvaraj0702"},"content":"| **:information_source: Info:** | The icon indicates a section of increased importance and provides essential information to the smooth use of FRIDAY |","lastModifiedDate":"2022-11-07"},{"lineNumber":100,"author":{"gitId":"Yuvaraj0702"},"content":"| **:bulb: Tip:**                | A quick memorable form of advice to the user to make their friday experience enjoyable                              |","lastModifiedDate":"2022-11-07"},{"lineNumber":101,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":102,"author":{"gitId":"Yuvaraj0702"},"content":"#### Understanding command terms and general information","lastModifiedDate":"2022-11-07"},{"lineNumber":103,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":104,"author":{"gitId":"darrtzj"},"content":"Some terms that you may encounter along the way may confuse you. To help you understand all these terms this user guide has a dedicated [glossary](#glossary) section with all the key terms ","lastModifiedDate":"2022-11-07"},{"lineNumber":105,"author":{"gitId":"Yuvaraj0702"},"content":"and hyperlinks to the first occurrence of the word in each section of the User guide.","lastModifiedDate":"2022-11-07"},{"lineNumber":106,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":107,"author":{"gitId":"Yuvaraj0702"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":108,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":109,"author":{"gitId":"Yuvaraj0702"},"content":"**:information_source: Notes about CLI:**\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":110,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":111,"author":{"gitId":"darrtzj"},"content":"* ![Layout](images/layout.png)","lastModifiedDate":"2022-11-07"},{"lineNumber":112,"author":{"gitId":"Yuvaraj0702"},"content":"  \u003ci\u003e Figure 3 Layout\u003c/i\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":113,"author":{"gitId":"Yuvaraj0702"},"content":"* In this image above we have a labelled box in red called the command box. CLI or command line interface refers to","lastModifiedDate":"2022-11-07"},{"lineNumber":114,"author":{"gitId":"Yuvaraj0702"},"content":"  \u003cb\u003ecommands\u003c/b\u003e in the form of text/\u003cb\u003elines\u003c/b\u003e that you as a user enter in the command box to create a response","lastModifiedDate":"2022-11-07"},{"lineNumber":115,"author":{"gitId":"Yuvaraj0702"},"content":"  in the result display which is your \u003cb\u003e interface \u003c/b\u003e. ","lastModifiedDate":"2022-11-07"},{"lineNumber":116,"author":{"gitId":"Yuvaraj0702"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"darrtzj"},"content":"* Words in `UPPER_CASE` are the [parameters](#glossary) to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2022-10-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"kaij77"},"content":"  e.g. `n/NAME [t/TELEGRAM_HANDLE]` can be used as `n/John Doe t/johndoe` or as `n/John Doe`.","lastModifiedDate":"2022-11-07"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"jorrdansoh"},"content":"  e.g. `[tag/TAG]…​` can be used as ` ` (i.e. 0 times), `tag/fast learner`, `tag/fast learner tag/good at recursion` etc.","lastModifiedDate":"2022-10-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"jorrdansoh"},"content":"  e.g. if the command specifies `n/NAME t/TELEGRAM_HANDLE`, `t/TELEGRAM_HANDLE n/NAME` is also acceptable.","lastModifiedDate":"2022-10-25"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"HowSuen"},"content":"* If a parameter is expected only once in the command, but you specified it multiple times, only the last occurrence of the parameter will be taken. Note that this does not apply to the `INDEX` parameter in commands that have it, namely the `delete`, `edit`, `remark`, `grade`, `mark` and `unmark` commands, as they expect exactly one `INDEX` parameter.\u003cbr\u003e","lastModifiedDate":"2022-10-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"jorrdansoh"},"content":"  e.g. if you specify `t/johndoe t/johndoe123`, only `t/johndoe123` will be taken.","lastModifiedDate":"2022-10-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2022-10-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"jorrdansoh"},"content":"* `INDEX` is used in commands to refer to a specific student by their index number on the currently displayed list,","lastModifiedDate":"2022-11-05"},{"lineNumber":147,"author":{"gitId":"jorrdansoh"},"content":"  so it ` **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-11-05"},{"lineNumber":148,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":149,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"darrtzj"},"content":"[Table of Contents](#table-of-contents)","lastModifiedDate":"2022-11-07"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":153,"author":{"gitId":"Yuvaraj0702"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-11-07"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":155,"author":{"gitId":"Yuvaraj0702"},"content":"## Features","lastModifiedDate":"2022-11-07"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":157,"author":{"gitId":"kaij77"},"content":"This section contains all the information and details of each feature of **FRIDAY**. These features are split into 5 sections based on their purpose and function:","lastModifiedDate":"2022-11-07"},{"lineNumber":158,"author":{"gitId":"Yuvaraj0702"},"content":"1. [Student management](#student-management)","lastModifiedDate":"2022-11-07"},{"lineNumber":159,"author":{"gitId":"Yuvaraj0702"},"content":"2. [Organizing students](#organizing-students)","lastModifiedDate":"2022-11-07"},{"lineNumber":160,"author":{"gitId":"Yuvaraj0702"},"content":"3. [Grading students](#grading-students)","lastModifiedDate":"2022-11-07"},{"lineNumber":161,"author":{"gitId":"Yuvaraj0702"},"content":"4. [Miscellaneous features](#miscellaneous-features)","lastModifiedDate":"2022-11-07"},{"lineNumber":162,"author":{"gitId":"Yuvaraj0702"},"content":"5. [Features for advanced users](#features-for-advanced-users)","lastModifiedDate":"2022-11-07"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":164,"author":{"gitId":"Yuvaraj0702"},"content":"## Student management","lastModifiedDate":"2022-11-07"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":166,"author":{"gitId":"kaij77"},"content":"These features allow you to add and delete students, and edit their details.","lastModifiedDate":"2022-11-07"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":168,"author":{"gitId":"darrtzj"},"content":"Before you dive into using the features, you may want to have a look at the common [parameters](#glossary) used.","lastModifiedDate":"2022-11-07"},{"lineNumber":169,"author":{"gitId":"darrtzj"},"content":"The table below shows a list of [command](#glossary) parameters that will be used.","lastModifiedDate":"2022-11-07"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":171,"author":{"gitId":"jorrdansoh"},"content":"\u003ctable\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":172,"author":{"gitId":"jorrdansoh"},"content":"\u003ctr\u003e\u003cth\u003eParameter Name\u003c/th\u003e\u003cth\u003eDescription\u003c/th\u003e\u003cth\u003eExample\u003c/th\u003e\u003c/tr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":173,"author":{"gitId":"jorrdansoh"},"content":"\u003ctr\u003e\u003ctd\u003e\u003cpre\u003eNAME\u003c/pre\u003e\u003c/td\u003e\u003ctd\u003eThe name of the student. \u003cbr\u003e\u003cbr\u003e It must be an alphanumeric word.\u003c/td\u003e\u003ctd\u003eE.g. Typing \u003ccode\u003eJohn Doe\u003c/code\u003e would represent the name of the student saved in the list.\u003c/td\u003e\u003c/tr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":174,"author":{"gitId":"jorrdansoh"},"content":"\u003ctr\u003e\u003ctd\u003e\u003cpre\u003eTELEGRAM_HANDLE\u003c/pre\u003e\u003c/td\u003e\u003ctd\u003eThe Telegram handle of the student. \u003cbr\u003e \u003cbr\u003e The Telegram handle can only contain alphanumeric characters and underscores. \u003cbr\u003e \u003cbr\u003e It must also be between 5 and 32 characters long.\u003c/td\u003e\u003ctd\u003e\u003ccode\u003ejohndoe_123\u003c/code\u003e\u003c/td\u003e\u003c/tr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":175,"author":{"gitId":"jorrdansoh"},"content":"\u003ctr\u003e\u003ctd\u003e\u003cpre\u003eCONSULTATION_DATE\u003c/pre\u003e\u003c/td\u003e\u003ctd\u003eThe consultation date of the student. \u003cbr\u003e \u003cbr\u003e It must be a valid date in the \u003ccode\u003e YYYY-MM-DD \u003c/code\u003e format, where the year is between 1900 and 2999.\u003c/td\u003e\u003ctd\u003eE.g. \u003ccode\u003e2022-09-27\u003c/code\u003e would represent the student\u0027s consultation date of 27 September 2022.\u003c/td\u003e\u003c/tr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":176,"author":{"gitId":"jorrdansoh"},"content":"\u003ctr\u003e\u003ctd\u003e\u003cpre\u003eMASTERY_CHECK_DATE\u003c/pre\u003e\u003c/td\u003e\u003ctd\u003eThe Mastery Check date of the student. \u003cbr\u003e \u003cbr\u003e It must be a valid date in the \u003ccode\u003e YYYY-MM-DD \u003c/code\u003e format, where the year is between 1900 and 2999.\u003c/td\u003e\u003ctd\u003eE.g. \u003ccode\u003e2022-08-30\u003c/code\u003e would represent the student\u0027s Mastery Check date of 30 August 2022.\u003c/td\u003e\u003c/tr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":177,"author":{"gitId":"Yuvaraj0702"},"content":"\u003ctr\u003e\u003ctd\u003e\u003cpre\u003eTAG\u003c/pre\u003e\u003c/td\u003e\u003ctd\u003eThe additional information you want to attach to the student. \u003c/td\u003e\u003ctd\u003eE.g. Typing \u003ccode\u003ecool guy\u003c/code\u003e would mean that \"cool guy\" is an additional information associated with the student.\u003c/td\u003e\u003c/tr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":178,"author":{"gitId":"jorrdansoh"},"content":"\u003ctr\u003e\u003ctd\u003e\u003cpre\u003eREMARK\u003c/pre\u003e\u003c/td\u003e\u003ctd\u003eThe remark you want to add for the student. \u003c/td\u003e\u003ctd\u003eE.g. Typing \u003ccode\u003eNeeds more help\u003c/code\u003e would mean that \"Needs more help\" is an additional information associated with the student.\u003c/td\u003e\u003c/tr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":179,"author":{"gitId":"jorrdansoh"},"content":"\u003ctr\u003e\u003ctd\u003e\u003cpre\u003eINDEX\u003c/pre\u003e\u003c/td\u003e\u003ctd\u003eThe index of the student in the displayed list. \u003cbr\u003e \u003cbr\u003e It must be a valid and positive index number.\u003c/td\u003e\u003ctd\u003eE.g. Typing \u003ccode\u003e2\u003c/code\u003e would mean the student at the second position in the displayed list.\u003c/td\u003e\u003c/tr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":180,"author":{"gitId":"jorrdansoh"},"content":"\u003c/table\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":182,"author":{"gitId":"jorrdansoh"},"content":"### Adding a student: `add`","lastModifiedDate":"2022-09-27"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"darrtzj"},"content":"Adds a student to FRIDAY, with the given name, [Telegram handle](#glossary), consultation date, [Mastery Check](#glossary) date, and tags.","lastModifiedDate":"2022-11-07"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":186,"author":{"gitId":"jorrdansoh"},"content":"Format: `add n/NAME [t/TELEGRAM_HANDLE] [c/CONSULTATION_DATE] [m/MASTERY_CHECK_DATE] [tag/TAG]...`","lastModifiedDate":"2022-10-11"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":188,"author":{"gitId":"darrtzj"},"content":"* The student details and their associated [prefixes](#glossary) are:","lastModifiedDate":"2022-11-07"},{"lineNumber":189,"author":{"gitId":"kaij77"},"content":"    * Name - `n`","lastModifiedDate":"2022-11-07"},{"lineNumber":190,"author":{"gitId":"kaij77"},"content":"    * Telegram Handle - `t`","lastModifiedDate":"2022-11-07"},{"lineNumber":191,"author":{"gitId":"kaij77"},"content":"    * Consultation date - `c`","lastModifiedDate":"2022-11-07"},{"lineNumber":192,"author":{"gitId":"kaij77"},"content":"    * Mastery Check date - `m`","lastModifiedDate":"2022-11-07"},{"lineNumber":193,"author":{"gitId":"kaij77"},"content":"    * Tags - `tag`","lastModifiedDate":"2022-11-07"},{"lineNumber":194,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":195,"author":{"gitId":"jorrdansoh"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":196,"author":{"gitId":"jorrdansoh"},"content":"**:information_source: Note:** \u003cbr\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":197,"author":{"gitId":"jorrdansoh"},"content":"* All student names and Telegram handles in FRIDAY must be unique.","lastModifiedDate":"2022-11-05"},{"lineNumber":198,"author":{"gitId":"jorrdansoh"},"content":"* Names and Telegram handles are case-insensitive.","lastModifiedDate":"2022-11-05"},{"lineNumber":199,"author":{"gitId":"jorrdansoh"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":200,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":201,"author":{"gitId":"HowSuen"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":202,"author":{"gitId":"jorrdansoh"},"content":"**:bulb: Tip:** \u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":203,"author":{"gitId":"HowSuen"},"content":"* A student can have any number of tags (including 0).","lastModifiedDate":"2022-11-06"},{"lineNumber":204,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":207,"author":{"gitId":"jorrdansoh"},"content":"Example: `add n/Alex Yeoh t/al3xx c/2022-10-25 m/2022-08-16 tag/cool guy tag/quiet`","lastModifiedDate":"2022-11-05"},{"lineNumber":208,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":209,"author":{"gitId":"jorrdansoh"},"content":"Outcome: a student named Alex Yeoh is added.","lastModifiedDate":"2022-11-01"},{"lineNumber":210,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":211,"author":{"gitId":"jorrdansoh"},"content":"![AddCommandOutcome.png](images/AddCommandOutcome.png)","lastModifiedDate":"2022-10-25"},{"lineNumber":212,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":213,"author":{"gitId":"kaij77"},"content":"### Deleting a student: `delete`","lastModifiedDate":"2022-09-27"},{"lineNumber":214,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":215,"author":{"gitId":"kaij77"},"content":"You may need to delete students from your list in certain cases, such as when they decide to drop the module. The `delete` function allows you to do this and deletes the student at the given index from FRIDAY.","lastModifiedDate":"2022-11-07"},{"lineNumber":216,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":217,"author":{"gitId":"HowSuen"},"content":"Format: `delete INDEX`","lastModifiedDate":"2022-10-12"},{"lineNumber":218,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":219,"author":{"gitId":"jorrdansoh"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":220,"author":{"gitId":"HowSuen"},"content":"**:information_source: Note:** \u003cbr\u003e","lastModifiedDate":"2022-11-06"},{"lineNumber":221,"author":{"gitId":"HowSuen"},"content":"* The index of the student must be specified and there should be exactly one INDEX parameter.","lastModifiedDate":"2022-11-06"},{"lineNumber":222,"author":{"gitId":"jorrdansoh"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":223,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":224,"author":{"gitId":"HowSuen"},"content":"### Editing a student: `edit`","lastModifiedDate":"2022-09-28"},{"lineNumber":225,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":226,"author":{"gitId":"darrtzj"},"content":"You may not have all your students\u0027 details at the start, or you may have typed in the wrong details for a specific student. You can use the `edit` feature to add in or edit a student\u0027s details after getting this information. This feature is also useful for adding [Mastery Check](#glossary) and Consultation dates you have scheduled with your students.","lastModifiedDate":"2022-11-07"},{"lineNumber":227,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":228,"author":{"gitId":"HowSuen"},"content":"Format: `edit INDEX [n/NAME] [t/TELEGRAM_HANDLE] [c/CONSULTATION] [m/MASTERY_CHECK] [tag/TAG]...`","lastModifiedDate":"2022-11-06"},{"lineNumber":229,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":230,"author":{"gitId":"HowSuen"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2022-11-06"},{"lineNumber":231,"author":{"gitId":"HowSuen"},"content":"**:information_source: Note:** \u003cbr\u003e","lastModifiedDate":"2022-11-06"},{"lineNumber":232,"author":{"gitId":"HowSuen"},"content":"* The index of the student must be specified and there should be exactly one INDEX parameter.","lastModifiedDate":"2022-11-06"},{"lineNumber":233,"author":{"gitId":"HowSuen"},"content":"* You can choose which field to edit for the student. Name, Telegram handle, consultation, Mastery Check, and tag(s) are","lastModifiedDate":"2022-11-06"},{"lineNumber":234,"author":{"gitId":"HowSuen"},"content":"optional fields, but there should be at least one field specified for the `edit` command to be valid.\u003cbr\u003e","lastModifiedDate":"2022-11-06"},{"lineNumber":235,"author":{"gitId":"HowSuen"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-11-06"},{"lineNumber":236,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":237,"author":{"gitId":"HowSuen"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":238,"author":{"gitId":"jorrdansoh"},"content":"**:bulb: Tip:** \u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":239,"author":{"gitId":"HowSuen"},"content":"* A student can have any number of tags (including 0).","lastModifiedDate":"2022-11-06"},{"lineNumber":240,"author":{"gitId":"HowSuen"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":241,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":242,"author":{"gitId":"HowSuen"},"content":"Example: `edit 1 n/Alex Yap t/AlexYap tag/Experienced coder tag/Intern m/2022-11-06 c/2022-10-10`","lastModifiedDate":"2022-11-06"},{"lineNumber":243,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":244,"author":{"gitId":"HowSuen"},"content":"Initial: A student with name \"Alex Yeoh\", with the following details: Telegram handle as \"@al3xx\", Mastery Check date","lastModifiedDate":"2022-11-06"},{"lineNumber":245,"author":{"gitId":"HowSuen"},"content":"on 2022-08-16, consultation date on 2022-11-11, and a tag \"Colour blind\".","lastModifiedDate":"2022-11-06"},{"lineNumber":246,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":247,"author":{"gitId":"HowSuen"},"content":"![EditCommandInitial.png](images/EditCommandInitial.png)","lastModifiedDate":"2022-11-06"},{"lineNumber":248,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":249,"author":{"gitId":"HowSuen"},"content":"Outcome: Student\u0027s name changed to \"Alex Yap\", along with the following changed details: Telegram handle as \"@AlexYap\",","lastModifiedDate":"2022-11-06"},{"lineNumber":250,"author":{"gitId":"HowSuen"},"content":"Mastery Check date as 2022-11-06, consultation date as 2022-10-10, and tags as \"Experienced coder\" and \"Intern\".","lastModifiedDate":"2022-11-06"},{"lineNumber":251,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":252,"author":{"gitId":"HowSuen"},"content":"![EditCommandOutcome.png](images/EditCommandOutcome.png)","lastModifiedDate":"2022-11-06"},{"lineNumber":253,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":254,"author":{"gitId":"HowSuen"},"content":"### Editing a remark for a student: `remark`","lastModifiedDate":"2022-10-21"},{"lineNumber":255,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":256,"author":{"gitId":"kaij77"},"content":"You may have noted something interesting about a student, which you wish to save as a remark in your list. The `remark` feature allows you to add this remark to the specified student.","lastModifiedDate":"2022-11-07"},{"lineNumber":257,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":258,"author":{"gitId":"HowSuen"},"content":"Format: `remark INDEX [r/REMARK]`","lastModifiedDate":"2022-10-19"},{"lineNumber":259,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":260,"author":{"gitId":"HowSuen"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2022-11-06"},{"lineNumber":261,"author":{"gitId":"HowSuen"},"content":"**:information_source: Note:** \u003cbr\u003e","lastModifiedDate":"2022-11-06"},{"lineNumber":262,"author":{"gitId":"HowSuen"},"content":"* The index of the student must be specified and there should be exactly one INDEX parameter.","lastModifiedDate":"2022-11-06"},{"lineNumber":263,"author":{"gitId":"HowSuen"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-11-06"},{"lineNumber":264,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":265,"author":{"gitId":"HowSuen"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":266,"author":{"gitId":"jorrdansoh"},"content":"**:bulb: Tip:** \u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":267,"author":{"gitId":"HowSuen"},"content":"* The remark is optional. If you do not include the remark (i.e. input `remark INDEX` as your command), FRIDAY will ","lastModifiedDate":"2022-11-06"},{"lineNumber":268,"author":{"gitId":"HowSuen"},"content":"remove any existing remark for the specified student.\u003cbr\u003e","lastModifiedDate":"2022-11-06"},{"lineNumber":269,"author":{"gitId":"HowSuen"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":270,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":271,"author":{"gitId":"HowSuen"},"content":"Example: `remark 1 r/Aspiring to be a CS1101S TA for next year`","lastModifiedDate":"2022-11-06"},{"lineNumber":272,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":273,"author":{"gitId":"HowSuen"},"content":"Outcome: The student at the 1st index (Alex Yap) will have the remark \"Aspiring to be a CS1101S TA for next year\".","lastModifiedDate":"2022-11-06"},{"lineNumber":274,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":275,"author":{"gitId":"HowSuen"},"content":"![RemarkCommandOutcome.png](images/RemarkCommandOutcome.png)","lastModifiedDate":"2022-11-06"},{"lineNumber":276,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":277,"author":{"gitId":"darrtzj"},"content":"[Table of Contents](#table-of-contents)","lastModifiedDate":"2022-11-07"},{"lineNumber":278,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":279,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":280,"author":{"gitId":"Yuvaraj0702"},"content":"## Organizing students","lastModifiedDate":"2022-11-07"},{"lineNumber":281,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":282,"author":{"gitId":"kaij77"},"content":"These features allow you to organize your list of students to suit your needs.","lastModifiedDate":"2022-11-07"},{"lineNumber":283,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":284,"author":{"gitId":"jorrdansoh"},"content":"### Command Parameters","lastModifiedDate":"2022-11-07"},{"lineNumber":285,"author":{"gitId":"darrtzj"},"content":"Before you dive into using the features, you may want to have a look at the [parameters](#glossary) used.","lastModifiedDate":"2022-11-07"},{"lineNumber":286,"author":{"gitId":"jorrdansoh"},"content":"The table below shows a list of command parameters that will be used.","lastModifiedDate":"2022-11-07"},{"lineNumber":287,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":288,"author":{"gitId":"jorrdansoh"},"content":"\u003ctable\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":289,"author":{"gitId":"jorrdansoh"},"content":"\u003ctr\u003e\u003cth\u003eParameter Name\u003c/th\u003e\u003cth\u003eDescription\u003c/th\u003e\u003cth\u003eExample\u003c/th\u003e\u003c/tr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":290,"author":{"gitId":"jorrdansoh"},"content":"\u003ctr\u003e\u003ctd\u003e\u003cpre\u003eCRITERIA\u003c/pre\u003e\u003c/td\u003e\u003ctd\u003eThe criteria the displayed student list is sorted by.\u003c/td\u003e\u003ctd\u003eE.g. Typing \u003ccode\u003en\u003c/code\u003e would mean the displayed student list is sorted by students\u0027 names.\u003c/td\u003e\u003c/tr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":291,"author":{"gitId":"jorrdansoh"},"content":"\u003ctr\u003e\u003ctd\u003e\u003cpre\u003eORDER\u003c/pre\u003e\u003c/td\u003e\u003ctd\u003eThe order the displayed student list is sorted in.\u003c/td\u003e\u003ctd\u003eE.g. Typing \u003ccode\u003ea\u003c/code\u003e would mean the displayed student list is sorted in ascending order.\u003c/td\u003e\u003c/tr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":292,"author":{"gitId":"jorrdansoh"},"content":"\u003ctr\u003e\u003ctd\u003e\u003cpre\u003eKEYWORDS\u003c/pre\u003e\u003c/td\u003e\u003ctd\u003eThe keywords to search with to find students\u0027 information. \u003c/td\u003e\u003ctd\u003eE.g. Typing \u003ccode\u003ecool guy\u003c/code\u003e would represent finding students with the information \"cool guy\" associated with them.\u003c/td\u003e\u003c/tr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":293,"author":{"gitId":"jorrdansoh"},"content":"\u003c/table\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":294,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":295,"author":{"gitId":"Yuvaraj0702"},"content":"### Sorting students: `sort`","lastModifiedDate":"2022-11-07"},{"lineNumber":296,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":297,"author":{"gitId":"darrtzj"},"content":"Sorts all students in FRIDAY with the given criteria, in ascending or descending order. This will come in useful by allowing you to see which students have [Mastery Checks](#glossary) closest to the current date by sorting the list according to the students\u0027 Mastery Check dates, as shown in the example below.","lastModifiedDate":"2022-11-07"},{"lineNumber":298,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":299,"author":{"gitId":"Yuvaraj0702"},"content":"Format: `sort CRITERIA/ORDER`","lastModifiedDate":"2022-11-07"},{"lineNumber":300,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":301,"author":{"gitId":"Yuvaraj0702"},"content":"* `CRITERIA` can be","lastModifiedDate":"2022-11-07"},{"lineNumber":302,"author":{"gitId":"Yuvaraj0702"},"content":"    * `n` (name)","lastModifiedDate":"2022-11-07"},{"lineNumber":303,"author":{"gitId":"darrtzj"},"content":"    * `t` ([Telegram handle](#glossary))","lastModifiedDate":"2022-11-07"},{"lineNumber":304,"author":{"gitId":"Yuvaraj0702"},"content":"    * `c` (consultation)","lastModifiedDate":"2022-11-07"},{"lineNumber":305,"author":{"gitId":"darrtzj"},"content":"    * `m` ([Mastery Check](#glossary))","lastModifiedDate":"2022-11-07"},{"lineNumber":306,"author":{"gitId":"darrtzj"},"content":"    * `ra1` ([Reading Assessment 1](#glossary))","lastModifiedDate":"2022-11-07"},{"lineNumber":307,"author":{"gitId":"darrtzj"},"content":"    * `ra2` ([Reading Assessment 2](#glossary))","lastModifiedDate":"2022-11-07"},{"lineNumber":308,"author":{"gitId":"darrtzj"},"content":"    * `pa` ([Practical Assessment](#glossary))","lastModifiedDate":"2022-11-07"},{"lineNumber":309,"author":{"gitId":"darrtzj"},"content":"    * `mt` ([Midterm Test](#glossary))","lastModifiedDate":"2022-11-07"},{"lineNumber":310,"author":{"gitId":"darrtzj"},"content":"    * `ft` ([Final Examination](#glossary))","lastModifiedDate":"2022-11-07"},{"lineNumber":311,"author":{"gitId":"Yuvaraj0702"},"content":"* `ORDER` can be","lastModifiedDate":"2022-11-07"},{"lineNumber":312,"author":{"gitId":"Yuvaraj0702"},"content":"    * `a` (ascending)","lastModifiedDate":"2022-11-07"},{"lineNumber":313,"author":{"gitId":"Yuvaraj0702"},"content":"    * `d` (descending)","lastModifiedDate":"2022-11-07"},{"lineNumber":314,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":315,"author":{"gitId":"Yuvaraj0702"},"content":"How criteria are sorted:","lastModifiedDate":"2022-11-07"},{"lineNumber":316,"author":{"gitId":"Yuvaraj0702"},"content":"* Names and Telegram handles - alphabetical order","lastModifiedDate":"2022-11-07"},{"lineNumber":317,"author":{"gitId":"Yuvaraj0702"},"content":"* Consultations and Mastery Checks - chronological order","lastModifiedDate":"2022-11-07"},{"lineNumber":318,"author":{"gitId":"Yuvaraj0702"},"content":"* Grades - numerical order","lastModifiedDate":"2022-11-07"},{"lineNumber":319,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":320,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":321,"author":{"gitId":"HowSuen"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2022-11-06"},{"lineNumber":322,"author":{"gitId":"HowSuen"},"content":"**:information_source: Note:**\u003cbr\u003e","lastModifiedDate":"2022-11-06"},{"lineNumber":323,"author":{"gitId":"Yuvaraj0702"},"content":"* If the `find` command was run before `sort`, using `sort` will undo the result of `find` and all students will be sorted.","lastModifiedDate":"2022-11-07"},{"lineNumber":324,"author":{"gitId":"Yuvaraj0702"},"content":"* Students with missing information will be sorted first in descending order, e.g. students with no Telegram handles","lastModifiedDate":"2022-11-07"},{"lineNumber":325,"author":{"gitId":"Yuvaraj0702"},"content":"  will be shown before students with Telegram handles.","lastModifiedDate":"2022-11-07"},{"lineNumber":326,"author":{"gitId":"HowSuen"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":327,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":328,"author":{"gitId":"kaij77"},"content":"Example: Enter `sort m/a` with an unsorted list of students.","lastModifiedDate":"2022-11-07"},{"lineNumber":329,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":330,"author":{"gitId":"Yuvaraj0702"},"content":"![SortCommand.png](images/SortCommand.png)","lastModifiedDate":"2022-11-07"},{"lineNumber":331,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":332,"author":{"gitId":"kaij77"},"content":"Outcome: Students are sorted by Mastery Check date, from earliest to latest.","lastModifiedDate":"2022-11-07"},{"lineNumber":333,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":334,"author":{"gitId":"Yuvaraj0702"},"content":"![SortCommandOutcome.png](images/SortCommandOutcome.png)","lastModifiedDate":"2022-11-07"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":336,"author":{"gitId":"jorrdansoh"},"content":"### Finding individual student details: `find`","lastModifiedDate":"2022-10-19"},{"lineNumber":337,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":338,"author":{"gitId":"kaij77"},"content":"You can search for keywords using the `find` command and FRIDAY will show you the students whose details match these keywords.","lastModifiedDate":"2022-11-07"},{"lineNumber":339,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":340,"author":{"gitId":"Yuvaraj0702"},"content":"Format: `find KEYWORDS`","lastModifiedDate":"2022-10-29"},{"lineNumber":341,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":342,"author":{"gitId":"jorrdansoh"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":343,"author":{"gitId":"jorrdansoh"},"content":"**:bulb: Tip:** \u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":344,"author":{"gitId":"jorrdansoh"},"content":"* Use student name/telegram handle/consultation/mastery check date/remark to search up a particular student.","lastModifiedDate":"2022-11-07"},{"lineNumber":345,"author":{"gitId":"jorrdansoh"},"content":"* Multiple keywords can be entered and each keyword is separated by a space.","lastModifiedDate":"2022-11-07"},{"lineNumber":346,"author":{"gitId":"jorrdansoh"},"content":"* When searching for exam grade, use the format `find [exam_name:EXAM_SCORE]`.","lastModifiedDate":"2022-11-07"},{"lineNumber":347,"author":{"gitId":"jorrdansoh"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":348,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":349,"author":{"gitId":"kaij77"},"content":"Example: Enter `find alex`","lastModifiedDate":"2022-11-07"},{"lineNumber":350,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":351,"author":{"gitId":"Yuvaraj0702"},"content":"![FindCommand.png](images/FindCommand.png)","lastModifiedDate":"2022-10-25"},{"lineNumber":352,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":353,"author":{"gitId":"kaij77"},"content":"Outcome: The only student in the list whose details match the keyword \"alex\" is shown.","lastModifiedDate":"2022-11-07"},{"lineNumber":354,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":355,"author":{"gitId":"Yuvaraj0702"},"content":"![FindCommandOutcome.png](images/FindCommandOutcome.png)","lastModifiedDate":"2022-10-25"},{"lineNumber":356,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":357,"author":{"gitId":"darrtzj"},"content":"### Viewing all students: `list`","lastModifiedDate":"2022-09-27"},{"lineNumber":358,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":359,"author":{"gitId":"darrtzj"},"content":"Lists all students in FRIDAY. This helps you to reset the sorting and finding done by the `sort` and `find` commands respectively.","lastModifiedDate":"2022-11-07"},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":361,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2022-09-27"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":363,"author":{"gitId":"darrtzj"},"content":"[Table of Contents](#table-of-contents)","lastModifiedDate":"2022-11-07"},{"lineNumber":364,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":365,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":366,"author":{"gitId":"Yuvaraj0702"},"content":"## Grading students","lastModifiedDate":"2022-11-07"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":368,"author":{"gitId":"kaij77"},"content":"These features allow you to record your students grades.","lastModifiedDate":"2022-11-07"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":370,"author":{"gitId":"jorrdansoh"},"content":"### Command Parameters","lastModifiedDate":"2022-11-07"},{"lineNumber":371,"author":{"gitId":"darrtzj"},"content":"Before you dive into using the features, you may want to have a look at the [parameters](#glossary) used.","lastModifiedDate":"2022-11-07"},{"lineNumber":372,"author":{"gitId":"jorrdansoh"},"content":"The table below shows a list of command parameters that will be used.","lastModifiedDate":"2022-11-07"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":374,"author":{"gitId":"jorrdansoh"},"content":"\u003ctable\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":375,"author":{"gitId":"jorrdansoh"},"content":"\u003ctr\u003e\u003cth\u003eParameter Name\u003c/th\u003e\u003cth\u003eDescription\u003c/th\u003e\u003cth\u003eExample\u003c/th\u003e\u003c/tr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":376,"author":{"gitId":"jorrdansoh"},"content":"\u003ctr\u003e\u003ctd\u003e\u003cpre\u003eRA1_SCORE\u003c/pre\u003e\u003c/td\u003e\u003ctd\u003eThe student\u0027s score for the first Reading Assessment. \u003cbr\u003e\u003cbr\u003e The following applies to all `SCORE` parameters: \u003cbr\u003e They must be numerical (up to two decimal places), and represent percentages. \u003c/td\u003e\u003ctd\u003eE.g. \u003ccode\u003e 70 \u003c/code\u003e \u003c/td\u003e\u003c/tr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":377,"author":{"gitId":"jorrdansoh"},"content":"\u003ctr\u003e\u003ctd\u003e\u003cpre\u003eRA2_SCORE\u003c/pre\u003e\u003c/td\u003e\u003ctd\u003eThe student\u0027s score for the second Reading Assessment. \u003c/td\u003e\u003ctd\u003eE.g. \u003ccode\u003e 89 \u003c/code\u003e \u003c/td\u003e\u003c/tr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":378,"author":{"gitId":"jorrdansoh"},"content":"\u003ctr\u003e\u003ctd\u003e\u003cpre\u003ePRACTICAL_SCORE\u003c/pre\u003e\u003c/td\u003e\u003ctd\u003eThe student\u0027s score for the Practical Assessment. \u003c/td\u003e\u003ctd\u003eE.g. \u003ccode\u003e 68.50 \u003c/code\u003e \u003c/td\u003e\u003c/tr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":379,"author":{"gitId":"jorrdansoh"},"content":"\u003ctr\u003e\u003ctd\u003e\u003cpre\u003eMIDTERM_SCORE\u003c/pre\u003e\u003c/td\u003e\u003ctd\u003eThe student\u0027s score for the Midterm Test. \u003c/td\u003e\u003ctd\u003eE.g. \u003ccode\u003e 100 \u003c/code\u003e \u003c/td\u003e\u003c/tr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":380,"author":{"gitId":"jorrdansoh"},"content":"\u003ctr\u003e\u003ctd\u003e\u003cpre\u003eFINALS_SCORE\u003c/pre\u003e\u003c/td\u003e\u003ctd\u003eThe student\u0027s score for the Final Examination. \u003c/td\u003e\u003ctd\u003eE.g. \u003ccode\u003e 95.5 \u003c/code\u003e \u003c/td\u003e\u003c/tr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":381,"author":{"gitId":"jorrdansoh"},"content":"\u003ctr\u003e\u003ctd\u003e\u003cpre\u003eINDEX\u003c/pre\u003e\u003c/td\u003e\u003ctd\u003eThe index of the student in the displayed list. \u003c/td\u003e\u003ctd\u003e E.g. Typing \u003ccode\u003e2\u003c/code\u003e would mean the student at the second position in the displayed list.\u003c/td\u003e\u003c/tr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":382,"author":{"gitId":"jorrdansoh"},"content":"\u003c/table\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":384,"author":{"gitId":"Yuvaraj0702"},"content":"### Recording grades for a student: `grade`","lastModifiedDate":"2022-11-07"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":386,"author":{"gitId":"kaij77"},"content":"The `grade` command allows you to record the grades obtained for the assessments and examinations by a specified student.","lastModifiedDate":"2022-11-07"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":388,"author":{"gitId":"jorrdansoh"},"content":"Format: `grade INDEX [ra1/RA1_SCORE] [ra2/RA2_SCORE] [pa/PRACTICAL_SCORE] [mt/MIDTERM_SCORE] [ft/FINALS_SCORE]`","lastModifiedDate":"2022-11-07"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":390,"author":{"gitId":"Yuvaraj0702"},"content":"* The examinations and their associated prefixes are:","lastModifiedDate":"2022-11-07"},{"lineNumber":391,"author":{"gitId":"darrtzj"},"content":"  * [Reading Assessment 1](#glossary) - `ra1`","lastModifiedDate":"2022-11-07"},{"lineNumber":392,"author":{"gitId":"darrtzj"},"content":"  * [Reading Assessment 2](#glossary) - `ra2`","lastModifiedDate":"2022-11-07"},{"lineNumber":393,"author":{"gitId":"darrtzj"},"content":"  * [Practical Assessment](#glossary) - `pa`","lastModifiedDate":"2022-11-07"},{"lineNumber":394,"author":{"gitId":"darrtzj"},"content":"  * [Midterm Test](#glossary) - `mt`","lastModifiedDate":"2022-11-07"},{"lineNumber":395,"author":{"gitId":"darrtzj"},"content":"  * [Final Test](#glossary) `ft`","lastModifiedDate":"2022-11-07"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":397,"author":{"gitId":"jorrdansoh"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":398,"author":{"gitId":"jorrdansoh"},"content":"**:information_source: Note:** \u003cbr\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":399,"author":{"gitId":"jorrdansoh"},"content":"* The index of the student must be specified and there should be exactly one `INDEX` parameter.","lastModifiedDate":"2022-11-07"},{"lineNumber":400,"author":{"gitId":"jorrdansoh"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":401,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":402,"author":{"gitId":"Yuvaraj0702"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":403,"author":{"gitId":"Yuvaraj0702"},"content":"**:bulb: Tip:** \u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":404,"author":{"gitId":"Yuvaraj0702"},"content":"* The scores are optional, but there should be at least one score specified for `grade` command to be valid.","lastModifiedDate":"2022-11-07"},{"lineNumber":405,"author":{"gitId":"Yuvaraj0702"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":407,"author":{"gitId":"kaij77"},"content":"Example: Enter `grade 1 ra1/90 ra2/80.1 pa/100.00 mt/85.23 ft/78`.","lastModifiedDate":"2022-11-07"},{"lineNumber":408,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":409,"author":{"gitId":"Yuvaraj0702"},"content":"Outcome: The student at the 1st index (Alex Yap) will have their grades updated.","lastModifiedDate":"2022-11-07"},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":411,"author":{"gitId":"Yuvaraj0702"},"content":"![GradeCommand.png](images/GradeCommand.png)","lastModifiedDate":"2022-11-07"},{"lineNumber":412,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":413,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":414,"author":{"gitId":"kaij77"},"content":"### Marking a student\u0027s Mastery Check as passed: `mark`","lastModifiedDate":"2022-10-20"},{"lineNumber":415,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":416,"author":{"gitId":"darrtzj"},"content":"After a student has passed their [Mastery Check](#glossary), you can use the `mark` command to mark their Mastery Check as passed. This will update the list of students with the status of the specified student\u0027s Mastery Check.","lastModifiedDate":"2022-11-07"},{"lineNumber":417,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":418,"author":{"gitId":"kaij77"},"content":"The Mastery Check of a student can only be marked as passed if:","lastModifiedDate":"2022-11-07"},{"lineNumber":419,"author":{"gitId":"kaij77"},"content":"1. It has not already been marked as passed.","lastModifiedDate":"2022-11-07"},{"lineNumber":420,"author":{"gitId":"kaij77"},"content":"2. The student has a scheduled Mastery Check date (i.e. the student\u0027s Mastery Check field is not empty).","lastModifiedDate":"2022-11-07"},{"lineNumber":421,"author":{"gitId":"kaij77"},"content":"3. The scheduled date of the Mastery Check is not beyond the current date.","lastModifiedDate":"2022-11-07"},{"lineNumber":422,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":423,"author":{"gitId":"kaij77"},"content":"Format: `mark INDEX`","lastModifiedDate":"2022-10-20"},{"lineNumber":424,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":425,"author":{"gitId":"jorrdansoh"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":426,"author":{"gitId":"jorrdansoh"},"content":"**:information_source: Note:** \u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":427,"author":{"gitId":"jorrdansoh"},"content":"* The index of the student must be specified and there should be exactly one `INDEX` parameter.","lastModifiedDate":"2022-11-07"},{"lineNumber":428,"author":{"gitId":"kaij77"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":429,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":430,"author":{"gitId":"kaij77"},"content":"Example: Enter `mark 1`.","lastModifiedDate":"2022-11-07"},{"lineNumber":431,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":432,"author":{"gitId":"kaij77"},"content":"![MarkCommandBefore.png](images/MarkCommandBefore.png)","lastModifiedDate":"2022-11-07"},{"lineNumber":433,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":434,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":435,"author":{"gitId":"kaij77"},"content":"Outcome: The Mastery Check of the first student in the list has been marked as passed.","lastModifiedDate":"2022-11-07"},{"lineNumber":436,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":437,"author":{"gitId":"kaij77"},"content":"![MarkCommandOutcome.png](images/MarkCommandOutcome.png)","lastModifiedDate":"2022-10-27"},{"lineNumber":438,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":439,"author":{"gitId":"kaij77"},"content":"As you can see, a \"(passed)\" status is added to student 1\u0027s Mastery Check after the `mark` command is run.","lastModifiedDate":"2022-11-07"},{"lineNumber":440,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":441,"author":{"gitId":"kaij77"},"content":"### Unmarking a student\u0027s Mastery Check: `unmark`","lastModifiedDate":"2022-10-25"},{"lineNumber":442,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":443,"author":{"gitId":"darrtzj"},"content":"Unmarks the [Mastery Check](#glossary) of a specified student and removes its \"(passed)\" status. This will come in handy if you accidentally mark the Mastery Check of a student as passed, even though that is not the case.","lastModifiedDate":"2022-11-07"},{"lineNumber":444,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":445,"author":{"gitId":"kaij77"},"content":"The Mastery Check of a student can only be unmarked if:","lastModifiedDate":"2022-11-07"},{"lineNumber":446,"author":{"gitId":"kaij77"},"content":"1. It has already been marked as passed.","lastModifiedDate":"2022-11-07"},{"lineNumber":447,"author":{"gitId":"kaij77"},"content":"2. The student has a scheduled Mastery Check date (i.e. the student\u0027s Mastery Check field is not empty)","lastModifiedDate":"2022-11-07"},{"lineNumber":448,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":449,"author":{"gitId":"kaij77"},"content":"Format: `unmark INDEX`","lastModifiedDate":"2022-10-25"},{"lineNumber":450,"author":{"gitId":"jorrdansoh"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":451,"author":{"gitId":"jorrdansoh"},"content":"**:information_source: Note:** \u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":452,"author":{"gitId":"jorrdansoh"},"content":"* The index of the student must be specified and there should be exactly one `INDEX` parameter.","lastModifiedDate":"2022-11-07"},{"lineNumber":453,"author":{"gitId":"kaij77"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":454,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":455,"author":{"gitId":"kaij77"},"content":"Example before entering `unmark 1` (Assuming student 1\u0027s Mastery Check has previously been marked as passed):","lastModifiedDate":"2022-11-07"},{"lineNumber":456,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":457,"author":{"gitId":"kaij77"},"content":"![UnmarkCommandBefore.png](images/UnmarkCommandBefore.png)","lastModifiedDate":"2022-11-07"},{"lineNumber":458,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":459,"author":{"gitId":"kaij77"},"content":"Example after entering `unmark 1`:","lastModifiedDate":"2022-11-07"},{"lineNumber":460,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":461,"author":{"gitId":"kaij77"},"content":"![UnmarkCommandOutcome.png](images/UnmarkCommandOutcome.png)","lastModifiedDate":"2022-10-27"},{"lineNumber":462,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":463,"author":{"gitId":"kaij77"},"content":"As you can see, the \"(passed)\" status has been removed from student 1\u0027s Mastery Check after the `unmark` command is run.","lastModifiedDate":"2022-11-07"},{"lineNumber":464,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":465,"author":{"gitId":"Yuvaraj0702"},"content":"## Features for advanced users","lastModifiedDate":"2022-11-07"},{"lineNumber":466,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":467,"author":{"gitId":"kaij77"},"content":"These features help you personalize your FRIDAY experience and improve your productivity when using FRIDAY.","lastModifiedDate":"2022-11-07"},{"lineNumber":468,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":469,"author":{"gitId":"jorrdansoh"},"content":"### Command Parameters","lastModifiedDate":"2022-11-07"},{"lineNumber":470,"author":{"gitId":"jorrdansoh"},"content":"Before you dive into using the features, you may want to have a look at the parameters used.","lastModifiedDate":"2022-11-07"},{"lineNumber":471,"author":{"gitId":"jorrdansoh"},"content":"The table below shows a list of command parameters that will be used.","lastModifiedDate":"2022-11-07"},{"lineNumber":472,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":473,"author":{"gitId":"jorrdansoh"},"content":"\u003ctable\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":474,"author":{"gitId":"jorrdansoh"},"content":"\u003ctr\u003e\u003cth\u003eParameter Name\u003c/th\u003e\u003cth\u003eDescription\u003c/th\u003e\u003cth\u003eExample\u003c/th\u003e\u003c/tr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":475,"author":{"gitId":"jorrdansoh"},"content":"\u003ctr\u003e\u003ctd\u003e\u003cpre\u003eALIAS\u003c/pre\u003e\u003c/td\u003e\u003ctd\u003eAn alias that you can set for a command. \u003c/td\u003e\u003ctd\u003eE.g. \u003ccode\u003e a \u003c/code\u003e \u003c/td\u003e\u003c/tr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":476,"author":{"gitId":"jorrdansoh"},"content":"\u003ctr\u003e\u003ctd\u003e\u003cpre\u003eCOMMAND_KEYWORD\u003c/pre\u003e\u003c/td\u003e\u003ctd\u003e The command keyword of the original command. \u003c/td\u003e\u003ctd\u003eE.g. \u003ccode\u003e add \u003c/code\u003e \u003c/td\u003e\u003c/tr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":477,"author":{"gitId":"jorrdansoh"},"content":"\u003c/table\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":478,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":479,"author":{"gitId":"darrtzj"},"content":"### Adding aliases: `alias`","lastModifiedDate":"2022-10-25"},{"lineNumber":480,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":481,"author":{"gitId":"darrtzj"},"content":"Adds an [alias](#glossary) for a command into FRIDAY, which you can use in place of the default command keywords.\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":482,"author":{"gitId":"darrtzj"},"content":"This allows you to be more efficient in using FRIDAY.","lastModifiedDate":"2022-11-01"},{"lineNumber":483,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":484,"author":{"gitId":"darrtzj"},"content":"Format: `alias a/ALIAS k/COMMAND_KEYWORD`","lastModifiedDate":"2022-11-01"},{"lineNumber":485,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":486,"author":{"gitId":"kaij77"},"content":"* `COMMAND_KEYWORD` must be a default command keyword (e.g. `add` in Adding students)","lastModifiedDate":"2022-11-07"},{"lineNumber":487,"author":{"gitId":"darrtzj"},"content":"* `ALIAS` must not be a default command keyword and contain exactly one word","lastModifiedDate":"2022-11-01"},{"lineNumber":488,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":489,"author":{"gitId":"darrtzj"},"content":"Example:","lastModifiedDate":"2022-11-01"},{"lineNumber":490,"author":{"gitId":"darrtzj"},"content":"* `alias a/ls k/list` adds an alias `ls` for the viewing all students command `list`.\u003cbr\u003e","lastModifiedDate":"2022-11-01"},{"lineNumber":491,"author":{"gitId":"darrtzj"},"content":"Now, typing `ls` into the command box will execute the `list` command.","lastModifiedDate":"2022-11-01"},{"lineNumber":492,"author":{"gitId":"darrtzj"},"content":"* `alias a/a k/add` adds an alias `a` for the adding a student command `add`.\u003cbr\u003e","lastModifiedDate":"2022-11-01"},{"lineNumber":493,"author":{"gitId":"darrtzj"},"content":"Now, typing `a n/John Doe` will add a student named John Doe into FRIDAY.","lastModifiedDate":"2022-11-01"},{"lineNumber":494,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":495,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":496,"author":{"gitId":"darrtzj"},"content":"### Deleting aliases: `unalias`","lastModifiedDate":"2022-10-25"},{"lineNumber":497,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":498,"author":{"gitId":"darrtzj"},"content":"Deletes an existing [alias](#glossary), which is no longer needed, in FRIDAY.","lastModifiedDate":"2022-11-07"},{"lineNumber":499,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":500,"author":{"gitId":"darrtzj"},"content":"Format: `unalias a/ALIAS`","lastModifiedDate":"2022-10-25"},{"lineNumber":501,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":502,"author":{"gitId":"darrtzj"},"content":"Example:","lastModifiedDate":"2022-11-01"},{"lineNumber":503,"author":{"gitId":"darrtzj"},"content":"* `unalias a/ls` will delete the alias `ls` if it exists in FRIDAY.","lastModifiedDate":"2022-11-01"},{"lineNumber":504,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":505,"author":{"gitId":"darrtzj"},"content":"### Viewing aliases: `aliaslist`","lastModifiedDate":"2022-11-01"},{"lineNumber":506,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":507,"author":{"gitId":"darrtzj"},"content":"Views all [aliases](#glossary) in FRIDAY, so that you know what aliases you have created and the commands they are for.","lastModifiedDate":"2022-11-07"},{"lineNumber":508,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":509,"author":{"gitId":"darrtzj"},"content":"Format: `aliaslist`","lastModifiedDate":"2022-10-25"},{"lineNumber":510,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":511,"author":{"gitId":"jorrdansoh"},"content":"## Miscellaneous features","lastModifiedDate":"2022-11-07"},{"lineNumber":512,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":513,"author":{"gitId":"jorrdansoh"},"content":"Overview: Other features that aid you in using FRIDAY.","lastModifiedDate":"2022-11-07"},{"lineNumber":514,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":515,"author":{"gitId":"kaij77"},"content":"### Getting User Guide link: `guide`","lastModifiedDate":"2022-10-11"},{"lineNumber":516,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":517,"author":{"gitId":"kaij77"},"content":"If you ever need to refer to our User Guide while using FRIDAY, use this command to obtain the link to FRIDAY\u0027s User Guide.","lastModifiedDate":"2022-11-07"},{"lineNumber":518,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":519,"author":{"gitId":"kaij77"},"content":"Format: `guide`","lastModifiedDate":"2022-10-11"},{"lineNumber":520,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":521,"author":{"gitId":"darrtzj"},"content":"### Getting help: `help`","lastModifiedDate":"2022-10-12"},{"lineNumber":522,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":523,"author":{"gitId":"darrtzj"},"content":"Shows a summary of commands along with their command word used in FRIDAY. This allows you to have an easily accessible summary when using FRIDAY.\u003cbr\u003e","lastModifiedDate":"2022-11-01"},{"lineNumber":524,"author":{"gitId":"darrtzj"},"content":"It also includes a link to this User Guide if needed.","lastModifiedDate":"2022-11-01"},{"lineNumber":525,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":526,"author":{"gitId":"darrtzj"},"content":"Format: `help`","lastModifiedDate":"2022-10-12"},{"lineNumber":527,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":528,"author":{"gitId":"jorrdansoh"},"content":"### Clearing all existing data: `clear`","lastModifiedDate":"2022-11-07"},{"lineNumber":529,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":530,"author":{"gitId":"jorrdansoh"},"content":"On your first launch of FRIDAY, a sample list of students is displayed. The `clear` command allows you to clear this and any other existing data in FRIDAY, resulting in an empty Student list.","lastModifiedDate":"2022-11-07"},{"lineNumber":531,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":532,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2022-11-07"},{"lineNumber":533,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":534,"author":{"gitId":"jorrdansoh"},"content":"### Exiting FRIDAY : `exit`","lastModifiedDate":"2022-11-05"},{"lineNumber":535,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":536,"author":{"gitId":"kaij77"},"content":"Exits FRIDAY. See you again soon!","lastModifiedDate":"2022-11-07"},{"lineNumber":537,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":538,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2022-11-05"},{"lineNumber":539,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":540,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2022-11-05"},{"lineNumber":541,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":542,"author":{"gitId":"kaij77"},"content":"FRIDAY\u0027s data is saved in the hard disk automatically after any command that changes the data. There is no need for you to save manually.","lastModifiedDate":"2022-11-07"},{"lineNumber":543,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":544,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2022-11-05"},{"lineNumber":545,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":546,"author":{"gitId":"jorrdansoh"},"content":"FRIDAY\u0027s student and alias data is saved as a JSON file at `[JAR file location]/data/friday.json`.\u003cbr\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":547,"author":{"gitId":"jorrdansoh"},"content":"Advanced users are welcome to update data directly by editing the data file.","lastModifiedDate":"2022-11-05"},{"lineNumber":548,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":549,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2022-11-05"},{"lineNumber":550,"author":{"gitId":"jorrdansoh"},"content":"If your changes to the data file makes its format invalid, FRIDAY will ignore all data and start with an empty file in the next run.\u003cbr\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":551,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":552,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":553,"author":{"gitId":"darrtzj"},"content":"[Table of Contents](#table-of-contents)","lastModifiedDate":"2022-11-07"},{"lineNumber":554,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":555,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":556,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":557,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":558,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":559,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":560,"author":{"gitId":"kaij77"},"content":"Some Frequently Asked Questions:","lastModifiedDate":"2022-11-07"},{"lineNumber":561,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":562,"author":{"gitId":"jorrdansoh"},"content":"**Q**: How do I transfer my data to another computer?\u003cbr\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":563,"author":{"gitId":"jorrdansoh"},"content":"**A**: Install FRIDAY in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous FRIDAY home folder.","lastModifiedDate":"2022-11-05"},{"lineNumber":564,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":565,"author":{"gitId":"jorrdansoh"},"content":"**Q**: I accidentally made the data file invalid and now my old data does not show in FRIDAY. How do I fix this?\u003cbr\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":566,"author":{"gitId":"jorrdansoh"},"content":"**A**: To retrieve the old data, revert all invalid changes in the data file **before running any commands** in FRIDAY.","lastModifiedDate":"2022-11-05"},{"lineNumber":567,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":568,"author":{"gitId":"Yuvaraj0702"},"content":"**Q**: Which computers can run this software?\u003cbr\u003e","lastModifiedDate":"2022-11-06"},{"lineNumber":569,"author":{"gitId":"Yuvaraj0702"},"content":"**A**: All computers can run this software as it not limited by hardware. However on the software side Windows computers \u003cbr\u003e","lastModifiedDate":"2022-11-06"},{"lineNumber":570,"author":{"gitId":"Yuvaraj0702"},"content":"       minimally must be of version 7. All versions above Windows 7 should be compatible. All MacOS versions above Version 10.10 (Yosemite) will be compatible with FRIDAY.","lastModifiedDate":"2022-11-06"},{"lineNumber":571,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":572,"author":{"gitId":"Yuvaraj0702"},"content":"**Q**: What if I am not good at typing. Is FRIDAY for me?\u003cbr\u003e","lastModifiedDate":"2022-11-06"},{"lineNumber":573,"author":{"gitId":"jorrdansoh"},"content":"**A**: Yes Friday is still for you. Why you may ask? The commands are still very short and even if you are a slow typist,","lastModifiedDate":"2022-11-07"},{"lineNumber":574,"author":{"gitId":"jorrdansoh"},"content":"       you will be saving time as compared to pen and paper or an Excel sheet. \u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":575,"author":{"gitId":"Yuvaraj0702"},"content":"       Furthermore, FRIDAY is more aesthetically pleasing and has all the necessary features easily accessible at your fingertips.","lastModifiedDate":"2022-11-06"},{"lineNumber":576,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":577,"author":{"gitId":"Yuvaraj0702"},"content":"**Q**: What are the additional features coming to FRIDAY?\u003cbr\u003e","lastModifiedDate":"2022-11-06"},{"lineNumber":578,"author":{"gitId":"jorrdansoh"},"content":"**A**: FRIDAY is always expanding to serve you better. In the near future you can expect to see:","lastModifiedDate":"2022-11-07"},{"lineNumber":579,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":580,"author":{"gitId":"Yuvaraj0702"},"content":"1. Shared databases","lastModifiedDate":"2022-11-06"},{"lineNumber":581,"author":{"gitId":"Yuvaraj0702"},"content":"2. Larger storage limits","lastModifiedDate":"2022-11-06"},{"lineNumber":582,"author":{"gitId":"Yuvaraj0702"},"content":"3. Cloud compatibility","lastModifiedDate":"2022-11-06"},{"lineNumber":583,"author":{"gitId":"Yuvaraj0702"},"content":"4. Easy import and export of data","lastModifiedDate":"2022-11-06"},{"lineNumber":584,"author":{"gitId":"kaij77"},"content":"5. Undoing previous actions","lastModifiedDate":"2022-11-07"},{"lineNumber":585,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":586,"author":{"gitId":"darrtzj"},"content":"[Table of Contents](#table-of-contents)","lastModifiedDate":"2022-11-07"},{"lineNumber":587,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":588,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":589,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":590,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":591,"author":{"gitId":"jorrdansoh"},"content":"## Command Summary","lastModifiedDate":"2022-09-27"},{"lineNumber":592,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":593,"author":{"gitId":"HowSuen"},"content":"| Action                                       | Format                                                                                                   |","lastModifiedDate":"2022-09-28"},{"lineNumber":594,"author":{"gitId":"HowSuen"},"content":"|----------------------------------------------|----------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-10-21"},{"lineNumber":595,"author":{"gitId":"jorrdansoh"},"content":"| **Add a student**                            | `add n/NAME [t/TELEGRAM_HANDLE] [c/CONSULTATION_DATE] [m/MASTERY_CHECK_DATE] [tag/TAG]...`               |","lastModifiedDate":"2022-10-11"},{"lineNumber":596,"author":{"gitId":"HowSuen"},"content":"| **Delete a student**                         | `delete INDEX`                                                                                           |","lastModifiedDate":"2022-10-29"},{"lineNumber":597,"author":{"gitId":"HowSuen"},"content":"| **Edit a student\u0027s details**                 | `edit INDEX [n/NAME] [t/TELEGRAM_HANDLE] [c/CONSULTATION] [m/MASTERY_CHECK] [tag/TAG]...`                |","lastModifiedDate":"2022-10-19"},{"lineNumber":598,"author":{"gitId":"HowSuen"},"content":"| **Add remarks for a student**                | `remark INDEX [r/REMARK]`                                                                                |","lastModifiedDate":"2022-10-19"},{"lineNumber":599,"author":{"gitId":"jorrdansoh"},"content":"| **Record the grades for a student**          | `grade INDEX [ra1/RA1_SCORE] [ra2/RA2_SCORE] [pa/PRACTICAL_SCORE] [mt/MIDTERM_SCORE] [ft/FINALS_SCORE]` |","lastModifiedDate":"2022-11-07"},{"lineNumber":600,"author":{"gitId":"Yuvaraj0702"},"content":"| **Find a student\u0027s details**                 | `find KEYWORDS`                                                                                          |","lastModifiedDate":"2022-10-29"},{"lineNumber":601,"author":{"gitId":"kaij77"},"content":"| **Mark a student\u0027s Mastery Check as passed** | `mark INDEX`                                                                                             |","lastModifiedDate":"2022-10-20"},{"lineNumber":602,"author":{"gitId":"kaij77"},"content":"| **Unmark a student\u0027s Mastery Check**         | `unmark INDEX`                                                                                           |","lastModifiedDate":"2022-10-25"},{"lineNumber":603,"author":{"gitId":"HowSuen"},"content":"| **View all students**                        | `list`                                                                                                   |","lastModifiedDate":"2022-09-28"},{"lineNumber":604,"author":{"gitId":"jorrdansoh"},"content":"| **Sort students**                            | `sort CRITERIA/ORDER`                                                                                    |","lastModifiedDate":"2022-10-19"},{"lineNumber":605,"author":{"gitId":"darrtzj"},"content":"| **Add Alias**                                | `alias a/ALIAS k/COMMAND_KEYWORD`                                                                        |","lastModifiedDate":"2022-11-01"},{"lineNumber":606,"author":{"gitId":"darrtzj"},"content":"| **Delete Alias**                             | `unalias a/ALIAS`                                                                                        |","lastModifiedDate":"2022-10-25"},{"lineNumber":607,"author":{"gitId":"darrtzj"},"content":"| **View all alias**                           | `aliaslist`                                                                                              |","lastModifiedDate":"2022-10-25"},{"lineNumber":608,"author":{"gitId":"kaij77"},"content":"| **Get a link to the User Guide**             | `guide`                                                                                                  |","lastModifiedDate":"2022-10-11"},{"lineNumber":609,"author":{"gitId":"darrtzj"},"content":"| **Getting Help**                             | `help`                                                                                                   |","lastModifiedDate":"2022-10-12"},{"lineNumber":610,"author":{"gitId":"jorrdansoh"},"content":"| **Exiting FRIDAY**                           | `exit`                                                                                                   |","lastModifiedDate":"2022-11-05"},{"lineNumber":611,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":612,"author":{"gitId":"darrtzj"},"content":"[Table of Contents](#table-of-contents)","lastModifiedDate":"2022-11-07"},{"lineNumber":613,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":614,"author":{"gitId":"Yuvaraj0702"},"content":"---------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-11-07"},{"lineNumber":615,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":616,"author":{"gitId":"Yuvaraj0702"},"content":"## Glossary","lastModifiedDate":"2022-11-06"},{"lineNumber":617,"author":{"gitId":"HowSuen"},"content":"1. **CS1101S:** CS1101S Programming Methodology is a Computer Science module in National Univeristy of Singapore (NUS), School of Computing. This module introduces the concepts of programming and computational problem-solving, and is the first and foremost introductory module to computing, hence it is usually taken by first year Computer Science undergraduate students.","lastModifiedDate":"2022-11-07"},{"lineNumber":618,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":619,"author":{"gitId":"HowSuen"},"content":"2. **Teaching Assistant:** Teaching assistants (TA) are people who help and support teachers or lecturers to provide and coordinate effective classroom instruction. For CS1101S, teaching assistants are undergraduate students who have completed the module. The role of a CS1101S TA involves planning, preparing and delivering weekly tutorial sessions, marking assignments and monitoring their students\u0027 progress and engagement levels.","lastModifiedDate":"2022-11-07"},{"lineNumber":620,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":621,"author":{"gitId":"HowSuen"},"content":"3. **CLI:** CLI stands for command line interface. It is a system wherein the user enters textual one line inputs into an input box and the computer responds with a textual or graphical output.","lastModifiedDate":"2022-11-07"},{"lineNumber":622,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":623,"author":{"gitId":"HowSuen"},"content":"4. **GUI:** GUI stands for graphical user interface. It is the opposite of CLI wherein the user interacts with icons and items on the screen to communicate with the computer. Outputs are also displayed in graphical form.","lastModifiedDate":"2022-11-07"},{"lineNumber":624,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":625,"author":{"gitId":"HowSuen"},"content":"5. **Java:** Java is a programming language introduced in the 90\u0027s. It is used to create many applications that you use today. Including this one.","lastModifiedDate":"2022-11-07"},{"lineNumber":626,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":627,"author":{"gitId":"HowSuen"},"content":"6. **JAR:** The file format of FRIDAY.","lastModifiedDate":"2022-11-07"},{"lineNumber":628,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":629,"author":{"gitId":"HowSuen"},"content":"7. **Command:** The text that you enter in the input box is a command.","lastModifiedDate":"2022-11-07"},{"lineNumber":630,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":631,"author":{"gitId":"HowSuen"},"content":"8. **Parameter:** The text that follows the first word of your input in the input box.","lastModifiedDate":"2022-11-07"},{"lineNumber":632,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":633,"author":{"gitId":"HowSuen"},"content":"9. **Prefix:** A word or letter used in commands to specify the field you are adding, editing or sorting by.","lastModifiedDate":"2022-11-07"},{"lineNumber":634,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":635,"author":{"gitId":"HowSuen"},"content":"10. **RA1:** Reading assessment 1 is a minor assessment in the CS1101S module that tests the content of the first half of the CS1101S module.","lastModifiedDate":"2022-11-07"},{"lineNumber":636,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":637,"author":{"gitId":"HowSuen"},"content":"11. **RA2:** Reading assessment 2 is a minor assessment in the CS1101S module that tests the content of the second half of the CS1101S module.","lastModifiedDate":"2022-11-07"},{"lineNumber":638,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":639,"author":{"gitId":"HowSuen"},"content":"12. **Midterm:** Midterm examination is a major assessment that occurs halfway through the CS1101S module.","lastModifiedDate":"2022-11-07"},{"lineNumber":640,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":641,"author":{"gitId":"HowSuen"},"content":"13. **Practical:** Practical examination is a major non-paper assessment that occurs at the end of the CS1101S module.","lastModifiedDate":"2022-11-07"},{"lineNumber":642,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":643,"author":{"gitId":"HowSuen"},"content":"14. **Final:** Final examination is a major paper assessment that occurs at the end of the CS1101S module.","lastModifiedDate":"2022-11-07"},{"lineNumber":644,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":645,"author":{"gitId":"HowSuen"},"content":"15. **Mastery Check:** A pass/fail assessment on students to assess their understanding of the concepts taught. There are 2 Mastery checks per semester.","lastModifiedDate":"2022-11-07"},{"lineNumber":646,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":647,"author":{"gitId":"HowSuen"},"content":"16. **Alias:** A nickname or an alternate name that you can set for a command.","lastModifiedDate":"2022-11-07"},{"lineNumber":648,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":649,"author":{"gitId":"darrtzj"},"content":"17. **Telegram Handle:** The username in the widely-used messaging application Telegram.","lastModifiedDate":"2022-11-07"},{"lineNumber":650,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":651,"author":{"gitId":"darrtzj"},"content":"[Table of Contents](#table-of-contents)","lastModifiedDate":"2022-11-07"}],"authorContributionMap":{"jorrdansoh":127,"Yuvaraj0702":125,"darrtzj":88,"kaij77":92,"-":112,"HowSuen":107}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"jorrdansoh"},"content":"    content: \"FRIDAY\";","lastModifiedDate":"2022-09-25"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"jorrdansoh":1,"-":294}},{"path":"docs/diagrams/AliasCommandActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"darrtzj"},"content":"@startuml","lastModifiedDate":"2022-11-06"},{"lineNumber":2,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":3,"author":{"gitId":"darrtzj"},"content":"!include style.puml","lastModifiedDate":"2022-11-06"},{"lineNumber":4,"author":{"gitId":"darrtzj"},"content":"title Adding Alias","lastModifiedDate":"2022-11-06"},{"lineNumber":5,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":6,"author":{"gitId":"darrtzj"},"content":"start","lastModifiedDate":"2022-11-06"},{"lineNumber":7,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":8,"author":{"gitId":"darrtzj"},"content":":Receives an \"\"alias\"\" command;","lastModifiedDate":"2022-11-06"},{"lineNumber":9,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":10,"author":{"gitId":"darrtzj"},"content":"if () then ([valid alias and valid reserved keyword])","lastModifiedDate":"2022-11-06"},{"lineNumber":11,"author":{"gitId":"darrtzj"},"content":"    :Parses the \"\"alias\"\"","lastModifiedDate":"2022-11-06"},{"lineNumber":12,"author":{"gitId":"darrtzj"},"content":"    command, alias and reserved keyword;","lastModifiedDate":"2022-11-06"},{"lineNumber":13,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":14,"author":{"gitId":"darrtzj"},"content":"    :Adds alias-reserved keyword mapping into FRIDAY;","lastModifiedDate":"2022-11-06"},{"lineNumber":15,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":16,"author":{"gitId":"darrtzj"},"content":"    :Shows a success message;","lastModifiedDate":"2022-11-06"},{"lineNumber":17,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":18,"author":{"gitId":"darrtzj"},"content":"else ([else])","lastModifiedDate":"2022-11-06"},{"lineNumber":19,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":20,"author":{"gitId":"darrtzj"},"content":"    :Shows an invalid","lastModifiedDate":"2022-11-06"},{"lineNumber":21,"author":{"gitId":"darrtzj"},"content":"    command message;","lastModifiedDate":"2022-11-06"},{"lineNumber":22,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":23,"author":{"gitId":"darrtzj"},"content":"endif","lastModifiedDate":"2022-11-06"},{"lineNumber":24,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":25,"author":{"gitId":"darrtzj"},"content":"stop","lastModifiedDate":"2022-11-06"},{"lineNumber":26,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":27,"author":{"gitId":"darrtzj"},"content":"@enduml","lastModifiedDate":"2022-11-06"}],"authorContributionMap":{"darrtzj":27}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"user -[USER_COLOR]\u003e ui : \"delete 1\"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"HowSuen"},"content":"logic -[LOGIC_COLOR]\u003e model : deleteStudent(p)","lastModifiedDate":"2022-10-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"HowSuen"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveFriday(friday)","lastModifiedDate":"2022-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":36,"HowSuen":2}},{"path":"docs/diagrams/BetterModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"darrtzj"},"content":"Friday *-down-\u003e \"1\" UniqueStudentList","lastModifiedDate":"2022-11-07"},{"lineNumber":8,"author":{"gitId":"darrtzj"},"content":"Friday *-right-\u003e \"1\" AliasMap","lastModifiedDate":"2022-11-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"darrtzj"},"content":"UniqueStudentList -right-\u003e \"*\" Student","lastModifiedDate":"2022-11-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"darrtzj"},"content":"Student *--\u003e \"*\" Tag","lastModifiedDate":"2022-11-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"darrtzj"},"content":"Student *--\u003e \"1\" Name","lastModifiedDate":"2022-11-06"},{"lineNumber":15,"author":{"gitId":"darrtzj"},"content":"Student *--\u003e \"0..1\" TelegramHandle","lastModifiedDate":"2022-11-06"},{"lineNumber":16,"author":{"gitId":"darrtzj"},"content":"Student *--\u003e \"0..1\" MasteryCheck","lastModifiedDate":"2022-11-06"},{"lineNumber":17,"author":{"gitId":"darrtzj"},"content":"Student *--\u003e \"0..1\" Consultation","lastModifiedDate":"2022-11-06"},{"lineNumber":18,"author":{"gitId":"darrtzj"},"content":"Student *--\u003e \"0..1\" Remark","lastModifiedDate":"2022-11-06"},{"lineNumber":19,"author":{"gitId":"darrtzj"},"content":"Student *--\u003e \"1\" GradesList","lastModifiedDate":"2022-11-07"},{"lineNumber":20,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":21,"author":{"gitId":"darrtzj"},"content":"AliasMap *--\u003e \"0..50\" Alias","lastModifiedDate":"2022-11-06"},{"lineNumber":22,"author":{"gitId":"darrtzj"},"content":"AliasMap *--\u003e \"0..50\" ReservedKeyword","lastModifiedDate":"2022-11-06"},{"lineNumber":23,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":24,"author":{"gitId":"darrtzj"},"content":"Alias \"1\" \u003c-right\u003e \"1\" ReservedKeyword","lastModifiedDate":"2022-11-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"darrtzj":15,"-":10}},{"path":"docs/diagrams/CommitActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"start","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":":User executes command;","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"Yuvaraj0702"},"content":"if () then ([command commits Friday])","lastModifiedDate":"2022-11-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    :Purge redundant states;","lastModifiedDate":"2020-12-12"},{"lineNumber":10,"author":{"gitId":"Yuvaraj0702"},"content":"    :Save Friday to","lastModifiedDate":"2022-11-02"},{"lineNumber":11,"author":{"gitId":"Yuvaraj0702"},"content":"    fridayStateList;","lastModifiedDate":"2022-11-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"else ([else])","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"endif","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"stop","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Yuvaraj0702":3,"-":12}},{"path":"docs/diagrams/DeleteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"Yuvaraj0702"},"content":"participant \":FridayParser\" as FridayParser LOGIC_COLOR","lastModifiedDate":"2022-11-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"participant \":DeleteCommandParser\" as DeleteCommandParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"participant \"d:DeleteCommand\" as DeleteCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"[-\u003e LogicManager : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"Yuvaraj0702"},"content":"LogicManager -\u003e FridayParser : parseCommand(\"delete 1\")","lastModifiedDate":"2022-11-02"},{"lineNumber":20,"author":{"gitId":"Yuvaraj0702"},"content":"activate FridayParser","lastModifiedDate":"2022-11-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"create DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"Yuvaraj0702"},"content":"FridayParser -\u003e DeleteCommandParser","lastModifiedDate":"2022-11-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"Yuvaraj0702"},"content":"DeleteCommandParser --\u003e FridayParser","lastModifiedDate":"2022-11-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"Yuvaraj0702"},"content":"FridayParser -\u003e DeleteCommandParser : parse(\"1\")","lastModifiedDate":"2022-11-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"create DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"DeleteCommandParser -\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e DeleteCommandParser : d","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"Yuvaraj0702"},"content":"DeleteCommandParser --\u003e FridayParser : d","lastModifiedDate":"2022-11-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"Yuvaraj0702"},"content":"DeleteCommandParser -[hidden]-\u003e FridayParser","lastModifiedDate":"2022-11-02"},{"lineNumber":43,"author":{"gitId":"-"},"content":"destroy DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"Yuvaraj0702"},"content":"FridayParser --\u003e LogicManager : d","lastModifiedDate":"2022-11-02"},{"lineNumber":46,"author":{"gitId":"Yuvaraj0702"},"content":"deactivate FridayParser","lastModifiedDate":"2022-11-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"LogicManager -\u003e DeleteCommand : execute()","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"jorrdansoh"},"content":"DeleteCommand -\u003e Model : deleteStudent(1)","lastModifiedDate":"2022-10-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"Model --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"create CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"DeleteCommand -\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"activate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"CommandResult --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"deactivate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"jorrdansoh":1,"Yuvaraj0702":10,"-":58}},{"path":"docs/diagrams/FindCommandActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Yuvaraj0702"},"content":"@startuml","lastModifiedDate":"2022-11-06"},{"lineNumber":2,"author":{"gitId":"Yuvaraj0702"},"content":"\u0027https://plantuml.com/activity-diagram-beta","lastModifiedDate":"2022-11-06"},{"lineNumber":3,"author":{"gitId":"Yuvaraj0702"},"content":"Title:Finding students","lastModifiedDate":"2022-11-06"},{"lineNumber":4,"author":{"gitId":"Yuvaraj0702"},"content":"start","lastModifiedDate":"2022-11-06"},{"lineNumber":5,"author":{"gitId":"Yuvaraj0702"},"content":":Receives a find command;","lastModifiedDate":"2022-11-06"},{"lineNumber":6,"author":{"gitId":"Yuvaraj0702"},"content":"if () then ([valid command])","lastModifiedDate":"2022-11-06"},{"lineNumber":7,"author":{"gitId":"Yuvaraj0702"},"content":"  :Parse the find command keywords;","lastModifiedDate":"2022-11-06"},{"lineNumber":8,"author":{"gitId":"Yuvaraj0702"},"content":"  :Filter students based on the keywords;","lastModifiedDate":"2022-11-06"},{"lineNumber":9,"author":{"gitId":"Yuvaraj0702"},"content":"  :Display filtered students to user;","lastModifiedDate":"2022-11-06"},{"lineNumber":10,"author":{"gitId":"Yuvaraj0702"},"content":"  :Shows a success message;","lastModifiedDate":"2022-11-06"},{"lineNumber":11,"author":{"gitId":"Yuvaraj0702"},"content":"  else ([else])","lastModifiedDate":"2022-11-06"},{"lineNumber":12,"author":{"gitId":"Yuvaraj0702"},"content":"  :Shows an invalid command message;","lastModifiedDate":"2022-11-06"},{"lineNumber":13,"author":{"gitId":"Yuvaraj0702"},"content":"  endif","lastModifiedDate":"2022-11-06"},{"lineNumber":14,"author":{"gitId":"Yuvaraj0702"},"content":"     stop","lastModifiedDate":"2022-11-06"},{"lineNumber":15,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":16,"author":{"gitId":"Yuvaraj0702"},"content":"@enduml","lastModifiedDate":"2022-11-06"}],"authorContributionMap":{"Yuvaraj0702":16}},{"path":"docs/diagrams/FindCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Yuvaraj0702"},"content":"@startuml","lastModifiedDate":"2022-11-06"},{"lineNumber":2,"author":{"gitId":"Yuvaraj0702"},"content":"!include style.puml","lastModifiedDate":"2022-11-06"},{"lineNumber":3,"author":{"gitId":"Yuvaraj0702"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2022-11-06"},{"lineNumber":4,"author":{"gitId":"Yuvaraj0702"},"content":"skinparam arrowcolor LOGIC_COLOR_T3","lastModifiedDate":"2022-11-06"},{"lineNumber":5,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":6,"author":{"gitId":"Yuvaraj0702"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-11-06"},{"lineNumber":7,"author":{"gitId":"Yuvaraj0702"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR_T3","lastModifiedDate":"2022-11-06"},{"lineNumber":8,"author":{"gitId":"Yuvaraj0702"},"content":"participant \"fcp:FindCommandParser\" as FindCommandParser LOGIC_COLOR_T3","lastModifiedDate":"2022-11-06"},{"lineNumber":9,"author":{"gitId":"Yuvaraj0702"},"content":"participant \"fc:FindCommand\" as FindCommand LOGIC_COLOR_T3","lastModifiedDate":"2022-11-06"},{"lineNumber":10,"author":{"gitId":"Yuvaraj0702"},"content":"participant \"r:CommandResult\" as CommandResult LOGIC_COLOR_T3","lastModifiedDate":"2022-11-06"},{"lineNumber":11,"author":{"gitId":"Yuvaraj0702"},"content":"end box","lastModifiedDate":"2022-11-06"},{"lineNumber":12,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":13,"author":{"gitId":"Yuvaraj0702"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-11-06"},{"lineNumber":14,"author":{"gitId":"Yuvaraj0702"},"content":"participant \"m:ModelManager\" as Model MODEL_COLOR","lastModifiedDate":"2022-11-06"},{"lineNumber":15,"author":{"gitId":"Yuvaraj0702"},"content":"participant \":fs:FilteredList\" as FilteredList MODEL_COLOR","lastModifiedDate":"2022-11-06"},{"lineNumber":16,"author":{"gitId":"Yuvaraj0702"},"content":"end box","lastModifiedDate":"2022-11-06"},{"lineNumber":17,"author":{"gitId":"Yuvaraj0702"},"content":"[-\u003e LogicManager : execute(\"find alice\")","lastModifiedDate":"2022-11-06"},{"lineNumber":18,"author":{"gitId":"Yuvaraj0702"},"content":"activate LogicManager","lastModifiedDate":"2022-11-06"},{"lineNumber":19,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":20,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":21,"author":{"gitId":"Yuvaraj0702"},"content":"LogicManager -\u003e FindCommandParser : parse(\"find alice\")","lastModifiedDate":"2022-11-06"},{"lineNumber":22,"author":{"gitId":"Yuvaraj0702"},"content":"activate FindCommandParser","lastModifiedDate":"2022-11-06"},{"lineNumber":23,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":24,"author":{"gitId":"Yuvaraj0702"},"content":"create FindCommand","lastModifiedDate":"2022-11-06"},{"lineNumber":25,"author":{"gitId":"Yuvaraj0702"},"content":"FindCommandParser -\u003e FindCommand : findCommand(p)","lastModifiedDate":"2022-11-06"},{"lineNumber":26,"author":{"gitId":"Yuvaraj0702"},"content":"activate FindCommand","lastModifiedDate":"2022-11-06"},{"lineNumber":27,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":28,"author":{"gitId":"Yuvaraj0702"},"content":"FindCommand --\u003e FindCommandParser : fc","lastModifiedDate":"2022-11-06"},{"lineNumber":29,"author":{"gitId":"Yuvaraj0702"},"content":"deactivate FindCommand","lastModifiedDate":"2022-11-06"},{"lineNumber":30,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":31,"author":{"gitId":"Yuvaraj0702"},"content":"FindCommandParser --\u003e LogicManager : fc","lastModifiedDate":"2022-11-06"},{"lineNumber":32,"author":{"gitId":"Yuvaraj0702"},"content":"deactivate FindCommandParser","lastModifiedDate":"2022-11-06"},{"lineNumber":33,"author":{"gitId":"Yuvaraj0702"},"content":"FindCommandParser [hidden]-\u003e LogicManager","lastModifiedDate":"2022-11-06"},{"lineNumber":34,"author":{"gitId":"Yuvaraj0702"},"content":"destroy FindCommandParser","lastModifiedDate":"2022-11-06"},{"lineNumber":35,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":36,"author":{"gitId":"Yuvaraj0702"},"content":"LogicManager -\u003e FindCommand : execute(m)","lastModifiedDate":"2022-11-06"},{"lineNumber":37,"author":{"gitId":"Yuvaraj0702"},"content":"activate FindCommand","lastModifiedDate":"2022-11-06"},{"lineNumber":38,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":39,"author":{"gitId":"Yuvaraj0702"},"content":"FindCommand [MODEL_COLOR]-\u003e Model : updateFilteredStudentList(p)","lastModifiedDate":"2022-11-06"},{"lineNumber":40,"author":{"gitId":"Yuvaraj0702"},"content":"activate Model","lastModifiedDate":"2022-11-06"},{"lineNumber":41,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":42,"author":{"gitId":"Yuvaraj0702"},"content":"Model [MODEL_COLOR]-\u003e FilteredList : setPredicate(p)","lastModifiedDate":"2022-11-06"},{"lineNumber":43,"author":{"gitId":"Yuvaraj0702"},"content":"activate FilteredList","lastModifiedDate":"2022-11-06"},{"lineNumber":44,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":45,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":46,"author":{"gitId":"Yuvaraj0702"},"content":"FilteredList -[MODEL_COLOR]--\u003e Model :","lastModifiedDate":"2022-11-06"},{"lineNumber":47,"author":{"gitId":"Yuvaraj0702"},"content":"deactivate FilteredList","lastModifiedDate":"2022-11-06"},{"lineNumber":48,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":49,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":50,"author":{"gitId":"Yuvaraj0702"},"content":"Model -[MODEL_COLOR]--\u003e FindCommand","lastModifiedDate":"2022-11-06"},{"lineNumber":51,"author":{"gitId":"Yuvaraj0702"},"content":"deactivate Model","lastModifiedDate":"2022-11-06"},{"lineNumber":52,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":53,"author":{"gitId":"Yuvaraj0702"},"content":"create CommandResult","lastModifiedDate":"2022-11-06"},{"lineNumber":54,"author":{"gitId":"Yuvaraj0702"},"content":"FindCommand -\u003e CommandResult :","lastModifiedDate":"2022-11-06"},{"lineNumber":55,"author":{"gitId":"Yuvaraj0702"},"content":"activate CommandResult","lastModifiedDate":"2022-11-06"},{"lineNumber":56,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":57,"author":{"gitId":"Yuvaraj0702"},"content":"CommandResult --\u003e FindCommand : r","lastModifiedDate":"2022-11-06"},{"lineNumber":58,"author":{"gitId":"Yuvaraj0702"},"content":"deactivate CommandResult","lastModifiedDate":"2022-11-06"},{"lineNumber":59,"author":{"gitId":"Yuvaraj0702"},"content":"FindCommand --\u003e LogicManager : r","lastModifiedDate":"2022-11-06"},{"lineNumber":60,"author":{"gitId":"Yuvaraj0702"},"content":"deactivate FindCommand","lastModifiedDate":"2022-11-06"},{"lineNumber":61,"author":{"gitId":"Yuvaraj0702"},"content":"\u0027spacing","lastModifiedDate":"2022-11-06"},{"lineNumber":62,"author":{"gitId":"Yuvaraj0702"},"content":"FindCommand [hidden]--\u003e LogicManager","lastModifiedDate":"2022-11-06"},{"lineNumber":63,"author":{"gitId":"Yuvaraj0702"},"content":"destroy FindCommand","lastModifiedDate":"2022-11-06"},{"lineNumber":64,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":65,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":66,"author":{"gitId":"Yuvaraj0702"},"content":"[\u003c--LogicManager : r","lastModifiedDate":"2022-11-06"},{"lineNumber":67,"author":{"gitId":"Yuvaraj0702"},"content":"deactivate LogicManager","lastModifiedDate":"2022-11-06"},{"lineNumber":68,"author":{"gitId":"Yuvaraj0702"},"content":"@enduml","lastModifiedDate":"2022-11-06"}],"authorContributionMap":{"Yuvaraj0702":68}},{"path":"docs/diagrams/GradeCommandActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"@startuml","lastModifiedDate":"2022-11-06"},{"lineNumber":2,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":3,"author":{"gitId":"HowSuen"},"content":"!include style.puml","lastModifiedDate":"2022-11-06"},{"lineNumber":4,"author":{"gitId":"HowSuen"},"content":"title Recording grades for students","lastModifiedDate":"2022-11-06"},{"lineNumber":5,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":6,"author":{"gitId":"HowSuen"},"content":"start","lastModifiedDate":"2022-11-06"},{"lineNumber":7,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":8,"author":{"gitId":"HowSuen"},"content":":Receives a \"\"grade\"\" command;","lastModifiedDate":"2022-11-06"},{"lineNumber":9,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":10,"author":{"gitId":"HowSuen"},"content":"if () then ([valid command])","lastModifiedDate":"2022-11-06"},{"lineNumber":11,"author":{"gitId":"HowSuen"},"content":"    :Parses the \"\"grade\"\"","lastModifiedDate":"2022-11-06"},{"lineNumber":12,"author":{"gitId":"HowSuen"},"content":"    command, index and grades;","lastModifiedDate":"2022-11-06"},{"lineNumber":13,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":14,"author":{"gitId":"HowSuen"},"content":"    :Writes the specified scores into","lastModifiedDate":"2022-11-06"},{"lineNumber":15,"author":{"gitId":"HowSuen"},"content":"    the specified student\u0027s grades;","lastModifiedDate":"2022-11-06"},{"lineNumber":16,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":17,"author":{"gitId":"HowSuen"},"content":"    :Displays the updated student\u0027s","lastModifiedDate":"2022-11-06"},{"lineNumber":18,"author":{"gitId":"HowSuen"},"content":"    scores in the GUI;","lastModifiedDate":"2022-11-06"},{"lineNumber":19,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":20,"author":{"gitId":"HowSuen"},"content":"    :Shows a success message;","lastModifiedDate":"2022-11-06"},{"lineNumber":21,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":22,"author":{"gitId":"HowSuen"},"content":"else ([else])","lastModifiedDate":"2022-11-06"},{"lineNumber":23,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":24,"author":{"gitId":"HowSuen"},"content":"    :Shows an invalid","lastModifiedDate":"2022-11-06"},{"lineNumber":25,"author":{"gitId":"HowSuen"},"content":"    command message;","lastModifiedDate":"2022-11-06"},{"lineNumber":26,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":27,"author":{"gitId":"HowSuen"},"content":"endif","lastModifiedDate":"2022-11-06"},{"lineNumber":28,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":29,"author":{"gitId":"HowSuen"},"content":"stop","lastModifiedDate":"2022-11-06"},{"lineNumber":30,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":31,"author":{"gitId":"HowSuen"},"content":"@enduml","lastModifiedDate":"2022-11-06"}],"authorContributionMap":{"HowSuen":31}},{"path":"docs/diagrams/GradeSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"@startuml","lastModifiedDate":"2022-11-01"},{"lineNumber":2,"author":{"gitId":"HowSuen"},"content":"!include style.puml","lastModifiedDate":"2022-11-01"},{"lineNumber":3,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":4,"author":{"gitId":"HowSuen"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-11-01"},{"lineNumber":5,"author":{"gitId":"HowSuen"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-11-01"},{"lineNumber":6,"author":{"gitId":"HowSuen"},"content":"participant \":FridayParser\" as FridayParser LOGIC_COLOR","lastModifiedDate":"2022-11-01"},{"lineNumber":7,"author":{"gitId":"HowSuen"},"content":"participant \":GradeCommandParser\" as GradeCommandParser LOGIC_COLOR","lastModifiedDate":"2022-11-01"},{"lineNumber":8,"author":{"gitId":"HowSuen"},"content":"participant \"g:GradeCommand\" as GradeCommand LOGIC_COLOR","lastModifiedDate":"2022-11-01"},{"lineNumber":9,"author":{"gitId":"HowSuen"},"content":"participant \"gL:GradesList\" as GradesList LOGIC_COLOR","lastModifiedDate":"2022-11-01"},{"lineNumber":10,"author":{"gitId":"HowSuen"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-11-01"},{"lineNumber":11,"author":{"gitId":"HowSuen"},"content":"end box","lastModifiedDate":"2022-11-01"},{"lineNumber":12,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":13,"author":{"gitId":"HowSuen"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-11-01"},{"lineNumber":14,"author":{"gitId":"HowSuen"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-11-01"},{"lineNumber":15,"author":{"gitId":"HowSuen"},"content":"end box","lastModifiedDate":"2022-11-01"},{"lineNumber":16,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":17,"author":{"gitId":"HowSuen"},"content":"[-\u003e LogicManager : execute(\"grade 1 ra1/90\")","lastModifiedDate":"2022-11-01"},{"lineNumber":18,"author":{"gitId":"HowSuen"},"content":"activate LogicManager","lastModifiedDate":"2022-11-01"},{"lineNumber":19,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":20,"author":{"gitId":"HowSuen"},"content":"LogicManager -\u003e FridayParser : parseCommand(\"grade 1 ra1/90\")","lastModifiedDate":"2022-11-01"},{"lineNumber":21,"author":{"gitId":"HowSuen"},"content":"activate FridayParser","lastModifiedDate":"2022-11-01"},{"lineNumber":22,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":23,"author":{"gitId":"HowSuen"},"content":"create GradeCommandParser","lastModifiedDate":"2022-11-01"},{"lineNumber":24,"author":{"gitId":"HowSuen"},"content":"FridayParser -\u003e GradeCommandParser","lastModifiedDate":"2022-11-01"},{"lineNumber":25,"author":{"gitId":"HowSuen"},"content":"activate GradeCommandParser","lastModifiedDate":"2022-11-01"},{"lineNumber":26,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":27,"author":{"gitId":"HowSuen"},"content":"GradeCommandParser --\u003e FridayParser","lastModifiedDate":"2022-11-01"},{"lineNumber":28,"author":{"gitId":"HowSuen"},"content":"deactivate GradeCommandParser","lastModifiedDate":"2022-11-01"},{"lineNumber":29,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":30,"author":{"gitId":"HowSuen"},"content":"FridayParser -\u003e GradeCommandParser : parse(\"1 ra1/90\")","lastModifiedDate":"2022-11-01"},{"lineNumber":31,"author":{"gitId":"HowSuen"},"content":"activate GradeCommandParser","lastModifiedDate":"2022-11-01"},{"lineNumber":32,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":33,"author":{"gitId":"HowSuen"},"content":"create GradeCommand","lastModifiedDate":"2022-11-01"},{"lineNumber":34,"author":{"gitId":"HowSuen"},"content":"GradeCommandParser -\u003e GradeCommand","lastModifiedDate":"2022-11-01"},{"lineNumber":35,"author":{"gitId":"HowSuen"},"content":"activate GradeCommand","lastModifiedDate":"2022-11-01"},{"lineNumber":36,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":37,"author":{"gitId":"HowSuen"},"content":"GradeCommand --\u003e GradeCommandParser : g","lastModifiedDate":"2022-11-01"},{"lineNumber":38,"author":{"gitId":"HowSuen"},"content":"deactivate GradeCommand","lastModifiedDate":"2022-11-01"},{"lineNumber":39,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":40,"author":{"gitId":"HowSuen"},"content":"GradeCommandParser --\u003e FridayParser : g","lastModifiedDate":"2022-11-01"},{"lineNumber":41,"author":{"gitId":"HowSuen"},"content":"deactivate GradeCommandParser","lastModifiedDate":"2022-11-01"},{"lineNumber":42,"author":{"gitId":"HowSuen"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2022-11-01"},{"lineNumber":43,"author":{"gitId":"HowSuen"},"content":"GradeCommandParser -[hidden]-\u003e FridayParser","lastModifiedDate":"2022-11-01"},{"lineNumber":44,"author":{"gitId":"HowSuen"},"content":"destroy GradeCommandParser","lastModifiedDate":"2022-11-01"},{"lineNumber":45,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":46,"author":{"gitId":"HowSuen"},"content":"FridayParser --\u003e LogicManager : g","lastModifiedDate":"2022-11-01"},{"lineNumber":47,"author":{"gitId":"HowSuen"},"content":"deactivate FridayParser","lastModifiedDate":"2022-11-01"},{"lineNumber":48,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":49,"author":{"gitId":"HowSuen"},"content":"LogicManager -\u003e GradeCommand : execute()","lastModifiedDate":"2022-11-01"},{"lineNumber":50,"author":{"gitId":"HowSuen"},"content":"activate GradeCommand","lastModifiedDate":"2022-11-01"},{"lineNumber":51,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":52,"author":{"gitId":"HowSuen"},"content":"GradeCommand -\u003e GradeCommand : createEditedGradesList(1, g)","lastModifiedDate":"2022-11-01"},{"lineNumber":53,"author":{"gitId":"HowSuen"},"content":"activate GradeCommand","lastModifiedDate":"2022-11-01"},{"lineNumber":54,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":55,"author":{"gitId":"HowSuen"},"content":"create GradesList","lastModifiedDate":"2022-11-01"},{"lineNumber":56,"author":{"gitId":"HowSuen"},"content":"GradeCommand -\u003e GradesList : GradesList()","lastModifiedDate":"2022-11-01"},{"lineNumber":57,"author":{"gitId":"HowSuen"},"content":"activate GradesList","lastModifiedDate":"2022-11-01"},{"lineNumber":58,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":59,"author":{"gitId":"HowSuen"},"content":"GradesList --\u003e GradeCommand: gL","lastModifiedDate":"2022-11-06"},{"lineNumber":60,"author":{"gitId":"HowSuen"},"content":"deactivate GradesList","lastModifiedDate":"2022-11-01"},{"lineNumber":61,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":62,"author":{"gitId":"HowSuen"},"content":"GradeCommand -\u003e GradesList : editGrade(ra1, 90)","lastModifiedDate":"2022-11-06"},{"lineNumber":63,"author":{"gitId":"HowSuen"},"content":"activate GradesList","lastModifiedDate":"2022-11-01"},{"lineNumber":64,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":65,"author":{"gitId":"HowSuen"},"content":"GradesList --\u003e GradeCommand: gL","lastModifiedDate":"2022-11-06"},{"lineNumber":66,"author":{"gitId":"HowSuen"},"content":"deactivate GradesList","lastModifiedDate":"2022-11-01"},{"lineNumber":67,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":68,"author":{"gitId":"HowSuen"},"content":"GradeCommand --\u003e GradeCommand","lastModifiedDate":"2022-11-01"},{"lineNumber":69,"author":{"gitId":"HowSuen"},"content":"deactivate GradeCommand","lastModifiedDate":"2022-11-01"},{"lineNumber":70,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":71,"author":{"gitId":"HowSuen"},"content":"GradeCommand -\u003e Model : setStudent(1)","lastModifiedDate":"2022-11-01"},{"lineNumber":72,"author":{"gitId":"HowSuen"},"content":"activate Model","lastModifiedDate":"2022-11-01"},{"lineNumber":73,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":74,"author":{"gitId":"HowSuen"},"content":"Model --\u003e GradeCommand","lastModifiedDate":"2022-11-01"},{"lineNumber":75,"author":{"gitId":"HowSuen"},"content":"deactivate Model","lastModifiedDate":"2022-11-01"},{"lineNumber":76,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":77,"author":{"gitId":"HowSuen"},"content":"create CommandResult","lastModifiedDate":"2022-11-01"},{"lineNumber":78,"author":{"gitId":"HowSuen"},"content":"GradeCommand -\u003e CommandResult","lastModifiedDate":"2022-11-01"},{"lineNumber":79,"author":{"gitId":"HowSuen"},"content":"activate CommandResult","lastModifiedDate":"2022-11-01"},{"lineNumber":80,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":81,"author":{"gitId":"HowSuen"},"content":"CommandResult --\u003e GradeCommand","lastModifiedDate":"2022-11-01"},{"lineNumber":82,"author":{"gitId":"HowSuen"},"content":"deactivate CommandResult","lastModifiedDate":"2022-11-01"},{"lineNumber":83,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":84,"author":{"gitId":"HowSuen"},"content":"GradeCommand --\u003e LogicManager : result","lastModifiedDate":"2022-11-01"},{"lineNumber":85,"author":{"gitId":"HowSuen"},"content":"deactivate GradeCommand","lastModifiedDate":"2022-11-01"},{"lineNumber":86,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":87,"author":{"gitId":"HowSuen"},"content":"[\u003c--LogicManager","lastModifiedDate":"2022-11-01"},{"lineNumber":88,"author":{"gitId":"HowSuen"},"content":"deactivate LogicManager","lastModifiedDate":"2022-11-01"},{"lineNumber":89,"author":{"gitId":"HowSuen"},"content":"@enduml","lastModifiedDate":"2022-11-01"}],"authorContributionMap":{"HowSuen":89}},{"path":"docs/diagrams/LogicClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Logic {","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"HowSuen"},"content":"Class FridayParser","lastModifiedDate":"2022-10-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nLogic\" as Logic","lastModifiedDate":"2022-01-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"package Model{","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"LogicManager .right.|\u003e Logic","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"HowSuen"},"content":"LogicManager -right-\u003e\"1\" FridayParser","lastModifiedDate":"2022-10-19"},{"lineNumber":31,"author":{"gitId":"HowSuen"},"content":"FridayParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"LogicManager .left.\u003e Command : executes \u003e","lastModifiedDate":"2019-07-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"LogicManager --\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"LogicManager --\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"Storage --[hidden] Model","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"Command .[hidden]up.\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Command .right.\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"note right of XYZCommand: XYZCommand \u003d AddCommand, \\nFindCommand, etc","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Logic ..\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"LogicManager .down.\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Command .up.\u003e CommandResult : produces \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":43,"HowSuen":3}},{"path":"docs/diagrams/MarkCommandActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kaij77"},"content":"@startuml","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":3,"author":{"gitId":"kaij77"},"content":"!include style.puml","lastModifiedDate":"2022-11-07"},{"lineNumber":4,"author":{"gitId":"kaij77"},"content":"title Marking a student\u0027s Mastery Check as passed","lastModifiedDate":"2022-11-07"},{"lineNumber":5,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":6,"author":{"gitId":"kaij77"},"content":"start","lastModifiedDate":"2022-11-07"},{"lineNumber":7,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":8,"author":{"gitId":"kaij77"},"content":":Receives a \"\"mark\"\" command;","lastModifiedDate":"2022-11-07"},{"lineNumber":9,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":10,"author":{"gitId":"kaij77"},"content":"if () then ([valid command])","lastModifiedDate":"2022-11-07"},{"lineNumber":11,"author":{"gitId":"kaij77"},"content":"    :Parses the \"\"mark\"\"","lastModifiedDate":"2022-11-07"},{"lineNumber":12,"author":{"gitId":"kaij77"},"content":"    command and index;","lastModifiedDate":"2022-11-07"},{"lineNumber":13,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":14,"author":{"gitId":"kaij77"},"content":"    if () then ([Mastery Check can be marked])","lastModifiedDate":"2022-11-07"},{"lineNumber":15,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":16,"author":{"gitId":"kaij77"},"content":"    :Marks the student\u0027s Mastery","lastModifiedDate":"2022-11-07"},{"lineNumber":17,"author":{"gitId":"kaij77"},"content":"    Check as passed;","lastModifiedDate":"2022-11-07"},{"lineNumber":18,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":19,"author":{"gitId":"kaij77"},"content":"    :Displays the student\u0027s Mastery","lastModifiedDate":"2022-11-07"},{"lineNumber":20,"author":{"gitId":"kaij77"},"content":"    Check with an added","lastModifiedDate":"2022-11-07"},{"lineNumber":21,"author":{"gitId":"kaij77"},"content":"    \"(passed)\" String in the GUI;","lastModifiedDate":"2022-11-07"},{"lineNumber":22,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":23,"author":{"gitId":"kaij77"},"content":"    :Shows a success message;","lastModifiedDate":"2022-11-07"},{"lineNumber":24,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":25,"author":{"gitId":"kaij77"},"content":"    else ([else])","lastModifiedDate":"2022-11-07"},{"lineNumber":26,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":27,"author":{"gitId":"kaij77"},"content":"    :Shows the specific","lastModifiedDate":"2022-11-07"},{"lineNumber":28,"author":{"gitId":"kaij77"},"content":"    error message;","lastModifiedDate":"2022-11-07"},{"lineNumber":29,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":30,"author":{"gitId":"kaij77"},"content":"    endif","lastModifiedDate":"2022-11-07"},{"lineNumber":31,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":32,"author":{"gitId":"kaij77"},"content":"else ([else])","lastModifiedDate":"2022-11-07"},{"lineNumber":33,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":34,"author":{"gitId":"kaij77"},"content":"    :Shows an invalid","lastModifiedDate":"2022-11-07"},{"lineNumber":35,"author":{"gitId":"kaij77"},"content":"    command message;","lastModifiedDate":"2022-11-07"},{"lineNumber":36,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":37,"author":{"gitId":"kaij77"},"content":"endif","lastModifiedDate":"2022-11-07"},{"lineNumber":38,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":39,"author":{"gitId":"kaij77"},"content":"stop","lastModifiedDate":"2022-11-07"},{"lineNumber":40,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":41,"author":{"gitId":"kaij77"},"content":"@enduml","lastModifiedDate":"2022-11-07"}],"authorContributionMap":{"kaij77":41}},{"path":"docs/diagrams/MarkCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kaij77"},"content":"@startuml","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"kaij77"},"content":"!include style.puml","lastModifiedDate":"2022-11-07"},{"lineNumber":3,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":4,"author":{"gitId":"kaij77"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-11-07"},{"lineNumber":5,"author":{"gitId":"kaij77"},"content":"Participant \":LogicManager\" as logicManager LOGIC_COLOR","lastModifiedDate":"2022-11-07"},{"lineNumber":6,"author":{"gitId":"kaij77"},"content":"Participant \"mmccp: MarkMasteryCheckCommandParser\" as MarkMasteryCheckCommandParser LOGIC_COLOR","lastModifiedDate":"2022-11-07"},{"lineNumber":7,"author":{"gitId":"kaij77"},"content":"Participant \"mmcc:MarkMasteryCheckCommand\" as MarkMasteryCheckCommand LOGIC_COLOR","lastModifiedDate":"2022-11-07"},{"lineNumber":8,"author":{"gitId":"kaij77"},"content":"Participant \"r:CommandResult\" as commandResult LOGIC_COLOR","lastModifiedDate":"2022-11-07"},{"lineNumber":9,"author":{"gitId":"kaij77"},"content":"end box","lastModifiedDate":"2022-11-07"},{"lineNumber":10,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":11,"author":{"gitId":"kaij77"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-11-07"},{"lineNumber":12,"author":{"gitId":"kaij77"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2022-11-07"},{"lineNumber":13,"author":{"gitId":"kaij77"},"content":"end box","lastModifiedDate":"2022-11-07"},{"lineNumber":14,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":15,"author":{"gitId":"kaij77"},"content":"[-\u003e logicManager : execute(\"mark 1\")","lastModifiedDate":"2022-11-07"},{"lineNumber":16,"author":{"gitId":"kaij77"},"content":"activate logicManager LOGIC_COLOR","lastModifiedDate":"2022-11-07"},{"lineNumber":17,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":18,"author":{"gitId":"kaij77"},"content":"logicManager -[LOGIC_COLOR]\u003e MarkMasteryCheckCommandParser : parse(\"mark 1\")","lastModifiedDate":"2022-11-07"},{"lineNumber":19,"author":{"gitId":"kaij77"},"content":"activate MarkMasteryCheckCommandParser LOGIC_COLOR","lastModifiedDate":"2022-11-07"},{"lineNumber":20,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":21,"author":{"gitId":"kaij77"},"content":"create MarkMasteryCheckCommand","lastModifiedDate":"2022-11-07"},{"lineNumber":22,"author":{"gitId":"kaij77"},"content":"MarkMasteryCheckCommandParser -[LOGIC_COLOR]\u003e MarkMasteryCheckCommand : MarkMasteryCheckCommand(c)","lastModifiedDate":"2022-11-07"},{"lineNumber":23,"author":{"gitId":"kaij77"},"content":"activate MarkMasteryCheckCommand LOGIC_COLOR","lastModifiedDate":"2022-11-07"},{"lineNumber":24,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":25,"author":{"gitId":"kaij77"},"content":"MarkMasteryCheckCommand --[LOGIC_COLOR]\u003e MarkMasteryCheckCommandParser : mmcc","lastModifiedDate":"2022-11-07"},{"lineNumber":26,"author":{"gitId":"kaij77"},"content":"deactivate MarkMasteryCheckCommand","lastModifiedDate":"2022-11-07"},{"lineNumber":27,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":28,"author":{"gitId":"kaij77"},"content":"MarkMasteryCheckCommandParser --[LOGIC_COLOR]\u003e logicManager : mmcc","lastModifiedDate":"2022-11-07"},{"lineNumber":29,"author":{"gitId":"kaij77"},"content":"deactivate MarkMasteryCheckCommandParser","lastModifiedDate":"2022-11-07"},{"lineNumber":30,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":31,"author":{"gitId":"kaij77"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2022-11-07"},{"lineNumber":32,"author":{"gitId":"kaij77"},"content":"MarkMasteryCheckCommandParser -[hidden]-\u003e logicManager","lastModifiedDate":"2022-11-07"},{"lineNumber":33,"author":{"gitId":"kaij77"},"content":"destroy MarkMasteryCheckCommandParser","lastModifiedDate":"2022-11-07"},{"lineNumber":34,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":35,"author":{"gitId":"kaij77"},"content":"logicManager -[LOGIC_COLOR]\u003e MarkMasteryCheckCommand : execute(m)","lastModifiedDate":"2022-11-07"},{"lineNumber":36,"author":{"gitId":"kaij77"},"content":"activate MarkMasteryCheckCommand LOGIC_COLOR","lastModifiedDate":"2022-11-07"},{"lineNumber":37,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":38,"author":{"gitId":"kaij77"},"content":"MarkMasteryCheckCommand -[MODEL_COLOR]\u003e model : studentToMark.getMasteryCheck().markAsPassed()","lastModifiedDate":"2022-11-07"},{"lineNumber":39,"author":{"gitId":"kaij77"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2022-11-07"},{"lineNumber":40,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":41,"author":{"gitId":"kaij77"},"content":"model --[MODEL_COLOR]\u003e MarkMasteryCheckCommand","lastModifiedDate":"2022-11-07"},{"lineNumber":42,"author":{"gitId":"kaij77"},"content":"deactivate model","lastModifiedDate":"2022-11-07"},{"lineNumber":43,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":44,"author":{"gitId":"kaij77"},"content":"create commandResult","lastModifiedDate":"2022-11-07"},{"lineNumber":45,"author":{"gitId":"kaij77"},"content":"MarkMasteryCheckCommand -[LOGIC_COLOR]\u003e commandResult","lastModifiedDate":"2022-11-07"},{"lineNumber":46,"author":{"gitId":"kaij77"},"content":"activate commandResult LOGIC_COLOR","lastModifiedDate":"2022-11-07"},{"lineNumber":47,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":48,"author":{"gitId":"kaij77"},"content":"commandResult --[LOGIC_COLOR]\u003e MarkMasteryCheckCommand : r","lastModifiedDate":"2022-11-07"},{"lineNumber":49,"author":{"gitId":"kaij77"},"content":"deactivate commandResult","lastModifiedDate":"2022-11-07"},{"lineNumber":50,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":51,"author":{"gitId":"kaij77"},"content":"MarkMasteryCheckCommand --[LOGIC_COLOR]\u003e logicManager : r","lastModifiedDate":"2022-11-07"},{"lineNumber":52,"author":{"gitId":"kaij77"},"content":"deactivate MarkMasteryCheckCommand","lastModifiedDate":"2022-11-07"},{"lineNumber":53,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":54,"author":{"gitId":"kaij77"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2022-11-07"},{"lineNumber":55,"author":{"gitId":"kaij77"},"content":"MarkMasteryCheckCommand -[hidden]-\u003e logicManager","lastModifiedDate":"2022-11-07"},{"lineNumber":56,"author":{"gitId":"kaij77"},"content":"destroy MarkMasteryCheckCommand","lastModifiedDate":"2022-11-07"},{"lineNumber":57,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":58,"author":{"gitId":"kaij77"},"content":"[\u003c[LOGIC_COLOR]-- logicManager : r","lastModifiedDate":"2022-11-07"},{"lineNumber":59,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":60,"author":{"gitId":"kaij77"},"content":"deactivate logicManager","lastModifiedDate":"2022-11-07"},{"lineNumber":61,"author":{"gitId":"kaij77"},"content":"@enduml","lastModifiedDate":"2022-11-07"}],"authorContributionMap":{"kaij77":61}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"Yuvaraj0702"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyFriday\" as ReadOnlyFriday","lastModifiedDate":"2022-11-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"Yuvaraj0702"},"content":"Class Friday","lastModifiedDate":"2022-11-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"jorrdansoh"},"content":"Class UniqueStudentList","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"jorrdansoh"},"content":"Class Student","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"darrtzj"},"content":"Class MasteryCheck","lastModifiedDate":"2022-11-07"},{"lineNumber":18,"author":{"gitId":"darrtzj"},"content":"Class TelegramHandle","lastModifiedDate":"2022-11-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"darrtzj"},"content":"Class Consultation","lastModifiedDate":"2022-11-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"darrtzj"},"content":"Class Remark","lastModifiedDate":"2022-11-07"},{"lineNumber":23,"author":{"gitId":"darrtzj"},"content":"Class GradesList","lastModifiedDate":"2022-11-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"darrtzj"},"content":"Class AliasMap","lastModifiedDate":"2022-11-06"},{"lineNumber":26,"author":{"gitId":"darrtzj"},"content":"Class Alias","lastModifiedDate":"2022-11-06"},{"lineNumber":27,"author":{"gitId":"darrtzj"},"content":"Class ReservedKeyword","lastModifiedDate":"2022-11-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"Yuvaraj0702"},"content":"Friday .up.|\u003e ReadOnlyFriday","lastModifiedDate":"2022-11-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"Yuvaraj0702"},"content":"Model .left.\u003e ReadOnlyFriday","lastModifiedDate":"2022-11-02"},{"lineNumber":39,"author":{"gitId":"Yuvaraj0702"},"content":"ModelManager -left-\u003e \"1\" Friday","lastModifiedDate":"2022-11-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"Yuvaraj0702"},"content":"Friday *--\u003e \"1\" UniqueStudentList","lastModifiedDate":"2022-11-02"},{"lineNumber":44,"author":{"gitId":"darrtzj"},"content":"Friday *--\u003e \"1\" AliasMap","lastModifiedDate":"2022-11-06"},{"lineNumber":45,"author":{"gitId":"jorrdansoh"},"content":"UniqueStudentList --\u003e \"~* all\" Student","lastModifiedDate":"2022-10-20"},{"lineNumber":46,"author":{"gitId":"darrtzj"},"content":"AliasMap *--\u003e Alias","lastModifiedDate":"2022-11-06"},{"lineNumber":47,"author":{"gitId":"darrtzj"},"content":"AliasMap *--\u003e ReservedKeyword","lastModifiedDate":"2022-11-06"},{"lineNumber":48,"author":{"gitId":"darrtzj"},"content":"Alias \u003c--\u003e ReservedKeyword","lastModifiedDate":"2022-11-06"},{"lineNumber":49,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":50,"author":{"gitId":"jorrdansoh"},"content":"Student *--\u003e Name","lastModifiedDate":"2022-10-20"},{"lineNumber":51,"author":{"gitId":"darrtzj"},"content":"Student *--\u003e TelegramHandle","lastModifiedDate":"2022-11-07"},{"lineNumber":52,"author":{"gitId":"darrtzj"},"content":"Student *--\u003e MasteryCheck","lastModifiedDate":"2022-11-07"},{"lineNumber":53,"author":{"gitId":"darrtzj"},"content":"Student *--\u003e Consultation","lastModifiedDate":"2022-11-07"},{"lineNumber":54,"author":{"gitId":"jorrdansoh"},"content":"Student *--\u003e \"*\" Tag","lastModifiedDate":"2022-10-20"},{"lineNumber":55,"author":{"gitId":"darrtzj"},"content":"Student *--\u003e Remark","lastModifiedDate":"2022-11-07"},{"lineNumber":56,"author":{"gitId":"darrtzj"},"content":"Student *--\u003e GradesList","lastModifiedDate":"2022-11-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"darrtzj"},"content":"Alias -[hidden]right-\u003e ReservedKeyword","lastModifiedDate":"2022-11-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"jorrdansoh"},"content":"ModelManager --\u003e\"~* filtered\" Student","lastModifiedDate":"2022-10-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"jorrdansoh":6,"Yuvaraj0702":6,"darrtzj":19,"-":30}},{"path":"docs/diagrams/ParserClasses.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2021-07-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2021-07-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-07-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2021-07-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2021-07-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"package \"Parser classes\"{","lastModifiedDate":"2021-07-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nParser\" as Parser","lastModifiedDate":"2022-01-03"},{"lineNumber":12,"author":{"gitId":"HowSuen"},"content":"Class FridayParser","lastModifiedDate":"2022-10-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class XYZCommandParser","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"HowSuen"},"content":"HiddenOutside ..\u003e FridayParser","lastModifiedDate":"2022-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"HowSuen"},"content":"FridayParser .down.\u003e XYZCommandParser: creates \u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"HowSuen"},"content":"FridayParser ..\u003e Command : returns \u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"XYZCommandParser .up.|\u003e Parser","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"ArgumentTokenizer .left.\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"CliSyntax ..\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"ParserUtil .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ArgumentTokenizer .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2021-07-31"}],"authorContributionMap":{"-":34,"HowSuen":4}},{"path":"docs/diagrams/SortCommandActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jorrdansoh"},"content":"@startuml","lastModifiedDate":"2022-11-01"},{"lineNumber":2,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":3,"author":{"gitId":"jorrdansoh"},"content":"!include style.puml","lastModifiedDate":"2022-11-01"},{"lineNumber":4,"author":{"gitId":"jorrdansoh"},"content":"title Sorting students","lastModifiedDate":"2022-11-01"},{"lineNumber":5,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":6,"author":{"gitId":"jorrdansoh"},"content":"start","lastModifiedDate":"2022-11-01"},{"lineNumber":7,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":8,"author":{"gitId":"jorrdansoh"},"content":":Receives a \"\"sort\"\" command;","lastModifiedDate":"2022-11-01"},{"lineNumber":9,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":10,"author":{"gitId":"jorrdansoh"},"content":"if () then ([valid command])","lastModifiedDate":"2022-11-01"},{"lineNumber":11,"author":{"gitId":"jorrdansoh"},"content":"    :Parses the \"\"sort\"\"","lastModifiedDate":"2022-11-01"},{"lineNumber":12,"author":{"gitId":"jorrdansoh"},"content":"    command, criteria and order;","lastModifiedDate":"2022-11-01"},{"lineNumber":13,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":14,"author":{"gitId":"jorrdansoh"},"content":"    :Sorts all students based on the criteria and order;","lastModifiedDate":"2022-11-01"},{"lineNumber":15,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":16,"author":{"gitId":"jorrdansoh"},"content":"    :Displays all sorted students to the user;","lastModifiedDate":"2022-11-01"},{"lineNumber":17,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":18,"author":{"gitId":"jorrdansoh"},"content":"    :Shows a success message;","lastModifiedDate":"2022-11-01"},{"lineNumber":19,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":20,"author":{"gitId":"jorrdansoh"},"content":"else ([else])","lastModifiedDate":"2022-11-01"},{"lineNumber":21,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":22,"author":{"gitId":"jorrdansoh"},"content":"    :Shows an invalid","lastModifiedDate":"2022-11-01"},{"lineNumber":23,"author":{"gitId":"jorrdansoh"},"content":"    command message;","lastModifiedDate":"2022-11-01"},{"lineNumber":24,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":25,"author":{"gitId":"jorrdansoh"},"content":"endif","lastModifiedDate":"2022-11-01"},{"lineNumber":26,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":27,"author":{"gitId":"jorrdansoh"},"content":"stop","lastModifiedDate":"2022-11-01"},{"lineNumber":28,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":29,"author":{"gitId":"jorrdansoh"},"content":"@enduml","lastModifiedDate":"2022-11-01"}],"authorContributionMap":{"jorrdansoh":29}},{"path":"docs/diagrams/SortCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jorrdansoh"},"content":"@startuml","lastModifiedDate":"2022-11-01"},{"lineNumber":2,"author":{"gitId":"jorrdansoh"},"content":"!include style.puml","lastModifiedDate":"2022-11-01"},{"lineNumber":3,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":4,"author":{"gitId":"jorrdansoh"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-11-01"},{"lineNumber":5,"author":{"gitId":"jorrdansoh"},"content":"Participant \":LogicManager\" as logicManager LOGIC_COLOR","lastModifiedDate":"2022-11-01"},{"lineNumber":6,"author":{"gitId":"jorrdansoh"},"content":"Participant \"scp:SortCommandParser\" as sortCommandParser LOGIC_COLOR","lastModifiedDate":"2022-11-01"},{"lineNumber":7,"author":{"gitId":"jorrdansoh"},"content":"Participant \"sc:SortCommand\" as sortCommand LOGIC_COLOR","lastModifiedDate":"2022-11-01"},{"lineNumber":8,"author":{"gitId":"jorrdansoh"},"content":"Participant \"r:CommandResult\" as commandResult LOGIC_COLOR","lastModifiedDate":"2022-11-01"},{"lineNumber":9,"author":{"gitId":"jorrdansoh"},"content":"end box","lastModifiedDate":"2022-11-01"},{"lineNumber":10,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":11,"author":{"gitId":"jorrdansoh"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-11-01"},{"lineNumber":12,"author":{"gitId":"jorrdansoh"},"content":"Participant \":ModelManager\" as modelManager MODEL_COLOR","lastModifiedDate":"2022-11-05"},{"lineNumber":13,"author":{"gitId":"jorrdansoh"},"content":"Participant \":SortedList\" as sortedList MODEL_COLOR","lastModifiedDate":"2022-11-05"},{"lineNumber":14,"author":{"gitId":"jorrdansoh"},"content":"end box","lastModifiedDate":"2022-11-01"},{"lineNumber":15,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":16,"author":{"gitId":"jorrdansoh"},"content":"[-\u003e logicManager : execute(\"sort n/a\")","lastModifiedDate":"2022-11-01"},{"lineNumber":17,"author":{"gitId":"jorrdansoh"},"content":"activate logicManager LOGIC_COLOR","lastModifiedDate":"2022-11-01"},{"lineNumber":18,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":19,"author":{"gitId":"jorrdansoh"},"content":"logicManager -[LOGIC_COLOR]\u003e sortCommandParser : parse(\"n/a\")","lastModifiedDate":"2022-11-01"},{"lineNumber":20,"author":{"gitId":"jorrdansoh"},"content":"activate sortCommandParser LOGIC_COLOR","lastModifiedDate":"2022-11-01"},{"lineNumber":21,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":22,"author":{"gitId":"jorrdansoh"},"content":"create sortCommand","lastModifiedDate":"2022-11-01"},{"lineNumber":23,"author":{"gitId":"jorrdansoh"},"content":"sortCommandParser -[LOGIC_COLOR]\u003e sortCommand : sortCommand(c)","lastModifiedDate":"2022-11-01"},{"lineNumber":24,"author":{"gitId":"jorrdansoh"},"content":"activate sortCommand LOGIC_COLOR","lastModifiedDate":"2022-11-01"},{"lineNumber":25,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":26,"author":{"gitId":"jorrdansoh"},"content":"sortCommand --[LOGIC_COLOR]\u003e sortCommandParser : \"\"sc\"\"","lastModifiedDate":"2022-11-01"},{"lineNumber":27,"author":{"gitId":"jorrdansoh"},"content":"deactivate sortCommand","lastModifiedDate":"2022-11-01"},{"lineNumber":28,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":29,"author":{"gitId":"jorrdansoh"},"content":"sortCommandParser --[LOGIC_COLOR]\u003e logicManager : \"\"sc\"\"","lastModifiedDate":"2022-11-01"},{"lineNumber":30,"author":{"gitId":"jorrdansoh"},"content":"deactivate sortCommandParser","lastModifiedDate":"2022-11-01"},{"lineNumber":31,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":32,"author":{"gitId":"jorrdansoh"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2022-11-05"},{"lineNumber":33,"author":{"gitId":"jorrdansoh"},"content":"sortCommandParser -[hidden]-\u003e logicManager","lastModifiedDate":"2022-11-05"},{"lineNumber":34,"author":{"gitId":"jorrdansoh"},"content":"destroy sortCommandParser","lastModifiedDate":"2022-11-05"},{"lineNumber":35,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":36,"author":{"gitId":"jorrdansoh"},"content":"logicManager -[LOGIC_COLOR]\u003e sortCommand : execute(m)","lastModifiedDate":"2022-11-05"},{"lineNumber":37,"author":{"gitId":"jorrdansoh"},"content":"activate sortCommand LOGIC_COLOR","lastModifiedDate":"2022-11-01"},{"lineNumber":38,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":39,"author":{"gitId":"jorrdansoh"},"content":"sortCommand -[MODEL_COLOR]\u003e modelManager : updateSortedStudentList(c)","lastModifiedDate":"2022-11-05"},{"lineNumber":40,"author":{"gitId":"jorrdansoh"},"content":"activate modelManager MODEL_COLOR","lastModifiedDate":"2022-11-01"},{"lineNumber":41,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":42,"author":{"gitId":"jorrdansoh"},"content":"modelManager -[MODEL_COLOR]\u003e sortedList : setComparator(c)","lastModifiedDate":"2022-11-05"},{"lineNumber":43,"author":{"gitId":"jorrdansoh"},"content":"activate sortedList MODEL_COLOR","lastModifiedDate":"2022-11-01"},{"lineNumber":44,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":45,"author":{"gitId":"jorrdansoh"},"content":"sortedList --[MODEL_COLOR]\u003e modelManager","lastModifiedDate":"2022-11-01"},{"lineNumber":46,"author":{"gitId":"jorrdansoh"},"content":"deactivate sortedList","lastModifiedDate":"2022-11-01"},{"lineNumber":47,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":48,"author":{"gitId":"jorrdansoh"},"content":"modelManager --[MODEL_COLOR]\u003e sortCommand","lastModifiedDate":"2022-11-01"},{"lineNumber":49,"author":{"gitId":"jorrdansoh"},"content":"deactivate modelManager","lastModifiedDate":"2022-11-01"},{"lineNumber":50,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":51,"author":{"gitId":"jorrdansoh"},"content":"create commandResult","lastModifiedDate":"2022-11-01"},{"lineNumber":52,"author":{"gitId":"jorrdansoh"},"content":"sortCommand -[LOGIC_COLOR]\u003e commandResult","lastModifiedDate":"2022-11-01"},{"lineNumber":53,"author":{"gitId":"jorrdansoh"},"content":"activate commandResult LOGIC_COLOR","lastModifiedDate":"2022-11-01"},{"lineNumber":54,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":55,"author":{"gitId":"jorrdansoh"},"content":"commandResult --[LOGIC_COLOR]\u003e sortCommand : \"\"r\"\"","lastModifiedDate":"2022-11-01"},{"lineNumber":56,"author":{"gitId":"jorrdansoh"},"content":"deactivate commandResult","lastModifiedDate":"2022-11-01"},{"lineNumber":57,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":58,"author":{"gitId":"jorrdansoh"},"content":"sortCommand --[LOGIC_COLOR]\u003e logicManager : \"\"r\"\"","lastModifiedDate":"2022-11-01"},{"lineNumber":59,"author":{"gitId":"jorrdansoh"},"content":"deactivate sortCommand","lastModifiedDate":"2022-11-01"},{"lineNumber":60,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":61,"author":{"gitId":"jorrdansoh"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2022-11-05"},{"lineNumber":62,"author":{"gitId":"jorrdansoh"},"content":"sortCommand -[hidden]-\u003e logicManager","lastModifiedDate":"2022-11-05"},{"lineNumber":63,"author":{"gitId":"jorrdansoh"},"content":"destroy sortCommand","lastModifiedDate":"2022-11-05"},{"lineNumber":64,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":65,"author":{"gitId":"jorrdansoh"},"content":"[\u003c[LOGIC_COLOR]-- logicManager : \"\"r\"\"","lastModifiedDate":"2022-11-01"},{"lineNumber":66,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":67,"author":{"gitId":"jorrdansoh"},"content":"deactivate logicManager","lastModifiedDate":"2022-11-01"},{"lineNumber":68,"author":{"gitId":"jorrdansoh"},"content":"@enduml","lastModifiedDate":"2022-11-01"}],"authorContributionMap":{"jorrdansoh":68}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUserPrefsStorage\" as UserPrefsStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nStorage\" as Storage","lastModifiedDate":"2022-01-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"Yuvaraj0702"},"content":"package \"Friday Storage\" #F4F6F6{","lastModifiedDate":"2022-11-02"},{"lineNumber":18,"author":{"gitId":"Yuvaraj0702"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nFridayStorage\" as FridayStorage","lastModifiedDate":"2022-11-02"},{"lineNumber":19,"author":{"gitId":"Yuvaraj0702"},"content":"Class JsonFridayStorage","lastModifiedDate":"2022-11-02"},{"lineNumber":20,"author":{"gitId":"Yuvaraj0702"},"content":"Class JsonSerializableFriday","lastModifiedDate":"2022-11-02"},{"lineNumber":21,"author":{"gitId":"darrtzj"},"content":"Class JsonAdaptedAlias","lastModifiedDate":"2022-11-06"},{"lineNumber":22,"author":{"gitId":"jorrdansoh"},"content":"Class JsonAdaptedStudent","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"darrtzj"},"content":"Class JsonAdaptedGrade","lastModifiedDate":"2022-11-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"Yuvaraj0702"},"content":"StorageManager -up-\u003e \"1\" FridayStorage","lastModifiedDate":"2022-11-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Storage -left-|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"Yuvaraj0702"},"content":"Storage -right-|\u003e FridayStorage","lastModifiedDate":"2022-11-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"Yuvaraj0702"},"content":"JsonFridayStorage .up.|\u003e FridayStorage","lastModifiedDate":"2022-11-02"},{"lineNumber":41,"author":{"gitId":"Yuvaraj0702"},"content":"JsonFridayStorage ..\u003e JsonSerializableFriday","lastModifiedDate":"2022-11-02"},{"lineNumber":42,"author":{"gitId":"Yuvaraj0702"},"content":"JsonSerializableFriday --\u003e \"*\" JsonAdaptedStudent","lastModifiedDate":"2022-11-02"},{"lineNumber":43,"author":{"gitId":"darrtzj"},"content":"JsonSerializableFriday --\u003e \"*\" JsonAdaptedAlias","lastModifiedDate":"2022-11-06"},{"lineNumber":44,"author":{"gitId":"darrtzj"},"content":"JsonAdaptedStudent --\u003e \"5\" JsonAdaptedGrade","lastModifiedDate":"2022-11-07"},{"lineNumber":45,"author":{"gitId":"jorrdansoh"},"content":"JsonAdaptedStudent --\u003e \"*\" JsonAdaptedTag","lastModifiedDate":"2022-10-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"jorrdansoh":2,"Yuvaraj0702":9,"darrtzj":4,"-":32}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUi\" as Ui","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"HowSuen"},"content":"Class StudentListPanel","lastModifiedDate":"2022-10-19"},{"lineNumber":15,"author":{"gitId":"HowSuen"},"content":"Class StudentCard","lastModifiedDate":"2022-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e  \"1\" CommandBox","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" ResultDisplay","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"HowSuen"},"content":"MainWindow *-down-\u003e \"1\" StudentListPanel","lastModifiedDate":"2022-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" StatusBarFooter","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"MainWindow --\u003e \"0..1\" HelpWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"HowSuen"},"content":"StudentListPanel -down-\u003e \"*\" StudentCard","lastModifiedDate":"2022-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"HowSuen"},"content":"StudentListPanel --|\u003e UiPart","lastModifiedDate":"2022-10-19"},{"lineNumber":46,"author":{"gitId":"HowSuen"},"content":"StudentCard --|\u003e UiPart","lastModifiedDate":"2022-10-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"HelpWindow --|\u003e UiPart","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"HowSuen"},"content":"StudentCard ..\u003e Model","lastModifiedDate":"2022-10-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"HowSuen"},"content":"StudentListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2022-10-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":52,"HowSuen":8}},{"path":"docs/diagrams/UndoRedoState0.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title Initial state","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"Yuvaraj0702"},"content":"    class State1 as \"__ab0:Friday__\"","lastModifiedDate":"2022-11-02"},{"lineNumber":10,"author":{"gitId":"Yuvaraj0702"},"content":"    class State2 as \"__ab1:Friday__\"","lastModifiedDate":"2022-11-02"},{"lineNumber":11,"author":{"gitId":"Yuvaraj0702"},"content":"    class State3 as \"__ab2:Friday__\"","lastModifiedDate":"2022-11-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"hide State2","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"hide State3","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State1","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Yuvaraj0702":3,"-":17}},{"path":"docs/diagrams/UndoRedoState1.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"delete 5\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"Yuvaraj0702"},"content":"    class State1 as \"__ab0:Friday__\"","lastModifiedDate":"2022-11-02"},{"lineNumber":10,"author":{"gitId":"Yuvaraj0702"},"content":"    class State2 as \"__ab1:Friday__\"","lastModifiedDate":"2022-11-02"},{"lineNumber":11,"author":{"gitId":"Yuvaraj0702"},"content":"    class State3 as \"__ab2:Friday__\"","lastModifiedDate":"2022-11-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"hide State3","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Yuvaraj0702":3,"-":19}},{"path":"docs/diagrams/UndoRedoState2.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"add n/David\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"Yuvaraj0702"},"content":"    class State1 as \"__ab0:Friday__\"","lastModifiedDate":"2022-11-02"},{"lineNumber":10,"author":{"gitId":"Yuvaraj0702"},"content":"    class State2 as \"__ab1:Friday__\"","lastModifiedDate":"2022-11-02"},{"lineNumber":11,"author":{"gitId":"Yuvaraj0702"},"content":"    class State3 as \"__ab2:Friday__\"","lastModifiedDate":"2022-11-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Yuvaraj0702":3,"-":17}},{"path":"docs/diagrams/UndoRedoState3.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"undo\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"Yuvaraj0702"},"content":"    class State1 as \"__ab0:Friday__\"","lastModifiedDate":"2022-11-02"},{"lineNumber":10,"author":{"gitId":"Yuvaraj0702"},"content":"    class State2 as \"__ab1:Friday__\"","lastModifiedDate":"2022-11-02"},{"lineNumber":11,"author":{"gitId":"Yuvaraj0702"},"content":"    class State3 as \"__ab2:Friday__\"","lastModifiedDate":"2022-11-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Yuvaraj0702":3,"-":17}},{"path":"docs/diagrams/UndoRedoState4.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"list\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"Yuvaraj0702"},"content":"    class State1 as \"__ab0:Friday__\"","lastModifiedDate":"2022-11-02"},{"lineNumber":10,"author":{"gitId":"Yuvaraj0702"},"content":"    class State2 as \"__ab1:Friday__\"","lastModifiedDate":"2022-11-02"},{"lineNumber":11,"author":{"gitId":"Yuvaraj0702"},"content":"    class State3 as \"__ab2:Friday__\"","lastModifiedDate":"2022-11-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Yuvaraj0702":3,"-":17}},{"path":"docs/diagrams/UndoRedoState5.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"clear\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"Yuvaraj0702"},"content":"    class State1 as \"__ab0:Friday__\"","lastModifiedDate":"2022-11-02"},{"lineNumber":10,"author":{"gitId":"Yuvaraj0702"},"content":"    class State2 as \"__ab1:Friday__\"","lastModifiedDate":"2022-11-02"},{"lineNumber":11,"author":{"gitId":"Yuvaraj0702"},"content":"    class State3 as \"__ab3:Friday__\"","lastModifiedDate":"2022-11-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"note right on link: State ab2 deleted.","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Yuvaraj0702":3,"-":18}},{"path":"docs/diagrams/UndoSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"Yuvaraj0702"},"content":"participant \":FridayParser\" as FridayParser LOGIC_COLOR","lastModifiedDate":"2022-11-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"participant \"u:UndoCommand\" as UndoCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"Yuvaraj0702"},"content":"participant \":VersionedFriday\" as VersionedFriday MODEL_COLOR","lastModifiedDate":"2022-11-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"[-\u003e LogicManager : execute(undo)","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"Yuvaraj0702"},"content":"LogicManager -\u003e FridayParser : parseCommand(undo)","lastModifiedDate":"2022-11-02"},{"lineNumber":18,"author":{"gitId":"Yuvaraj0702"},"content":"activate FridayParser","lastModifiedDate":"2022-11-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"create UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"Yuvaraj0702"},"content":"FridayParser -\u003e UndoCommand","lastModifiedDate":"2022-11-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"activate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"Yuvaraj0702"},"content":"UndoCommand --\u003e FridayParser","lastModifiedDate":"2022-11-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"deactivate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"Yuvaraj0702"},"content":"FridayParser --\u003e LogicManager : u","lastModifiedDate":"2022-11-02"},{"lineNumber":28,"author":{"gitId":"Yuvaraj0702"},"content":"deactivate FridayParser","lastModifiedDate":"2022-11-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"LogicManager -\u003e UndoCommand : execute()","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"activate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"Yuvaraj0702"},"content":"UndoCommand -\u003e Model : undoFriday()","lastModifiedDate":"2022-11-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"Yuvaraj0702"},"content":"Model -\u003e VersionedFriday : undo()","lastModifiedDate":"2022-11-02"},{"lineNumber":37,"author":{"gitId":"Yuvaraj0702"},"content":"activate VersionedFriday","lastModifiedDate":"2022-11-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"Yuvaraj0702"},"content":"VersionedFriday -\u003e VersionedFriday :resetData(ReadOnlyFriday)","lastModifiedDate":"2022-11-02"},{"lineNumber":40,"author":{"gitId":"Yuvaraj0702"},"content":"VersionedFriday --\u003e Model :","lastModifiedDate":"2022-11-02"},{"lineNumber":41,"author":{"gitId":"Yuvaraj0702"},"content":"deactivate VersionedFriday","lastModifiedDate":"2022-11-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Model --\u003e UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"UndoCommand --\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"deactivate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"UndoCommand -[hidden]-\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"destroy UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Yuvaraj0702":14,"-":39}},{"path":"docs/diagrams/UnmarkCommandActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kaij77"},"content":"@startuml","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":3,"author":{"gitId":"kaij77"},"content":"!include style.puml","lastModifiedDate":"2022-11-07"},{"lineNumber":4,"author":{"gitId":"kaij77"},"content":"title Unmarking a student\u0027s Mastery Check","lastModifiedDate":"2022-11-07"},{"lineNumber":5,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":6,"author":{"gitId":"kaij77"},"content":"start","lastModifiedDate":"2022-11-07"},{"lineNumber":7,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":8,"author":{"gitId":"kaij77"},"content":":Receives an \"\"unmark\"\" command;","lastModifiedDate":"2022-11-07"},{"lineNumber":9,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":10,"author":{"gitId":"kaij77"},"content":"if () then ([valid command])","lastModifiedDate":"2022-11-07"},{"lineNumber":11,"author":{"gitId":"kaij77"},"content":"    :Parses the \"\"unmark\"\"","lastModifiedDate":"2022-11-07"},{"lineNumber":12,"author":{"gitId":"kaij77"},"content":"    command and index;","lastModifiedDate":"2022-11-07"},{"lineNumber":13,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":14,"author":{"gitId":"kaij77"},"content":"    if () then ([Mastery Check can be unmarked])","lastModifiedDate":"2022-11-07"},{"lineNumber":15,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":16,"author":{"gitId":"kaij77"},"content":"    :Unmarks the student\u0027s","lastModifiedDate":"2022-11-07"},{"lineNumber":17,"author":{"gitId":"kaij77"},"content":"    Mastery Check;","lastModifiedDate":"2022-11-07"},{"lineNumber":18,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":19,"author":{"gitId":"kaij77"},"content":"    :Removes the \"(passed)\"","lastModifiedDate":"2022-11-07"},{"lineNumber":20,"author":{"gitId":"kaij77"},"content":"    String from the student\u0027s Mastery","lastModifiedDate":"2022-11-07"},{"lineNumber":21,"author":{"gitId":"kaij77"},"content":"    Check in the GUI;","lastModifiedDate":"2022-11-07"},{"lineNumber":22,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":23,"author":{"gitId":"kaij77"},"content":"    :Shows a success message;","lastModifiedDate":"2022-11-07"},{"lineNumber":24,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":25,"author":{"gitId":"kaij77"},"content":"    else ([else])","lastModifiedDate":"2022-11-07"},{"lineNumber":26,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":27,"author":{"gitId":"kaij77"},"content":"    :Shows the specific","lastModifiedDate":"2022-11-07"},{"lineNumber":28,"author":{"gitId":"kaij77"},"content":"    error message;","lastModifiedDate":"2022-11-07"},{"lineNumber":29,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":30,"author":{"gitId":"kaij77"},"content":"    endif","lastModifiedDate":"2022-11-07"},{"lineNumber":31,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":32,"author":{"gitId":"kaij77"},"content":"else ([else])","lastModifiedDate":"2022-11-07"},{"lineNumber":33,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":34,"author":{"gitId":"kaij77"},"content":"    :Shows an invalid","lastModifiedDate":"2022-11-07"},{"lineNumber":35,"author":{"gitId":"kaij77"},"content":"    command message;","lastModifiedDate":"2022-11-07"},{"lineNumber":36,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":37,"author":{"gitId":"kaij77"},"content":"endif","lastModifiedDate":"2022-11-07"},{"lineNumber":38,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":39,"author":{"gitId":"kaij77"},"content":"stop","lastModifiedDate":"2022-11-07"},{"lineNumber":40,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":41,"author":{"gitId":"kaij77"},"content":"@enduml","lastModifiedDate":"2022-11-07"}],"authorContributionMap":{"kaij77":41}},{"path":"docs/diagrams/UnmarkCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kaij77"},"content":"@startuml","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"kaij77"},"content":"!include style.puml","lastModifiedDate":"2022-11-07"},{"lineNumber":3,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":4,"author":{"gitId":"kaij77"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-11-07"},{"lineNumber":5,"author":{"gitId":"kaij77"},"content":"Participant \":LogicManager\" as logicManager LOGIC_COLOR","lastModifiedDate":"2022-11-07"},{"lineNumber":6,"author":{"gitId":"kaij77"},"content":"Participant \"umccp: UnmarkMasteryCheckCommandParser\" as UnmarkMasteryCheckCommandParser LOGIC_COLOR","lastModifiedDate":"2022-11-07"},{"lineNumber":7,"author":{"gitId":"kaij77"},"content":"Participant \"umcc:UnmarkMasteryCheckCommand\" as UnmarkMasteryCheckCommand LOGIC_COLOR","lastModifiedDate":"2022-11-07"},{"lineNumber":8,"author":{"gitId":"kaij77"},"content":"Participant \"r:CommandResult\" as commandResult LOGIC_COLOR","lastModifiedDate":"2022-11-07"},{"lineNumber":9,"author":{"gitId":"kaij77"},"content":"end box","lastModifiedDate":"2022-11-07"},{"lineNumber":10,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":11,"author":{"gitId":"kaij77"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-11-07"},{"lineNumber":12,"author":{"gitId":"kaij77"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2022-11-07"},{"lineNumber":13,"author":{"gitId":"kaij77"},"content":"end box","lastModifiedDate":"2022-11-07"},{"lineNumber":14,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":15,"author":{"gitId":"kaij77"},"content":"[-\u003e logicManager : execute(\"unmark 1\")","lastModifiedDate":"2022-11-07"},{"lineNumber":16,"author":{"gitId":"kaij77"},"content":"activate logicManager LOGIC_COLOR","lastModifiedDate":"2022-11-07"},{"lineNumber":17,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":18,"author":{"gitId":"kaij77"},"content":"logicManager -[LOGIC_COLOR]\u003e UnmarkMasteryCheckCommandParser : parse(\"unmark 1\")","lastModifiedDate":"2022-11-07"},{"lineNumber":19,"author":{"gitId":"kaij77"},"content":"activate UnmarkMasteryCheckCommandParser LOGIC_COLOR","lastModifiedDate":"2022-11-07"},{"lineNumber":20,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":21,"author":{"gitId":"kaij77"},"content":"create UnmarkMasteryCheckCommand","lastModifiedDate":"2022-11-07"},{"lineNumber":22,"author":{"gitId":"kaij77"},"content":"UnmarkMasteryCheckCommandParser -[LOGIC_COLOR]\u003e UnmarkMasteryCheckCommand : UnmarkMasteryCheckCommand(c)","lastModifiedDate":"2022-11-07"},{"lineNumber":23,"author":{"gitId":"kaij77"},"content":"activate UnmarkMasteryCheckCommand LOGIC_COLOR","lastModifiedDate":"2022-11-07"},{"lineNumber":24,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":25,"author":{"gitId":"kaij77"},"content":"UnmarkMasteryCheckCommand --[LOGIC_COLOR]\u003e UnmarkMasteryCheckCommandParser : umcc","lastModifiedDate":"2022-11-07"},{"lineNumber":26,"author":{"gitId":"kaij77"},"content":"deactivate UnmarkMasteryCheckCommand","lastModifiedDate":"2022-11-07"},{"lineNumber":27,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":28,"author":{"gitId":"kaij77"},"content":"UnmarkMasteryCheckCommandParser --[LOGIC_COLOR]\u003e logicManager : umcc","lastModifiedDate":"2022-11-07"},{"lineNumber":29,"author":{"gitId":"kaij77"},"content":"deactivate UnmarkMasteryCheckCommandParser","lastModifiedDate":"2022-11-07"},{"lineNumber":30,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":31,"author":{"gitId":"kaij77"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2022-11-07"},{"lineNumber":32,"author":{"gitId":"kaij77"},"content":"UnmarkMasteryCheckCommandParser -[hidden]-\u003e logicManager","lastModifiedDate":"2022-11-07"},{"lineNumber":33,"author":{"gitId":"kaij77"},"content":"destroy UnmarkMasteryCheckCommandParser","lastModifiedDate":"2022-11-07"},{"lineNumber":34,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":35,"author":{"gitId":"kaij77"},"content":"logicManager -[LOGIC_COLOR]\u003e UnmarkMasteryCheckCommand : execute(m)","lastModifiedDate":"2022-11-07"},{"lineNumber":36,"author":{"gitId":"kaij77"},"content":"activate UnmarkMasteryCheckCommand LOGIC_COLOR","lastModifiedDate":"2022-11-07"},{"lineNumber":37,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":38,"author":{"gitId":"kaij77"},"content":"UnmarkMasteryCheckCommand -[MODEL_COLOR]\u003e model : studentToMark.getMasteryCheck().unmark()","lastModifiedDate":"2022-11-07"},{"lineNumber":39,"author":{"gitId":"kaij77"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2022-11-07"},{"lineNumber":40,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":41,"author":{"gitId":"kaij77"},"content":"model --[MODEL_COLOR]\u003e UnmarkMasteryCheckCommand","lastModifiedDate":"2022-11-07"},{"lineNumber":42,"author":{"gitId":"kaij77"},"content":"deactivate model","lastModifiedDate":"2022-11-07"},{"lineNumber":43,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":44,"author":{"gitId":"kaij77"},"content":"create commandResult","lastModifiedDate":"2022-11-07"},{"lineNumber":45,"author":{"gitId":"kaij77"},"content":"UnmarkMasteryCheckCommand -[LOGIC_COLOR]\u003e commandResult","lastModifiedDate":"2022-11-07"},{"lineNumber":46,"author":{"gitId":"kaij77"},"content":"activate commandResult LOGIC_COLOR","lastModifiedDate":"2022-11-07"},{"lineNumber":47,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":48,"author":{"gitId":"kaij77"},"content":"commandResult --[LOGIC_COLOR]\u003e UnmarkMasteryCheckCommand : r","lastModifiedDate":"2022-11-07"},{"lineNumber":49,"author":{"gitId":"kaij77"},"content":"deactivate commandResult","lastModifiedDate":"2022-11-07"},{"lineNumber":50,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":51,"author":{"gitId":"kaij77"},"content":"UnmarkMasteryCheckCommand --[LOGIC_COLOR]\u003e logicManager : r","lastModifiedDate":"2022-11-07"},{"lineNumber":52,"author":{"gitId":"kaij77"},"content":"deactivate UnmarkMasteryCheckCommand","lastModifiedDate":"2022-11-07"},{"lineNumber":53,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":54,"author":{"gitId":"kaij77"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2022-11-07"},{"lineNumber":55,"author":{"gitId":"kaij77"},"content":"UnmarkMasteryCheckCommand -[hidden]-\u003e logicManager","lastModifiedDate":"2022-11-07"},{"lineNumber":56,"author":{"gitId":"kaij77"},"content":"destroy UnmarkMasteryCheckCommand","lastModifiedDate":"2022-11-07"},{"lineNumber":57,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":58,"author":{"gitId":"kaij77"},"content":"[\u003c[LOGIC_COLOR]-- logicManager : r","lastModifiedDate":"2022-11-07"},{"lineNumber":59,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":60,"author":{"gitId":"kaij77"},"content":"deactivate logicManager","lastModifiedDate":"2022-11-07"},{"lineNumber":61,"author":{"gitId":"kaij77"},"content":"@enduml","lastModifiedDate":"2022-11-07"}],"authorContributionMap":{"kaij77":61}},{"path":"docs/diagrams/UsingAliasSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"darrtzj"},"content":"@startuml","lastModifiedDate":"2022-11-06"},{"lineNumber":2,"author":{"gitId":"darrtzj"},"content":"!include style.puml","lastModifiedDate":"2022-11-06"},{"lineNumber":3,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":4,"author":{"gitId":"darrtzj"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-11-06"},{"lineNumber":5,"author":{"gitId":"darrtzj"},"content":"Participant \":LogicManager\" as logicManager LOGIC_COLOR","lastModifiedDate":"2022-11-06"},{"lineNumber":6,"author":{"gitId":"darrtzj"},"content":"Participant \":FridayParser\" as fridayParser LOGIC_COLOR","lastModifiedDate":"2022-11-06"},{"lineNumber":7,"author":{"gitId":"darrtzj"},"content":"Participant \"lc:ListCommand\" as listCommand LOGIC_COLOR","lastModifiedDate":"2022-11-06"},{"lineNumber":8,"author":{"gitId":"darrtzj"},"content":"Participant \"r:CommandResult\" as commandResult LOGIC_COLOR","lastModifiedDate":"2022-11-06"},{"lineNumber":9,"author":{"gitId":"darrtzj"},"content":"end box","lastModifiedDate":"2022-11-06"},{"lineNumber":10,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":11,"author":{"gitId":"darrtzj"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-11-06"},{"lineNumber":12,"author":{"gitId":"darrtzj"},"content":"Participant \"m:ModelManager\" as modelManager MODEL_COLOR","lastModifiedDate":"2022-11-06"},{"lineNumber":13,"author":{"gitId":"darrtzj"},"content":"Participant \":FilteredList\" as filteredList MODEL_COLOR","lastModifiedDate":"2022-11-06"},{"lineNumber":14,"author":{"gitId":"darrtzj"},"content":"end box","lastModifiedDate":"2022-11-06"},{"lineNumber":15,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":16,"author":{"gitId":"darrtzj"},"content":"[-\u003e logicManager : execute(\"ls\")","lastModifiedDate":"2022-11-06"},{"lineNumber":17,"author":{"gitId":"darrtzj"},"content":"activate logicManager LOGIC_COLOR","lastModifiedDate":"2022-11-06"},{"lineNumber":18,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":19,"author":{"gitId":"darrtzj"},"content":"logicManager -[LOGIC_COLOR]\u003e fridayParser : parseCommand(\"ls\",m)","lastModifiedDate":"2022-11-06"},{"lineNumber":20,"author":{"gitId":"darrtzj"},"content":"activate fridayParser LOGIC_COLOR","lastModifiedDate":"2022-11-06"},{"lineNumber":21,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":22,"author":{"gitId":"darrtzj"},"content":"fridayParser -[MODEL_COLOR]\u003e modelManager : getKeyword(\"ls\")","lastModifiedDate":"2022-11-06"},{"lineNumber":23,"author":{"gitId":"darrtzj"},"content":"activate modelManager MODEL_COLOR","lastModifiedDate":"2022-11-06"},{"lineNumber":24,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":25,"author":{"gitId":"darrtzj"},"content":"modelManager --[MODEL_COLOR]\u003e fridayParser : \"list\"","lastModifiedDate":"2022-11-06"},{"lineNumber":26,"author":{"gitId":"darrtzj"},"content":"deactivate modelManager","lastModifiedDate":"2022-11-06"},{"lineNumber":27,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":28,"author":{"gitId":"darrtzj"},"content":"create listCommand","lastModifiedDate":"2022-11-06"},{"lineNumber":29,"author":{"gitId":"darrtzj"},"content":"fridayParser -[LOGIC_COLOR]\u003e listCommand :","lastModifiedDate":"2022-11-06"},{"lineNumber":30,"author":{"gitId":"darrtzj"},"content":"activate listCommand LOGIC_COLOR","lastModifiedDate":"2022-11-06"},{"lineNumber":31,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":32,"author":{"gitId":"darrtzj"},"content":"listCommand --[LOGIC_COLOR]\u003e fridayParser : lc","lastModifiedDate":"2022-11-06"},{"lineNumber":33,"author":{"gitId":"darrtzj"},"content":"deactivate listCommand","lastModifiedDate":"2022-11-06"},{"lineNumber":34,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":35,"author":{"gitId":"darrtzj"},"content":"fridayParser --[LOGIC_COLOR]\u003e logicManager : lc","lastModifiedDate":"2022-11-06"},{"lineNumber":36,"author":{"gitId":"darrtzj"},"content":"deactivate fridayParser","lastModifiedDate":"2022-11-06"},{"lineNumber":37,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":38,"author":{"gitId":"darrtzj"},"content":"logicManager -[LOGIC_COLOR]\u003e listCommand : execute(m)","lastModifiedDate":"2022-11-06"},{"lineNumber":39,"author":{"gitId":"darrtzj"},"content":"activate listCommand  LOGIC_COLOR","lastModifiedDate":"2022-11-06"},{"lineNumber":40,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":41,"author":{"gitId":"darrtzj"},"content":"listCommand -[MODEL_COLOR]\u003e modelManager : updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS)","lastModifiedDate":"2022-11-06"},{"lineNumber":42,"author":{"gitId":"darrtzj"},"content":"activate modelManager MODEL_COLOR","lastModifiedDate":"2022-11-06"},{"lineNumber":43,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":44,"author":{"gitId":"darrtzj"},"content":"modelManager -[MODEL_COLOR]\u003e filteredList : setPredicate(PREDICATE_SHOW_ALL_STUDENTS)","lastModifiedDate":"2022-11-06"},{"lineNumber":45,"author":{"gitId":"darrtzj"},"content":"activate filteredList MODEL_COLOR","lastModifiedDate":"2022-11-06"},{"lineNumber":46,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":47,"author":{"gitId":"darrtzj"},"content":"filteredList --[MODEL_COLOR]\u003e modelManager :","lastModifiedDate":"2022-11-06"},{"lineNumber":48,"author":{"gitId":"darrtzj"},"content":"deactivate filteredList","lastModifiedDate":"2022-11-06"},{"lineNumber":49,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":50,"author":{"gitId":"darrtzj"},"content":"modelManager --[MODEL_COLOR]\u003e listCommand :","lastModifiedDate":"2022-11-06"},{"lineNumber":51,"author":{"gitId":"darrtzj"},"content":"deactivate modelManager","lastModifiedDate":"2022-11-06"},{"lineNumber":52,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":53,"author":{"gitId":"darrtzj"},"content":"create commandResult","lastModifiedDate":"2022-11-06"},{"lineNumber":54,"author":{"gitId":"darrtzj"},"content":"listCommand -[LOGIC_COLOR]\u003e commandResult :","lastModifiedDate":"2022-11-06"},{"lineNumber":55,"author":{"gitId":"darrtzj"},"content":"activate commandResult LOGIC_COLOR","lastModifiedDate":"2022-11-06"},{"lineNumber":56,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":57,"author":{"gitId":"darrtzj"},"content":"commandResult --[LOGIC_COLOR]\u003e listCommand : \"\"r\"\"","lastModifiedDate":"2022-11-06"},{"lineNumber":58,"author":{"gitId":"darrtzj"},"content":"deactivate commandResult","lastModifiedDate":"2022-11-06"},{"lineNumber":59,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":60,"author":{"gitId":"darrtzj"},"content":"listCommand --[LOGIC_COLOR]\u003e logicManager : \"\"r\"\"","lastModifiedDate":"2022-11-06"},{"lineNumber":61,"author":{"gitId":"darrtzj"},"content":"deactivate listCommand","lastModifiedDate":"2022-11-06"},{"lineNumber":62,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":63,"author":{"gitId":"darrtzj"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2022-11-06"},{"lineNumber":64,"author":{"gitId":"darrtzj"},"content":"listCommand -[hidden]-\u003e logicManager","lastModifiedDate":"2022-11-06"},{"lineNumber":65,"author":{"gitId":"darrtzj"},"content":"destroy listCommand","lastModifiedDate":"2022-11-06"},{"lineNumber":66,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":67,"author":{"gitId":"darrtzj"},"content":"[\u003c[LOGIC_COLOR]--logicManager","lastModifiedDate":"2022-11-06"},{"lineNumber":68,"author":{"gitId":"darrtzj"},"content":"deactivate logicManager","lastModifiedDate":"2022-11-06"},{"lineNumber":69,"author":{"gitId":"darrtzj"},"content":"@enduml","lastModifiedDate":"2022-11-06"}],"authorContributionMap":{"darrtzj":69}},{"path":"docs/diagrams/tracing/LogicSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-06-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include ../style.puml","lastModifiedDate":"2019-06-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Participant \":LogicManager\" as logic LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":5,"author":{"gitId":"Yuvaraj0702"},"content":"Participant \":FridayParser\" as abp LOGIC_COLOR","lastModifiedDate":"2022-11-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":EditCommandParser\" as ecp LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \"command:EditCommand\" as ec LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"[-\u003e logic : execute","lastModifiedDate":"2019-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"activate logic","lastModifiedDate":"2019-06-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"logic -\u003e abp ++: parseCommand(commandText)","lastModifiedDate":"2019-06-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"create ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"abp -\u003e ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"abp -\u003e ecp ++: parse(arguments)","lastModifiedDate":"2019-06-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"create ec","lastModifiedDate":"2019-06-17"},{"lineNumber":16,"author":{"gitId":"HowSuen"},"content":"ecp -\u003e ec ++: index, editStudentDescriptor","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"ec --\u003e ecp --","lastModifiedDate":"2019-06-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"ecp --\u003e abp --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"abp --\u003e logic --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-06-17"}],"authorContributionMap":{"Yuvaraj0702":1,"-":19,"HowSuen":1}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"darrtzj"},"content":"title: FRIDAY","lastModifiedDate":"2022-09-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"darrtzj"},"content":"[![CI Status](https://github.com/AY2223S1-CS2103T-W15-4/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S1-CS2103T-W15-4/tp/actions)","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"darrtzj"},"content":"[![codecov](https://codecov.io/gh/AY2223S1-CS2103T-W15-4/tp/branch/master/graph/badge.svg?token\u003dWD0IO5B3MK)](https://codecov.io/gh/AY2223S1-CS2103T-W15-4/tp)","lastModifiedDate":"2022-09-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"darrtzj"},"content":"**FRIDAY is a desktop application for you to track your student\u0027s progress.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2022-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"darrtzj"},"content":"* If you are interested in using FRIDAY, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2022-09-28"},{"lineNumber":14,"author":{"gitId":"darrtzj"},"content":"* If you are interested about developing FRIDAY, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2022-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"Yuvaraj0702"},"content":"* This project is based on the Friday-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2022-11-02"}],"authorContributionMap":{"Yuvaraj0702":1,"darrtzj":6,"-":13}},{"path":"docs/team/darrtzj.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"darrtzj"},"content":"---","lastModifiedDate":"2022-09-27"},{"lineNumber":2,"author":{"gitId":"darrtzj"},"content":"layout: page","lastModifiedDate":"2022-09-27"},{"lineNumber":3,"author":{"gitId":"darrtzj"},"content":"title: Darren Teo Zhi Jie\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-27"},{"lineNumber":4,"author":{"gitId":"darrtzj"},"content":"---","lastModifiedDate":"2022-09-27"},{"lineNumber":5,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":6,"author":{"gitId":"darrtzj"},"content":"- ### Project: FRIDAY","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":8,"author":{"gitId":"darrtzj"},"content":"FRIDAY is a desktop application built upon AddressBook Level 3, used for managing CS1101S students.","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"darrtzj"},"content":"The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"darrtzj"},"content":"10 kLoC.","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":12,"author":{"gitId":"darrtzj"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":14,"author":{"gitId":"darrtzj"},"content":"* **Code contributed**: [RepoSense Link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003ddarrtzj\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":16,"author":{"gitId":"darrtzj"},"content":"* **Project management**:","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"darrtzj"},"content":"  * Added user stories","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":19,"author":{"gitId":"darrtzj"},"content":"* **New Feature**:","lastModifiedDate":"2022-10-25"},{"lineNumber":20,"author":{"gitId":"darrtzj"},"content":"  * Added the ability to add, remove and view all aliases [\\#118](https://github.com/AY2223S1-CS2103T-W15-4/tp/pull/118)","lastModifiedDate":"2022-10-25"},{"lineNumber":21,"author":{"gitId":"darrtzj"},"content":"  * What it does: Allows the user to add aliases for commands and use those aliases instead of default command keywords.","lastModifiedDate":"2022-10-25"},{"lineNumber":22,"author":{"gitId":"darrtzj"},"content":"  * Justification: This feature improves customization for the user and allow users to be more efficient with FRIDAY.","lastModifiedDate":"2022-10-25"},{"lineNumber":23,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":24,"author":{"gitId":"darrtzj"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"darrtzj"},"content":"  * Refactored code in Model and ModelManager to fit project name [\\#85](https://github.com/AY2223S1-CS2103T-W15-4/tp/pull/85)","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"darrtzj"},"content":"  * Updated `list` command for FRIDAY to view all students\u0027 details [\\#86](https://github.com/AY2223S1-CS2103T-W15-4/tp/pull/86)","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"darrtzj"},"content":"  * Refactored code in Storage to fit project name","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"darrtzj"},"content":"  * Updated `help` command for FRIDAY [\\#123](https://github.com/AY2223S1-CS2103T-W15-4/tp/pull/123)","lastModifiedDate":"2022-10-25"},{"lineNumber":29,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":30,"author":{"gitId":"darrtzj"},"content":"* **Documentation**:","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"darrtzj"},"content":"  * User Guide:","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"darrtzj"},"content":"    * Wrote documentation for the feature `list` (Pull request [\\#74](https://github.com/AY2223S1-CS2103T-W15-4/tp/pull/74))","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"darrtzj"},"content":"    * Wrote documentation for the feature `alias`, `unalias` and `aliaslist` (Pull request [\\#180](https://github.com/AY2223S1-CS2103T-W15-4/tp/pull/180))","lastModifiedDate":"2022-11-03"},{"lineNumber":34,"author":{"gitId":"darrtzj"},"content":"    * Updated documentation for the feature `help` (Pull request [\\#180](https://github.com/AY2223S1-CS2103T-W15-4/tp/pull/180))","lastModifiedDate":"2022-11-03"},{"lineNumber":35,"author":{"gitId":"darrtzj"},"content":"    * Added hyperlinks to Table of contents and glossary","lastModifiedDate":"2022-11-07"},{"lineNumber":36,"author":{"gitId":"darrtzj"},"content":"  * Developer Guide:","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"darrtzj"},"content":"    * Updated Non-functional requirements","lastModifiedDate":"2022-11-07"},{"lineNumber":38,"author":{"gitId":"darrtzj"},"content":"    * Updated UML diagrams in Model and Storage component (Pull request [\\#192](https://github.com/AY2223S1-CS2103T-W15-4/tp/pull/192))","lastModifiedDate":"2022-11-07"},{"lineNumber":39,"author":{"gitId":"darrtzj"},"content":"    * Wrote documentation for the implementation of `alias`","lastModifiedDate":"2022-11-07"},{"lineNumber":40,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":41,"author":{"gitId":"darrtzj"},"content":"* **Contributions to team-based tasks**:","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"darrtzj"},"content":"  * Added user stories","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"darrtzj"},"content":"  * Update project website (Pull request [\\#72](https://github.com/AY2223S1-CS2103T-W15-4/tp/pull/72))","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"darrtzj"},"content":"  * Update project read me page (Pull request [\\#66](https://github.com/AY2223S1-CS2103T-W15-4/tp/pull/66))","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"darrtzj"},"content":"  * Update project notes with v1.2 demo","lastModifiedDate":"2022-10-25"},{"lineNumber":46,"author":{"gitId":"darrtzj"},"content":"  * Update project notes with v1.3 demo","lastModifiedDate":"2022-10-25"},{"lineNumber":47,"author":{"gitId":"darrtzj"},"content":"  * Assigned issues for bug reports","lastModifiedDate":"2022-11-07"},{"lineNumber":48,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":49,"author":{"gitId":"darrtzj"},"content":"* **Community**:","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"darrtzj"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#87](https://github.com/AY2223S1-CS2103T-W15-4/tp/pull/87), [\\#92](https://github.com/AY2223S1-CS2103T-W15-4/tp/pull/92), [\\#109](https://github.com/AY2223S1-CS2103T-W15-4/tp/pull/109)","lastModifiedDate":"2022-10-25"},{"lineNumber":51,"author":{"gitId":"darrtzj"},"content":"  * Reported bugs in AddCommandParser (Issue [91](https://github.com/AY2223S1-CS2103T-W15-4/tp/issues/91))","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"darrtzj"},"content":"* **Tools**:","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"darrtzj"},"content":"  * Integrated a third party plugin (Codecov) to the team repo","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"darrtzj":54}},{"path":"docs/team/howsuen.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"---","lastModifiedDate":"2022-09-25"},{"lineNumber":2,"author":{"gitId":"HowSuen"},"content":"layout: page","lastModifiedDate":"2022-09-25"},{"lineNumber":3,"author":{"gitId":"HowSuen"},"content":"title: Tan How Suen\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-25"},{"lineNumber":4,"author":{"gitId":"HowSuen"},"content":"---","lastModifiedDate":"2022-11-06"},{"lineNumber":5,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":6,"author":{"gitId":"HowSuen"},"content":"### Project: FRIDAY","lastModifiedDate":"2022-10-07"},{"lineNumber":7,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":8,"author":{"gitId":"HowSuen"},"content":"FRIDAY is a desktop application used for managing CS1101S students, that is written in Java and built upon AddressBook","lastModifiedDate":"2022-11-06"},{"lineNumber":9,"author":{"gitId":"HowSuen"},"content":"Level 3.","lastModifiedDate":"2022-11-07"},{"lineNumber":10,"author":{"gitId":"HowSuen"},"content":"The user interacts with it using a CLI, and it has a GUI created with JavaFX.","lastModifiedDate":"2022-11-07"},{"lineNumber":11,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":12,"author":{"gitId":"HowSuen"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-10-07"},{"lineNumber":13,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":14,"author":{"gitId":"HowSuen"},"content":"* **New Feature**: Added functionality to edit the grades of students.","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"HowSuen"},"content":"  * What it does: Allows users to edit the grades of the listed assessments and examinations for each student.","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"HowSuen"},"content":"  * Justification: This feature is significant in allowing users to keep track of their students\u0027 grades to get a better picture of how well their students are doing academically. It also allows users to check for improvement in their students\u0027 grades, thus checking whether their teaching methods are effective or not, and whether the students are able to keep up with the content.","lastModifiedDate":"2022-10-21"},{"lineNumber":17,"author":{"gitId":"HowSuen"},"content":"  * Highlights: Since the format of assessments has remained the same in CS1101S over the years, the current list of assessments and examinations are fixed to avoid confusion. We fixed the prefixes associated to the `grade` command, \"ra1/\", \"ra2/\", \"mt/\", \"pa/\", and \"ft\".","lastModifiedDate":"2022-11-05"},{"lineNumber":18,"author":{"gitId":"HowSuen"},"content":"  In addition, users are to input the scores in the form of percentages between 0% to 100%, both inclusive and up to 2","lastModifiedDate":"2022-11-05"},{"lineNumber":19,"author":{"gitId":"HowSuen"},"content":"  decimal places. This provides a more comprehensive and standardised view of their students\u0027 grades. We also limited","lastModifiedDate":"2022-11-05"},{"lineNumber":20,"author":{"gitId":"HowSuen"},"content":"  to 2 decimal places for a more simplistic view in our GUI.","lastModifiedDate":"2022-11-05"},{"lineNumber":21,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":22,"author":{"gitId":"HowSuen"},"content":"* **New Feature**: Added functionality to add remarks to students.","lastModifiedDate":"2022-10-19"},{"lineNumber":23,"author":{"gitId":"HowSuen"},"content":"  * What it does: Allows users to add comments and notes on their students in addition to their related information.","lastModifiedDate":"2022-10-19"},{"lineNumber":24,"author":{"gitId":"HowSuen"},"content":"  * Justification: This feature is significant in improving users\u0027 experience with the product because it acts as a centralised hub for users to easily write notes about their students to remind them of their individual circumstances.","lastModifiedDate":"2022-10-19"},{"lineNumber":25,"author":{"gitId":"HowSuen"},"content":"  * Highlights: Initial implementation requires users to type prefix `r/` to indicate the start of the remark comment.","lastModifiedDate":"2022-10-19"},{"lineNumber":26,"author":{"gitId":"HowSuen"},"content":"  * Credits: This feature was adapted from **[Tutorial 2 - Adding a new Command](https://nus-cs2103-ay2223s1.github.io/tp/tutorials/AddRemark.html)** for **AB3**.","lastModifiedDate":"2022-10-19"},{"lineNumber":27,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":28,"author":{"gitId":"HowSuen"},"content":"* **New Feature**: Edit a particular student\u0027s details.","lastModifiedDate":"2022-11-05"},{"lineNumber":29,"author":{"gitId":"HowSuen"},"content":"  * What it does: Allows users to edit a student\u0027s information specified by the student\u0027s index in the list.","lastModifiedDate":"2022-11-05"},{"lineNumber":30,"author":{"gitId":"HowSuen"},"content":"  * Justification: The user has to update any outdated or missing information for the student quickly. Hence, this","lastModifiedDate":"2022-11-05"},{"lineNumber":31,"author":{"gitId":"HowSuen"},"content":"  feature is crucial.","lastModifiedDate":"2022-11-05"},{"lineNumber":32,"author":{"gitId":"HowSuen"},"content":"  * Highlights: There are many prefixes to be parsed and checked for their presence and validity in the `edit` command.","lastModifiedDate":"2022-11-05"},{"lineNumber":33,"author":{"gitId":"HowSuen"},"content":"  * Credits: This feature was adapted from AB3.","lastModifiedDate":"2022-11-05"},{"lineNumber":34,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":35,"author":{"gitId":"HowSuen"},"content":"* **Code contributed**: [RepoSense Link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dhowsuen\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-10-07"},{"lineNumber":36,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":37,"author":{"gitId":"HowSuen"},"content":"* **Project management**:","lastModifiedDate":"2022-10-07"},{"lineNumber":38,"author":{"gitId":"HowSuen"},"content":"  * Created Milestones and Issue Labels","lastModifiedDate":"2022-10-07"},{"lineNumber":39,"author":{"gitId":"HowSuen"},"content":"  * Added user stories and tasks in Github Issues","lastModifiedDate":"2022-10-19"},{"lineNumber":40,"author":{"gitId":"HowSuen"},"content":"  * Assigned Github Issues for fixing of bugs reported from PE-D","lastModifiedDate":"2022-11-05"},{"lineNumber":41,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":42,"author":{"gitId":"HowSuen"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-10-07"},{"lineNumber":43,"author":{"gitId":"HowSuen"},"content":"  * Refactored code to improve maintainability and readability, and fixed ordering and naming of imports to pass checkstyle [\\#80](https://github.com/AY2223S1-CS2103T-W15-4/tp/pull/80), [\\#101](https://github.com/AY2223S1-CS2103T-W15-4/tp/pull/101)","lastModifiedDate":"2022-10-19"},{"lineNumber":44,"author":{"gitId":"HowSuen"},"content":"  * Added and updated `edit` command for FRIDAY to edit a student\u0027s details, including name, Telegram Handle, Mastery Check assessment, consultation date, and tags. Additionally, added and updated tests for `edit` command. [\\#80](https://github.com/AY2223S1-CS2103T-W15-4/tp/pull/89)","lastModifiedDate":"2022-10-19"},{"lineNumber":45,"author":{"gitId":"HowSuen"},"content":"  * Updated and adapted `remark` command for FRIDAY to add remark comments for each student. [\\#2](https://github.com/AY2223S1-CS2103T-W15-4/tp/pull/2)","lastModifiedDate":"2022-10-19"},{"lineNumber":46,"author":{"gitId":"HowSuen"},"content":"  * Designed and updated GUI\u0027s logo and title [\\#101](https://github.com/AY2223S1-CS2103T-W15-4/tp/pull/101)","lastModifiedDate":"2022-11-05"},{"lineNumber":47,"author":{"gitId":"HowSuen"},"content":"  * Designed and implemented new GUI for FRIDAY, including adding new details for each student card, adding new colours","lastModifiedDate":"2022-11-05"},{"lineNumber":48,"author":{"gitId":"HowSuen"},"content":"  and adjusting layout the GUI.","lastModifiedDate":"2022-11-05"},{"lineNumber":49,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":50,"author":{"gitId":"HowSuen"},"content":"* **Documentation**:","lastModifiedDate":"2022-10-07"},{"lineNumber":51,"author":{"gitId":"HowSuen"},"content":"  * User Guide:","lastModifiedDate":"2022-10-07"},{"lineNumber":52,"author":{"gitId":"HowSuen"},"content":"    * Added documentation for the `edit` feature","lastModifiedDate":"2022-10-19"},{"lineNumber":53,"author":{"gitId":"HowSuen"},"content":"    * Added documentation for the `remark` feature [\\#106](https://github.com/AY2223S1-CS2103T-W15-4/tp/pull/106)","lastModifiedDate":"2022-10-19"},{"lineNumber":54,"author":{"gitId":"HowSuen"},"content":"    * Added documentation for the `grade` feature [\\#116](https://github.com/AY2223S1-CS2103T-W15-4/tp/pull/116)","lastModifiedDate":"2022-10-25"},{"lineNumber":55,"author":{"gitId":"HowSuen"},"content":"    * Reformatted Command Summary","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"HowSuen"},"content":"    * Added and updated Introduction section to explain the purpose of user guide and the product information.","lastModifiedDate":"2022-11-07"},{"lineNumber":57,"author":{"gitId":"HowSuen"},"content":"  * Developer Guide:","lastModifiedDate":"2022-10-07"},{"lineNumber":58,"author":{"gitId":"HowSuen"},"content":"    * Added Non-functional requirements","lastModifiedDate":"2022-10-07"},{"lineNumber":59,"author":{"gitId":"HowSuen"},"content":"    * Refactored names to update for FRIDAY [\\#106](https://github.com/AY2223S1-CS2103T-W15-4/tp/pull/106)","lastModifiedDate":"2022-10-25"},{"lineNumber":60,"author":{"gitId":"HowSuen"},"content":"    * Updated UML Diagrams to fit FRIDAY","lastModifiedDate":"2022-11-05"},{"lineNumber":61,"author":{"gitId":"HowSuen"},"content":"    * Added documentation for the `grade` feature, including the implementation details, design considerations and UML","lastModifiedDate":"2022-11-05"},{"lineNumber":62,"author":{"gitId":"HowSuen"},"content":"    sequence diagram.","lastModifiedDate":"2022-11-05"},{"lineNumber":63,"author":{"gitId":"HowSuen"},"content":"  * README:","lastModifiedDate":"2022-10-07"},{"lineNumber":64,"author":{"gitId":"HowSuen"},"content":"    * Designed and added UI Mockup for FRIDAY","lastModifiedDate":"2022-10-07"},{"lineNumber":65,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":66,"author":{"gitId":"HowSuen"},"content":"* **Community**:","lastModifiedDate":"2022-10-07"},{"lineNumber":67,"author":{"gitId":"HowSuen"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#97](https://github.com/AY2223S1-CS2103T-W15-4/tp/pull/97), [\\#118](https://github.com/AY2223S1-CS2103T-W15-4/tp/pull/118), [\\#122](https://github.com/AY2223S1-CS2103T-W15-4/tp/pull/122), [\\#178](https://github.com/AY2223S1-CS2103T-W15-4/tp/pull/178)","lastModifiedDate":"2022-11-05"}],"authorContributionMap":{"HowSuen":67}},{"path":"docs/team/jorrdansoh.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jorrdansoh"},"content":"---","lastModifiedDate":"2022-09-25"},{"lineNumber":2,"author":{"gitId":"jorrdansoh"},"content":"layout: page","lastModifiedDate":"2022-09-25"},{"lineNumber":3,"author":{"gitId":"jorrdansoh"},"content":"title: Soh Jing Ren\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-25"},{"lineNumber":4,"author":{"gitId":"jorrdansoh"},"content":"---","lastModifiedDate":"2022-09-25"},{"lineNumber":5,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":6,"author":{"gitId":"jorrdansoh"},"content":"### Project: FRIDAY","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":8,"author":{"gitId":"jorrdansoh"},"content":"FRIDAY is a desktop application used for managing CS1101S students, that is written in Java and built upon AddressBook Level 3.","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"jorrdansoh"},"content":"The user interacts with it using a CLI, and it has a GUI created with JavaFX.","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":11,"author":{"gitId":"jorrdansoh"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":13,"author":{"gitId":"jorrdansoh"},"content":"* **New Feature**: Added the ability to sort students [\\#109](https://github.com/AY2223S1-CS2103T-W15-4/tp/pull/109)","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"jorrdansoh"},"content":"  * What it does: Allows the user to sort students by different criteria (such as name or consultation date), in ascending or descending order.","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"jorrdansoh"},"content":"  * Justification: This feature improves the product because a user can choose how they want to organize the students, or see if they have any upcoming consultations or Mastery Checks.","lastModifiedDate":"2022-11-05"},{"lineNumber":16,"author":{"gitId":"jorrdansoh"},"content":"  * Highlights: The current list of sorting criteria is: name, Telegram handle, consultation, Mastery Check, and grades.","lastModifiedDate":"2022-10-25"},{"lineNumber":17,"author":{"gitId":"jorrdansoh"},"content":"  * Effort: The sort feature was not easy to implement due to the number of sorting criteria and the restrictions of existing","lastModifiedDate":"2022-11-05"},{"lineNumber":18,"author":{"gitId":"jorrdansoh"},"content":"            design principles. Furthermore, to ensure good code quality, many iterations of the sorting","lastModifiedDate":"2022-11-05"},{"lineNumber":19,"author":{"gitId":"jorrdansoh"},"content":"            mechanism were needed to ultimately produce a functional feature that is also well-implemented.","lastModifiedDate":"2022-11-07"},{"lineNumber":20,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":21,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"jorrdansoh"},"content":"* **Code Contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003djorrdansoh\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-11-05"},{"lineNumber":23,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":24,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":25,"author":{"gitId":"jorrdansoh"},"content":"* **Contributions to Team-Based Tasks**:","lastModifiedDate":"2022-11-07"},{"lineNumber":26,"author":{"gitId":"jorrdansoh"},"content":"  * Created GitHub Issues for user stories and bug reports","lastModifiedDate":"2022-11-05"},{"lineNumber":27,"author":{"gitId":"jorrdansoh"},"content":"  * Delegated GitHub Issues to team members","lastModifiedDate":"2022-10-25"},{"lineNumber":28,"author":{"gitId":"jorrdansoh"},"content":"  * Released v1.2.trial and v1.3 JAR on GitHub","lastModifiedDate":"2022-11-05"},{"lineNumber":29,"author":{"gitId":"jorrdansoh"},"content":"  * Added target user profile and acknowledgements to Developer Guide [\\#59](https://github.com/AY2223S1-CS2103T-W15-4/tp/pull/59)","lastModifiedDate":"2022-11-05"},{"lineNumber":30,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":31,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":32,"author":{"gitId":"jorrdansoh"},"content":"* **Enhancements to Existing Features**:","lastModifiedDate":"2022-11-05"},{"lineNumber":33,"author":{"gitId":"jorrdansoh"},"content":"  * Updated the `add` command to add students with relevant details [\\#87](https://github.com/AY2223S1-CS2103T-W15-4/tp/pull/87)","lastModifiedDate":"2022-11-05"},{"lineNumber":34,"author":{"gitId":"jorrdansoh"},"content":"  * Wrote additional tests for existing features [\\#92](https://github.com/AY2223S1-CS2103T-W15-4/tp/pull/92)","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"jorrdansoh"},"content":"  * Refactored code and documentation to fit project name and scope [\\#179](https://github.com/AY2223S1-CS2103T-W15-4/tp/pull/179)","lastModifiedDate":"2022-11-05"},{"lineNumber":36,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":37,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":38,"author":{"gitId":"jorrdansoh"},"content":"* **Documentation**:","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"jorrdansoh"},"content":"  * User Guide:","lastModifiedDate":"2022-10-06"},{"lineNumber":40,"author":{"gitId":"jorrdansoh"},"content":"    * Wrote documentation for the features `add` and `delete` [\\#125](https://github.com/AY2223S1-CS2103T-W15-4/tp/pull/125)","lastModifiedDate":"2022-11-07"},{"lineNumber":41,"author":{"gitId":"jorrdansoh"},"content":"    * Wrote documentation for the `sort` feature [\\#107](https://github.com/AY2223S1-CS2103T-W15-4/tp/pull/107)","lastModifiedDate":"2022-10-19"},{"lineNumber":42,"author":{"gitId":"jorrdansoh"},"content":"    * Added FAQ [\\#188](https://github.com/AY2223S1-CS2103T-W15-4/tp/pull/188)","lastModifiedDate":"2022-11-05"},{"lineNumber":43,"author":{"gitId":"jorrdansoh"},"content":"  * Developer Guide:","lastModifiedDate":"2022-10-06"},{"lineNumber":44,"author":{"gitId":"jorrdansoh"},"content":"    * Added user stories and use case for the `sort` feature [\\#107](https://github.com/AY2223S1-CS2103T-W15-4/tp/pull/107)","lastModifiedDate":"2022-10-19"},{"lineNumber":45,"author":{"gitId":"jorrdansoh"},"content":"    * Added implementation details and design considerations for the `sort` command [\\#109](https://github.com/AY2223S1-CS2103T-W15-4/tp/pull/109)","lastModifiedDate":"2022-11-05"},{"lineNumber":46,"author":{"gitId":"jorrdansoh"},"content":"    * Added UML diagrams for the `sort` command [\\#179](https://github.com/AY2223S1-CS2103T-W15-4/tp/pull/179)","lastModifiedDate":"2022-11-05"},{"lineNumber":47,"author":{"gitId":"jorrdansoh"},"content":"    * Added manual test cases for adding and sorting students [\\#179](https://github.com/AY2223S1-CS2103T-W15-4/tp/pull/179)","lastModifiedDate":"2022-11-05"},{"lineNumber":48,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":49,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":50,"author":{"gitId":"jorrdansoh"},"content":"* **Community**:","lastModifiedDate":"2022-10-06"},{"lineNumber":51,"author":{"gitId":"jorrdansoh"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#93](https://github.com/AY2223S1-CS2103T-W15-4/tp/pull/93), [\\#121](https://github.com/AY2223S1-CS2103T-W15-4/tp/pull/121), [\\#126](https://github.com/AY2223S1-CS2103T-W15-4/tp/pull/126), [\\#163](https://github.com/AY2223S1-CS2103T-W15-4/tp/pull/163)","lastModifiedDate":"2022-11-05"},{"lineNumber":52,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":53,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":54,"author":{"gitId":"jorrdansoh"},"content":"* **Tools**:","lastModifiedDate":"2022-10-06"},{"lineNumber":55,"author":{"gitId":"jorrdansoh"},"content":"  * Updated site-wide settings (Jekyll) for the project [\\#55](https://github.com/AY2223S1-CS2103T-W15-4/tp/pull/55)","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"jorrdansoh":55}},{"path":"docs/team/kaij77.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kaij77"},"content":"---","lastModifiedDate":"2022-09-27"},{"lineNumber":2,"author":{"gitId":"kaij77"},"content":"layout: page","lastModifiedDate":"2022-09-27"},{"lineNumber":3,"author":{"gitId":"kaij77"},"content":"title: Yeo Kai Jiun\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-27"},{"lineNumber":4,"author":{"gitId":"kaij77"},"content":"---","lastModifiedDate":"2022-09-27"},{"lineNumber":5,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":6,"author":{"gitId":"kaij77"},"content":"### Project: FRIDAY","lastModifiedDate":"2022-11-07"},{"lineNumber":7,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":8,"author":{"gitId":"kaij77"},"content":"FRIDAY is a desktop application used for managing CS1101S students, that is written in Java and built upon AddressBook","lastModifiedDate":"2022-11-07"},{"lineNumber":9,"author":{"gitId":"kaij77"},"content":"Level 3. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has","lastModifiedDate":"2022-11-07"},{"lineNumber":10,"author":{"gitId":"kaij77"},"content":"about 10 kLoC.","lastModifiedDate":"2022-11-07"},{"lineNumber":11,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":12,"author":{"gitId":"kaij77"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-11-07"},{"lineNumber":13,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":14,"author":{"gitId":"kaij77"},"content":"* **New Feature**: Added functionality to Mark the Mastery Checks of students as passed.","lastModifiedDate":"2022-11-07"},{"lineNumber":15,"author":{"gitId":"kaij77"},"content":"  * What it does: Allows users to mark the Mastery Check of a specified student as passed.","lastModifiedDate":"2022-11-07"},{"lineNumber":16,"author":{"gitId":"kaij77"},"content":"  * Justification: This feature allows users to update and keep track of which of their students have already passed their Mastery Checks. This is important as it helps the user to know if there are any important upcoming dates on which students have scheduled to have their Mastery Checks, or if these students have already completed their Mastery Checks.","lastModifiedDate":"2022-11-07"},{"lineNumber":17,"author":{"gitId":"kaij77"},"content":"  * Highlights: The Mastery Check of the specified student has to meet all 3 of the following conditions in order to be able to be marked as passed:","lastModifiedDate":"2022-11-07"},{"lineNumber":18,"author":{"gitId":"kaij77"},"content":"    1. The student\u0027s Mastery Check has not already been marked as passed.","lastModifiedDate":"2022-11-07"},{"lineNumber":19,"author":{"gitId":"kaij77"},"content":"    2. The student actually has a scheduled Mastery Check date (i.e. the student\u0027s Mastery Check field is not empty).","lastModifiedDate":"2022-11-07"},{"lineNumber":20,"author":{"gitId":"kaij77"},"content":"    3. The student\u0027s scheduled Mastery Check date is not beyond the current date.","lastModifiedDate":"2022-11-07"},{"lineNumber":21,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":22,"author":{"gitId":"kaij77"},"content":"* **New Feature**: Added functionality to Unmark the Mastery Checks of students.","lastModifiedDate":"2022-11-07"},{"lineNumber":23,"author":{"gitId":"kaij77"},"content":"  * What it does: Allows users to unmark the Mastery Checks of students, removing the \"passed\" status of this student\u0027s Mastery Check.","lastModifiedDate":"2022-11-07"},{"lineNumber":24,"author":{"gitId":"kaij77"},"content":"  * Justification: This feature is an important counterpart to the `mark` feature, as it allows the user to unmark the Mastery Check of a student which they may have mistakenly marked as passed, even though the student has in fact not passed their Mastery Check.","lastModifiedDate":"2022-11-07"},{"lineNumber":25,"author":{"gitId":"kaij77"},"content":"  * Highlights: The Mastery Check of the specified student has to meet both of the following conditions in order to be able to be unmarked:","lastModifiedDate":"2022-11-07"},{"lineNumber":26,"author":{"gitId":"kaij77"},"content":"    1. The student\u0027s Mastery Check has already been marked as passed.","lastModifiedDate":"2022-11-07"},{"lineNumber":27,"author":{"gitId":"kaij77"},"content":"    2. The student actually has a scheduled Mastery Check date (i.e. the student\u0027s Mastery Check field is not empty).","lastModifiedDate":"2022-11-07"},{"lineNumber":28,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":29,"author":{"gitId":"kaij77"},"content":"* **New Feature**: Get the link to the User Guide for FRIDAY.","lastModifiedDate":"2022-11-07"},{"lineNumber":30,"author":{"gitId":"kaij77"},"content":"  * What it does: Allows users to get a link to the User Guide, which they can then copy and paste into a browser to access the document.","lastModifiedDate":"2022-11-07"},{"lineNumber":31,"author":{"gitId":"kaij77"},"content":"  * Justification: The user may need to refer to the User Guide while using FRIDAY in case they forget about command formats and other details of FRIDAY.","lastModifiedDate":"2022-11-07"},{"lineNumber":32,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":33,"author":{"gitId":"kaij77"},"content":"* **Code contributed**: [RepoSense Link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dkaij77\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-11-07"},{"lineNumber":34,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":35,"author":{"gitId":"kaij77"},"content":"* **Project management**:","lastModifiedDate":"2022-11-07"},{"lineNumber":36,"author":{"gitId":"kaij77"},"content":"  * Added user stories and tasks in Github Issues","lastModifiedDate":"2022-11-07"},{"lineNumber":37,"author":{"gitId":"kaij77"},"content":"  * Assigned Github Issues for fixing of bugs reported from PE-D","lastModifiedDate":"2022-11-07"},{"lineNumber":38,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":39,"author":{"gitId":"kaij77"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-11-07"},{"lineNumber":40,"author":{"gitId":"kaij77"},"content":"  * Refactored various Java classes in the existing code to match the purpose of FRIDAY, for example refactoring `Person` to `Student`. [\\#84](https://github.com/AY2223S1-CS2103T-W15-4/tp/pull/84)","lastModifiedDate":"2022-11-07"},{"lineNumber":41,"author":{"gitId":"kaij77"},"content":"  * Created the `TelegramHandle`, `MasteryCheck` and `Consultation` classes. [\\#84](https://github.com/AY2223S1-CS2103T-W15-4/tp/pull/84)","lastModifiedDate":"2022-11-07"},{"lineNumber":42,"author":{"gitId":"kaij77"},"content":"  * Edited sample data to fit the context of FRIDAY. [\\#96](https://github.com/AY2223S1-CS2103T-W15-4/tp/pull/96)","lastModifiedDate":"2022-11-07"},{"lineNumber":43,"author":{"gitId":"kaij77"},"content":"  * Added and updated `guide` command for FRIDAY to allow the user to obtain a link to the User Guide for FRIDAY. [\\#98](https://github.com/AY2223S1-CS2103T-W15-4/tp/pull/98)","lastModifiedDate":"2022-11-07"},{"lineNumber":44,"author":{"gitId":"kaij77"},"content":"  * Added and updated `mark` command for FRIDAY to allow the user to mark a specified student\u0027s Mastery Check as passed. [\\#111](https://github.com/AY2223S1-CS2103T-W15-4/tp/pull/111)","lastModifiedDate":"2022-11-07"},{"lineNumber":45,"author":{"gitId":"kaij77"},"content":"  * Added and updated `unmark` command for FRIDAY to allow the user to unmark a specified student\u0027s Mastery Check. [\\#128](https://github.com/AY2223S1-CS2103T-W15-4/tp/pull/128)","lastModifiedDate":"2022-11-07"},{"lineNumber":46,"author":{"gitId":"kaij77"},"content":"  * Added tests for `mark` and `unmark` commands. [\\#190](https://github.com/AY2223S1-CS2103T-W15-4/tp/pull/190)","lastModifiedDate":"2022-11-07"},{"lineNumber":47,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":48,"author":{"gitId":"kaij77"},"content":"* **Documentation**:","lastModifiedDate":"2022-11-07"},{"lineNumber":49,"author":{"gitId":"kaij77"},"content":"  * User Guide:","lastModifiedDate":"2022-11-07"},{"lineNumber":50,"author":{"gitId":"kaij77"},"content":"    * Added documentation for the `mark` feature, including use cases and guide on how to use the command. [\\#111](https://github.com/AY2223S1-CS2103T-W15-4/tp/pull/111/commits/954ed8f964916a1fa1a720a5a3a0449b59def886)","lastModifiedDate":"2022-11-07"},{"lineNumber":51,"author":{"gitId":"kaij77"},"content":"    * Added documentation for the `unmark` feature, including use cases and guide on how to use the command. [\\#128](https://github.com/AY2223S1-CS2103T-W15-4/tp/pull/128/commits/d28b9a107b6d67c2ef92883fbb06b54aac979a76)","lastModifiedDate":"2022-11-07"},{"lineNumber":52,"author":{"gitId":"kaij77"},"content":"    * Added documentation for the `guide` feature [\\#98](https://github.com/AY2223S1-CS2103T-W15-4/tp/pull/98/commits/8a1570b817e5735a7c1a0b805ab79afa0efe72c0)","lastModifiedDate":"2022-11-07"},{"lineNumber":53,"author":{"gitId":"kaij77"},"content":"    * Edited documentation for `mark`, `unmark` and `guide` features to make User Guide more user-friendly. [\\#195](https://github.com/AY2223S1-CS2103T-W15-4/tp/pull/195)","lastModifiedDate":"2022-11-07"},{"lineNumber":54,"author":{"gitId":"kaij77"},"content":"    * Added explanations of each section of the User Guide to make the guide more user-friendly. [\\#204](https://github.com/AY2223S1-CS2103T-W15-4/tp/pull/204)","lastModifiedDate":"2022-11-07"},{"lineNumber":55,"author":{"gitId":"kaij77"},"content":"  * Developer Guide:","lastModifiedDate":"2022-11-07"},{"lineNumber":56,"author":{"gitId":"kaij77"},"content":"    * Added documentation for the `mark` feature, including the implementation details, design considerations and UML","lastModifiedDate":"2022-11-07"},{"lineNumber":57,"author":{"gitId":"kaij77"},"content":"      sequence diagram.","lastModifiedDate":"2022-11-07"},{"lineNumber":58,"author":{"gitId":"kaij77"},"content":"    * Added documentation for the `unmark` feature, including the implementation details, design considerations and UML","lastModifiedDate":"2022-11-07"},{"lineNumber":59,"author":{"gitId":"kaij77"},"content":"      sequence diagram.","lastModifiedDate":"2022-11-07"},{"lineNumber":60,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":61,"author":{"gitId":"kaij77"},"content":"* **Community**:","lastModifiedDate":"2022-11-07"},{"lineNumber":62,"author":{"gitId":"kaij77"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#116](https://github.com/AY2223S1-CS2103T-W15-4/tp/pull/116), [\\#199](https://github.com/AY2223S1-CS2103T-W15-4/tp/pull/199), [\\#206](https://github.com/AY2223S1-CS2103T-W15-4/tp/pull/206)","lastModifiedDate":"2022-11-07"}],"authorContributionMap":{"kaij77":62}},{"path":"docs/team/yuvaraj0702.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Yuvaraj0702"},"content":"---","lastModifiedDate":"2022-09-27"},{"lineNumber":2,"author":{"gitId":"Yuvaraj0702"},"content":"layout: page","lastModifiedDate":"2022-09-27"},{"lineNumber":3,"author":{"gitId":"Yuvaraj0702"},"content":"title: Yuvaraj\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-27"},{"lineNumber":4,"author":{"gitId":"Yuvaraj0702"},"content":"---","lastModifiedDate":"2022-09-27"},{"lineNumber":5,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":6,"author":{"gitId":"Yuvaraj0702"},"content":"- ### Project: FRIDAY","lastModifiedDate":"2022-11-07"},{"lineNumber":7,"author":{"gitId":"Yuvaraj0702"},"content":"FRIDAY is a desktop application built upon AddressBook Level 3, used for managing CS1101S students.","lastModifiedDate":"2022-10-23"},{"lineNumber":8,"author":{"gitId":"Yuvaraj0702"},"content":"The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about","lastModifiedDate":"2022-10-23"},{"lineNumber":9,"author":{"gitId":"Yuvaraj0702"},"content":"10 kLoC.","lastModifiedDate":"2022-10-23"},{"lineNumber":10,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":11,"author":{"gitId":"Yuvaraj0702"},"content":"- ### Summary of Contributions","lastModifiedDate":"2022-09-27"},{"lineNumber":12,"author":{"gitId":"Yuvaraj0702"},"content":"    - **Code contributed**: [RepoSense Link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dYuvaraj0702\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-09-27"},{"lineNumber":13,"author":{"gitId":"Yuvaraj0702"},"content":"      \u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":14,"author":{"gitId":"Yuvaraj0702"},"content":"      \u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":15,"author":{"gitId":"Yuvaraj0702"},"content":"    - **Enhancements implemented**:","lastModifiedDate":"2022-10-23"},{"lineNumber":16,"author":{"gitId":"Yuvaraj0702"},"content":"    - Implemented find feature to find an individual student by their name (V1.2) [V1.2 branch](https://github.com/Yuvaraj0702/tp/tree/v1.2)","lastModifiedDate":"2022-11-07"},{"lineNumber":17,"author":{"gitId":"Yuvaraj0702"},"content":"      \u003cbr\u003eEffort: Medium\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":18,"author":{"gitId":"Yuvaraj0702"},"content":"      Reason: Moderate changes were required to adapt the find function from AB3\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":19,"author":{"gitId":"Yuvaraj0702"},"content":"    - Enhanced find feature to search through all fields and list all matches (V1.3) [Update find](https://github.com/Yuvaraj0702/tp/tree/Update-find)","lastModifiedDate":"2022-11-07"},{"lineNumber":20,"author":{"gitId":"Yuvaraj0702"},"content":"      \u003cbr\u003eEffort: High\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":21,"author":{"gitId":"Yuvaraj0702"},"content":"      Reason: Had to modify multiple classes and methods to accommodate different data and go through all fields.\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":22,"author":{"gitId":"Yuvaraj0702"},"content":"    - Implementing sorting by grade (V1.3) [Sorting by grade](https://github.com/Yuvaraj0702/tp/tree/Update-find)","lastModifiedDate":"2022-11-07"},{"lineNumber":23,"author":{"gitId":"Yuvaraj0702"},"content":"      \u003cbr\u003eEffort: High\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":24,"author":{"gitId":"Yuvaraj0702"},"content":"      Reason: Understand teammates code and make improvements. Understand the new grade class and change data types to prevent errors.\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":25,"author":{"gitId":"Yuvaraj0702"},"content":"    - Assisting in refactoring of code to comply to the needs of this project.(V1.2 and V1.3)","lastModifiedDate":"2022-11-07"},{"lineNumber":26,"author":{"gitId":"Yuvaraj0702"},"content":"      \u003cbr\u003eEffort: Medium\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":27,"author":{"gitId":"Yuvaraj0702"},"content":"      Reason: Had to scan through all files to ensure that no instances of old names were left behind.","lastModifiedDate":"2022-11-07"},{"lineNumber":28,"author":{"gitId":"Yuvaraj0702"},"content":"      \u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":29,"author":{"gitId":"Yuvaraj0702"},"content":"      \u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":30,"author":{"gitId":"Yuvaraj0702"},"content":"    - **Contributions to the UG**:","lastModifiedDate":"2022-10-23"},{"lineNumber":31,"author":{"gitId":"Yuvaraj0702"},"content":"    - Editing the find feature in the user guide to reflect how to efficiently and accurately use the command.","lastModifiedDate":"2022-10-23"},{"lineNumber":32,"author":{"gitId":"Yuvaraj0702"},"content":"    - Adding questions to the FAQ section. [FAQ updates](https://github.com/AY2223S1-CS2103T-W15-4/tp/pull/189)","lastModifiedDate":"2022-11-07"},{"lineNumber":33,"author":{"gitId":"Yuvaraj0702"},"content":"    - Add Glossary explaining key terms [Glossary updates](https://github.com/AY2223S1-CS2103T-W15-4/tp/pull/189#issue-1437330080)","lastModifiedDate":"2022-11-07"},{"lineNumber":34,"author":{"gitId":"Yuvaraj0702"},"content":"    - Add about section [About section](https://github.com/AY2223S1-CS2103T-W15-4/tp/pull/208)","lastModifiedDate":"2022-11-07"},{"lineNumber":35,"author":{"gitId":"Yuvaraj0702"},"content":"      \u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":36,"author":{"gitId":"Yuvaraj0702"},"content":"      \u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":37,"author":{"gitId":"Yuvaraj0702"},"content":"    - **Contributions to the DG**:","lastModifiedDate":"2022-10-23"},{"lineNumber":38,"author":{"gitId":"Yuvaraj0702"},"content":"    - Add documentation for the find feature.[Branch link](https://github.com/Yuvaraj0702/tp/tree/update_DG)","lastModifiedDate":"2022-11-07"},{"lineNumber":39,"author":{"gitId":"Yuvaraj0702"},"content":"    - Add diagrams and use cases for the find feature.[Diagrams added](https://github.com/AY2223S1-CS2103T-W15-4/tp/pull/189/commits/90c3ee87e7db0695ca5170d04cc90fb229c59ef4)","lastModifiedDate":"2022-11-07"},{"lineNumber":40,"author":{"gitId":"Yuvaraj0702"},"content":"    - Added Non-functional requirements [Branch Link](https://github.com/Yuvaraj0702/tp/tree/update_DG)","lastModifiedDate":"2022-11-07"},{"lineNumber":41,"author":{"gitId":"Yuvaraj0702"},"content":"      \u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":42,"author":{"gitId":"Yuvaraj0702"},"content":"      \u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":43,"author":{"gitId":"Yuvaraj0702"},"content":"    - **Contributions to team-based tasks**:","lastModifiedDate":"2022-11-07"},{"lineNumber":44,"author":{"gitId":"Yuvaraj0702"},"content":"    - Delegation of issues to team members.","lastModifiedDate":"2022-11-07"},{"lineNumber":45,"author":{"gitId":"Yuvaraj0702"},"content":"    - Creation of GitHub Issues for user stories.","lastModifiedDate":"2022-11-07"},{"lineNumber":46,"author":{"gitId":"Yuvaraj0702"},"content":"    - Fixing of issues [Issues fixed](https://github.com/AY2223S1-CS2103T-W15-4/tp/issues?q\u003dis%3Aissue+is%3Aclosed+assignee%3AYuvaraj0702)","lastModifiedDate":"2022-11-07"},{"lineNumber":47,"author":{"gitId":"Yuvaraj0702"},"content":"      \u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":48,"author":{"gitId":"Yuvaraj0702"},"content":"      \u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":49,"author":{"gitId":"Yuvaraj0702"},"content":"    - **Review/mentoring contributions:**:","lastModifiedDate":"2022-11-07"},{"lineNumber":50,"author":{"gitId":"Yuvaraj0702"},"content":"    - PRs reviewed:[Link to reviewed PR\u0027s](https://github.com/AY2223S1-CS2103T-W15-4/tp/pulls?q\u003dis%3Apr+is%3Aclosed+author%3Akaij77)","lastModifiedDate":"2022-11-07"},{"lineNumber":51,"author":{"gitId":"Yuvaraj0702"},"content":"    - Mock PE Issues:[Issues found](https://github.com/Yuvaraj0702/ped/issues)","lastModifiedDate":"2022-11-07"},{"lineNumber":52,"author":{"gitId":"Yuvaraj0702"},"content":"      \u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":53,"author":{"gitId":"Yuvaraj0702"},"content":"      \u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":54,"author":{"gitId":"Yuvaraj0702"},"content":"    - **Contributions beyond the project team:**","lastModifiedDate":"2022-11-07"},{"lineNumber":55,"author":{"gitId":"Yuvaraj0702"},"content":"    - Facilitation of group meetings.","lastModifiedDate":"2022-11-07"},{"lineNumber":56,"author":{"gitId":"Yuvaraj0702"},"content":"    - (Future) Assist in making project video.","lastModifiedDate":"2022-11-07"},{"lineNumber":57,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-09-27"}],"authorContributionMap":{"Yuvaraj0702":57}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"Yuvaraj0702"},"content":"This command allows users of the FRIDAY application to add optional remarks to people in their FRIDAY and edit it if required. The command should have the following format:","lastModifiedDate":"2022-10-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"kaij77"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/masteryCheck/logic/command` directory.","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"kaij77"},"content":"package seedu.masteryCheck.logic.commands;","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"HowSuen"},"content":"import Model;","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"jorrdansoh"},"content":" * Changes the remark of an existing student in the FRIDAY.","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"Yuvaraj0702"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `FridayParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2022-10-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2022-01-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"kaij77"},"content":"            + \": Edits the remark of the student identified \"","lastModifiedDate":"2022-10-06"},{"lineNumber":69,"author":{"gitId":"kaij77"},"content":"            + \"by the index number used in the last student listing. \"","lastModifiedDate":"2022-10-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"HowSuen"},"content":"import static CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"kaij77"},"content":"     * @param index of the student in the filtered student list to edit the remark","lastModifiedDate":"2022-10-06"},{"lineNumber":105,"author":{"gitId":"kaij77"},"content":"     * @param remark of the student to be updated to","lastModifiedDate":"2022-10-06"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594) after you are done.","lastModifiedDate":"2022-01-02"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"kaij77"},"content":"Create a `RemarkCommandParser` class in the `seedu.masteryCheck.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2022-10-06"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"Yuvaraj0702"},"content":":information_source: Don’t forget to update `FridayParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2022-11-02"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2022-01-02"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"jorrdansoh"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of student data. We achieve that by working with the `Student` model. Each field in a Student is implemented as a separate class (e.g. a `Name` object represents the student’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a student.","lastModifiedDate":"2022-10-20"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"kaij77"},"content":"Create a new `Remark` in `seedu.masteryCheck.model.student`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2022-10-06"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2022-01-02"},{"lineNumber":235,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"kaij77"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each student.","lastModifiedDate":"2022-10-06"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"jorrdansoh"},"content":"Simply add the following to [`StudentCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2022-10-20"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"jorrdansoh"},"content":"**`StudentCard.java`:**","lastModifiedDate":"2022-10-20"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"jorrdansoh"},"content":"Then insert the following into [`main/resources/view/StudentListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2022-10-20"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"jorrdansoh"},"content":"**`StudentListCard.fxml`:**","lastModifiedDate":"2022-10-20"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"jorrdansoh"},"content":"## Modify `Student` to support a `Remark` field","lastModifiedDate":"2022-10-20"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"jorrdansoh"},"content":"Since `StudentCard` displays data from a `Student`, we need to update `Student` to get our `Remark` displayed!","lastModifiedDate":"2022-10-20"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"jorrdansoh"},"content":"### Modify `Student`","lastModifiedDate":"2022-10-20"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"jorrdansoh"},"content":"We change the constructor of `Student` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2022-10-20"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"jorrdansoh"},"content":"### Update other usages of `Student`","lastModifiedDate":"2022-10-20"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"jorrdansoh"},"content":"Unfortunately, a change to `Student` will cause other commands to break, you will have to modify these commands to use the updated `Student`!","lastModifiedDate":"2022-10-20"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"jorrdansoh"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Student` class to find these commands.","lastModifiedDate":"2022-10-20"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"Yuvaraj0702"},"content":"Friday stores data by serializing `JsonAdaptedStudent` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedStudent` to work with our new `Student`!","lastModifiedDate":"2022-11-02"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"Yuvaraj0702"},"content":":exclamation: You must delete Friday’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause Friday to default to an empty FRIDAY!","lastModifiedDate":"2022-11-02"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"jorrdansoh"},"content":"Now that we have finalized the `Student` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2022-10-20"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"jorrdansoh"},"content":"**`StudentCard.java`:**","lastModifiedDate":"2022-10-20"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"jorrdansoh"},"content":"public StudentCard(Student student, int displayedIndex) {","lastModifiedDate":"2022-10-20"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"kaij77"},"content":"    remark.setText(student.getRemark().value);","lastModifiedDate":"2022-10-06"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"jorrdansoh"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Student`. Since all fields in a `Student` are immutable, we create a new instance of a `Student` with the values that we want and","lastModifiedDate":"2022-10-20"},{"lineNumber":329,"author":{"gitId":"jorrdansoh"},"content":"save it with `Model#setStudent()`.","lastModifiedDate":"2022-10-20"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"jorrdansoh"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Student: %1$s\";","lastModifiedDate":"2022-10-20"},{"lineNumber":336,"author":{"gitId":"jorrdansoh"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Student: %1$s\";","lastModifiedDate":"2022-10-20"},{"lineNumber":337,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"jorrdansoh"},"content":"        List\u003cStudent\u003e lastShownList \u003d model.getFilteredStudentList();","lastModifiedDate":"2022-10-20"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"jorrdansoh"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-20"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"jorrdansoh"},"content":"        Student studentToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-10-20"},{"lineNumber":347,"author":{"gitId":"jorrdansoh"},"content":"        Student editedStudent \u003d new Student(","lastModifiedDate":"2022-10-20"},{"lineNumber":348,"author":{"gitId":"kaij77"},"content":"                studentToEdit.getName(), studentToEdit.getPhone(), studentToEdit.getEmail(),","lastModifiedDate":"2022-10-06"},{"lineNumber":349,"author":{"gitId":"kaij77"},"content":"                studentToEdit.getAddress(), remark, studentToEdit.getTags());","lastModifiedDate":"2022-10-06"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"jorrdansoh"},"content":"        model.setStudent(studentToEdit, editedStudent);","lastModifiedDate":"2022-10-20"},{"lineNumber":352,"author":{"gitId":"jorrdansoh"},"content":"        model.updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2022-10-20"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"kaij77"},"content":"        return new CommandResult(generateSuccessMessage(editedStudent));","lastModifiedDate":"2022-10-06"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":360,"author":{"gitId":"kaij77"},"content":"     * {@code studentToEdit}.","lastModifiedDate":"2022-10-06"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"jorrdansoh"},"content":"    private String generateSuccessMessage(Student studentToEdit) {","lastModifiedDate":"2022-10-20"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"kaij77"},"content":"        return String.format(message, studentToEdit);","lastModifiedDate":"2022-10-06"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2022-01-02"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":378,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2022-01-02"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":401,"author":{"gitId":"Yuvaraj0702"},"content":"This concludes the tutorial for adding a new `Command` to Friday.","lastModifiedDate":"2022-11-02"}],"authorContributionMap":{"jorrdansoh":27,"Yuvaraj0702":6,"kaij77":15,"-":351,"HowSuen":2}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":11,"author":{"gitId":"jorrdansoh"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `masteryCheck` field from `Student` class.","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"kaij77"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `masteryCheck` field can be done similarly.","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Let’s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"jorrdansoh"},"content":"The `masteryCheck` field in `Student` is actually an instance of the `Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"jorrdansoh"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditStudentDescriptor` may require more careful inspection.","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"jorrdansoh"},"content":"Let’s try removing references to `Address` in `EditStudentDescriptor`.","lastModifiedDate":"2022-10-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"jorrdansoh"},"content":"1. Safe delete the field `masteryCheck` in `EditStudentDescriptor`.","lastModifiedDate":"2022-10-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"kaij77"},"content":"1. Remove the usages of `masteryCheck` and select `Do refactor` when you are done.","lastModifiedDate":"2022-10-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"jorrdansoh"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `masteryCheck` field from the `Student` class will require you to modify its constructor.","lastModifiedDate":"2022-10-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"kaij77"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `masteryCheck` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2022-10-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"jorrdansoh"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$masteryCheck` in each `StudentCard` that has not been removed nor identified.","lastModifiedDate":"2022-10-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"kaij77"},"content":"![$masteryCheck](../images/remove/$masteryCheck.png)","lastModifiedDate":"2022-10-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"jorrdansoh"},"content":"A quick look at the `StudentCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2022-10-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"jorrdansoh"},"content":"**`StudentCard.java`**","lastModifiedDate":"2022-10-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"kaij77"},"content":"private Label masteryCheck;","lastModifiedDate":"2022-10-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"jorrdansoh"},"content":"**`StudentCard.fxml`**","lastModifiedDate":"2022-10-20"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"kaij77"},"content":"\u003cLabel fx:id\u003d\"telegramHandle\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$telegramHandle\" /\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":86,"author":{"gitId":"kaij77"},"content":"\u003cLabel fx:id\u003d\"masteryCheck\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$masteryCheck\" /\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":87,"author":{"gitId":"kaij77"},"content":"\u003cLabel fx:id\u003d\"consultation\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$consultation\" /\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"kaij77"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `masteryCheck` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2022-10-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"Yuvaraj0702"},"content":"**`invalidStudentFriday.json`:**","lastModifiedDate":"2022-10-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"kaij77"},"content":"  \"students\": [ {","lastModifiedDate":"2022-10-06"},{"lineNumber":104,"author":{"gitId":"jorrdansoh"},"content":"    \"name\": \"Student with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2022-10-20"},{"lineNumber":105,"author":{"gitId":"kaij77"},"content":"    \"telegramHandle\": \"9482424\",","lastModifiedDate":"2022-10-06"},{"lineNumber":106,"author":{"gitId":"kaij77"},"content":"    \"consultation\": \"hans@example.com\",","lastModifiedDate":"2022-10-06"},{"lineNumber":107,"author":{"gitId":"kaij77"},"content":"    \"masteryCheck\": \"4th street\"","lastModifiedDate":"2022-10-06"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"kaij77"},"content":"You can go through each individual `json` file and manually remove the `masteryCheck` field.","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"jorrdansoh":11,"Yuvaraj0702":1,"kaij77":14,"-":86}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"![ArchitectureDiagram](../images/ArchitectureDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"HowSuen"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `Logic`.","lastModifiedDate":"2022-10-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"HowSuen"},"content":"A quick look at the `Logic` (an extract given below) confirms that this indeed might be what we’re looking for.","lastModifiedDate":"2022-10-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Let’s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":124,"author":{"gitId":"Yuvaraj0702"},"content":"        Command command \u003d fridayParser.parseCommand(commandText);","lastModifiedDate":"2022-11-03"},{"lineNumber":125,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"Yuvaraj0702"},"content":"            storage.saveFriday(model.getFriday());","lastModifiedDate":"2022-11-02"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"jorrdansoh"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `FridayParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2022-11-01"},{"lineNumber":147,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-07-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-07-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2021-07-31"},{"lineNumber":172,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-07-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":176,"author":{"gitId":"jorrdansoh"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditStudentDescriptor`. Recall that we can verify the contents of `editStudentDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":177,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":182,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":190,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"jorrdansoh"},"content":"       Student studentToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-10-20"},{"lineNumber":195,"author":{"gitId":"jorrdansoh"},"content":"       Student editedStudent \u003d createEditedStudent(studentToEdit, editStudentDescriptor);","lastModifiedDate":"2022-10-20"},{"lineNumber":196,"author":{"gitId":"jorrdansoh"},"content":"       if (!studentToEdit.isSameStudent(editedStudent) \u0026\u0026 model.hasStudent(editedStudent)) {","lastModifiedDate":"2022-10-20"},{"lineNumber":197,"author":{"gitId":"jorrdansoh"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_STUDENT);","lastModifiedDate":"2022-10-20"},{"lineNumber":198,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"jorrdansoh"},"content":"       model.setStudent(studentToEdit, editedStudent);","lastModifiedDate":"2022-10-20"},{"lineNumber":200,"author":{"gitId":"jorrdansoh"},"content":"       model.updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2022-10-20"},{"lineNumber":201,"author":{"gitId":"jorrdansoh"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_STUDENT_SUCCESS, editedStudent));","lastModifiedDate":"2022-10-20"},{"lineNumber":202,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-07-31"},{"lineNumber":206,"author":{"gitId":"jorrdansoh"},"content":"   * it uses the `setStudent()` method (defined in the interface `Model` and implemented in `ModelManager` as per the usual pattern) to update the student data.","lastModifiedDate":"2022-10-20"},{"lineNumber":207,"author":{"gitId":"jorrdansoh"},"content":"   * it uses the `updateFilteredStudentList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ students.\u003cbr\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":208,"author":{"gitId":"kaij77"},"content":"     FYI, The \u0027filtered list\u0027 is the list of students resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the students so that the user can see the edited student along with all other students. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":209,"author":{"gitId":"kaij77"},"content":"     To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of students is being tracked.","lastModifiedDate":"2022-10-06"},{"lineNumber":210,"author":{"gitId":"-"},"content":"     \u003cimg src\u003d\"../images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":211,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":214,"author":{"gitId":"-"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    \u003cimg src\u003d\"../images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":218,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":222,"author":{"gitId":"Yuvaraj0702"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** When trying to step into a statement such as `storage.saveFriday(model.getFriday())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2022-11-02"},{"lineNumber":223,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"Yuvaraj0702"},"content":"1.  As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonFriday#saveFriday()` method which calls the `JsonSerializableFriday` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2022-11-02"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":227,"author":{"gitId":"Yuvaraj0702"},"content":"    **`JsonSerializableFriday` constructor:**","lastModifiedDate":"2022-11-02"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"Yuvaraj0702"},"content":"     * Converts a given {@code ReadOnlyFriday} into this class for Jackson use.","lastModifiedDate":"2022-11-02"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"Yuvaraj0702"},"content":"     * {@code JsonSerializableFriday}.","lastModifiedDate":"2022-11-02"},{"lineNumber":234,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"jorrdansoh"},"content":"    public JsonSerializableFriday(ReadOnlyFriday source) {","lastModifiedDate":"2022-11-05"},{"lineNumber":236,"author":{"gitId":"kaij77"},"content":"        students.addAll(","lastModifiedDate":"2022-10-06"},{"lineNumber":237,"author":{"gitId":"jorrdansoh"},"content":"            source.getStudentList()","lastModifiedDate":"2022-10-20"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                  .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"jorrdansoh"},"content":"                  .map(JsonAdaptedStudent::new)","lastModifiedDate":"2022-10-20"},{"lineNumber":240,"author":{"gitId":"-"},"content":"                  .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"jorrdansoh"},"content":"1. It appears that a `JsonAdaptedStudent` is created for each `Student` and then added to the `JsonSerializableFriday`.","lastModifiedDate":"2022-11-05"},{"lineNumber":245,"author":{"gitId":"-"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":249,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"jorrdansoh"},"content":"    3.  Save the FRIDAY in the CSV format instead","lastModifiedDate":"2022-10-09"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"jorrdansoh"},"content":"    5.  Add a new field to `Student`","lastModifiedDate":"2022-10-20"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"jorrdansoh"},"content":"    6.  Add a new entity to the FRIDAY","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"jorrdansoh":20,"Yuvaraj0702":7,"kaij77":3,"-":271,"HowSuen":2}},{"path":"src/main/java/friday/AppParameters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"HowSuen"},"content":"import friday.commons.core.LogsCenter;","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"HowSuen"},"content":"import friday.commons.util.FileUtil;","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents the parsed command-line parameters given to the application.","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AppParameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AppParameters.class);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Path configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path getConfigPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setConfigPath(Path configPath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.configPath \u003d configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the application command-line parameters.","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static AppParameters parse(Application.Parameters parameters) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e namedParameters \u003d parameters.getNamed();","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String configPathParameter \u003d namedParameters.get(\"config\");","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (configPathParameter !\u003d null \u0026\u0026 !FileUtil.isValidPath(configPathParameter)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            logger.warning(\"Invalid config path \" + configPathParameter + \". Using default config path.\");","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            configPathParameter \u003d null;","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        appParameters.setConfigPath(configPathParameter !\u003d null ? Paths.get(configPathParameter) : null);","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return appParameters;","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!(other instanceof AppParameters)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d (AppParameters) other;","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return Objects.equals(getConfigPath(), otherAppParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return configPath.hashCode();","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"-":61,"HowSuen":3}},{"path":"src/main/java/friday/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" *     Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"-":24,"HowSuen":1}},{"path":"src/main/java/friday/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"HowSuen"},"content":"import friday.commons.core.Config;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"HowSuen"},"content":"import friday.commons.core.LogsCenter;","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"HowSuen"},"content":"import friday.commons.core.Version;","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"HowSuen"},"content":"import friday.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"HowSuen"},"content":"import friday.commons.util.ConfigUtil;","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"HowSuen"},"content":"import friday.commons.util.StringUtil;","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"HowSuen"},"content":"import friday.logic.Logic;","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"HowSuen"},"content":"import friday.logic.LogicManager;","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"darrtzj"},"content":"import friday.model.Friday;","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"HowSuen"},"content":"import friday.model.Model;","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"HowSuen"},"content":"import friday.model.ModelManager;","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"darrtzj"},"content":"import friday.model.ReadOnlyFriday;","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"HowSuen"},"content":"import friday.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"HowSuen"},"content":"import friday.model.UserPrefs;","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"HowSuen"},"content":"import friday.model.util.SampleDataUtil;","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"darrtzj"},"content":"import friday.storage.FridayStorage;","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"darrtzj"},"content":"import friday.storage.JsonFridayStorage;","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"HowSuen"},"content":"import friday.storage.JsonUserPrefsStorage;","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"HowSuen"},"content":"import friday.storage.Storage;","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"HowSuen"},"content":"import friday.storage.StorageManager;","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"HowSuen"},"content":"import friday.storage.UserPrefsStorage;","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"HowSuen"},"content":"import friday.ui.Ui;","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"HowSuen"},"content":"import friday.ui.UiManager;","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"darrtzj"},"content":"    public static final Version VERSION \u003d new Version(1, 3, 1, false);","lastModifiedDate":"2022-10-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"Yuvaraj0702"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing Friday ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-10-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"Yuvaraj0702"},"content":"        FridayStorage fridayStorage \u003d new JsonFridayStorage(userPrefs.getFridayFilePath());","lastModifiedDate":"2022-10-24"},{"lineNumber":60,"author":{"gitId":"darrtzj"},"content":"        storage \u003d new StorageManager(fridayStorage, userPrefsStorage);","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"Yuvaraj0702"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s FRIDAY and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":73,"author":{"gitId":"Yuvaraj0702"},"content":"     * The data from the sample FRIDAY will be used instead if {@code storage}\u0027s FRIDAY is not found,","lastModifiedDate":"2022-10-25"},{"lineNumber":74,"author":{"gitId":"Yuvaraj0702"},"content":"     * or an empty FRIDAY will be used instead if errors occur when reading {@code storage}\u0027s FRIDAY.","lastModifiedDate":"2022-10-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":77,"author":{"gitId":"Yuvaraj0702"},"content":"        Optional\u003cReadOnlyFriday\u003e fridayOptional;","lastModifiedDate":"2022-10-24"},{"lineNumber":78,"author":{"gitId":"darrtzj"},"content":"        ReadOnlyFriday initialData;","lastModifiedDate":"2022-10-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"Yuvaraj0702"},"content":"            fridayOptional \u003d storage.readFriday();","lastModifiedDate":"2022-10-24"},{"lineNumber":81,"author":{"gitId":"Yuvaraj0702"},"content":"            if (!fridayOptional.isPresent()) {","lastModifiedDate":"2022-10-24"},{"lineNumber":82,"author":{"gitId":"Yuvaraj0702"},"content":"                logger.info(\"Data file not found. Will be starting with sample FRIDAY data\");","lastModifiedDate":"2022-10-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"Yuvaraj0702"},"content":"            initialData \u003d fridayOptional.orElseGet(SampleDataUtil::getSampleFriday);","lastModifiedDate":"2022-10-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"Yuvaraj0702"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty FRIDAY\");","lastModifiedDate":"2022-10-25"},{"lineNumber":87,"author":{"gitId":"darrtzj"},"content":"            initialData \u003d new Friday();","lastModifiedDate":"2022-10-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":89,"author":{"gitId":"Yuvaraj0702"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty FRIDAY\");","lastModifiedDate":"2022-10-25"},{"lineNumber":90,"author":{"gitId":"darrtzj"},"content":"            initialData \u003d new Friday();","lastModifiedDate":"2022-10-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"Yuvaraj0702"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty FRIDAY\");","lastModifiedDate":"2022-10-25"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"Yuvaraj0702"},"content":"        logger.info(\"Starting Friday \" + MainApp.VERSION);","lastModifiedDate":"2022-10-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"jorrdansoh"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping FRIDAY ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-10-09"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jorrdansoh":1,"Yuvaraj0702":14,"darrtzj":9,"-":139,"HowSuen":20}},{"path":"src/main/java/friday/commons/core/Config.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.commons.core;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Config values used by the app","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Config {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Path DEFAULT_CONFIG_FILE \u003d Paths.get(\"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    // Config values customizable through config file","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private Level logLevel \u003d Level.INFO;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path userPrefsFilePath \u003d Paths.get(\"preferences.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public Level getLogLevel() {","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setLogLevel(Level logLevel) {","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.logLevel \u003d logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void setUserPrefsFilePath(Path userPrefsFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!(other instanceof Config)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config o \u003d (Config) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Objects.equals(logLevel, o.logLevel)","lastModifiedDate":"2018-12-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(userPrefsFilePath, o.userPrefsFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return Objects.hash(logLevel, userPrefsFilePath);","lastModifiedDate":"2018-12-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        sb.append(\"Current log level : \" + logLevel);","lastModifiedDate":"2018-12-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        sb.append(\"\\nPreference file Location : \" + userPrefsFilePath);","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":62,"HowSuen":1}},{"path":"src/main/java/friday/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.commons.core;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_HEIGHT \u003d 600;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_WIDTH \u003d 740;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings o \u003d (GuiSettings) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d o.windowWidth","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d o.windowHeight","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, o.windowCoordinates);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        sb.append(\"Width : \" + windowWidth + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        sb.append(\"Height : \" + windowHeight + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        sb.append(\"Position : \" + windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":78,"HowSuen":1}},{"path":"src/main/java/friday/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.commons.core;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"darrtzj"},"content":"    private static final String LOG_FILE \u003d \"friday.log\";","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static FileHandler fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static ConsoleHandler consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes with a custom log level (specified in the {@code config} object)","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Logging levels for existing loggers will only be updated if the logger with the same name","lastModifiedDate":"2016-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * is requested again from the LogsCenter.","lastModifiedDate":"2016-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.info(\"currentLogLevel: \" + currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name.","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(false);","lastModifiedDate":"2016-09-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addConsoleHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addFileHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (clazz \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return Logger.getLogger(\"\");","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates the {@code consoleHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void addConsoleHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (consoleHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            consoleHandler \u003d createConsoleHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logger.addHandler(consoleHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Remove all the handlers from {@code logger}.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Creates {@code fileHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static void addFileHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (fileHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                fileHandler \u003d createFileHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-04-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Creates a {@code FileHandler} for the log file.","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @throws IOException if there are problems opening the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private static FileHandler createFileHandler() throws IOException {","lastModifiedDate":"2016-09-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2016-09-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2016-09-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        fileHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private static ConsoleHandler createConsoleHandler() {","lastModifiedDate":"2016-09-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2016-09-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"darrtzj":1,"-":110,"HowSuen":1}},{"path":"src/main/java/friday/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.commons.core;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"jorrdansoh"},"content":"    public static final String MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX \u003d \"The student index provided is invalid\";","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"jorrdansoh"},"content":"    public static final String MESSAGE_STUDENTS_LISTED_OVERVIEW \u003d \"%1$d students listed!\";","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jorrdansoh":2,"-":10,"HowSuen":1}},{"path":"src/main/java/friday/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.commons.core;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a version with major, minor and patch number","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final int major;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final int minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final int patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.major \u003d major;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public int getMajor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return major;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public int getMinor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int getPatch() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @param versionString version number string","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @return a Version object","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                versionMatcher.group(4) \u003d\u003d null ? false : true);","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (major !\u003d other.major) {","lastModifiedDate":"2018-08-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return major - other.major;","lastModifiedDate":"2018-08-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (minor !\u003d other.minor) {","lastModifiedDate":"2018-08-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return minor - other.minor;","lastModifiedDate":"2018-08-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (patch !\u003d other.patch) {","lastModifiedDate":"2018-08-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return patch - other.patch;","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2018-08-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (isEarlyAccess) {","lastModifiedDate":"2018-08-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return -1;","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return 1;","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Version)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        final Version other \u003d (Version) obj;","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return compareTo(other) \u003d\u003d 0;","lastModifiedDate":"2018-08-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":115,"HowSuen":1}},{"path":"src/main/java/friday/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.commons.core.index;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof Index // instanceof handles nulls","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 zeroBasedIndex \u003d\u003d ((Index) other).zeroBasedIndex); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"-":53,"HowSuen":1}},{"path":"src/main/java/friday/commons/exceptions/DataConversionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.commons.exceptions;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error during conversion of data from one format to another","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class DataConversionException extends Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public DataConversionException(Exception cause) {","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(cause);","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":10,"HowSuen":1}},{"path":"src/main/java/friday/commons/exceptions/IllegalValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.commons.exceptions;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that some given data does not fulfill some constraints.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class IllegalValueException extends Exception {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @param cause of the main exception","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":20,"HowSuen":1}},{"path":"src/main/java/friday/commons/util/AppUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.commons.util;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"HowSuen"},"content":"import friday.MainApp;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A container for App specific utility functions","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AppUtil {","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Gets an {@code Image} from the specified path.","lastModifiedDate":"2020-05-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(imagePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException with {@code errorMessage} if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition, String errorMessage) {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":40,"HowSuen":2}},{"path":"src/main/java/friday/commons/util/CollectionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.commons.util;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-06-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2016-12-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Utility methods related to Collections","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CollectionUtil {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** @see #requireAllNonNull(Collection) */","lastModifiedDate":"2017-05-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Object... items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Stream.of(items).forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Throws NullPointerException if {@code items} or any element of {@code items} is null.","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Collection\u003c?\u003e items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        items.forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if {@code items} contain any elements that are non-null.","lastModifiedDate":"2017-06-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isAnyNonNull(Object... items) {","lastModifiedDate":"2017-06-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);","lastModifiedDate":"2017-06-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":34,"HowSuen":1}},{"path":"src/main/java/friday/commons/util/ConfigUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.commons.util;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"HowSuen"},"content":"import friday.commons.core.Config;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"HowSuen"},"content":"import friday.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A class for accessing the Config File.","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ConfigUtil {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static Optional\u003cConfig\u003e readConfig(Path configFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(configFilePath, Config.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static void saveConfig(Config config, Path configFilePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(config, configFilePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"-":20,"HowSuen":3}},{"path":"src/main/java/friday/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.commons.util;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String)},","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":82,"HowSuen":1}},{"path":"src/main/java/friday/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.commons.util;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"HowSuen"},"content":"import friday.commons.core.LogsCenter;","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"HowSuen"},"content":"import friday.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class JsonUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    .addDeserializer(Level.class, new LevelDeserializer(Level.class)));","lastModifiedDate":"2016-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);","lastModifiedDate":"2016-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the Json object from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2016-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * If any values are missing from the file, default values will be used, as long as the file is a valid json file.","lastModifiedDate":"2016-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null.","lastModifiedDate":"2016-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param classOfObjectToDeserialize Json file has to correspond to the structure in the class given here.","lastModifiedDate":"2016-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile(","lastModifiedDate":"2016-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            logger.info(\"Json file \" + filePath + \" not found\");","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2016-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        T jsonFile;","lastModifiedDate":"2016-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2018-04-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new DataConversionException(e);","lastModifiedDate":"2016-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2016-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Saves the Json object to the specified file.","lastModifiedDate":"2016-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2016-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @param jsonFile cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2016-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2017-05-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        serializeObjectToJsonFile(filePath, jsonFile);","lastModifiedDate":"2018-04-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Converts a given string representation of a JSON data to instance of a class","lastModifiedDate":"2016-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @return The instance of T with the specified values in the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2016-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2016-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Converts a given instance of a class into its JSON data string representation","lastModifiedDate":"2016-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param instance The T object to be converted into the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @return JSON data representation of the given class instance, in string","lastModifiedDate":"2016-10-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2016-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2016-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            super(vc);","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"         * Gets the logging level that matches loggingLevelString","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"         * \u003cp\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2016-09-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            return Level.class;","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":140,"HowSuen":3}},{"path":"src/main/java/friday/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.commons.util;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"HowSuen"},"content":"import static friday.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":66,"HowSuen":2}},{"path":"src/main/java/friday/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.logic;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"HowSuen"},"content":"import friday.commons.core.GuiSettings;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"HowSuen"},"content":"import friday.logic.commands.CommandResult;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"HowSuen"},"content":"import friday.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"HowSuen"},"content":"import friday.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"HowSuen"},"content":"import friday.model.Model;","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"darrtzj"},"content":"import friday.model.ReadOnlyFriday;","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"kaij77"},"content":"import friday.model.student.Student;","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"Yuvaraj0702"},"content":"     * Returns Friday.","lastModifiedDate":"2022-10-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"darrtzj"},"content":"     * @see Model#getFriday()","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"Yuvaraj0702"},"content":"    ReadOnlyFriday getFriday();","lastModifiedDate":"2022-10-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"jorrdansoh"},"content":"    /** Returns an unmodifiable view of the filtered or sorted list of students */","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"jorrdansoh"},"content":"    ObservableList\u003cStudent\u003e getStudentList();","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"jorrdansoh"},"content":"     * Returns the user prefs\u0027 Friday file path.","lastModifiedDate":"2022-11-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"Yuvaraj0702"},"content":"    Path getFridayFilePath();","lastModifiedDate":"2022-10-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"jorrdansoh":3,"Yuvaraj0702":3,"darrtzj":2,"kaij77":1,"-":36,"HowSuen":6}},{"path":"src/main/java/friday/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.logic;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"HowSuen"},"content":"import friday.commons.core.GuiSettings;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"HowSuen"},"content":"import friday.commons.core.LogsCenter;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"HowSuen"},"content":"import friday.logic.commands.Command;","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"HowSuen"},"content":"import friday.logic.commands.CommandResult;","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"HowSuen"},"content":"import friday.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"HowSuen"},"content":"import friday.logic.parser.FridayParser;","lastModifiedDate":"2022-10-19"},{"lineNumber":13,"author":{"gitId":"HowSuen"},"content":"import friday.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"HowSuen"},"content":"import friday.model.Model;","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"darrtzj"},"content":"import friday.model.ReadOnlyFriday;","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"kaij77"},"content":"import friday.model.student.Student;","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"HowSuen"},"content":"import friday.storage.Storage;","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"HowSuen"},"content":"    private final FridayParser fridayParser;","lastModifiedDate":"2022-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"HowSuen"},"content":"        fridayParser \u003d new FridayParser();","lastModifiedDate":"2022-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"darrtzj"},"content":"        Command command \u003d fridayParser.parseCommand(commandText, model);","lastModifiedDate":"2022-10-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"darrtzj"},"content":"            storage.saveFriday(model.getFriday());","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":58,"author":{"gitId":"Yuvaraj0702"},"content":"    public ReadOnlyFriday getFriday() {","lastModifiedDate":"2022-10-25"},{"lineNumber":59,"author":{"gitId":"darrtzj"},"content":"        return model.getFriday();","lastModifiedDate":"2022-10-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":63,"author":{"gitId":"jorrdansoh"},"content":"    public ObservableList\u003cStudent\u003e getStudentList() {","lastModifiedDate":"2022-10-20"},{"lineNumber":64,"author":{"gitId":"jorrdansoh"},"content":"        return model.getStudentList();","lastModifiedDate":"2022-10-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"Yuvaraj0702"},"content":"    public Path getFridayFilePath() {","lastModifiedDate":"2022-10-25"},{"lineNumber":69,"author":{"gitId":"darrtzj"},"content":"        return model.getFridayFilePath();","lastModifiedDate":"2022-10-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"jorrdansoh":2,"Yuvaraj0702":2,"darrtzj":5,"kaij77":1,"-":59,"HowSuen":12}},{"path":"src/main/java/friday/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.logic.commands;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"jorrdansoh"},"content":"import static friday.logic.parser.CliSyntax.PREFIX_CONSULTATION;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"jorrdansoh"},"content":"import static friday.logic.parser.CliSyntax.PREFIX_MASTERYCHECK;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"HowSuen"},"content":"import static friday.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"jorrdansoh"},"content":"import static friday.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"kaij77"},"content":"import static friday.logic.parser.CliSyntax.PREFIX_TELEGRAMHANDLE;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"HowSuen"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"HowSuen"},"content":"import friday.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"HowSuen"},"content":"import friday.model.Model;","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"kaij77"},"content":"import friday.model.student.Student;","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"jorrdansoh"},"content":" * Adds a student to FRIDAY.","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"jorrdansoh"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a student to FRIDAY.\\n\"","lastModifiedDate":"2022-11-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":24,"author":{"gitId":"jorrdansoh"},"content":"            + \"[\" + PREFIX_TELEGRAMHANDLE + \"TELEGRAM HANDLE] \"","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"jorrdansoh"},"content":"            + \"[\" + PREFIX_CONSULTATION + \"CONSULTATION] \"","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"jorrdansoh"},"content":"            + \"[\" + PREFIX_MASTERYCHECK + \"MASTERY CHECK] \"","lastModifiedDate":"2022-11-05"},{"lineNumber":27,"author":{"gitId":"jorrdansoh"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2022-11-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":30,"author":{"gitId":"jorrdansoh"},"content":"            + PREFIX_TELEGRAMHANDLE + \"johndoe \"","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"jorrdansoh"},"content":"            + PREFIX_CONSULTATION + \"2022-09-01 \"","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"jorrdansoh"},"content":"            + PREFIX_MASTERYCHECK + \"2022-08-24 \"","lastModifiedDate":"2022-11-05"},{"lineNumber":33,"author":{"gitId":"jorrdansoh"},"content":"            + PREFIX_TAG + \"cool guy \"","lastModifiedDate":"2022-11-05"},{"lineNumber":34,"author":{"gitId":"jorrdansoh"},"content":"            + PREFIX_TAG + \"smart\";","lastModifiedDate":"2022-11-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"jorrdansoh"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New student added: %1$s\";","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"jorrdansoh"},"content":"    public static final String MESSAGE_DUPLICATE_STUDENT \u003d \"This student\u0027s name or Telegram handle \"","lastModifiedDate":"2022-10-31"},{"lineNumber":38,"author":{"gitId":"jorrdansoh"},"content":"            + \"already exists in FRIDAY (names and Telegram handles are case insensitive)\";","lastModifiedDate":"2022-11-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"kaij77"},"content":"    private final Student toAdd;","lastModifiedDate":"2022-10-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"jorrdansoh"},"content":"     * Creates an AddCommand to add the specified {@code Student}","lastModifiedDate":"2022-10-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"kaij77"},"content":"    public AddCommand(Student student) {","lastModifiedDate":"2022-10-06"},{"lineNumber":46,"author":{"gitId":"kaij77"},"content":"        requireNonNull(student);","lastModifiedDate":"2022-10-06"},{"lineNumber":47,"author":{"gitId":"kaij77"},"content":"        toAdd \u003d student;","lastModifiedDate":"2022-10-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"jorrdansoh"},"content":"        if (model.hasStudent(toAdd)) {","lastModifiedDate":"2022-10-06"},{"lineNumber":55,"author":{"gitId":"jorrdansoh"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_STUDENT);","lastModifiedDate":"2022-10-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"jorrdansoh"},"content":"        model.addStudent(toAdd);","lastModifiedDate":"2022-10-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jorrdansoh":21,"kaij77":6,"-":36,"HowSuen":5}},{"path":"src/main/java/friday/logic/commands/AliasCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"darrtzj"},"content":"package friday.logic.commands;","lastModifiedDate":"2022-10-22"},{"lineNumber":2,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":3,"author":{"gitId":"darrtzj"},"content":"import static friday.logic.parser.CliSyntax.PREFIX_ALIAS;","lastModifiedDate":"2022-10-22"},{"lineNumber":4,"author":{"gitId":"darrtzj"},"content":"import static friday.logic.parser.CliSyntax.PREFIX_RESERVED_KEYWORD;","lastModifiedDate":"2022-10-22"},{"lineNumber":5,"author":{"gitId":"darrtzj"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-22"},{"lineNumber":6,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":7,"author":{"gitId":"darrtzj"},"content":"import friday.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-22"},{"lineNumber":8,"author":{"gitId":"darrtzj"},"content":"import friday.model.Model;","lastModifiedDate":"2022-10-22"},{"lineNumber":9,"author":{"gitId":"darrtzj"},"content":"import friday.model.alias.Alias;","lastModifiedDate":"2022-10-23"},{"lineNumber":10,"author":{"gitId":"darrtzj"},"content":"import friday.model.alias.ReservedKeyword;","lastModifiedDate":"2022-10-23"},{"lineNumber":11,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":12,"author":{"gitId":"darrtzj"},"content":"/**","lastModifiedDate":"2022-10-22"},{"lineNumber":13,"author":{"gitId":"darrtzj"},"content":" * Adds an alias for commands to FRIDAY.","lastModifiedDate":"2022-10-22"},{"lineNumber":14,"author":{"gitId":"darrtzj"},"content":" */","lastModifiedDate":"2022-10-22"},{"lineNumber":15,"author":{"gitId":"darrtzj"},"content":"public class AliasCommand extends Command {","lastModifiedDate":"2022-10-22"},{"lineNumber":16,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":17,"author":{"gitId":"darrtzj"},"content":"    public static final String COMMAND_WORD \u003d \"alias\";","lastModifiedDate":"2022-10-22"},{"lineNumber":18,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":19,"author":{"gitId":"darrtzj"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds an alias to FRIDAY. \"","lastModifiedDate":"2022-10-22"},{"lineNumber":20,"author":{"gitId":"darrtzj"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-10-22"},{"lineNumber":21,"author":{"gitId":"darrtzj"},"content":"            + PREFIX_ALIAS + \"ALIAS \"","lastModifiedDate":"2022-10-22"},{"lineNumber":22,"author":{"gitId":"darrtzj"},"content":"            + PREFIX_RESERVED_KEYWORD + \"DEFAULT_COMMAND \\n \"","lastModifiedDate":"2022-10-22"},{"lineNumber":23,"author":{"gitId":"darrtzj"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-22"},{"lineNumber":24,"author":{"gitId":"darrtzj"},"content":"            + PREFIX_ALIAS + \"ls \"","lastModifiedDate":"2022-10-22"},{"lineNumber":25,"author":{"gitId":"darrtzj"},"content":"            + PREFIX_RESERVED_KEYWORD + ListCommand.COMMAND_WORD;","lastModifiedDate":"2022-10-22"},{"lineNumber":26,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":27,"author":{"gitId":"darrtzj"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New alias added: %1$s\";","lastModifiedDate":"2022-10-22"},{"lineNumber":28,"author":{"gitId":"darrtzj"},"content":"    public static final String MESSAGE_DUPLICATE_ALIAS \u003d \"This alias already exists in FRIDAY\";","lastModifiedDate":"2022-10-22"},{"lineNumber":29,"author":{"gitId":"darrtzj"},"content":"    public static final String MESSAGE_INVALID_ALIAS \u003d \"Alias given is invalid.\\n\"","lastModifiedDate":"2022-11-01"},{"lineNumber":30,"author":{"gitId":"darrtzj"},"content":"            + \"Alias cannot be a reserved keyword and must contain only 1 word.\";","lastModifiedDate":"2022-11-01"},{"lineNumber":31,"author":{"gitId":"darrtzj"},"content":"    public static final String MESSAGE_INVALID_KEYWORD \u003d \"Keyword given is not a reserved keyword\";","lastModifiedDate":"2022-10-23"},{"lineNumber":32,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":33,"author":{"gitId":"darrtzj"},"content":"    private final Alias toAdd;","lastModifiedDate":"2022-10-23"},{"lineNumber":34,"author":{"gitId":"darrtzj"},"content":"    private final ReservedKeyword keyword;","lastModifiedDate":"2022-10-23"},{"lineNumber":35,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":36,"author":{"gitId":"darrtzj"},"content":"    /**","lastModifiedDate":"2022-10-22"},{"lineNumber":37,"author":{"gitId":"darrtzj"},"content":"     * Creates an AliasCommand to add the specified {@code alias}","lastModifiedDate":"2022-10-22"},{"lineNumber":38,"author":{"gitId":"darrtzj"},"content":"     */","lastModifiedDate":"2022-10-22"},{"lineNumber":39,"author":{"gitId":"darrtzj"},"content":"    public AliasCommand(Alias alias, ReservedKeyword reservedKeyword) {","lastModifiedDate":"2022-10-23"},{"lineNumber":40,"author":{"gitId":"darrtzj"},"content":"        requireNonNull(alias);","lastModifiedDate":"2022-10-22"},{"lineNumber":41,"author":{"gitId":"darrtzj"},"content":"        requireNonNull(reservedKeyword);","lastModifiedDate":"2022-10-23"},{"lineNumber":42,"author":{"gitId":"darrtzj"},"content":"        toAdd \u003d alias;","lastModifiedDate":"2022-10-22"},{"lineNumber":43,"author":{"gitId":"darrtzj"},"content":"        keyword \u003d reservedKeyword;","lastModifiedDate":"2022-10-23"},{"lineNumber":44,"author":{"gitId":"darrtzj"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":45,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":46,"author":{"gitId":"darrtzj"},"content":"    @Override","lastModifiedDate":"2022-10-22"},{"lineNumber":47,"author":{"gitId":"darrtzj"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-22"},{"lineNumber":48,"author":{"gitId":"darrtzj"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-22"},{"lineNumber":49,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":50,"author":{"gitId":"darrtzj"},"content":"        if (!ReservedKeyword.isValidReservedKeyword(keyword.toString())) {","lastModifiedDate":"2022-10-23"},{"lineNumber":51,"author":{"gitId":"darrtzj"},"content":"            throw new CommandException(MESSAGE_INVALID_KEYWORD);","lastModifiedDate":"2022-10-23"},{"lineNumber":52,"author":{"gitId":"darrtzj"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":53,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":54,"author":{"gitId":"darrtzj"},"content":"        if (!Alias.isValidAlias(toAdd.toString())) {","lastModifiedDate":"2022-10-25"},{"lineNumber":55,"author":{"gitId":"darrtzj"},"content":"            throw new CommandException(MESSAGE_INVALID_ALIAS);","lastModifiedDate":"2022-10-23"},{"lineNumber":56,"author":{"gitId":"darrtzj"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":57,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":58,"author":{"gitId":"darrtzj"},"content":"        if (model.hasAlias(toAdd)) {","lastModifiedDate":"2022-10-22"},{"lineNumber":59,"author":{"gitId":"darrtzj"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_ALIAS);","lastModifiedDate":"2022-10-22"},{"lineNumber":60,"author":{"gitId":"darrtzj"},"content":"        }","lastModifiedDate":"2022-10-22"},{"lineNumber":61,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":62,"author":{"gitId":"darrtzj"},"content":"        model.addAlias(toAdd, keyword);","lastModifiedDate":"2022-10-23"},{"lineNumber":63,"author":{"gitId":"darrtzj"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2022-10-22"},{"lineNumber":64,"author":{"gitId":"darrtzj"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":65,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":66,"author":{"gitId":"darrtzj"},"content":"    @Override","lastModifiedDate":"2022-10-22"},{"lineNumber":67,"author":{"gitId":"darrtzj"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-22"},{"lineNumber":68,"author":{"gitId":"darrtzj"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-22"},{"lineNumber":69,"author":{"gitId":"darrtzj"},"content":"                || ((other instanceof AliasCommand) // instanceof handles nulls","lastModifiedDate":"2022-10-23"},{"lineNumber":70,"author":{"gitId":"darrtzj"},"content":"                \u0026\u0026 toAdd.equals(((AliasCommand) other).toAdd)","lastModifiedDate":"2022-10-23"},{"lineNumber":71,"author":{"gitId":"darrtzj"},"content":"                \u0026\u0026 keyword.equals(((AliasCommand) other).keyword));","lastModifiedDate":"2022-10-23"},{"lineNumber":72,"author":{"gitId":"darrtzj"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":73,"author":{"gitId":"darrtzj"},"content":"}","lastModifiedDate":"2022-10-22"}],"authorContributionMap":{"darrtzj":73}},{"path":"src/main/java/friday/logic/commands/AliasListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"darrtzj"},"content":"package friday.logic.commands;","lastModifiedDate":"2022-10-23"},{"lineNumber":2,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":3,"author":{"gitId":"darrtzj"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-23"},{"lineNumber":4,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":5,"author":{"gitId":"darrtzj"},"content":"import friday.model.Model;","lastModifiedDate":"2022-10-23"},{"lineNumber":6,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":7,"author":{"gitId":"darrtzj"},"content":"/**","lastModifiedDate":"2022-10-23"},{"lineNumber":8,"author":{"gitId":"darrtzj"},"content":" * Lists all aliases in FRIDAY to the user.","lastModifiedDate":"2022-10-23"},{"lineNumber":9,"author":{"gitId":"darrtzj"},"content":" */","lastModifiedDate":"2022-10-23"},{"lineNumber":10,"author":{"gitId":"darrtzj"},"content":"public class AliasListCommand extends Command {","lastModifiedDate":"2022-10-23"},{"lineNumber":11,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":12,"author":{"gitId":"darrtzj"},"content":"    public static final String COMMAND_WORD \u003d \"aliaslist\";","lastModifiedDate":"2022-10-23"},{"lineNumber":13,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":14,"author":{"gitId":"darrtzj"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all alias: %1$s\";","lastModifiedDate":"2022-10-23"},{"lineNumber":15,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":16,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":17,"author":{"gitId":"darrtzj"},"content":"    @Override","lastModifiedDate":"2022-10-23"},{"lineNumber":18,"author":{"gitId":"darrtzj"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-10-23"},{"lineNumber":19,"author":{"gitId":"darrtzj"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-23"},{"lineNumber":20,"author":{"gitId":"darrtzj"},"content":"        String aliasesString \u003d model.displayAliases();","lastModifiedDate":"2022-10-23"},{"lineNumber":21,"author":{"gitId":"darrtzj"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, aliasesString));","lastModifiedDate":"2022-10-23"},{"lineNumber":22,"author":{"gitId":"darrtzj"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":23,"author":{"gitId":"darrtzj"},"content":"}","lastModifiedDate":"2022-10-23"}],"authorContributionMap":{"darrtzj":23}},{"path":"src/main/java/friday/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.logic.commands;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"darrtzj"},"content":"import friday.model.Friday;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"HowSuen"},"content":"import friday.model.Model;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"darrtzj"},"content":" * Clears FRIDAY.","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"jorrdansoh"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"FRIDAY has been cleared!\";","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":20,"author":{"gitId":"darrtzj"},"content":"        model.setFriday(new Friday());","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jorrdansoh":1,"darrtzj":3,"-":17,"HowSuen":2}},{"path":"src/main/java/friday/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.logic.commands;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"HowSuen"},"content":"import friday.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"HowSuen"},"content":"import friday.model.Model;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":17,"HowSuen":3}},{"path":"src/main/java/friday/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.logic.commands;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":70,"HowSuen":1}},{"path":"src/main/java/friday/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.logic.commands;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"HowSuen"},"content":"import friday.commons.core.Messages;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"HowSuen"},"content":"import friday.commons.core.index.Index;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"HowSuen"},"content":"import friday.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"HowSuen"},"content":"import friday.model.Model;","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"kaij77"},"content":"import friday.model.student.Student;","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"jorrdansoh"},"content":" * Deletes a student identified using it\u0027s displayed index from FRIDAY.","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"jorrdansoh"},"content":"            + \": Deletes the student identified by the index number used in the displayed student list.\\n\"","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"jorrdansoh"},"content":"    public static final String MESSAGE_DELETE_STUDENT_SUCCESS \u003d \"Deleted Student: %1$s\";","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"jorrdansoh"},"content":"        List\u003cStudent\u003e lastShownList \u003d model.getStudentList();","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"jorrdansoh"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"kaij77"},"content":"        Student studentToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-06"},{"lineNumber":43,"author":{"gitId":"jorrdansoh"},"content":"        model.deleteStudent(studentToDelete);","lastModifiedDate":"2022-10-06"},{"lineNumber":44,"author":{"gitId":"jorrdansoh"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_STUDENT_SUCCESS, studentToDelete));","lastModifiedDate":"2022-10-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jorrdansoh":7,"kaij77":2,"-":39,"HowSuen":5}},{"path":"src/main/java/friday/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.logic.commands;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"kaij77"},"content":"import static friday.logic.parser.CliSyntax.PREFIX_CONSULTATION;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"kaij77"},"content":"import static friday.logic.parser.CliSyntax.PREFIX_MASTERYCHECK;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"HowSuen"},"content":"import static friday.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"HowSuen"},"content":"import static friday.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"kaij77"},"content":"import static friday.logic.parser.CliSyntax.PREFIX_TELEGRAMHANDLE;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"HowSuen"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"HowSuen"},"content":"import friday.commons.core.Messages;","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"HowSuen"},"content":"import friday.commons.core.index.Index;","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"HowSuen"},"content":"import friday.commons.util.CollectionUtil;","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"HowSuen"},"content":"import friday.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"HowSuen"},"content":"import friday.model.Model;","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"HowSuen"},"content":"import friday.model.grades.GradesList;","lastModifiedDate":"2022-10-21"},{"lineNumber":22,"author":{"gitId":"kaij77"},"content":"import friday.model.student.Consultation;","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"kaij77"},"content":"import friday.model.student.MasteryCheck;","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"kaij77"},"content":"import friday.model.student.Name;","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"kaij77"},"content":"import friday.model.student.Remark;","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"kaij77"},"content":"import friday.model.student.Student;","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"kaij77"},"content":"import friday.model.student.TelegramHandle;","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"HowSuen"},"content":"import friday.model.tag.Tag;","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"HowSuen"},"content":" * Edits the details of an existing student in FRIDAY.","lastModifiedDate":"2022-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"HowSuen"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the student identified \"","lastModifiedDate":"2022-10-07"},{"lineNumber":38,"author":{"gitId":"HowSuen"},"content":"            + \"by the index number used in the displayed list of students. \\n\"","lastModifiedDate":"2022-10-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":42,"author":{"gitId":"HowSuen"},"content":"            + \"[\" + PREFIX_TELEGRAMHANDLE + \"TELEGRAM HANDLE] \"","lastModifiedDate":"2022-10-07"},{"lineNumber":43,"author":{"gitId":"HowSuen"},"content":"            + \"[\" + PREFIX_CONSULTATION + \"CONSULTATION] \"","lastModifiedDate":"2022-10-07"},{"lineNumber":44,"author":{"gitId":"HowSuen"},"content":"            + \"[\" + PREFIX_MASTERYCHECK + \"MASTERY CHECK] \"","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"HowSuen"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2022-10-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"HowSuen"},"content":"            + PREFIX_TELEGRAMHANDLE + \"johndoe \"","lastModifiedDate":"2022-10-07"},{"lineNumber":48,"author":{"gitId":"HowSuen"},"content":"            + PREFIX_CONSULTATION + \"2022-09-01 \"","lastModifiedDate":"2022-10-07"},{"lineNumber":49,"author":{"gitId":"HowSuen"},"content":"            + PREFIX_MASTERYCHECK + \"2022-08-24 \"","lastModifiedDate":"2022-10-18"},{"lineNumber":50,"author":{"gitId":"HowSuen"},"content":"            + PREFIX_TAG + \"Colour blind \"","lastModifiedDate":"2022-10-18"},{"lineNumber":51,"author":{"gitId":"HowSuen"},"content":"            + PREFIX_TAG + \"Experienced \";","lastModifiedDate":"2022-10-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"HowSuen"},"content":"    public static final String MESSAGE_EDIT_STUDENT_SUCCESS \u003d \"Edited Student: %1$s\";","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"HowSuen"},"content":"    public static final String MESSAGE_DUPLICATE_STUDENT \u003d \"This student already exists in FRIDAY.\";","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":58,"author":{"gitId":"HowSuen"},"content":"    private final EditStudentDescriptor editStudentDescriptor;","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"HowSuen"},"content":"     * @param index of the student in the filtered list of students to edit","lastModifiedDate":"2022-10-07"},{"lineNumber":62,"author":{"gitId":"HowSuen"},"content":"     * @param editStudentDescriptor details to edit the student with","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"HowSuen"},"content":"    public EditCommand(Index index, EditStudentDescriptor editStudentDescriptor) {","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":66,"author":{"gitId":"HowSuen"},"content":"        requireNonNull(editStudentDescriptor);","lastModifiedDate":"2022-10-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":69,"author":{"gitId":"HowSuen"},"content":"        this.editStudentDescriptor \u003d new EditStudentDescriptor(editStudentDescriptor);","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"jorrdansoh"},"content":"        List\u003cStudent\u003e lastShownList \u003d model.getStudentList();","lastModifiedDate":"2022-10-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"jorrdansoh"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-20"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"kaij77"},"content":"        Student studentToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-10-06"},{"lineNumber":82,"author":{"gitId":"jorrdansoh"},"content":"        Student editedStudent \u003d createEditedStudent(studentToEdit, editStudentDescriptor);","lastModifiedDate":"2022-10-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"jorrdansoh"},"content":"        if (!studentToEdit.isSameStudent(editedStudent) \u0026\u0026 model.hasStudent(editedStudent)) {","lastModifiedDate":"2022-10-06"},{"lineNumber":85,"author":{"gitId":"HowSuen"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_STUDENT);","lastModifiedDate":"2022-10-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"jorrdansoh"},"content":"        model.setStudent(studentToEdit, editedStudent);","lastModifiedDate":"2022-10-06"},{"lineNumber":89,"author":{"gitId":"HowSuen"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_STUDENT_SUCCESS, editedStudent));","lastModifiedDate":"2022-10-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"jorrdansoh"},"content":"     * Creates and returns a {@code Student} with the details of {@code studentToEdit}","lastModifiedDate":"2022-10-20"},{"lineNumber":94,"author":{"gitId":"HowSuen"},"content":"     * edited with {@code editStudentDescriptor}.","lastModifiedDate":"2022-10-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":96,"author":{"gitId":"jorrdansoh"},"content":"    private static Student createEditedStudent(Student studentToEdit, EditStudentDescriptor editStudentDescriptor) {","lastModifiedDate":"2022-10-20"},{"lineNumber":97,"author":{"gitId":"kaij77"},"content":"        assert studentToEdit !\u003d null;","lastModifiedDate":"2022-10-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":99,"author":{"gitId":"HowSuen"},"content":"        Name updatedName \u003d editStudentDescriptor.getName().orElse(studentToEdit.getName());","lastModifiedDate":"2022-10-12"},{"lineNumber":100,"author":{"gitId":"HowSuen"},"content":"        TelegramHandle updatedTelegramHandle \u003d editStudentDescriptor.getTelegramHandle().orElse(studentToEdit","lastModifiedDate":"2022-10-12"},{"lineNumber":101,"author":{"gitId":"kaij77"},"content":"                .getTelegramHandle());","lastModifiedDate":"2022-10-06"},{"lineNumber":102,"author":{"gitId":"HowSuen"},"content":"        Consultation updatedConsultation \u003d editStudentDescriptor.getConsultation()","lastModifiedDate":"2022-10-12"},{"lineNumber":103,"author":{"gitId":"kaij77"},"content":"                .orElse(studentToEdit.getConsultation());","lastModifiedDate":"2022-10-06"},{"lineNumber":104,"author":{"gitId":"HowSuen"},"content":"        MasteryCheck updatedMasteryCheck \u003d editStudentDescriptor.getMasteryCheck()","lastModifiedDate":"2022-10-12"},{"lineNumber":105,"author":{"gitId":"kaij77"},"content":"                .orElse(studentToEdit.getMasteryCheck());","lastModifiedDate":"2022-10-06"},{"lineNumber":106,"author":{"gitId":"kaij77"},"content":"        Remark updatedRemark \u003d studentToEdit.getRemark(); // edit command does not allow editing remarks","lastModifiedDate":"2022-10-06"},{"lineNumber":107,"author":{"gitId":"HowSuen"},"content":"        Set\u003cTag\u003e updatedTags \u003d editStudentDescriptor.getTags().orElse(studentToEdit.getTags());","lastModifiedDate":"2022-10-12"},{"lineNumber":108,"author":{"gitId":"HowSuen"},"content":"        GradesList updatedGradesList \u003d studentToEdit.getGradesList();","lastModifiedDate":"2022-10-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":110,"author":{"gitId":"kaij77"},"content":"        return new Student(updatedName, updatedTelegramHandle, updatedConsultation, updatedMasteryCheck, updatedRemark,","lastModifiedDate":"2022-10-06"},{"lineNumber":111,"author":{"gitId":"HowSuen"},"content":"                updatedTags, updatedGradesList);","lastModifiedDate":"2022-10-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":129,"author":{"gitId":"HowSuen"},"content":"                \u0026\u0026 editStudentDescriptor.equals(e.editStudentDescriptor);","lastModifiedDate":"2022-10-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":133,"author":{"gitId":"jorrdansoh"},"content":"     * Stores the details to edit the student with. Each non-empty field value will replace the","lastModifiedDate":"2022-10-20"},{"lineNumber":134,"author":{"gitId":"jorrdansoh"},"content":"     * corresponding field value of the student.","lastModifiedDate":"2022-10-20"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":136,"author":{"gitId":"HowSuen"},"content":"    public static class EditStudentDescriptor {","lastModifiedDate":"2022-10-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":138,"author":{"gitId":"kaij77"},"content":"        private TelegramHandle telegramHandle;","lastModifiedDate":"2022-10-06"},{"lineNumber":139,"author":{"gitId":"kaij77"},"content":"        private Consultation consultation;","lastModifiedDate":"2022-10-06"},{"lineNumber":140,"author":{"gitId":"kaij77"},"content":"        private MasteryCheck masteryCheck;","lastModifiedDate":"2022-10-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":143,"author":{"gitId":"HowSuen"},"content":"        public EditStudentDescriptor() {}","lastModifiedDate":"2022-10-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":147,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":148,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":149,"author":{"gitId":"HowSuen"},"content":"        public EditStudentDescriptor(EditStudentDescriptor toCopy) {","lastModifiedDate":"2022-10-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":151,"author":{"gitId":"kaij77"},"content":"            setTelegramHandle(toCopy.telegramHandle);","lastModifiedDate":"2022-10-06"},{"lineNumber":152,"author":{"gitId":"kaij77"},"content":"            setConsultation(toCopy.consultation);","lastModifiedDate":"2022-10-06"},{"lineNumber":153,"author":{"gitId":"kaij77"},"content":"            setMasteryCheck(toCopy.masteryCheck);","lastModifiedDate":"2022-10-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":161,"author":{"gitId":"kaij77"},"content":"            return CollectionUtil.isAnyNonNull(name, telegramHandle, consultation, masteryCheck, tags);","lastModifiedDate":"2022-10-06"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"kaij77"},"content":"        public void setTelegramHandle(TelegramHandle telegramHandle) {","lastModifiedDate":"2022-10-06"},{"lineNumber":173,"author":{"gitId":"kaij77"},"content":"            this.telegramHandle \u003d telegramHandle;","lastModifiedDate":"2022-10-06"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"kaij77"},"content":"        public Optional\u003cTelegramHandle\u003e getTelegramHandle() {","lastModifiedDate":"2022-10-06"},{"lineNumber":177,"author":{"gitId":"kaij77"},"content":"            return Optional.ofNullable(telegramHandle);","lastModifiedDate":"2022-10-06"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"kaij77"},"content":"        public void setConsultation(Consultation consultation) {","lastModifiedDate":"2022-10-06"},{"lineNumber":181,"author":{"gitId":"kaij77"},"content":"            this.consultation \u003d consultation;","lastModifiedDate":"2022-10-06"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"kaij77"},"content":"        public Optional\u003cConsultation\u003e getConsultation() {","lastModifiedDate":"2022-10-06"},{"lineNumber":185,"author":{"gitId":"kaij77"},"content":"            return Optional.ofNullable(consultation);","lastModifiedDate":"2022-10-06"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"kaij77"},"content":"        public void setMasteryCheck(MasteryCheck masteryCheck) {","lastModifiedDate":"2022-10-06"},{"lineNumber":189,"author":{"gitId":"kaij77"},"content":"            this.masteryCheck \u003d masteryCheck;","lastModifiedDate":"2022-10-06"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"kaij77"},"content":"        public Optional\u003cMasteryCheck\u003e getMasteryCheck() {","lastModifiedDate":"2022-10-06"},{"lineNumber":193,"author":{"gitId":"kaij77"},"content":"            return Optional.ofNullable(masteryCheck);","lastModifiedDate":"2022-10-06"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":197,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":198,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":199,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":205,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":206,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":207,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":208,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":217,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":221,"author":{"gitId":"HowSuen"},"content":"            if (!(other instanceof EditStudentDescriptor)) {","lastModifiedDate":"2022-10-12"},{"lineNumber":222,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":225,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":226,"author":{"gitId":"HowSuen"},"content":"            EditStudentDescriptor e \u003d (EditStudentDescriptor) other;","lastModifiedDate":"2022-10-12"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":229,"author":{"gitId":"kaij77"},"content":"                    \u0026\u0026 getTelegramHandle().equals(e.getTelegramHandle())","lastModifiedDate":"2022-10-06"},{"lineNumber":230,"author":{"gitId":"kaij77"},"content":"                    \u0026\u0026 getConsultation().equals(e.getConsultation())","lastModifiedDate":"2022-10-06"},{"lineNumber":231,"author":{"gitId":"kaij77"},"content":"                    \u0026\u0026 getMasteryCheck().equals(e.getMasteryCheck())","lastModifiedDate":"2022-10-06"},{"lineNumber":232,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":235,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"jorrdansoh":9,"kaij77":38,"-":141,"HowSuen":47}},{"path":"src/main/java/friday/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.logic.commands;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"HowSuen"},"content":"import friday.model.Model;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"jorrdansoh"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting FRIDAY as requested ...\";","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"jorrdansoh":1,"-":16,"HowSuen":2}},{"path":"src/main/java/friday/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.logic.commands;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"HowSuen"},"content":"import friday.commons.core.Messages;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"HowSuen"},"content":"import friday.model.Model;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"kaij77"},"content":"import friday.model.student.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"Yuvaraj0702"},"content":" * Finds and lists all students in friday whose name contains any of the argument keywords.","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"Yuvaraj0702"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all students whose names contain any of \"","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"Yuvaraj0702"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\\n\"","lastModifiedDate":"2022-10-24"},{"lineNumber":22,"author":{"gitId":"Yuvaraj0702"},"content":"            + \"Note: when searching for exam grade use format `find [exam_name:EXAM_SCORE]`\";","lastModifiedDate":"2022-10-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"Yuvaraj0702"},"content":"        assert true;","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"jorrdansoh"},"content":"        model.updateFilteredStudentList(predicate);","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":36,"author":{"gitId":"jorrdansoh"},"content":"                String.format(Messages.MESSAGE_STUDENTS_LISTED_OVERVIEW, model.getStudentList().size()));","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"Yuvaraj0702"},"content":"        assert true;","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"jorrdansoh":2,"Yuvaraj0702":7,"kaij77":1,"-":33,"HowSuen":3}},{"path":"src/main/java/friday/logic/commands/GradeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.logic.commands;","lastModifiedDate":"2022-10-21"},{"lineNumber":2,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":3,"author":{"gitId":"HowSuen"},"content":"import static friday.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-21"},{"lineNumber":4,"author":{"gitId":"HowSuen"},"content":"import static friday.logic.parser.CliSyntax.PREFIX_FINALS;","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"HowSuen"},"content":"import static friday.logic.parser.CliSyntax.PREFIX_MIDTERM;","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"HowSuen"},"content":"import static friday.logic.parser.CliSyntax.PREFIX_PRACTICAL;","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"HowSuen"},"content":"import static friday.logic.parser.CliSyntax.PREFIX_RA1;","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"HowSuen"},"content":"import static friday.logic.parser.CliSyntax.PREFIX_RA2;","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"HowSuen"},"content":"import java.util.List;","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"HowSuen"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"HowSuen"},"content":"import friday.commons.core.Messages;","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"HowSuen"},"content":"import friday.commons.core.index.Index;","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"HowSuen"},"content":"import friday.commons.util.CollectionUtil;","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"HowSuen"},"content":"import friday.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-21"},{"lineNumber":17,"author":{"gitId":"HowSuen"},"content":"import friday.model.Model;","lastModifiedDate":"2022-10-21"},{"lineNumber":18,"author":{"gitId":"HowSuen"},"content":"import friday.model.grades.Grade;","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"HowSuen"},"content":"import friday.model.grades.GradesList;","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"HowSuen"},"content":"import friday.model.student.Student;","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":22,"author":{"gitId":"HowSuen"},"content":"/**","lastModifiedDate":"2022-10-21"},{"lineNumber":23,"author":{"gitId":"HowSuen"},"content":" * Grades an assessment for a student identified using it\u0027s displayed index from FRIDAY.","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"HowSuen"},"content":" */","lastModifiedDate":"2022-10-21"},{"lineNumber":25,"author":{"gitId":"HowSuen"},"content":"public class GradeCommand extends Command {","lastModifiedDate":"2022-10-21"},{"lineNumber":26,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":27,"author":{"gitId":"HowSuen"},"content":"    public static final String COMMAND_WORD \u003d \"grade\";","lastModifiedDate":"2022-10-21"},{"lineNumber":28,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":29,"author":{"gitId":"HowSuen"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the grades of the student identified \"","lastModifiedDate":"2022-10-21"},{"lineNumber":30,"author":{"gitId":"HowSuen"},"content":"            + \"by the index number used in the displayed list of students. \\n\"","lastModifiedDate":"2022-10-21"},{"lineNumber":31,"author":{"gitId":"HowSuen"},"content":"            + \"Existing grades will be overwritten by the input values.\\n\"","lastModifiedDate":"2022-10-21"},{"lineNumber":32,"author":{"gitId":"HowSuen"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2022-10-21"},{"lineNumber":33,"author":{"gitId":"HowSuen"},"content":"            + \"[\" + PREFIX_RA1 + \"RA1_SCORE] \"","lastModifiedDate":"2022-10-21"},{"lineNumber":34,"author":{"gitId":"HowSuen"},"content":"            + \"[\" + PREFIX_RA2 + \"RA2_SCORE] \"","lastModifiedDate":"2022-10-21"},{"lineNumber":35,"author":{"gitId":"HowSuen"},"content":"            + \"[\" + PREFIX_PRACTICAL + \"PRACTICAL_SCORE] \"","lastModifiedDate":"2022-10-21"},{"lineNumber":36,"author":{"gitId":"HowSuen"},"content":"            + \"[\" + PREFIX_MIDTERM + \"MID_TERM_SCORE] \"","lastModifiedDate":"2022-10-21"},{"lineNumber":37,"author":{"gitId":"HowSuen"},"content":"            + \"[\" + PREFIX_FINALS + \"FINALS_SCORE] \\n\"","lastModifiedDate":"2022-10-21"},{"lineNumber":38,"author":{"gitId":"HowSuen"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2022-10-21"},{"lineNumber":39,"author":{"gitId":"HowSuen"},"content":"            + PREFIX_RA1 + \"69.90 \"","lastModifiedDate":"2022-10-21"},{"lineNumber":40,"author":{"gitId":"HowSuen"},"content":"            + PREFIX_RA2 + \"90 \"","lastModifiedDate":"2022-10-21"},{"lineNumber":41,"author":{"gitId":"HowSuen"},"content":"            + PREFIX_PRACTICAL + \"100 \"","lastModifiedDate":"2022-10-21"},{"lineNumber":42,"author":{"gitId":"HowSuen"},"content":"            + PREFIX_MIDTERM + \"99.99 \"","lastModifiedDate":"2022-10-21"},{"lineNumber":43,"author":{"gitId":"HowSuen"},"content":"            + PREFIX_FINALS + \"75.74 \";","lastModifiedDate":"2022-10-21"},{"lineNumber":44,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":45,"author":{"gitId":"HowSuen"},"content":"    public static final String MESSAGE_EDIT_GRADE_SUCCESS \u003d \"Updated grade for Student: %1$s\";","lastModifiedDate":"2022-10-21"},{"lineNumber":46,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":47,"author":{"gitId":"HowSuen"},"content":"    private final Index index;","lastModifiedDate":"2022-10-21"},{"lineNumber":48,"author":{"gitId":"HowSuen"},"content":"    private final EditGradeDescriptor editGradeDescriptor;","lastModifiedDate":"2022-10-21"},{"lineNumber":49,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":50,"author":{"gitId":"HowSuen"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":51,"author":{"gitId":"HowSuen"},"content":"     * @param index of the student in the filtered student list to edit the remark","lastModifiedDate":"2022-10-21"},{"lineNumber":52,"author":{"gitId":"HowSuen"},"content":"     * @param editGradeDescriptor details to edit the student\u0027s grades with","lastModifiedDate":"2022-10-21"},{"lineNumber":53,"author":{"gitId":"HowSuen"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":54,"author":{"gitId":"HowSuen"},"content":"    public GradeCommand(Index index, EditGradeDescriptor editGradeDescriptor) {","lastModifiedDate":"2022-10-21"},{"lineNumber":55,"author":{"gitId":"HowSuen"},"content":"        requireAllNonNull(index, editGradeDescriptor);","lastModifiedDate":"2022-10-21"},{"lineNumber":56,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":57,"author":{"gitId":"HowSuen"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-10-21"},{"lineNumber":58,"author":{"gitId":"HowSuen"},"content":"        this.editGradeDescriptor \u003d editGradeDescriptor;","lastModifiedDate":"2022-10-21"},{"lineNumber":59,"author":{"gitId":"HowSuen"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":60,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":61,"author":{"gitId":"HowSuen"},"content":"    @Override","lastModifiedDate":"2022-10-21"},{"lineNumber":62,"author":{"gitId":"HowSuen"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-21"},{"lineNumber":63,"author":{"gitId":"HowSuen"},"content":"        List\u003cStudent\u003e lastShownList \u003d model.getStudentList();","lastModifiedDate":"2022-10-21"},{"lineNumber":64,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":65,"author":{"gitId":"HowSuen"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-21"},{"lineNumber":66,"author":{"gitId":"HowSuen"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-21"},{"lineNumber":67,"author":{"gitId":"HowSuen"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":68,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":69,"author":{"gitId":"HowSuen"},"content":"        Student studentToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-10-21"},{"lineNumber":70,"author":{"gitId":"HowSuen"},"content":"        GradesList editedGradesList \u003d createEditedGradesList(studentToEdit, editGradeDescriptor);","lastModifiedDate":"2022-10-21"},{"lineNumber":71,"author":{"gitId":"HowSuen"},"content":"        Student editedStudent \u003d new Student(studentToEdit.getName(), studentToEdit.getTelegramHandle(),","lastModifiedDate":"2022-10-21"},{"lineNumber":72,"author":{"gitId":"HowSuen"},"content":"                studentToEdit.getConsultation(), studentToEdit.getMasteryCheck(), studentToEdit.getRemark(),","lastModifiedDate":"2022-10-21"},{"lineNumber":73,"author":{"gitId":"HowSuen"},"content":"                studentToEdit.getTags(), editedGradesList);","lastModifiedDate":"2022-10-21"},{"lineNumber":74,"author":{"gitId":"HowSuen"},"content":"        model.setStudent(studentToEdit, editedStudent);","lastModifiedDate":"2022-10-21"},{"lineNumber":75,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":76,"author":{"gitId":"HowSuen"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_GRADE_SUCCESS, studentToEdit));","lastModifiedDate":"2022-10-21"},{"lineNumber":77,"author":{"gitId":"HowSuen"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":78,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":79,"author":{"gitId":"HowSuen"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":80,"author":{"gitId":"HowSuen"},"content":"     * Creates and returns a {@code GradesList} with the details of {@code studentToEdit}","lastModifiedDate":"2022-10-21"},{"lineNumber":81,"author":{"gitId":"HowSuen"},"content":"     * edited with {@code editGradeDescriptor}","lastModifiedDate":"2022-10-21"},{"lineNumber":82,"author":{"gitId":"HowSuen"},"content":"     *","lastModifiedDate":"2022-10-21"},{"lineNumber":83,"author":{"gitId":"HowSuen"},"content":"     * @param studentToEdit the student to update the grades of","lastModifiedDate":"2022-10-21"},{"lineNumber":84,"author":{"gitId":"HowSuen"},"content":"     * @param editGradeDescriptor the details of the grades to update","lastModifiedDate":"2022-10-21"},{"lineNumber":85,"author":{"gitId":"HowSuen"},"content":"     * @return the updated GradesList","lastModifiedDate":"2022-10-21"},{"lineNumber":86,"author":{"gitId":"HowSuen"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":87,"author":{"gitId":"HowSuen"},"content":"    private static GradesList createEditedGradesList(Student studentToEdit, EditGradeDescriptor editGradeDescriptor) {","lastModifiedDate":"2022-10-21"},{"lineNumber":88,"author":{"gitId":"HowSuen"},"content":"        assert studentToEdit !\u003d null;","lastModifiedDate":"2022-10-21"},{"lineNumber":89,"author":{"gitId":"HowSuen"},"content":"        GradesList gradesList \u003d studentToEdit.getGradesList();","lastModifiedDate":"2022-10-21"},{"lineNumber":90,"author":{"gitId":"HowSuen"},"content":"        GradesList newGradesList \u003d new GradesList();","lastModifiedDate":"2022-10-21"},{"lineNumber":91,"author":{"gitId":"HowSuen"},"content":"        GradesList.editGrade(newGradesList, gradesList.getGrade(\"RA1\"));","lastModifiedDate":"2022-10-21"},{"lineNumber":92,"author":{"gitId":"HowSuen"},"content":"        GradesList.editGrade(newGradesList, gradesList.getGrade(\"RA2\"));","lastModifiedDate":"2022-10-21"},{"lineNumber":93,"author":{"gitId":"jorrdansoh"},"content":"        GradesList.editGrade(newGradesList, gradesList.getGrade(\"Midterm\"));","lastModifiedDate":"2022-10-24"},{"lineNumber":94,"author":{"gitId":"HowSuen"},"content":"        GradesList.editGrade(newGradesList, gradesList.getGrade(\"Practical\"));","lastModifiedDate":"2022-10-21"},{"lineNumber":95,"author":{"gitId":"HowSuen"},"content":"        GradesList.editGrade(newGradesList, gradesList.getGrade(\"Finals\"));","lastModifiedDate":"2022-10-21"},{"lineNumber":96,"author":{"gitId":"HowSuen"},"content":"        editGradeDescriptor.getRa1().ifPresent(t -\u003e GradesList.editGrade(newGradesList, t));","lastModifiedDate":"2022-10-21"},{"lineNumber":97,"author":{"gitId":"HowSuen"},"content":"        editGradeDescriptor.getRa2().ifPresent(t -\u003e GradesList.editGrade(newGradesList, t));","lastModifiedDate":"2022-10-21"},{"lineNumber":98,"author":{"gitId":"HowSuen"},"content":"        editGradeDescriptor.getPa().ifPresent(t -\u003e GradesList.editGrade(newGradesList, t));","lastModifiedDate":"2022-10-21"},{"lineNumber":99,"author":{"gitId":"HowSuen"},"content":"        editGradeDescriptor.getMt().ifPresent(t -\u003e GradesList.editGrade(newGradesList, t));","lastModifiedDate":"2022-10-21"},{"lineNumber":100,"author":{"gitId":"HowSuen"},"content":"        editGradeDescriptor.getFt().ifPresent(t -\u003e GradesList.editGrade(newGradesList, t));","lastModifiedDate":"2022-10-21"},{"lineNumber":101,"author":{"gitId":"HowSuen"},"content":"        return newGradesList;","lastModifiedDate":"2022-10-21"},{"lineNumber":102,"author":{"gitId":"HowSuen"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":103,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":104,"author":{"gitId":"HowSuen"},"content":"    @Override","lastModifiedDate":"2022-10-21"},{"lineNumber":105,"author":{"gitId":"HowSuen"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-21"},{"lineNumber":106,"author":{"gitId":"HowSuen"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-21"},{"lineNumber":107,"author":{"gitId":"HowSuen"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-21"},{"lineNumber":108,"author":{"gitId":"HowSuen"},"content":"            return true;","lastModifiedDate":"2022-10-21"},{"lineNumber":109,"author":{"gitId":"HowSuen"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":110,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":111,"author":{"gitId":"HowSuen"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-21"},{"lineNumber":112,"author":{"gitId":"HowSuen"},"content":"        if (!(other instanceof GradeCommand)) {","lastModifiedDate":"2022-10-21"},{"lineNumber":113,"author":{"gitId":"HowSuen"},"content":"            return false;","lastModifiedDate":"2022-10-21"},{"lineNumber":114,"author":{"gitId":"HowSuen"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":115,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":116,"author":{"gitId":"HowSuen"},"content":"        // state check","lastModifiedDate":"2022-10-21"},{"lineNumber":117,"author":{"gitId":"HowSuen"},"content":"        GradeCommand e \u003d (GradeCommand) other;","lastModifiedDate":"2022-10-21"},{"lineNumber":118,"author":{"gitId":"HowSuen"},"content":"        return index.equals(e.index)","lastModifiedDate":"2022-10-21"},{"lineNumber":119,"author":{"gitId":"HowSuen"},"content":"                \u0026\u0026 editGradeDescriptor.equals(e.editGradeDescriptor);","lastModifiedDate":"2022-10-21"},{"lineNumber":120,"author":{"gitId":"HowSuen"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":121,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":122,"author":{"gitId":"HowSuen"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":123,"author":{"gitId":"HowSuen"},"content":"     * Stores the details to edit the grades of a student with. Each non-empty field value will replace the","lastModifiedDate":"2022-10-21"},{"lineNumber":124,"author":{"gitId":"HowSuen"},"content":"     * corresponding field value of the student.","lastModifiedDate":"2022-10-21"},{"lineNumber":125,"author":{"gitId":"HowSuen"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":126,"author":{"gitId":"HowSuen"},"content":"    public static class EditGradeDescriptor {","lastModifiedDate":"2022-10-21"},{"lineNumber":127,"author":{"gitId":"HowSuen"},"content":"        private Grade ra1;","lastModifiedDate":"2022-10-21"},{"lineNumber":128,"author":{"gitId":"HowSuen"},"content":"        private Grade ra2;","lastModifiedDate":"2022-10-21"},{"lineNumber":129,"author":{"gitId":"HowSuen"},"content":"        private Grade mt;","lastModifiedDate":"2022-10-21"},{"lineNumber":130,"author":{"gitId":"HowSuen"},"content":"        private Grade ft;","lastModifiedDate":"2022-10-21"},{"lineNumber":131,"author":{"gitId":"HowSuen"},"content":"        private Grade pa;","lastModifiedDate":"2022-10-21"},{"lineNumber":132,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":133,"author":{"gitId":"HowSuen"},"content":"        public EditGradeDescriptor() {}","lastModifiedDate":"2022-10-21"},{"lineNumber":134,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":135,"author":{"gitId":"HowSuen"},"content":"        /**","lastModifiedDate":"2022-10-21"},{"lineNumber":136,"author":{"gitId":"HowSuen"},"content":"         * Copy constructor.","lastModifiedDate":"2022-10-21"},{"lineNumber":137,"author":{"gitId":"HowSuen"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2022-10-21"},{"lineNumber":138,"author":{"gitId":"HowSuen"},"content":"         */","lastModifiedDate":"2022-10-21"},{"lineNumber":139,"author":{"gitId":"HowSuen"},"content":"        public EditGradeDescriptor(EditGradeDescriptor toCopy) {","lastModifiedDate":"2022-10-21"},{"lineNumber":140,"author":{"gitId":"HowSuen"},"content":"            setRa1(toCopy.ra1);","lastModifiedDate":"2022-10-21"},{"lineNumber":141,"author":{"gitId":"HowSuen"},"content":"            setRa2(toCopy.ra2);","lastModifiedDate":"2022-10-21"},{"lineNumber":142,"author":{"gitId":"HowSuen"},"content":"            setPa(toCopy.pa);","lastModifiedDate":"2022-10-21"},{"lineNumber":143,"author":{"gitId":"HowSuen"},"content":"            setMt(toCopy.mt);","lastModifiedDate":"2022-10-21"},{"lineNumber":144,"author":{"gitId":"HowSuen"},"content":"            setFt(toCopy.ft);","lastModifiedDate":"2022-10-21"},{"lineNumber":145,"author":{"gitId":"HowSuen"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":146,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":147,"author":{"gitId":"HowSuen"},"content":"        /**","lastModifiedDate":"2022-10-21"},{"lineNumber":148,"author":{"gitId":"HowSuen"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2022-10-21"},{"lineNumber":149,"author":{"gitId":"HowSuen"},"content":"         */","lastModifiedDate":"2022-10-21"},{"lineNumber":150,"author":{"gitId":"HowSuen"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2022-10-21"},{"lineNumber":151,"author":{"gitId":"HowSuen"},"content":"            return CollectionUtil.isAnyNonNull(ra1, ra2, pa, mt, ft);","lastModifiedDate":"2022-10-21"},{"lineNumber":152,"author":{"gitId":"HowSuen"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":153,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":154,"author":{"gitId":"HowSuen"},"content":"        public void setRa1(Grade ra1) {","lastModifiedDate":"2022-10-21"},{"lineNumber":155,"author":{"gitId":"HowSuen"},"content":"            this.ra1 \u003d ra1;","lastModifiedDate":"2022-10-21"},{"lineNumber":156,"author":{"gitId":"HowSuen"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":157,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":158,"author":{"gitId":"HowSuen"},"content":"        public Optional\u003cGrade\u003e getRa1() {","lastModifiedDate":"2022-10-21"},{"lineNumber":159,"author":{"gitId":"HowSuen"},"content":"            return Optional.ofNullable(ra1);","lastModifiedDate":"2022-10-21"},{"lineNumber":160,"author":{"gitId":"HowSuen"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":161,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":162,"author":{"gitId":"HowSuen"},"content":"        public void setRa2(Grade ra2) {","lastModifiedDate":"2022-10-21"},{"lineNumber":163,"author":{"gitId":"HowSuen"},"content":"            this.ra2 \u003d ra2;","lastModifiedDate":"2022-10-21"},{"lineNumber":164,"author":{"gitId":"HowSuen"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":165,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":166,"author":{"gitId":"HowSuen"},"content":"        public Optional\u003cGrade\u003e getRa2() {","lastModifiedDate":"2022-10-21"},{"lineNumber":167,"author":{"gitId":"HowSuen"},"content":"            return Optional.ofNullable(ra2);","lastModifiedDate":"2022-10-21"},{"lineNumber":168,"author":{"gitId":"HowSuen"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":169,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":170,"author":{"gitId":"HowSuen"},"content":"        public void setPa(Grade pa) {","lastModifiedDate":"2022-10-21"},{"lineNumber":171,"author":{"gitId":"HowSuen"},"content":"            this.pa \u003d pa;","lastModifiedDate":"2022-10-21"},{"lineNumber":172,"author":{"gitId":"HowSuen"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":173,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":174,"author":{"gitId":"HowSuen"},"content":"        public Optional\u003cGrade\u003e getPa() {","lastModifiedDate":"2022-10-21"},{"lineNumber":175,"author":{"gitId":"HowSuen"},"content":"            return Optional.ofNullable(pa);","lastModifiedDate":"2022-10-21"},{"lineNumber":176,"author":{"gitId":"HowSuen"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":177,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":178,"author":{"gitId":"HowSuen"},"content":"        public void setMt(Grade mt) {","lastModifiedDate":"2022-10-21"},{"lineNumber":179,"author":{"gitId":"HowSuen"},"content":"            this.mt \u003d mt;","lastModifiedDate":"2022-10-21"},{"lineNumber":180,"author":{"gitId":"HowSuen"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":181,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":182,"author":{"gitId":"HowSuen"},"content":"        public Optional\u003cGrade\u003e getMt() {","lastModifiedDate":"2022-10-21"},{"lineNumber":183,"author":{"gitId":"HowSuen"},"content":"            return Optional.ofNullable(mt);","lastModifiedDate":"2022-10-21"},{"lineNumber":184,"author":{"gitId":"HowSuen"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":185,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":186,"author":{"gitId":"HowSuen"},"content":"        public void setFt(Grade ft) {","lastModifiedDate":"2022-10-21"},{"lineNumber":187,"author":{"gitId":"HowSuen"},"content":"            this.ft \u003d ft;","lastModifiedDate":"2022-10-21"},{"lineNumber":188,"author":{"gitId":"HowSuen"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":189,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":190,"author":{"gitId":"HowSuen"},"content":"        public Optional\u003cGrade\u003e getFt() {","lastModifiedDate":"2022-10-21"},{"lineNumber":191,"author":{"gitId":"HowSuen"},"content":"            return Optional.ofNullable(ft);","lastModifiedDate":"2022-10-21"},{"lineNumber":192,"author":{"gitId":"HowSuen"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":193,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":194,"author":{"gitId":"HowSuen"},"content":"        @Override","lastModifiedDate":"2022-10-21"},{"lineNumber":195,"author":{"gitId":"HowSuen"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2022-10-21"},{"lineNumber":196,"author":{"gitId":"HowSuen"},"content":"            // short circuit if same object","lastModifiedDate":"2022-10-21"},{"lineNumber":197,"author":{"gitId":"HowSuen"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-21"},{"lineNumber":198,"author":{"gitId":"HowSuen"},"content":"                return true;","lastModifiedDate":"2022-10-21"},{"lineNumber":199,"author":{"gitId":"HowSuen"},"content":"            }","lastModifiedDate":"2022-10-21"},{"lineNumber":200,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":201,"author":{"gitId":"HowSuen"},"content":"            // instanceof handles nulls","lastModifiedDate":"2022-10-21"},{"lineNumber":202,"author":{"gitId":"HowSuen"},"content":"            if (!(other instanceof EditGradeDescriptor)) {","lastModifiedDate":"2022-10-21"},{"lineNumber":203,"author":{"gitId":"HowSuen"},"content":"                return false;","lastModifiedDate":"2022-10-21"},{"lineNumber":204,"author":{"gitId":"HowSuen"},"content":"            }","lastModifiedDate":"2022-10-21"},{"lineNumber":205,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":206,"author":{"gitId":"HowSuen"},"content":"            // state check","lastModifiedDate":"2022-10-21"},{"lineNumber":207,"author":{"gitId":"HowSuen"},"content":"            EditGradeDescriptor e \u003d (EditGradeDescriptor) other;","lastModifiedDate":"2022-10-21"},{"lineNumber":208,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":209,"author":{"gitId":"HowSuen"},"content":"            return getRa1().equals(e.getRa1())","lastModifiedDate":"2022-10-21"},{"lineNumber":210,"author":{"gitId":"HowSuen"},"content":"                    \u0026\u0026 getRa2().equals(e.getRa2())","lastModifiedDate":"2022-10-21"},{"lineNumber":211,"author":{"gitId":"HowSuen"},"content":"                    \u0026\u0026 getPa().equals(e.getPa())","lastModifiedDate":"2022-10-21"},{"lineNumber":212,"author":{"gitId":"HowSuen"},"content":"                    \u0026\u0026 getMt().equals(e.getMt())","lastModifiedDate":"2022-10-21"},{"lineNumber":213,"author":{"gitId":"HowSuen"},"content":"                    \u0026\u0026 getFt().equals(e.getFt());","lastModifiedDate":"2022-10-21"},{"lineNumber":214,"author":{"gitId":"HowSuen"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":215,"author":{"gitId":"HowSuen"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":216,"author":{"gitId":"HowSuen"},"content":"}","lastModifiedDate":"2022-10-21"}],"authorContributionMap":{"jorrdansoh":1,"HowSuen":215}},{"path":"src/main/java/friday/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.logic.commands;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"HowSuen"},"content":"import friday.model.Model;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":19,"HowSuen":2}},{"path":"src/main/java/friday/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.logic.commands;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"Yuvaraj0702"},"content":"import static friday.model.Model.PREDICATE_SHOW_ALL_STUDENTS;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"HowSuen"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"HowSuen"},"content":"import friday.model.Model;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"darrtzj"},"content":" * Lists all students in FRIDAY to the user.","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"darrtzj"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all students\";","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"Yuvaraj0702"},"content":"        model.updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Yuvaraj0702":2,"darrtzj":2,"-":17,"HowSuen":3}},{"path":"src/main/java/friday/logic/commands/MarkMasteryCheckCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaij77"},"content":"package friday.logic.commands;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"kaij77"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-31"},{"lineNumber":4,"author":{"gitId":"kaij77"},"content":"import java.util.List;","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"kaij77"},"content":"import friday.commons.core.Messages;","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"kaij77"},"content":"import friday.commons.core.index.Index;","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"kaij77"},"content":"import friday.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"kaij77"},"content":"import friday.model.Model;","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"kaij77"},"content":"import friday.model.student.Student;","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"kaij77"},"content":"/**","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"kaij77"},"content":" * Marks the Mastery Check of an existing student in FRIDAY as passed.","lastModifiedDate":"2022-10-25"},{"lineNumber":14,"author":{"gitId":"kaij77"},"content":" */","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"kaij77"},"content":"public class MarkMasteryCheckCommand extends Command {","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"kaij77"},"content":"    public static final String COMMAND_WORD \u003d \"mark\";","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"Yuvaraj0702"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Marks the Mastery Check of the student identified by\"","lastModifiedDate":"2022-10-23"},{"lineNumber":18,"author":{"gitId":"kaij77"},"content":"            + \" the index number as done.\\n\"","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"kaij77"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"kaij77"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \";","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"kaij77"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Marked Mastery Check of Student: %s as passed.\";","lastModifiedDate":"2022-11-06"},{"lineNumber":22,"author":{"gitId":"kaij77"},"content":"    public static final String MESSAGE_ALREADY_MARKED \u003d \"\u0027s Mastery Check has already been marked as passed!\";","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"kaij77"},"content":"    public static final String MESSAGE_CANNOT_PASS \u003d \"\u0027s Mastery Check cannot be marked as passed as the date(%s) has\"","lastModifiedDate":"2022-10-31"},{"lineNumber":24,"author":{"gitId":"kaij77"},"content":"            + \" not been reached yet. (Today\u0027s date: %s)\";","lastModifiedDate":"2022-10-31"},{"lineNumber":25,"author":{"gitId":"kaij77"},"content":"    public static final String MESSAGE_EMPTY_MASTERYCHECK \u003d \" currently does not have any scheduled Mastery Check to be\"","lastModifiedDate":"2022-11-05"},{"lineNumber":26,"author":{"gitId":"kaij77"},"content":"            + \" marked as passed.\";","lastModifiedDate":"2022-11-05"},{"lineNumber":27,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"kaij77"},"content":"    private Index index;","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"kaij77"},"content":"    public MarkMasteryCheckCommand(Index index) {","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"kaij77"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"kaij77"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"kaij77"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"kaij77"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"jorrdansoh"},"content":"        List\u003cStudent\u003e lastShownList \u003d model.getStudentList();","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"kaij77"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"jorrdansoh"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"kaij77"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"kaij77"},"content":"        Student studentToMark \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-10-20"},{"lineNumber":43,"author":{"gitId":"kaij77"},"content":"        if (studentToMark.getMasteryCheck().isEmpty()) {","lastModifiedDate":"2022-11-05"},{"lineNumber":44,"author":{"gitId":"kaij77"},"content":"            throw new CommandException(studentToMark.getName() + MESSAGE_EMPTY_MASTERYCHECK);","lastModifiedDate":"2022-11-05"},{"lineNumber":45,"author":{"gitId":"kaij77"},"content":"        } else if (studentToMark.getMasteryCheck().getIsPassed()) {","lastModifiedDate":"2022-11-05"},{"lineNumber":46,"author":{"gitId":"kaij77"},"content":"            throw new CommandException(studentToMark.getName() + MESSAGE_ALREADY_MARKED);","lastModifiedDate":"2022-10-20"},{"lineNumber":47,"author":{"gitId":"kaij77"},"content":"        } else if (!studentToMark.getMasteryCheck().canMarkAsPassed()) {","lastModifiedDate":"2022-11-05"},{"lineNumber":48,"author":{"gitId":"kaij77"},"content":"            String str \u003d String.format(MESSAGE_CANNOT_PASS, studentToMark.getMasteryCheck().getValue(),","lastModifiedDate":"2022-10-31"},{"lineNumber":49,"author":{"gitId":"kaij77"},"content":"                    LocalDate.now());","lastModifiedDate":"2022-10-31"},{"lineNumber":50,"author":{"gitId":"kaij77"},"content":"            throw new CommandException(studentToMark.getName() + str);","lastModifiedDate":"2022-10-31"},{"lineNumber":51,"author":{"gitId":"kaij77"},"content":"        } else {","lastModifiedDate":"2022-10-20"},{"lineNumber":52,"author":{"gitId":"kaij77"},"content":"            studentToMark.getMasteryCheck().markAsPassed();","lastModifiedDate":"2022-10-20"},{"lineNumber":53,"author":{"gitId":"kaij77"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":54,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":55,"author":{"gitId":"kaij77"},"content":"        return new CommandResult(generateSuccessMessage(studentToMark));","lastModifiedDate":"2022-10-20"},{"lineNumber":56,"author":{"gitId":"kaij77"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":57,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":58,"author":{"gitId":"kaij77"},"content":"    private String generateSuccessMessage(Student studentToMark) {","lastModifiedDate":"2022-10-20"},{"lineNumber":59,"author":{"gitId":"kaij77"},"content":"        return String.format(MESSAGE_SUCCESS, studentToMark.getName());","lastModifiedDate":"2022-11-06"},{"lineNumber":60,"author":{"gitId":"kaij77"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":61,"author":{"gitId":"kaij77"},"content":"}","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"jorrdansoh":2,"Yuvaraj0702":1,"kaij77":58}},{"path":"src/main/java/friday/logic/commands/RemarkCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.logic.commands;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":3,"author":{"gitId":"HowSuen"},"content":"import static friday.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"HowSuen"},"content":"import static friday.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2022-09-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":8,"author":{"gitId":"HowSuen"},"content":"import friday.commons.core.Messages;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"HowSuen"},"content":"import friday.commons.core.index.Index;","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"HowSuen"},"content":"import friday.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"HowSuen"},"content":"import friday.model.Model;","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"kaij77"},"content":"import friday.model.student.Remark;","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"kaij77"},"content":"import friday.model.student.Student;","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"// @@author HowSuen-reused","lastModifiedDate":"2022-11-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"// Reused from https://nus-cs2103-ay2223s1.github.io/tp/tutorials/AddRemark.html","lastModifiedDate":"2022-11-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"// with minor modifications","lastModifiedDate":"2022-11-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-09-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Changes the remark of an existing student in FRIDAY.","lastModifiedDate":"2022-10-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-09-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2022-09-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2022-09-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the remark of the student identified \"","lastModifiedDate":"2022-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last student listing. \\n\"","lastModifiedDate":"2022-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2022-09-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2022-09-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_REMARK + \"[REMARK]\\n\"","lastModifiedDate":"2022-09-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2022-09-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + PREFIX_REMARK + \"Likes to swim.\";","lastModifiedDate":"2022-09-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Student: %1$s\";","lastModifiedDate":"2022-10-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Student: %1$s\";","lastModifiedDate":"2022-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2022-09-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final Remark remark;","lastModifiedDate":"2022-09-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param index of the student in the filtered student list to edit the remark","lastModifiedDate":"2022-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @param remark of the student to be updated to","lastModifiedDate":"2022-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, Remark remark) {","lastModifiedDate":"2022-09-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2022-10-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-09-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2022-09-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-09-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-09-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        List\u003cStudent\u003e lastShownList \u003d model.getStudentList();","lastModifiedDate":"2022-10-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-09-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-09-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Student studentToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-10-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Student editedStudent \u003d new Student(studentToEdit.getName(), studentToEdit.getTelegramHandle(),","lastModifiedDate":"2022-10-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                studentToEdit.getConsultation(), studentToEdit.getMasteryCheck(), remark, studentToEdit.getTags(),","lastModifiedDate":"2022-10-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                studentToEdit.getGradesList());","lastModifiedDate":"2022-10-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        model.setStudent(studentToEdit, editedStudent);","lastModifiedDate":"2022-10-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedStudent));","lastModifiedDate":"2022-10-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether the remark is added to or removed from","lastModifiedDate":"2022-09-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * {@code studentToEdit}.","lastModifiedDate":"2022-10-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    private String generateSuccessMessage(Student studentToEdit) {","lastModifiedDate":"2022-10-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2022-09-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return String.format(message, studentToEdit);","lastModifiedDate":"2022-10-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-09-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-09-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2022-09-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-09-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2022-09-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-09-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-09-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2022-09-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2022-09-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-09-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2022-09-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2022-09-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2022-09-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2022-09-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-09-13"}],"authorContributionMap":{"kaij77":2,"-":82,"HowSuen":7}},{"path":"src/main/java/friday/logic/commands/SortCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jorrdansoh"},"content":"package friday.logic.commands;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"Yuvaraj0702"},"content":"import static friday.logic.parser.CliSyntax.ORDER_ASCENDING;","lastModifiedDate":"2022-10-25"},{"lineNumber":4,"author":{"gitId":"Yuvaraj0702"},"content":"import static friday.logic.parser.CliSyntax.ORDER_DESCENDING;","lastModifiedDate":"2022-10-25"},{"lineNumber":5,"author":{"gitId":"Yuvaraj0702"},"content":"import static friday.logic.parser.CliSyntax.PREFIX_CONSULTATION;","lastModifiedDate":"2022-10-25"},{"lineNumber":6,"author":{"gitId":"Yuvaraj0702"},"content":"import static friday.logic.parser.CliSyntax.PREFIX_FINALS;","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"Yuvaraj0702"},"content":"import static friday.logic.parser.CliSyntax.PREFIX_MASTERYCHECK;","lastModifiedDate":"2022-10-25"},{"lineNumber":8,"author":{"gitId":"Yuvaraj0702"},"content":"import static friday.logic.parser.CliSyntax.PREFIX_MIDTERM;","lastModifiedDate":"2022-10-25"},{"lineNumber":9,"author":{"gitId":"Yuvaraj0702"},"content":"import static friday.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-25"},{"lineNumber":10,"author":{"gitId":"Yuvaraj0702"},"content":"import static friday.logic.parser.CliSyntax.PREFIX_PRACTICAL;","lastModifiedDate":"2022-10-25"},{"lineNumber":11,"author":{"gitId":"Yuvaraj0702"},"content":"import static friday.logic.parser.CliSyntax.PREFIX_RA1;","lastModifiedDate":"2022-10-25"},{"lineNumber":12,"author":{"gitId":"Yuvaraj0702"},"content":"import static friday.logic.parser.CliSyntax.PREFIX_RA2;","lastModifiedDate":"2022-10-25"},{"lineNumber":13,"author":{"gitId":"Yuvaraj0702"},"content":"import static friday.logic.parser.CliSyntax.PREFIX_TELEGRAMHANDLE;","lastModifiedDate":"2022-10-25"},{"lineNumber":14,"author":{"gitId":"jorrdansoh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"jorrdansoh"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"jorrdansoh"},"content":"import friday.model.Model;","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"jorrdansoh"},"content":"import friday.model.student.Student;","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"jorrdansoh"},"content":"/**","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"jorrdansoh"},"content":" * Sorts students in FRIDAY.","lastModifiedDate":"2022-10-21"},{"lineNumber":23,"author":{"gitId":"jorrdansoh"},"content":" */","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"jorrdansoh"},"content":"public class SortCommand extends Command {","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"jorrdansoh"},"content":"    public static final String COMMAND_WORD \u003d \"sort\";","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"jorrdansoh"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Sorts students in FRIDAY.\\n\"","lastModifiedDate":"2022-11-05"},{"lineNumber":29,"author":{"gitId":"jorrdansoh"},"content":"            + \"Parameters: CONDITION/ORDER, where CONDITION is \"","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"jorrdansoh"},"content":"            + PREFIX_NAME.getPrefixWithoutSlash() + \", \"","lastModifiedDate":"2022-11-05"},{"lineNumber":31,"author":{"gitId":"jorrdansoh"},"content":"            + PREFIX_TELEGRAMHANDLE.getPrefixWithoutSlash() + \", \"","lastModifiedDate":"2022-11-05"},{"lineNumber":32,"author":{"gitId":"jorrdansoh"},"content":"            + PREFIX_CONSULTATION.getPrefixWithoutSlash() + \", \"","lastModifiedDate":"2022-11-05"},{"lineNumber":33,"author":{"gitId":"jorrdansoh"},"content":"            + PREFIX_MASTERYCHECK.getPrefixWithoutSlash() + \", \"","lastModifiedDate":"2022-11-05"},{"lineNumber":34,"author":{"gitId":"jorrdansoh"},"content":"            + PREFIX_RA1.getPrefixWithoutSlash() + \", \"","lastModifiedDate":"2022-11-05"},{"lineNumber":35,"author":{"gitId":"jorrdansoh"},"content":"            + PREFIX_RA2.getPrefixWithoutSlash() + \", \"","lastModifiedDate":"2022-11-05"},{"lineNumber":36,"author":{"gitId":"jorrdansoh"},"content":"            + PREFIX_MIDTERM.getPrefixWithoutSlash() + \", \"","lastModifiedDate":"2022-11-05"},{"lineNumber":37,"author":{"gitId":"jorrdansoh"},"content":"            + PREFIX_PRACTICAL.getPrefixWithoutSlash() + \", or \"","lastModifiedDate":"2022-11-05"},{"lineNumber":38,"author":{"gitId":"jorrdansoh"},"content":"            + PREFIX_FINALS.getPrefixWithoutSlash()","lastModifiedDate":"2022-11-05"},{"lineNumber":39,"author":{"gitId":"jorrdansoh"},"content":"            + \"; ORDER is \"","lastModifiedDate":"2022-11-05"},{"lineNumber":40,"author":{"gitId":"jorrdansoh"},"content":"            + ORDER_ASCENDING + \" or \"","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"jorrdansoh"},"content":"            + ORDER_DESCENDING + \"\\n\"","lastModifiedDate":"2022-11-05"},{"lineNumber":42,"author":{"gitId":"jorrdansoh"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-20"},{"lineNumber":43,"author":{"gitId":"jorrdansoh"},"content":"            + PREFIX_NAME + ORDER_ASCENDING;","lastModifiedDate":"2022-10-20"},{"lineNumber":44,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":45,"author":{"gitId":"jorrdansoh"},"content":"    public static final String MESSAGE_TOO_MANY_CRITERIA \u003d","lastModifiedDate":"2022-10-20"},{"lineNumber":46,"author":{"gitId":"jorrdansoh"},"content":"            \"Too many sorting criteria. Only one criterion should be provided\";","lastModifiedDate":"2022-10-20"},{"lineNumber":47,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":48,"author":{"gitId":"jorrdansoh"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Sorted all students\";","lastModifiedDate":"2022-10-20"},{"lineNumber":49,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":50,"author":{"gitId":"jorrdansoh"},"content":"    private final Comparator\u003cStudent\u003e comparator;","lastModifiedDate":"2022-10-20"},{"lineNumber":51,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":52,"author":{"gitId":"jorrdansoh"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":53,"author":{"gitId":"jorrdansoh"},"content":"     * @param comparator To compare the students with.","lastModifiedDate":"2022-10-20"},{"lineNumber":54,"author":{"gitId":"jorrdansoh"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":55,"author":{"gitId":"jorrdansoh"},"content":"    public SortCommand(Comparator\u003cStudent\u003e comparator) {","lastModifiedDate":"2022-10-20"},{"lineNumber":56,"author":{"gitId":"jorrdansoh"},"content":"        requireNonNull(comparator);","lastModifiedDate":"2022-10-20"},{"lineNumber":57,"author":{"gitId":"jorrdansoh"},"content":"        this.comparator \u003d comparator;","lastModifiedDate":"2022-10-20"},{"lineNumber":58,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":59,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":60,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":61,"author":{"gitId":"jorrdansoh"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":62,"author":{"gitId":"jorrdansoh"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-10-20"},{"lineNumber":63,"author":{"gitId":"jorrdansoh"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-20"},{"lineNumber":64,"author":{"gitId":"jorrdansoh"},"content":"        model.updateSortedStudentList(comparator);","lastModifiedDate":"2022-10-20"},{"lineNumber":65,"author":{"gitId":"jorrdansoh"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2022-10-20"},{"lineNumber":66,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":67,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":68,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":69,"author":{"gitId":"jorrdansoh"},"content":"    @Override","lastModifiedDate":"2022-10-21"},{"lineNumber":70,"author":{"gitId":"jorrdansoh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-21"},{"lineNumber":71,"author":{"gitId":"jorrdansoh"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-21"},{"lineNumber":72,"author":{"gitId":"jorrdansoh"},"content":"                || (other instanceof SortCommand // instanceof handles nulls","lastModifiedDate":"2022-10-21"},{"lineNumber":73,"author":{"gitId":"jorrdansoh"},"content":"                \u0026\u0026 comparator.equals(((SortCommand) other).comparator));","lastModifiedDate":"2022-10-21"},{"lineNumber":74,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":75,"author":{"gitId":"jorrdansoh"},"content":"}","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"jorrdansoh":64,"Yuvaraj0702":11}},{"path":"src/main/java/friday/logic/commands/UgCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaij77"},"content":"package friday.logic.commands;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"kaij77"},"content":"import friday.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"kaij77"},"content":"import friday.model.Model;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"kaij77"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"kaij77"},"content":" * Returns a link to the User Guide, which can be copied and pasted into a browser for reading.","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"kaij77"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"kaij77"},"content":"public class UgCommand extends Command {","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"kaij77"},"content":"    public static final String COMMAND_WORD \u003d \"guide\";","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"kaij77"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Returns a link to FRIDAY\u0027s user guide, which can \"","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"kaij77"},"content":"            + \"accessed by copying and pasting this link into a browser.\\n\"","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"kaij77"},"content":"            + \"Parameters: none\\n\"","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"kaij77"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"kaij77"},"content":"    private static final String ugLink \u003d \"https://ay2223s1-cs2103t-w15-4.github.io/tp/UserGuide.html\";","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"kaij77"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"kaij77"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"kaij77"},"content":"        String output \u003d String.format(\"Here is the link to the User Guide:\\n\"","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"kaij77"},"content":"                + \" %s\\n\" + \"Please copy the link and paste it into a browser to read the User Guide.\", ugLink);","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"kaij77"},"content":"        return new CommandResult(output);","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"kaij77"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"kaij77"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"kaij77":23}},{"path":"src/main/java/friday/logic/commands/UnaliasCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"darrtzj"},"content":"package friday.logic.commands;","lastModifiedDate":"2022-10-23"},{"lineNumber":2,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":3,"author":{"gitId":"darrtzj"},"content":"import static friday.logic.parser.CliSyntax.PREFIX_ALIAS;","lastModifiedDate":"2022-10-23"},{"lineNumber":4,"author":{"gitId":"darrtzj"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-23"},{"lineNumber":5,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":6,"author":{"gitId":"darrtzj"},"content":"import friday.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-23"},{"lineNumber":7,"author":{"gitId":"darrtzj"},"content":"import friday.model.Model;","lastModifiedDate":"2022-10-23"},{"lineNumber":8,"author":{"gitId":"darrtzj"},"content":"import friday.model.alias.Alias;","lastModifiedDate":"2022-10-23"},{"lineNumber":9,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":10,"author":{"gitId":"darrtzj"},"content":"/**","lastModifiedDate":"2022-10-23"},{"lineNumber":11,"author":{"gitId":"darrtzj"},"content":" * Removes an alias from FRIDAY.","lastModifiedDate":"2022-10-23"},{"lineNumber":12,"author":{"gitId":"darrtzj"},"content":" */","lastModifiedDate":"2022-10-23"},{"lineNumber":13,"author":{"gitId":"darrtzj"},"content":"public class UnaliasCommand extends Command {","lastModifiedDate":"2022-10-23"},{"lineNumber":14,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":15,"author":{"gitId":"darrtzj"},"content":"    public static final String COMMAND_WORD \u003d \"unalias\";","lastModifiedDate":"2022-10-23"},{"lineNumber":16,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":17,"author":{"gitId":"darrtzj"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Removes an alias from FRIDAY. \"","lastModifiedDate":"2022-10-23"},{"lineNumber":18,"author":{"gitId":"darrtzj"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-10-23"},{"lineNumber":19,"author":{"gitId":"darrtzj"},"content":"            + PREFIX_ALIAS + \"ALIAS \"","lastModifiedDate":"2022-10-23"},{"lineNumber":20,"author":{"gitId":"darrtzj"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-23"},{"lineNumber":21,"author":{"gitId":"darrtzj"},"content":"            + PREFIX_ALIAS + \"ls \";","lastModifiedDate":"2022-10-23"},{"lineNumber":22,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":23,"author":{"gitId":"darrtzj"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Alias removed: %1$s\";","lastModifiedDate":"2022-10-23"},{"lineNumber":24,"author":{"gitId":"darrtzj"},"content":"    public static final String MESSAGE_ALIAS_NOT_FOUND \u003d \"Alias not in FRIDAY\";","lastModifiedDate":"2022-10-23"},{"lineNumber":25,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":26,"author":{"gitId":"darrtzj"},"content":"    private final Alias toRemove;","lastModifiedDate":"2022-10-23"},{"lineNumber":27,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":28,"author":{"gitId":"darrtzj"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":29,"author":{"gitId":"darrtzj"},"content":"     * Creates an UnaliasCommand to remove the specified {@code alias}","lastModifiedDate":"2022-10-23"},{"lineNumber":30,"author":{"gitId":"darrtzj"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":31,"author":{"gitId":"darrtzj"},"content":"    public UnaliasCommand(Alias alias) {","lastModifiedDate":"2022-10-23"},{"lineNumber":32,"author":{"gitId":"darrtzj"},"content":"        requireNonNull(alias);","lastModifiedDate":"2022-10-23"},{"lineNumber":33,"author":{"gitId":"darrtzj"},"content":"        toRemove \u003d alias;","lastModifiedDate":"2022-10-23"},{"lineNumber":34,"author":{"gitId":"darrtzj"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":35,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":36,"author":{"gitId":"darrtzj"},"content":"    @Override","lastModifiedDate":"2022-10-23"},{"lineNumber":37,"author":{"gitId":"darrtzj"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-23"},{"lineNumber":38,"author":{"gitId":"darrtzj"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-23"},{"lineNumber":39,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":40,"author":{"gitId":"darrtzj"},"content":"        if (!model.hasAlias(toRemove)) {","lastModifiedDate":"2022-10-23"},{"lineNumber":41,"author":{"gitId":"darrtzj"},"content":"            throw new CommandException(MESSAGE_ALIAS_NOT_FOUND);","lastModifiedDate":"2022-10-23"},{"lineNumber":42,"author":{"gitId":"darrtzj"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":43,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":44,"author":{"gitId":"darrtzj"},"content":"        model.removeAlias(toRemove);","lastModifiedDate":"2022-10-23"},{"lineNumber":45,"author":{"gitId":"darrtzj"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toRemove));","lastModifiedDate":"2022-10-23"},{"lineNumber":46,"author":{"gitId":"darrtzj"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":47,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":48,"author":{"gitId":"darrtzj"},"content":"    @Override","lastModifiedDate":"2022-10-23"},{"lineNumber":49,"author":{"gitId":"darrtzj"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-23"},{"lineNumber":50,"author":{"gitId":"darrtzj"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-23"},{"lineNumber":51,"author":{"gitId":"darrtzj"},"content":"                || (other instanceof UnaliasCommand // instanceof handles nulls","lastModifiedDate":"2022-10-23"},{"lineNumber":52,"author":{"gitId":"darrtzj"},"content":"                \u0026\u0026 toRemove.equals(((UnaliasCommand) other).toRemove));","lastModifiedDate":"2022-10-23"},{"lineNumber":53,"author":{"gitId":"darrtzj"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":54,"author":{"gitId":"darrtzj"},"content":"}","lastModifiedDate":"2022-10-23"}],"authorContributionMap":{"darrtzj":54}},{"path":"src/main/java/friday/logic/commands/UnmarkMasteryCheckCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaij77"},"content":"package friday.logic.commands;","lastModifiedDate":"2022-10-25"},{"lineNumber":2,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":3,"author":{"gitId":"kaij77"},"content":"import java.util.List;","lastModifiedDate":"2022-10-25"},{"lineNumber":4,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":5,"author":{"gitId":"kaij77"},"content":"import friday.commons.core.Messages;","lastModifiedDate":"2022-10-25"},{"lineNumber":6,"author":{"gitId":"kaij77"},"content":"import friday.commons.core.index.Index;","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"kaij77"},"content":"import friday.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-25"},{"lineNumber":8,"author":{"gitId":"kaij77"},"content":"import friday.model.Model;","lastModifiedDate":"2022-10-25"},{"lineNumber":9,"author":{"gitId":"kaij77"},"content":"import friday.model.student.Student;","lastModifiedDate":"2022-10-25"},{"lineNumber":10,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":11,"author":{"gitId":"kaij77"},"content":"/**","lastModifiedDate":"2022-10-25"},{"lineNumber":12,"author":{"gitId":"kaij77"},"content":" * Unmarks the Mastery Check of an existing student in FRIDAY.","lastModifiedDate":"2022-10-25"},{"lineNumber":13,"author":{"gitId":"kaij77"},"content":" */","lastModifiedDate":"2022-10-25"},{"lineNumber":14,"author":{"gitId":"kaij77"},"content":"public class UnmarkMasteryCheckCommand extends Command {","lastModifiedDate":"2022-10-25"},{"lineNumber":15,"author":{"gitId":"kaij77"},"content":"    public static final String COMMAND_WORD \u003d \"unmark\";","lastModifiedDate":"2022-10-25"},{"lineNumber":16,"author":{"gitId":"kaij77"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Unmarks the Mastery Check of the student identified by\"","lastModifiedDate":"2022-10-25"},{"lineNumber":17,"author":{"gitId":"kaij77"},"content":"            + \" the index number.\\n\"","lastModifiedDate":"2022-10-25"},{"lineNumber":18,"author":{"gitId":"kaij77"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2022-10-25"},{"lineNumber":19,"author":{"gitId":"kaij77"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \";","lastModifiedDate":"2022-10-25"},{"lineNumber":20,"author":{"gitId":"kaij77"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Unmarked Mastery Check of Student: %s\";","lastModifiedDate":"2022-11-06"},{"lineNumber":21,"author":{"gitId":"kaij77"},"content":"    public static final String MESSAGE_NOT_MARKED \u003d \"Can\u0027t unmark as %s\u0027s Mastery Check has not been marked as passed!\";","lastModifiedDate":"2022-10-25"},{"lineNumber":22,"author":{"gitId":"kaij77"},"content":"    public static final String MESSAGE_EMPTY_MASTERYCHECK \u003d \" currently does not have any scheduled Mastery Check to be\"","lastModifiedDate":"2022-11-05"},{"lineNumber":23,"author":{"gitId":"kaij77"},"content":"            + \" unmarked.\";","lastModifiedDate":"2022-11-05"},{"lineNumber":24,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":25,"author":{"gitId":"kaij77"},"content":"    private Index index;","lastModifiedDate":"2022-10-25"},{"lineNumber":26,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":27,"author":{"gitId":"kaij77"},"content":"    public UnmarkMasteryCheckCommand(Index index) {","lastModifiedDate":"2022-10-25"},{"lineNumber":28,"author":{"gitId":"kaij77"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-10-25"},{"lineNumber":29,"author":{"gitId":"kaij77"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":30,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":31,"author":{"gitId":"kaij77"},"content":"    @Override","lastModifiedDate":"2022-10-25"},{"lineNumber":32,"author":{"gitId":"kaij77"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-25"},{"lineNumber":33,"author":{"gitId":"kaij77"},"content":"        List\u003cStudent\u003e lastShownList \u003d model.getStudentList();","lastModifiedDate":"2022-10-25"},{"lineNumber":34,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":35,"author":{"gitId":"kaij77"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-25"},{"lineNumber":36,"author":{"gitId":"kaij77"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-25"},{"lineNumber":37,"author":{"gitId":"kaij77"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":38,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":39,"author":{"gitId":"kaij77"},"content":"        Student studentToUnmark \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-10-25"},{"lineNumber":40,"author":{"gitId":"kaij77"},"content":"        if (studentToUnmark.getMasteryCheck().isEmpty()) {","lastModifiedDate":"2022-11-05"},{"lineNumber":41,"author":{"gitId":"kaij77"},"content":"            throw new CommandException(studentToUnmark.getName() + MESSAGE_EMPTY_MASTERYCHECK);","lastModifiedDate":"2022-11-05"},{"lineNumber":42,"author":{"gitId":"kaij77"},"content":"        } else if (!studentToUnmark.getMasteryCheck().getIsPassed()) {","lastModifiedDate":"2022-11-05"},{"lineNumber":43,"author":{"gitId":"kaij77"},"content":"            throw new CommandException(String.format(MESSAGE_NOT_MARKED, studentToUnmark.getName()));","lastModifiedDate":"2022-10-25"},{"lineNumber":44,"author":{"gitId":"kaij77"},"content":"        } else {","lastModifiedDate":"2022-10-25"},{"lineNumber":45,"author":{"gitId":"kaij77"},"content":"            studentToUnmark.getMasteryCheck().unmark();","lastModifiedDate":"2022-10-25"},{"lineNumber":46,"author":{"gitId":"kaij77"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":47,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":48,"author":{"gitId":"kaij77"},"content":"        return new CommandResult(generateSuccessMessage(studentToUnmark));","lastModifiedDate":"2022-10-25"},{"lineNumber":49,"author":{"gitId":"kaij77"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":50,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":51,"author":{"gitId":"kaij77"},"content":"    private String generateSuccessMessage(Student studentToMark) {","lastModifiedDate":"2022-10-25"},{"lineNumber":52,"author":{"gitId":"kaij77"},"content":"        return String.format(MESSAGE_SUCCESS, studentToMark.getName());","lastModifiedDate":"2022-11-06"},{"lineNumber":53,"author":{"gitId":"kaij77"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":54,"author":{"gitId":"kaij77"},"content":"}","lastModifiedDate":"2022-10-25"}],"authorContributionMap":{"kaij77":54}},{"path":"src/main/java/friday/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.logic.commands.exceptions;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"-":16,"HowSuen":1}},{"path":"src/main/java/friday/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.logic.parser;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"HowSuen"},"content":"import static friday.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"jorrdansoh"},"content":"import static friday.logic.parser.CliSyntax.PREFIX_CONSULTATION;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"jorrdansoh"},"content":"import static friday.logic.parser.CliSyntax.PREFIX_MASTERYCHECK;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"HowSuen"},"content":"import static friday.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"HowSuen"},"content":"import static friday.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"kaij77"},"content":"import static friday.logic.parser.CliSyntax.PREFIX_TELEGRAMHANDLE;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"HowSuen"},"content":"import friday.logic.commands.AddCommand;","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"HowSuen"},"content":"import friday.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"HowSuen"},"content":"import friday.model.grades.GradesList;","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"kaij77"},"content":"import friday.model.student.Consultation;","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"kaij77"},"content":"import friday.model.student.MasteryCheck;","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"kaij77"},"content":"import friday.model.student.Name;","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"kaij77"},"content":"import friday.model.student.Remark;","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"kaij77"},"content":"import friday.model.student.Student;","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"kaij77"},"content":"import friday.model.student.TelegramHandle;","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"HowSuen"},"content":"import friday.model.tag.Tag;","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"jorrdansoh"},"content":"     *","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":37,"author":{"gitId":"jorrdansoh"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_TELEGRAMHANDLE, PREFIX_CONSULTATION,","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"jorrdansoh"},"content":"                        PREFIX_MASTERYCHECK, PREFIX_TAG);","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":40,"author":{"gitId":"jorrdansoh"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME)","lastModifiedDate":"2022-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":42,"author":{"gitId":"HowSuen"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":45,"author":{"gitId":"HowSuen"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2022-10-06"},{"lineNumber":46,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"jorrdansoh"},"content":"        TelegramHandle telegramHandle \u003d getTelegramHandle(argMultimap);","lastModifiedDate":"2022-10-24"},{"lineNumber":48,"author":{"gitId":"jorrdansoh"},"content":"        Consultation consultation \u003d getConsultation(argMultimap);","lastModifiedDate":"2022-10-24"},{"lineNumber":49,"author":{"gitId":"jorrdansoh"},"content":"        MasteryCheck masteryCheck \u003d getMasteryCheck(argMultimap);","lastModifiedDate":"2022-10-24"},{"lineNumber":50,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"jorrdansoh"},"content":"        Remark remark \u003d new Remark(\"\"); // add command does not allow adding remarks straight away","lastModifiedDate":"2022-10-06"},{"lineNumber":52,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":53,"author":{"gitId":"HowSuen"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2022-10-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":55,"author":{"gitId":"HowSuen"},"content":"        GradesList gradesList \u003d new GradesList();","lastModifiedDate":"2022-10-21"},{"lineNumber":56,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":57,"author":{"gitId":"HowSuen"},"content":"        Student student \u003d new Student(name, telegramHandle, consultation, masteryCheck, remark, tagList, gradesList);","lastModifiedDate":"2022-10-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"kaij77"},"content":"        return new AddCommand(student);","lastModifiedDate":"2022-10-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":70,"author":{"gitId":"jorrdansoh"},"content":"    private static TelegramHandle getTelegramHandle(ArgumentMultimap argumentMultimap) throws ParseException {","lastModifiedDate":"2022-10-24"},{"lineNumber":71,"author":{"gitId":"jorrdansoh"},"content":"        if (argumentMultimap.getValue(PREFIX_TELEGRAMHANDLE).isPresent()) {","lastModifiedDate":"2022-10-24"},{"lineNumber":72,"author":{"gitId":"jorrdansoh"},"content":"            return ParserUtil.parseTelegramHandle(argumentMultimap","lastModifiedDate":"2022-10-24"},{"lineNumber":73,"author":{"gitId":"jorrdansoh"},"content":"                    .getValue(PREFIX_TELEGRAMHANDLE).get());","lastModifiedDate":"2022-10-24"},{"lineNumber":74,"author":{"gitId":"jorrdansoh"},"content":"        } else {","lastModifiedDate":"2022-10-24"},{"lineNumber":75,"author":{"gitId":"jorrdansoh"},"content":"            return TelegramHandle.EMPTY_TELEGRAMHANDLE;","lastModifiedDate":"2022-10-24"},{"lineNumber":76,"author":{"gitId":"jorrdansoh"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":77,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":78,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":79,"author":{"gitId":"jorrdansoh"},"content":"    private static Consultation getConsultation(ArgumentMultimap argumentMultimap) throws ParseException {","lastModifiedDate":"2022-10-24"},{"lineNumber":80,"author":{"gitId":"jorrdansoh"},"content":"        if (argumentMultimap.getValue(PREFIX_CONSULTATION).isPresent()) {","lastModifiedDate":"2022-10-24"},{"lineNumber":81,"author":{"gitId":"jorrdansoh"},"content":"            return ParserUtil.parseConsultation(argumentMultimap.getValue(PREFIX_CONSULTATION).get());","lastModifiedDate":"2022-10-24"},{"lineNumber":82,"author":{"gitId":"jorrdansoh"},"content":"        } else {","lastModifiedDate":"2022-10-24"},{"lineNumber":83,"author":{"gitId":"jorrdansoh"},"content":"            return Consultation.EMPTY_CONSULTATION;","lastModifiedDate":"2022-10-24"},{"lineNumber":84,"author":{"gitId":"jorrdansoh"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":85,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":86,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":87,"author":{"gitId":"jorrdansoh"},"content":"    private static MasteryCheck getMasteryCheck(ArgumentMultimap argumentMultimap) throws ParseException {","lastModifiedDate":"2022-10-24"},{"lineNumber":88,"author":{"gitId":"jorrdansoh"},"content":"        if (argumentMultimap.getValue(PREFIX_MASTERYCHECK).isPresent()) {","lastModifiedDate":"2022-10-24"},{"lineNumber":89,"author":{"gitId":"jorrdansoh"},"content":"            return ParserUtil.parseMasteryCheck(argumentMultimap.getValue(PREFIX_MASTERYCHECK).get());","lastModifiedDate":"2022-10-24"},{"lineNumber":90,"author":{"gitId":"jorrdansoh"},"content":"        } else {","lastModifiedDate":"2022-10-24"},{"lineNumber":91,"author":{"gitId":"jorrdansoh"},"content":"            return MasteryCheck.EMPTY_MASTERYCHECK;","lastModifiedDate":"2022-10-24"},{"lineNumber":92,"author":{"gitId":"jorrdansoh"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":93,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"jorrdansoh":37,"kaij77":8,"-":34,"HowSuen":15}},{"path":"src/main/java/friday/logic/parser/AliasCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"darrtzj"},"content":"package friday.logic.parser;","lastModifiedDate":"2022-10-22"},{"lineNumber":2,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":3,"author":{"gitId":"darrtzj"},"content":"import static friday.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-22"},{"lineNumber":4,"author":{"gitId":"darrtzj"},"content":"import static friday.logic.parser.CliSyntax.PREFIX_ALIAS;","lastModifiedDate":"2022-10-23"},{"lineNumber":5,"author":{"gitId":"darrtzj"},"content":"import static friday.logic.parser.CliSyntax.PREFIX_RESERVED_KEYWORD;","lastModifiedDate":"2022-10-23"},{"lineNumber":6,"author":{"gitId":"darrtzj"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-22"},{"lineNumber":7,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":8,"author":{"gitId":"darrtzj"},"content":"import friday.logic.commands.AliasCommand;","lastModifiedDate":"2022-10-22"},{"lineNumber":9,"author":{"gitId":"darrtzj"},"content":"import friday.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-22"},{"lineNumber":10,"author":{"gitId":"darrtzj"},"content":"import friday.model.alias.Alias;","lastModifiedDate":"2022-10-23"},{"lineNumber":11,"author":{"gitId":"darrtzj"},"content":"import friday.model.alias.ReservedKeyword;","lastModifiedDate":"2022-10-23"},{"lineNumber":12,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":13,"author":{"gitId":"darrtzj"},"content":"/**","lastModifiedDate":"2022-10-22"},{"lineNumber":14,"author":{"gitId":"darrtzj"},"content":" * Parses input arguments and creates a new AliasCommand object","lastModifiedDate":"2022-10-22"},{"lineNumber":15,"author":{"gitId":"darrtzj"},"content":" */","lastModifiedDate":"2022-10-22"},{"lineNumber":16,"author":{"gitId":"darrtzj"},"content":"public class AliasCommandParser implements Parser\u003cAliasCommand\u003e {","lastModifiedDate":"2022-10-22"},{"lineNumber":17,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":18,"author":{"gitId":"darrtzj"},"content":"    /**","lastModifiedDate":"2022-10-22"},{"lineNumber":19,"author":{"gitId":"darrtzj"},"content":"     * Parses the given {@code String} of arguments in the context of the AliasCommand","lastModifiedDate":"2022-10-22"},{"lineNumber":20,"author":{"gitId":"darrtzj"},"content":"     * and returns an AliasCommand object for execution.","lastModifiedDate":"2022-10-22"},{"lineNumber":21,"author":{"gitId":"darrtzj"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-22"},{"lineNumber":22,"author":{"gitId":"darrtzj"},"content":"     */","lastModifiedDate":"2022-10-22"},{"lineNumber":23,"author":{"gitId":"darrtzj"},"content":"    public AliasCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-22"},{"lineNumber":24,"author":{"gitId":"darrtzj"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-10-22"},{"lineNumber":25,"author":{"gitId":"darrtzj"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-10-22"},{"lineNumber":26,"author":{"gitId":"darrtzj"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_ALIAS, PREFIX_RESERVED_KEYWORD);","lastModifiedDate":"2022-10-22"},{"lineNumber":27,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":28,"author":{"gitId":"darrtzj"},"content":"        Alias alias;","lastModifiedDate":"2022-10-23"},{"lineNumber":29,"author":{"gitId":"darrtzj"},"content":"        ReservedKeyword reservedKeyword;","lastModifiedDate":"2022-10-23"},{"lineNumber":30,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":31,"author":{"gitId":"darrtzj"},"content":"        if (!argMultimap.getValue(PREFIX_ALIAS).isPresent()) {","lastModifiedDate":"2022-10-22"},{"lineNumber":32,"author":{"gitId":"darrtzj"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AliasCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-23"},{"lineNumber":33,"author":{"gitId":"darrtzj"},"content":"        }","lastModifiedDate":"2022-10-22"},{"lineNumber":34,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":35,"author":{"gitId":"darrtzj"},"content":"        if (!argMultimap.getValue(PREFIX_RESERVED_KEYWORD).isPresent()) {","lastModifiedDate":"2022-10-22"},{"lineNumber":36,"author":{"gitId":"darrtzj"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AliasCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-23"},{"lineNumber":37,"author":{"gitId":"darrtzj"},"content":"        }","lastModifiedDate":"2022-10-22"},{"lineNumber":38,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":39,"author":{"gitId":"darrtzj"},"content":"        alias \u003d ParserUtil.parseAlias(argMultimap.getValue(PREFIX_ALIAS).get());","lastModifiedDate":"2022-10-23"},{"lineNumber":40,"author":{"gitId":"darrtzj"},"content":"        reservedKeyword \u003d ParserUtil.parseReservedKeyword(argMultimap.getValue(PREFIX_RESERVED_KEYWORD).get());","lastModifiedDate":"2022-10-23"},{"lineNumber":41,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":42,"author":{"gitId":"darrtzj"},"content":"        return new AliasCommand(alias, reservedKeyword);","lastModifiedDate":"2022-10-23"},{"lineNumber":43,"author":{"gitId":"darrtzj"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":44,"author":{"gitId":"darrtzj"},"content":"}","lastModifiedDate":"2022-10-22"},{"lineNumber":45,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-22"}],"authorContributionMap":{"darrtzj":45}},{"path":"src/main/java/friday/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.logic.parser;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"jorrdansoh"},"content":"import java.util.LinkedHashMap;","lastModifiedDate":"2022-10-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"jorrdansoh"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new LinkedHashMap\u003c\u003e();","lastModifiedDate":"2022-10-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"jorrdansoh"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":43,"author":{"gitId":"jorrdansoh"},"content":"     * Returns the number of prefixes in this map.","lastModifiedDate":"2022-10-20"},{"lineNumber":44,"author":{"gitId":"jorrdansoh"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":45,"author":{"gitId":"jorrdansoh"},"content":"    public int size() {","lastModifiedDate":"2022-10-20"},{"lineNumber":46,"author":{"gitId":"jorrdansoh"},"content":"        argMultimap.remove(new Prefix(\"\"));","lastModifiedDate":"2022-10-20"},{"lineNumber":47,"author":{"gitId":"jorrdansoh"},"content":"        return argMultimap.size();","lastModifiedDate":"2022-10-20"},{"lineNumber":48,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":49,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":50,"author":{"gitId":"jorrdansoh"},"content":"    /**","lastModifiedDate":"2022-10-30"},{"lineNumber":51,"author":{"gitId":"jorrdansoh"},"content":"     * Returns the first prefix in this map.","lastModifiedDate":"2022-10-30"},{"lineNumber":52,"author":{"gitId":"jorrdansoh"},"content":"     */","lastModifiedDate":"2022-10-30"},{"lineNumber":53,"author":{"gitId":"jorrdansoh"},"content":"    public Optional\u003cPrefix\u003e getFirstPrefix() {","lastModifiedDate":"2022-10-30"},{"lineNumber":54,"author":{"gitId":"jorrdansoh"},"content":"        argMultimap.remove(new Prefix(\"\"));","lastModifiedDate":"2022-10-30"},{"lineNumber":55,"author":{"gitId":"jorrdansoh"},"content":"        return argMultimap.keySet().stream().findFirst();","lastModifiedDate":"2022-10-30"},{"lineNumber":56,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-10-30"},{"lineNumber":57,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"jorrdansoh":18,"-":57,"HowSuen":1}},{"path":"src/main/java/friday/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.logic.parser;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *    in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return           ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return           List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @return                ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                                        PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                                        PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private int startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"-":147,"HowSuen":1}},{"path":"src/main/java/friday/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.logic.parser;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"kaij77"},"content":"    public static final Prefix PREFIX_TELEGRAMHANDLE \u003d new Prefix(\"t/\");","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"kaij77"},"content":"    public static final Prefix PREFIX_CONSULTATION \u003d new Prefix(\"c/\");","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"kaij77"},"content":"    public static final Prefix PREFIX_MASTERYCHECK \u003d new Prefix(\"m/\");","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_REMARK \u003d new Prefix(\"r/\");","lastModifiedDate":"2022-09-13"},{"lineNumber":14,"author":{"gitId":"jorrdansoh"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"tag/\");","lastModifiedDate":"2022-10-07"},{"lineNumber":15,"author":{"gitId":"darrtzj"},"content":"    public static final Prefix PREFIX_ALIAS \u003d new Prefix(\"a/\");","lastModifiedDate":"2022-10-22"},{"lineNumber":16,"author":{"gitId":"darrtzj"},"content":"    public static final Prefix PREFIX_RESERVED_KEYWORD \u003d new Prefix(\"k/\");","lastModifiedDate":"2022-10-22"},{"lineNumber":17,"author":{"gitId":"HowSuen"},"content":"    public static final Prefix PREFIX_RA1 \u003d new Prefix(\"ra1/\");","lastModifiedDate":"2022-10-21"},{"lineNumber":18,"author":{"gitId":"HowSuen"},"content":"    public static final Prefix PREFIX_RA2 \u003d new Prefix(\"ra2/\");","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"HowSuen"},"content":"    public static final Prefix PREFIX_PRACTICAL \u003d new Prefix(\"pa/\");","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"HowSuen"},"content":"    public static final Prefix PREFIX_MIDTERM \u003d new Prefix(\"mt/\");","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"HowSuen"},"content":"    public static final Prefix PREFIX_FINALS \u003d new Prefix(\"ft/\");","lastModifiedDate":"2022-10-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"jorrdansoh"},"content":"    /* Order definitions */","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"jorrdansoh"},"content":"    public static final Order ORDER_ASCENDING \u003d new Order(\"a\");","lastModifiedDate":"2022-10-25"},{"lineNumber":25,"author":{"gitId":"jorrdansoh"},"content":"    public static final Order ORDER_DESCENDING \u003d new Order(\"d\");","lastModifiedDate":"2022-10-25"},{"lineNumber":26,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"jorrdansoh":5,"darrtzj":2,"kaij77":3,"-":11,"HowSuen":6}},{"path":"src/main/java/friday/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.logic.parser;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"jorrdansoh"},"content":"import static friday.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"HowSuen"},"content":"import friday.commons.core.index.Index;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"HowSuen"},"content":"import friday.logic.commands.DeleteCommand;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"HowSuen"},"content":"import friday.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"jorrdansoh":1,"-":24,"HowSuen":4}},{"path":"src/main/java/friday/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.logic.parser;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"HowSuen"},"content":"import static friday.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-19"},{"lineNumber":4,"author":{"gitId":"HowSuen"},"content":"import static friday.logic.parser.CliSyntax.PREFIX_CONSULTATION;","lastModifiedDate":"2022-10-19"},{"lineNumber":5,"author":{"gitId":"HowSuen"},"content":"import static friday.logic.parser.CliSyntax.PREFIX_MASTERYCHECK;","lastModifiedDate":"2022-10-19"},{"lineNumber":6,"author":{"gitId":"HowSuen"},"content":"import static friday.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-19"},{"lineNumber":7,"author":{"gitId":"HowSuen"},"content":"import static friday.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-19"},{"lineNumber":8,"author":{"gitId":"HowSuen"},"content":"import static friday.logic.parser.CliSyntax.PREFIX_TELEGRAMHANDLE;","lastModifiedDate":"2022-10-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"HowSuen"},"content":"import friday.commons.core.index.Index;","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"HowSuen"},"content":"import friday.logic.commands.EditCommand;","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"HowSuen"},"content":"import friday.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"HowSuen"},"content":"import friday.model.tag.Tag;","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":34,"author":{"gitId":"HowSuen"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_TELEGRAMHANDLE, PREFIX_CONSULTATION,","lastModifiedDate":"2022-10-19"},{"lineNumber":35,"author":{"gitId":"HowSuen"},"content":"                        PREFIX_MASTERYCHECK, PREFIX_TAG);","lastModifiedDate":"2022-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":45,"author":{"gitId":"HowSuen"},"content":"        EditCommand.EditStudentDescriptor editStudentDescriptor \u003d new EditCommand.EditStudentDescriptor();","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2022-10-19"},{"lineNumber":47,"author":{"gitId":"HowSuen"},"content":"            editStudentDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2022-10-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"HowSuen"},"content":"        if (argMultimap.getValue(PREFIX_TELEGRAMHANDLE).isPresent()) {","lastModifiedDate":"2022-10-19"},{"lineNumber":50,"author":{"gitId":"HowSuen"},"content":"            editStudentDescriptor.setTelegramHandle(ParserUtil.parseTelegramHandle(","lastModifiedDate":"2022-10-19"},{"lineNumber":51,"author":{"gitId":"HowSuen"},"content":"                    argMultimap.getValue(PREFIX_TELEGRAMHANDLE).get()));","lastModifiedDate":"2022-10-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"HowSuen"},"content":"        if (argMultimap.getValue(PREFIX_CONSULTATION).isPresent()) {","lastModifiedDate":"2022-10-19"},{"lineNumber":54,"author":{"gitId":"HowSuen"},"content":"            editStudentDescriptor.setConsultation(ParserUtil.parseConsultation(","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"HowSuen"},"content":"                    argMultimap.getValue(PREFIX_CONSULTATION).get()));","lastModifiedDate":"2022-10-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"HowSuen"},"content":"        if (argMultimap.getValue(PREFIX_MASTERYCHECK).isPresent()) {","lastModifiedDate":"2022-10-19"},{"lineNumber":58,"author":{"gitId":"HowSuen"},"content":"            editStudentDescriptor.setMasteryCheck(ParserUtil.parseMasteryCheck(","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"HowSuen"},"content":"                    argMultimap.getValue(PREFIX_MASTERYCHECK).get()));","lastModifiedDate":"2022-10-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"HowSuen"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editStudentDescriptor::setTags);","lastModifiedDate":"2022-10-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":63,"author":{"gitId":"HowSuen"},"content":"        if (!editStudentDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"HowSuen"},"content":"        return new EditCommand(index, editStudentDescriptor);","lastModifiedDate":"2022-10-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"-":58,"HowSuen":27}},{"path":"src/main/java/friday/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.logic.parser;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"HowSuen"},"content":"import friday.commons.core.Messages;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"HowSuen"},"content":"import friday.logic.commands.FindCommand;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"HowSuen"},"content":"import friday.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"kaij77"},"content":"import friday.model.student.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"HowSuen"},"content":"                    String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"kaij77":1,"-":26,"HowSuen":5}},{"path":"src/main/java/friday/logic/parser/FridayParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.logic.parser;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":3,"author":{"gitId":"HowSuen"},"content":"import static friday.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"HowSuen"},"content":"import static friday.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"HowSuen"},"content":"import friday.logic.commands.AddCommand;","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"darrtzj"},"content":"import friday.logic.commands.AliasCommand;","lastModifiedDate":"2022-10-23"},{"lineNumber":11,"author":{"gitId":"darrtzj"},"content":"import friday.logic.commands.AliasListCommand;","lastModifiedDate":"2022-10-23"},{"lineNumber":12,"author":{"gitId":"HowSuen"},"content":"import friday.logic.commands.ClearCommand;","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"HowSuen"},"content":"import friday.logic.commands.Command;","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"HowSuen"},"content":"import friday.logic.commands.DeleteCommand;","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"HowSuen"},"content":"import friday.logic.commands.EditCommand;","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"HowSuen"},"content":"import friday.logic.commands.ExitCommand;","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"HowSuen"},"content":"import friday.logic.commands.FindCommand;","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"HowSuen"},"content":"import friday.logic.commands.GradeCommand;","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"HowSuen"},"content":"import friday.logic.commands.HelpCommand;","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"HowSuen"},"content":"import friday.logic.commands.ListCommand;","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"kaij77"},"content":"import friday.logic.commands.MarkMasteryCheckCommand;","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"HowSuen"},"content":"import friday.logic.commands.RemarkCommand;","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"jorrdansoh"},"content":"import friday.logic.commands.SortCommand;","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"kaij77"},"content":"import friday.logic.commands.UgCommand;","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"darrtzj"},"content":"import friday.logic.commands.UnaliasCommand;","lastModifiedDate":"2022-10-23"},{"lineNumber":26,"author":{"gitId":"kaij77"},"content":"import friday.logic.commands.UnmarkMasteryCheckCommand;","lastModifiedDate":"2022-10-25"},{"lineNumber":27,"author":{"gitId":"HowSuen"},"content":"import friday.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"darrtzj"},"content":"import friday.model.Model;","lastModifiedDate":"2022-10-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"HowSuen"},"content":"public class FridayParser {","lastModifiedDate":"2022-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"darrtzj"},"content":"     * @param model current model","lastModifiedDate":"2022-10-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"darrtzj"},"content":"    public Command parseCommand(String userInput, Model model) throws ParseException {","lastModifiedDate":"2022-10-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"HowSuen"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"darrtzj"},"content":"        final String alias \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2022-10-23"},{"lineNumber":55,"author":{"gitId":"darrtzj"},"content":"        final String commandWord \u003d model.getKeyword(alias);","lastModifiedDate":"2022-10-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        case RemarkCommand.COMMAND_WORD:","lastModifiedDate":"2022-09-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return new RemarkCommandParser().parse(arguments);","lastModifiedDate":"2022-09-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"jorrdansoh"},"content":"        case SortCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-20"},{"lineNumber":81,"author":{"gitId":"jorrdansoh"},"content":"            return new SortCommandParser().parse(arguments);","lastModifiedDate":"2022-10-20"},{"lineNumber":82,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":89,"author":{"gitId":"kaij77"},"content":"        case UgCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-11"},{"lineNumber":90,"author":{"gitId":"kaij77"},"content":"            return new UgCommand();","lastModifiedDate":"2022-10-11"},{"lineNumber":91,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":92,"author":{"gitId":"kaij77"},"content":"        case MarkMasteryCheckCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-20"},{"lineNumber":93,"author":{"gitId":"kaij77"},"content":"            return new MarkMasteryCheckCommandParser().parse(arguments);","lastModifiedDate":"2022-10-20"},{"lineNumber":94,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":95,"author":{"gitId":"kaij77"},"content":"        case UnmarkMasteryCheckCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-25"},{"lineNumber":96,"author":{"gitId":"kaij77"},"content":"            return new UnmarkMasteryCheckCommandParser().parse(arguments);","lastModifiedDate":"2022-10-25"},{"lineNumber":97,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":98,"author":{"gitId":"darrtzj"},"content":"        case AliasCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-23"},{"lineNumber":99,"author":{"gitId":"darrtzj"},"content":"            return new AliasCommandParser().parse(arguments);","lastModifiedDate":"2022-10-23"},{"lineNumber":100,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":101,"author":{"gitId":"darrtzj"},"content":"        case UnaliasCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-23"},{"lineNumber":102,"author":{"gitId":"darrtzj"},"content":"            return new UnaliasCommandParser().parse(arguments);","lastModifiedDate":"2022-10-23"},{"lineNumber":103,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":104,"author":{"gitId":"darrtzj"},"content":"        case AliasListCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-23"},{"lineNumber":105,"author":{"gitId":"darrtzj"},"content":"            return new AliasListCommand();","lastModifiedDate":"2022-10-23"},{"lineNumber":106,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":107,"author":{"gitId":"HowSuen"},"content":"        case GradeCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-21"},{"lineNumber":108,"author":{"gitId":"HowSuen"},"content":"            return new GradeCommandParser().parse(arguments);","lastModifiedDate":"2022-10-21"},{"lineNumber":109,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":111,"author":{"gitId":"HowSuen"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2022-10-06"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jorrdansoh":4,"darrtzj":16,"kaij77":13,"-":60,"HowSuen":22}},{"path":"src/main/java/friday/logic/parser/GradeCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.logic.parser;","lastModifiedDate":"2022-10-21"},{"lineNumber":2,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":3,"author":{"gitId":"HowSuen"},"content":"import static friday.logic.parser.CliSyntax.PREFIX_FINALS;","lastModifiedDate":"2022-10-21"},{"lineNumber":4,"author":{"gitId":"HowSuen"},"content":"import static friday.logic.parser.CliSyntax.PREFIX_MIDTERM;","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"HowSuen"},"content":"import static friday.logic.parser.CliSyntax.PREFIX_PRACTICAL;","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"HowSuen"},"content":"import static friday.logic.parser.CliSyntax.PREFIX_RA1;","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"HowSuen"},"content":"import static friday.logic.parser.CliSyntax.PREFIX_RA2;","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"HowSuen"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"HowSuen"},"content":"import friday.commons.core.Messages;","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"HowSuen"},"content":"import friday.commons.core.index.Index;","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"HowSuen"},"content":"import friday.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"HowSuen"},"content":"import friday.logic.commands.EditCommand;","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"HowSuen"},"content":"import friday.logic.commands.GradeCommand;","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"HowSuen"},"content":"import friday.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":17,"author":{"gitId":"HowSuen"},"content":"/**","lastModifiedDate":"2022-10-21"},{"lineNumber":18,"author":{"gitId":"HowSuen"},"content":" * Parses input arguments and creates a new GradeCommand object","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"HowSuen"},"content":" */","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"HowSuen"},"content":"public class GradeCommandParser implements Parser\u003cGradeCommand\u003e {","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":22,"author":{"gitId":"HowSuen"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":23,"author":{"gitId":"HowSuen"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code GradeCommand}","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"HowSuen"},"content":"     * and returns a {@code GradeCommand} object for execution.","lastModifiedDate":"2022-10-21"},{"lineNumber":25,"author":{"gitId":"HowSuen"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-21"},{"lineNumber":26,"author":{"gitId":"HowSuen"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":27,"author":{"gitId":"HowSuen"},"content":"    public GradeCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-21"},{"lineNumber":28,"author":{"gitId":"HowSuen"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-10-21"},{"lineNumber":29,"author":{"gitId":"HowSuen"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_RA1, PREFIX_RA2, PREFIX_MIDTERM,","lastModifiedDate":"2022-10-21"},{"lineNumber":30,"author":{"gitId":"HowSuen"},"content":"                PREFIX_FINALS, PREFIX_PRACTICAL);","lastModifiedDate":"2022-10-21"},{"lineNumber":31,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":32,"author":{"gitId":"HowSuen"},"content":"        Index index;","lastModifiedDate":"2022-10-21"},{"lineNumber":33,"author":{"gitId":"HowSuen"},"content":"        try {","lastModifiedDate":"2022-10-21"},{"lineNumber":34,"author":{"gitId":"HowSuen"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-10-21"},{"lineNumber":35,"author":{"gitId":"HowSuen"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2022-10-21"},{"lineNumber":36,"author":{"gitId":"HowSuen"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-21"},{"lineNumber":37,"author":{"gitId":"HowSuen"},"content":"                    GradeCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2022-10-21"},{"lineNumber":38,"author":{"gitId":"HowSuen"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":39,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":40,"author":{"gitId":"HowSuen"},"content":"        GradeCommand.EditGradeDescriptor editGradeDescriptor \u003d new GradeCommand.EditGradeDescriptor();","lastModifiedDate":"2022-10-21"},{"lineNumber":41,"author":{"gitId":"HowSuen"},"content":"        if (argMultimap.getValue(PREFIX_RA1).isPresent()) {","lastModifiedDate":"2022-10-21"},{"lineNumber":42,"author":{"gitId":"HowSuen"},"content":"            editGradeDescriptor.setRa1(ParserUtil.parseGrade(\"RA1\", argMultimap.getValue(PREFIX_RA1).get()));","lastModifiedDate":"2022-10-21"},{"lineNumber":43,"author":{"gitId":"HowSuen"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":44,"author":{"gitId":"HowSuen"},"content":"        if (argMultimap.getValue(PREFIX_RA2).isPresent()) {","lastModifiedDate":"2022-10-21"},{"lineNumber":45,"author":{"gitId":"HowSuen"},"content":"            editGradeDescriptor.setRa2(ParserUtil.parseGrade(\"RA2\", argMultimap.getValue(PREFIX_RA2).get()));","lastModifiedDate":"2022-10-21"},{"lineNumber":46,"author":{"gitId":"HowSuen"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":47,"author":{"gitId":"HowSuen"},"content":"        if (argMultimap.getValue(PREFIX_PRACTICAL).isPresent()) {","lastModifiedDate":"2022-10-21"},{"lineNumber":48,"author":{"gitId":"HowSuen"},"content":"            editGradeDescriptor.setPa(ParserUtil.parseGrade(\"Practical\",","lastModifiedDate":"2022-10-21"},{"lineNumber":49,"author":{"gitId":"HowSuen"},"content":"                    argMultimap.getValue(PREFIX_PRACTICAL).get()));","lastModifiedDate":"2022-10-21"},{"lineNumber":50,"author":{"gitId":"HowSuen"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":51,"author":{"gitId":"HowSuen"},"content":"        if (argMultimap.getValue(PREFIX_MIDTERM).isPresent()) {","lastModifiedDate":"2022-10-21"},{"lineNumber":52,"author":{"gitId":"jorrdansoh"},"content":"            editGradeDescriptor.setMt(ParserUtil.parseGrade(\"Midterm\",","lastModifiedDate":"2022-10-24"},{"lineNumber":53,"author":{"gitId":"HowSuen"},"content":"                    argMultimap.getValue(PREFIX_MIDTERM).get()));","lastModifiedDate":"2022-10-21"},{"lineNumber":54,"author":{"gitId":"HowSuen"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":55,"author":{"gitId":"HowSuen"},"content":"        if (argMultimap.getValue(PREFIX_FINALS).isPresent()) {","lastModifiedDate":"2022-10-21"},{"lineNumber":56,"author":{"gitId":"HowSuen"},"content":"            editGradeDescriptor.setFt(ParserUtil.parseGrade(\"Finals\",","lastModifiedDate":"2022-10-21"},{"lineNumber":57,"author":{"gitId":"HowSuen"},"content":"                    argMultimap.getValue(PREFIX_FINALS).get()));","lastModifiedDate":"2022-10-21"},{"lineNumber":58,"author":{"gitId":"HowSuen"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":59,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":60,"author":{"gitId":"HowSuen"},"content":"        if (!editGradeDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2022-10-21"},{"lineNumber":61,"author":{"gitId":"HowSuen"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-10-21"},{"lineNumber":62,"author":{"gitId":"HowSuen"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":63,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":64,"author":{"gitId":"HowSuen"},"content":"        return new GradeCommand(index, editGradeDescriptor);","lastModifiedDate":"2022-10-21"},{"lineNumber":65,"author":{"gitId":"HowSuen"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":66,"author":{"gitId":"HowSuen"},"content":"}","lastModifiedDate":"2022-10-21"}],"authorContributionMap":{"jorrdansoh":1,"HowSuen":65}},{"path":"src/main/java/friday/logic/parser/MarkMasteryCheckCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaij77"},"content":"package friday.logic.parser;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"kaij77"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"kaij77"},"content":"import friday.commons.core.Messages;","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"kaij77"},"content":"import friday.commons.core.index.Index;","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"kaij77"},"content":"import friday.logic.commands.MarkMasteryCheckCommand;","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"kaij77"},"content":"import friday.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"kaij77"},"content":"/**","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"kaij77"},"content":" * Parses input arguments and creates a new MarkMasteryCheckCommand object","lastModifiedDate":"2022-10-25"},{"lineNumber":12,"author":{"gitId":"kaij77"},"content":" */","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"kaij77"},"content":"public class MarkMasteryCheckCommandParser implements Parser\u003cMarkMasteryCheckCommand\u003e {","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"kaij77"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"kaij77"},"content":"     * parses","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"kaij77"},"content":"     *","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"kaij77"},"content":"     * @param args","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"kaij77"},"content":"     * @return MarkMasteryCheckCommand","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"kaij77"},"content":"     * @throws ParseException","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"kaij77"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"kaij77"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"kaij77"},"content":"    public MarkMasteryCheckCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"kaij77"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"kaij77"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"kaij77"},"content":"                ArgumentTokenizer.tokenize(args, CliSyntax.PREFIX_NAME, CliSyntax.PREFIX_TELEGRAMHANDLE,","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"kaij77"},"content":"                        CliSyntax.PREFIX_CONSULTATION, CliSyntax.PREFIX_MASTERYCHECK, CliSyntax.PREFIX_TAG);","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"kaij77"},"content":"        Index index;","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"kaij77"},"content":"        try {","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"kaij77"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"kaij77"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"darrtzj"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-25"},{"lineNumber":34,"author":{"gitId":"darrtzj"},"content":"                    MarkMasteryCheckCommand.MESSAGE_USAGE),","lastModifiedDate":"2022-10-25"},{"lineNumber":35,"author":{"gitId":"kaij77"},"content":"                    pe);","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"kaij77"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"kaij77"},"content":"        return new MarkMasteryCheckCommand(index);","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"kaij77"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"kaij77"},"content":"}","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"darrtzj":2,"kaij77":38}},{"path":"src/main/java/friday/logic/parser/Order.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jorrdansoh"},"content":"package friday.logic.parser;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"jorrdansoh"},"content":"import static friday.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"jorrdansoh"},"content":"/**","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"jorrdansoh"},"content":" * The order for sorting students. Can be ascending or descending.","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"jorrdansoh"},"content":" */","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"jorrdansoh"},"content":"public class Order {","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"jorrdansoh"},"content":"    public static final String ASCENDING_WORD \u003d \"a\";","lastModifiedDate":"2022-10-25"},{"lineNumber":10,"author":{"gitId":"jorrdansoh"},"content":"    public static final String DESCENDING_WORD \u003d \"d\";","lastModifiedDate":"2022-10-25"},{"lineNumber":11,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":12,"author":{"gitId":"jorrdansoh"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Order should only be \u0027\" + ASCENDING_WORD + \"\u0027 or \u0027\"","lastModifiedDate":"2022-10-24"},{"lineNumber":13,"author":{"gitId":"jorrdansoh"},"content":"            + DESCENDING_WORD + \"\u0027, and it should not be blank\";","lastModifiedDate":"2022-10-24"},{"lineNumber":14,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"jorrdansoh"},"content":"    private final String order;","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"jorrdansoh"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"jorrdansoh"},"content":"     * Constructs an {@code Order}.","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"jorrdansoh"},"content":"     *","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"jorrdansoh"},"content":"     * @param order A valid order.","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"jorrdansoh"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"jorrdansoh"},"content":"    public Order(String order) {","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"jorrdansoh"},"content":"        checkArgument(isValidOrder(order), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"jorrdansoh"},"content":"        this.order \u003d order;","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"jorrdansoh"},"content":"    public String getOrder() {","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"jorrdansoh"},"content":"        return order;","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"jorrdansoh"},"content":"    public String toString() {","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"jorrdansoh"},"content":"        return getOrder();","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"jorrdansoh"},"content":"    public static boolean isValidOrder(String order) {","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"jorrdansoh"},"content":"        return order.equals(ASCENDING_WORD) || order.equals(DESCENDING_WORD);","lastModifiedDate":"2022-10-24"},{"lineNumber":37,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"jorrdansoh"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"jorrdansoh"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"jorrdansoh"},"content":"        return order \u003d\u003d null ? 0 : order.hashCode();","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":43,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":44,"author":{"gitId":"jorrdansoh"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":45,"author":{"gitId":"jorrdansoh"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2022-10-20"},{"lineNumber":46,"author":{"gitId":"jorrdansoh"},"content":"        if (!(obj instanceof Order)) {","lastModifiedDate":"2022-10-20"},{"lineNumber":47,"author":{"gitId":"jorrdansoh"},"content":"            return false;","lastModifiedDate":"2022-10-20"},{"lineNumber":48,"author":{"gitId":"jorrdansoh"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":49,"author":{"gitId":"jorrdansoh"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2022-10-20"},{"lineNumber":50,"author":{"gitId":"jorrdansoh"},"content":"            return true;","lastModifiedDate":"2022-10-20"},{"lineNumber":51,"author":{"gitId":"jorrdansoh"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":52,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":53,"author":{"gitId":"jorrdansoh"},"content":"        Order otherOrder \u003d (Order) obj;","lastModifiedDate":"2022-10-20"},{"lineNumber":54,"author":{"gitId":"jorrdansoh"},"content":"        return otherOrder.getOrder().equals(getOrder());","lastModifiedDate":"2022-10-20"},{"lineNumber":55,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":56,"author":{"gitId":"jorrdansoh"},"content":"}","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"jorrdansoh":56}},{"path":"src/main/java/friday/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.logic.parser;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"HowSuen"},"content":"import friday.logic.commands.Command;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"HowSuen"},"content":"import friday.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"-":13,"HowSuen":3}},{"path":"src/main/java/friday/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.logic.parser;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"kaij77"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"HowSuen"},"content":"import friday.commons.core.index.Index;","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"HowSuen"},"content":"import friday.commons.util.StringUtil;","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"HowSuen"},"content":"import friday.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"darrtzj"},"content":"import friday.model.alias.Alias;","lastModifiedDate":"2022-10-22"},{"lineNumber":14,"author":{"gitId":"darrtzj"},"content":"import friday.model.alias.ReservedKeyword;","lastModifiedDate":"2022-10-22"},{"lineNumber":15,"author":{"gitId":"HowSuen"},"content":"import friday.model.grades.Grade;","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"kaij77"},"content":"import friday.model.student.Consultation;","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"kaij77"},"content":"import friday.model.student.MasteryCheck;","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"kaij77"},"content":"import friday.model.student.Name;","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"kaij77"},"content":"import friday.model.student.TelegramHandle;","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"HowSuen"},"content":"import friday.model.tag.Tag;","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"jorrdansoh"},"content":"     * Parses a {@code String telegramHandle} into a {@code TelegramHandle}.","lastModifiedDate":"2022-10-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"jorrdansoh"},"content":"     * @throws ParseException if the given {@code telegramHandle} is invalid.","lastModifiedDate":"2022-10-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"jorrdansoh"},"content":"    public static TelegramHandle parseTelegramHandle(String telegramHandle) throws ParseException {","lastModifiedDate":"2022-10-06"},{"lineNumber":64,"author":{"gitId":"jorrdansoh"},"content":"        requireNonNull(telegramHandle);","lastModifiedDate":"2022-10-07"},{"lineNumber":65,"author":{"gitId":"jorrdansoh"},"content":"        String trimmedHandle \u003d telegramHandle.trim();","lastModifiedDate":"2022-10-06"},{"lineNumber":66,"author":{"gitId":"jorrdansoh"},"content":"        if (!TelegramHandle.isValidTelegramHandle(trimmedHandle)) {","lastModifiedDate":"2022-10-06"},{"lineNumber":67,"author":{"gitId":"kaij77"},"content":"            throw new ParseException(TelegramHandle.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"jorrdansoh"},"content":"        return new TelegramHandle(trimmedHandle);","lastModifiedDate":"2022-10-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"darrtzj"},"content":"     * Parses a {@code String desiredDate} into an {@code MasteryCheck}.","lastModifiedDate":"2022-10-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"darrtzj"},"content":"     * @throws ParseException if the given {@code desiredDate} is invalid.","lastModifiedDate":"2022-10-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"jorrdansoh"},"content":"    public static MasteryCheck parseMasteryCheck(String desiredDate) throws ParseException {","lastModifiedDate":"2022-10-09"},{"lineNumber":79,"author":{"gitId":"jorrdansoh"},"content":"        requireNonNull(desiredDate);","lastModifiedDate":"2022-10-07"},{"lineNumber":80,"author":{"gitId":"jorrdansoh"},"content":"        String trimmedDate \u003d desiredDate.trim();","lastModifiedDate":"2022-10-09"},{"lineNumber":81,"author":{"gitId":"kaij77"},"content":"        if (!MasteryCheck.isValidMasteryCheck(trimmedDate)) {","lastModifiedDate":"2022-10-06"},{"lineNumber":82,"author":{"gitId":"kaij77"},"content":"            throw new ParseException(MasteryCheck.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"kaij77"},"content":"        LocalDate date \u003d LocalDate.parse(trimmedDate);","lastModifiedDate":"2022-10-06"},{"lineNumber":85,"author":{"gitId":"kaij77"},"content":"        return new MasteryCheck(date);","lastModifiedDate":"2022-10-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"kaij77"},"content":"     * Parses a {@code String email} into an {@code Consultation}.","lastModifiedDate":"2022-10-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"jorrdansoh"},"content":"    public static Consultation parseConsultation(String desiredDate) throws ParseException {","lastModifiedDate":"2022-10-09"},{"lineNumber":95,"author":{"gitId":"jorrdansoh"},"content":"        requireNonNull(desiredDate);","lastModifiedDate":"2022-10-07"},{"lineNumber":96,"author":{"gitId":"jorrdansoh"},"content":"        String trimmedDate \u003d desiredDate.trim();","lastModifiedDate":"2022-10-09"},{"lineNumber":97,"author":{"gitId":"kaij77"},"content":"        if (!Consultation.isValidConsultation(trimmedDate)) {","lastModifiedDate":"2022-10-06"},{"lineNumber":98,"author":{"gitId":"kaij77"},"content":"            throw new ParseException(Consultation.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"kaij77"},"content":"        LocalDate date \u003d LocalDate.parse(trimmedDate);","lastModifiedDate":"2022-10-06"},{"lineNumber":101,"author":{"gitId":"kaij77"},"content":"        return new Consultation(date);","lastModifiedDate":"2022-10-06"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":130,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":131,"author":{"gitId":"HowSuen"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":132,"author":{"gitId":"HowSuen"},"content":"     * Parses a {@code String grade} into a {@code Grade}.","lastModifiedDate":"2022-10-21"},{"lineNumber":133,"author":{"gitId":"HowSuen"},"content":"     *","lastModifiedDate":"2022-10-21"},{"lineNumber":134,"author":{"gitId":"HowSuen"},"content":"     * @param examName the name of the exam","lastModifiedDate":"2022-10-21"},{"lineNumber":135,"author":{"gitId":"HowSuen"},"content":"     * @param grade the score of the exam by the student","lastModifiedDate":"2022-10-21"},{"lineNumber":136,"author":{"gitId":"HowSuen"},"content":"     * @return the new Grade for that exam by that student","lastModifiedDate":"2022-10-21"},{"lineNumber":137,"author":{"gitId":"HowSuen"},"content":"     * @throws ParseException if the given {@code grade} is invalid.","lastModifiedDate":"2022-10-21"},{"lineNumber":138,"author":{"gitId":"HowSuen"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":139,"author":{"gitId":"HowSuen"},"content":"    public static Grade parseGrade(String examName, String grade) throws ParseException {","lastModifiedDate":"2022-10-21"},{"lineNumber":140,"author":{"gitId":"HowSuen"},"content":"        requireNonNull(grade);","lastModifiedDate":"2022-10-21"},{"lineNumber":141,"author":{"gitId":"HowSuen"},"content":"        String trimmedGrade \u003d grade.trim();","lastModifiedDate":"2022-10-21"},{"lineNumber":142,"author":{"gitId":"HowSuen"},"content":"        if (!Grade.isValidScore(trimmedGrade)) {","lastModifiedDate":"2022-10-21"},{"lineNumber":143,"author":{"gitId":"HowSuen"},"content":"            throw new ParseException(Grade.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-21"},{"lineNumber":144,"author":{"gitId":"HowSuen"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":145,"author":{"gitId":"HowSuen"},"content":"        return new Grade(examName, grade);","lastModifiedDate":"2022-10-21"},{"lineNumber":146,"author":{"gitId":"HowSuen"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":147,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":148,"author":{"gitId":"jorrdansoh"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":149,"author":{"gitId":"jorrdansoh"},"content":"     * Parses a {@code String order} into an {@code order}.","lastModifiedDate":"2022-10-20"},{"lineNumber":150,"author":{"gitId":"jorrdansoh"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-20"},{"lineNumber":151,"author":{"gitId":"jorrdansoh"},"content":"     *","lastModifiedDate":"2022-10-20"},{"lineNumber":152,"author":{"gitId":"jorrdansoh"},"content":"     * @throws ParseException if the given {@code order} is invalid.","lastModifiedDate":"2022-10-20"},{"lineNumber":153,"author":{"gitId":"jorrdansoh"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":154,"author":{"gitId":"jorrdansoh"},"content":"    public static Order parseOrder(String order) throws ParseException {","lastModifiedDate":"2022-10-20"},{"lineNumber":155,"author":{"gitId":"jorrdansoh"},"content":"        requireNonNull(order);","lastModifiedDate":"2022-10-20"},{"lineNumber":156,"author":{"gitId":"jorrdansoh"},"content":"        String trimmedOrder \u003d order.trim();","lastModifiedDate":"2022-10-20"},{"lineNumber":157,"author":{"gitId":"jorrdansoh"},"content":"        if (!Order.isValidOrder(trimmedOrder)) {","lastModifiedDate":"2022-10-20"},{"lineNumber":158,"author":{"gitId":"jorrdansoh"},"content":"            throw new ParseException(Order.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-20"},{"lineNumber":159,"author":{"gitId":"jorrdansoh"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":160,"author":{"gitId":"jorrdansoh"},"content":"        return new Order(trimmedOrder);","lastModifiedDate":"2022-10-20"},{"lineNumber":161,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":162,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":163,"author":{"gitId":"darrtzj"},"content":"    /**","lastModifiedDate":"2022-10-22"},{"lineNumber":164,"author":{"gitId":"darrtzj"},"content":"     * Parses a {@code String reservedKeyword} into a {@code ReservedKeyword}.","lastModifiedDate":"2022-10-22"},{"lineNumber":165,"author":{"gitId":"darrtzj"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-22"},{"lineNumber":166,"author":{"gitId":"darrtzj"},"content":"     *","lastModifiedDate":"2022-10-22"},{"lineNumber":167,"author":{"gitId":"darrtzj"},"content":"     * @throws ParseException if the given {@code reservedKeyword} is invalid.","lastModifiedDate":"2022-10-22"},{"lineNumber":168,"author":{"gitId":"darrtzj"},"content":"     */","lastModifiedDate":"2022-10-22"},{"lineNumber":169,"author":{"gitId":"darrtzj"},"content":"    public static ReservedKeyword parseReservedKeyword(String reservedKeyword) throws ParseException {","lastModifiedDate":"2022-10-22"},{"lineNumber":170,"author":{"gitId":"darrtzj"},"content":"        requireNonNull(reservedKeyword);","lastModifiedDate":"2022-10-22"},{"lineNumber":171,"author":{"gitId":"darrtzj"},"content":"        String trimmedReservedKeyword \u003d reservedKeyword.trim();","lastModifiedDate":"2022-10-22"},{"lineNumber":172,"author":{"gitId":"darrtzj"},"content":"        if (!ReservedKeyword.isValidReservedKeyword(reservedKeyword)) {","lastModifiedDate":"2022-10-22"},{"lineNumber":173,"author":{"gitId":"darrtzj"},"content":"            throw new ParseException(ReservedKeyword.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-22"},{"lineNumber":174,"author":{"gitId":"darrtzj"},"content":"        }","lastModifiedDate":"2022-10-22"},{"lineNumber":175,"author":{"gitId":"darrtzj"},"content":"        return new ReservedKeyword(trimmedReservedKeyword);","lastModifiedDate":"2022-10-22"},{"lineNumber":176,"author":{"gitId":"darrtzj"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":177,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":178,"author":{"gitId":"darrtzj"},"content":"    /**","lastModifiedDate":"2022-10-22"},{"lineNumber":179,"author":{"gitId":"darrtzj"},"content":"     * Parses a {@code String alias} into an {@code Alias}.","lastModifiedDate":"2022-10-22"},{"lineNumber":180,"author":{"gitId":"darrtzj"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-22"},{"lineNumber":181,"author":{"gitId":"darrtzj"},"content":"     */","lastModifiedDate":"2022-10-22"},{"lineNumber":182,"author":{"gitId":"darrtzj"},"content":"    public static Alias parseAlias(String alias) {","lastModifiedDate":"2022-10-22"},{"lineNumber":183,"author":{"gitId":"darrtzj"},"content":"        requireNonNull(alias);","lastModifiedDate":"2022-10-22"},{"lineNumber":184,"author":{"gitId":"darrtzj"},"content":"        String trimmedAlias \u003d alias.trim();","lastModifiedDate":"2022-10-22"},{"lineNumber":185,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":186,"author":{"gitId":"darrtzj"},"content":"        return new Alias(trimmedAlias);","lastModifiedDate":"2022-10-22"},{"lineNumber":187,"author":{"gitId":"darrtzj"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"jorrdansoh":28,"darrtzj":30,"kaij77":15,"-":92,"HowSuen":23}},{"path":"src/main/java/friday/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.logic.parser;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * E.g. \u0027t/\u0027 in \u0027add James t/ friend\u0027.","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public Prefix(String prefix) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return getPrefix();","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"jorrdansoh"},"content":"    public String getPrefixWithoutSlash() {","lastModifiedDate":"2022-11-05"},{"lineNumber":23,"author":{"gitId":"jorrdansoh"},"content":"        return prefix.replace(\"/\", \"\");","lastModifiedDate":"2022-11-05"},{"lineNumber":24,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":25,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Prefix)) {","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) obj;","lastModifiedDate":"2017-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return otherPrefix.getPrefix().equals(getPrefix());","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"jorrdansoh":4,"-":38,"HowSuen":1}},{"path":"src/main/java/friday/logic/parser/RemarkCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.logic.parser;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":3,"author":{"gitId":"HowSuen"},"content":"import static friday.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":6,"author":{"gitId":"HowSuen"},"content":"import friday.commons.core.Messages;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"HowSuen"},"content":"import friday.commons.core.index.Index;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"HowSuen"},"content":"import friday.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"HowSuen"},"content":"import friday.logic.commands.RemarkCommand;","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"HowSuen"},"content":"import friday.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"kaij77"},"content":"import friday.model.student.Remark;","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"// @@author HowSuen-reused","lastModifiedDate":"2022-11-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"// Reused from https://nus-cs2103-ay2223s1.github.io/tp/tutorials/AddRemark.html","lastModifiedDate":"2022-11-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"// with minor modifications","lastModifiedDate":"2022-11-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-09-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new {@code RemarkCommand} object","lastModifiedDate":"2022-09-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-09-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class RemarkCommandParser implements Parser\u003cRemarkCommand\u003e {","lastModifiedDate":"2022-09-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code RemarkCommand}","lastModifiedDate":"2022-09-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * and returns a {@code RemarkCommand} object for execution.","lastModifiedDate":"2022-09-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-09-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-09-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-09-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_REMARK);","lastModifiedDate":"2022-09-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2022-09-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2022-09-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-09-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2022-09-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                    RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-09-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2022-09-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return new RemarkCommand(index, new Remark(remark));","lastModifiedDate":"2022-09-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-09-13"}],"authorContributionMap":{"kaij77":1,"-":34,"HowSuen":7}},{"path":"src/main/java/friday/logic/parser/SortCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jorrdansoh"},"content":"package friday.logic.parser;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"jorrdansoh"},"content":"import static friday.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"jorrdansoh"},"content":"import static friday.logic.parser.CliSyntax.ORDER_ASCENDING;","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"jorrdansoh"},"content":"import static friday.logic.parser.CliSyntax.PREFIX_CONSULTATION;","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"Yuvaraj0702"},"content":"import static friday.logic.parser.CliSyntax.PREFIX_FINALS;","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"jorrdansoh"},"content":"import static friday.logic.parser.CliSyntax.PREFIX_MASTERYCHECK;","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"Yuvaraj0702"},"content":"import static friday.logic.parser.CliSyntax.PREFIX_MIDTERM;","lastModifiedDate":"2022-10-25"},{"lineNumber":9,"author":{"gitId":"jorrdansoh"},"content":"import static friday.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"Yuvaraj0702"},"content":"import static friday.logic.parser.CliSyntax.PREFIX_PRACTICAL;","lastModifiedDate":"2022-10-25"},{"lineNumber":11,"author":{"gitId":"Yuvaraj0702"},"content":"import static friday.logic.parser.CliSyntax.PREFIX_RA1;","lastModifiedDate":"2022-10-25"},{"lineNumber":12,"author":{"gitId":"Yuvaraj0702"},"content":"import static friday.logic.parser.CliSyntax.PREFIX_RA2;","lastModifiedDate":"2022-10-25"},{"lineNumber":13,"author":{"gitId":"jorrdansoh"},"content":"import static friday.logic.parser.CliSyntax.PREFIX_TELEGRAMHANDLE;","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"jorrdansoh"},"content":"import static java.util.Objects.isNull;","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"jorrdansoh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"jorrdansoh"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"jorrdansoh"},"content":"import friday.logic.commands.SortCommand;","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"jorrdansoh"},"content":"import friday.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"jorrdansoh"},"content":"import friday.model.student.Student;","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"jorrdansoh"},"content":"/**","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"jorrdansoh"},"content":" * Parses input arguments and creates a new SortCommand object","lastModifiedDate":"2022-10-21"},{"lineNumber":25,"author":{"gitId":"jorrdansoh"},"content":" */","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"jorrdansoh"},"content":"public class SortCommandParser implements Parser\u003cSortCommand\u003e {","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"jorrdansoh"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"jorrdansoh"},"content":"     * Parses the given {@code String} of arguments in the context of the SortCommand","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"jorrdansoh"},"content":"     * and returns a SortCommand object for execution.","lastModifiedDate":"2022-10-21"},{"lineNumber":31,"author":{"gitId":"Yuvaraj0702"},"content":"     *","lastModifiedDate":"2022-10-25"},{"lineNumber":32,"author":{"gitId":"jorrdansoh"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"jorrdansoh"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"jorrdansoh"},"content":"    public SortCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"jorrdansoh"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"jorrdansoh"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"jorrdansoh"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_TELEGRAMHANDLE, PREFIX_CONSULTATION,","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"Yuvaraj0702"},"content":"                        PREFIX_MASTERYCHECK, PREFIX_RA1, PREFIX_RA2, PREFIX_MIDTERM, PREFIX_PRACTICAL, PREFIX_FINALS);","lastModifiedDate":"2022-10-25"},{"lineNumber":39,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"jorrdansoh"},"content":"        // no valid tokens in the command","lastModifiedDate":"2022-11-05"},{"lineNumber":41,"author":{"gitId":"jorrdansoh"},"content":"        if (argMultimap.size() \u003c 1) {","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"jorrdansoh"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-20"},{"lineNumber":43,"author":{"gitId":"jorrdansoh"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":44,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":45,"author":{"gitId":"jorrdansoh"},"content":"        // too many tokens","lastModifiedDate":"2022-11-05"},{"lineNumber":46,"author":{"gitId":"jorrdansoh"},"content":"        if (argMultimap.size() \u003e 1) {","lastModifiedDate":"2022-10-20"},{"lineNumber":47,"author":{"gitId":"jorrdansoh"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-20"},{"lineNumber":48,"author":{"gitId":"jorrdansoh"},"content":"                    SortCommand.MESSAGE_TOO_MANY_CRITERIA));","lastModifiedDate":"2022-10-20"},{"lineNumber":49,"author":{"gitId":"jorrdansoh"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":50,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":51,"author":{"gitId":"Yuvaraj0702"},"content":"        return parseMain(argMultimap);","lastModifiedDate":"2022-10-25"},{"lineNumber":52,"author":{"gitId":"Yuvaraj0702"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":53,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":54,"author":{"gitId":"Yuvaraj0702"},"content":"    private SortCommand parseMain(ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2022-10-25"},{"lineNumber":55,"author":{"gitId":"jorrdansoh"},"content":"        assert argMultimap.size() \u003d\u003d 1;","lastModifiedDate":"2022-10-25"},{"lineNumber":56,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":57,"author":{"gitId":"jorrdansoh"},"content":"        Prefix prefix \u003d argMultimap.getFirstPrefix().orElse(null);","lastModifiedDate":"2022-10-30"},{"lineNumber":58,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":59,"author":{"gitId":"jorrdansoh"},"content":"        // Since parse asserts that there will be one and only one valid prefix in the argMultimap, prefix object","lastModifiedDate":"2022-11-05"},{"lineNumber":60,"author":{"gitId":"jorrdansoh"},"content":"        // should not be null","lastModifiedDate":"2022-11-05"},{"lineNumber":61,"author":{"gitId":"jorrdansoh"},"content":"        assert !isNull(prefix);","lastModifiedDate":"2022-10-30"},{"lineNumber":62,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":63,"author":{"gitId":"jorrdansoh"},"content":"        Comparator\u003cStudent\u003e comparator \u003d getComparator(argMultimap, prefix);","lastModifiedDate":"2022-10-30"},{"lineNumber":64,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":65,"author":{"gitId":"jorrdansoh"},"content":"        // comparator should never be null as the valid prefix will always have a value","lastModifiedDate":"2022-11-05"},{"lineNumber":66,"author":{"gitId":"jorrdansoh"},"content":"        assert !isNull(comparator);","lastModifiedDate":"2022-10-30"},{"lineNumber":67,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":68,"author":{"gitId":"jorrdansoh"},"content":"        return new SortCommand(comparator);","lastModifiedDate":"2022-10-30"},{"lineNumber":69,"author":{"gitId":"Yuvaraj0702"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":70,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":71,"author":{"gitId":"jorrdansoh"},"content":"    private Comparator\u003cStudent\u003e getComparator(ArgumentMultimap argMultimap, Prefix prefix) throws ParseException {","lastModifiedDate":"2022-10-30"},{"lineNumber":72,"author":{"gitId":"jorrdansoh"},"content":"        if (argMultimap.getValue(prefix).isEmpty()) {","lastModifiedDate":"2022-11-05"},{"lineNumber":73,"author":{"gitId":"jorrdansoh"},"content":"            return null;","lastModifiedDate":"2022-11-05"},{"lineNumber":74,"author":{"gitId":"jorrdansoh"},"content":"        }","lastModifiedDate":"2022-11-05"},{"lineNumber":75,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":76,"author":{"gitId":"jorrdansoh"},"content":"        Order order \u003d ParserUtil.parseOrder(argMultimap.getValue(prefix).get());","lastModifiedDate":"2022-10-30"},{"lineNumber":77,"author":{"gitId":"jorrdansoh"},"content":"        return (student1, student2) -\u003e order.equals(ORDER_ASCENDING)","lastModifiedDate":"2022-10-30"},{"lineNumber":78,"author":{"gitId":"jorrdansoh"},"content":"                ? compare(prefix, student1, student2)","lastModifiedDate":"2022-10-30"},{"lineNumber":79,"author":{"gitId":"jorrdansoh"},"content":"                : compare(prefix, student2, student1);","lastModifiedDate":"2022-10-30"},{"lineNumber":80,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-10-30"},{"lineNumber":81,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":82,"author":{"gitId":"jorrdansoh"},"content":"    private int compare(Prefix prefix, Student student1, Student student2) {","lastModifiedDate":"2022-10-30"},{"lineNumber":83,"author":{"gitId":"jorrdansoh"},"content":"        if (prefix.equals(PREFIX_NAME)) {","lastModifiedDate":"2022-10-30"},{"lineNumber":84,"author":{"gitId":"jorrdansoh"},"content":"            return student1.getName().compareTo(student2.getName());","lastModifiedDate":"2022-10-30"},{"lineNumber":85,"author":{"gitId":"jorrdansoh"},"content":"        } else if (prefix.equals(PREFIX_TELEGRAMHANDLE)) {","lastModifiedDate":"2022-10-30"},{"lineNumber":86,"author":{"gitId":"jorrdansoh"},"content":"            return student1.getTelegramHandle().compareTo(student2.getTelegramHandle());","lastModifiedDate":"2022-10-30"},{"lineNumber":87,"author":{"gitId":"jorrdansoh"},"content":"        } else if (prefix.equals(PREFIX_CONSULTATION)) {","lastModifiedDate":"2022-10-30"},{"lineNumber":88,"author":{"gitId":"jorrdansoh"},"content":"            return student1.getConsultation().compareTo(student2.getConsultation());","lastModifiedDate":"2022-10-30"},{"lineNumber":89,"author":{"gitId":"jorrdansoh"},"content":"        } else if (prefix.equals(PREFIX_MASTERYCHECK)) {","lastModifiedDate":"2022-10-30"},{"lineNumber":90,"author":{"gitId":"jorrdansoh"},"content":"            return student1.getMasteryCheck().compareTo(student2.getMasteryCheck());","lastModifiedDate":"2022-10-30"},{"lineNumber":91,"author":{"gitId":"jorrdansoh"},"content":"        } else {","lastModifiedDate":"2022-10-30"},{"lineNumber":92,"author":{"gitId":"jorrdansoh"},"content":"            return compareGrades(prefix, student1, student2);","lastModifiedDate":"2022-10-30"},{"lineNumber":93,"author":{"gitId":"jorrdansoh"},"content":"        }","lastModifiedDate":"2022-10-30"},{"lineNumber":94,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-10-30"},{"lineNumber":95,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":96,"author":{"gitId":"jorrdansoh"},"content":"    private int compareGrades(Prefix prefix, Student student1, Student student2) {","lastModifiedDate":"2022-10-30"},{"lineNumber":97,"author":{"gitId":"jorrdansoh"},"content":"        String exam \u003d \"\";","lastModifiedDate":"2022-10-30"},{"lineNumber":98,"author":{"gitId":"jorrdansoh"},"content":"        if (prefix.equals(PREFIX_RA1)) {","lastModifiedDate":"2022-10-30"},{"lineNumber":99,"author":{"gitId":"jorrdansoh"},"content":"            exam \u003d \"RA1\";","lastModifiedDate":"2022-10-30"},{"lineNumber":100,"author":{"gitId":"jorrdansoh"},"content":"        } else if (prefix.equals(PREFIX_RA2)) {","lastModifiedDate":"2022-10-30"},{"lineNumber":101,"author":{"gitId":"jorrdansoh"},"content":"            exam \u003d \"RA2\";","lastModifiedDate":"2022-10-30"},{"lineNumber":102,"author":{"gitId":"jorrdansoh"},"content":"        } else if (prefix.equals(PREFIX_MIDTERM)) {","lastModifiedDate":"2022-10-30"},{"lineNumber":103,"author":{"gitId":"jorrdansoh"},"content":"            exam \u003d \"Midterm\";","lastModifiedDate":"2022-10-30"},{"lineNumber":104,"author":{"gitId":"jorrdansoh"},"content":"        } else if (prefix.equals(PREFIX_PRACTICAL)) {","lastModifiedDate":"2022-10-30"},{"lineNumber":105,"author":{"gitId":"jorrdansoh"},"content":"            exam \u003d \"Practical\";","lastModifiedDate":"2022-10-30"},{"lineNumber":106,"author":{"gitId":"jorrdansoh"},"content":"        } else if (prefix.equals(PREFIX_FINALS)) {","lastModifiedDate":"2022-10-30"},{"lineNumber":107,"author":{"gitId":"jorrdansoh"},"content":"            exam \u003d \"Finals\";","lastModifiedDate":"2022-10-30"},{"lineNumber":108,"author":{"gitId":"jorrdansoh"},"content":"        }","lastModifiedDate":"2022-10-30"},{"lineNumber":109,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":110,"author":{"gitId":"jorrdansoh"},"content":"        assert !exam.equals(\"\");","lastModifiedDate":"2022-11-05"},{"lineNumber":111,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":112,"author":{"gitId":"jorrdansoh"},"content":"        return Double.compare(","lastModifiedDate":"2022-10-31"},{"lineNumber":113,"author":{"gitId":"jorrdansoh"},"content":"                Double.parseDouble(student1.getGradesList().getGrade(exam).getScore()),","lastModifiedDate":"2022-10-31"},{"lineNumber":114,"author":{"gitId":"jorrdansoh"},"content":"                Double.parseDouble(student2.getGradesList().getGrade(exam).getScore()));","lastModifiedDate":"2022-10-31"},{"lineNumber":115,"author":{"gitId":"Yuvaraj0702"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":116,"author":{"gitId":"Yuvaraj0702"},"content":"}","lastModifiedDate":"2022-10-25"},{"lineNumber":117,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-10-25"}],"authorContributionMap":{"jorrdansoh":97,"Yuvaraj0702":20}},{"path":"src/main/java/friday/logic/parser/UnaliasCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"darrtzj"},"content":"package friday.logic.parser;","lastModifiedDate":"2022-10-23"},{"lineNumber":2,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":3,"author":{"gitId":"darrtzj"},"content":"import static friday.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-23"},{"lineNumber":4,"author":{"gitId":"darrtzj"},"content":"import static friday.logic.parser.CliSyntax.PREFIX_ALIAS;","lastModifiedDate":"2022-10-23"},{"lineNumber":5,"author":{"gitId":"darrtzj"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-23"},{"lineNumber":6,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":7,"author":{"gitId":"darrtzj"},"content":"import friday.logic.commands.UnaliasCommand;","lastModifiedDate":"2022-10-23"},{"lineNumber":8,"author":{"gitId":"darrtzj"},"content":"import friday.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-23"},{"lineNumber":9,"author":{"gitId":"darrtzj"},"content":"import friday.model.alias.Alias;","lastModifiedDate":"2022-10-23"},{"lineNumber":10,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":11,"author":{"gitId":"darrtzj"},"content":"/**","lastModifiedDate":"2022-10-23"},{"lineNumber":12,"author":{"gitId":"darrtzj"},"content":" * Parses input arguments and creates a new UnaliasCommand object","lastModifiedDate":"2022-10-23"},{"lineNumber":13,"author":{"gitId":"darrtzj"},"content":" */","lastModifiedDate":"2022-10-23"},{"lineNumber":14,"author":{"gitId":"darrtzj"},"content":"public class UnaliasCommandParser implements Parser\u003cUnaliasCommand\u003e {","lastModifiedDate":"2022-10-23"},{"lineNumber":15,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":16,"author":{"gitId":"darrtzj"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":17,"author":{"gitId":"darrtzj"},"content":"     * Parses the given {@code String} of arguments in the context of the UnaliasCommand","lastModifiedDate":"2022-10-23"},{"lineNumber":18,"author":{"gitId":"darrtzj"},"content":"     * and returns an UnaliasCommand object for execution.","lastModifiedDate":"2022-10-23"},{"lineNumber":19,"author":{"gitId":"darrtzj"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-23"},{"lineNumber":20,"author":{"gitId":"darrtzj"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":21,"author":{"gitId":"darrtzj"},"content":"    public UnaliasCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-23"},{"lineNumber":22,"author":{"gitId":"darrtzj"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-10-23"},{"lineNumber":23,"author":{"gitId":"darrtzj"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_ALIAS);","lastModifiedDate":"2022-10-23"},{"lineNumber":24,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":25,"author":{"gitId":"darrtzj"},"content":"        Alias alias;","lastModifiedDate":"2022-10-23"},{"lineNumber":26,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":27,"author":{"gitId":"darrtzj"},"content":"        if (!argMultimap.getValue(PREFIX_ALIAS).isPresent()) {","lastModifiedDate":"2022-10-23"},{"lineNumber":28,"author":{"gitId":"darrtzj"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, UnaliasCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-23"},{"lineNumber":29,"author":{"gitId":"darrtzj"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":30,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":31,"author":{"gitId":"darrtzj"},"content":"        alias \u003d ParserUtil.parseAlias(argMultimap.getValue(PREFIX_ALIAS).get());","lastModifiedDate":"2022-10-23"},{"lineNumber":32,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":33,"author":{"gitId":"darrtzj"},"content":"        return new UnaliasCommand(alias);","lastModifiedDate":"2022-10-23"},{"lineNumber":34,"author":{"gitId":"darrtzj"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":35,"author":{"gitId":"darrtzj"},"content":"}","lastModifiedDate":"2022-10-23"},{"lineNumber":36,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"}],"authorContributionMap":{"darrtzj":36}},{"path":"src/main/java/friday/logic/parser/UnmarkMasteryCheckCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaij77"},"content":"package friday.logic.parser;","lastModifiedDate":"2022-10-25"},{"lineNumber":2,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":3,"author":{"gitId":"kaij77"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-25"},{"lineNumber":4,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":5,"author":{"gitId":"kaij77"},"content":"import friday.commons.core.Messages;","lastModifiedDate":"2022-10-25"},{"lineNumber":6,"author":{"gitId":"kaij77"},"content":"import friday.commons.core.index.Index;","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"kaij77"},"content":"import friday.logic.commands.UnmarkMasteryCheckCommand;","lastModifiedDate":"2022-10-25"},{"lineNumber":8,"author":{"gitId":"kaij77"},"content":"import friday.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-25"},{"lineNumber":9,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":10,"author":{"gitId":"kaij77"},"content":"/**","lastModifiedDate":"2022-10-25"},{"lineNumber":11,"author":{"gitId":"kaij77"},"content":" * Parses input arguments and creates a new UnmarkMasteryCheckCommand object","lastModifiedDate":"2022-10-25"},{"lineNumber":12,"author":{"gitId":"kaij77"},"content":" */","lastModifiedDate":"2022-10-25"},{"lineNumber":13,"author":{"gitId":"kaij77"},"content":"public class UnmarkMasteryCheckCommandParser implements Parser\u003cUnmarkMasteryCheckCommand\u003e {","lastModifiedDate":"2022-10-25"},{"lineNumber":14,"author":{"gitId":"kaij77"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":15,"author":{"gitId":"kaij77"},"content":"     * parses","lastModifiedDate":"2022-10-25"},{"lineNumber":16,"author":{"gitId":"kaij77"},"content":"     *","lastModifiedDate":"2022-10-25"},{"lineNumber":17,"author":{"gitId":"kaij77"},"content":"     * @param args","lastModifiedDate":"2022-10-25"},{"lineNumber":18,"author":{"gitId":"kaij77"},"content":"     * @return MarkMasteryCheckCommand","lastModifiedDate":"2022-10-25"},{"lineNumber":19,"author":{"gitId":"kaij77"},"content":"     * @throws ParseException","lastModifiedDate":"2022-10-25"},{"lineNumber":20,"author":{"gitId":"kaij77"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":21,"author":{"gitId":"kaij77"},"content":"    @Override","lastModifiedDate":"2022-10-25"},{"lineNumber":22,"author":{"gitId":"kaij77"},"content":"    public UnmarkMasteryCheckCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-25"},{"lineNumber":23,"author":{"gitId":"kaij77"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-10-25"},{"lineNumber":24,"author":{"gitId":"kaij77"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-10-25"},{"lineNumber":25,"author":{"gitId":"kaij77"},"content":"                ArgumentTokenizer.tokenize(args, CliSyntax.PREFIX_NAME, CliSyntax.PREFIX_TELEGRAMHANDLE,","lastModifiedDate":"2022-10-25"},{"lineNumber":26,"author":{"gitId":"kaij77"},"content":"                        CliSyntax.PREFIX_CONSULTATION, CliSyntax.PREFIX_MASTERYCHECK, CliSyntax.PREFIX_TAG);","lastModifiedDate":"2022-10-25"},{"lineNumber":27,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":28,"author":{"gitId":"kaij77"},"content":"        Index index;","lastModifiedDate":"2022-10-25"},{"lineNumber":29,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":30,"author":{"gitId":"kaij77"},"content":"        try {","lastModifiedDate":"2022-10-25"},{"lineNumber":31,"author":{"gitId":"kaij77"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-10-25"},{"lineNumber":32,"author":{"gitId":"kaij77"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-25"},{"lineNumber":33,"author":{"gitId":"kaij77"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-25"},{"lineNumber":34,"author":{"gitId":"kaij77"},"content":"                    UnmarkMasteryCheckCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-25"},{"lineNumber":35,"author":{"gitId":"kaij77"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":36,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":37,"author":{"gitId":"kaij77"},"content":"        return new UnmarkMasteryCheckCommand(index);","lastModifiedDate":"2022-10-25"},{"lineNumber":38,"author":{"gitId":"kaij77"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":39,"author":{"gitId":"kaij77"},"content":"}","lastModifiedDate":"2022-10-25"}],"authorContributionMap":{"kaij77":39}},{"path":"src/main/java/friday/logic/parser/exceptions/ParseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.logic.parser.exceptions;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"HowSuen"},"content":"import friday.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a parse error encountered by a parser.","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ParseException extends IllegalValueException {","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public ParseException(String message) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public ParseException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"-":15,"HowSuen":2}},{"path":"src/main/java/friday/model/Friday.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.model;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"darrtzj"},"content":"import java.util.Map;","lastModifiedDate":"2022-10-23"},{"lineNumber":7,"author":{"gitId":"darrtzj"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"darrtzj"},"content":"import friday.model.alias.Alias;","lastModifiedDate":"2022-10-23"},{"lineNumber":10,"author":{"gitId":"darrtzj"},"content":"import friday.model.alias.AliasMap;","lastModifiedDate":"2022-10-23"},{"lineNumber":11,"author":{"gitId":"darrtzj"},"content":"import friday.model.alias.ReservedKeyword;","lastModifiedDate":"2022-10-23"},{"lineNumber":12,"author":{"gitId":"kaij77"},"content":"import friday.model.student.Student;","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"jorrdansoh"},"content":"import friday.model.student.UniqueStudentList;","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"darrtzj"},"content":" * Wraps all data at the highest level","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"jorrdansoh"},"content":" * Duplicates are not allowed (by .isSameStudent comparison)","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"darrtzj"},"content":"public class Friday implements ReadOnlyFriday {","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"jorrdansoh"},"content":"    private final UniqueStudentList students;","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"darrtzj"},"content":"    private final AliasMap aliases;","lastModifiedDate":"2022-10-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"jorrdansoh"},"content":"        students \u003d new UniqueStudentList();","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"darrtzj"},"content":"        aliases \u003d new AliasMap();","lastModifiedDate":"2022-10-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"darrtzj"},"content":"    public Friday() {}","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"jorrdansoh"},"content":"     * Creates FRIDAY using the Students in the {@code toBeCopied}","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"darrtzj"},"content":"    public Friday(ReadOnlyFriday toBeCopied) {","lastModifiedDate":"2022-10-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"jorrdansoh"},"content":"     * Replaces the contents of the student list with {@code students}.","lastModifiedDate":"2022-10-20"},{"lineNumber":52,"author":{"gitId":"jorrdansoh"},"content":"     * {@code students} must not contain duplicate students.","lastModifiedDate":"2022-10-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"jorrdansoh"},"content":"    public void setStudents(List\u003cStudent\u003e students) {","lastModifiedDate":"2022-10-20"},{"lineNumber":55,"author":{"gitId":"jorrdansoh"},"content":"        this.students.setStudents(students);","lastModifiedDate":"2022-10-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"darrtzj"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":59,"author":{"gitId":"darrtzj"},"content":"     * Replaces the contents of the alias map with alias, keyword pair.","lastModifiedDate":"2022-10-23"},{"lineNumber":60,"author":{"gitId":"darrtzj"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":61,"author":{"gitId":"darrtzj"},"content":"    public void setAliases(Set\u003cMap.Entry\u003cAlias, ReservedKeyword\u003e\u003e aliases) {","lastModifiedDate":"2022-10-25"},{"lineNumber":62,"author":{"gitId":"darrtzj"},"content":"        this.aliases.setAliases(aliases);","lastModifiedDate":"2022-10-23"},{"lineNumber":63,"author":{"gitId":"darrtzj"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":64,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"darrtzj"},"content":"     * Resets the existing data of {@code FRIDAY} with {@code newData}.","lastModifiedDate":"2022-10-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":68,"author":{"gitId":"darrtzj"},"content":"    public void resetData(ReadOnlyFriday newData) {","lastModifiedDate":"2022-10-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":71,"author":{"gitId":"jorrdansoh"},"content":"        setStudents(newData.getStudentList());","lastModifiedDate":"2022-10-20"},{"lineNumber":72,"author":{"gitId":"darrtzj"},"content":"        setAliases(newData.getAliasMap());","lastModifiedDate":"2022-10-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"jorrdansoh"},"content":"    //// student-level operations","lastModifiedDate":"2022-10-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"jorrdansoh"},"content":"     * Returns true if a student with the same identity as {@code student} exists in FRIDAY.","lastModifiedDate":"2022-10-20"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"jorrdansoh"},"content":"    public boolean hasStudent(Student student) {","lastModifiedDate":"2022-10-20"},{"lineNumber":81,"author":{"gitId":"kaij77"},"content":"        requireNonNull(student);","lastModifiedDate":"2022-10-06"},{"lineNumber":82,"author":{"gitId":"jorrdansoh"},"content":"        return students.contains(student);","lastModifiedDate":"2022-10-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":86,"author":{"gitId":"jorrdansoh"},"content":"     * Adds a student to FRIDAY.","lastModifiedDate":"2022-10-20"},{"lineNumber":87,"author":{"gitId":"jorrdansoh"},"content":"     * The student must not already exist in FRIDAY.","lastModifiedDate":"2022-10-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"jorrdansoh"},"content":"    public void addStudent(Student p) {","lastModifiedDate":"2022-10-20"},{"lineNumber":90,"author":{"gitId":"jorrdansoh"},"content":"        students.add(p);","lastModifiedDate":"2022-10-20"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":94,"author":{"gitId":"jorrdansoh"},"content":"     * Replaces the given student {@code target} in the list with {@code editedStudent}.","lastModifiedDate":"2022-10-20"},{"lineNumber":95,"author":{"gitId":"darrtzj"},"content":"     * {@code target} must exist in FRIDAY.","lastModifiedDate":"2022-10-06"},{"lineNumber":96,"author":{"gitId":"jorrdansoh"},"content":"     * The student identity of {@code editedStudent} must not be the same as another existing student in FRIDAY.","lastModifiedDate":"2022-10-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":98,"author":{"gitId":"jorrdansoh"},"content":"    public void setStudent(Student target, Student editedStudent) {","lastModifiedDate":"2022-10-20"},{"lineNumber":99,"author":{"gitId":"kaij77"},"content":"        requireNonNull(editedStudent);","lastModifiedDate":"2022-10-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":101,"author":{"gitId":"jorrdansoh"},"content":"        students.setStudent(target, editedStudent);","lastModifiedDate":"2022-10-20"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"darrtzj"},"content":"     * Removes {@code key} from this {@code FRIDAY}.","lastModifiedDate":"2022-10-06"},{"lineNumber":106,"author":{"gitId":"darrtzj"},"content":"     * {@code key} must exist in FRIDAY.","lastModifiedDate":"2022-10-06"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":108,"author":{"gitId":"jorrdansoh"},"content":"    public void removeStudent(Student key) {","lastModifiedDate":"2022-10-20"},{"lineNumber":109,"author":{"gitId":"jorrdansoh"},"content":"        students.remove(key);","lastModifiedDate":"2022-10-20"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"darrtzj"},"content":"    //// alias-level operations","lastModifiedDate":"2022-10-23"},{"lineNumber":113,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":114,"author":{"gitId":"darrtzj"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":115,"author":{"gitId":"darrtzj"},"content":"     * Returns true if an alias with the same identity as {@code alias} exists in FRIDAY.","lastModifiedDate":"2022-10-23"},{"lineNumber":116,"author":{"gitId":"darrtzj"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":117,"author":{"gitId":"darrtzj"},"content":"    public boolean hasAlias(Alias alias) {","lastModifiedDate":"2022-10-23"},{"lineNumber":118,"author":{"gitId":"darrtzj"},"content":"        requireNonNull(alias);","lastModifiedDate":"2022-10-23"},{"lineNumber":119,"author":{"gitId":"darrtzj"},"content":"        return aliases.contains(alias);","lastModifiedDate":"2022-10-25"},{"lineNumber":120,"author":{"gitId":"darrtzj"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":121,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":122,"author":{"gitId":"darrtzj"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":123,"author":{"gitId":"darrtzj"},"content":"     * Adds an alias that maps to keyword to FRIDAY.","lastModifiedDate":"2022-10-23"},{"lineNumber":124,"author":{"gitId":"darrtzj"},"content":"     * The alias must not already exist in FRIDAY.","lastModifiedDate":"2022-10-23"},{"lineNumber":125,"author":{"gitId":"darrtzj"},"content":"     * The keyword must be a valid reserved keyword.","lastModifiedDate":"2022-10-23"},{"lineNumber":126,"author":{"gitId":"darrtzj"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":127,"author":{"gitId":"darrtzj"},"content":"    public void addAlias(Alias toAdd, ReservedKeyword keyword) {","lastModifiedDate":"2022-10-23"},{"lineNumber":128,"author":{"gitId":"darrtzj"},"content":"        aliases.add(toAdd, keyword);","lastModifiedDate":"2022-10-23"},{"lineNumber":129,"author":{"gitId":"darrtzj"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":130,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":131,"author":{"gitId":"darrtzj"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":132,"author":{"gitId":"darrtzj"},"content":"     * Removes {@code key} from this {@code FRIDAY}.","lastModifiedDate":"2022-10-23"},{"lineNumber":133,"author":{"gitId":"darrtzj"},"content":"     * {@code key} must exist in FRIDAY.","lastModifiedDate":"2022-10-23"},{"lineNumber":134,"author":{"gitId":"darrtzj"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":135,"author":{"gitId":"darrtzj"},"content":"    public void removeAlias(Alias key) {","lastModifiedDate":"2022-10-23"},{"lineNumber":136,"author":{"gitId":"darrtzj"},"content":"        aliases.remove(key);","lastModifiedDate":"2022-10-23"},{"lineNumber":137,"author":{"gitId":"darrtzj"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":138,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":139,"author":{"gitId":"darrtzj"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":140,"author":{"gitId":"darrtzj"},"content":"     * Returns the keyword map by a {@code key}.","lastModifiedDate":"2022-10-23"},{"lineNumber":141,"author":{"gitId":"darrtzj"},"content":"     * {@code key} must exist in FRIDAY.","lastModifiedDate":"2022-10-23"},{"lineNumber":142,"author":{"gitId":"darrtzj"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":143,"author":{"gitId":"darrtzj"},"content":"    public String getKeyword(String key) {","lastModifiedDate":"2022-10-23"},{"lineNumber":144,"author":{"gitId":"darrtzj"},"content":"        return aliases.getKeyword(key);","lastModifiedDate":"2022-10-23"},{"lineNumber":145,"author":{"gitId":"darrtzj"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":146,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":147,"author":{"gitId":"darrtzj"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":148,"author":{"gitId":"darrtzj"},"content":"     * Returns the String representation of all aliases in FRIDAY.","lastModifiedDate":"2022-10-23"},{"lineNumber":149,"author":{"gitId":"darrtzj"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":150,"author":{"gitId":"darrtzj"},"content":"    public String displayAliases() {","lastModifiedDate":"2022-10-23"},{"lineNumber":151,"author":{"gitId":"darrtzj"},"content":"        return aliases.displayAliases();","lastModifiedDate":"2022-10-23"},{"lineNumber":152,"author":{"gitId":"darrtzj"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":153,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"jorrdansoh"},"content":"        return students.asUnmodifiableObservableList().size() + \" students\";","lastModifiedDate":"2022-10-20"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"jorrdansoh"},"content":"    public ObservableList\u003cStudent\u003e getStudentList() {","lastModifiedDate":"2022-10-20"},{"lineNumber":164,"author":{"gitId":"jorrdansoh"},"content":"        return students.asUnmodifiableObservableList();","lastModifiedDate":"2022-10-20"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":167,"author":{"gitId":"darrtzj"},"content":"    @Override","lastModifiedDate":"2022-10-23"},{"lineNumber":168,"author":{"gitId":"darrtzj"},"content":"    public Set\u003cMap.Entry\u003cAlias, ReservedKeyword\u003e\u003e getAliasMap() {","lastModifiedDate":"2022-10-25"},{"lineNumber":169,"author":{"gitId":"darrtzj"},"content":"        return aliases.entrySet();","lastModifiedDate":"2022-10-23"},{"lineNumber":170,"author":{"gitId":"darrtzj"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":171,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":175,"author":{"gitId":"darrtzj"},"content":"                || (other instanceof Friday // instanceof handles nulls","lastModifiedDate":"2022-10-06"},{"lineNumber":176,"author":{"gitId":"darrtzj"},"content":"                \u0026\u0026 students.equals(((Friday) other).students)","lastModifiedDate":"2022-10-23"},{"lineNumber":177,"author":{"gitId":"darrtzj"},"content":"                \u0026\u0026 aliases.equals(((Friday) other).aliases));","lastModifiedDate":"2022-10-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":182,"author":{"gitId":"jorrdansoh"},"content":"        return students.hashCode();","lastModifiedDate":"2022-10-20"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":184,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jorrdansoh":29,"darrtzj":74,"kaij77":3,"-":77,"HowSuen":1}},{"path":"src/main/java/friday/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.model;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"jorrdansoh"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"HowSuen"},"content":"import friday.commons.core.GuiSettings;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"darrtzj"},"content":"import friday.model.alias.Alias;","lastModifiedDate":"2022-10-23"},{"lineNumber":9,"author":{"gitId":"darrtzj"},"content":"import friday.model.alias.ReservedKeyword;","lastModifiedDate":"2022-10-23"},{"lineNumber":10,"author":{"gitId":"kaij77"},"content":"import friday.model.student.Student;","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":18,"author":{"gitId":"Yuvaraj0702"},"content":"    Predicate\u003cStudent\u003e PREDICATE_SHOW_ALL_STUDENTS \u003d unused -\u003e true;","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"darrtzj"},"content":"     * Returns the user prefs\u0027 FRIDAY file path.","lastModifiedDate":"2022-10-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"darrtzj"},"content":"    Path getFridayFilePath();","lastModifiedDate":"2022-10-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"darrtzj"},"content":"     * Sets the user prefs\u0027 FRIDAY file path.","lastModifiedDate":"2022-10-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"darrtzj"},"content":"    void setFridayFilePath(Path fridayFilePath);","lastModifiedDate":"2022-10-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"darrtzj"},"content":"     * Replaces FRIDAY\u0027s data with the data in {@code friday}.","lastModifiedDate":"2022-10-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"darrtzj"},"content":"    void setFriday(ReadOnlyFriday friday);","lastModifiedDate":"2022-10-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"darrtzj"},"content":"    /** Returns FRIDAY */","lastModifiedDate":"2022-10-06"},{"lineNumber":56,"author":{"gitId":"darrtzj"},"content":"    ReadOnlyFriday getFriday();","lastModifiedDate":"2022-10-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"jorrdansoh"},"content":"     * Returns true if a student with the same identity as {@code student} exists in FRIDAY.","lastModifiedDate":"2022-10-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"jorrdansoh"},"content":"    boolean hasStudent(Student student);","lastModifiedDate":"2022-10-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"jorrdansoh"},"content":"     * Deletes the given student.","lastModifiedDate":"2022-10-06"},{"lineNumber":65,"author":{"gitId":"jorrdansoh"},"content":"     * The student must exist in STUDENT.","lastModifiedDate":"2022-10-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"jorrdansoh"},"content":"    void deleteStudent(Student target);","lastModifiedDate":"2022-10-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"jorrdansoh"},"content":"     * Adds the given student.","lastModifiedDate":"2022-10-06"},{"lineNumber":71,"author":{"gitId":"jorrdansoh"},"content":"     * {@code student} must not already exist in FRIDAY.","lastModifiedDate":"2022-10-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"jorrdansoh"},"content":"    void addStudent(Student student);","lastModifiedDate":"2022-10-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":76,"author":{"gitId":"jorrdansoh"},"content":"     * Replaces the given student {@code target} with {@code editedStudent}.","lastModifiedDate":"2022-10-06"},{"lineNumber":77,"author":{"gitId":"jorrdansoh"},"content":"     * {@code target} must exist in FRIDAY.","lastModifiedDate":"2022-10-06"},{"lineNumber":78,"author":{"gitId":"jorrdansoh"},"content":"     * The student identity of {@code editedStudent} must not be the same as another existing student in FRIDAY.","lastModifiedDate":"2022-10-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":80,"author":{"gitId":"jorrdansoh"},"content":"    void setStudent(Student target, Student editedStudent);","lastModifiedDate":"2022-10-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":82,"author":{"gitId":"jorrdansoh"},"content":"    /** Returns an unmodifiable view of the filtered student list */","lastModifiedDate":"2022-10-06"},{"lineNumber":83,"author":{"gitId":"jorrdansoh"},"content":"    ObservableList\u003cStudent\u003e getStudentList();","lastModifiedDate":"2022-10-20"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":86,"author":{"gitId":"jorrdansoh"},"content":"     * Updates the filter of the filtered student list to filter by the given {@code predicate}.","lastModifiedDate":"2022-10-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":89,"author":{"gitId":"jorrdansoh"},"content":"    void updateFilteredStudentList(Predicate\u003cStudent\u003e predicate);","lastModifiedDate":"2022-10-06"},{"lineNumber":90,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":91,"author":{"gitId":"jorrdansoh"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":92,"author":{"gitId":"jorrdansoh"},"content":"     * Updates the comparator of the sorted student list to sort by the given {@code comparator}.","lastModifiedDate":"2022-10-20"},{"lineNumber":93,"author":{"gitId":"jorrdansoh"},"content":"     * @throws NullPointerException if {@code comparator} is null.","lastModifiedDate":"2022-10-20"},{"lineNumber":94,"author":{"gitId":"jorrdansoh"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":95,"author":{"gitId":"jorrdansoh"},"content":"    void updateSortedStudentList(Comparator\u003cStudent\u003e comparator);","lastModifiedDate":"2022-10-20"},{"lineNumber":96,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":97,"author":{"gitId":"darrtzj"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":98,"author":{"gitId":"darrtzj"},"content":"     * Returns true if an alias with the same identity as {@code alias} exists in FRIDAY.","lastModifiedDate":"2022-10-23"},{"lineNumber":99,"author":{"gitId":"darrtzj"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":100,"author":{"gitId":"darrtzj"},"content":"    boolean hasAlias(Alias alias);","lastModifiedDate":"2022-10-23"},{"lineNumber":101,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":102,"author":{"gitId":"darrtzj"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":103,"author":{"gitId":"darrtzj"},"content":"     * Adds an alias that maps to keyword to FRIDAY.","lastModifiedDate":"2022-10-23"},{"lineNumber":104,"author":{"gitId":"darrtzj"},"content":"     * The alias must not already exist in FRIDAY.","lastModifiedDate":"2022-10-23"},{"lineNumber":105,"author":{"gitId":"darrtzj"},"content":"     * The keyword must be a valid reserved keyword.","lastModifiedDate":"2022-10-23"},{"lineNumber":106,"author":{"gitId":"darrtzj"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":107,"author":{"gitId":"darrtzj"},"content":"    void addAlias(Alias alias, ReservedKeyword keyword);","lastModifiedDate":"2022-10-23"},{"lineNumber":108,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":109,"author":{"gitId":"darrtzj"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":110,"author":{"gitId":"darrtzj"},"content":"     * Deletes the given alias.","lastModifiedDate":"2022-10-23"},{"lineNumber":111,"author":{"gitId":"darrtzj"},"content":"     * The alias must exist in STUDENT.","lastModifiedDate":"2022-10-23"},{"lineNumber":112,"author":{"gitId":"darrtzj"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":113,"author":{"gitId":"darrtzj"},"content":"    void removeAlias(Alias target);","lastModifiedDate":"2022-10-23"},{"lineNumber":114,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":115,"author":{"gitId":"darrtzj"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":116,"author":{"gitId":"darrtzj"},"content":"     * Returns the keyword map by a {@code key}.","lastModifiedDate":"2022-10-23"},{"lineNumber":117,"author":{"gitId":"darrtzj"},"content":"     * {@code key} must exist in FRIDAY.","lastModifiedDate":"2022-10-23"},{"lineNumber":118,"author":{"gitId":"darrtzj"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":119,"author":{"gitId":"darrtzj"},"content":"    String getKeyword(String key);","lastModifiedDate":"2022-10-23"},{"lineNumber":120,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":121,"author":{"gitId":"darrtzj"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":122,"author":{"gitId":"darrtzj"},"content":"     * Returns the String representation of all aliases in FRIDAY.","lastModifiedDate":"2022-10-23"},{"lineNumber":123,"author":{"gitId":"darrtzj"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":124,"author":{"gitId":"darrtzj"},"content":"    String displayAliases();","lastModifiedDate":"2022-10-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"jorrdansoh":23,"Yuvaraj0702":1,"darrtzj":39,"kaij77":1,"-":59,"HowSuen":2}},{"path":"src/main/java/friday/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.model;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"HowSuen"},"content":"import static friday.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"HowSuen"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"jorrdansoh"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"HowSuen"},"content":"import friday.commons.core.GuiSettings;","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"HowSuen"},"content":"import friday.commons.core.LogsCenter;","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"darrtzj"},"content":"import friday.model.alias.Alias;","lastModifiedDate":"2022-10-23"},{"lineNumber":14,"author":{"gitId":"darrtzj"},"content":"import friday.model.alias.ReservedKeyword;","lastModifiedDate":"2022-10-23"},{"lineNumber":15,"author":{"gitId":"kaij77"},"content":"import friday.model.student.Student;","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":18,"author":{"gitId":"jorrdansoh"},"content":"import javafx.collections.transformation.SortedList;","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"darrtzj"},"content":" * Represents the in-memory model of FRIDAY\u0027s data.","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"darrtzj"},"content":"    private final Friday friday;","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"kaij77"},"content":"    private final FilteredList\u003cStudent\u003e filteredStudents;","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"jorrdansoh"},"content":"    private final SortedList\u003cStudent\u003e sortedStudents;","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"jorrdansoh"},"content":"    private ObservableList\u003cStudent\u003e students;","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"darrtzj"},"content":"     * Initializes a ModelManager with the given FRIDAY and userPrefs.","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"darrtzj"},"content":"    public ModelManager(ReadOnlyFriday friday, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"darrtzj"},"content":"        requireAllNonNull(friday, userPrefs);","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"Yuvaraj0702"},"content":"        logger.fine(\"Initializing with FRIDAY: \" + friday + \" and user prefs \" + userPrefs);","lastModifiedDate":"2022-10-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"darrtzj"},"content":"        this.friday \u003d new Friday(friday);","lastModifiedDate":"2022-10-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"jorrdansoh"},"content":"        this.students \u003d this.friday.getStudentList();","lastModifiedDate":"2022-10-20"},{"lineNumber":43,"author":{"gitId":"jorrdansoh"},"content":"        this.filteredStudents \u003d new FilteredList\u003c\u003e(students);","lastModifiedDate":"2022-11-05"},{"lineNumber":44,"author":{"gitId":"jorrdansoh"},"content":"        this.sortedStudents \u003d new SortedList\u003c\u003e(students);","lastModifiedDate":"2022-11-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"darrtzj"},"content":"        this(new Friday(), new UserPrefs());","lastModifiedDate":"2022-10-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"darrtzj"},"content":"    public Path getFridayFilePath() {","lastModifiedDate":"2022-10-06"},{"lineNumber":76,"author":{"gitId":"Yuvaraj0702"},"content":"        return userPrefs.getFridayFilePath();","lastModifiedDate":"2022-10-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"darrtzj"},"content":"    public void setFridayFilePath(Path fridayFilePath) {","lastModifiedDate":"2022-10-06"},{"lineNumber":80,"author":{"gitId":"darrtzj"},"content":"        requireNonNull(fridayFilePath);","lastModifiedDate":"2022-10-06"},{"lineNumber":81,"author":{"gitId":"Yuvaraj0702"},"content":"        userPrefs.setFridayFilePath(fridayFilePath);","lastModifiedDate":"2022-10-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"darrtzj"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d FRIDAY \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"darrtzj"},"content":"    public void setFriday(ReadOnlyFriday friday) {","lastModifiedDate":"2022-10-06"},{"lineNumber":87,"author":{"gitId":"darrtzj"},"content":"        this.friday.resetData(friday);","lastModifiedDate":"2022-10-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":91,"author":{"gitId":"darrtzj"},"content":"    public ReadOnlyFriday getFriday() {","lastModifiedDate":"2022-10-06"},{"lineNumber":92,"author":{"gitId":"darrtzj"},"content":"        return friday;","lastModifiedDate":"2022-10-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"jorrdansoh"},"content":"    public boolean hasStudent(Student student) {","lastModifiedDate":"2022-10-06"},{"lineNumber":97,"author":{"gitId":"kaij77"},"content":"        requireNonNull(student);","lastModifiedDate":"2022-10-06"},{"lineNumber":98,"author":{"gitId":"jorrdansoh"},"content":"        return friday.hasStudent(student);","lastModifiedDate":"2022-10-20"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":102,"author":{"gitId":"jorrdansoh"},"content":"    public void deleteStudent(Student target) {","lastModifiedDate":"2022-10-06"},{"lineNumber":103,"author":{"gitId":"jorrdansoh"},"content":"        friday.removeStudent(target);","lastModifiedDate":"2022-10-20"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":107,"author":{"gitId":"jorrdansoh"},"content":"    public void addStudent(Student student) {","lastModifiedDate":"2022-10-06"},{"lineNumber":108,"author":{"gitId":"jorrdansoh"},"content":"        friday.addStudent(student);","lastModifiedDate":"2022-10-20"},{"lineNumber":109,"author":{"gitId":"Yuvaraj0702"},"content":"        updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2022-10-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":113,"author":{"gitId":"jorrdansoh"},"content":"    public void setStudent(Student target, Student editedStudent) {","lastModifiedDate":"2022-10-06"},{"lineNumber":114,"author":{"gitId":"kaij77"},"content":"        requireAllNonNull(target, editedStudent);","lastModifiedDate":"2022-10-06"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":116,"author":{"gitId":"jorrdansoh"},"content":"        friday.setStudent(target, editedStudent);","lastModifiedDate":"2022-10-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":119,"author":{"gitId":"darrtzj"},"content":"    @Override","lastModifiedDate":"2022-10-23"},{"lineNumber":120,"author":{"gitId":"darrtzj"},"content":"    public boolean hasAlias(Alias alias) {","lastModifiedDate":"2022-10-23"},{"lineNumber":121,"author":{"gitId":"darrtzj"},"content":"        requireNonNull(alias);","lastModifiedDate":"2022-10-23"},{"lineNumber":122,"author":{"gitId":"darrtzj"},"content":"        return friday.hasAlias(alias);","lastModifiedDate":"2022-10-23"},{"lineNumber":123,"author":{"gitId":"darrtzj"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":124,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":125,"author":{"gitId":"darrtzj"},"content":"    @Override","lastModifiedDate":"2022-10-23"},{"lineNumber":126,"author":{"gitId":"darrtzj"},"content":"    public void addAlias(Alias toAdd, ReservedKeyword keyword) {","lastModifiedDate":"2022-10-23"},{"lineNumber":127,"author":{"gitId":"darrtzj"},"content":"        friday.addAlias(toAdd, keyword);","lastModifiedDate":"2022-10-23"},{"lineNumber":128,"author":{"gitId":"darrtzj"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":129,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":130,"author":{"gitId":"darrtzj"},"content":"    @Override","lastModifiedDate":"2022-10-23"},{"lineNumber":131,"author":{"gitId":"darrtzj"},"content":"    public void removeAlias(Alias key) {","lastModifiedDate":"2022-10-23"},{"lineNumber":132,"author":{"gitId":"darrtzj"},"content":"        friday.removeAlias(key);","lastModifiedDate":"2022-10-23"},{"lineNumber":133,"author":{"gitId":"darrtzj"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":134,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":135,"author":{"gitId":"darrtzj"},"content":"    @Override","lastModifiedDate":"2022-10-23"},{"lineNumber":136,"author":{"gitId":"darrtzj"},"content":"    public String getKeyword(String key) {","lastModifiedDate":"2022-10-23"},{"lineNumber":137,"author":{"gitId":"darrtzj"},"content":"        return friday.getKeyword(key);","lastModifiedDate":"2022-10-23"},{"lineNumber":138,"author":{"gitId":"darrtzj"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":139,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":140,"author":{"gitId":"darrtzj"},"content":"    @Override","lastModifiedDate":"2022-10-23"},{"lineNumber":141,"author":{"gitId":"darrtzj"},"content":"    public String displayAliases() {","lastModifiedDate":"2022-10-23"},{"lineNumber":142,"author":{"gitId":"darrtzj"},"content":"        return friday.displayAliases();","lastModifiedDate":"2022-10-23"},{"lineNumber":143,"author":{"gitId":"darrtzj"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":144,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":145,"author":{"gitId":"jorrdansoh"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Student List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-20"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":148,"author":{"gitId":"jorrdansoh"},"content":"     * Returns an unmodifiable view of the list of {@code Student} backed by the internal list of","lastModifiedDate":"2022-10-20"},{"lineNumber":149,"author":{"gitId":"darrtzj"},"content":"     * {@code versionedFRIDAY}","lastModifiedDate":"2022-10-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":152,"author":{"gitId":"jorrdansoh"},"content":"    public ObservableList\u003cStudent\u003e getStudentList() {","lastModifiedDate":"2022-10-20"},{"lineNumber":153,"author":{"gitId":"jorrdansoh"},"content":"        return students;","lastModifiedDate":"2022-10-20"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":157,"author":{"gitId":"jorrdansoh"},"content":"    public void updateFilteredStudentList(Predicate\u003cStudent\u003e predicate) {","lastModifiedDate":"2022-10-06"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":159,"author":{"gitId":"kaij77"},"content":"        filteredStudents.setPredicate(predicate);","lastModifiedDate":"2022-10-06"},{"lineNumber":160,"author":{"gitId":"jorrdansoh"},"content":"        students \u003d filteredStudents;","lastModifiedDate":"2022-10-20"},{"lineNumber":161,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":162,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":163,"author":{"gitId":"jorrdansoh"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":164,"author":{"gitId":"jorrdansoh"},"content":"    public void updateSortedStudentList(Comparator\u003cStudent\u003e comparator) {","lastModifiedDate":"2022-10-20"},{"lineNumber":165,"author":{"gitId":"jorrdansoh"},"content":"        requireNonNull(comparator);","lastModifiedDate":"2022-10-20"},{"lineNumber":166,"author":{"gitId":"jorrdansoh"},"content":"        sortedStudents.setComparator(comparator);","lastModifiedDate":"2022-10-20"},{"lineNumber":167,"author":{"gitId":"jorrdansoh"},"content":"        students \u003d sortedStudents;","lastModifiedDate":"2022-10-20"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":184,"author":{"gitId":"darrtzj"},"content":"        return friday.equals(other.friday)","lastModifiedDate":"2022-10-06"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":186,"author":{"gitId":"kaij77"},"content":"                \u0026\u0026 filteredStudents.equals(other.filteredStudents);","lastModifiedDate":"2022-10-06"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jorrdansoh":28,"Yuvaraj0702":4,"darrtzj":45,"kaij77":6,"-":101,"HowSuen":5}},{"path":"src/main/java/friday/model/ReadOnlyFriday.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.model;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"darrtzj"},"content":"import java.util.Map;","lastModifiedDate":"2022-10-23"},{"lineNumber":4,"author":{"gitId":"darrtzj"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-23"},{"lineNumber":5,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":6,"author":{"gitId":"darrtzj"},"content":"import friday.model.alias.Alias;","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"darrtzj"},"content":"import friday.model.alias.ReservedKeyword;","lastModifiedDate":"2022-10-25"},{"lineNumber":8,"author":{"gitId":"kaij77"},"content":"import friday.model.student.Student;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"darrtzj"},"content":" * Unmodifiable view of FRIDAY.","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"darrtzj"},"content":"public interface ReadOnlyFriday {","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"jorrdansoh"},"content":"     * Returns an unmodifiable view of the students list.","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"jorrdansoh"},"content":"     * This list will not contain any duplicate students.","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"jorrdansoh"},"content":"    ObservableList\u003cStudent\u003e getStudentList();","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"darrtzj"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":23,"author":{"gitId":"darrtzj"},"content":"     * Returns a Set view of the mappings contained in alias map.","lastModifiedDate":"2022-10-23"},{"lineNumber":24,"author":{"gitId":"darrtzj"},"content":"     * This set will not contain any duplicate aliases.","lastModifiedDate":"2022-10-23"},{"lineNumber":25,"author":{"gitId":"darrtzj"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":26,"author":{"gitId":"darrtzj"},"content":"    Set\u003cMap.Entry\u003cAlias, ReservedKeyword\u003e\u003e getAliasMap();","lastModifiedDate":"2022-10-25"},{"lineNumber":27,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jorrdansoh":3,"darrtzj":13,"kaij77":1,"-":10,"HowSuen":1}},{"path":"src/main/java/friday/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.model;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"HowSuen"},"content":"import friday.commons.core.GuiSettings;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"Yuvaraj0702"},"content":"    Path getFridayFilePath();","lastModifiedDate":"2022-10-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"Yuvaraj0702":1,"-":13,"HowSuen":2}},{"path":"src/main/java/friday/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.model;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"HowSuen"},"content":"import friday.commons.core.GuiSettings;","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"darrtzj"},"content":"    private Path fridayFilePath \u003d Paths.get(\"data\" , \"friday.json\");","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"Yuvaraj0702"},"content":"        setFridayFilePath(newUserPrefs.getFridayFilePath());","lastModifiedDate":"2022-10-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"Yuvaraj0702"},"content":"    public Path getFridayFilePath() {","lastModifiedDate":"2022-10-24"},{"lineNumber":51,"author":{"gitId":"darrtzj"},"content":"        return fridayFilePath;","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"Yuvaraj0702"},"content":"    public void setFridayFilePath(Path fridayFilePath) {","lastModifiedDate":"2022-10-24"},{"lineNumber":55,"author":{"gitId":"Yuvaraj0702"},"content":"        requireNonNull(fridayFilePath);","lastModifiedDate":"2022-10-24"},{"lineNumber":56,"author":{"gitId":"Yuvaraj0702"},"content":"        this.fridayFilePath \u003d fridayFilePath;","lastModifiedDate":"2022-10-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"darrtzj"},"content":"                \u0026\u0026 fridayFilePath.equals(o.fridayFilePath);","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"darrtzj"},"content":"        return Objects.hash(guiSettings, fridayFilePath);","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"darrtzj"},"content":"        sb.append(\"\\nLocal data file location : \" + fridayFilePath);","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Yuvaraj0702":5,"darrtzj":5,"-":75,"HowSuen":2}},{"path":"src/main/java/friday/model/alias/Alias.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"darrtzj"},"content":"package friday.model.alias;","lastModifiedDate":"2022-10-22"},{"lineNumber":2,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":3,"author":{"gitId":"darrtzj"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-22"},{"lineNumber":4,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":5,"author":{"gitId":"darrtzj"},"content":"/**","lastModifiedDate":"2022-10-22"},{"lineNumber":6,"author":{"gitId":"darrtzj"},"content":" * Represents an Alias in FRIDAY.","lastModifiedDate":"2022-10-23"},{"lineNumber":7,"author":{"gitId":"darrtzj"},"content":" */","lastModifiedDate":"2022-10-22"},{"lineNumber":8,"author":{"gitId":"darrtzj"},"content":"public class Alias {","lastModifiedDate":"2022-10-22"},{"lineNumber":9,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":10,"author":{"gitId":"darrtzj"},"content":"    private static final String SPACE \u003d \" \";","lastModifiedDate":"2022-11-01"},{"lineNumber":11,"author":{"gitId":"darrtzj"},"content":"    private static final String EMPTY_STRING \u003d \"\";","lastModifiedDate":"2022-11-01"},{"lineNumber":12,"author":{"gitId":"darrtzj"},"content":"    private final String value;","lastModifiedDate":"2022-11-01"},{"lineNumber":13,"author":{"gitId":"darrtzj"},"content":"    /**","lastModifiedDate":"2022-10-22"},{"lineNumber":14,"author":{"gitId":"darrtzj"},"content":"     * Constructs an {@code Alias}.","lastModifiedDate":"2022-10-22"},{"lineNumber":15,"author":{"gitId":"darrtzj"},"content":"     *","lastModifiedDate":"2022-10-22"},{"lineNumber":16,"author":{"gitId":"darrtzj"},"content":"     * @param alias A string alias","lastModifiedDate":"2022-10-22"},{"lineNumber":17,"author":{"gitId":"darrtzj"},"content":"     */","lastModifiedDate":"2022-10-22"},{"lineNumber":18,"author":{"gitId":"darrtzj"},"content":"    public Alias(String alias) {","lastModifiedDate":"2022-10-22"},{"lineNumber":19,"author":{"gitId":"darrtzj"},"content":"        requireNonNull(alias);","lastModifiedDate":"2022-10-22"},{"lineNumber":20,"author":{"gitId":"darrtzj"},"content":"        value \u003d alias;","lastModifiedDate":"2022-10-22"},{"lineNumber":21,"author":{"gitId":"darrtzj"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":22,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":23,"author":{"gitId":"darrtzj"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":24,"author":{"gitId":"darrtzj"},"content":"     * Returns if a given String is a valid alias.","lastModifiedDate":"2022-10-25"},{"lineNumber":25,"author":{"gitId":"darrtzj"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":26,"author":{"gitId":"darrtzj"},"content":"    public static boolean isValidAlias(String test) {","lastModifiedDate":"2022-10-25"},{"lineNumber":27,"author":{"gitId":"darrtzj"},"content":"        return !ReservedKeyword.LIST_RESERVED_KEYWORDS.contains(test)","lastModifiedDate":"2022-11-01"},{"lineNumber":28,"author":{"gitId":"darrtzj"},"content":"                \u0026\u0026 !test.contains(SPACE)","lastModifiedDate":"2022-11-01"},{"lineNumber":29,"author":{"gitId":"darrtzj"},"content":"                \u0026\u0026 !test.equals(EMPTY_STRING);","lastModifiedDate":"2022-11-01"},{"lineNumber":30,"author":{"gitId":"darrtzj"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":31,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":32,"author":{"gitId":"darrtzj"},"content":"    @Override","lastModifiedDate":"2022-10-22"},{"lineNumber":33,"author":{"gitId":"darrtzj"},"content":"    public String toString() {","lastModifiedDate":"2022-10-22"},{"lineNumber":34,"author":{"gitId":"darrtzj"},"content":"        return value;","lastModifiedDate":"2022-10-22"},{"lineNumber":35,"author":{"gitId":"darrtzj"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":36,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":37,"author":{"gitId":"darrtzj"},"content":"    @Override","lastModifiedDate":"2022-10-22"},{"lineNumber":38,"author":{"gitId":"darrtzj"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-22"},{"lineNumber":39,"author":{"gitId":"darrtzj"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-22"},{"lineNumber":40,"author":{"gitId":"darrtzj"},"content":"                || (other instanceof Alias // instanceof handles nulls","lastModifiedDate":"2022-10-23"},{"lineNumber":41,"author":{"gitId":"darrtzj"},"content":"                \u0026\u0026 value.equals(((Alias) other).value)); // state check","lastModifiedDate":"2022-10-23"},{"lineNumber":42,"author":{"gitId":"darrtzj"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":43,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":44,"author":{"gitId":"darrtzj"},"content":"    @Override","lastModifiedDate":"2022-10-22"},{"lineNumber":45,"author":{"gitId":"darrtzj"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-22"},{"lineNumber":46,"author":{"gitId":"darrtzj"},"content":"        return value.hashCode();","lastModifiedDate":"2022-10-22"},{"lineNumber":47,"author":{"gitId":"darrtzj"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":48,"author":{"gitId":"darrtzj"},"content":"}","lastModifiedDate":"2022-10-22"}],"authorContributionMap":{"darrtzj":48}},{"path":"src/main/java/friday/model/alias/AliasMap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"darrtzj"},"content":"package friday.model.alias;","lastModifiedDate":"2022-10-23"},{"lineNumber":2,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":3,"author":{"gitId":"darrtzj"},"content":"import static friday.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-23"},{"lineNumber":4,"author":{"gitId":"darrtzj"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-23"},{"lineNumber":5,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":6,"author":{"gitId":"darrtzj"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-10-23"},{"lineNumber":7,"author":{"gitId":"darrtzj"},"content":"import java.util.Map;","lastModifiedDate":"2022-10-23"},{"lineNumber":8,"author":{"gitId":"darrtzj"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-23"},{"lineNumber":9,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":10,"author":{"gitId":"darrtzj"},"content":"import friday.model.alias.exceptions.AliasNotFoundException;","lastModifiedDate":"2022-10-23"},{"lineNumber":11,"author":{"gitId":"darrtzj"},"content":"import friday.model.alias.exceptions.DuplicateAliasException;","lastModifiedDate":"2022-10-23"},{"lineNumber":12,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":13,"author":{"gitId":"darrtzj"},"content":"/**","lastModifiedDate":"2022-10-23"},{"lineNumber":14,"author":{"gitId":"darrtzj"},"content":" * A map of alias to reserved keywords.","lastModifiedDate":"2022-10-23"},{"lineNumber":15,"author":{"gitId":"darrtzj"},"content":" */","lastModifiedDate":"2022-10-23"},{"lineNumber":16,"author":{"gitId":"darrtzj"},"content":"public class AliasMap {","lastModifiedDate":"2022-10-23"},{"lineNumber":17,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":18,"author":{"gitId":"darrtzj"},"content":"    private final Map\u003cAlias, ReservedKeyword\u003e internalMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-10-25"},{"lineNumber":19,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":20,"author":{"gitId":"darrtzj"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":21,"author":{"gitId":"darrtzj"},"content":"     * Returns true if the hashmap contains an alias with value {@code key}.","lastModifiedDate":"2022-10-23"},{"lineNumber":22,"author":{"gitId":"darrtzj"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":23,"author":{"gitId":"darrtzj"},"content":"    public boolean contains(Alias key) {","lastModifiedDate":"2022-10-25"},{"lineNumber":24,"author":{"gitId":"darrtzj"},"content":"        requireNonNull(key);","lastModifiedDate":"2022-10-23"},{"lineNumber":25,"author":{"gitId":"darrtzj"},"content":"        return internalMap.containsKey(key);","lastModifiedDate":"2022-10-23"},{"lineNumber":26,"author":{"gitId":"darrtzj"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":27,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":28,"author":{"gitId":"darrtzj"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":29,"author":{"gitId":"darrtzj"},"content":"     * Adds an alias that maps to keyword to the hashmap.","lastModifiedDate":"2022-10-23"},{"lineNumber":30,"author":{"gitId":"darrtzj"},"content":"     * The alias must not already exist in the hashmap.","lastModifiedDate":"2022-10-23"},{"lineNumber":31,"author":{"gitId":"darrtzj"},"content":"     * The keyword must be a valid reserved keyword.","lastModifiedDate":"2022-10-23"},{"lineNumber":32,"author":{"gitId":"darrtzj"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":33,"author":{"gitId":"darrtzj"},"content":"    public void add(Alias toAdd, ReservedKeyword keyword) {","lastModifiedDate":"2022-10-23"},{"lineNumber":34,"author":{"gitId":"darrtzj"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2022-10-23"},{"lineNumber":35,"author":{"gitId":"darrtzj"},"content":"        requireNonNull(keyword);","lastModifiedDate":"2022-10-23"},{"lineNumber":36,"author":{"gitId":"darrtzj"},"content":"        assert ReservedKeyword.isValidReservedKeyword(keyword.toString());","lastModifiedDate":"2022-10-23"},{"lineNumber":37,"author":{"gitId":"darrtzj"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2022-10-25"},{"lineNumber":38,"author":{"gitId":"darrtzj"},"content":"            throw new DuplicateAliasException();","lastModifiedDate":"2022-10-23"},{"lineNumber":39,"author":{"gitId":"darrtzj"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":40,"author":{"gitId":"darrtzj"},"content":"        internalMap.put(toAdd, keyword);","lastModifiedDate":"2022-10-25"},{"lineNumber":41,"author":{"gitId":"darrtzj"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":42,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":43,"author":{"gitId":"darrtzj"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":44,"author":{"gitId":"darrtzj"},"content":"     * Removes the alias from the hashmap.","lastModifiedDate":"2022-10-23"},{"lineNumber":45,"author":{"gitId":"darrtzj"},"content":"     * The alias must exist in the hashmap.","lastModifiedDate":"2022-10-23"},{"lineNumber":46,"author":{"gitId":"darrtzj"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":47,"author":{"gitId":"darrtzj"},"content":"    public void remove(Alias toRemove) {","lastModifiedDate":"2022-10-23"},{"lineNumber":48,"author":{"gitId":"darrtzj"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2022-10-23"},{"lineNumber":49,"author":{"gitId":"darrtzj"},"content":"        if (!contains(toRemove)) {","lastModifiedDate":"2022-10-25"},{"lineNumber":50,"author":{"gitId":"darrtzj"},"content":"            throw new AliasNotFoundException();","lastModifiedDate":"2022-10-23"},{"lineNumber":51,"author":{"gitId":"darrtzj"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":52,"author":{"gitId":"darrtzj"},"content":"        internalMap.remove(toRemove);","lastModifiedDate":"2022-10-25"},{"lineNumber":53,"author":{"gitId":"darrtzj"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":54,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":55,"author":{"gitId":"darrtzj"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":56,"author":{"gitId":"darrtzj"},"content":"     * Gets the keyword mapping of an alias if it exists.","lastModifiedDate":"2022-10-23"},{"lineNumber":57,"author":{"gitId":"darrtzj"},"content":"     * If no existing mapping, return the same alias.","lastModifiedDate":"2022-10-23"},{"lineNumber":58,"author":{"gitId":"darrtzj"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":59,"author":{"gitId":"darrtzj"},"content":"    public String getKeyword(String toFind) {","lastModifiedDate":"2022-10-23"},{"lineNumber":60,"author":{"gitId":"darrtzj"},"content":"        requireNonNull(toFind);","lastModifiedDate":"2022-10-23"},{"lineNumber":61,"author":{"gitId":"darrtzj"},"content":"        Alias temp \u003d new Alias(toFind);","lastModifiedDate":"2022-10-25"},{"lineNumber":62,"author":{"gitId":"darrtzj"},"content":"        if (contains(temp)) {","lastModifiedDate":"2022-10-25"},{"lineNumber":63,"author":{"gitId":"darrtzj"},"content":"            return internalMap.get(temp).toString();","lastModifiedDate":"2022-10-25"},{"lineNumber":64,"author":{"gitId":"darrtzj"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":65,"author":{"gitId":"darrtzj"},"content":"        return toFind;","lastModifiedDate":"2022-10-23"},{"lineNumber":66,"author":{"gitId":"darrtzj"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":67,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":68,"author":{"gitId":"darrtzj"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":69,"author":{"gitId":"darrtzj"},"content":"     * Returns a Set view of the mappings contained in alias map.","lastModifiedDate":"2022-10-23"},{"lineNumber":70,"author":{"gitId":"darrtzj"},"content":"     * This set will not contain any duplicate aliases.","lastModifiedDate":"2022-10-23"},{"lineNumber":71,"author":{"gitId":"darrtzj"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":72,"author":{"gitId":"darrtzj"},"content":"    public Set\u003cMap.Entry\u003cAlias, ReservedKeyword\u003e\u003e entrySet() {","lastModifiedDate":"2022-10-25"},{"lineNumber":73,"author":{"gitId":"darrtzj"},"content":"        return internalMap.entrySet();","lastModifiedDate":"2022-10-23"},{"lineNumber":74,"author":{"gitId":"darrtzj"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":75,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":76,"author":{"gitId":"darrtzj"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":77,"author":{"gitId":"darrtzj"},"content":"     * Replaces the contents of this map with alias, keyword pair.","lastModifiedDate":"2022-10-23"},{"lineNumber":78,"author":{"gitId":"darrtzj"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":79,"author":{"gitId":"darrtzj"},"content":"    public void setAliases(Set\u003cMap.Entry\u003cAlias, ReservedKeyword\u003e\u003e aliases) {","lastModifiedDate":"2022-10-25"},{"lineNumber":80,"author":{"gitId":"darrtzj"},"content":"        requireAllNonNull(aliases);","lastModifiedDate":"2022-10-23"},{"lineNumber":81,"author":{"gitId":"darrtzj"},"content":"        for (Map.Entry\u003cAlias, ReservedKeyword\u003e aliasKeywordPair : aliases) {","lastModifiedDate":"2022-10-25"},{"lineNumber":82,"author":{"gitId":"darrtzj"},"content":"            Alias alias \u003d aliasKeywordPair.getKey();","lastModifiedDate":"2022-10-25"},{"lineNumber":83,"author":{"gitId":"darrtzj"},"content":"            ReservedKeyword keyword \u003d aliasKeywordPair.getValue();","lastModifiedDate":"2022-10-25"},{"lineNumber":84,"author":{"gitId":"darrtzj"},"content":"            add(alias, keyword);","lastModifiedDate":"2022-10-23"},{"lineNumber":85,"author":{"gitId":"darrtzj"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":86,"author":{"gitId":"darrtzj"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":87,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":88,"author":{"gitId":"darrtzj"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":89,"author":{"gitId":"darrtzj"},"content":"     * Returns the String representation of all aliases in AliasMap.","lastModifiedDate":"2022-10-23"},{"lineNumber":90,"author":{"gitId":"darrtzj"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":91,"author":{"gitId":"darrtzj"},"content":"    public String displayAliases() {","lastModifiedDate":"2022-10-23"},{"lineNumber":92,"author":{"gitId":"darrtzj"},"content":"        String result \u003d \"\";","lastModifiedDate":"2022-10-23"},{"lineNumber":93,"author":{"gitId":"darrtzj"},"content":"        Set\u003cMap.Entry\u003cAlias, ReservedKeyword\u003e\u003e keyValuePairs \u003d entrySet();","lastModifiedDate":"2022-10-25"},{"lineNumber":94,"author":{"gitId":"darrtzj"},"content":"        for (Map.Entry\u003cAlias, ReservedKeyword\u003e keyValuePair : keyValuePairs) {","lastModifiedDate":"2022-10-25"},{"lineNumber":95,"author":{"gitId":"darrtzj"},"content":"            String key \u003d keyValuePair.getKey().toString();","lastModifiedDate":"2022-10-25"},{"lineNumber":96,"author":{"gitId":"darrtzj"},"content":"            String value \u003d keyValuePair.getValue().toString();","lastModifiedDate":"2022-10-25"},{"lineNumber":97,"author":{"gitId":"darrtzj"},"content":"            result \u003d result + \"\\n\" + key + \" : \" + value;","lastModifiedDate":"2022-10-23"},{"lineNumber":98,"author":{"gitId":"darrtzj"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":99,"author":{"gitId":"darrtzj"},"content":"        return result;","lastModifiedDate":"2022-10-23"},{"lineNumber":100,"author":{"gitId":"darrtzj"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":101,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":102,"author":{"gitId":"darrtzj"},"content":"    @Override","lastModifiedDate":"2022-10-23"},{"lineNumber":103,"author":{"gitId":"darrtzj"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-23"},{"lineNumber":104,"author":{"gitId":"darrtzj"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-23"},{"lineNumber":105,"author":{"gitId":"darrtzj"},"content":"                || (other instanceof AliasMap // instanceof handles nulls","lastModifiedDate":"2022-10-23"},{"lineNumber":106,"author":{"gitId":"darrtzj"},"content":"                \u0026\u0026 internalMap.equals(((AliasMap) other).internalMap));","lastModifiedDate":"2022-10-23"},{"lineNumber":107,"author":{"gitId":"darrtzj"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":108,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":109,"author":{"gitId":"darrtzj"},"content":"    @Override","lastModifiedDate":"2022-10-23"},{"lineNumber":110,"author":{"gitId":"darrtzj"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-23"},{"lineNumber":111,"author":{"gitId":"darrtzj"},"content":"        return internalMap.hashCode();","lastModifiedDate":"2022-10-23"},{"lineNumber":112,"author":{"gitId":"darrtzj"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":113,"author":{"gitId":"darrtzj"},"content":"}","lastModifiedDate":"2022-10-23"}],"authorContributionMap":{"darrtzj":113}},{"path":"src/main/java/friday/model/alias/ReservedKeyword.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"darrtzj"},"content":"package friday.model.alias;","lastModifiedDate":"2022-10-22"},{"lineNumber":2,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":3,"author":{"gitId":"darrtzj"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-23"},{"lineNumber":4,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":5,"author":{"gitId":"darrtzj"},"content":"import java.util.List;","lastModifiedDate":"2022-10-23"},{"lineNumber":6,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":7,"author":{"gitId":"darrtzj"},"content":"import friday.logic.commands.AddCommand;","lastModifiedDate":"2022-10-22"},{"lineNumber":8,"author":{"gitId":"darrtzj"},"content":"import friday.logic.commands.AliasCommand;","lastModifiedDate":"2022-10-22"},{"lineNumber":9,"author":{"gitId":"darrtzj"},"content":"import friday.logic.commands.AliasListCommand;","lastModifiedDate":"2022-10-23"},{"lineNumber":10,"author":{"gitId":"darrtzj"},"content":"import friday.logic.commands.ClearCommand;","lastModifiedDate":"2022-10-22"},{"lineNumber":11,"author":{"gitId":"darrtzj"},"content":"import friday.logic.commands.DeleteCommand;","lastModifiedDate":"2022-10-22"},{"lineNumber":12,"author":{"gitId":"darrtzj"},"content":"import friday.logic.commands.EditCommand;","lastModifiedDate":"2022-10-22"},{"lineNumber":13,"author":{"gitId":"darrtzj"},"content":"import friday.logic.commands.ExitCommand;","lastModifiedDate":"2022-10-22"},{"lineNumber":14,"author":{"gitId":"darrtzj"},"content":"import friday.logic.commands.FindCommand;","lastModifiedDate":"2022-10-22"},{"lineNumber":15,"author":{"gitId":"darrtzj"},"content":"import friday.logic.commands.GradeCommand;","lastModifiedDate":"2022-10-25"},{"lineNumber":16,"author":{"gitId":"darrtzj"},"content":"import friday.logic.commands.HelpCommand;","lastModifiedDate":"2022-10-22"},{"lineNumber":17,"author":{"gitId":"darrtzj"},"content":"import friday.logic.commands.ListCommand;","lastModifiedDate":"2022-10-22"},{"lineNumber":18,"author":{"gitId":"darrtzj"},"content":"import friday.logic.commands.MarkMasteryCheckCommand;","lastModifiedDate":"2022-10-22"},{"lineNumber":19,"author":{"gitId":"darrtzj"},"content":"import friday.logic.commands.RemarkCommand;","lastModifiedDate":"2022-10-22"},{"lineNumber":20,"author":{"gitId":"darrtzj"},"content":"import friday.logic.commands.SortCommand;","lastModifiedDate":"2022-10-22"},{"lineNumber":21,"author":{"gitId":"darrtzj"},"content":"import friday.logic.commands.UgCommand;","lastModifiedDate":"2022-10-22"},{"lineNumber":22,"author":{"gitId":"darrtzj"},"content":"import friday.logic.commands.UnaliasCommand;","lastModifiedDate":"2022-10-23"},{"lineNumber":23,"author":{"gitId":"kaij77"},"content":"import friday.logic.commands.UnmarkMasteryCheckCommand;","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":26,"author":{"gitId":"darrtzj"},"content":"/**","lastModifiedDate":"2022-10-22"},{"lineNumber":27,"author":{"gitId":"darrtzj"},"content":" * Represents a ReservedKeyword in friday.","lastModifiedDate":"2022-10-22"},{"lineNumber":28,"author":{"gitId":"darrtzj"},"content":" */","lastModifiedDate":"2022-10-22"},{"lineNumber":29,"author":{"gitId":"darrtzj"},"content":"public class ReservedKeyword {","lastModifiedDate":"2022-10-22"},{"lineNumber":30,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":31,"author":{"gitId":"darrtzj"},"content":"    public static final List\u003cString\u003e LIST_RESERVED_KEYWORDS \u003d List.of(AddCommand.COMMAND_WORD,","lastModifiedDate":"2022-10-23"},{"lineNumber":32,"author":{"gitId":"darrtzj"},"content":"            AliasCommand.COMMAND_WORD, AliasListCommand.COMMAND_WORD, ClearCommand.COMMAND_WORD,","lastModifiedDate":"2022-10-25"},{"lineNumber":33,"author":{"gitId":"darrtzj"},"content":"            DeleteCommand.COMMAND_WORD, EditCommand.COMMAND_WORD, ExitCommand.COMMAND_WORD, FindCommand.COMMAND_WORD,","lastModifiedDate":"2022-10-25"},{"lineNumber":34,"author":{"gitId":"darrtzj"},"content":"            GradeCommand.COMMAND_WORD, HelpCommand.COMMAND_WORD, ListCommand.COMMAND_WORD,","lastModifiedDate":"2022-10-25"},{"lineNumber":35,"author":{"gitId":"darrtzj"},"content":"            MarkMasteryCheckCommand.COMMAND_WORD, RemarkCommand.COMMAND_WORD, SortCommand.COMMAND_WORD,","lastModifiedDate":"2022-10-22"},{"lineNumber":36,"author":{"gitId":"kaij77"},"content":"            UgCommand.COMMAND_WORD, UnaliasCommand.COMMAND_WORD, UnmarkMasteryCheckCommand.COMMAND_WORD);","lastModifiedDate":"2022-10-26"},{"lineNumber":37,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":38,"author":{"gitId":"darrtzj"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Reserved keyword given is not in the list of reserved keywords\";","lastModifiedDate":"2022-10-22"},{"lineNumber":39,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":40,"author":{"gitId":"darrtzj"},"content":"    private final String value;","lastModifiedDate":"2022-10-23"},{"lineNumber":41,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":42,"author":{"gitId":"darrtzj"},"content":"    /**","lastModifiedDate":"2022-10-22"},{"lineNumber":43,"author":{"gitId":"darrtzj"},"content":"     * Constructs a {@code ReservedKeyword}.","lastModifiedDate":"2022-10-22"},{"lineNumber":44,"author":{"gitId":"darrtzj"},"content":"     *","lastModifiedDate":"2022-10-22"},{"lineNumber":45,"author":{"gitId":"darrtzj"},"content":"     * @param reservedKeyword A string reserved keyword","lastModifiedDate":"2022-10-22"},{"lineNumber":46,"author":{"gitId":"darrtzj"},"content":"     */","lastModifiedDate":"2022-10-22"},{"lineNumber":47,"author":{"gitId":"darrtzj"},"content":"    public ReservedKeyword(String reservedKeyword) {","lastModifiedDate":"2022-10-22"},{"lineNumber":48,"author":{"gitId":"darrtzj"},"content":"        requireNonNull(reservedKeyword);","lastModifiedDate":"2022-10-22"},{"lineNumber":49,"author":{"gitId":"darrtzj"},"content":"        value \u003d reservedKeyword;","lastModifiedDate":"2022-10-22"},{"lineNumber":50,"author":{"gitId":"darrtzj"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":51,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":52,"author":{"gitId":"darrtzj"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":53,"author":{"gitId":"darrtzj"},"content":"     * Returns if a given string is a valid reserved keyword.","lastModifiedDate":"2022-10-25"},{"lineNumber":54,"author":{"gitId":"darrtzj"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":55,"author":{"gitId":"darrtzj"},"content":"    public static boolean isValidReservedKeyword(String test) {","lastModifiedDate":"2022-10-22"},{"lineNumber":56,"author":{"gitId":"darrtzj"},"content":"        return LIST_RESERVED_KEYWORDS.contains(test);","lastModifiedDate":"2022-10-23"},{"lineNumber":57,"author":{"gitId":"darrtzj"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":58,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":59,"author":{"gitId":"darrtzj"},"content":"    @Override","lastModifiedDate":"2022-10-22"},{"lineNumber":60,"author":{"gitId":"darrtzj"},"content":"    public String toString() {","lastModifiedDate":"2022-10-22"},{"lineNumber":61,"author":{"gitId":"darrtzj"},"content":"        return value;","lastModifiedDate":"2022-10-22"},{"lineNumber":62,"author":{"gitId":"darrtzj"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":63,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":64,"author":{"gitId":"darrtzj"},"content":"    @Override","lastModifiedDate":"2022-10-22"},{"lineNumber":65,"author":{"gitId":"darrtzj"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-22"},{"lineNumber":66,"author":{"gitId":"darrtzj"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-22"},{"lineNumber":67,"author":{"gitId":"darrtzj"},"content":"                || (other instanceof ReservedKeyword // instanceof handles nulls","lastModifiedDate":"2022-10-23"},{"lineNumber":68,"author":{"gitId":"darrtzj"},"content":"                \u0026\u0026 value.equals(((ReservedKeyword) other).value)); // state check","lastModifiedDate":"2022-10-23"},{"lineNumber":69,"author":{"gitId":"darrtzj"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":70,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":71,"author":{"gitId":"darrtzj"},"content":"    @Override","lastModifiedDate":"2022-10-22"},{"lineNumber":72,"author":{"gitId":"darrtzj"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-22"},{"lineNumber":73,"author":{"gitId":"darrtzj"},"content":"        return value.hashCode();","lastModifiedDate":"2022-10-22"},{"lineNumber":74,"author":{"gitId":"darrtzj"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":75,"author":{"gitId":"darrtzj"},"content":"}","lastModifiedDate":"2022-10-22"}],"authorContributionMap":{"darrtzj":72,"kaij77":3}},{"path":"src/main/java/friday/model/alias/exceptions/AliasNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"darrtzj"},"content":"package friday.model.alias.exceptions;","lastModifiedDate":"2022-10-23"},{"lineNumber":2,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":3,"author":{"gitId":"darrtzj"},"content":"/**","lastModifiedDate":"2022-10-23"},{"lineNumber":4,"author":{"gitId":"darrtzj"},"content":" * Signals that the operation is unable to find the specified alias.","lastModifiedDate":"2022-10-23"},{"lineNumber":5,"author":{"gitId":"darrtzj"},"content":" */","lastModifiedDate":"2022-10-23"},{"lineNumber":6,"author":{"gitId":"darrtzj"},"content":"public class AliasNotFoundException extends RuntimeException {}","lastModifiedDate":"2022-10-23"}],"authorContributionMap":{"darrtzj":6}},{"path":"src/main/java/friday/model/alias/exceptions/DuplicateAliasException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"darrtzj"},"content":"package friday.model.alias.exceptions;","lastModifiedDate":"2022-10-23"},{"lineNumber":2,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":3,"author":{"gitId":"darrtzj"},"content":"/**","lastModifiedDate":"2022-10-23"},{"lineNumber":4,"author":{"gitId":"darrtzj"},"content":" * Signals that the operation will result in duplicate Alias (Aliases are considered duplicates if they have the","lastModifiedDate":"2022-10-23"},{"lineNumber":5,"author":{"gitId":"darrtzj"},"content":" * same identity).","lastModifiedDate":"2022-10-23"},{"lineNumber":6,"author":{"gitId":"darrtzj"},"content":" */","lastModifiedDate":"2022-10-23"},{"lineNumber":7,"author":{"gitId":"darrtzj"},"content":"public class DuplicateAliasException extends RuntimeException {","lastModifiedDate":"2022-10-23"},{"lineNumber":8,"author":{"gitId":"darrtzj"},"content":"    public DuplicateAliasException() {","lastModifiedDate":"2022-10-23"},{"lineNumber":9,"author":{"gitId":"darrtzj"},"content":"        super(\"Operation would result in duplicate aliases\");","lastModifiedDate":"2022-10-23"},{"lineNumber":10,"author":{"gitId":"darrtzj"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":11,"author":{"gitId":"darrtzj"},"content":"}","lastModifiedDate":"2022-10-23"}],"authorContributionMap":{"darrtzj":11}},{"path":"src/main/java/friday/model/grades/Grade.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.model.grades;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"HowSuen"},"content":"import static friday.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"HowSuen"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"HowSuen"},"content":"import java.util.Objects;","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"HowSuen"},"content":"/**","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"HowSuen"},"content":" * Represents a Grade of an assessment or examination in the GradesList.","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"HowSuen"},"content":" */","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"HowSuen"},"content":"public class Grade {","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"HowSuen"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Grades should be in percentages, between 0 and 100, \"","lastModifiedDate":"2022-10-29"},{"lineNumber":14,"author":{"gitId":"HowSuen"},"content":"            + \"up to 2 decimal places, excluding the % sign.\";","lastModifiedDate":"2022-10-29"},{"lineNumber":15,"author":{"gitId":"HowSuen"},"content":"    public static final String VALIDATION_REGEX \u003d \"^(100(\\\\.0{1,2})?|[1-9]?\\\\d(\\\\.\\\\d{1,2})?)$\";","lastModifiedDate":"2022-10-29"},{"lineNumber":16,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"jorrdansoh"},"content":"    private final String examName;","lastModifiedDate":"2022-10-31"},{"lineNumber":18,"author":{"gitId":"jorrdansoh"},"content":"    private final String score;","lastModifiedDate":"2022-10-31"},{"lineNumber":19,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"HowSuen"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"HowSuen"},"content":"     * Constructs a {@code Grade}.","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"HowSuen"},"content":"     *","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"HowSuen"},"content":"     * @param examName An assessment name.","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"HowSuen"},"content":"     * @param score A valid score.","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"HowSuen"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"HowSuen"},"content":"    public Grade(String examName, String score) {","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"HowSuen"},"content":"        requireNonNull(score);","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"HowSuen"},"content":"        requireNonNull(examName);","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"HowSuen"},"content":"        checkArgument(isValidScore(score), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"HowSuen"},"content":"        this.examName \u003d examName;","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"HowSuen"},"content":"        this.score \u003d score;","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"HowSuen"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"HowSuen"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"HowSuen"},"content":"     * Returns true if a given string is a valid score.","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"HowSuen"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"HowSuen"},"content":"    public static boolean isValidScore(String test) {","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"HowSuen"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"HowSuen"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"jorrdansoh"},"content":"    /**","lastModifiedDate":"2022-10-31"},{"lineNumber":42,"author":{"gitId":"jorrdansoh"},"content":"     * Returns the exam name of the given Grade.","lastModifiedDate":"2022-10-31"},{"lineNumber":43,"author":{"gitId":"jorrdansoh"},"content":"     *","lastModifiedDate":"2022-10-31"},{"lineNumber":44,"author":{"gitId":"jorrdansoh"},"content":"     * @return exam name.","lastModifiedDate":"2022-10-31"},{"lineNumber":45,"author":{"gitId":"jorrdansoh"},"content":"     */","lastModifiedDate":"2022-10-31"},{"lineNumber":46,"author":{"gitId":"jorrdansoh"},"content":"    public String getExamName() {","lastModifiedDate":"2022-10-31"},{"lineNumber":47,"author":{"gitId":"jorrdansoh"},"content":"        return examName;","lastModifiedDate":"2022-10-31"},{"lineNumber":48,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-10-31"},{"lineNumber":49,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":50,"author":{"gitId":"jorrdansoh"},"content":"    /**","lastModifiedDate":"2022-10-31"},{"lineNumber":51,"author":{"gitId":"jorrdansoh"},"content":"     * Returns the score of the given Grade.","lastModifiedDate":"2022-10-31"},{"lineNumber":52,"author":{"gitId":"jorrdansoh"},"content":"     *","lastModifiedDate":"2022-10-31"},{"lineNumber":53,"author":{"gitId":"jorrdansoh"},"content":"     * @return score","lastModifiedDate":"2022-10-31"},{"lineNumber":54,"author":{"gitId":"jorrdansoh"},"content":"     */","lastModifiedDate":"2022-10-31"},{"lineNumber":55,"author":{"gitId":"jorrdansoh"},"content":"    public String getScore() {","lastModifiedDate":"2022-10-31"},{"lineNumber":56,"author":{"gitId":"jorrdansoh"},"content":"        return score;","lastModifiedDate":"2022-10-31"},{"lineNumber":57,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-10-31"},{"lineNumber":58,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":59,"author":{"gitId":"HowSuen"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":60,"author":{"gitId":"HowSuen"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-20"},{"lineNumber":61,"author":{"gitId":"HowSuen"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-20"},{"lineNumber":62,"author":{"gitId":"HowSuen"},"content":"                || (other instanceof Grade // instanceof handles nulls","lastModifiedDate":"2022-10-20"},{"lineNumber":63,"author":{"gitId":"HowSuen"},"content":"                \u0026\u0026 examName.equals(((Grade) other).examName)","lastModifiedDate":"2022-10-20"},{"lineNumber":64,"author":{"gitId":"HowSuen"},"content":"                \u0026\u0026 score.equals(((Grade) other).score)); // state check","lastModifiedDate":"2022-10-20"},{"lineNumber":65,"author":{"gitId":"HowSuen"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":66,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":67,"author":{"gitId":"HowSuen"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":68,"author":{"gitId":"HowSuen"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-20"},{"lineNumber":69,"author":{"gitId":"HowSuen"},"content":"        return Objects.hash(examName, score);","lastModifiedDate":"2022-10-20"},{"lineNumber":70,"author":{"gitId":"HowSuen"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":71,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":72,"author":{"gitId":"HowSuen"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":73,"author":{"gitId":"HowSuen"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2022-10-20"},{"lineNumber":74,"author":{"gitId":"HowSuen"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":75,"author":{"gitId":"HowSuen"},"content":"    public String toString() {","lastModifiedDate":"2022-10-20"},{"lineNumber":76,"author":{"gitId":"HowSuen"},"content":"        return \u0027[\u0027 + examName + \": \" + score + \u0027]\u0027;","lastModifiedDate":"2022-10-20"},{"lineNumber":77,"author":{"gitId":"HowSuen"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":78,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":79,"author":{"gitId":"HowSuen"},"content":"}","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"jorrdansoh":20,"HowSuen":59}},{"path":"src/main/java/friday/model/grades/GradesList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.model.grades;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"HowSuen"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-21"},{"lineNumber":4,"author":{"gitId":"HowSuen"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"HowSuen"},"content":"import java.util.List;","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"HowSuen"},"content":"import java.util.Map;","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"HowSuen"},"content":"/**","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"HowSuen"},"content":" * Represents a Student\u0027s list of grades for their assessments and examinations.","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"HowSuen"},"content":" */","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"HowSuen"},"content":"public class GradesList {","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"HowSuen"},"content":"    // Names of assessments and exams","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"jorrdansoh"},"content":"    public static final String[] EXAMS \u003d {\"RA1\", \"RA2\", \"Midterm\", \"Practical\", \"Finals\"};","lastModifiedDate":"2022-10-24"},{"lineNumber":15,"author":{"gitId":"HowSuen"},"content":"    public static final int EXAMS_COUNT \u003d 5;","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":17,"author":{"gitId":"HowSuen"},"content":"    private final Map\u003cString, Grade\u003e gradesMap;","lastModifiedDate":"2022-11-05"},{"lineNumber":18,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"HowSuen"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"HowSuen"},"content":"     * Constructs an {@code GradesList} with all grades set to 0 by default.","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"HowSuen"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":22,"author":{"gitId":"HowSuen"},"content":"    public GradesList() {","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"HowSuen"},"content":"        this.gradesMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"HowSuen"},"content":"        initialiseGrades(gradesMap);","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"HowSuen"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"HowSuen"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":28,"author":{"gitId":"HowSuen"},"content":"     * Creates and adds the Grades for the associated exams in the gradesMap","lastModifiedDate":"2022-10-21"},{"lineNumber":29,"author":{"gitId":"HowSuen"},"content":"     *","lastModifiedDate":"2022-10-21"},{"lineNumber":30,"author":{"gitId":"HowSuen"},"content":"     * @param gradesMap","lastModifiedDate":"2022-10-21"},{"lineNumber":31,"author":{"gitId":"HowSuen"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":32,"author":{"gitId":"HowSuen"},"content":"    public void initialiseGrades(Map\u003cString, Grade\u003e gradesMap) {","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"HowSuen"},"content":"        for (String exam : EXAMS) {","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"HowSuen"},"content":"            gradesMap.putIfAbsent(exam, new Grade(exam, \"0\"));","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"HowSuen"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"HowSuen"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"HowSuen"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":39,"author":{"gitId":"HowSuen"},"content":"     * Replaces the Grade in the gradesList with the given new Grade","lastModifiedDate":"2022-10-21"},{"lineNumber":40,"author":{"gitId":"HowSuen"},"content":"     *","lastModifiedDate":"2022-10-21"},{"lineNumber":41,"author":{"gitId":"HowSuen"},"content":"     * @param gradesList","lastModifiedDate":"2022-10-21"},{"lineNumber":42,"author":{"gitId":"HowSuen"},"content":"     * @param newGrade","lastModifiedDate":"2022-10-21"},{"lineNumber":43,"author":{"gitId":"HowSuen"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":44,"author":{"gitId":"HowSuen"},"content":"    public static void editGrade(GradesList gradesList, Grade newGrade) {","lastModifiedDate":"2022-10-21"},{"lineNumber":45,"author":{"gitId":"jorrdansoh"},"content":"        String key \u003d newGrade.getExamName();","lastModifiedDate":"2022-10-31"},{"lineNumber":46,"author":{"gitId":"HowSuen"},"content":"        gradesList.gradesMap.put(key, newGrade);","lastModifiedDate":"2022-10-21"},{"lineNumber":47,"author":{"gitId":"HowSuen"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":48,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":49,"author":{"gitId":"HowSuen"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":50,"author":{"gitId":"HowSuen"},"content":"     * Creates and returns an ordered List of {@code Grade}.","lastModifiedDate":"2022-10-21"},{"lineNumber":51,"author":{"gitId":"HowSuen"},"content":"     *","lastModifiedDate":"2022-10-21"},{"lineNumber":52,"author":{"gitId":"HowSuen"},"content":"     * @return a list of grades","lastModifiedDate":"2022-10-21"},{"lineNumber":53,"author":{"gitId":"HowSuen"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":54,"author":{"gitId":"HowSuen"},"content":"    public List\u003cGrade\u003e getGradesArrayList() {","lastModifiedDate":"2022-10-21"},{"lineNumber":55,"author":{"gitId":"HowSuen"},"content":"        List\u003cGrade\u003e gradesList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-21"},{"lineNumber":56,"author":{"gitId":"HowSuen"},"content":"        gradesList.add(gradesMap.get(\"RA1\"));","lastModifiedDate":"2022-10-21"},{"lineNumber":57,"author":{"gitId":"HowSuen"},"content":"        gradesList.add(gradesMap.get(\"RA2\"));","lastModifiedDate":"2022-10-21"},{"lineNumber":58,"author":{"gitId":"jorrdansoh"},"content":"        gradesList.add(gradesMap.get(\"Midterm\"));","lastModifiedDate":"2022-10-24"},{"lineNumber":59,"author":{"gitId":"HowSuen"},"content":"        gradesList.add(gradesMap.get(\"Practical\"));","lastModifiedDate":"2022-10-21"},{"lineNumber":60,"author":{"gitId":"HowSuen"},"content":"        gradesList.add(gradesMap.get(\"Finals\"));","lastModifiedDate":"2022-10-21"},{"lineNumber":61,"author":{"gitId":"HowSuen"},"content":"        return gradesList;","lastModifiedDate":"2022-10-21"},{"lineNumber":62,"author":{"gitId":"HowSuen"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":63,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":64,"author":{"gitId":"HowSuen"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":65,"author":{"gitId":"HowSuen"},"content":"     * Returns the Grade associated with the specified name of the exam.","lastModifiedDate":"2022-10-21"},{"lineNumber":66,"author":{"gitId":"HowSuen"},"content":"     *","lastModifiedDate":"2022-10-21"},{"lineNumber":67,"author":{"gitId":"HowSuen"},"content":"     * @param examName the name of the exam","lastModifiedDate":"2022-10-21"},{"lineNumber":68,"author":{"gitId":"HowSuen"},"content":"     * @return the Grade received for that exam","lastModifiedDate":"2022-10-21"},{"lineNumber":69,"author":{"gitId":"HowSuen"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":70,"author":{"gitId":"HowSuen"},"content":"    public Grade getGrade(String examName) {","lastModifiedDate":"2022-10-21"},{"lineNumber":71,"author":{"gitId":"HowSuen"},"content":"        return gradesMap.get(examName);","lastModifiedDate":"2022-10-21"},{"lineNumber":72,"author":{"gitId":"HowSuen"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":73,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":74,"author":{"gitId":"HowSuen"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":75,"author":{"gitId":"HowSuen"},"content":"    public String toString() {","lastModifiedDate":"2022-10-20"},{"lineNumber":76,"author":{"gitId":"HowSuen"},"content":"        StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-10-21"},{"lineNumber":77,"author":{"gitId":"HowSuen"},"content":"        builder.append(gradesMap.get(\"RA1\"))","lastModifiedDate":"2022-10-21"},{"lineNumber":78,"author":{"gitId":"HowSuen"},"content":"                .append(gradesMap.get(\"RA2\"))","lastModifiedDate":"2022-10-21"},{"lineNumber":79,"author":{"gitId":"jorrdansoh"},"content":"                .append(gradesMap.get(\"Midterm\"))","lastModifiedDate":"2022-10-24"},{"lineNumber":80,"author":{"gitId":"HowSuen"},"content":"                .append(gradesMap.get(\"Practical\"))","lastModifiedDate":"2022-10-21"},{"lineNumber":81,"author":{"gitId":"HowSuen"},"content":"                .append(gradesMap.get(\"Finals\"));","lastModifiedDate":"2022-10-21"},{"lineNumber":82,"author":{"gitId":"HowSuen"},"content":"        return builder.toString();","lastModifiedDate":"2022-10-21"},{"lineNumber":83,"author":{"gitId":"HowSuen"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":84,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":85,"author":{"gitId":"HowSuen"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":86,"author":{"gitId":"HowSuen"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-20"},{"lineNumber":87,"author":{"gitId":"HowSuen"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-20"},{"lineNumber":88,"author":{"gitId":"HowSuen"},"content":"                || (other instanceof GradesList // instanceof handles nulls","lastModifiedDate":"2022-10-20"},{"lineNumber":89,"author":{"gitId":"HowSuen"},"content":"                \u0026\u0026 gradesMap.equals(((GradesList) other).gradesMap)); // state check","lastModifiedDate":"2022-10-20"},{"lineNumber":90,"author":{"gitId":"HowSuen"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":91,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":92,"author":{"gitId":"HowSuen"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":93,"author":{"gitId":"HowSuen"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-20"},{"lineNumber":94,"author":{"gitId":"HowSuen"},"content":"        return gradesMap.hashCode();","lastModifiedDate":"2022-10-20"},{"lineNumber":95,"author":{"gitId":"HowSuen"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":96,"author":{"gitId":"HowSuen"},"content":"}","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"jorrdansoh":4,"HowSuen":92}},{"path":"src/main/java/friday/model/student/Consultation.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaij77"},"content":"package friday.model.student;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"kaij77"},"content":"import static friday.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"kaij77"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"kaij77"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"jorrdansoh"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"kaij77"},"content":"/**","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"jorrdansoh"},"content":" * Represents a Student\u0027s consultations in FRIDAY.","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"kaij77"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidConsultation(String)}","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"kaij77"},"content":" */","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"jorrdansoh"},"content":"public class Consultation implements Comparable\u003cConsultation\u003e {","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"jorrdansoh"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Desired dates for consultation should be valid dates in the \"","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"jorrdansoh"},"content":"        + \"format: YYYY-MM-DD, and the year should be between 1900 - 2999\";","lastModifiedDate":"2022-11-05"},{"lineNumber":17,"author":{"gitId":"kaij77"},"content":"    public static final String VALIDATION_REGEX \u003d \"^((19|2[0-9])[0-9]{2})-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$\";","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"jorrdansoh"},"content":"    // The empty value for when there is no consultation date attached to a student","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"jorrdansoh"},"content":"    public static final Consultation EMPTY_CONSULTATION \u003d new Consultation();","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"kaij77"},"content":"    private LocalDate value;","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"kaij77"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"kaij77"},"content":"     * Constructs an {@code Consultation}.","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"kaij77"},"content":"     *","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"jorrdansoh"},"content":"     * @param desiredDate A valid date.","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"kaij77"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"kaij77"},"content":"    public Consultation(LocalDate desiredDate) {","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"kaij77"},"content":"        requireNonNull(desiredDate);","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"kaij77"},"content":"        checkArgument(isValidConsultation(desiredDate.toString()), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"kaij77"},"content":"        value \u003d desiredDate;","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"kaij77"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"jorrdansoh"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"jorrdansoh"},"content":"     * Constructs a {@code Consultation} for the empty instance.","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"jorrdansoh"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"jorrdansoh"},"content":"    private Consultation() {","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"jorrdansoh"},"content":"        value \u003d LocalDate.of(0001, 01, 01);","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"kaij77"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":43,"author":{"gitId":"jorrdansoh"},"content":"     * Returns if a given string is a valid consultation.","lastModifiedDate":"2022-10-06"},{"lineNumber":44,"author":{"gitId":"kaij77"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":45,"author":{"gitId":"kaij77"},"content":"    public static boolean isValidConsultation(String test) {","lastModifiedDate":"2022-10-06"},{"lineNumber":46,"author":{"gitId":"jorrdansoh"},"content":"        try {","lastModifiedDate":"2022-10-27"},{"lineNumber":47,"author":{"gitId":"jorrdansoh"},"content":"            LocalDate.parse(test);","lastModifiedDate":"2022-10-27"},{"lineNumber":48,"author":{"gitId":"jorrdansoh"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-10-27"},{"lineNumber":49,"author":{"gitId":"jorrdansoh"},"content":"            return false;","lastModifiedDate":"2022-10-27"},{"lineNumber":50,"author":{"gitId":"jorrdansoh"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":51,"author":{"gitId":"kaij77"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-06"},{"lineNumber":52,"author":{"gitId":"kaij77"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":53,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":54,"author":{"gitId":"jorrdansoh"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":55,"author":{"gitId":"jorrdansoh"},"content":"     * Returns true if the given string is a valid consultation or empty.","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"jorrdansoh"},"content":"     *","lastModifiedDate":"2022-10-09"},{"lineNumber":57,"author":{"gitId":"jorrdansoh"},"content":"     * Only to be used when converting JSON to Student in JsonAdaptedStudent.","lastModifiedDate":"2022-10-20"},{"lineNumber":58,"author":{"gitId":"jorrdansoh"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":59,"author":{"gitId":"jorrdansoh"},"content":"    public static boolean isValidOrEmptyJson(String test) {","lastModifiedDate":"2022-10-20"},{"lineNumber":60,"author":{"gitId":"jorrdansoh"},"content":"        return test.matches(VALIDATION_REGEX) || test.equals(\"0001-01-01\");","lastModifiedDate":"2022-10-09"},{"lineNumber":61,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":62,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":63,"author":{"gitId":"jorrdansoh"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":64,"author":{"gitId":"jorrdansoh"},"content":"     * Returns true if the given consultation is the empty value.","lastModifiedDate":"2022-10-09"},{"lineNumber":65,"author":{"gitId":"jorrdansoh"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":66,"author":{"gitId":"jorrdansoh"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2022-10-09"},{"lineNumber":67,"author":{"gitId":"jorrdansoh"},"content":"        return this \u003d\u003d EMPTY_CONSULTATION;","lastModifiedDate":"2022-10-09"},{"lineNumber":68,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":69,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":70,"author":{"gitId":"kaij77"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":71,"author":{"gitId":"kaij77"},"content":"     * Returns the value of the given Consultation.","lastModifiedDate":"2022-10-06"},{"lineNumber":72,"author":{"gitId":"kaij77"},"content":"     *","lastModifiedDate":"2022-10-06"},{"lineNumber":73,"author":{"gitId":"kaij77"},"content":"     * @return value","lastModifiedDate":"2022-10-06"},{"lineNumber":74,"author":{"gitId":"kaij77"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":75,"author":{"gitId":"kaij77"},"content":"    public LocalDate getValue() {","lastModifiedDate":"2022-10-06"},{"lineNumber":76,"author":{"gitId":"kaij77"},"content":"        return value;","lastModifiedDate":"2022-10-06"},{"lineNumber":77,"author":{"gitId":"kaij77"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":78,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":79,"author":{"gitId":"kaij77"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":80,"author":{"gitId":"kaij77"},"content":"    public String toString() {","lastModifiedDate":"2022-10-06"},{"lineNumber":81,"author":{"gitId":"jorrdansoh"},"content":"        String str \u003d isEmpty() ? \"\" : value.toString();","lastModifiedDate":"2022-10-09"},{"lineNumber":82,"author":{"gitId":"kaij77"},"content":"        return str;","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"kaij77"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":84,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":85,"author":{"gitId":"kaij77"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":86,"author":{"gitId":"kaij77"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-06"},{"lineNumber":87,"author":{"gitId":"kaij77"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-06"},{"lineNumber":88,"author":{"gitId":"kaij77"},"content":"                || (other instanceof Consultation // instanceof handles nulls","lastModifiedDate":"2022-10-06"},{"lineNumber":89,"author":{"gitId":"kaij77"},"content":"                \u0026\u0026 value.equals(((Consultation) other).value)); // state check","lastModifiedDate":"2022-10-06"},{"lineNumber":90,"author":{"gitId":"kaij77"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":91,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":92,"author":{"gitId":"kaij77"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":93,"author":{"gitId":"kaij77"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-06"},{"lineNumber":94,"author":{"gitId":"kaij77"},"content":"        return value.hashCode();","lastModifiedDate":"2022-10-06"},{"lineNumber":95,"author":{"gitId":"kaij77"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":96,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":97,"author":{"gitId":"jorrdansoh"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":98,"author":{"gitId":"jorrdansoh"},"content":"    public int compareTo(Consultation consultation) {","lastModifiedDate":"2022-10-20"},{"lineNumber":99,"author":{"gitId":"jorrdansoh"},"content":"        if (this.equals(consultation)) {","lastModifiedDate":"2022-10-20"},{"lineNumber":100,"author":{"gitId":"jorrdansoh"},"content":"            return 0;","lastModifiedDate":"2022-10-20"},{"lineNumber":101,"author":{"gitId":"jorrdansoh"},"content":"        } else if (this.isEmpty()) {","lastModifiedDate":"2022-10-20"},{"lineNumber":102,"author":{"gitId":"jorrdansoh"},"content":"            return 1;","lastModifiedDate":"2022-10-20"},{"lineNumber":103,"author":{"gitId":"jorrdansoh"},"content":"        } else if (consultation.isEmpty()) {","lastModifiedDate":"2022-10-20"},{"lineNumber":104,"author":{"gitId":"jorrdansoh"},"content":"            return -1;","lastModifiedDate":"2022-10-20"},{"lineNumber":105,"author":{"gitId":"jorrdansoh"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":106,"author":{"gitId":"jorrdansoh"},"content":"        return this.value.compareTo(consultation.value);","lastModifiedDate":"2022-10-20"},{"lineNumber":107,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":108,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":109,"author":{"gitId":"kaij77"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"jorrdansoh":51,"kaij77":58}},{"path":"src/main/java/friday/model/student/MasteryCheck.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaij77"},"content":"package friday.model.student;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"kaij77"},"content":"import static friday.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"kaij77"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"kaij77"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"jorrdansoh"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"kaij77"},"content":"/**","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"kaij77"},"content":" * Represents a Student\u0027s desired date for their Mastery Check.","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"kaij77"},"content":" */","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"jorrdansoh"},"content":"public class MasteryCheck implements Comparable\u003cMasteryCheck\u003e {","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"jorrdansoh"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Desired dates for Mastery Check should be valid dates in the \"","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"jorrdansoh"},"content":"        + \"format: YYYY-MM-DD, and the year should be between 1900 - 2999\";","lastModifiedDate":"2022-11-05"},{"lineNumber":16,"author":{"gitId":"kaij77"},"content":"    public static final String VALIDATION_REGEX \u003d \"^((19|2[0-9])[0-9]{2})-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$\";","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"jorrdansoh"},"content":"    // The empty value for when there is no mastery check date attached to a student","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"jorrdansoh"},"content":"    public static final MasteryCheck EMPTY_MASTERYCHECK \u003d new MasteryCheck();","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"kaij77"},"content":"    private LocalDate value;","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"kaij77"},"content":"    private boolean isPassed;","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"kaij77"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"kaij77"},"content":"     * Constructs an {@code MasteryCheck} with isPassed set to false by default.","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"kaij77"},"content":"     *","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"kaij77"},"content":"     * @param desiredDate The student\u0027s desired date for Mastery Check.","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"kaij77"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"kaij77"},"content":"    public MasteryCheck(LocalDate desiredDate) {","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"kaij77"},"content":"        requireNonNull(desiredDate);","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"kaij77"},"content":"        checkArgument(isValidMasteryCheck(desiredDate.toString()), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"kaij77"},"content":"        this.value \u003d desiredDate;","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"kaij77"},"content":"        this.isPassed \u003d false;","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"kaij77"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"kaij77"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"kaij77"},"content":"     * Constructs an {@code MasteryCheck} with the given isPassed value.","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"kaij77"},"content":"     *","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"kaij77"},"content":"     * @param desiredDate The student\u0027s desired date for Mastery Check.","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"kaij77"},"content":"     * @param isPassed True if Mastery Check has already been passed, false otherwise.","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"kaij77"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"kaij77"},"content":"    public MasteryCheck(LocalDate desiredDate, boolean isPassed) {","lastModifiedDate":"2022-10-20"},{"lineNumber":43,"author":{"gitId":"kaij77"},"content":"        requireNonNull(desiredDate);","lastModifiedDate":"2022-10-20"},{"lineNumber":44,"author":{"gitId":"kaij77"},"content":"        checkArgument(isValidMasteryCheck(desiredDate.toString()), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-20"},{"lineNumber":45,"author":{"gitId":"kaij77"},"content":"        this.value \u003d desiredDate;","lastModifiedDate":"2022-10-20"},{"lineNumber":46,"author":{"gitId":"kaij77"},"content":"        this.isPassed \u003d isPassed;","lastModifiedDate":"2022-10-20"},{"lineNumber":47,"author":{"gitId":"kaij77"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":48,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":49,"author":{"gitId":"kaij77"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":50,"author":{"gitId":"jorrdansoh"},"content":"     * Constructs a {@code MasteryCheck} for the empty instance.","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"jorrdansoh"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"jorrdansoh"},"content":"    private MasteryCheck() {","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"jorrdansoh"},"content":"        value \u003d LocalDate.of(0001, 01, 01);","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"jorrdansoh"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":57,"author":{"gitId":"jorrdansoh"},"content":"     * Returns true if a given string is a valid Mastery Check.","lastModifiedDate":"2022-10-09"},{"lineNumber":58,"author":{"gitId":"kaij77"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":59,"author":{"gitId":"kaij77"},"content":"    public static boolean isValidMasteryCheck(String test) {","lastModifiedDate":"2022-10-06"},{"lineNumber":60,"author":{"gitId":"jorrdansoh"},"content":"        try {","lastModifiedDate":"2022-10-27"},{"lineNumber":61,"author":{"gitId":"jorrdansoh"},"content":"            LocalDate.parse(test);","lastModifiedDate":"2022-10-27"},{"lineNumber":62,"author":{"gitId":"jorrdansoh"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-10-27"},{"lineNumber":63,"author":{"gitId":"jorrdansoh"},"content":"            return false;","lastModifiedDate":"2022-10-27"},{"lineNumber":64,"author":{"gitId":"jorrdansoh"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":65,"author":{"gitId":"kaij77"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-06"},{"lineNumber":66,"author":{"gitId":"kaij77"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":67,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":68,"author":{"gitId":"jorrdansoh"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":69,"author":{"gitId":"jorrdansoh"},"content":"     * Returns true if the given string is a valid Mastery Check or empty.","lastModifiedDate":"2022-10-09"},{"lineNumber":70,"author":{"gitId":"jorrdansoh"},"content":"     *","lastModifiedDate":"2022-10-09"},{"lineNumber":71,"author":{"gitId":"jorrdansoh"},"content":"     * Only to be used when converting JSON to Student in JsonAdaptedStudent.","lastModifiedDate":"2022-10-20"},{"lineNumber":72,"author":{"gitId":"jorrdansoh"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":73,"author":{"gitId":"jorrdansoh"},"content":"    public static boolean isValidOrEmptyJson(String test) {","lastModifiedDate":"2022-10-20"},{"lineNumber":74,"author":{"gitId":"jorrdansoh"},"content":"        return test.matches(VALIDATION_REGEX) || test.equals(\"0001-01-01\");","lastModifiedDate":"2022-10-09"},{"lineNumber":75,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":76,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":77,"author":{"gitId":"jorrdansoh"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":78,"author":{"gitId":"jorrdansoh"},"content":"     * Returns true if the given Mastery Check is the empty value.","lastModifiedDate":"2022-10-09"},{"lineNumber":79,"author":{"gitId":"jorrdansoh"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":80,"author":{"gitId":"jorrdansoh"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2022-10-09"},{"lineNumber":81,"author":{"gitId":"jorrdansoh"},"content":"        return this \u003d\u003d EMPTY_MASTERYCHECK;","lastModifiedDate":"2022-10-09"},{"lineNumber":82,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":83,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":84,"author":{"gitId":"kaij77"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":85,"author":{"gitId":"kaij77"},"content":"     * Returns the value of the given Mastery Check.","lastModifiedDate":"2022-10-06"},{"lineNumber":86,"author":{"gitId":"kaij77"},"content":"     *","lastModifiedDate":"2022-10-06"},{"lineNumber":87,"author":{"gitId":"kaij77"},"content":"     * @return value","lastModifiedDate":"2022-10-06"},{"lineNumber":88,"author":{"gitId":"kaij77"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":89,"author":{"gitId":"kaij77"},"content":"    public LocalDate getValue() {","lastModifiedDate":"2022-10-06"},{"lineNumber":90,"author":{"gitId":"kaij77"},"content":"        return value;","lastModifiedDate":"2022-10-06"},{"lineNumber":91,"author":{"gitId":"kaij77"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":92,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":93,"author":{"gitId":"kaij77"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":94,"author":{"gitId":"kaij77"},"content":"     * Returns true if the given Mastery Check has been marked as done, and false otherwise.","lastModifiedDate":"2022-10-20"},{"lineNumber":95,"author":{"gitId":"kaij77"},"content":"     *","lastModifiedDate":"2022-10-20"},{"lineNumber":96,"author":{"gitId":"kaij77"},"content":"     * @return isPassed","lastModifiedDate":"2022-10-20"},{"lineNumber":97,"author":{"gitId":"kaij77"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":98,"author":{"gitId":"kaij77"},"content":"    public boolean getIsPassed() {","lastModifiedDate":"2022-10-20"},{"lineNumber":99,"author":{"gitId":"kaij77"},"content":"        return isPassed;","lastModifiedDate":"2022-10-20"},{"lineNumber":100,"author":{"gitId":"kaij77"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":101,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":102,"author":{"gitId":"kaij77"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":103,"author":{"gitId":"kaij77"},"content":"     * Marks the given Mastery Check as done.","lastModifiedDate":"2022-10-20"},{"lineNumber":104,"author":{"gitId":"kaij77"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":105,"author":{"gitId":"kaij77"},"content":"    public void markAsPassed() {","lastModifiedDate":"2022-10-20"},{"lineNumber":106,"author":{"gitId":"kaij77"},"content":"        this.isPassed \u003d true;","lastModifiedDate":"2022-10-20"},{"lineNumber":107,"author":{"gitId":"kaij77"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":108,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":109,"author":{"gitId":"kaij77"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":110,"author":{"gitId":"kaij77"},"content":"     * Unmarks the given Mastery Check.","lastModifiedDate":"2022-10-25"},{"lineNumber":111,"author":{"gitId":"kaij77"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":112,"author":{"gitId":"kaij77"},"content":"    public void unmark() {","lastModifiedDate":"2022-10-25"},{"lineNumber":113,"author":{"gitId":"kaij77"},"content":"        this.isPassed \u003d false;","lastModifiedDate":"2022-10-25"},{"lineNumber":114,"author":{"gitId":"kaij77"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":115,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":116,"author":{"gitId":"kaij77"},"content":"    /**","lastModifiedDate":"2022-11-05"},{"lineNumber":117,"author":{"gitId":"kaij77"},"content":"     * Checks if a Mastery Check can be marked as passed. Returns false if the given Mastery Check is empty or if its","lastModifiedDate":"2022-11-05"},{"lineNumber":118,"author":{"gitId":"kaij77"},"content":"     * value is before the current date, and true otherwise.","lastModifiedDate":"2022-11-05"},{"lineNumber":119,"author":{"gitId":"kaij77"},"content":"     */","lastModifiedDate":"2022-11-05"},{"lineNumber":120,"author":{"gitId":"kaij77"},"content":"    public boolean canMarkAsPassed() {","lastModifiedDate":"2022-11-05"},{"lineNumber":121,"author":{"gitId":"kaij77"},"content":"        if (!this.isEmpty()) {","lastModifiedDate":"2022-11-05"},{"lineNumber":122,"author":{"gitId":"kaij77"},"content":"            return this.value.isBefore(LocalDate.now());","lastModifiedDate":"2022-10-31"},{"lineNumber":123,"author":{"gitId":"kaij77"},"content":"        } else {","lastModifiedDate":"2022-11-05"},{"lineNumber":124,"author":{"gitId":"kaij77"},"content":"            return false;","lastModifiedDate":"2022-11-05"},{"lineNumber":125,"author":{"gitId":"kaij77"},"content":"        }","lastModifiedDate":"2022-11-05"},{"lineNumber":126,"author":{"gitId":"kaij77"},"content":"    }","lastModifiedDate":"2022-10-31"},{"lineNumber":127,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":128,"author":{"gitId":"kaij77"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":129,"author":{"gitId":"kaij77"},"content":"    public String toString() {","lastModifiedDate":"2022-10-06"},{"lineNumber":130,"author":{"gitId":"kaij77"},"content":"        String value \u003d isEmpty() ? \"\" : this.value.toString();","lastModifiedDate":"2022-10-20"},{"lineNumber":131,"author":{"gitId":"kaij77"},"content":"        String isDone \u003d this.isPassed ? \" (Passed)\" : \"\";","lastModifiedDate":"2022-10-20"},{"lineNumber":132,"author":{"gitId":"jorrdansoh"},"content":"        return value + isDone;","lastModifiedDate":"2022-10-24"},{"lineNumber":133,"author":{"gitId":"kaij77"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":134,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":135,"author":{"gitId":"kaij77"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":136,"author":{"gitId":"kaij77"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-06"},{"lineNumber":137,"author":{"gitId":"kaij77"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-06"},{"lineNumber":138,"author":{"gitId":"kaij77"},"content":"                || (other instanceof MasteryCheck // instanceof handles nulls","lastModifiedDate":"2022-10-06"},{"lineNumber":139,"author":{"gitId":"kaij77"},"content":"                \u0026\u0026 value.equals(((MasteryCheck) other).value)); // state check","lastModifiedDate":"2022-10-06"},{"lineNumber":140,"author":{"gitId":"kaij77"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":141,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":142,"author":{"gitId":"kaij77"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":143,"author":{"gitId":"kaij77"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-06"},{"lineNumber":144,"author":{"gitId":"kaij77"},"content":"        return value.hashCode();","lastModifiedDate":"2022-10-06"},{"lineNumber":145,"author":{"gitId":"kaij77"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":146,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":147,"author":{"gitId":"jorrdansoh"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":148,"author":{"gitId":"jorrdansoh"},"content":"    public int compareTo(MasteryCheck masteryCheck) {","lastModifiedDate":"2022-10-20"},{"lineNumber":149,"author":{"gitId":"jorrdansoh"},"content":"        if (this.equals(masteryCheck)) {","lastModifiedDate":"2022-10-20"},{"lineNumber":150,"author":{"gitId":"jorrdansoh"},"content":"            return 0;","lastModifiedDate":"2022-10-20"},{"lineNumber":151,"author":{"gitId":"jorrdansoh"},"content":"        } else if (this.isEmpty()) {","lastModifiedDate":"2022-10-20"},{"lineNumber":152,"author":{"gitId":"jorrdansoh"},"content":"            return 1;","lastModifiedDate":"2022-10-20"},{"lineNumber":153,"author":{"gitId":"jorrdansoh"},"content":"        } else if (masteryCheck.isEmpty()) {","lastModifiedDate":"2022-10-20"},{"lineNumber":154,"author":{"gitId":"jorrdansoh"},"content":"            return -1;","lastModifiedDate":"2022-10-20"},{"lineNumber":155,"author":{"gitId":"jorrdansoh"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":156,"author":{"gitId":"jorrdansoh"},"content":"        return this.value.compareTo(masteryCheck.value);","lastModifiedDate":"2022-10-20"},{"lineNumber":157,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":158,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":159,"author":{"gitId":"kaij77"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"jorrdansoh":50,"kaij77":109}},{"path":"src/main/java/friday/model/student/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaij77"},"content":"package friday.model.student;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"HowSuen"},"content":"import static friday.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"jorrdansoh"},"content":" * Represents a Student\u0027s name in Friday.","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"jorrdansoh"},"content":"public class Name implements Comparable\u003cName\u003e {","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"jorrdansoh"},"content":"     * The first character of the name must not be a whitespace,","lastModifiedDate":"2022-11-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"jorrdansoh"},"content":"                \u0026\u0026 fullName.toLowerCase().equals(((Name) other).fullName.toLowerCase())); // state check","lastModifiedDate":"2022-10-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"jorrdansoh"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":60,"author":{"gitId":"jorrdansoh"},"content":"    public int compareTo(Name name) {","lastModifiedDate":"2022-10-20"},{"lineNumber":61,"author":{"gitId":"jorrdansoh"},"content":"        return this.fullName.toLowerCase().compareTo(name.fullName.toLowerCase());","lastModifiedDate":"2022-10-29"},{"lineNumber":62,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":63,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jorrdansoh":9,"kaij77":1,"-":53,"HowSuen":1}},{"path":"src/main/java/friday/model/student/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaij77"},"content":"package friday.model.student;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"Yuvaraj0702"},"content":"import friday.commons.util.StringUtil;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"jorrdansoh"},"content":" * Tests that a {@code Student}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"kaij77"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cStudent\u003e {","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"kaij77"},"content":"    public boolean test(Student student) {","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"Yuvaraj0702"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(student.getName().fullName, keyword)","lastModifiedDate":"2022-10-23"},{"lineNumber":23,"author":{"gitId":"Yuvaraj0702"},"content":"                        || StringUtil.containsWordIgnoreCase(student.getTelegramHandle().value, keyword)","lastModifiedDate":"2022-10-23"},{"lineNumber":24,"author":{"gitId":"Yuvaraj0702"},"content":"                        || StringUtil.containsWordIgnoreCase(student.getMasteryCheck().toString(), keyword)","lastModifiedDate":"2022-10-23"},{"lineNumber":25,"author":{"gitId":"Yuvaraj0702"},"content":"                        || StringUtil.containsWordIgnoreCase(student.getConsultation().toString(), keyword)","lastModifiedDate":"2022-10-23"},{"lineNumber":26,"author":{"gitId":"Yuvaraj0702"},"content":"                        || StringUtil.containsWordIgnoreCase(student.getRemark().value, keyword)","lastModifiedDate":"2022-10-23"},{"lineNumber":27,"author":{"gitId":"Yuvaraj0702"},"content":"                        || student.getTags().stream().anyMatch(tagword -\u003e","lastModifiedDate":"2022-10-23"},{"lineNumber":28,"author":{"gitId":"Yuvaraj0702"},"content":"                        StringUtil.containsWordIgnoreCase(tagword.toSearchString(), keyword))","lastModifiedDate":"2022-10-24"},{"lineNumber":29,"author":{"gitId":"Yuvaraj0702"},"content":"                        || student.getGradesList().getGradesArrayList().stream().anyMatch(tagword -\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":30,"author":{"gitId":"jorrdansoh"},"content":"                        StringUtil.containsWordIgnoreCase(tagword.getScore(), keyword))","lastModifiedDate":"2022-10-31"},{"lineNumber":31,"author":{"gitId":"Yuvaraj0702"},"content":"                        || student.getGradesList().getGradesArrayList().stream().anyMatch(tagword -\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":32,"author":{"gitId":"jorrdansoh"},"content":"                        StringUtil.containsWordIgnoreCase(tagword.getExamName(), keyword))","lastModifiedDate":"2022-10-31"},{"lineNumber":33,"author":{"gitId":"Yuvaraj0702"},"content":"                        || student.getGradesList().getGradesArrayList().stream().anyMatch(tagword -\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":34,"author":{"gitId":"Yuvaraj0702"},"content":"                        StringUtil.containsWordIgnoreCase(tagword.toString()","lastModifiedDate":"2022-10-24"},{"lineNumber":35,"author":{"gitId":"Yuvaraj0702"},"content":"                                .replace(\"[\", \"\").replace(\"]\", \"\").replace(\",\", \"\").replace(\": \", \":\"), keyword))","lastModifiedDate":"2022-10-24"},{"lineNumber":36,"author":{"gitId":"Yuvaraj0702"},"content":"                );","lastModifiedDate":"2022-10-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"jorrdansoh":3,"Yuvaraj0702":15,"kaij77":3,"-":25}},{"path":"src/main/java/friday/model/student/Remark.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaij77"},"content":"package friday.model.student;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-09-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"// @@author HowSuen-reused","lastModifiedDate":"2022-11-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"// Reused from https://nus-cs2103-ay2223s1.github.io/tp/tutorials/AddRemark.html","lastModifiedDate":"2022-11-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-09-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Represents a Student\u0027s remark in FRIDAY.","lastModifiedDate":"2022-10-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is always valid","lastModifiedDate":"2022-09-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-09-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Remark {","lastModifiedDate":"2022-09-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2022-09-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Constructs a {@code Remark}.","lastModifiedDate":"2022-09-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-09-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * @param remark A string remark","lastModifiedDate":"2022-09-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public Remark(String remark) {","lastModifiedDate":"2022-09-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        requireNonNull(remark);","lastModifiedDate":"2022-09-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        value \u003d remark;","lastModifiedDate":"2022-09-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Returns true if the given remark is empty.","lastModifiedDate":"2022-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2022-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return value \u003d\u003d \"\";","lastModifiedDate":"2022-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-09-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2022-09-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2022-09-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-09-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-09-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                || (other instanceof Remark // instanceof handles nulls","lastModifiedDate":"2022-09-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Remark) other).value)); // state check","lastModifiedDate":"2022-09-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-09-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2022-09-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2022-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-09-14"}],"authorContributionMap":{"kaij77":1,"-":47}},{"path":"src/main/java/friday/model/student/Student.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaij77"},"content":"package friday.model.student;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"HowSuen"},"content":"import static friday.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"jorrdansoh"},"content":"import static java.util.Objects.isNull;","lastModifiedDate":"2022-10-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"HowSuen"},"content":"import friday.model.grades.GradesList;","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"HowSuen"},"content":"import friday.model.tag.Tag;","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"jorrdansoh"},"content":" * Represents a Student in FRIDAY.","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"kaij77"},"content":"public class Student {","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"kaij77"},"content":"    private final TelegramHandle telegramHandle;","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"kaij77"},"content":"    private final MasteryCheck masteryCheck;","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"jorrdansoh"},"content":"    private final Consultation consultation;","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Remark remark;","lastModifiedDate":"2022-09-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":29,"author":{"gitId":"HowSuen"},"content":"    private final GradesList gradesList;","lastModifiedDate":"2022-10-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"kaij77"},"content":"    public Student(Name name, TelegramHandle telegramHandle, Consultation consultation, MasteryCheck masteryCheck,","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"HowSuen"},"content":"                   Remark remark, Set\u003cTag\u003e tags, GradesList gradesList) {","lastModifiedDate":"2022-10-21"},{"lineNumber":36,"author":{"gitId":"kaij77"},"content":"        requireAllNonNull(name, telegramHandle, consultation, masteryCheck, tags);","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"kaij77"},"content":"        this.telegramHandle \u003d telegramHandle;","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"kaij77"},"content":"        this.consultation \u003d consultation;","lastModifiedDate":"2022-10-06"},{"lineNumber":40,"author":{"gitId":"kaij77"},"content":"        this.masteryCheck \u003d masteryCheck;","lastModifiedDate":"2022-10-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2022-09-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":43,"author":{"gitId":"HowSuen"},"content":"        this.gradesList \u003d gradesList;","lastModifiedDate":"2022-10-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"kaij77"},"content":"    public TelegramHandle getTelegramHandle() {","lastModifiedDate":"2022-10-06"},{"lineNumber":51,"author":{"gitId":"kaij77"},"content":"        return telegramHandle;","lastModifiedDate":"2022-10-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"kaij77"},"content":"    public Consultation getConsultation() {","lastModifiedDate":"2022-10-06"},{"lineNumber":55,"author":{"gitId":"kaij77"},"content":"        return consultation;","lastModifiedDate":"2022-10-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"kaij77"},"content":"    public MasteryCheck getMasteryCheck() {","lastModifiedDate":"2022-10-06"},{"lineNumber":59,"author":{"gitId":"kaij77"},"content":"        return masteryCheck;","lastModifiedDate":"2022-10-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public Remark getRemark() {","lastModifiedDate":"2022-09-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return remark;","lastModifiedDate":"2022-09-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":66,"author":{"gitId":"HowSuen"},"content":"    public GradesList getGradesList() {","lastModifiedDate":"2022-10-21"},{"lineNumber":67,"author":{"gitId":"HowSuen"},"content":"        return gradesList;","lastModifiedDate":"2022-10-21"},{"lineNumber":68,"author":{"gitId":"HowSuen"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":69,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"jorrdansoh"},"content":"     * Returns true if both students have the same name or Telegram handle.","lastModifiedDate":"2022-10-29"},{"lineNumber":80,"author":{"gitId":"jorrdansoh"},"content":"     * This defines a weaker notion of equality between two students.","lastModifiedDate":"2022-10-20"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"jorrdansoh"},"content":"    public boolean isSameStudent(Student otherStudent) {","lastModifiedDate":"2022-10-06"},{"lineNumber":83,"author":{"gitId":"jorrdansoh"},"content":"        // short circuit if same object","lastModifiedDate":"2022-11-05"},{"lineNumber":84,"author":{"gitId":"kaij77"},"content":"        if (otherStudent \u003d\u003d this) {","lastModifiedDate":"2022-10-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"jorrdansoh"},"content":"        if (isNull(otherStudent)) {","lastModifiedDate":"2022-10-31"},{"lineNumber":89,"author":{"gitId":"jorrdansoh"},"content":"            return false;","lastModifiedDate":"2022-10-31"},{"lineNumber":90,"author":{"gitId":"jorrdansoh"},"content":"        }","lastModifiedDate":"2022-10-31"},{"lineNumber":91,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":92,"author":{"gitId":"jorrdansoh"},"content":"        // same name -\u003e same student","lastModifiedDate":"2022-11-05"},{"lineNumber":93,"author":{"gitId":"jorrdansoh"},"content":"        if (otherStudent.getName().equals(getName())) {","lastModifiedDate":"2022-10-31"},{"lineNumber":94,"author":{"gitId":"jorrdansoh"},"content":"            return true;","lastModifiedDate":"2022-10-31"},{"lineNumber":95,"author":{"gitId":"jorrdansoh"},"content":"        }","lastModifiedDate":"2022-10-31"},{"lineNumber":96,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":97,"author":{"gitId":"jorrdansoh"},"content":"        // do not consider them the same student just because the Telegram fields are empty","lastModifiedDate":"2022-11-05"},{"lineNumber":98,"author":{"gitId":"jorrdansoh"},"content":"        if (otherStudent.getTelegramHandle().isEmpty() || getTelegramHandle().isEmpty()) {","lastModifiedDate":"2022-10-31"},{"lineNumber":99,"author":{"gitId":"jorrdansoh"},"content":"            return false;","lastModifiedDate":"2022-10-31"},{"lineNumber":100,"author":{"gitId":"jorrdansoh"},"content":"        }","lastModifiedDate":"2022-10-31"},{"lineNumber":101,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":102,"author":{"gitId":"jorrdansoh"},"content":"        // check if their Telegram handles are the same","lastModifiedDate":"2022-11-05"},{"lineNumber":103,"author":{"gitId":"jorrdansoh"},"content":"        return otherStudent.getTelegramHandle().equals(getTelegramHandle());","lastModifiedDate":"2022-10-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":107,"author":{"gitId":"jorrdansoh"},"content":"     * Returns true if both students have the same identity and data fields.","lastModifiedDate":"2022-10-20"},{"lineNumber":108,"author":{"gitId":"jorrdansoh"},"content":"     * This defines a stronger notion of equality between two students.","lastModifiedDate":"2022-10-20"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":116,"author":{"gitId":"kaij77"},"content":"        if (!(other instanceof Student)) {","lastModifiedDate":"2022-10-06"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":120,"author":{"gitId":"kaij77"},"content":"        Student otherStudent \u003d (Student) other;","lastModifiedDate":"2022-10-06"},{"lineNumber":121,"author":{"gitId":"kaij77"},"content":"        return otherStudent.getName().equals(getName())","lastModifiedDate":"2022-10-06"},{"lineNumber":122,"author":{"gitId":"kaij77"},"content":"                \u0026\u0026 otherStudent.getTelegramHandle().equals(getTelegramHandle())","lastModifiedDate":"2022-10-06"},{"lineNumber":123,"author":{"gitId":"kaij77"},"content":"                \u0026\u0026 otherStudent.getConsultation().equals(getConsultation())","lastModifiedDate":"2022-10-06"},{"lineNumber":124,"author":{"gitId":"kaij77"},"content":"                \u0026\u0026 otherStudent.getMasteryCheck().equals(getMasteryCheck())","lastModifiedDate":"2022-10-06"},{"lineNumber":125,"author":{"gitId":"kaij77"},"content":"                \u0026\u0026 otherStudent.getTags().equals(getTags());","lastModifiedDate":"2022-10-06"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":131,"author":{"gitId":"kaij77"},"content":"        return Objects.hash(name, telegramHandle, consultation, masteryCheck, tags);","lastModifiedDate":"2022-10-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":137,"author":{"gitId":"jorrdansoh"},"content":"        builder.append(getName());","lastModifiedDate":"2022-10-07"},{"lineNumber":138,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":139,"author":{"gitId":"jorrdansoh"},"content":"        if (!telegramHandle.isEmpty()) {","lastModifiedDate":"2022-10-09"},{"lineNumber":140,"author":{"gitId":"jorrdansoh"},"content":"            builder.append(\"; Telegram handle: \")","lastModifiedDate":"2022-10-07"},{"lineNumber":141,"author":{"gitId":"jorrdansoh"},"content":"                    .append(getTelegramHandle());","lastModifiedDate":"2022-10-07"},{"lineNumber":142,"author":{"gitId":"jorrdansoh"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":143,"author":{"gitId":"jorrdansoh"},"content":"        if (!consultation.isEmpty()) {","lastModifiedDate":"2022-10-09"},{"lineNumber":144,"author":{"gitId":"jorrdansoh"},"content":"            builder.append(\"; Consultation: \")","lastModifiedDate":"2022-10-24"},{"lineNumber":145,"author":{"gitId":"jorrdansoh"},"content":"                    .append(getConsultation());","lastModifiedDate":"2022-10-06"},{"lineNumber":146,"author":{"gitId":"jorrdansoh"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":147,"author":{"gitId":"jorrdansoh"},"content":"        if (!masteryCheck.isEmpty()) {","lastModifiedDate":"2022-10-09"},{"lineNumber":148,"author":{"gitId":"jorrdansoh"},"content":"            builder.append(\"; Mastery Check: \")","lastModifiedDate":"2022-10-24"},{"lineNumber":149,"author":{"gitId":"jorrdansoh"},"content":"                    .append(getMasteryCheck());","lastModifiedDate":"2022-10-06"},{"lineNumber":150,"author":{"gitId":"jorrdansoh"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":151,"author":{"gitId":"jorrdansoh"},"content":"        if (!remark.isEmpty()) {","lastModifiedDate":"2022-10-07"},{"lineNumber":152,"author":{"gitId":"jorrdansoh"},"content":"            builder.append(\"; Remark: \")","lastModifiedDate":"2022-10-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"                    .append(getRemark());","lastModifiedDate":"2022-09-14"},{"lineNumber":154,"author":{"gitId":"jorrdansoh"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":161,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":162,"author":{"gitId":"HowSuen"},"content":"        builder.append(\"; Grades: \")","lastModifiedDate":"2022-10-21"},{"lineNumber":163,"author":{"gitId":"HowSuen"},"content":"                .append(getGradesList());","lastModifiedDate":"2022-10-21"},{"lineNumber":164,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jorrdansoh":42,"kaij77":24,"-":88,"HowSuen":14}},{"path":"src/main/java/friday/model/student/TelegramHandle.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaij77"},"content":"package friday.model.student;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"HowSuen"},"content":"import static friday.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"HowSuen"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"jorrdansoh"},"content":" * Represents a Student\u0027s Telegram handle in Friday.","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"kaij77"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidTelegramHandle(String)}","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"jorrdansoh"},"content":"public class TelegramHandle implements Comparable\u003cTelegramHandle\u003e {","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"HowSuen"},"content":"            \"Telegram handle should only contain letters a-z, numbers 0-9, and underscores; it should also be between \"","lastModifiedDate":"2022-10-29"},{"lineNumber":15,"author":{"gitId":"HowSuen"},"content":"                    + \"5 and 32 characters long\";","lastModifiedDate":"2022-10-29"},{"lineNumber":16,"author":{"gitId":"HowSuen"},"content":"    public static final String VALIDATION_REGEX \u003d \"[a-zA-Z0-9_]{5,32}\";","lastModifiedDate":"2022-10-29"},{"lineNumber":17,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"jorrdansoh"},"content":"    public static final TelegramHandle EMPTY_TELEGRAMHANDLE \u003d new TelegramHandle();","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"kaij77"},"content":"     * Constructs a {@code TelegramHandle}.","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"jorrdansoh"},"content":"     * @param handle A valid Telegram handle.","lastModifiedDate":"2022-11-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"kaij77"},"content":"    public TelegramHandle(String handle) {","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"kaij77"},"content":"        requireNonNull(handle);","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"kaij77"},"content":"        checkArgument(isValidTelegramHandle(handle), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"kaij77"},"content":"        value \u003d handle;","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"jorrdansoh"},"content":"     * Constructs a {@code TelegramHandle} for the empty instance.","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"jorrdansoh"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"jorrdansoh"},"content":"    private TelegramHandle() {","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"jorrdansoh"},"content":"        value \u003d \"\";","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"jorrdansoh"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"jorrdansoh"},"content":"     * Returns true if the given string is a valid Telegram handle.","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"kaij77"},"content":"    public static boolean isValidTelegramHandle(String test) {","lastModifiedDate":"2022-10-06"},{"lineNumber":44,"author":{"gitId":"jorrdansoh"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"jorrdansoh"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"jorrdansoh"},"content":"     * Returns true if the given string is a valid Telegram handle or empty.","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"jorrdansoh"},"content":"     *","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"jorrdansoh"},"content":"     * Only to be used when converting JSON to Student in JsonAdaptedStudent.","lastModifiedDate":"2022-10-20"},{"lineNumber":51,"author":{"gitId":"jorrdansoh"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"jorrdansoh"},"content":"    public static boolean isValidOrEmptyJson(String test) {","lastModifiedDate":"2022-10-20"},{"lineNumber":53,"author":{"gitId":"jorrdansoh"},"content":"        return test.matches(VALIDATION_REGEX) || test.equals(\"\");","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":55,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":56,"author":{"gitId":"jorrdansoh"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":57,"author":{"gitId":"jorrdansoh"},"content":"     * Returns true if the given Telegram handle is the empty value.","lastModifiedDate":"2022-10-09"},{"lineNumber":58,"author":{"gitId":"jorrdansoh"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":59,"author":{"gitId":"jorrdansoh"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2022-10-09"},{"lineNumber":60,"author":{"gitId":"jorrdansoh"},"content":"        return this \u003d\u003d EMPTY_TELEGRAMHANDLE;","lastModifiedDate":"2022-10-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"jorrdansoh"},"content":"        String str \u003d this.isEmpty() ? \"\" : value;","lastModifiedDate":"2022-10-09"},{"lineNumber":66,"author":{"gitId":"jorrdansoh"},"content":"        return \"@\" + str;","lastModifiedDate":"2022-10-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"kaij77"},"content":"                || (other instanceof TelegramHandle // instanceof handles nulls","lastModifiedDate":"2022-10-06"},{"lineNumber":73,"author":{"gitId":"jorrdansoh"},"content":"                \u0026\u0026 value.toLowerCase().equals(((TelegramHandle) other).value.toLowerCase())); // state check","lastModifiedDate":"2022-11-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"jorrdansoh"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":82,"author":{"gitId":"jorrdansoh"},"content":"    public int compareTo(TelegramHandle telegramHandle) {","lastModifiedDate":"2022-10-20"},{"lineNumber":83,"author":{"gitId":"jorrdansoh"},"content":"        if (this.equals(telegramHandle)) {","lastModifiedDate":"2022-10-20"},{"lineNumber":84,"author":{"gitId":"jorrdansoh"},"content":"            return 0;","lastModifiedDate":"2022-10-20"},{"lineNumber":85,"author":{"gitId":"jorrdansoh"},"content":"        } else if (this.isEmpty()) {","lastModifiedDate":"2022-10-20"},{"lineNumber":86,"author":{"gitId":"jorrdansoh"},"content":"            return 1;","lastModifiedDate":"2022-10-20"},{"lineNumber":87,"author":{"gitId":"jorrdansoh"},"content":"        } else if (telegramHandle.isEmpty()) {","lastModifiedDate":"2022-10-20"},{"lineNumber":88,"author":{"gitId":"jorrdansoh"},"content":"            return -1;","lastModifiedDate":"2022-10-20"},{"lineNumber":89,"author":{"gitId":"jorrdansoh"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":90,"author":{"gitId":"jorrdansoh"},"content":"        return this.value.toLowerCase().compareTo(telegramHandle.value.toLowerCase());","lastModifiedDate":"2022-10-29"},{"lineNumber":91,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":92,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jorrdansoh":46,"kaij77":9,"-":33,"HowSuen":5}},{"path":"src/main/java/friday/model/student/UniqueStudentList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaij77"},"content":"package friday.model.student;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"HowSuen"},"content":"import static friday.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"HowSuen"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"jorrdansoh"},"content":"import friday.model.student.exceptions.DuplicateStudentException;","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"jorrdansoh"},"content":"import friday.model.student.exceptions.StudentNotFoundException;","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"jorrdansoh"},"content":" * A list of students that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"jorrdansoh"},"content":" * A student is considered unique by comparing using {@code Student#isSameStudent(Student)}. As such, adding and","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"jorrdansoh"},"content":" * updating of students uses Student#isSameStudent(Student) for equality so as to ensure that the student being added","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"jorrdansoh"},"content":" * or updated is unique in terms of identity in the UniqueStudentList. However, the removal of a student uses","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"jorrdansoh"},"content":" * Student#equals(Object) so as to ensure that the student with exactly the same fields will be removed.","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"jorrdansoh"},"content":" * @see Student#isSameStudent(Student)","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"jorrdansoh"},"content":"public class UniqueStudentList implements Iterable\u003cStudent\u003e {","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"kaij77"},"content":"    private final ObservableList\u003cStudent\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"kaij77"},"content":"    private final ObservableList\u003cStudent\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"jorrdansoh"},"content":"     * Returns true if the list contains an equivalent student as the given argument.","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"kaij77"},"content":"    public boolean contains(Student toCheck) {","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"jorrdansoh"},"content":"        return internalList.stream().anyMatch(toCheck::isSameStudent);","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"jorrdansoh"},"content":"     * Adds a student to the list.","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"jorrdansoh"},"content":"     * The student must not already exist in the list.","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"kaij77"},"content":"    public void add(Student toAdd) {","lastModifiedDate":"2022-10-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"jorrdansoh"},"content":"            throw new DuplicateStudentException();","lastModifiedDate":"2022-10-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":52,"author":{"gitId":"jorrdansoh"},"content":"     * Replaces the student {@code target} in the list with {@code editedStudent}.","lastModifiedDate":"2022-10-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"jorrdansoh"},"content":"     * The student identity of {@code editedStudent} must not be the same as another existing student in the list.","lastModifiedDate":"2022-10-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":56,"author":{"gitId":"jorrdansoh"},"content":"    public void setStudent(Student target, Student editedStudent) {","lastModifiedDate":"2022-10-20"},{"lineNumber":57,"author":{"gitId":"kaij77"},"content":"        requireAllNonNull(target, editedStudent);","lastModifiedDate":"2022-10-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":61,"author":{"gitId":"jorrdansoh"},"content":"            throw new StudentNotFoundException();","lastModifiedDate":"2022-10-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":64,"author":{"gitId":"jorrdansoh"},"content":"        if (!target.isSameStudent(editedStudent) \u0026\u0026 contains(editedStudent)) {","lastModifiedDate":"2022-10-06"},{"lineNumber":65,"author":{"gitId":"jorrdansoh"},"content":"            throw new DuplicateStudentException();","lastModifiedDate":"2022-10-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":68,"author":{"gitId":"kaij77"},"content":"        internalList.set(index, editedStudent);","lastModifiedDate":"2022-10-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"jorrdansoh"},"content":"     * Removes the equivalent student from the list.","lastModifiedDate":"2022-10-20"},{"lineNumber":73,"author":{"gitId":"jorrdansoh"},"content":"     * The student must exist in the list.","lastModifiedDate":"2022-10-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"kaij77"},"content":"    public void remove(Student toRemove) {","lastModifiedDate":"2022-10-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":78,"author":{"gitId":"jorrdansoh"},"content":"            throw new StudentNotFoundException();","lastModifiedDate":"2022-10-20"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"jorrdansoh"},"content":"    public void setStudents(UniqueStudentList replacement) {","lastModifiedDate":"2022-10-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"jorrdansoh"},"content":"     * Replaces the contents of this list with {@code students}.","lastModifiedDate":"2022-10-20"},{"lineNumber":89,"author":{"gitId":"jorrdansoh"},"content":"     * {@code students} must not contain duplicate students.","lastModifiedDate":"2022-10-20"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"jorrdansoh"},"content":"    public void setStudents(List\u003cStudent\u003e students) {","lastModifiedDate":"2022-10-20"},{"lineNumber":92,"author":{"gitId":"kaij77"},"content":"        requireAllNonNull(students);","lastModifiedDate":"2022-10-06"},{"lineNumber":93,"author":{"gitId":"jorrdansoh"},"content":"        if (!studentsAreUnique(students)) {","lastModifiedDate":"2022-10-20"},{"lineNumber":94,"author":{"gitId":"jorrdansoh"},"content":"            throw new DuplicateStudentException();","lastModifiedDate":"2022-10-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":97,"author":{"gitId":"kaij77"},"content":"        internalList.setAll(students);","lastModifiedDate":"2022-10-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":103,"author":{"gitId":"kaij77"},"content":"    public ObservableList\u003cStudent\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-10-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"kaij77"},"content":"    public Iterator\u003cStudent\u003e iterator() {","lastModifiedDate":"2022-10-06"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"jorrdansoh"},"content":"                || (other instanceof UniqueStudentList // instanceof handles nulls","lastModifiedDate":"2022-10-20"},{"lineNumber":116,"author":{"gitId":"jorrdansoh"},"content":"                        \u0026\u0026 internalList.equals(((UniqueStudentList) other).internalList));","lastModifiedDate":"2022-10-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":125,"author":{"gitId":"jorrdansoh"},"content":"     * Returns true if {@code students} contains only unique students.","lastModifiedDate":"2022-10-20"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":127,"author":{"gitId":"jorrdansoh"},"content":"    private boolean studentsAreUnique(List\u003cStudent\u003e students) {","lastModifiedDate":"2022-10-20"},{"lineNumber":128,"author":{"gitId":"kaij77"},"content":"        for (int i \u003d 0; i \u003c students.size() - 1; i++) {","lastModifiedDate":"2022-10-06"},{"lineNumber":129,"author":{"gitId":"kaij77"},"content":"            for (int j \u003d i + 1; j \u003c students.size(); j++) {","lastModifiedDate":"2022-10-06"},{"lineNumber":130,"author":{"gitId":"jorrdansoh"},"content":"                if (students.get(i).isSameStudent(students.get(j))) {","lastModifiedDate":"2022-10-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jorrdansoh":34,"kaij77":14,"-":87,"HowSuen":2}},{"path":"src/main/java/friday/model/student/exceptions/DuplicatePersonException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaij77"},"content":"package friday.model.student.exceptions;","lastModifiedDate":"2022-10-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-10-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that the operation will result in duplicate Persons (Persons are considered duplicates if they have the same","lastModifiedDate":"2022-10-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * identity).","lastModifiedDate":"2022-10-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class DuplicatePersonException extends RuntimeException {","lastModifiedDate":"2022-10-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public DuplicatePersonException() {","lastModifiedDate":"2022-10-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"        super(\"Operation would result in duplicate persons\");","lastModifiedDate":"2022-10-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-25"}],"authorContributionMap":{"kaij77":1,"-":10}},{"path":"src/main/java/friday/model/student/exceptions/DuplicateStudentException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jorrdansoh"},"content":"package friday.model.student.exceptions;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"jorrdansoh"},"content":"/**","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"jorrdansoh"},"content":" * Signals that the operation will result in duplicate Students (Students are considered duplicates if they have the","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"jorrdansoh"},"content":" * same identity).","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"jorrdansoh"},"content":" */","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"jorrdansoh"},"content":"public class DuplicateStudentException extends RuntimeException {","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"jorrdansoh"},"content":"    public DuplicateStudentException() {","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"jorrdansoh"},"content":"        super(\"Operation would result in duplicate students\");","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"jorrdansoh"},"content":"}","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"jorrdansoh":11}},{"path":"src/main/java/friday/model/student/exceptions/PersonNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaij77"},"content":"package friday.model.student.exceptions;","lastModifiedDate":"2022-10-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-10-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that the operation is unable to find the specified person.","lastModifiedDate":"2022-10-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-10-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class PersonNotFoundException extends RuntimeException {}","lastModifiedDate":"2022-10-25"}],"authorContributionMap":{"kaij77":1,"-":5}},{"path":"src/main/java/friday/model/student/exceptions/StudentNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jorrdansoh"},"content":"package friday.model.student.exceptions;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"jorrdansoh"},"content":"/**","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"jorrdansoh"},"content":" * Signals that the operation is unable to find the specified student.","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"jorrdansoh"},"content":" */","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"jorrdansoh"},"content":"public class StudentNotFoundException extends RuntimeException {}","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"jorrdansoh":6}},{"path":"src/main/java/friday/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.model.tag;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"HowSuen"},"content":"import static friday.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"Yuvaraj0702"},"content":" * Represents a Tag in Friday.","lastModifiedDate":"2022-10-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"HowSuen"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags\u0027 names should be alphanumeric and limited to 20 characters. \"","lastModifiedDate":"2022-10-29"},{"lineNumber":13,"author":{"gitId":"HowSuen"},"content":"            + \"Whitespaces are allowed.\";","lastModifiedDate":"2022-10-29"},{"lineNumber":14,"author":{"gitId":"HowSuen"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[a-zA-Z0-9 ]{0,20}$\";","lastModifiedDate":"2022-10-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"Yuvaraj0702"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":56,"author":{"gitId":"Yuvaraj0702"},"content":"     * Format state as text for searching.","lastModifiedDate":"2022-10-23"},{"lineNumber":57,"author":{"gitId":"Yuvaraj0702"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":58,"author":{"gitId":"Yuvaraj0702"},"content":"    public String toSearchString() {","lastModifiedDate":"2022-10-23"},{"lineNumber":59,"author":{"gitId":"Yuvaraj0702"},"content":"        return tagName;","lastModifiedDate":"2022-10-23"},{"lineNumber":60,"author":{"gitId":"Yuvaraj0702"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Yuvaraj0702":7,"-":49,"HowSuen":5}},{"path":"src/main/java/friday/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.model.util;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"kaij77"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":8,"author":{"gitId":"darrtzj"},"content":"import friday.model.Friday;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"darrtzj"},"content":"import friday.model.ReadOnlyFriday;","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"HowSuen"},"content":"import friday.model.grades.GradesList;","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"kaij77"},"content":"import friday.model.student.Consultation;","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"kaij77"},"content":"import friday.model.student.MasteryCheck;","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"kaij77"},"content":"import friday.model.student.Name;","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"kaij77"},"content":"import friday.model.student.Remark;","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"kaij77"},"content":"import friday.model.student.Student;","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"kaij77"},"content":"import friday.model.student.TelegramHandle;","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"HowSuen"},"content":"import friday.model.tag.Tag;","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":20,"author":{"gitId":"jorrdansoh"},"content":" * Contains utility methods for populating {@code Friday} with sample data.","lastModifiedDate":"2022-11-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final Remark EMPTY_REMARK \u003d new Remark(\"\");","lastModifiedDate":"2022-09-14"},{"lineNumber":25,"author":{"gitId":"HowSuen"},"content":"    public static final GradesList EMPTY_GRADESLIST \u003d new GradesList();","lastModifiedDate":"2022-10-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":27,"author":{"gitId":"jorrdansoh"},"content":"    public static Student[] getSampleStudents() {","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"kaij77"},"content":"        return new Student[] {","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"jorrdansoh"},"content":"            new Student(new Name(\"Alex Yeoh\"), new TelegramHandle(\"al3xx\"), new Consultation(LocalDate.now()),","lastModifiedDate":"2022-10-07"},{"lineNumber":30,"author":{"gitId":"kaij77"},"content":"                new MasteryCheck(LocalDate.of(2022, 8, 16)), EMPTY_REMARK,","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"HowSuen"},"content":"                getTagSet(\"Colour blind\"), EMPTY_GRADESLIST),","lastModifiedDate":"2022-10-21"},{"lineNumber":32,"author":{"gitId":"kaij77"},"content":"            new Student(new Name(\"Bernice Yu\"), new TelegramHandle(\"bernice123\"),","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"kaij77"},"content":"                    new Consultation(LocalDate.of(2022, 9, 1)),","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"kaij77"},"content":"                    new MasteryCheck(LocalDate.of(2022, 7, 30)), new Remark(\"Weak at recursion\"),","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"HowSuen"},"content":"                    getTagSet(\"Fast learner\"), EMPTY_GRADESLIST),","lastModifiedDate":"2022-10-21"},{"lineNumber":36,"author":{"gitId":"jorrdansoh"},"content":"            new Student(new Name(\"Charlotte Oliveiro\"), new TelegramHandle(\"char_oli\"),","lastModifiedDate":"2022-10-07"},{"lineNumber":37,"author":{"gitId":"kaij77"},"content":"                    new Consultation(LocalDate.of(2021, 10, 21)),","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"kaij77"},"content":"                    new MasteryCheck(LocalDate.of(2022, 12, 27)), new Remark(\"Smart\"),","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"HowSuen"},"content":"                    getTagSet(\"Dyslexic\"), EMPTY_GRADESLIST),","lastModifiedDate":"2022-10-21"},{"lineNumber":40,"author":{"gitId":"jorrdansoh"},"content":"            new Student(new Name(\"David Li\"), new TelegramHandle(\"d4vid\"),","lastModifiedDate":"2022-10-07"},{"lineNumber":41,"author":{"gitId":"kaij77"},"content":"                    new Consultation(LocalDate.of(2022, 6, 17)),","lastModifiedDate":"2022-10-06"},{"lineNumber":42,"author":{"gitId":"kaij77"},"content":"                    new MasteryCheck(LocalDate.of(2022, 11, 11)), EMPTY_REMARK,","lastModifiedDate":"2022-10-06"},{"lineNumber":43,"author":{"gitId":"HowSuen"},"content":"                    getTagSet(\"Needs more help\"), EMPTY_GRADESLIST),","lastModifiedDate":"2022-10-21"},{"lineNumber":44,"author":{"gitId":"kaij77"},"content":"            new Student(new Name(\"Irfan Ibrahim\"), new TelegramHandle(\"irfan72345\"),","lastModifiedDate":"2022-10-06"},{"lineNumber":45,"author":{"gitId":"kaij77"},"content":"                    new Consultation(LocalDate.of(2025, 2, 20)),","lastModifiedDate":"2022-10-06"},{"lineNumber":46,"author":{"gitId":"kaij77"},"content":"                    new MasteryCheck(LocalDate.of(2020, 9, 1)), EMPTY_REMARK,","lastModifiedDate":"2022-10-06"},{"lineNumber":47,"author":{"gitId":"HowSuen"},"content":"                    getTagSet(\"Cool guy\"), EMPTY_GRADESLIST),","lastModifiedDate":"2022-10-21"},{"lineNumber":48,"author":{"gitId":"jorrdansoh"},"content":"            new Student(new Name(\"Roy Balakrishnan\"), new TelegramHandle(\"i_am_roy\"),","lastModifiedDate":"2022-10-07"},{"lineNumber":49,"author":{"gitId":"kaij77"},"content":"                    new Consultation(LocalDate.of(2022, 7, 12)),","lastModifiedDate":"2022-10-06"},{"lineNumber":50,"author":{"gitId":"kaij77"},"content":"                    new MasteryCheck(LocalDate.of(2029, 9, 26)), EMPTY_REMARK,","lastModifiedDate":"2022-10-06"},{"lineNumber":51,"author":{"gitId":"HowSuen"},"content":"                    getTagSet(\"Fast learner\"), EMPTY_GRADESLIST)","lastModifiedDate":"2022-10-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":55,"author":{"gitId":"Yuvaraj0702"},"content":"    public static ReadOnlyFriday getSampleFriday() {","lastModifiedDate":"2022-10-24"},{"lineNumber":56,"author":{"gitId":"darrtzj"},"content":"        Friday sampleAb \u003d new Friday();","lastModifiedDate":"2022-10-06"},{"lineNumber":57,"author":{"gitId":"jorrdansoh"},"content":"        for (Student sampleStudent : getSampleStudents()) {","lastModifiedDate":"2022-10-20"},{"lineNumber":58,"author":{"gitId":"jorrdansoh"},"content":"            sampleAb.addStudent(sampleStudent);","lastModifiedDate":"2022-10-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"jorrdansoh":8,"Yuvaraj0702":1,"darrtzj":3,"kaij77":21,"-":29,"HowSuen":10}},{"path":"src/main/java/friday/storage/FridayStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.storage;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"HowSuen"},"content":"import friday.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"darrtzj"},"content":"import friday.model.Friday;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"darrtzj"},"content":"import friday.model.ReadOnlyFriday;","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"darrtzj"},"content":" * Represents a storage for {@link Friday}.","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"darrtzj"},"content":"public interface FridayStorage {","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"darrtzj"},"content":"    Path getFridayFilePath();","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"darrtzj"},"content":"     * Returns Friday data as a {@link ReadOnlyFriday}.","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"darrtzj"},"content":"    Optional\u003cReadOnlyFriday\u003e readFriday() throws DataConversionException, IOException;","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"darrtzj"},"content":"     * @see #getFridayFilePath()","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":32,"author":{"gitId":"darrtzj"},"content":"    Optional\u003cReadOnlyFriday\u003e readFriday(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"darrtzj"},"content":"     * Saves the given {@link ReadOnlyFriday} to the storage.","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"darrtzj"},"content":"     * @param friday cannot be null.","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"darrtzj"},"content":"    void saveFriday(ReadOnlyFriday friday) throws IOException;","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"darrtzj"},"content":"     * @see #saveFriday(ReadOnlyFriday)","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":44,"author":{"gitId":"darrtzj"},"content":"    void saveFriday(ReadOnlyFriday friday, Path filePath) throws IOException;","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"darrtzj":14,"-":30,"HowSuen":2}},{"path":"src/main/java/friday/storage/JsonAdaptedAlias.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"darrtzj"},"content":"package friday.storage;","lastModifiedDate":"2022-10-23"},{"lineNumber":2,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":3,"author":{"gitId":"darrtzj"},"content":"import java.util.Map;","lastModifiedDate":"2022-10-23"},{"lineNumber":4,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":5,"author":{"gitId":"darrtzj"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-10-23"},{"lineNumber":6,"author":{"gitId":"darrtzj"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-10-23"},{"lineNumber":7,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":8,"author":{"gitId":"darrtzj"},"content":"import friday.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-23"},{"lineNumber":9,"author":{"gitId":"darrtzj"},"content":"import friday.model.alias.Alias;","lastModifiedDate":"2022-10-23"},{"lineNumber":10,"author":{"gitId":"darrtzj"},"content":"import friday.model.alias.ReservedKeyword;","lastModifiedDate":"2022-10-23"},{"lineNumber":11,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":12,"author":{"gitId":"darrtzj"},"content":"/**","lastModifiedDate":"2022-10-23"},{"lineNumber":13,"author":{"gitId":"darrtzj"},"content":" * Jackson-friendly version of {@link Alias} and {@link ReservedKeyword}.","lastModifiedDate":"2022-10-23"},{"lineNumber":14,"author":{"gitId":"darrtzj"},"content":" */","lastModifiedDate":"2022-10-23"},{"lineNumber":15,"author":{"gitId":"darrtzj"},"content":"class JsonAdaptedAlias {","lastModifiedDate":"2022-10-23"},{"lineNumber":16,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":17,"author":{"gitId":"darrtzj"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Alias %s field is missing!\";","lastModifiedDate":"2022-10-23"},{"lineNumber":18,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":19,"author":{"gitId":"darrtzj"},"content":"    private final String alias;","lastModifiedDate":"2022-10-23"},{"lineNumber":20,"author":{"gitId":"darrtzj"},"content":"    private final String keyword;","lastModifiedDate":"2022-10-23"},{"lineNumber":21,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":22,"author":{"gitId":"darrtzj"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":23,"author":{"gitId":"darrtzj"},"content":"     * Constructs a {@code JsonAdaptedAlias} with the given alias details.","lastModifiedDate":"2022-10-23"},{"lineNumber":24,"author":{"gitId":"darrtzj"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":25,"author":{"gitId":"darrtzj"},"content":"    @JsonCreator","lastModifiedDate":"2022-10-23"},{"lineNumber":26,"author":{"gitId":"darrtzj"},"content":"    public JsonAdaptedAlias(@JsonProperty(\"alias\") String alias, @JsonProperty(\"reservedKeyword\") String keyword) {","lastModifiedDate":"2022-10-23"},{"lineNumber":27,"author":{"gitId":"darrtzj"},"content":"        this.alias \u003d alias;","lastModifiedDate":"2022-10-23"},{"lineNumber":28,"author":{"gitId":"darrtzj"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2022-10-23"},{"lineNumber":29,"author":{"gitId":"darrtzj"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":30,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":31,"author":{"gitId":"darrtzj"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":32,"author":{"gitId":"darrtzj"},"content":"     * Converts a given {@code Map.Entry} into this class for Jackson use.","lastModifiedDate":"2022-10-23"},{"lineNumber":33,"author":{"gitId":"darrtzj"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":34,"author":{"gitId":"darrtzj"},"content":"    public JsonAdaptedAlias(Map.Entry\u003cAlias, ReservedKeyword\u003e source) {","lastModifiedDate":"2022-10-25"},{"lineNumber":35,"author":{"gitId":"darrtzj"},"content":"        alias \u003d source.getKey().toString();","lastModifiedDate":"2022-10-25"},{"lineNumber":36,"author":{"gitId":"darrtzj"},"content":"        keyword \u003d source.getValue().toString();","lastModifiedDate":"2022-10-25"},{"lineNumber":37,"author":{"gitId":"darrtzj"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":38,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":39,"author":{"gitId":"darrtzj"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":40,"author":{"gitId":"darrtzj"},"content":"     * Converts this Jackson-friendly adapted alias object into the model\u0027s {@code Alias} object.","lastModifiedDate":"2022-10-23"},{"lineNumber":41,"author":{"gitId":"darrtzj"},"content":"     *","lastModifiedDate":"2022-10-23"},{"lineNumber":42,"author":{"gitId":"darrtzj"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted alias.","lastModifiedDate":"2022-10-23"},{"lineNumber":43,"author":{"gitId":"darrtzj"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":44,"author":{"gitId":"darrtzj"},"content":"    public Alias toAliasModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-23"},{"lineNumber":45,"author":{"gitId":"darrtzj"},"content":"        if (alias \u003d\u003d null) {","lastModifiedDate":"2022-10-23"},{"lineNumber":46,"author":{"gitId":"darrtzj"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-10-23"},{"lineNumber":47,"author":{"gitId":"darrtzj"},"content":"                    Alias.class.getSimpleName()));","lastModifiedDate":"2022-10-23"},{"lineNumber":48,"author":{"gitId":"darrtzj"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":49,"author":{"gitId":"darrtzj"},"content":"        return new Alias(alias);","lastModifiedDate":"2022-10-23"},{"lineNumber":50,"author":{"gitId":"darrtzj"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":51,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":52,"author":{"gitId":"darrtzj"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":53,"author":{"gitId":"darrtzj"},"content":"     * Converts this Jackson-friendly adapted alias object into the model\u0027s {@code ReservedKeyword} object.","lastModifiedDate":"2022-10-23"},{"lineNumber":54,"author":{"gitId":"darrtzj"},"content":"     *","lastModifiedDate":"2022-10-23"},{"lineNumber":55,"author":{"gitId":"darrtzj"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted reserved keyword.","lastModifiedDate":"2022-10-23"},{"lineNumber":56,"author":{"gitId":"darrtzj"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":57,"author":{"gitId":"darrtzj"},"content":"    public ReservedKeyword toReservedKeywordModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-23"},{"lineNumber":58,"author":{"gitId":"darrtzj"},"content":"        if (keyword \u003d\u003d null) {","lastModifiedDate":"2022-10-23"},{"lineNumber":59,"author":{"gitId":"darrtzj"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-10-23"},{"lineNumber":60,"author":{"gitId":"darrtzj"},"content":"                    ReservedKeyword.class.getSimpleName()));","lastModifiedDate":"2022-10-23"},{"lineNumber":61,"author":{"gitId":"darrtzj"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":62,"author":{"gitId":"darrtzj"},"content":"        if (!ReservedKeyword.isValidReservedKeyword(keyword)) {","lastModifiedDate":"2022-10-23"},{"lineNumber":63,"author":{"gitId":"darrtzj"},"content":"            throw new IllegalValueException(ReservedKeyword.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-23"},{"lineNumber":64,"author":{"gitId":"darrtzj"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":65,"author":{"gitId":"darrtzj"},"content":"        return new ReservedKeyword(keyword);","lastModifiedDate":"2022-10-23"},{"lineNumber":66,"author":{"gitId":"darrtzj"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":67,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":68,"author":{"gitId":"darrtzj"},"content":"}","lastModifiedDate":"2022-10-23"},{"lineNumber":69,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"}],"authorContributionMap":{"darrtzj":69}},{"path":"src/main/java/friday/storage/JsonAdaptedGrade.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.storage;","lastModifiedDate":"2022-10-21"},{"lineNumber":2,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":3,"author":{"gitId":"HowSuen"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-10-21"},{"lineNumber":4,"author":{"gitId":"HowSuen"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"HowSuen"},"content":"import friday.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"HowSuen"},"content":"import friday.model.grades.Grade;","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"HowSuen"},"content":"/**","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"HowSuen"},"content":" * Jackson-friendly version of {@link Grade}.","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"HowSuen"},"content":" */","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"HowSuen"},"content":"public class JsonAdaptedGrade {","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"HowSuen"},"content":"    private final String score;","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"HowSuen"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":17,"author":{"gitId":"HowSuen"},"content":"     * Constructs a {@code JsonAdaptedGrade} with the given {@code score}.","lastModifiedDate":"2022-10-21"},{"lineNumber":18,"author":{"gitId":"HowSuen"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"HowSuen"},"content":"    @JsonCreator","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"HowSuen"},"content":"    public JsonAdaptedGrade(String score) {","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"HowSuen"},"content":"        this.score \u003d score;","lastModifiedDate":"2022-10-21"},{"lineNumber":22,"author":{"gitId":"HowSuen"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":23,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"HowSuen"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":25,"author":{"gitId":"HowSuen"},"content":"     * Converts a given {@code Grade} into this class for Jackson use.","lastModifiedDate":"2022-10-21"},{"lineNumber":26,"author":{"gitId":"HowSuen"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":27,"author":{"gitId":"HowSuen"},"content":"    public JsonAdaptedGrade(Grade source) {","lastModifiedDate":"2022-10-21"},{"lineNumber":28,"author":{"gitId":"jorrdansoh"},"content":"        score \u003d source.getScore();","lastModifiedDate":"2022-10-31"},{"lineNumber":29,"author":{"gitId":"HowSuen"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":30,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":31,"author":{"gitId":"HowSuen"},"content":"    @JsonValue","lastModifiedDate":"2022-10-21"},{"lineNumber":32,"author":{"gitId":"HowSuen"},"content":"    public String getGradeScore() {","lastModifiedDate":"2022-10-21"},{"lineNumber":33,"author":{"gitId":"HowSuen"},"content":"        return score;","lastModifiedDate":"2022-10-21"},{"lineNumber":34,"author":{"gitId":"HowSuen"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":35,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":36,"author":{"gitId":"HowSuen"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":37,"author":{"gitId":"HowSuen"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Grade} object.","lastModifiedDate":"2022-10-21"},{"lineNumber":38,"author":{"gitId":"HowSuen"},"content":"     *","lastModifiedDate":"2022-10-21"},{"lineNumber":39,"author":{"gitId":"HowSuen"},"content":"     * @param index the identity of the assessment or examination","lastModifiedDate":"2022-10-21"},{"lineNumber":40,"author":{"gitId":"HowSuen"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted grade.","lastModifiedDate":"2022-10-21"},{"lineNumber":41,"author":{"gitId":"HowSuen"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":42,"author":{"gitId":"HowSuen"},"content":"    public Grade toModelType(int index) throws IllegalValueException {","lastModifiedDate":"2022-10-21"},{"lineNumber":43,"author":{"gitId":"HowSuen"},"content":"        if (!Grade.isValidScore(score)) {","lastModifiedDate":"2022-10-21"},{"lineNumber":44,"author":{"gitId":"HowSuen"},"content":"            throw new IllegalValueException(Grade.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-21"},{"lineNumber":45,"author":{"gitId":"HowSuen"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":46,"author":{"gitId":"HowSuen"},"content":"        switch (index) {","lastModifiedDate":"2022-10-21"},{"lineNumber":47,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":48,"author":{"gitId":"HowSuen"},"content":"        case 0:","lastModifiedDate":"2022-10-21"},{"lineNumber":49,"author":{"gitId":"HowSuen"},"content":"            return new Grade(\"RA1\", score);","lastModifiedDate":"2022-10-21"},{"lineNumber":50,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":51,"author":{"gitId":"HowSuen"},"content":"        case 1:","lastModifiedDate":"2022-10-21"},{"lineNumber":52,"author":{"gitId":"HowSuen"},"content":"            return new Grade(\"RA2\", score);","lastModifiedDate":"2022-10-21"},{"lineNumber":53,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":54,"author":{"gitId":"HowSuen"},"content":"        case 2:","lastModifiedDate":"2022-10-21"},{"lineNumber":55,"author":{"gitId":"jorrdansoh"},"content":"            return new Grade(\"Midterm\", score);","lastModifiedDate":"2022-10-24"},{"lineNumber":56,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":57,"author":{"gitId":"HowSuen"},"content":"        case 3:","lastModifiedDate":"2022-10-21"},{"lineNumber":58,"author":{"gitId":"HowSuen"},"content":"            return new Grade(\"Practical\", score);","lastModifiedDate":"2022-10-21"},{"lineNumber":59,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":60,"author":{"gitId":"HowSuen"},"content":"        case 4:","lastModifiedDate":"2022-10-21"},{"lineNumber":61,"author":{"gitId":"HowSuen"},"content":"            return new Grade(\"Finals\", score);","lastModifiedDate":"2022-10-21"},{"lineNumber":62,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":63,"author":{"gitId":"HowSuen"},"content":"        default:","lastModifiedDate":"2022-10-21"},{"lineNumber":64,"author":{"gitId":"HowSuen"},"content":"            return new Grade(\"test\", score);","lastModifiedDate":"2022-10-21"},{"lineNumber":65,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":66,"author":{"gitId":"HowSuen"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":67,"author":{"gitId":"HowSuen"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":68,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":69,"author":{"gitId":"HowSuen"},"content":"}","lastModifiedDate":"2022-10-21"}],"authorContributionMap":{"jorrdansoh":2,"HowSuen":67}},{"path":"src/main/java/friday/storage/JsonAdaptedStudent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.storage;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"HowSuen"},"content":"import static friday.model.grades.GradesList.EXAMS_COUNT;","lastModifiedDate":"2022-10-21"},{"lineNumber":4,"author":{"gitId":"jorrdansoh"},"content":"import static friday.model.student.Consultation.EMPTY_CONSULTATION;","lastModifiedDate":"2022-11-05"},{"lineNumber":5,"author":{"gitId":"jorrdansoh"},"content":"import static friday.model.student.MasteryCheck.EMPTY_MASTERYCHECK;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"jorrdansoh"},"content":"import static friday.model.student.TelegramHandle.EMPTY_TELEGRAMHANDLE;","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"kaij77"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"HowSuen"},"content":"import friday.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"HowSuen"},"content":"import friday.model.grades.GradesList;","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"kaij77"},"content":"import friday.model.student.Consultation;","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"kaij77"},"content":"import friday.model.student.MasteryCheck;","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"kaij77"},"content":"import friday.model.student.Name;","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"kaij77"},"content":"import friday.model.student.Remark;","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"kaij77"},"content":"import friday.model.student.Student;","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"kaij77"},"content":"import friday.model.student.TelegramHandle;","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"HowSuen"},"content":"import friday.model.tag.Tag;","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"kaij77"},"content":" * Jackson-friendly version of {@link Student}.","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"Yuvaraj0702"},"content":"class JsonAdaptedStudent {","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"jorrdansoh"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Student\u0027s %s field is missing!\";","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"kaij77"},"content":"    private final String telegramHandle;","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"kaij77"},"content":"    private final LocalDate masteryCheck;","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"kaij77"},"content":"    private boolean masteryCheckIsDone;","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"kaij77"},"content":"    private final LocalDate consultation;","lastModifiedDate":"2022-10-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2022-09-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"HowSuen"},"content":"    private final List\u003cJsonAdaptedGrade\u003e gradesList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"jorrdansoh"},"content":"     * Constructs a {@code JsonAdaptedStudent} with the given student details.","lastModifiedDate":"2022-10-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"Yuvaraj0702"},"content":"    public JsonAdaptedStudent(@JsonProperty(\"name\") String name, @JsonProperty(\"telegramHandle\") String telegramHandle,","lastModifiedDate":"2022-10-20"},{"lineNumber":49,"author":{"gitId":"kaij77"},"content":"                             @JsonProperty(\"consultation\") LocalDate consultation,","lastModifiedDate":"2022-10-06"},{"lineNumber":50,"author":{"gitId":"kaij77"},"content":"                             @JsonProperty(\"masteryCheck\") LocalDate masteryCheck,","lastModifiedDate":"2022-10-06"},{"lineNumber":51,"author":{"gitId":"kaij77"},"content":"                             @JsonProperty(\"masteryCheckIsDone\") boolean masteryCheckIsDone,","lastModifiedDate":"2022-10-20"},{"lineNumber":52,"author":{"gitId":"HowSuen"},"content":"                             @JsonProperty(\"remark\") String remark, @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged,","lastModifiedDate":"2022-10-21"},{"lineNumber":53,"author":{"gitId":"HowSuen"},"content":"                             @JsonProperty(\"gradesList\") List\u003cJsonAdaptedGrade\u003e gradesList) {","lastModifiedDate":"2022-10-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"kaij77"},"content":"        this.telegramHandle \u003d telegramHandle;","lastModifiedDate":"2022-10-06"},{"lineNumber":56,"author":{"gitId":"kaij77"},"content":"        this.masteryCheck \u003d masteryCheck;","lastModifiedDate":"2022-10-06"},{"lineNumber":57,"author":{"gitId":"kaij77"},"content":"        this.masteryCheckIsDone \u003d masteryCheckIsDone;","lastModifiedDate":"2022-10-20"},{"lineNumber":58,"author":{"gitId":"kaij77"},"content":"        this.consultation \u003d consultation;","lastModifiedDate":"2022-10-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2022-09-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"HowSuen"},"content":"        if (gradesList !\u003d null) {","lastModifiedDate":"2022-10-21"},{"lineNumber":64,"author":{"gitId":"HowSuen"},"content":"            this.gradesList.addAll(gradesList);","lastModifiedDate":"2022-10-21"},{"lineNumber":65,"author":{"gitId":"HowSuen"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"jorrdansoh"},"content":"     * Converts a given {@code Student} into this class for Jackson use.","lastModifiedDate":"2022-10-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"Yuvaraj0702"},"content":"    public JsonAdaptedStudent(Student source) {","lastModifiedDate":"2022-10-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"kaij77"},"content":"        telegramHandle \u003d source.getTelegramHandle().value;","lastModifiedDate":"2022-10-06"},{"lineNumber":74,"author":{"gitId":"jorrdansoh"},"content":"        masteryCheck \u003d source.getMasteryCheck().getValue();","lastModifiedDate":"2022-10-09"},{"lineNumber":75,"author":{"gitId":"kaij77"},"content":"        masteryCheckIsDone \u003d source.getMasteryCheck().getIsPassed();","lastModifiedDate":"2022-10-20"},{"lineNumber":76,"author":{"gitId":"jorrdansoh"},"content":"        consultation \u003d source.getConsultation().getValue();","lastModifiedDate":"2022-10-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        remark \u003d source.getRemark().value;","lastModifiedDate":"2022-09-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"HowSuen"},"content":"        gradesList.addAll(source.getGradesList()","lastModifiedDate":"2022-10-21"},{"lineNumber":82,"author":{"gitId":"HowSuen"},"content":"                .getGradesArrayList()","lastModifiedDate":"2022-10-21"},{"lineNumber":83,"author":{"gitId":"HowSuen"},"content":"                .stream()","lastModifiedDate":"2022-10-21"},{"lineNumber":84,"author":{"gitId":"HowSuen"},"content":"                .map(JsonAdaptedGrade::new)","lastModifiedDate":"2022-10-21"},{"lineNumber":85,"author":{"gitId":"HowSuen"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2022-10-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"jorrdansoh"},"content":"     * Converts this Jackson-friendly adapted student object into the model\u0027s {@code Student} object.","lastModifiedDate":"2022-10-20"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"jorrdansoh"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted student.","lastModifiedDate":"2022-10-20"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"kaij77"},"content":"    public Student toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-06"},{"lineNumber":94,"author":{"gitId":"jorrdansoh"},"content":"        final List\u003cTag\u003e studentTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"jorrdansoh"},"content":"            studentTags.add(tag.toModelType());","lastModifiedDate":"2022-10-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"kaij77"},"content":"        if (telegramHandle \u003d\u003d null) {","lastModifiedDate":"2022-10-06"},{"lineNumber":108,"author":{"gitId":"kaij77"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-10-06"},{"lineNumber":109,"author":{"gitId":"kaij77"},"content":"                    TelegramHandle.class.getSimpleName()));","lastModifiedDate":"2022-10-06"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"jorrdansoh"},"content":"        if (!TelegramHandle.isValidOrEmptyJson(telegramHandle)) {","lastModifiedDate":"2022-10-20"},{"lineNumber":112,"author":{"gitId":"kaij77"},"content":"            throw new IllegalValueException(TelegramHandle.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-06"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":115,"author":{"gitId":"jorrdansoh"},"content":"        final TelegramHandle modelTelegramHandle;","lastModifiedDate":"2022-10-09"},{"lineNumber":116,"author":{"gitId":"jorrdansoh"},"content":"        if (telegramHandle.equals(EMPTY_TELEGRAMHANDLE.value)) {","lastModifiedDate":"2022-11-05"},{"lineNumber":117,"author":{"gitId":"jorrdansoh"},"content":"            modelTelegramHandle \u003d EMPTY_TELEGRAMHANDLE;","lastModifiedDate":"2022-11-05"},{"lineNumber":118,"author":{"gitId":"jorrdansoh"},"content":"        } else {","lastModifiedDate":"2022-10-09"},{"lineNumber":119,"author":{"gitId":"jorrdansoh"},"content":"            modelTelegramHandle \u003d new TelegramHandle(telegramHandle);","lastModifiedDate":"2022-10-09"},{"lineNumber":120,"author":{"gitId":"jorrdansoh"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"jorrdansoh"},"content":"        if (consultation \u003d\u003d null) {","lastModifiedDate":"2022-10-09"},{"lineNumber":123,"author":{"gitId":"kaij77"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-10-06"},{"lineNumber":124,"author":{"gitId":"kaij77"},"content":"                    Consultation.class.getSimpleName()));","lastModifiedDate":"2022-10-06"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"jorrdansoh"},"content":"        if (!Consultation.isValidOrEmptyJson(consultation.toString())) {","lastModifiedDate":"2022-10-20"},{"lineNumber":127,"author":{"gitId":"kaij77"},"content":"            throw new IllegalValueException(Consultation.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-06"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":130,"author":{"gitId":"jorrdansoh"},"content":"        final Consultation modelConsultation;","lastModifiedDate":"2022-10-09"},{"lineNumber":131,"author":{"gitId":"jorrdansoh"},"content":"        if (consultation.equals(EMPTY_CONSULTATION.getValue())) {","lastModifiedDate":"2022-11-05"},{"lineNumber":132,"author":{"gitId":"jorrdansoh"},"content":"            modelConsultation \u003d EMPTY_CONSULTATION;","lastModifiedDate":"2022-11-05"},{"lineNumber":133,"author":{"gitId":"jorrdansoh"},"content":"        } else {","lastModifiedDate":"2022-10-09"},{"lineNumber":134,"author":{"gitId":"jorrdansoh"},"content":"            modelConsultation \u003d new Consultation(consultation);","lastModifiedDate":"2022-10-09"},{"lineNumber":135,"author":{"gitId":"jorrdansoh"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":137,"author":{"gitId":"jorrdansoh"},"content":"        if (masteryCheck \u003d\u003d null) {","lastModifiedDate":"2022-10-09"},{"lineNumber":138,"author":{"gitId":"kaij77"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-10-06"},{"lineNumber":139,"author":{"gitId":"kaij77"},"content":"                    MasteryCheck.class.getSimpleName()));","lastModifiedDate":"2022-10-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":141,"author":{"gitId":"jorrdansoh"},"content":"        if (!MasteryCheck.isValidOrEmptyJson(masteryCheck.toString())) {","lastModifiedDate":"2022-10-20"},{"lineNumber":142,"author":{"gitId":"kaij77"},"content":"            throw new IllegalValueException(MasteryCheck.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-06"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":144,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":145,"author":{"gitId":"jorrdansoh"},"content":"        final MasteryCheck modelMasteryCheck;","lastModifiedDate":"2022-10-09"},{"lineNumber":146,"author":{"gitId":"jorrdansoh"},"content":"        if (masteryCheck.equals(EMPTY_MASTERYCHECK.getValue())) {","lastModifiedDate":"2022-11-05"},{"lineNumber":147,"author":{"gitId":"jorrdansoh"},"content":"            modelMasteryCheck \u003d EMPTY_MASTERYCHECK;","lastModifiedDate":"2022-11-05"},{"lineNumber":148,"author":{"gitId":"jorrdansoh"},"content":"        } else {","lastModifiedDate":"2022-10-09"},{"lineNumber":149,"author":{"gitId":"kaij77"},"content":"            modelMasteryCheck \u003d new MasteryCheck(masteryCheck, masteryCheckIsDone);","lastModifiedDate":"2022-10-20"},{"lineNumber":150,"author":{"gitId":"jorrdansoh"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        if (remark \u003d\u003d null) {","lastModifiedDate":"2022-09-14"},{"lineNumber":153,"author":{"gitId":"kaij77"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-10-06"},{"lineNumber":154,"author":{"gitId":"kaij77"},"content":"                    Remark.class.getSimpleName()));","lastModifiedDate":"2022-10-06"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-09-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        final Remark modelRemark \u003d new Remark(remark);","lastModifiedDate":"2022-09-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":158,"author":{"gitId":"jorrdansoh"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(studentTags);","lastModifiedDate":"2022-10-20"},{"lineNumber":159,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":160,"author":{"gitId":"HowSuen"},"content":"        final GradesList modelGradesList \u003d new GradesList();","lastModifiedDate":"2022-10-21"},{"lineNumber":161,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":162,"author":{"gitId":"HowSuen"},"content":"        if (gradesList \u003d\u003d null || gradesList.size() !\u003d EXAMS_COUNT) {","lastModifiedDate":"2022-10-21"},{"lineNumber":163,"author":{"gitId":"HowSuen"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-10-21"},{"lineNumber":164,"author":{"gitId":"HowSuen"},"content":"                    GradesList.class.getSimpleName()));","lastModifiedDate":"2022-10-21"},{"lineNumber":165,"author":{"gitId":"HowSuen"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":166,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":167,"author":{"gitId":"HowSuen"},"content":"        for (int i \u003d 0; i \u003c 5; i++) {","lastModifiedDate":"2022-10-21"},{"lineNumber":168,"author":{"gitId":"HowSuen"},"content":"            JsonAdaptedGrade grade \u003d gradesList.get(i);","lastModifiedDate":"2022-10-21"},{"lineNumber":169,"author":{"gitId":"HowSuen"},"content":"            GradesList.editGrade(modelGradesList, grade.toModelType(i));","lastModifiedDate":"2022-10-21"},{"lineNumber":170,"author":{"gitId":"HowSuen"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":171,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":172,"author":{"gitId":"kaij77"},"content":"        return new Student(modelName, modelTelegramHandle, modelConsultation, modelMasteryCheck, modelRemark,","lastModifiedDate":"2022-10-06"},{"lineNumber":173,"author":{"gitId":"HowSuen"},"content":"                modelTags, modelGradesList);","lastModifiedDate":"2022-10-21"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"jorrdansoh":38,"Yuvaraj0702":3,"kaij77":36,"-":68,"HowSuen":31}},{"path":"src/main/java/friday/storage/JsonAdaptedTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.storage;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"HowSuen"},"content":"import friday.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"HowSuen"},"content":"import friday.model.tag.Tag;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"class JsonAdaptedTag {","lastModifiedDate":"2018-12-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(String tagName) {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(Tag source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        tagName \u003d source.tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public String getTagName() {","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Tag toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(tagName)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Tag(tagName);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":45,"HowSuen":3}},{"path":"src/main/java/friday/storage/JsonFridayStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.storage;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"HowSuen"},"content":"import friday.commons.core.LogsCenter;","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"HowSuen"},"content":"import friday.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"HowSuen"},"content":"import friday.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"HowSuen"},"content":"import friday.commons.util.FileUtil;","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"HowSuen"},"content":"import friday.commons.util.JsonUtil;","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"darrtzj"},"content":"import friday.model.ReadOnlyFriday;","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"darrtzj"},"content":" * A class to access Friday data stored as a json file on the hard disk.","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"darrtzj"},"content":"public class JsonFridayStorage implements FridayStorage {","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"darrtzj"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonFridayStorage.class);","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"darrtzj"},"content":"    public JsonFridayStorage(Path filePath) {","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"darrtzj"},"content":"    public Path getFridayFilePath() {","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"darrtzj"},"content":"    public Optional\u003cReadOnlyFriday\u003e readFriday() throws DataConversionException {","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"darrtzj"},"content":"        return readFriday(filePath);","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"darrtzj"},"content":"     * Similar to {@link #readFriday()}.","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"darrtzj"},"content":"    public Optional\u003cReadOnlyFriday\u003e readFriday(Path filePath) throws DataConversionException {","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"darrtzj"},"content":"        Optional\u003cJsonSerializableFriday\u003e jsonFriday \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"darrtzj"},"content":"                filePath, JsonSerializableFriday.class);","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"darrtzj"},"content":"        if (!jsonFriday.isPresent()) {","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"darrtzj"},"content":"            return Optional.of(jsonFriday.get().toModelType());","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"darrtzj"},"content":"    public void saveFriday(ReadOnlyFriday friday) throws IOException {","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"darrtzj"},"content":"        saveFriday(friday, filePath);","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"darrtzj"},"content":"     * Similar to {@link #saveFriday(ReadOnlyFriday)}.","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"darrtzj"},"content":"    public void saveFriday(ReadOnlyFriday friday, Path filePath) throws IOException {","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"darrtzj"},"content":"        requireNonNull(friday);","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"darrtzj"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableFriday(friday), filePath);","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"darrtzj":20,"-":54,"HowSuen":6}},{"path":"src/main/java/friday/storage/JsonSerializableFriday.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.storage;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"HowSuen"},"content":"import friday.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"darrtzj"},"content":"import friday.model.Friday;","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"darrtzj"},"content":"import friday.model.ReadOnlyFriday;","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"darrtzj"},"content":"import friday.model.alias.Alias;","lastModifiedDate":"2022-10-23"},{"lineNumber":15,"author":{"gitId":"darrtzj"},"content":"import friday.model.alias.ReservedKeyword;","lastModifiedDate":"2022-10-23"},{"lineNumber":16,"author":{"gitId":"kaij77"},"content":"import friday.model.student.Student;","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"darrtzj"},"content":" * An Immutable Friday that is serializable to JSON format.","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"Yuvaraj0702"},"content":"@JsonRootName(value \u003d \"friday\")","lastModifiedDate":"2022-10-23"},{"lineNumber":22,"author":{"gitId":"darrtzj"},"content":"class JsonSerializableFriday {","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"jorrdansoh"},"content":"    public static final String MESSAGE_DUPLICATE_STUDENT \u003d \"Students list contains duplicate student(s).\";","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"darrtzj"},"content":"    public static final String MESSAGE_INVALID_KEYWORD \u003d \"Alias map contains invalid keyword(s)\";","lastModifiedDate":"2022-11-01"},{"lineNumber":26,"author":{"gitId":"darrtzj"},"content":"    public static final String MESSAGE_DUPLICATE_ALIAS \u003d \"Alias map contains duplicate alias(es).\";","lastModifiedDate":"2022-10-23"},{"lineNumber":27,"author":{"gitId":"darrtzj"},"content":"    public static final String MESSAGE_INVALID_ALIAS \u003d \"Alias map contains invalid alias(es).\";","lastModifiedDate":"2022-11-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"jorrdansoh"},"content":"    private final List\u003cJsonAdaptedStudent\u003e students \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"darrtzj"},"content":"    private final List\u003cJsonAdaptedAlias\u003e aliases \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"jorrdansoh"},"content":"     * Constructs a {@code JsonSerializableFriday} with the given students.","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"darrtzj"},"content":"    public JsonSerializableFriday(@JsonProperty(\"students\") List\u003cJsonAdaptedStudent\u003e students,","lastModifiedDate":"2022-10-23"},{"lineNumber":37,"author":{"gitId":"darrtzj"},"content":"                                  @JsonProperty(\"aliases\") List\u003cJsonAdaptedAlias\u003e aliases) {","lastModifiedDate":"2022-10-23"},{"lineNumber":38,"author":{"gitId":"jorrdansoh"},"content":"        this.students.addAll(students);","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"darrtzj"},"content":"        this.aliases.addAll(aliases);","lastModifiedDate":"2022-10-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"darrtzj"},"content":"     * Converts a given {@code ReadOnlyFriday} into this class for Jackson use.","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"darrtzj"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableFriday}.","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"darrtzj"},"content":"    public JsonSerializableFriday(ReadOnlyFriday source) {","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"jorrdansoh"},"content":"        students.addAll(source.getStudentList().stream().map(JsonAdaptedStudent::new).collect(Collectors.toList()));","lastModifiedDate":"2022-10-20"},{"lineNumber":49,"author":{"gitId":"darrtzj"},"content":"        aliases.addAll(source.getAliasMap().stream().map(JsonAdaptedAlias::new).collect(Collectors.toList()));","lastModifiedDate":"2022-10-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"Yuvaraj0702"},"content":"     * Converts this FRIDAY into the model\u0027s {@code Friday} object.","lastModifiedDate":"2022-10-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"darrtzj"},"content":"    public Friday toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-06"},{"lineNumber":58,"author":{"gitId":"Yuvaraj0702"},"content":"        Friday friday \u003d new Friday();","lastModifiedDate":"2022-10-25"},{"lineNumber":59,"author":{"gitId":"jorrdansoh"},"content":"        for (JsonAdaptedStudent jsonAdaptedStudent : students) {","lastModifiedDate":"2022-10-20"},{"lineNumber":60,"author":{"gitId":"jorrdansoh"},"content":"            Student student \u003d jsonAdaptedStudent.toModelType();","lastModifiedDate":"2022-10-20"},{"lineNumber":61,"author":{"gitId":"Yuvaraj0702"},"content":"            if (friday.hasStudent(student)) {","lastModifiedDate":"2022-10-25"},{"lineNumber":62,"author":{"gitId":"jorrdansoh"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_STUDENT);","lastModifiedDate":"2022-10-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"Yuvaraj0702"},"content":"            friday.addStudent(student);","lastModifiedDate":"2022-10-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"darrtzj"},"content":"        for (JsonAdaptedAlias jsonAdaptedAlias : aliases) {","lastModifiedDate":"2022-10-23"},{"lineNumber":67,"author":{"gitId":"darrtzj"},"content":"            Alias alias \u003d jsonAdaptedAlias.toAliasModelType();","lastModifiedDate":"2022-10-23"},{"lineNumber":68,"author":{"gitId":"darrtzj"},"content":"            ReservedKeyword keyword \u003d jsonAdaptedAlias.toReservedKeywordModelType();","lastModifiedDate":"2022-10-23"},{"lineNumber":69,"author":{"gitId":"darrtzj"},"content":"            if (!ReservedKeyword.isValidReservedKeyword(keyword.toString())) {","lastModifiedDate":"2022-10-23"},{"lineNumber":70,"author":{"gitId":"darrtzj"},"content":"                throw new IllegalValueException(MESSAGE_INVALID_KEYWORD);","lastModifiedDate":"2022-10-23"},{"lineNumber":71,"author":{"gitId":"darrtzj"},"content":"            }","lastModifiedDate":"2022-10-23"},{"lineNumber":72,"author":{"gitId":"darrtzj"},"content":"            if (!Alias.isValidAlias(alias.toString())) {","lastModifiedDate":"2022-11-01"},{"lineNumber":73,"author":{"gitId":"darrtzj"},"content":"                throw new IllegalValueException(MESSAGE_INVALID_ALIAS);","lastModifiedDate":"2022-11-01"},{"lineNumber":74,"author":{"gitId":"darrtzj"},"content":"            }","lastModifiedDate":"2022-11-01"},{"lineNumber":75,"author":{"gitId":"Yuvaraj0702"},"content":"            if (friday.hasAlias(alias)) {","lastModifiedDate":"2022-10-25"},{"lineNumber":76,"author":{"gitId":"darrtzj"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_ALIAS);","lastModifiedDate":"2022-10-23"},{"lineNumber":77,"author":{"gitId":"darrtzj"},"content":"            }","lastModifiedDate":"2022-10-23"},{"lineNumber":78,"author":{"gitId":"Yuvaraj0702"},"content":"            friday.addAlias(alias, keyword);","lastModifiedDate":"2022-10-25"},{"lineNumber":79,"author":{"gitId":"darrtzj"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":80,"author":{"gitId":"Yuvaraj0702"},"content":"        return friday;","lastModifiedDate":"2022-10-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"jorrdansoh":8,"Yuvaraj0702":8,"darrtzj":30,"kaij77":1,"-":34,"HowSuen":2}},{"path":"src/main/java/friday/storage/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.storage;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"HowSuen"},"content":"import friday.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"HowSuen"},"content":"import friday.commons.util.JsonUtil;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"HowSuen"},"content":"import friday.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"HowSuen"},"content":"import friday.model.UserPrefs;","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2016-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2017-02-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException {","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"-":42,"HowSuen":5}},{"path":"src/main/java/friday/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.storage;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"HowSuen"},"content":"import friday.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"darrtzj"},"content":"import friday.model.ReadOnlyFriday;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"HowSuen"},"content":"import friday.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"HowSuen"},"content":"import friday.model.UserPrefs;","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"darrtzj"},"content":"public interface Storage extends FridayStorage, UserPrefsStorage {","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"darrtzj"},"content":"    Path getFridayFilePath();","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"darrtzj"},"content":"    Optional\u003cReadOnlyFriday\u003e readFriday() throws DataConversionException, IOException;","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"darrtzj"},"content":"    void saveFriday(ReadOnlyFriday friday) throws IOException;","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"darrtzj":5,"-":23,"HowSuen":4}},{"path":"src/main/java/friday/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.storage;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"HowSuen"},"content":"import friday.commons.core.LogsCenter;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"HowSuen"},"content":"import friday.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"darrtzj"},"content":"import friday.model.ReadOnlyFriday;","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"HowSuen"},"content":"import friday.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"HowSuen"},"content":"import friday.model.UserPrefs;","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"darrtzj"},"content":" * Manages storage of Friday data in local storage.","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":20,"author":{"gitId":"darrtzj"},"content":"    private FridayStorage fridayStorage;","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"darrtzj"},"content":"     * Creates a {@code StorageManager} with the given {@code FridayStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"darrtzj"},"content":"    public StorageManager(FridayStorage fridayStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"darrtzj"},"content":"        this.fridayStorage \u003d fridayStorage;","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"darrtzj"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Friday methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"darrtzj"},"content":"    public Path getFridayFilePath() {","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"darrtzj"},"content":"        return fridayStorage.getFridayFilePath();","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"darrtzj"},"content":"    public Optional\u003cReadOnlyFriday\u003e readFriday() throws DataConversionException, IOException {","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"darrtzj"},"content":"        return readFriday(fridayStorage.getFridayFilePath());","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":62,"author":{"gitId":"darrtzj"},"content":"    public Optional\u003cReadOnlyFriday\u003e readFriday(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"darrtzj"},"content":"        return fridayStorage.readFriday(filePath);","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"darrtzj"},"content":"    public void saveFriday(ReadOnlyFriday friday) throws IOException {","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"darrtzj"},"content":"        saveFriday(friday, fridayStorage.getFridayFilePath());","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":73,"author":{"gitId":"darrtzj"},"content":"    public void saveFriday(ReadOnlyFriday friday, Path filePath) throws IOException {","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":75,"author":{"gitId":"darrtzj"},"content":"        fridayStorage.saveFriday(friday, filePath);","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"darrtzj":17,"-":56,"HowSuen":5}},{"path":"src/main/java/friday/storage/UserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.storage;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"HowSuen"},"content":"import friday.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"HowSuen"},"content":"import friday.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"HowSuen"},"content":"import friday.model.UserPrefs;","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"HowSuen"},"content":" * Represents a storage for {@link UserPrefs}.","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface UserPrefsStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2017-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"HowSuen"},"content":"     * Saves the given {@link ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"-":30,"HowSuen":6}},{"path":"src/main/java/friday/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.ui;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"HowSuen"},"content":"import friday.logic.Logic;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"HowSuen"},"content":"import friday.logic.commands.CommandResult;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"HowSuen"},"content":"import friday.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"HowSuen"},"content":"import friday.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"HowSuen"},"content":"         * @see Logic#execute(String)","lastModifiedDate":"2022-10-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"-":80,"HowSuen":6}},{"path":"src/main/java/friday/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.ui;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"HowSuen"},"content":"import friday.commons.core.LogsCenter;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"darrtzj"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2223s1-cs2103t-w15-4.github.io/tp/UserGuide.html\";","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"darrtzj"},"content":"    public static final String HELP_CONTENT \u003d \"Here are all the commands in Friday:\\n\"","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"darrtzj"},"content":"            + \"add - to add a student\\n\"","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"darrtzj"},"content":"            + \"delete - to delete a student\\n\"","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"darrtzj"},"content":"            + \"edit - to edit a specific student\u0027s details\\n\"","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"darrtzj"},"content":"            + \"list - to list all students\\n\"","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"darrtzj"},"content":"            + \"sort - sort students based on the given criteria\\n\"","lastModifiedDate":"2022-10-25"},{"lineNumber":25,"author":{"gitId":"darrtzj"},"content":"            + \"find - to find students related to a keyword\\n\"","lastModifiedDate":"2022-10-25"},{"lineNumber":26,"author":{"gitId":"darrtzj"},"content":"            + \"grade - grade a specific student\\n\"","lastModifiedDate":"2022-10-25"},{"lineNumber":27,"author":{"gitId":"darrtzj"},"content":"            + \"remark - to add a remark to a specific student\\n\"","lastModifiedDate":"2022-10-25"},{"lineNumber":28,"author":{"gitId":"darrtzj"},"content":"            + \"mark - to mark the mastery check of a specific student\\n\"","lastModifiedDate":"2022-10-25"},{"lineNumber":29,"author":{"gitId":"darrtzj"},"content":"            + \"unmark - to unmark the mastery check of a specific student\\n\"","lastModifiedDate":"2022-10-25"},{"lineNumber":30,"author":{"gitId":"darrtzj"},"content":"            + \"alias - to add alias for a command to FRIDAY\\n\"","lastModifiedDate":"2022-10-25"},{"lineNumber":31,"author":{"gitId":"darrtzj"},"content":"            + \"unalias - to delete an alias for a command in FRIDAY\\n\"","lastModifiedDate":"2022-10-25"},{"lineNumber":32,"author":{"gitId":"darrtzj"},"content":"            + \"aliaslist - to display all alias in FRIDAY\\n\"","lastModifiedDate":"2022-10-25"},{"lineNumber":33,"author":{"gitId":"darrtzj"},"content":"            + \"clear - to clear all data in FRIDAY\\n\"","lastModifiedDate":"2022-10-25"},{"lineNumber":34,"author":{"gitId":"darrtzj"},"content":"            + \"guide - display a link to the User Guide\\n\"","lastModifiedDate":"2022-10-25"},{"lineNumber":35,"author":{"gitId":"darrtzj"},"content":"            + \"help - to display a help message\\n\"","lastModifiedDate":"2022-10-25"},{"lineNumber":36,"author":{"gitId":"darrtzj"},"content":"            + \"For more details, refer to the user guide: \";","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"darrtzj"},"content":"    public static final String HELP_MESSAGE \u003d HELP_CONTENT + USERGUIDE_URL;","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"darrtzj":20,"-":98,"HowSuen":2}},{"path":"src/main/java/friday/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.ui;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"HowSuen"},"content":"import friday.commons.core.GuiSettings;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"HowSuen"},"content":"import friday.commons.core.LogsCenter;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"HowSuen"},"content":"import friday.logic.Logic;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"HowSuen"},"content":"import friday.logic.commands.CommandResult;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"HowSuen"},"content":"import friday.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"HowSuen"},"content":"import friday.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"HowSuen"},"content":"    private StudentListPanel studentListPanel;","lastModifiedDate":"2022-10-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"HowSuen"},"content":"    private StackPane studentListPanelPlaceholder;","lastModifiedDate":"2022-10-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"jorrdansoh"},"content":"        studentListPanel \u003d new StudentListPanel(logic.getStudentList());","lastModifiedDate":"2022-10-20"},{"lineNumber":114,"author":{"gitId":"HowSuen"},"content":"        studentListPanelPlaceholder.getChildren().add(studentListPanel.getRoot());","lastModifiedDate":"2022-10-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"Yuvaraj0702"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getFridayFilePath());","lastModifiedDate":"2022-10-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":166,"author":{"gitId":"HowSuen"},"content":"    public StudentListPanel getStudentListPanel() {","lastModifiedDate":"2022-10-18"},{"lineNumber":167,"author":{"gitId":"HowSuen"},"content":"        return studentListPanel;","lastModifiedDate":"2022-10-18"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":173,"author":{"gitId":"HowSuen"},"content":"     * @see Logic#execute(String)","lastModifiedDate":"2022-10-06"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"jorrdansoh"},"content":"            studentListPanel.setList(logic.getStudentList());","lastModifiedDate":"2022-10-20"},{"lineNumber":190,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"jorrdansoh":3,"Yuvaraj0702":1,"-":181,"HowSuen":13}},{"path":"src/main/java/friday/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.ui;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2016-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2016-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":27,"HowSuen":1}},{"path":"src/main/java/friday/ui/StatusBarFooter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.ui;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2018-12-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the footer of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StatusBarFooter extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Label saveLocationStatus;","lastModifiedDate":"2018-12-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code StatusBarFooter} with the given {@code Path}.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public StatusBarFooter(Path saveLocation) {","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        saveLocationStatus.setText(Paths.get(\".\").resolve(saveLocation).toString());","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":27,"HowSuen":1}},{"path":"src/main/java/friday/ui/StudentCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.ui;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"kaij77"},"content":"import friday.model.student.Student;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"jorrdansoh"},"content":" * An UI component that displays information of a {@code Student}.","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"HowSuen"},"content":"public class StudentCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"HowSuen"},"content":"    private static final String FXML \u003d \"StudentListCard.fxml\";","lastModifiedDate":"2022-10-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"kaij77"},"content":"    public final Student student;","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"kaij77"},"content":"    private Label telegramHandle;","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"kaij77"},"content":"    private Label masteryCheck;","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"kaij77"},"content":"    private Label consultation;","lastModifiedDate":"2022-10-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Label remark;","lastModifiedDate":"2022-09-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-09-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":45,"author":{"gitId":"HowSuen"},"content":"    @FXML","lastModifiedDate":"2022-10-21"},{"lineNumber":46,"author":{"gitId":"HowSuen"},"content":"    private Label ra1;","lastModifiedDate":"2022-10-21"},{"lineNumber":47,"author":{"gitId":"HowSuen"},"content":"    @FXML","lastModifiedDate":"2022-10-21"},{"lineNumber":48,"author":{"gitId":"HowSuen"},"content":"    private Label ra2;","lastModifiedDate":"2022-10-21"},{"lineNumber":49,"author":{"gitId":"HowSuen"},"content":"    @FXML","lastModifiedDate":"2022-10-21"},{"lineNumber":50,"author":{"gitId":"HowSuen"},"content":"    private Label pa;","lastModifiedDate":"2022-10-21"},{"lineNumber":51,"author":{"gitId":"HowSuen"},"content":"    @FXML","lastModifiedDate":"2022-10-21"},{"lineNumber":52,"author":{"gitId":"HowSuen"},"content":"    private Label mt;","lastModifiedDate":"2022-10-21"},{"lineNumber":53,"author":{"gitId":"HowSuen"},"content":"    @FXML","lastModifiedDate":"2022-10-21"},{"lineNumber":54,"author":{"gitId":"HowSuen"},"content":"    private Label ft;","lastModifiedDate":"2022-10-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":57,"author":{"gitId":"jorrdansoh"},"content":"     * Creates a {@code StudentCode} with the given {@code Student} and index to display.","lastModifiedDate":"2022-10-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":59,"author":{"gitId":"HowSuen"},"content":"    public StudentCard(Student student, int displayedIndex) {","lastModifiedDate":"2022-10-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":61,"author":{"gitId":"kaij77"},"content":"        this.student \u003d student;","lastModifiedDate":"2022-10-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"kaij77"},"content":"        name.setText(student.getName().fullName);","lastModifiedDate":"2022-10-06"},{"lineNumber":64,"author":{"gitId":"HowSuen"},"content":"        telegramHandle.setText(String.format(\"Telegram: %s\", student.getTelegramHandle().toString()));","lastModifiedDate":"2022-10-17"},{"lineNumber":65,"author":{"gitId":"HowSuen"},"content":"        masteryCheck.setText(student.getMasteryCheck().toString());","lastModifiedDate":"2022-10-18"},{"lineNumber":66,"author":{"gitId":"HowSuen"},"content":"        consultation.setText(student.getConsultation().toString());","lastModifiedDate":"2022-10-18"},{"lineNumber":67,"author":{"gitId":"HowSuen"},"content":"        remark.setText(student.getRemark().toString());","lastModifiedDate":"2022-10-18"},{"lineNumber":68,"author":{"gitId":"kaij77"},"content":"        student.getTags().stream()","lastModifiedDate":"2022-10-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":71,"author":{"gitId":"jorrdansoh"},"content":"        ra1.setText(student.getGradesList().getGrade(\"RA1\").getScore() + \" %\");","lastModifiedDate":"2022-10-31"},{"lineNumber":72,"author":{"gitId":"jorrdansoh"},"content":"        ra2.setText(student.getGradesList().getGrade(\"RA2\").getScore() + \" %\");","lastModifiedDate":"2022-10-31"},{"lineNumber":73,"author":{"gitId":"jorrdansoh"},"content":"        pa.setText(student.getGradesList().getGrade(\"Practical\").getScore() + \" %\");","lastModifiedDate":"2022-10-31"},{"lineNumber":74,"author":{"gitId":"jorrdansoh"},"content":"        mt.setText(student.getGradesList().getGrade(\"Midterm\").getScore() + \" %\");","lastModifiedDate":"2022-10-31"},{"lineNumber":75,"author":{"gitId":"jorrdansoh"},"content":"        ft.setText(student.getGradesList().getGrade(\"Finals\").getScore() + \" %\");","lastModifiedDate":"2022-10-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":86,"author":{"gitId":"HowSuen"},"content":"        if (!(other instanceof StudentCard)) {","lastModifiedDate":"2022-10-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":91,"author":{"gitId":"HowSuen"},"content":"        StudentCard card \u003d (StudentCard) other;","lastModifiedDate":"2022-10-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":93,"author":{"gitId":"kaij77"},"content":"                \u0026\u0026 student.equals(card.student);","lastModifiedDate":"2022-10-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"jorrdansoh":7,"kaij77":9,"-":59,"HowSuen":20}},{"path":"src/main/java/friday/ui/StudentListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.ui;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"HowSuen"},"content":"import friday.commons.core.LogsCenter;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"kaij77"},"content":"import friday.model.student.Student;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"jorrdansoh"},"content":" * Panel containing the list of students.","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"HowSuen"},"content":"public class StudentListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-18"},{"lineNumber":17,"author":{"gitId":"HowSuen"},"content":"    private static final String FXML \u003d \"StudentListPanel.fxml\";","lastModifiedDate":"2022-10-18"},{"lineNumber":18,"author":{"gitId":"HowSuen"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(StudentListPanel.class);","lastModifiedDate":"2022-10-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"HowSuen"},"content":"    private ListView\u003cStudent\u003e studentListView;","lastModifiedDate":"2022-10-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"HowSuen"},"content":"     * Creates a {@code StudentListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2022-10-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"HowSuen"},"content":"    public StudentListPanel(ObservableList\u003cStudent\u003e studentList) {","lastModifiedDate":"2022-10-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"HowSuen"},"content":"        studentListView.setItems(studentList);","lastModifiedDate":"2022-10-18"},{"lineNumber":29,"author":{"gitId":"HowSuen"},"content":"        studentListView.setCellFactory(listView -\u003e new StudentListViewCell());","lastModifiedDate":"2022-10-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":32,"author":{"gitId":"jorrdansoh"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"jorrdansoh"},"content":"     * Sets the {@code ListView} of this {@code StudentListPanel} to the given {@code ObservableList}.","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"jorrdansoh"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"jorrdansoh"},"content":"    public void setList(ObservableList\u003cStudent\u003e studentList) {","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"jorrdansoh"},"content":"        studentListView.setItems(studentList);","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"kaij77"},"content":"        studentListView.setCellFactory((listView -\u003e new StudentListViewCell()));","lastModifiedDate":"2022-10-26"},{"lineNumber":38,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":41,"author":{"gitId":"jorrdansoh"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Student} using a {@code StudentCard}.","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":43,"author":{"gitId":"HowSuen"},"content":"    class StudentListViewCell extends ListCell\u003cStudent\u003e {","lastModifiedDate":"2022-10-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"kaij77"},"content":"        protected void updateItem(Student student, boolean empty) {","lastModifiedDate":"2022-10-06"},{"lineNumber":46,"author":{"gitId":"kaij77"},"content":"            super.updateItem(student, empty);","lastModifiedDate":"2022-10-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"kaij77"},"content":"            if (empty || student \u003d\u003d null) {","lastModifiedDate":"2022-10-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"HowSuen"},"content":"                setGraphic(new StudentCard(student, getIndex() + 1).getRoot());","lastModifiedDate":"2022-10-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"jorrdansoh":9,"kaij77":5,"-":31,"HowSuen":12}},{"path":"src/main/java/friday/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.ui;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * API of UI component","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public interface Ui {","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /** Starts the UI (and the App).  */","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    void start(Stage primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"-":12,"HowSuen":1}},{"path":"src/main/java/friday/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.ui;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"HowSuen"},"content":"import friday.MainApp;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"HowSuen"},"content":"import friday.commons.core.LogsCenter;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"HowSuen"},"content":"import friday.commons.util.StringUtil;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"HowSuen"},"content":"import friday.logic.Logic;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"HowSuen"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/friday_logo.png\";","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":82,"HowSuen":6}},{"path":"src/main/java/friday/ui/UiPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.ui;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"HowSuen"},"content":"import friday.MainApp;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc.","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * It contains a scene graph with a root node of type {@code T}.","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** Resource folder where FXML files are stored. */","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2017-11-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2017-11-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL, T)","lastModifiedDate":"2017-11-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2017-11-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public T getRoot() {","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return fxmlLoader.getRoot();","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @param location Location of the FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param root Specifies the root of the object hierarchy.","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private void loadFxmlFile(URL location, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        fxmlLoader.setLocation(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        fxmlLoader.setRoot(root);","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":86,"HowSuen":2}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"HowSuen"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2022-10-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"HowSuen"},"content":"    -fx-background-color: rgb(42, 59, 76);","lastModifiedDate":"2022-10-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"HowSuen"},"content":"    -fx-background-color: rgb(42, 59, 76);","lastModifiedDate":"2022-10-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"HowSuen"},"content":"    -fx-background-color: rgb(52,74,97);","lastModifiedDate":"2022-10-14"},{"lineNumber":105,"author":{"gitId":"HowSuen"},"content":"    -fx-border-color: rgb(52,74,97);","lastModifiedDate":"2022-10-18"},{"lineNumber":106,"author":{"gitId":"HowSuen"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2022-10-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"HowSuen"},"content":"    -fx-background-color: rgb(69,99,129);","lastModifiedDate":"2022-10-14"},{"lineNumber":111,"author":{"gitId":"HowSuen"},"content":"    -fx-border-color: rgb(69,99,129);","lastModifiedDate":"2022-10-18"},{"lineNumber":112,"author":{"gitId":"HowSuen"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2022-10-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"HowSuen"},"content":"    -fx-background-color: #244358;","lastModifiedDate":"2022-10-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":122,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":124,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":126,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":141,"author":{"gitId":"HowSuen"},"content":"     -fx-background-color: rgb(42, 59, 76);","lastModifiedDate":"2022-10-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":145,"author":{"gitId":"HowSuen"},"content":"     -fx-background-color: rgb(42, 59, 76);","lastModifiedDate":"2022-10-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":151,"author":{"gitId":"HowSuen"},"content":"    -fx-background-color: rgb(26, 37, 48);","lastModifiedDate":"2022-10-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":159,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":161,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":163,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":190,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":194,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"HowSuen"},"content":"    -fx-background-color: rgb(26, 37, 48);","lastModifiedDate":"2022-10-14"},{"lineNumber":202,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":239,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":266,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":270,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":280,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":290,"author":{"gitId":"HowSuen"},"content":"    -fx-background-color: rgb(33, 47, 61);","lastModifiedDate":"2022-10-14"},{"lineNumber":291,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":293,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":294,"author":{"gitId":"HowSuen"},"content":"    -fx-background-color: rgb(103,138,173);","lastModifiedDate":"2022-10-14"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":296,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":301,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":303,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":307,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":308,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":309,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":311,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":313,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":315,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":318,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":323,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":325,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":328,"author":{"gitId":"HowSuen"},"content":"    -fx-border-color: rgb(86, 101, 115) rgb(86, 101, 115) #ffffff rgb(86, 101, 115);","lastModifiedDate":"2022-10-14"},{"lineNumber":329,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":330,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":331,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":334,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"jorrdansoh"},"content":"#filterField, #studentListPanel, #studentWebpage {","lastModifiedDate":"2022-10-20"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":338,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":340,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":341,"author":{"gitId":"HowSuen"},"content":"    -fx-background-color: rgb(33,47,61);","lastModifiedDate":"2022-10-14"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":343,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":345,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":348,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":350,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":351,"author":{"gitId":"HowSuen"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2022-10-14"},{"lineNumber":352,"author":{"gitId":"HowSuen"},"content":"    -fx-background-color: rgb(242,157,0);","lastModifiedDate":"2022-10-14"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":354,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":356,"author":{"gitId":"HowSuen"},"content":"    -fx-font-size: 12;","lastModifiedDate":"2022-10-14"},{"lineNumber":357,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"jorrdansoh":1,"-":335,"HowSuen":21}},{"path":"src/main/resources/view/HelpWindow.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#copyButton, #helpMessage {","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-01-02"},{"lineNumber":3,"author":{"gitId":"HowSuen"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"#copyButton {","lastModifiedDate":"2022-01-02"},{"lineNumber":7,"author":{"gitId":"HowSuen"},"content":"    -fx-background-color: rgb(69,99,129);","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"#copyButton:hover {","lastModifiedDate":"2022-01-02"},{"lineNumber":11,"author":{"gitId":"HowSuen"},"content":"    -fx-background-color: rgb(86,126,166);","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":14,"author":{"gitId":"-"},"content":"#copyButton:armed {","lastModifiedDate":"2022-01-02"},{"lineNumber":15,"author":{"gitId":"HowSuen"},"content":"    -fx-background-color: rgb(52,74,97);","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"#helpMessageContainer {","lastModifiedDate":"2022-01-02"},{"lineNumber":19,"author":{"gitId":"HowSuen"},"content":"    -fx-background-color: rgb(26, 37, 48);","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"-":15,"HowSuen":5}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"HowSuen"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"HowSuen"},"content":"\u003cfx:root minHeight\u003d\"600\" minWidth\u003d\"450\" onCloseRequest\u003d\"#handleExit\" title\u003d\"FRIDAY\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":16,"author":{"gitId":"HowSuen"},"content":"    \u003cImage url\u003d\"@/images/friday_logo.png\" /\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":35,"author":{"gitId":"HowSuen"},"content":"        \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" style\u003d\"-fx-background-color: rgb(42, 59, 76);\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2022-10-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":37,"author":{"gitId":"HowSuen"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2022-10-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":41,"author":{"gitId":"HowSuen"},"content":"        \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" maxHeight\u003d\"150.0\" minHeight\u003d\"150.0\" prefHeight\u003d\"150.0\" style\u003d\"-fx-background-color: rgb(42, 59, 76);\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":43,"author":{"gitId":"HowSuen"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2022-10-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":47,"author":{"gitId":"HowSuen"},"content":"        \u003cVBox fx:id\u003d\"studentList\" minWidth\u003d\"340\" prefWidth\u003d\"340\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":49,"author":{"gitId":"HowSuen"},"content":"            \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2022-10-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":51,"author":{"gitId":"HowSuen"},"content":"          \u003cStackPane fx:id\u003d\"studentListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"-":48,"HowSuen":10}},{"path":"src/main/resources/view/StudentListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"HowSuen"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2022-10-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":13,"author":{"gitId":"HowSuen"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" prefWidth\u003d\"600.0\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"HowSuen"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"320.0\" /\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":17,"author":{"gitId":"HowSuen"},"content":"         \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"220.0\" /\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":18,"author":{"gitId":"HowSuen"},"content":"         \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"220.0\" /\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":19,"author":{"gitId":"HowSuen"},"content":"         \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"200.0\" /\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":20,"author":{"gitId":"HowSuen"},"content":"         \u003cColumnConstraints /\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"HowSuen"},"content":"         \u003cColumnConstraints /\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"HowSuen"},"content":"    \u003cVBox minHeight\u003d\"120.0\" style\u003d\"-fx-spacing: 5;\" GridPane.rowSpan\u003d\"2\"\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"HowSuen"},"content":"        \u003cInsets bottom\u003d\"5.0\" left\u003d\"15.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-10-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"HowSuen"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2022-10-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":34,"author":{"gitId":"HowSuen"},"content":"        \u003cLabel fx:id\u003d\"name\" style\u003d\"-fx-font-size: 20;\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\" /\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":36,"author":{"gitId":"HowSuen"},"content":"      \u003cLabel fx:id\u003d\"telegramHandle\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$telegramHandle\"\u003e","lastModifiedDate":"2022-10-17"},{"lineNumber":37,"author":{"gitId":"HowSuen"},"content":"            \u003copaqueInsets\u003e","lastModifiedDate":"2022-10-17"},{"lineNumber":38,"author":{"gitId":"HowSuen"},"content":"               \u003cInsets /\u003e","lastModifiedDate":"2022-10-17"},{"lineNumber":39,"author":{"gitId":"HowSuen"},"content":"            \u003c/opaqueInsets\u003e\u003c/Label\u003e","lastModifiedDate":"2022-10-17"},{"lineNumber":40,"author":{"gitId":"HowSuen"},"content":"      \u003cFlowPane fx:id\u003d\"tags\"\u003e","lastModifiedDate":"2022-10-17"},{"lineNumber":41,"author":{"gitId":"HowSuen"},"content":"            \u003copaqueInsets\u003e","lastModifiedDate":"2022-10-17"},{"lineNumber":42,"author":{"gitId":"HowSuen"},"content":"               \u003cInsets /\u003e","lastModifiedDate":"2022-10-17"},{"lineNumber":43,"author":{"gitId":"HowSuen"},"content":"            \u003c/opaqueInsets\u003e\u003c/FlowPane\u003e","lastModifiedDate":"2022-10-17"},{"lineNumber":44,"author":{"gitId":"HowSuen"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2022-10-17"},{"lineNumber":45,"author":{"gitId":"HowSuen"},"content":"      \u003cVBox minHeight\u003d\"60.0\" GridPane.columnIndex\u003d\"1\"\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":46,"author":{"gitId":"HowSuen"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2022-10-17"},{"lineNumber":47,"author":{"gitId":"HowSuen"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2022-10-17"},{"lineNumber":48,"author":{"gitId":"HowSuen"},"content":"         \u003c/padding\u003e","lastModifiedDate":"2022-10-17"},{"lineNumber":49,"author":{"gitId":"HowSuen"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2022-10-17"},{"lineNumber":50,"author":{"gitId":"HowSuen"},"content":"            \u003cLabel text\u003d\"Mastery Check\" /\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":51,"author":{"gitId":"kaij77"},"content":"            \u003cLabel fx:id\u003d\"masteryCheck\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$masteryCheck\" /\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":52,"author":{"gitId":"HowSuen"},"content":"         \u003c/children\u003e","lastModifiedDate":"2022-10-17"},{"lineNumber":53,"author":{"gitId":"HowSuen"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2022-10-17"},{"lineNumber":54,"author":{"gitId":"HowSuen"},"content":"      \u003cGridPane GridPane.columnIndex\u003d\"2\" GridPane.rowSpan\u003d\"2\"\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":55,"author":{"gitId":"HowSuen"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":56,"author":{"gitId":"HowSuen"},"content":"          \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" maxWidth\u003d\"100.0\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":57,"author":{"gitId":"HowSuen"},"content":"          \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"50.0\" /\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":58,"author":{"gitId":"HowSuen"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":59,"author":{"gitId":"HowSuen"},"content":"        \u003crowConstraints\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":60,"author":{"gitId":"HowSuen"},"content":"          \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"20.0\" vgrow\u003d\"SOMETIMES\" /\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":61,"author":{"gitId":"HowSuen"},"content":"          \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"20.0\" vgrow\u003d\"SOMETIMES\" /\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":62,"author":{"gitId":"HowSuen"},"content":"          \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"20.0\" vgrow\u003d\"SOMETIMES\" /\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":63,"author":{"gitId":"HowSuen"},"content":"            \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"20.0\" vgrow\u003d\"SOMETIMES\" /\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":64,"author":{"gitId":"HowSuen"},"content":"            \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"20.0\" vgrow\u003d\"SOMETIMES\" /\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":65,"author":{"gitId":"HowSuen"},"content":"            \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"20.0\" vgrow\u003d\"SOMETIMES\" /\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":66,"author":{"gitId":"HowSuen"},"content":"        \u003c/rowConstraints\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":67,"author":{"gitId":"HowSuen"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":68,"author":{"gitId":"HowSuen"},"content":"            \u003cLabel text\u003d\"Grades\" GridPane.columnSpan\u003d\"2\" /\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":69,"author":{"gitId":"HowSuen"},"content":"            \u003cLabel text\u003d\"RA1:\" GridPane.rowIndex\u003d\"1\" /\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":70,"author":{"gitId":"HowSuen"},"content":"            \u003cLabel text\u003d\"RA2:\" GridPane.rowIndex\u003d\"2\" /\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":71,"author":{"gitId":"jorrdansoh"},"content":"            \u003cLabel text\u003d\"Midterm:\" GridPane.rowIndex\u003d\"3\" /\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":72,"author":{"gitId":"HowSuen"},"content":"            \u003cLabel text\u003d\"Practical:\" GridPane.rowIndex\u003d\"4\" /\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":73,"author":{"gitId":"HowSuen"},"content":"            \u003cLabel text\u003d\"Finals:\" GridPane.rowIndex\u003d\"5\" /\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":74,"author":{"gitId":"HowSuen"},"content":"            \u003cLabel fx:id\u003d\"ra1\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$ra1\" GridPane.columnIndex\u003d\"1\" GridPane.rowIndex\u003d\"1\" /\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":75,"author":{"gitId":"HowSuen"},"content":"            \u003cLabel fx:id\u003d\"ra2\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$ra2\" GridPane.columnIndex\u003d\"1\" GridPane.rowIndex\u003d\"2\" /\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":76,"author":{"gitId":"HowSuen"},"content":"            \u003cLabel fx:id\u003d\"mt\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$mt\" GridPane.columnIndex\u003d\"1\" GridPane.rowIndex\u003d\"3\" /\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":77,"author":{"gitId":"HowSuen"},"content":"            \u003cLabel fx:id\u003d\"pa\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$pa\" GridPane.columnIndex\u003d\"1\" GridPane.rowIndex\u003d\"4\" /\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":78,"author":{"gitId":"HowSuen"},"content":"            \u003cLabel fx:id\u003d\"ft\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$ft\" GridPane.columnIndex\u003d\"1\" GridPane.rowIndex\u003d\"5\" /\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":79,"author":{"gitId":"HowSuen"},"content":"         \u003c/children\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":80,"author":{"gitId":"HowSuen"},"content":"      \u003c/GridPane\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":81,"author":{"gitId":"HowSuen"},"content":"      \u003cVBox minHeight\u003d\"120.0\" prefWidth\u003d\"200.0\" GridPane.columnIndex\u003d\"3\" GridPane.columnSpan\u003d\"3\" GridPane.rowSpan\u003d\"2\"\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":82,"author":{"gitId":"HowSuen"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2022-10-17"},{"lineNumber":83,"author":{"gitId":"HowSuen"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2022-10-17"},{"lineNumber":84,"author":{"gitId":"HowSuen"},"content":"         \u003c/padding\u003e","lastModifiedDate":"2022-10-17"},{"lineNumber":85,"author":{"gitId":"HowSuen"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2022-10-17"},{"lineNumber":86,"author":{"gitId":"HowSuen"},"content":"            \u003cLabel text\u003d\"Remark\" /\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":87,"author":{"gitId":"HowSuen"},"content":"            \u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2022-10-17"},{"lineNumber":88,"author":{"gitId":"HowSuen"},"content":"         \u003c/children\u003e","lastModifiedDate":"2022-10-17"},{"lineNumber":89,"author":{"gitId":"HowSuen"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2022-10-17"},{"lineNumber":90,"author":{"gitId":"HowSuen"},"content":"      \u003cVBox minHeight\u003d\"60.0\" GridPane.columnIndex\u003d\"1\" GridPane.rowIndex\u003d\"1\"\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":91,"author":{"gitId":"HowSuen"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2022-10-17"},{"lineNumber":92,"author":{"gitId":"HowSuen"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2022-10-17"},{"lineNumber":93,"author":{"gitId":"HowSuen"},"content":"         \u003c/padding\u003e","lastModifiedDate":"2022-10-17"},{"lineNumber":94,"author":{"gitId":"HowSuen"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2022-10-17"},{"lineNumber":95,"author":{"gitId":"HowSuen"},"content":"            \u003cLabel text\u003d\"Consultation\" /\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":96,"author":{"gitId":"kaij77"},"content":"            \u003cLabel fx:id\u003d\"consultation\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$consultation\" /\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":97,"author":{"gitId":"HowSuen"},"content":"         \u003c/children\u003e","lastModifiedDate":"2022-10-17"},{"lineNumber":98,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"HowSuen"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2022-10-17"},{"lineNumber":100,"author":{"gitId":"HowSuen"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2022-10-17"},{"lineNumber":101,"author":{"gitId":"HowSuen"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2022-10-17"},{"lineNumber":102,"author":{"gitId":"HowSuen"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2022-10-17"},{"lineNumber":103,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jorrdansoh":1,"kaij77":2,"-":26,"HowSuen":75}},{"path":"src/main/resources/view/StudentListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"HowSuen"},"content":"  \u003cListView fx:id\u003d\"studentListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":7,"HowSuen":1}},{"path":"src/test/java/friday/AppParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AppParametersTest {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final ParametersStub parametersStub \u003d new ParametersStub();","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final AppParameters expected \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void parse_validConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        expected.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void parse_nullConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", null);","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void parse_invalidConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"a\\0\");","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        expected.setConfigPath(null);","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static class ParametersStub extends Application.Parameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        private Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getRaw() {","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getUnnamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        public Map\u003cString, String\u003e getNamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Collections.unmodifiableMap(namedParameters);","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"-":57,"HowSuen":1}},{"path":"src/test/java/friday/commons/core/ConfigTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.commons.core;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class ConfigTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void toString_defaultObject_stringReturned() {","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        String defaultConfigAsString \u003d \"Current log level : INFO\\n\"","lastModifiedDate":"2018-12-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"                + \"Preference file Location : preferences.json\";","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertEquals(defaultConfigAsString, new Config().toString());","lastModifiedDate":"2016-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2016-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNotNull(defaultConfig);","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(defaultConfig.equals(defaultConfig));","lastModifiedDate":"2016-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"-":26,"HowSuen":1}},{"path":"src/test/java/friday/commons/core/VersionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.commons.core;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"HowSuen"},"content":"import static friday.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class VersionTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void versionParsing_acceptableVersionString_parsedVersionCorrectly() {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V0.0.0ea\", 0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V3.10.2\", 3, 10, 2, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V100.100.100ea\", 100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void versionParsing_wrongVersionString_throwIllegalArgumentException() {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Version.fromString(\"This is not a version string\"));","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void versionConstructor_correctParameter_valueAsExpected() {","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(19, 10, 20, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(19, version.getMajor());","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(10, version.getMinor());","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(20, version.getPatch());","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(true, version.isEarlyAccess());","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // boundary at 0","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(\"V0.0.0ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // normal values","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        version \u003d new Version(4, 10, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(\"V4.10.5\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // big numbers","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(\"V100.100.100ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_compareToIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2017-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2017-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Tests equality","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        one \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        another \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Tests different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Tests different minor","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 5, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Tests different major","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Tests high major vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Tests high patch vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // Tests same major minor different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Tests early access vs not early access on same version number","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // Tests early access lower version vs not early access higher version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Tests early access higher version vs not early access lower version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_hashCodeIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(100100100, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        version \u003d new Version(10, 10, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(1010010010, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_equalIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        one \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        another \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void verifyVersionParsedCorrectly(String versionString,","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertEquals(new Version(major, minor, patch, isEarlyAccess), Version.fromString(versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":133,"HowSuen":2}},{"path":"src/test/java/friday/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.commons.core.index;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"HowSuen"},"content":"import static friday.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"jorrdansoh"},"content":"        final Index fifthStudentIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2022-10-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"jorrdansoh"},"content":"        assertTrue(fifthStudentIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2022-10-20"},{"lineNumber":46,"author":{"gitId":"jorrdansoh"},"content":"        assertTrue(fifthStudentIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2022-10-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"jorrdansoh"},"content":"        assertTrue(fifthStudentIndex.equals(fifthStudentIndex));","lastModifiedDate":"2022-10-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"jorrdansoh"},"content":"        assertFalse(fifthStudentIndex.equals(null));","lastModifiedDate":"2022-10-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"jorrdansoh"},"content":"        assertFalse(fifthStudentIndex.equals(5.0f));","lastModifiedDate":"2022-10-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"jorrdansoh"},"content":"        assertFalse(fifthStudentIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2022-10-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"jorrdansoh":7,"-":51,"HowSuen":2}},{"path":"src/test/java/friday/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.commons.util;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"HowSuen"},"content":"import static friday.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"HowSuen"},"content":"        assertNotNull(AppUtil.getImage(\"/images/friday_logo.png\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"-":33,"HowSuen":3}},{"path":"src/test/java/friday/commons/util/CollectionUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.commons.util;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":3,"author":{"gitId":"HowSuen"},"content":"import static friday.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"HowSuen"},"content":"import static friday.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CollectionUtilTest {","lastModifiedDate":"2016-12-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void requireAllNonNullVarargs() {","lastModifiedDate":"2017-05-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // no arguments","lastModifiedDate":"2017-01-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown();","lastModifiedDate":"2017-05-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // any non-empty argument list","lastModifiedDate":"2017-01-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"\");","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // argument lists with just one null at the beginning","lastModifiedDate":"2017-01-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, \"\", new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // argument lists with nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), null, null, \"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", null, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // argument lists with one null as the last argument","lastModifiedDate":"2017-01-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object[]) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // confirms nulls inside lists in the argument list are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(containingNull, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void requireAllNonNullCollection() {","lastModifiedDate":"2017-05-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // lists containing nulls in the front","lastModifiedDate":"2017-01-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList((Object) null));","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(null, new Object(), \"\"));","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // lists containing nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, \"eggs\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // lists containing nulls at the end","lastModifiedDate":"2017-01-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Collection\u003cObject\u003e) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // empty list","lastModifiedDate":"2017-01-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Collections.emptyList());","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // list with all non-null elements","lastModifiedDate":"2017-01-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object(), \"ham\", Integer.valueOf(1)));","lastModifiedDate":"2018-04-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // confirms nulls inside nested lists are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(containingNull, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void isAnyNonNull() {","lastModifiedDate":"2017-06-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull());","lastModifiedDate":"2017-06-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object[]) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object()));","lastModifiedDate":"2017-06-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object(), null));","lastModifiedDate":"2017-06-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Object...)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * if {@code objects} or any element of {@code objects} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(objects));","lastModifiedDate":"2022-10-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Collection\u003c?\u003e)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * if {@code collection} or any element of {@code collection} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(collection));","lastModifiedDate":"2022-10-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        requireAllNonNull(objects);","lastModifiedDate":"2022-10-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireAllNonNull(collection);","lastModifiedDate":"2022-10-06"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-22"}],"authorContributionMap":{"-":105,"HowSuen":3}},{"path":"src/test/java/friday/commons/util/ConfigUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.commons.util;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"HowSuen"},"content":"import static friday.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":16,"author":{"gitId":"HowSuen"},"content":"import friday.commons.core.Config;","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"HowSuen"},"content":"import friday.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ConfigUtilTest {","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ConfigUtilTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path tempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void read_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e read(null));","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(read(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e read(\"NotJsonFormatConfig.json\"));","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void read_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"TypicalConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void read_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"EmptyConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new Config(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void read_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"ExtraValuesConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private Config getTypicalConfig() {","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        config.setLogLevel(Level.INFO);","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        config.setUserPrefsFilePath(Paths.get(\"preferences.json\"));","lastModifiedDate":"2018-04-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return config;","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private Optional\u003cConfig\u003e read(String configFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return ConfigUtil.readConfig(configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void save_nullConfig_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(null, \"SomeFile.json\"));","lastModifiedDate":"2022-10-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void save_nullFile_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(new Config(), null));","lastModifiedDate":"2022-10-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void saveConfig_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Config original \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d tempDir.resolve(\"TempConfig.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Config readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        original.setLogLevel(Level.FINE);","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void save(Config config, String configFileInTestDataFolder) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(config, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String configFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return configFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                                  ? TEST_DATA_FOLDER.resolve(configFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                                  : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"-":112,"HowSuen":4}},{"path":"src/test/java/friday/commons/util/FileUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.commons.util;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"HowSuen"},"content":"import static friday.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class FileUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void isValidPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        // valid path","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertTrue(FileUtil.isValidPath(\"valid/file/path\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        // invalid path","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertFalse(FileUtil.isValidPath(\"a\\0\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // null path -\u003e throws NullPointerException","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e FileUtil.isValidPath(null));","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":21,"HowSuen":2}},{"path":"src/test/java/friday/commons/util/JsonUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.commons.util;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"HowSuen"},"content":"import friday.testutil.SerializableTestClass;","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"HowSuen"},"content":"import friday.testutil.TestUtil;","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Tests JSON Read and Write","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path SERIALIZATION_FILE \u003d TestUtil.getFilePathInSandboxFolder(\"serialize.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void serializeObjectToJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d new SerializableTestClass();","lastModifiedDate":"2016-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        serializableTestClass.setTestValues();","lastModifiedDate":"2016-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonUtil.serializeObjectToJsonFile(SERIALIZATION_FILE, serializableTestClass);","lastModifiedDate":"2016-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(FileUtil.readFromFile(SERIALIZATION_FILE), SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void deserializeObjectFromJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(SERIALIZATION_FILE, SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d JsonUtil","lastModifiedDate":"2016-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                .deserializeObjectFromJsonFile(SERIALIZATION_FILE, SerializableTestClass.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getName(), SerializableTestClass.getNameTestValue());","lastModifiedDate":"2016-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getListOfLocalDateTimes(), SerializableTestClass.getListTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getMapOfIntegerToString(), SerializableTestClass.getHashMapTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_readJsonStringToObjectInstance_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_writeThenReadObjectToJson_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":42,"HowSuen":3}},{"path":"src/test/java/friday/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.commons.util;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"HowSuen"},"content":"import static friday.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2022-10-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2022-10-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2022-10-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2022-10-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2022-10-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"-":141,"HowSuen":2}},{"path":"src/test/java/friday/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.logic;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"jorrdansoh"},"content":"import static friday.commons.core.Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"HowSuen"},"content":"import static friday.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"kaij77"},"content":"import static friday.logic.commands.CommandTestUtil.CONSULTATION_DESC_AMY;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"kaij77"},"content":"import static friday.logic.commands.CommandTestUtil.MASTERYCHECK_DESC_AMY;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"HowSuen"},"content":"import static friday.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"kaij77"},"content":"import static friday.logic.commands.CommandTestUtil.TELEGRAMHANDLE_DESC_AMY;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"HowSuen"},"content":"import static friday.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"Yuvaraj0702"},"content":"import static friday.testutil.TypicalStudents.AMY;","lastModifiedDate":"2022-11-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":20,"author":{"gitId":"Yuvaraj0702"},"content":"import friday.logic.commands.AddCommand;","lastModifiedDate":"2022-11-03"},{"lineNumber":21,"author":{"gitId":"HowSuen"},"content":"import friday.logic.commands.CommandResult;","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"HowSuen"},"content":"import friday.logic.commands.ListCommand;","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"HowSuen"},"content":"import friday.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"HowSuen"},"content":"import friday.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"HowSuen"},"content":"import friday.model.Model;","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"HowSuen"},"content":"import friday.model.ModelManager;","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"darrtzj"},"content":"import friday.model.ReadOnlyFriday;","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"HowSuen"},"content":"import friday.model.UserPrefs;","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"Yuvaraj0702"},"content":"import friday.model.student.Student;","lastModifiedDate":"2022-11-03"},{"lineNumber":30,"author":{"gitId":"darrtzj"},"content":"import friday.storage.JsonFridayStorage;","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"HowSuen"},"content":"import friday.storage.JsonUserPrefsStorage;","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"HowSuen"},"content":"import friday.storage.StorageManager;","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"Yuvaraj0702"},"content":"import friday.testutil.StudentBuilder;","lastModifiedDate":"2022-11-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"darrtzj"},"content":"        JsonFridayStorage addressBookStorage \u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"darrtzj"},"content":"                new JsonFridayStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":62,"author":{"gitId":"jorrdansoh"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":71,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":74,"author":{"gitId":"jorrdansoh"},"content":"        // Setup LogicManager with JsonFridayIoExceptionThrowingStub","lastModifiedDate":"2022-11-05"},{"lineNumber":75,"author":{"gitId":"Yuvaraj0702"},"content":"        JsonFridayStorage addressBookStorage \u003d","lastModifiedDate":"2022-11-03"},{"lineNumber":76,"author":{"gitId":"jorrdansoh"},"content":"                new JsonFridayIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionFriday.json\"));","lastModifiedDate":"2022-11-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"kaij77"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + TELEGRAMHANDLE_DESC_AMY + CONSULTATION_DESC_AMY","lastModifiedDate":"2022-10-06"},{"lineNumber":84,"author":{"gitId":"kaij77"},"content":"                + MASTERYCHECK_DESC_AMY;","lastModifiedDate":"2022-10-06"},{"lineNumber":85,"author":{"gitId":"jorrdansoh"},"content":"        Student expectedStudent \u003d new StudentBuilder(AMY).withTags().build();","lastModifiedDate":"2022-10-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"jorrdansoh"},"content":"        expectedModel.addStudent(expectedStudent);","lastModifiedDate":"2022-10-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"jorrdansoh"},"content":"    public void getFilteredStudentList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-20"},{"lineNumber":95,"author":{"gitId":"jorrdansoh"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getStudentList().remove(0));","lastModifiedDate":"2022-10-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                                      Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                                      String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"darrtzj"},"content":"        Model expectedModel \u003d new ModelManager(model.getFriday(), new UserPrefs());","lastModifiedDate":"2022-10-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"                                      String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2022-10-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"darrtzj"},"content":"    private static class JsonFridayIoExceptionThrowingStub extends JsonFridayStorage {","lastModifiedDate":"2022-10-10"},{"lineNumber":155,"author":{"gitId":"darrtzj"},"content":"        private JsonFridayIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2022-10-10"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"darrtzj"},"content":"        public void saveFriday(ReadOnlyFriday friday, Path filePath) throws IOException {","lastModifiedDate":"2022-10-10"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"jorrdansoh":8,"Yuvaraj0702":6,"darrtzj":8,"kaij77":5,"-":124,"HowSuen":13}},{"path":"src/test/java/friday/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.logic.commands;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"HowSuen"},"content":"import static friday.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"HowSuen"},"content":"import static friday.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"Yuvaraj0702"},"content":"import static friday.testutil.TypicalStudents.getTypicalFriday;","lastModifiedDate":"2022-10-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"HowSuen"},"content":"import friday.model.Model;","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"HowSuen"},"content":"import friday.model.ModelManager;","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"HowSuen"},"content":"import friday.model.UserPrefs;","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"kaij77"},"content":"import friday.model.student.Student;","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"jorrdansoh"},"content":"import friday.testutil.StudentBuilder;","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"Yuvaraj0702"},"content":"        model \u003d new ModelManager(getTypicalFriday(), new UserPrefs());","lastModifiedDate":"2022-10-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"jorrdansoh"},"content":"    public void execute_newStudent_success() {","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"jorrdansoh"},"content":"        Student validStudent \u003d new StudentBuilder().build();","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"darrtzj"},"content":"        Model expectedModel \u003d new ModelManager(model.getFriday(), new UserPrefs());","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"jorrdansoh"},"content":"        expectedModel.addStudent(validStudent);","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"kaij77"},"content":"        assertCommandSuccess(new AddCommand(validStudent), model,","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"kaij77"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validStudent), expectedModel);","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"jorrdansoh"},"content":"    public void execute_duplicateStudent_throwsCommandException() {","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"jorrdansoh"},"content":"        Student studentInList \u003d model.getFriday().getStudentList().get(0);","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"jorrdansoh"},"content":"        assertCommandFailure(new AddCommand(studentInList), model, AddCommand.MESSAGE_DUPLICATE_STUDENT);","lastModifiedDate":"2022-10-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"jorrdansoh":7,"Yuvaraj0702":2,"darrtzj":1,"kaij77":3,"-":26,"HowSuen":6}},{"path":"src/test/java/friday/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.logic.commands;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"HowSuen"},"content":"import static friday.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"jorrdansoh"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"HowSuen"},"content":"import friday.commons.core.GuiSettings;","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"HowSuen"},"content":"import friday.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"darrtzj"},"content":"import friday.model.Friday;","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"HowSuen"},"content":"import friday.model.Model;","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"darrtzj"},"content":"import friday.model.ReadOnlyFriday;","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"HowSuen"},"content":"import friday.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"darrtzj"},"content":"import friday.model.alias.Alias;","lastModifiedDate":"2022-10-23"},{"lineNumber":24,"author":{"gitId":"darrtzj"},"content":"import friday.model.alias.ReservedKeyword;","lastModifiedDate":"2022-10-23"},{"lineNumber":25,"author":{"gitId":"kaij77"},"content":"import friday.model.student.Student;","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"jorrdansoh"},"content":"import friday.testutil.StudentBuilder;","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"HowSuen"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"jorrdansoh"},"content":"    public void constructor_nullStudent_throwsNullPointerException() {","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"jorrdansoh"},"content":"    public void execute_studentAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"jorrdansoh"},"content":"        ModelStubAcceptingStudentAdded modelStub \u003d new ModelStubAcceptingStudentAdded();","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"jorrdansoh"},"content":"        Student validStudent \u003d new StudentBuilder().build();","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"kaij77"},"content":"        CommandResult commandResult \u003d new AddCommand(validStudent).execute(modelStub);","lastModifiedDate":"2022-10-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"kaij77"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validStudent), commandResult.getFeedbackToUser());","lastModifiedDate":"2022-10-06"},{"lineNumber":44,"author":{"gitId":"jorrdansoh"},"content":"        assertEquals(Arrays.asList(validStudent), modelStub.studentsAdded);","lastModifiedDate":"2022-10-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"jorrdansoh"},"content":"    public void execute_duplicateStudent_throwsCommandException() {","lastModifiedDate":"2022-10-20"},{"lineNumber":49,"author":{"gitId":"jorrdansoh"},"content":"        Student validStudent \u003d new StudentBuilder().build();","lastModifiedDate":"2022-10-20"},{"lineNumber":50,"author":{"gitId":"kaij77"},"content":"        AddCommand addCommand \u003d new AddCommand(validStudent);","lastModifiedDate":"2022-10-06"},{"lineNumber":51,"author":{"gitId":"jorrdansoh"},"content":"        ModelStub modelStub \u003d new ModelStubWithStudent(validStudent);","lastModifiedDate":"2022-10-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"jorrdansoh"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_STUDENT, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2022-10-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":58,"author":{"gitId":"jorrdansoh"},"content":"        Student alice \u003d new StudentBuilder().withName(\"Alice\").build();","lastModifiedDate":"2022-10-20"},{"lineNumber":59,"author":{"gitId":"jorrdansoh"},"content":"        Student bob \u003d new StudentBuilder().withName(\"Bob\").build();","lastModifiedDate":"2022-10-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"jorrdansoh"},"content":"        // different student -\u003e returns false","lastModifiedDate":"2022-10-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"darrtzj"},"content":"        public Path getFridayFilePath() {","lastModifiedDate":"2022-10-06"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"darrtzj"},"content":"        public void setFridayFilePath(Path fridayFilePath) {","lastModifiedDate":"2022-10-06"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":115,"author":{"gitId":"jorrdansoh"},"content":"        public void addStudent(Student student) {","lastModifiedDate":"2022-10-06"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":120,"author":{"gitId":"darrtzj"},"content":"        public void setFriday(ReadOnlyFriday newData) {","lastModifiedDate":"2022-10-06"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"darrtzj"},"content":"        public ReadOnlyFriday getFriday() {","lastModifiedDate":"2022-10-06"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":130,"author":{"gitId":"jorrdansoh"},"content":"        public boolean hasStudent(Student student) {","lastModifiedDate":"2022-10-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":135,"author":{"gitId":"jorrdansoh"},"content":"        public void deleteStudent(Student target) {","lastModifiedDate":"2022-10-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":140,"author":{"gitId":"jorrdansoh"},"content":"        public void setStudent(Student target, Student editedStudent) {","lastModifiedDate":"2022-10-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":145,"author":{"gitId":"jorrdansoh"},"content":"        public ObservableList\u003cStudent\u003e getStudentList() {","lastModifiedDate":"2022-10-20"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":150,"author":{"gitId":"jorrdansoh"},"content":"        public void updateFilteredStudentList(Predicate\u003cStudent\u003e predicate) {","lastModifiedDate":"2022-10-06"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":154,"author":{"gitId":"jorrdansoh"},"content":"        @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":155,"author":{"gitId":"jorrdansoh"},"content":"        public void updateSortedStudentList(Comparator\u003cStudent\u003e comparator) {","lastModifiedDate":"2022-10-20"},{"lineNumber":156,"author":{"gitId":"jorrdansoh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-20"},{"lineNumber":157,"author":{"gitId":"jorrdansoh"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":158,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":159,"author":{"gitId":"darrtzj"},"content":"        @Override","lastModifiedDate":"2022-10-23"},{"lineNumber":160,"author":{"gitId":"darrtzj"},"content":"        public boolean hasAlias(Alias alias) {","lastModifiedDate":"2022-10-23"},{"lineNumber":161,"author":{"gitId":"darrtzj"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-23"},{"lineNumber":162,"author":{"gitId":"darrtzj"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":163,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":164,"author":{"gitId":"darrtzj"},"content":"        @Override","lastModifiedDate":"2022-10-23"},{"lineNumber":165,"author":{"gitId":"darrtzj"},"content":"        public void addAlias(Alias alias, ReservedKeyword keyword) {","lastModifiedDate":"2022-10-23"},{"lineNumber":166,"author":{"gitId":"darrtzj"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-23"},{"lineNumber":167,"author":{"gitId":"darrtzj"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":168,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":169,"author":{"gitId":"darrtzj"},"content":"        @Override","lastModifiedDate":"2022-10-23"},{"lineNumber":170,"author":{"gitId":"darrtzj"},"content":"        public void removeAlias(Alias target) {","lastModifiedDate":"2022-10-23"},{"lineNumber":171,"author":{"gitId":"darrtzj"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-23"},{"lineNumber":172,"author":{"gitId":"darrtzj"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":173,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":174,"author":{"gitId":"darrtzj"},"content":"        @Override","lastModifiedDate":"2022-10-23"},{"lineNumber":175,"author":{"gitId":"darrtzj"},"content":"        public String getKeyword(String key) {","lastModifiedDate":"2022-10-23"},{"lineNumber":176,"author":{"gitId":"darrtzj"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-23"},{"lineNumber":177,"author":{"gitId":"darrtzj"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":178,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":179,"author":{"gitId":"darrtzj"},"content":"        @Override","lastModifiedDate":"2022-10-23"},{"lineNumber":180,"author":{"gitId":"darrtzj"},"content":"        public String displayAliases() {","lastModifiedDate":"2022-10-23"},{"lineNumber":181,"author":{"gitId":"darrtzj"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-23"},{"lineNumber":182,"author":{"gitId":"darrtzj"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":186,"author":{"gitId":"jorrdansoh"},"content":"     * A Model stub that contains a single student.","lastModifiedDate":"2022-10-20"},{"lineNumber":187,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":188,"author":{"gitId":"jorrdansoh"},"content":"    private class ModelStubWithStudent extends ModelStub {","lastModifiedDate":"2022-10-20"},{"lineNumber":189,"author":{"gitId":"kaij77"},"content":"        private final Student student;","lastModifiedDate":"2022-10-06"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":191,"author":{"gitId":"jorrdansoh"},"content":"        ModelStubWithStudent(Student student) {","lastModifiedDate":"2022-10-20"},{"lineNumber":192,"author":{"gitId":"kaij77"},"content":"            requireNonNull(student);","lastModifiedDate":"2022-10-06"},{"lineNumber":193,"author":{"gitId":"kaij77"},"content":"            this.student \u003d student;","lastModifiedDate":"2022-10-06"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":197,"author":{"gitId":"jorrdansoh"},"content":"        public boolean hasStudent(Student student) {","lastModifiedDate":"2022-10-06"},{"lineNumber":198,"author":{"gitId":"kaij77"},"content":"            requireNonNull(student);","lastModifiedDate":"2022-10-06"},{"lineNumber":199,"author":{"gitId":"jorrdansoh"},"content":"            return this.student.isSameStudent(student);","lastModifiedDate":"2022-10-06"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":204,"author":{"gitId":"jorrdansoh"},"content":"     * A Model stub that always accept the student being added.","lastModifiedDate":"2022-10-20"},{"lineNumber":205,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":206,"author":{"gitId":"jorrdansoh"},"content":"    private class ModelStubAcceptingStudentAdded extends ModelStub {","lastModifiedDate":"2022-10-20"},{"lineNumber":207,"author":{"gitId":"jorrdansoh"},"content":"        final ArrayList\u003cStudent\u003e studentsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-20"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":210,"author":{"gitId":"jorrdansoh"},"content":"        public boolean hasStudent(Student student) {","lastModifiedDate":"2022-10-06"},{"lineNumber":211,"author":{"gitId":"kaij77"},"content":"            requireNonNull(student);","lastModifiedDate":"2022-10-06"},{"lineNumber":212,"author":{"gitId":"jorrdansoh"},"content":"            return studentsAdded.stream().anyMatch(student::isSameStudent);","lastModifiedDate":"2022-10-20"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":216,"author":{"gitId":"jorrdansoh"},"content":"        public void addStudent(Student student) {","lastModifiedDate":"2022-10-06"},{"lineNumber":217,"author":{"gitId":"kaij77"},"content":"            requireNonNull(student);","lastModifiedDate":"2022-10-06"},{"lineNumber":218,"author":{"gitId":"jorrdansoh"},"content":"            studentsAdded.add(student);","lastModifiedDate":"2022-10-20"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":222,"author":{"gitId":"darrtzj"},"content":"        public ReadOnlyFriday getFriday() {","lastModifiedDate":"2022-10-06"},{"lineNumber":223,"author":{"gitId":"darrtzj"},"content":"            return new Friday();","lastModifiedDate":"2022-10-06"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":227,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"jorrdansoh":37,"darrtzj":35,"kaij77":10,"-":138,"HowSuen":7}},{"path":"src/test/java/friday/logic/commands/AliasCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"darrtzj"},"content":"package friday.logic.commands;","lastModifiedDate":"2022-10-23"},{"lineNumber":2,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":3,"author":{"gitId":"darrtzj"},"content":"import static friday.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-24"},{"lineNumber":4,"author":{"gitId":"darrtzj"},"content":"import static friday.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-23"},{"lineNumber":5,"author":{"gitId":"Yuvaraj0702"},"content":"import static friday.testutil.TypicalStudents.getTypicalFriday;","lastModifiedDate":"2022-10-25"},{"lineNumber":6,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":7,"author":{"gitId":"darrtzj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-23"},{"lineNumber":8,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":9,"author":{"gitId":"darrtzj"},"content":"import friday.model.Model;","lastModifiedDate":"2022-10-23"},{"lineNumber":10,"author":{"gitId":"darrtzj"},"content":"import friday.model.ModelManager;","lastModifiedDate":"2022-10-23"},{"lineNumber":11,"author":{"gitId":"darrtzj"},"content":"import friday.model.UserPrefs;","lastModifiedDate":"2022-10-23"},{"lineNumber":12,"author":{"gitId":"darrtzj"},"content":"import friday.model.alias.Alias;","lastModifiedDate":"2022-10-23"},{"lineNumber":13,"author":{"gitId":"darrtzj"},"content":"import friday.model.alias.ReservedKeyword;","lastModifiedDate":"2022-10-23"},{"lineNumber":14,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":15,"author":{"gitId":"darrtzj"},"content":"public class AliasCommandTest {","lastModifiedDate":"2022-10-23"},{"lineNumber":16,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":17,"author":{"gitId":"darrtzj"},"content":"    private static final Alias VALID_ALIAS \u003d new Alias(\"ls\");","lastModifiedDate":"2022-10-25"},{"lineNumber":18,"author":{"gitId":"darrtzj"},"content":"    private static final Alias INVALID_ALIAS \u003d new Alias(AddCommand.COMMAND_WORD);","lastModifiedDate":"2022-10-25"},{"lineNumber":19,"author":{"gitId":"darrtzj"},"content":"    private static final ReservedKeyword VALID_KEYWORD \u003d new ReservedKeyword(ListCommand.COMMAND_WORD);","lastModifiedDate":"2022-10-25"},{"lineNumber":20,"author":{"gitId":"darrtzj"},"content":"    private static final ReservedKeyword INVALID_KEYWORD \u003d new ReservedKeyword(\"a\");","lastModifiedDate":"2022-10-25"},{"lineNumber":21,"author":{"gitId":"Yuvaraj0702"},"content":"    private Model model \u003d new ModelManager(getTypicalFriday(), new UserPrefs());","lastModifiedDate":"2022-10-25"},{"lineNumber":22,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":23,"author":{"gitId":"darrtzj"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":24,"author":{"gitId":"darrtzj"},"content":"    public void execute_aliasAcceptedByModel_addSuccessful() {","lastModifiedDate":"2022-10-23"},{"lineNumber":25,"author":{"gitId":"darrtzj"},"content":"        AliasCommand aliasCommand \u003d new AliasCommand(VALID_ALIAS, VALID_KEYWORD);","lastModifiedDate":"2022-10-25"},{"lineNumber":26,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":27,"author":{"gitId":"darrtzj"},"content":"        String expectedMessage \u003d String.format(AliasCommand.MESSAGE_SUCCESS, VALID_ALIAS);","lastModifiedDate":"2022-10-25"},{"lineNumber":28,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":29,"author":{"gitId":"darrtzj"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getFriday(), new UserPrefs());","lastModifiedDate":"2022-10-23"},{"lineNumber":30,"author":{"gitId":"darrtzj"},"content":"        expectedModel.addAlias(VALID_ALIAS, VALID_KEYWORD);","lastModifiedDate":"2022-10-25"},{"lineNumber":31,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":32,"author":{"gitId":"darrtzj"},"content":"        assertCommandSuccess(aliasCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-23"},{"lineNumber":33,"author":{"gitId":"darrtzj"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":34,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":35,"author":{"gitId":"darrtzj"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":36,"author":{"gitId":"darrtzj"},"content":"    public void execute_duplicateAlias_throwsCommandException() {","lastModifiedDate":"2022-10-23"},{"lineNumber":37,"author":{"gitId":"darrtzj"},"content":"        AliasCommand aliasCommand \u003d new AliasCommand(VALID_ALIAS, VALID_KEYWORD);","lastModifiedDate":"2022-10-25"},{"lineNumber":38,"author":{"gitId":"darrtzj"},"content":"        model.addAlias(VALID_ALIAS, VALID_KEYWORD);","lastModifiedDate":"2022-10-25"},{"lineNumber":39,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":40,"author":{"gitId":"darrtzj"},"content":"        assertCommandFailure(aliasCommand, model, AliasCommand.MESSAGE_DUPLICATE_ALIAS);","lastModifiedDate":"2022-10-24"},{"lineNumber":41,"author":{"gitId":"darrtzj"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":42,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":43,"author":{"gitId":"darrtzj"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":44,"author":{"gitId":"darrtzj"},"content":"    public void execute_invalidAlias_throwsCommandException() {","lastModifiedDate":"2022-10-23"},{"lineNumber":45,"author":{"gitId":"darrtzj"},"content":"        AliasCommand aliasCommand \u003d new AliasCommand(INVALID_ALIAS, VALID_KEYWORD);","lastModifiedDate":"2022-10-25"},{"lineNumber":46,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":47,"author":{"gitId":"darrtzj"},"content":"        assertCommandFailure(aliasCommand, model, AliasCommand.MESSAGE_INVALID_ALIAS);","lastModifiedDate":"2022-10-24"},{"lineNumber":48,"author":{"gitId":"darrtzj"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":49,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":50,"author":{"gitId":"darrtzj"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":51,"author":{"gitId":"darrtzj"},"content":"    public void execute_invalidKeyword_throwsCommandException() {","lastModifiedDate":"2022-10-23"},{"lineNumber":52,"author":{"gitId":"darrtzj"},"content":"        AliasCommand aliasCommand \u003d new AliasCommand(VALID_ALIAS, INVALID_KEYWORD);","lastModifiedDate":"2022-10-25"},{"lineNumber":53,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":54,"author":{"gitId":"darrtzj"},"content":"        assertCommandFailure(aliasCommand, model, AliasCommand.MESSAGE_INVALID_KEYWORD);","lastModifiedDate":"2022-10-24"},{"lineNumber":55,"author":{"gitId":"darrtzj"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":56,"author":{"gitId":"darrtzj"},"content":"}","lastModifiedDate":"2022-10-23"}],"authorContributionMap":{"Yuvaraj0702":2,"darrtzj":54}},{"path":"src/test/java/friday/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.logic.commands;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"HowSuen"},"content":"import static friday.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"Yuvaraj0702"},"content":"import static friday.testutil.TypicalStudents.getTypicalFriday;","lastModifiedDate":"2022-10-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"darrtzj"},"content":"import friday.model.Friday;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"HowSuen"},"content":"import friday.model.Model;","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"HowSuen"},"content":"import friday.model.ModelManager;","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"HowSuen"},"content":"import friday.model.UserPrefs;","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"Yuvaraj0702"},"content":"    public void execute_emptyFriday_success() {","lastModifiedDate":"2022-10-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"Yuvaraj0702"},"content":"    public void execute_nonEmptyFriday_success() {","lastModifiedDate":"2022-10-25"},{"lineNumber":25,"author":{"gitId":"Yuvaraj0702"},"content":"        Model model \u003d new ModelManager(getTypicalFriday(), new UserPrefs());","lastModifiedDate":"2022-10-25"},{"lineNumber":26,"author":{"gitId":"Yuvaraj0702"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalFriday(), new UserPrefs());","lastModifiedDate":"2022-10-25"},{"lineNumber":27,"author":{"gitId":"darrtzj"},"content":"        expectedModel.setFriday(new Friday());","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"Yuvaraj0702":5,"darrtzj":2,"-":20,"HowSuen":5}},{"path":"src/test/java/friday/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.logic.commands;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true)));","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"-":53,"HowSuen":1}},{"path":"src/test/java/friday/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.logic.commands;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"kaij77"},"content":"import static friday.logic.parser.CliSyntax.PREFIX_CONSULTATION;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"kaij77"},"content":"import static friday.logic.parser.CliSyntax.PREFIX_MASTERYCHECK;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"HowSuen"},"content":"import static friday.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"HowSuen"},"content":"import static friday.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"kaij77"},"content":"import static friday.logic.parser.CliSyntax.PREFIX_TELEGRAMHANDLE;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"HowSuen"},"content":"import static friday.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"HowSuen"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"HowSuen"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"kaij77"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"HowSuen"},"content":"import friday.commons.core.index.Index;","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"HowSuen"},"content":"import friday.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"darrtzj"},"content":"import friday.model.Friday;","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"HowSuen"},"content":"import friday.model.Model;","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"kaij77"},"content":"import friday.model.student.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"kaij77"},"content":"import friday.model.student.Student;","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"HowSuen"},"content":"import friday.testutil.EditStudentDescriptorBuilder;","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"kaij77"},"content":"    public static final String VALID_TELEGRAMHANDLE_AMY \u003d \"amy123\";","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"kaij77"},"content":"    public static final String VALID_TELEGRAMHANDLE_BOB \u003d \"b0b_choo\";","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"kaij77"},"content":"    public static final LocalDate VALID_CONSULTATION_AMY \u003d LocalDate.of(2022, 9, 1);","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"kaij77"},"content":"    public static final LocalDate VALID_CONSULTATION_BOB \u003d LocalDate.of(2022, 7, 12);","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"kaij77"},"content":"    public static final LocalDate VALID_MASTERYCHECK_DATE_AMY \u003d LocalDate.of(2022, 11, 2);","lastModifiedDate":"2022-11-06"},{"lineNumber":37,"author":{"gitId":"kaij77"},"content":"    public static final LocalDate VALID_MASTERYCHECK_DATE_BOB \u003d LocalDate.of(2022, 8, 24);","lastModifiedDate":"2022-11-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_REMARK_AMY \u003d \"Like skiing.\";","lastModifiedDate":"2022-09-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_REMARK_BOB \u003d \"Favourite pastime: Eating\";","lastModifiedDate":"2022-09-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"HowSuen"},"content":"    public static final String VALID_GRADE_SCORE_AMY \u003d \"69.99\";","lastModifiedDate":"2022-10-21"},{"lineNumber":43,"author":{"gitId":"HowSuen"},"content":"    public static final String VALID_GRADE_SCORE_BOB \u003d \"90\";","lastModifiedDate":"2022-10-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"kaij77"},"content":"    public static final String TELEGRAMHANDLE_DESC_AMY \u003d \" \" + PREFIX_TELEGRAMHANDLE + VALID_TELEGRAMHANDLE_AMY;","lastModifiedDate":"2022-10-06"},{"lineNumber":48,"author":{"gitId":"kaij77"},"content":"    public static final String TELEGRAMHANDLE_DESC_BOB \u003d \" \" + PREFIX_TELEGRAMHANDLE + VALID_TELEGRAMHANDLE_BOB;","lastModifiedDate":"2022-10-06"},{"lineNumber":49,"author":{"gitId":"kaij77"},"content":"    public static final String CONSULTATION_DESC_AMY \u003d \" \" + PREFIX_CONSULTATION + VALID_CONSULTATION_AMY;","lastModifiedDate":"2022-10-06"},{"lineNumber":50,"author":{"gitId":"kaij77"},"content":"    public static final String CONSULTATION_DESC_BOB \u003d \" \" + PREFIX_CONSULTATION + VALID_CONSULTATION_BOB;","lastModifiedDate":"2022-10-06"},{"lineNumber":51,"author":{"gitId":"kaij77"},"content":"    public static final String MASTERYCHECK_DESC_AMY \u003d \" \" + PREFIX_MASTERYCHECK + VALID_MASTERYCHECK_DATE_AMY;","lastModifiedDate":"2022-11-06"},{"lineNumber":52,"author":{"gitId":"kaij77"},"content":"    public static final String MASTERYCHECK_DESC_BOB \u003d \" \" + PREFIX_MASTERYCHECK + VALID_MASTERYCHECK_DATE_BOB;","lastModifiedDate":"2022-11-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"kaij77"},"content":"    public static final String INVALID_TELEGRAMHANDLE_DESC \u003d \" \" + PREFIX_TELEGRAMHANDLE","lastModifiedDate":"2022-10-06"},{"lineNumber":58,"author":{"gitId":"kaij77"},"content":"            + \"lucy+2\"; // \u0027+\u0027 not allowed in Telegram handles","lastModifiedDate":"2022-10-06"},{"lineNumber":59,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":65,"author":{"gitId":"HowSuen"},"content":"    public static final EditCommand.EditStudentDescriptor DESC_AMY;","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"HowSuen"},"content":"    public static final EditCommand.EditStudentDescriptor DESC_BOB;","lastModifiedDate":"2022-10-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"HowSuen"},"content":"        DESC_AMY \u003d new EditStudentDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"kaij77"},"content":"                .withPhone(VALID_TELEGRAMHANDLE_AMY).withConsultation(VALID_CONSULTATION_AMY)","lastModifiedDate":"2022-10-06"},{"lineNumber":71,"author":{"gitId":"kaij77"},"content":"                .withMasteryCheck(VALID_MASTERYCHECK_DATE_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-11-06"},{"lineNumber":72,"author":{"gitId":"HowSuen"},"content":"        DESC_BOB \u003d new EditStudentDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2022-10-12"},{"lineNumber":73,"author":{"gitId":"kaij77"},"content":"                .withPhone(VALID_TELEGRAMHANDLE_BOB).withConsultation(VALID_CONSULTATION_BOB)","lastModifiedDate":"2022-10-06"},{"lineNumber":74,"author":{"gitId":"kaij77"},"content":"                .withMasteryCheck(VALID_MASTERYCHECK_DATE_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-11-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"jorrdansoh"},"content":"     * - the friday, filtered student list and selected student in {@code actualModel} remain unchanged","lastModifiedDate":"2022-11-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"jorrdansoh"},"content":"        Friday expectedFriday \u003d new Friday(actualModel.getFriday());","lastModifiedDate":"2022-11-05"},{"lineNumber":113,"author":{"gitId":"jorrdansoh"},"content":"        List\u003cStudent\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getStudentList());","lastModifiedDate":"2022-10-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":116,"author":{"gitId":"jorrdansoh"},"content":"        assertEquals(expectedFriday, actualModel.getFriday());","lastModifiedDate":"2022-11-05"},{"lineNumber":117,"author":{"gitId":"jorrdansoh"},"content":"        assertEquals(expectedFilteredList, actualModel.getStudentList());","lastModifiedDate":"2022-10-20"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":120,"author":{"gitId":"jorrdansoh"},"content":"     * Updates {@code model}\u0027s filtered list to show only the student at the given {@code targetIndex} in the","lastModifiedDate":"2022-10-20"},{"lineNumber":121,"author":{"gitId":"jorrdansoh"},"content":"     * {@code model}\u0027s friday.","lastModifiedDate":"2022-11-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":123,"author":{"gitId":"jorrdansoh"},"content":"    public static void showStudentAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2022-10-20"},{"lineNumber":124,"author":{"gitId":"jorrdansoh"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getStudentList().size());","lastModifiedDate":"2022-10-20"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":126,"author":{"gitId":"jorrdansoh"},"content":"        Student student \u003d model.getStudentList().get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-20"},{"lineNumber":127,"author":{"gitId":"kaij77"},"content":"        final String[] splitName \u003d student.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2022-10-06"},{"lineNumber":128,"author":{"gitId":"jorrdansoh"},"content":"        model.updateFilteredStudentList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2022-10-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":130,"author":{"gitId":"jorrdansoh"},"content":"        assertEquals(1, model.getStudentList().size());","lastModifiedDate":"2022-10-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"jorrdansoh":12,"darrtzj":1,"kaij77":26,"-":78,"HowSuen":16}},{"path":"src/test/java/friday/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.logic.commands;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"HowSuen"},"content":"import static friday.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"HowSuen"},"content":"import static friday.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"jorrdansoh"},"content":"import static friday.logic.commands.CommandTestUtil.showStudentAtIndex;","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"jorrdansoh"},"content":"import static friday.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"jorrdansoh"},"content":"import static friday.testutil.TypicalIndexes.INDEX_SECOND_STUDENT;","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"Yuvaraj0702"},"content":"import static friday.testutil.TypicalStudents.getTypicalFriday;","lastModifiedDate":"2022-10-25"},{"lineNumber":9,"author":{"gitId":"HowSuen"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"HowSuen"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"HowSuen"},"content":"import friday.commons.core.Messages;","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"HowSuen"},"content":"import friday.commons.core.index.Index;","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"HowSuen"},"content":"import friday.model.Model;","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"HowSuen"},"content":"import friday.model.ModelManager;","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"HowSuen"},"content":"import friday.model.UserPrefs;","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"kaij77"},"content":"import friday.model.student.Student;","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"Yuvaraj0702"},"content":"    private Model model \u003d new ModelManager(getTypicalFriday(), new UserPrefs());","lastModifiedDate":"2022-10-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"jorrdansoh"},"content":"        Student studentToDelete \u003d model.getStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"jorrdansoh"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_STUDENT);","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"jorrdansoh"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_STUDENT_SUCCESS, studentToDelete);","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"darrtzj"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getFriday(), new UserPrefs());","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"jorrdansoh"},"content":"        expectedModel.deleteStudent(studentToDelete);","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"jorrdansoh"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getStudentList().size() + 1);","lastModifiedDate":"2022-10-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"jorrdansoh"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"jorrdansoh"},"content":"        showStudentAtIndex(model, INDEX_FIRST_STUDENT);","lastModifiedDate":"2022-10-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"jorrdansoh"},"content":"        Student studentToDelete \u003d model.getStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2022-10-20"},{"lineNumber":55,"author":{"gitId":"jorrdansoh"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_STUDENT);","lastModifiedDate":"2022-10-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":57,"author":{"gitId":"jorrdansoh"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_STUDENT_SUCCESS, studentToDelete);","lastModifiedDate":"2022-10-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"darrtzj"},"content":"        Model expectedModel \u003d new ModelManager(model.getFriday(), new UserPrefs());","lastModifiedDate":"2022-10-06"},{"lineNumber":60,"author":{"gitId":"jorrdansoh"},"content":"        expectedModel.deleteStudent(studentToDelete);","lastModifiedDate":"2022-10-06"},{"lineNumber":61,"author":{"gitId":"jorrdansoh"},"content":"        showNoStudent(expectedModel);","lastModifiedDate":"2022-10-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"jorrdansoh"},"content":"        showStudentAtIndex(model, INDEX_FIRST_STUDENT);","lastModifiedDate":"2022-10-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"jorrdansoh"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_STUDENT;","lastModifiedDate":"2022-10-20"},{"lineNumber":71,"author":{"gitId":"jorrdansoh"},"content":"        // ensures that outOfBoundIndex is still in bounds of Friday list","lastModifiedDate":"2022-11-05"},{"lineNumber":72,"author":{"gitId":"jorrdansoh"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getFriday().getStudentList().size());","lastModifiedDate":"2022-10-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"jorrdansoh"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"jorrdansoh"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_STUDENT);","lastModifiedDate":"2022-10-20"},{"lineNumber":82,"author":{"gitId":"jorrdansoh"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_STUDENT);","lastModifiedDate":"2022-10-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"jorrdansoh"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_STUDENT);","lastModifiedDate":"2022-10-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"jorrdansoh"},"content":"        // different student -\u003e returns false","lastModifiedDate":"2022-10-20"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"jorrdansoh"},"content":"    private void showNoStudent(Model model) {","lastModifiedDate":"2022-10-20"},{"lineNumber":105,"author":{"gitId":"jorrdansoh"},"content":"        model.updateFilteredStudentList(p -\u003e false);","lastModifiedDate":"2022-10-06"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"jorrdansoh"},"content":"        assertTrue(model.getStudentList().isEmpty());","lastModifiedDate":"2022-10-20"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"jorrdansoh":27,"Yuvaraj0702":2,"darrtzj":2,"kaij77":1,"-":67,"HowSuen":10}},{"path":"src/test/java/friday/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.logic.commands;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"HowSuen"},"content":"import static friday.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"HowSuen"},"content":"import static friday.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"HowSuen"},"content":"import static friday.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"HowSuen"},"content":"import static friday.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-08"},{"lineNumber":7,"author":{"gitId":"HowSuen"},"content":"import static friday.logic.commands.CommandTestUtil.VALID_TELEGRAMHANDLE_BOB;","lastModifiedDate":"2022-10-08"},{"lineNumber":8,"author":{"gitId":"HowSuen"},"content":"import static friday.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"HowSuen"},"content":"import static friday.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"jorrdansoh"},"content":"import static friday.logic.commands.CommandTestUtil.showStudentAtIndex;","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"jorrdansoh"},"content":"import static friday.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"jorrdansoh"},"content":"import static friday.testutil.TypicalIndexes.INDEX_SECOND_STUDENT;","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"Yuvaraj0702"},"content":"import static friday.testutil.TypicalStudents.getTypicalFriday;","lastModifiedDate":"2022-10-25"},{"lineNumber":14,"author":{"gitId":"HowSuen"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"HowSuen"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"HowSuen"},"content":"import friday.commons.core.Messages;","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"HowSuen"},"content":"import friday.commons.core.index.Index;","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"HowSuen"},"content":"import friday.logic.commands.EditCommand.EditStudentDescriptor;","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"darrtzj"},"content":"import friday.model.Friday;","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"HowSuen"},"content":"import friday.model.Model;","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"HowSuen"},"content":"import friday.model.ModelManager;","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"HowSuen"},"content":"import friday.model.UserPrefs;","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"kaij77"},"content":"import friday.model.student.Student;","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"HowSuen"},"content":"import friday.testutil.EditStudentDescriptorBuilder;","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"jorrdansoh"},"content":"import friday.testutil.StudentBuilder;","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"Yuvaraj0702"},"content":"    private Model model \u003d new ModelManager(getTypicalFriday(), new UserPrefs());","lastModifiedDate":"2022-10-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":39,"author":{"gitId":"jorrdansoh"},"content":"        Student editedStudent \u003d new StudentBuilder().build();","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"HowSuen"},"content":"        EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder(editedStudent).build();","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"jorrdansoh"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_STUDENT, descriptor);","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"HowSuen"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_STUDENT_SUCCESS, editedStudent);","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"HowSuen"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getFriday(), new UserPrefs());","lastModifiedDate":"2022-10-07"},{"lineNumber":46,"author":{"gitId":"jorrdansoh"},"content":"        expectedModel.setStudent(model.getStudentList().get(0), editedStudent);","lastModifiedDate":"2022-10-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"jorrdansoh"},"content":"        Index indexLastStudent \u003d Index.fromOneBased(model.getStudentList().size());","lastModifiedDate":"2022-10-20"},{"lineNumber":55,"author":{"gitId":"jorrdansoh"},"content":"        Student lastStudent \u003d model.getStudentList().get(indexLastStudent.getZeroBased());","lastModifiedDate":"2022-10-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":57,"author":{"gitId":"jorrdansoh"},"content":"        StudentBuilder studentInList \u003d new StudentBuilder(lastStudent);","lastModifiedDate":"2022-10-20"},{"lineNumber":58,"author":{"gitId":"jorrdansoh"},"content":"        Student editedStudent \u003d studentInList.withName(VALID_NAME_BOB).withTelegramHandle(VALID_TELEGRAMHANDLE_BOB)","lastModifiedDate":"2022-10-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"HowSuen"},"content":"        EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"kaij77"},"content":"                .withPhone(VALID_TELEGRAMHANDLE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-10-06"},{"lineNumber":63,"author":{"gitId":"jorrdansoh"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastStudent, descriptor);","lastModifiedDate":"2022-10-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"HowSuen"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_STUDENT_SUCCESS, editedStudent);","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"HowSuen"},"content":"        Model expectedModel \u003d new ModelManager(new Friday(model.getFriday()), new UserPrefs());","lastModifiedDate":"2022-10-08"},{"lineNumber":68,"author":{"gitId":"HowSuen"},"content":"        expectedModel.setStudent(lastStudent, editedStudent);","lastModifiedDate":"2022-10-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":75,"author":{"gitId":"jorrdansoh"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_STUDENT, new EditStudentDescriptor());","lastModifiedDate":"2022-10-20"},{"lineNumber":76,"author":{"gitId":"jorrdansoh"},"content":"        Student editedStudent \u003d model.getStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2022-10-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"HowSuen"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_STUDENT_SUCCESS, editedStudent);","lastModifiedDate":"2022-10-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"darrtzj"},"content":"        Model expectedModel \u003d new ModelManager(new Friday(model.getFriday()), new UserPrefs());","lastModifiedDate":"2022-10-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"jorrdansoh"},"content":"        showStudentAtIndex(model, INDEX_FIRST_STUDENT);","lastModifiedDate":"2022-10-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":89,"author":{"gitId":"jorrdansoh"},"content":"        Student studentInFilteredList \u003d model.getStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2022-10-20"},{"lineNumber":90,"author":{"gitId":"jorrdansoh"},"content":"        Student editedStudent \u003d new StudentBuilder(studentInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-10-20"},{"lineNumber":91,"author":{"gitId":"jorrdansoh"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_STUDENT,","lastModifiedDate":"2022-10-20"},{"lineNumber":92,"author":{"gitId":"HowSuen"},"content":"                new EditStudentDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2022-10-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"HowSuen"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_STUDENT_SUCCESS, editedStudent);","lastModifiedDate":"2022-10-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"jorrdansoh"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, model);","lastModifiedDate":"2022-10-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"jorrdansoh"},"content":"    public void execute_duplicateStudentUnfilteredList_failure() {","lastModifiedDate":"2022-10-20"},{"lineNumber":101,"author":{"gitId":"jorrdansoh"},"content":"        Student firstStudent \u003d model.getStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2022-10-20"},{"lineNumber":102,"author":{"gitId":"HowSuen"},"content":"        EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder(firstStudent).build();","lastModifiedDate":"2022-10-12"},{"lineNumber":103,"author":{"gitId":"jorrdansoh"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_STUDENT, descriptor);","lastModifiedDate":"2022-10-20"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"HowSuen"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_STUDENT);","lastModifiedDate":"2022-10-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"jorrdansoh"},"content":"    public void execute_duplicateStudentFilteredList_failure() {","lastModifiedDate":"2022-10-20"},{"lineNumber":110,"author":{"gitId":"jorrdansoh"},"content":"        showStudentAtIndex(model, INDEX_FIRST_STUDENT);","lastModifiedDate":"2022-10-20"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":112,"author":{"gitId":"jorrdansoh"},"content":"        // edit student in filtered list into a duplicate in Friday","lastModifiedDate":"2022-11-05"},{"lineNumber":113,"author":{"gitId":"jorrdansoh"},"content":"        Student studentInList \u003d model.getFriday().getStudentList().get(INDEX_SECOND_STUDENT.getZeroBased());","lastModifiedDate":"2022-10-20"},{"lineNumber":114,"author":{"gitId":"jorrdansoh"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_STUDENT,","lastModifiedDate":"2022-10-20"},{"lineNumber":115,"author":{"gitId":"HowSuen"},"content":"                new EditStudentDescriptorBuilder(studentInList).build());","lastModifiedDate":"2022-10-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"HowSuen"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_STUDENT);","lastModifiedDate":"2022-10-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":121,"author":{"gitId":"jorrdansoh"},"content":"    public void execute_invalidStudentIndexUnfilteredList_failure() {","lastModifiedDate":"2022-10-20"},{"lineNumber":122,"author":{"gitId":"jorrdansoh"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getStudentList().size() + 1);","lastModifiedDate":"2022-10-20"},{"lineNumber":123,"author":{"gitId":"HowSuen"},"content":"        EditCommand.EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder()","lastModifiedDate":"2022-10-12"},{"lineNumber":124,"author":{"gitId":"HowSuen"},"content":"                .withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-10-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":127,"author":{"gitId":"jorrdansoh"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-20"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":132,"author":{"gitId":"jorrdansoh"},"content":"     * but smaller than size of friday","lastModifiedDate":"2022-11-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"jorrdansoh"},"content":"    public void execute_invalidStudentIndexFilteredList_failure() {","lastModifiedDate":"2022-10-20"},{"lineNumber":136,"author":{"gitId":"jorrdansoh"},"content":"        showStudentAtIndex(model, INDEX_FIRST_STUDENT);","lastModifiedDate":"2022-10-20"},{"lineNumber":137,"author":{"gitId":"jorrdansoh"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_STUDENT;","lastModifiedDate":"2022-10-20"},{"lineNumber":138,"author":{"gitId":"jorrdansoh"},"content":"        // ensures that outOfBoundIndex is still in bounds of friday list","lastModifiedDate":"2022-11-05"},{"lineNumber":139,"author":{"gitId":"jorrdansoh"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getFriday().getStudentList().size());","lastModifiedDate":"2022-10-20"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"HowSuen"},"content":"                new EditStudentDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2022-10-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":144,"author":{"gitId":"jorrdansoh"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-20"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"jorrdansoh"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_STUDENT, DESC_AMY);","lastModifiedDate":"2022-10-20"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":152,"author":{"gitId":"HowSuen"},"content":"        EditStudentDescriptor copyDescriptor \u003d new EditStudentDescriptor(DESC_AMY);","lastModifiedDate":"2022-10-12"},{"lineNumber":153,"author":{"gitId":"jorrdansoh"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_STUDENT, copyDescriptor);","lastModifiedDate":"2022-10-20"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"jorrdansoh"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_STUDENT, DESC_AMY)));","lastModifiedDate":"2022-10-20"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"jorrdansoh"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_STUDENT, DESC_BOB)));","lastModifiedDate":"2022-10-20"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"jorrdansoh":41,"Yuvaraj0702":2,"darrtzj":2,"kaij77":2,"-":89,"HowSuen":36}},{"path":"src/test/java/friday/logic/commands/EditStudentDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.logic.commands;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"HowSuen"},"content":"import static friday.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"HowSuen"},"content":"import static friday.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"kaij77"},"content":"import static friday.logic.commands.CommandTestUtil.VALID_CONSULTATION_BOB;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"kaij77"},"content":"import static friday.logic.commands.CommandTestUtil.VALID_MASTERYCHECK_DATE_BOB;","lastModifiedDate":"2022-11-06"},{"lineNumber":7,"author":{"gitId":"HowSuen"},"content":"import static friday.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"HowSuen"},"content":"import static friday.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"kaij77"},"content":"import static friday.logic.commands.CommandTestUtil.VALID_TELEGRAMHANDLE_BOB;","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"HowSuen"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"HowSuen"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"HowSuen"},"content":"import friday.logic.commands.EditCommand.EditStudentDescriptor;","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"HowSuen"},"content":"import friday.testutil.EditStudentDescriptorBuilder;","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"kaij77"},"content":"public class EditStudentDescriptorTest {","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"HowSuen"},"content":"        EditStudentDescriptor descriptorWithSameValues \u003d new EditCommand.EditStudentDescriptor(DESC_AMY);","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"HowSuen"},"content":"        EditCommand.EditStudentDescriptor editedAmy \u003d new EditStudentDescriptorBuilder(DESC_AMY)","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"HowSuen"},"content":"                .withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"HowSuen"},"content":"        editedAmy \u003d new EditStudentDescriptorBuilder(DESC_AMY).withPhone(VALID_TELEGRAMHANDLE_BOB).build();","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"HowSuen"},"content":"        editedAmy \u003d new EditStudentDescriptorBuilder(DESC_AMY).withConsultation(VALID_CONSULTATION_BOB).build();","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"kaij77"},"content":"        editedAmy \u003d new EditStudentDescriptorBuilder(DESC_AMY).withMasteryCheck(VALID_MASTERYCHECK_DATE_BOB).build();","lastModifiedDate":"2022-11-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"HowSuen"},"content":"        editedAmy \u003d new EditStudentDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"kaij77":5,"-":39,"HowSuen":15}},{"path":"src/test/java/friday/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.logic.commands;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"HowSuen"},"content":"import static friday.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"HowSuen"},"content":"import static friday.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"HowSuen"},"content":"import friday.model.Model;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"HowSuen"},"content":"import friday.model.ModelManager;","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"-":15,"HowSuen":5}},{"path":"src/test/java/friday/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.logic.commands;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"jorrdansoh"},"content":"import static friday.commons.core.Messages.MESSAGE_STUDENTS_LISTED_OVERVIEW;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"HowSuen"},"content":"import static friday.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"jorrdansoh"},"content":"import static friday.testutil.TypicalStudents.CARL;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"jorrdansoh"},"content":"import static friday.testutil.TypicalStudents.ELLE;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"jorrdansoh"},"content":"import static friday.testutil.TypicalStudents.FIONA;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"Yuvaraj0702"},"content":"import static friday.testutil.TypicalStudents.getTypicalFriday;","lastModifiedDate":"2022-10-25"},{"lineNumber":9,"author":{"gitId":"Yuvaraj0702"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-11-03"},{"lineNumber":10,"author":{"gitId":"HowSuen"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"HowSuen"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"HowSuen"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"Yuvaraj0702"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-11-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"Yuvaraj0702"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-11-03"},{"lineNumber":18,"author":{"gitId":"Yuvaraj0702"},"content":"import java.util.List;","lastModifiedDate":"2022-11-03"},{"lineNumber":19,"author":{"gitId":"Yuvaraj0702"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-11-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"Yuvaraj0702"},"content":"import friday.commons.core.GuiSettings;","lastModifiedDate":"2022-11-03"},{"lineNumber":24,"author":{"gitId":"Yuvaraj0702"},"content":"import friday.model.Friday;","lastModifiedDate":"2022-11-03"},{"lineNumber":25,"author":{"gitId":"HowSuen"},"content":"import friday.model.Model;","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"HowSuen"},"content":"import friday.model.ModelManager;","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"Yuvaraj0702"},"content":"import friday.model.ReadOnlyFriday;","lastModifiedDate":"2022-11-03"},{"lineNumber":28,"author":{"gitId":"Yuvaraj0702"},"content":"import friday.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-11-03"},{"lineNumber":29,"author":{"gitId":"HowSuen"},"content":"import friday.model.UserPrefs;","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"Yuvaraj0702"},"content":"import friday.model.alias.Alias;","lastModifiedDate":"2022-11-03"},{"lineNumber":31,"author":{"gitId":"Yuvaraj0702"},"content":"import friday.model.alias.ReservedKeyword;","lastModifiedDate":"2022-11-03"},{"lineNumber":32,"author":{"gitId":"kaij77"},"content":"import friday.model.student.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"Yuvaraj0702"},"content":"import friday.model.student.Student;","lastModifiedDate":"2022-11-03"},{"lineNumber":34,"author":{"gitId":"Yuvaraj0702"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-11-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"Yuvaraj0702"},"content":"    private Model model \u003d new ModelManager(getTypicalFriday(), new UserPrefs());","lastModifiedDate":"2022-10-25"},{"lineNumber":41,"author":{"gitId":"Yuvaraj0702"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalFriday(), new UserPrefs());","lastModifiedDate":"2022-10-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"Yuvaraj0702"},"content":"        // different student -\u003e returns false","lastModifiedDate":"2022-10-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"jorrdansoh"},"content":"    public void execute_zeroKeywords_noStudentFound() {","lastModifiedDate":"2022-10-20"},{"lineNumber":72,"author":{"gitId":"jorrdansoh"},"content":"        String expectedMessage \u003d String.format(MESSAGE_STUDENTS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2022-10-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"jorrdansoh"},"content":"        expectedModel.updateFilteredStudentList(predicate);","lastModifiedDate":"2022-10-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":77,"author":{"gitId":"jorrdansoh"},"content":"        assertEquals(Collections.emptyList(), model.getStudentList());","lastModifiedDate":"2022-10-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"Yuvaraj0702"},"content":"    @Test","lastModifiedDate":"2022-11-03"},{"lineNumber":81,"author":{"gitId":"Yuvaraj0702"},"content":"    public void execute_studentsFindByModel_noStudentFound() throws Exception {","lastModifiedDate":"2022-11-03"},{"lineNumber":82,"author":{"gitId":"Yuvaraj0702"},"content":"        FindCommandTest.ModelStubAcceptingFinding modelStub \u003d new FindCommandTest.ModelStubAcceptingFinding();","lastModifiedDate":"2022-11-03"},{"lineNumber":83,"author":{"gitId":"Yuvaraj0702"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2022-11-03"},{"lineNumber":84,"author":{"gitId":"Yuvaraj0702"},"content":"        CommandResult commandResult \u003d new FindCommand(predicate).execute(modelStub);","lastModifiedDate":"2022-11-03"},{"lineNumber":85,"author":{"gitId":"Yuvaraj0702"},"content":"        System.out.println(commandResult);","lastModifiedDate":"2022-11-03"},{"lineNumber":86,"author":{"gitId":"Yuvaraj0702"},"content":"        assertEquals(\"0 students listed!\", commandResult.getFeedbackToUser());","lastModifiedDate":"2022-11-03"},{"lineNumber":87,"author":{"gitId":"Yuvaraj0702"},"content":"    }","lastModifiedDate":"2022-11-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":89,"author":{"gitId":"jorrdansoh"},"content":"    public void execute_multipleKeywords_multipleStudentsFound() {","lastModifiedDate":"2022-10-20"},{"lineNumber":90,"author":{"gitId":"jorrdansoh"},"content":"        String expectedMessage \u003d String.format(MESSAGE_STUDENTS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2022-10-20"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"jorrdansoh"},"content":"        expectedModel.updateFilteredStudentList(predicate);","lastModifiedDate":"2022-10-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":95,"author":{"gitId":"jorrdansoh"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getStudentList());","lastModifiedDate":"2022-10-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":98,"author":{"gitId":"Yuvaraj0702"},"content":"    @Test","lastModifiedDate":"2022-11-03"},{"lineNumber":99,"author":{"gitId":"Yuvaraj0702"},"content":"    public void execute_multipleKeywords_oneStudentFound() {","lastModifiedDate":"2022-11-03"},{"lineNumber":100,"author":{"gitId":"Yuvaraj0702"},"content":"        String expectedMessage \u003d String.format(MESSAGE_STUDENTS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2022-11-03"},{"lineNumber":101,"author":{"gitId":"Yuvaraj0702"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz\");","lastModifiedDate":"2022-11-03"},{"lineNumber":102,"author":{"gitId":"Yuvaraj0702"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2022-11-03"},{"lineNumber":103,"author":{"gitId":"Yuvaraj0702"},"content":"        expectedModel.updateFilteredStudentList(predicate);","lastModifiedDate":"2022-11-03"},{"lineNumber":104,"author":{"gitId":"Yuvaraj0702"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-11-03"},{"lineNumber":105,"author":{"gitId":"Yuvaraj0702"},"content":"        assertEquals(List.of(CARL), model.getStudentList());","lastModifiedDate":"2022-11-03"},{"lineNumber":106,"author":{"gitId":"Yuvaraj0702"},"content":"    }","lastModifiedDate":"2022-11-03"},{"lineNumber":107,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":114,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":115,"author":{"gitId":"Yuvaraj0702"},"content":"    /**","lastModifiedDate":"2022-11-03"},{"lineNumber":116,"author":{"gitId":"Yuvaraj0702"},"content":"     * A default model stub that have all the methods failing.","lastModifiedDate":"2022-11-03"},{"lineNumber":117,"author":{"gitId":"Yuvaraj0702"},"content":"     */","lastModifiedDate":"2022-11-03"},{"lineNumber":118,"author":{"gitId":"Yuvaraj0702"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2022-11-03"},{"lineNumber":119,"author":{"gitId":"Yuvaraj0702"},"content":"        @Override","lastModifiedDate":"2022-11-03"},{"lineNumber":120,"author":{"gitId":"Yuvaraj0702"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2022-11-03"},{"lineNumber":121,"author":{"gitId":"Yuvaraj0702"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-11-03"},{"lineNumber":122,"author":{"gitId":"Yuvaraj0702"},"content":"        }","lastModifiedDate":"2022-11-03"},{"lineNumber":123,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":124,"author":{"gitId":"Yuvaraj0702"},"content":"        @Override","lastModifiedDate":"2022-11-03"},{"lineNumber":125,"author":{"gitId":"Yuvaraj0702"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2022-11-03"},{"lineNumber":126,"author":{"gitId":"Yuvaraj0702"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-11-03"},{"lineNumber":127,"author":{"gitId":"Yuvaraj0702"},"content":"        }","lastModifiedDate":"2022-11-03"},{"lineNumber":128,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":129,"author":{"gitId":"Yuvaraj0702"},"content":"        @Override","lastModifiedDate":"2022-11-03"},{"lineNumber":130,"author":{"gitId":"Yuvaraj0702"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2022-11-03"},{"lineNumber":131,"author":{"gitId":"Yuvaraj0702"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-11-03"},{"lineNumber":132,"author":{"gitId":"Yuvaraj0702"},"content":"        }","lastModifiedDate":"2022-11-03"},{"lineNumber":133,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":134,"author":{"gitId":"Yuvaraj0702"},"content":"        @Override","lastModifiedDate":"2022-11-03"},{"lineNumber":135,"author":{"gitId":"Yuvaraj0702"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2022-11-03"},{"lineNumber":136,"author":{"gitId":"Yuvaraj0702"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-11-03"},{"lineNumber":137,"author":{"gitId":"Yuvaraj0702"},"content":"        }","lastModifiedDate":"2022-11-03"},{"lineNumber":138,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":139,"author":{"gitId":"Yuvaraj0702"},"content":"        @Override","lastModifiedDate":"2022-11-03"},{"lineNumber":140,"author":{"gitId":"Yuvaraj0702"},"content":"        public Path getFridayFilePath() {","lastModifiedDate":"2022-11-03"},{"lineNumber":141,"author":{"gitId":"Yuvaraj0702"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-11-03"},{"lineNumber":142,"author":{"gitId":"Yuvaraj0702"},"content":"        }","lastModifiedDate":"2022-11-03"},{"lineNumber":143,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":144,"author":{"gitId":"Yuvaraj0702"},"content":"        @Override","lastModifiedDate":"2022-11-03"},{"lineNumber":145,"author":{"gitId":"Yuvaraj0702"},"content":"        public void setFridayFilePath(Path fridayFilePath) {","lastModifiedDate":"2022-11-03"},{"lineNumber":146,"author":{"gitId":"Yuvaraj0702"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-11-03"},{"lineNumber":147,"author":{"gitId":"Yuvaraj0702"},"content":"        }","lastModifiedDate":"2022-11-03"},{"lineNumber":148,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":149,"author":{"gitId":"Yuvaraj0702"},"content":"        @Override","lastModifiedDate":"2022-11-03"},{"lineNumber":150,"author":{"gitId":"Yuvaraj0702"},"content":"        public void addStudent(Student student) {","lastModifiedDate":"2022-11-03"},{"lineNumber":151,"author":{"gitId":"Yuvaraj0702"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-11-03"},{"lineNumber":152,"author":{"gitId":"Yuvaraj0702"},"content":"        }","lastModifiedDate":"2022-11-03"},{"lineNumber":153,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":154,"author":{"gitId":"Yuvaraj0702"},"content":"        @Override","lastModifiedDate":"2022-11-03"},{"lineNumber":155,"author":{"gitId":"Yuvaraj0702"},"content":"        public void setFriday(ReadOnlyFriday newData) {","lastModifiedDate":"2022-11-03"},{"lineNumber":156,"author":{"gitId":"Yuvaraj0702"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-11-03"},{"lineNumber":157,"author":{"gitId":"Yuvaraj0702"},"content":"        }","lastModifiedDate":"2022-11-03"},{"lineNumber":158,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":159,"author":{"gitId":"Yuvaraj0702"},"content":"        @Override","lastModifiedDate":"2022-11-03"},{"lineNumber":160,"author":{"gitId":"Yuvaraj0702"},"content":"        public ReadOnlyFriday getFriday() {","lastModifiedDate":"2022-11-03"},{"lineNumber":161,"author":{"gitId":"Yuvaraj0702"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-11-03"},{"lineNumber":162,"author":{"gitId":"Yuvaraj0702"},"content":"        }","lastModifiedDate":"2022-11-03"},{"lineNumber":163,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":164,"author":{"gitId":"Yuvaraj0702"},"content":"        @Override","lastModifiedDate":"2022-11-03"},{"lineNumber":165,"author":{"gitId":"Yuvaraj0702"},"content":"        public boolean hasStudent(Student student) {","lastModifiedDate":"2022-11-03"},{"lineNumber":166,"author":{"gitId":"Yuvaraj0702"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-11-03"},{"lineNumber":167,"author":{"gitId":"Yuvaraj0702"},"content":"        }","lastModifiedDate":"2022-11-03"},{"lineNumber":168,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":169,"author":{"gitId":"Yuvaraj0702"},"content":"        @Override","lastModifiedDate":"2022-11-03"},{"lineNumber":170,"author":{"gitId":"Yuvaraj0702"},"content":"        public void deleteStudent(Student target) {","lastModifiedDate":"2022-11-03"},{"lineNumber":171,"author":{"gitId":"Yuvaraj0702"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-11-03"},{"lineNumber":172,"author":{"gitId":"Yuvaraj0702"},"content":"        }","lastModifiedDate":"2022-11-03"},{"lineNumber":173,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":174,"author":{"gitId":"Yuvaraj0702"},"content":"        @Override","lastModifiedDate":"2022-11-03"},{"lineNumber":175,"author":{"gitId":"Yuvaraj0702"},"content":"        public void setStudent(Student target, Student editedStudent) {","lastModifiedDate":"2022-11-03"},{"lineNumber":176,"author":{"gitId":"Yuvaraj0702"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-11-03"},{"lineNumber":177,"author":{"gitId":"Yuvaraj0702"},"content":"        }","lastModifiedDate":"2022-11-03"},{"lineNumber":178,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":179,"author":{"gitId":"Yuvaraj0702"},"content":"        @Override","lastModifiedDate":"2022-11-03"},{"lineNumber":180,"author":{"gitId":"Yuvaraj0702"},"content":"        public ObservableList\u003cStudent\u003e getStudentList() {","lastModifiedDate":"2022-11-03"},{"lineNumber":181,"author":{"gitId":"Yuvaraj0702"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-11-03"},{"lineNumber":182,"author":{"gitId":"Yuvaraj0702"},"content":"        }","lastModifiedDate":"2022-11-03"},{"lineNumber":183,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":184,"author":{"gitId":"Yuvaraj0702"},"content":"        @Override","lastModifiedDate":"2022-11-03"},{"lineNumber":185,"author":{"gitId":"Yuvaraj0702"},"content":"        public void updateFilteredStudentList(Predicate\u003cStudent\u003e predicate) {","lastModifiedDate":"2022-11-03"},{"lineNumber":186,"author":{"gitId":"Yuvaraj0702"},"content":"            //throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-11-03"},{"lineNumber":187,"author":{"gitId":"Yuvaraj0702"},"content":"        }","lastModifiedDate":"2022-11-03"},{"lineNumber":188,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":189,"author":{"gitId":"Yuvaraj0702"},"content":"        @Override","lastModifiedDate":"2022-11-03"},{"lineNumber":190,"author":{"gitId":"Yuvaraj0702"},"content":"        public void updateSortedStudentList(Comparator\u003cStudent\u003e comparator) {","lastModifiedDate":"2022-11-03"},{"lineNumber":191,"author":{"gitId":"Yuvaraj0702"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-11-03"},{"lineNumber":192,"author":{"gitId":"Yuvaraj0702"},"content":"        }","lastModifiedDate":"2022-11-03"},{"lineNumber":193,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":194,"author":{"gitId":"Yuvaraj0702"},"content":"        @Override","lastModifiedDate":"2022-11-03"},{"lineNumber":195,"author":{"gitId":"Yuvaraj0702"},"content":"        public boolean hasAlias(Alias alias) {","lastModifiedDate":"2022-11-03"},{"lineNumber":196,"author":{"gitId":"Yuvaraj0702"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-11-03"},{"lineNumber":197,"author":{"gitId":"Yuvaraj0702"},"content":"        }","lastModifiedDate":"2022-11-03"},{"lineNumber":198,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":199,"author":{"gitId":"Yuvaraj0702"},"content":"        @Override","lastModifiedDate":"2022-11-03"},{"lineNumber":200,"author":{"gitId":"Yuvaraj0702"},"content":"        public void addAlias(Alias alias, ReservedKeyword keyword) {","lastModifiedDate":"2022-11-03"},{"lineNumber":201,"author":{"gitId":"Yuvaraj0702"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-11-03"},{"lineNumber":202,"author":{"gitId":"Yuvaraj0702"},"content":"        }","lastModifiedDate":"2022-11-03"},{"lineNumber":203,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":204,"author":{"gitId":"Yuvaraj0702"},"content":"        @Override","lastModifiedDate":"2022-11-03"},{"lineNumber":205,"author":{"gitId":"Yuvaraj0702"},"content":"        public void removeAlias(Alias target) {","lastModifiedDate":"2022-11-03"},{"lineNumber":206,"author":{"gitId":"Yuvaraj0702"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-11-03"},{"lineNumber":207,"author":{"gitId":"Yuvaraj0702"},"content":"        }","lastModifiedDate":"2022-11-03"},{"lineNumber":208,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":209,"author":{"gitId":"Yuvaraj0702"},"content":"        @Override","lastModifiedDate":"2022-11-03"},{"lineNumber":210,"author":{"gitId":"Yuvaraj0702"},"content":"        public String getKeyword(String key) {","lastModifiedDate":"2022-11-03"},{"lineNumber":211,"author":{"gitId":"Yuvaraj0702"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-11-03"},{"lineNumber":212,"author":{"gitId":"Yuvaraj0702"},"content":"        }","lastModifiedDate":"2022-11-03"},{"lineNumber":213,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":214,"author":{"gitId":"Yuvaraj0702"},"content":"        @Override","lastModifiedDate":"2022-11-03"},{"lineNumber":215,"author":{"gitId":"Yuvaraj0702"},"content":"        public String displayAliases() {","lastModifiedDate":"2022-11-03"},{"lineNumber":216,"author":{"gitId":"Yuvaraj0702"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-11-03"},{"lineNumber":217,"author":{"gitId":"Yuvaraj0702"},"content":"        }","lastModifiedDate":"2022-11-03"},{"lineNumber":218,"author":{"gitId":"Yuvaraj0702"},"content":"    }","lastModifiedDate":"2022-11-03"},{"lineNumber":219,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":220,"author":{"gitId":"Yuvaraj0702"},"content":"    /**","lastModifiedDate":"2022-11-03"},{"lineNumber":221,"author":{"gitId":"Yuvaraj0702"},"content":"     * A Model stub that always accepts finding.","lastModifiedDate":"2022-11-03"},{"lineNumber":222,"author":{"gitId":"Yuvaraj0702"},"content":"     */","lastModifiedDate":"2022-11-03"},{"lineNumber":223,"author":{"gitId":"Yuvaraj0702"},"content":"    private class ModelStubAcceptingFinding extends FindCommandTest.ModelStub {","lastModifiedDate":"2022-11-03"},{"lineNumber":224,"author":{"gitId":"Yuvaraj0702"},"content":"        private ObservableList\u003cStudent\u003e students \u003d getFriday().getStudentList();","lastModifiedDate":"2022-11-03"},{"lineNumber":225,"author":{"gitId":"Yuvaraj0702"},"content":"        private Model model \u003d new ModelManager(getTypicalFriday(), new UserPrefs());","lastModifiedDate":"2022-11-03"},{"lineNumber":226,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":227,"author":{"gitId":"Yuvaraj0702"},"content":"        @Override","lastModifiedDate":"2022-11-03"},{"lineNumber":228,"author":{"gitId":"Yuvaraj0702"},"content":"        public ObservableList\u003cStudent\u003e getStudentList() {","lastModifiedDate":"2022-11-03"},{"lineNumber":229,"author":{"gitId":"Yuvaraj0702"},"content":"            return students;","lastModifiedDate":"2022-11-03"},{"lineNumber":230,"author":{"gitId":"Yuvaraj0702"},"content":"        }","lastModifiedDate":"2022-11-03"},{"lineNumber":231,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":232,"author":{"gitId":"Yuvaraj0702"},"content":"        @Override","lastModifiedDate":"2022-11-03"},{"lineNumber":233,"author":{"gitId":"Yuvaraj0702"},"content":"        public void updateSortedStudentList(Comparator\u003cStudent\u003e comparator) {","lastModifiedDate":"2022-11-03"},{"lineNumber":234,"author":{"gitId":"Yuvaraj0702"},"content":"            NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2022-11-03"},{"lineNumber":235,"author":{"gitId":"Yuvaraj0702"},"content":"            requireNonNull(comparator);","lastModifiedDate":"2022-11-03"},{"lineNumber":236,"author":{"gitId":"Yuvaraj0702"},"content":"            model.updateFilteredStudentList(predicate);","lastModifiedDate":"2022-11-03"},{"lineNumber":237,"author":{"gitId":"Yuvaraj0702"},"content":"            students \u003d model.getStudentList();","lastModifiedDate":"2022-11-03"},{"lineNumber":238,"author":{"gitId":"Yuvaraj0702"},"content":"        }","lastModifiedDate":"2022-11-03"},{"lineNumber":239,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":240,"author":{"gitId":"Yuvaraj0702"},"content":"        @Override","lastModifiedDate":"2022-11-03"},{"lineNumber":241,"author":{"gitId":"Yuvaraj0702"},"content":"        public ReadOnlyFriday getFriday() {","lastModifiedDate":"2022-11-03"},{"lineNumber":242,"author":{"gitId":"Yuvaraj0702"},"content":"            return new Friday();","lastModifiedDate":"2022-11-03"},{"lineNumber":243,"author":{"gitId":"Yuvaraj0702"},"content":"        }","lastModifiedDate":"2022-11-03"},{"lineNumber":244,"author":{"gitId":"Yuvaraj0702"},"content":"    }","lastModifiedDate":"2022-11-03"},{"lineNumber":245,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"jorrdansoh":12,"Yuvaraj0702":166,"kaij77":1,"-":58,"HowSuen":8}},{"path":"src/test/java/friday/logic/commands/GradeCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.logic.commands;","lastModifiedDate":"2022-10-21"},{"lineNumber":2,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":3,"author":{"gitId":"HowSuen"},"content":"import static friday.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-21"},{"lineNumber":4,"author":{"gitId":"HowSuen"},"content":"import static friday.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"HowSuen"},"content":"import static friday.logic.commands.CommandTestUtil.showStudentAtIndex;","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"HowSuen"},"content":"import static friday.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"HowSuen"},"content":"import static friday.testutil.TypicalIndexes.INDEX_SECOND_STUDENT;","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"Yuvaraj0702"},"content":"import static friday.testutil.TypicalStudents.getTypicalFriday;","lastModifiedDate":"2022-10-25"},{"lineNumber":9,"author":{"gitId":"HowSuen"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"HowSuen"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"HowSuen"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"HowSuen"},"content":"import friday.commons.core.Messages;","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"HowSuen"},"content":"import friday.commons.core.index.Index;","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"HowSuen"},"content":"import friday.logic.commands.GradeCommand.EditGradeDescriptor;","lastModifiedDate":"2022-10-21"},{"lineNumber":17,"author":{"gitId":"HowSuen"},"content":"import friday.model.Model;","lastModifiedDate":"2022-10-21"},{"lineNumber":18,"author":{"gitId":"HowSuen"},"content":"import friday.model.ModelManager;","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"HowSuen"},"content":"import friday.model.UserPrefs;","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"HowSuen"},"content":"import friday.model.student.Student;","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"HowSuen"},"content":"import friday.testutil.EditGradeDescriptorBuilder;","lastModifiedDate":"2022-10-21"},{"lineNumber":22,"author":{"gitId":"HowSuen"},"content":"import friday.testutil.StudentBuilder;","lastModifiedDate":"2022-10-21"},{"lineNumber":23,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"HowSuen"},"content":"/**","lastModifiedDate":"2022-10-21"},{"lineNumber":25,"author":{"gitId":"HowSuen"},"content":" * Contains integration tests (interaction with the Model) and unit tests for GradeCommand.","lastModifiedDate":"2022-10-21"},{"lineNumber":26,"author":{"gitId":"HowSuen"},"content":" */","lastModifiedDate":"2022-10-21"},{"lineNumber":27,"author":{"gitId":"HowSuen"},"content":"public class GradeCommandTest {","lastModifiedDate":"2022-10-21"},{"lineNumber":28,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":29,"author":{"gitId":"HowSuen"},"content":"    private static final String GRADE_STUB \u003d \"99.99\";","lastModifiedDate":"2022-10-21"},{"lineNumber":30,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":31,"author":{"gitId":"Yuvaraj0702"},"content":"    private Model model \u003d new ModelManager(getTypicalFriday(), new UserPrefs());","lastModifiedDate":"2022-10-25"},{"lineNumber":32,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":33,"author":{"gitId":"HowSuen"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":34,"author":{"gitId":"HowSuen"},"content":"    public void execute_allGradesSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-10-21"},{"lineNumber":35,"author":{"gitId":"HowSuen"},"content":"        Student editedStudent \u003d model.getStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2022-10-21"},{"lineNumber":36,"author":{"gitId":"HowSuen"},"content":"        EditGradeDescriptor descriptor \u003d new EditGradeDescriptorBuilder(editedStudent.getGradesList()).build();","lastModifiedDate":"2022-10-21"},{"lineNumber":37,"author":{"gitId":"HowSuen"},"content":"        GradeCommand gradeCommand \u003d new GradeCommand(INDEX_FIRST_STUDENT, descriptor);","lastModifiedDate":"2022-10-21"},{"lineNumber":38,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":39,"author":{"gitId":"HowSuen"},"content":"        String expectedMessage \u003d String.format(GradeCommand.MESSAGE_EDIT_GRADE_SUCCESS, editedStudent);","lastModifiedDate":"2022-10-21"},{"lineNumber":40,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":41,"author":{"gitId":"HowSuen"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getFriday(), new UserPrefs());","lastModifiedDate":"2022-10-21"},{"lineNumber":42,"author":{"gitId":"HowSuen"},"content":"        expectedModel.setStudent(model.getStudentList().get(0), editedStudent);","lastModifiedDate":"2022-10-21"},{"lineNumber":43,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":44,"author":{"gitId":"HowSuen"},"content":"        assertCommandSuccess(gradeCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-21"},{"lineNumber":45,"author":{"gitId":"HowSuen"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":46,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":47,"author":{"gitId":"HowSuen"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":48,"author":{"gitId":"HowSuen"},"content":"    public void execute_someGradesSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-10-21"},{"lineNumber":49,"author":{"gitId":"HowSuen"},"content":"        Student firstStudent \u003d model.getStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2022-10-21"},{"lineNumber":50,"author":{"gitId":"jorrdansoh"},"content":"        Student editedStudent \u003d new StudentBuilder(firstStudent).withGradesList(\"Midterm\", GRADE_STUB)","lastModifiedDate":"2022-10-24"},{"lineNumber":51,"author":{"gitId":"HowSuen"},"content":"                .build();","lastModifiedDate":"2022-10-21"},{"lineNumber":52,"author":{"gitId":"HowSuen"},"content":"        EditGradeDescriptor descriptor \u003d new EditGradeDescriptorBuilder()","lastModifiedDate":"2022-10-21"},{"lineNumber":53,"author":{"gitId":"jorrdansoh"},"content":"                .withGrade(\"Midterm\", GRADE_STUB).build();","lastModifiedDate":"2022-10-24"},{"lineNumber":54,"author":{"gitId":"HowSuen"},"content":"        GradeCommand gradeCommand \u003d new GradeCommand(INDEX_FIRST_STUDENT, descriptor);","lastModifiedDate":"2022-10-21"},{"lineNumber":55,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":56,"author":{"gitId":"HowSuen"},"content":"        String expectedMessage \u003d String.format(GradeCommand.MESSAGE_EDIT_GRADE_SUCCESS, editedStudent);","lastModifiedDate":"2022-10-21"},{"lineNumber":57,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":58,"author":{"gitId":"HowSuen"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getFriday(), new UserPrefs());","lastModifiedDate":"2022-10-21"},{"lineNumber":59,"author":{"gitId":"HowSuen"},"content":"        expectedModel.setStudent(firstStudent, editedStudent);","lastModifiedDate":"2022-10-21"},{"lineNumber":60,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":61,"author":{"gitId":"HowSuen"},"content":"        assertCommandSuccess(gradeCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-21"},{"lineNumber":62,"author":{"gitId":"HowSuen"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":63,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":64,"author":{"gitId":"HowSuen"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":65,"author":{"gitId":"HowSuen"},"content":"    public void execute_invalidStudentIndexUnfilteredList_failure() {","lastModifiedDate":"2022-10-21"},{"lineNumber":66,"author":{"gitId":"HowSuen"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getStudentList().size() + 1);","lastModifiedDate":"2022-10-21"},{"lineNumber":67,"author":{"gitId":"HowSuen"},"content":"        EditGradeDescriptor descriptor \u003d new EditGradeDescriptorBuilder().build();","lastModifiedDate":"2022-10-21"},{"lineNumber":68,"author":{"gitId":"HowSuen"},"content":"        GradeCommand gradeCommand \u003d new GradeCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2022-10-21"},{"lineNumber":69,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":70,"author":{"gitId":"HowSuen"},"content":"        assertCommandFailure(gradeCommand, model, Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-21"},{"lineNumber":71,"author":{"gitId":"HowSuen"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":72,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":73,"author":{"gitId":"HowSuen"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":74,"author":{"gitId":"HowSuen"},"content":"    public void execute_invalidStudentIndexFilteredList_failure() {","lastModifiedDate":"2022-10-21"},{"lineNumber":75,"author":{"gitId":"HowSuen"},"content":"        showStudentAtIndex(model, INDEX_FIRST_STUDENT);","lastModifiedDate":"2022-10-21"},{"lineNumber":76,"author":{"gitId":"HowSuen"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_STUDENT;","lastModifiedDate":"2022-10-21"},{"lineNumber":77,"author":{"gitId":"jorrdansoh"},"content":"        // ensures that outOfBoundIndex is still in bounds of friday list","lastModifiedDate":"2022-11-05"},{"lineNumber":78,"author":{"gitId":"HowSuen"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getFriday().getStudentList().size());","lastModifiedDate":"2022-10-21"},{"lineNumber":79,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":80,"author":{"gitId":"HowSuen"},"content":"        EditGradeDescriptor descriptor \u003d new EditGradeDescriptorBuilder().build();","lastModifiedDate":"2022-10-21"},{"lineNumber":81,"author":{"gitId":"HowSuen"},"content":"        GradeCommand gradeCommand \u003d new GradeCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2022-10-21"},{"lineNumber":82,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":83,"author":{"gitId":"HowSuen"},"content":"        assertCommandFailure(gradeCommand, model, Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-21"},{"lineNumber":84,"author":{"gitId":"HowSuen"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":85,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":86,"author":{"gitId":"HowSuen"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":87,"author":{"gitId":"HowSuen"},"content":"    public void equals() {","lastModifiedDate":"2022-10-21"},{"lineNumber":88,"author":{"gitId":"HowSuen"},"content":"        EditGradeDescriptor emptyDescriptor \u003d new EditGradeDescriptor();","lastModifiedDate":"2022-11-05"},{"lineNumber":89,"author":{"gitId":"HowSuen"},"content":"        EditGradeDescriptor descriptor \u003d new EditGradeDescriptorBuilder(emptyDescriptor)","lastModifiedDate":"2022-11-05"},{"lineNumber":90,"author":{"gitId":"HowSuen"},"content":"                .withGrade(\"RA1\", GRADE_STUB).build();","lastModifiedDate":"2022-11-05"},{"lineNumber":91,"author":{"gitId":"HowSuen"},"content":"        final GradeCommand standardCommand \u003d new GradeCommand(INDEX_FIRST_STUDENT, descriptor);","lastModifiedDate":"2022-10-21"},{"lineNumber":92,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":93,"author":{"gitId":"HowSuen"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-21"},{"lineNumber":94,"author":{"gitId":"HowSuen"},"content":"        GradeCommand commandWithSameValues \u003d new GradeCommand(INDEX_FIRST_STUDENT, descriptor);","lastModifiedDate":"2022-10-21"},{"lineNumber":95,"author":{"gitId":"HowSuen"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2022-10-21"},{"lineNumber":96,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":97,"author":{"gitId":"HowSuen"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-21"},{"lineNumber":98,"author":{"gitId":"HowSuen"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2022-10-21"},{"lineNumber":99,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":100,"author":{"gitId":"HowSuen"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-21"},{"lineNumber":101,"author":{"gitId":"HowSuen"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2022-10-21"},{"lineNumber":102,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":103,"author":{"gitId":"HowSuen"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-21"},{"lineNumber":104,"author":{"gitId":"HowSuen"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2022-10-21"},{"lineNumber":105,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":106,"author":{"gitId":"HowSuen"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2022-10-21"},{"lineNumber":107,"author":{"gitId":"HowSuen"},"content":"        assertFalse(standardCommand.equals(new GradeCommand(INDEX_SECOND_STUDENT, descriptor)));","lastModifiedDate":"2022-10-21"},{"lineNumber":108,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":109,"author":{"gitId":"HowSuen"},"content":"        // different remark -\u003e returns false","lastModifiedDate":"2022-10-21"},{"lineNumber":110,"author":{"gitId":"HowSuen"},"content":"        EditGradeDescriptor otherDescriptor \u003d new EditGradeDescriptorBuilder().withGrade(\"RA2\", GRADE_STUB)","lastModifiedDate":"2022-10-21"},{"lineNumber":111,"author":{"gitId":"HowSuen"},"content":"                .build();","lastModifiedDate":"2022-10-21"},{"lineNumber":112,"author":{"gitId":"HowSuen"},"content":"        assertFalse(standardCommand.equals(new GradeCommand(INDEX_FIRST_STUDENT, otherDescriptor)));","lastModifiedDate":"2022-10-21"},{"lineNumber":113,"author":{"gitId":"HowSuen"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":114,"author":{"gitId":"HowSuen"},"content":"}","lastModifiedDate":"2022-10-21"}],"authorContributionMap":{"jorrdansoh":3,"Yuvaraj0702":2,"HowSuen":109}},{"path":"src/test/java/friday/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.logic.commands;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"HowSuen"},"content":"import static friday.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"HowSuen"},"content":"import static friday.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"HowSuen"},"content":"import friday.model.Model;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"HowSuen"},"content":"import friday.model.ModelManager;","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"-":15,"HowSuen":5}},{"path":"src/test/java/friday/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.logic.commands;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"HowSuen"},"content":"import static friday.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"jorrdansoh"},"content":"import static friday.logic.commands.CommandTestUtil.showStudentAtIndex;","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"jorrdansoh"},"content":"import static friday.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"Yuvaraj0702"},"content":"import static friday.testutil.TypicalStudents.getTypicalFriday;","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"HowSuen"},"content":"import friday.model.Model;","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"HowSuen"},"content":"import friday.model.ModelManager;","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"HowSuen"},"content":"import friday.model.UserPrefs;","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"Yuvaraj0702"},"content":"        model \u003d new ModelManager(getTypicalFriday(), new UserPrefs());","lastModifiedDate":"2022-10-25"},{"lineNumber":26,"author":{"gitId":"darrtzj"},"content":"        expectedModel \u003d new ModelManager(model.getFriday(), new UserPrefs());","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"jorrdansoh"},"content":"        showStudentAtIndex(model, INDEX_FIRST_STUDENT);","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"jorrdansoh":3,"Yuvaraj0702":2,"darrtzj":1,"-":28,"HowSuen":5}},{"path":"src/test/java/friday/logic/commands/MarkMasteryCheckCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kaij77"},"content":"package friday.logic.commands;","lastModifiedDate":"2022-11-06"},{"lineNumber":2,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":3,"author":{"gitId":"kaij77"},"content":"import static friday.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-11-06"},{"lineNumber":4,"author":{"gitId":"kaij77"},"content":"import static friday.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-11-06"},{"lineNumber":5,"author":{"gitId":"kaij77"},"content":"import static friday.testutil.TypicalIndexes.INDEX_FIFTH_STUDENT;","lastModifiedDate":"2022-11-06"},{"lineNumber":6,"author":{"gitId":"kaij77"},"content":"import static friday.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2022-11-06"},{"lineNumber":7,"author":{"gitId":"kaij77"},"content":"import static friday.testutil.TypicalIndexes.INDEX_SEVENTH_STUDENT;","lastModifiedDate":"2022-11-06"},{"lineNumber":8,"author":{"gitId":"kaij77"},"content":"import static friday.testutil.TypicalIndexes.INDEX_THIRD_STUDENT;","lastModifiedDate":"2022-11-06"},{"lineNumber":9,"author":{"gitId":"kaij77"},"content":"import static friday.testutil.TypicalStudents.getTypicalFriday;","lastModifiedDate":"2022-11-06"},{"lineNumber":10,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":11,"author":{"gitId":"kaij77"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-11-06"},{"lineNumber":12,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":13,"author":{"gitId":"kaij77"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-11-06"},{"lineNumber":14,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":15,"author":{"gitId":"kaij77"},"content":"import friday.model.Model;","lastModifiedDate":"2022-11-06"},{"lineNumber":16,"author":{"gitId":"kaij77"},"content":"import friday.model.ModelManager;","lastModifiedDate":"2022-11-06"},{"lineNumber":17,"author":{"gitId":"kaij77"},"content":"import friday.model.UserPrefs;","lastModifiedDate":"2022-11-06"},{"lineNumber":18,"author":{"gitId":"kaij77"},"content":"import friday.model.student.Student;","lastModifiedDate":"2022-11-06"},{"lineNumber":19,"author":{"gitId":"kaij77"},"content":"import friday.testutil.StudentBuilder;","lastModifiedDate":"2022-11-06"},{"lineNumber":20,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":21,"author":{"gitId":"kaij77"},"content":"public class MarkMasteryCheckCommandTest {","lastModifiedDate":"2022-11-06"},{"lineNumber":22,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":23,"author":{"gitId":"kaij77"},"content":"    /**","lastModifiedDate":"2022-11-06"},{"lineNumber":24,"author":{"gitId":"kaij77"},"content":"     * Students 1 to 3 in this list do not have their Mastery Check already marked as passed, while the Students 4 to 6","lastModifiedDate":"2022-11-06"},{"lineNumber":25,"author":{"gitId":"kaij77"},"content":"     * do, and Student 7 has an empty Mastery Check.","lastModifiedDate":"2022-11-06"},{"lineNumber":26,"author":{"gitId":"kaij77"},"content":"     */","lastModifiedDate":"2022-11-06"},{"lineNumber":27,"author":{"gitId":"kaij77"},"content":"    private Model model \u003d new ModelManager(getTypicalFriday(), new UserPrefs());","lastModifiedDate":"2022-11-06"},{"lineNumber":28,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":29,"author":{"gitId":"kaij77"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":30,"author":{"gitId":"kaij77"},"content":"    public void execute_studentAlreadyMarked_throwsCommandException() {","lastModifiedDate":"2022-11-06"},{"lineNumber":31,"author":{"gitId":"kaij77"},"content":"        Student fifthStudent \u003d model.getStudentList().get(INDEX_FIFTH_STUDENT.getZeroBased());","lastModifiedDate":"2022-11-06"},{"lineNumber":32,"author":{"gitId":"kaij77"},"content":"        MarkMasteryCheckCommand markCommand \u003d new MarkMasteryCheckCommand(INDEX_FIFTH_STUDENT);","lastModifiedDate":"2022-11-06"},{"lineNumber":33,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":34,"author":{"gitId":"kaij77"},"content":"        String expectedMessage \u003d fifthStudent.getName() + MarkMasteryCheckCommand.MESSAGE_ALREADY_MARKED;","lastModifiedDate":"2022-11-06"},{"lineNumber":35,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":36,"author":{"gitId":"kaij77"},"content":"        assertCommandFailure(markCommand, model, expectedMessage);","lastModifiedDate":"2022-11-06"},{"lineNumber":37,"author":{"gitId":"kaij77"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":38,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":39,"author":{"gitId":"kaij77"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":40,"author":{"gitId":"kaij77"},"content":"    public void execute_emptyMasteryCheck_throwsCommandException() {","lastModifiedDate":"2022-11-06"},{"lineNumber":41,"author":{"gitId":"kaij77"},"content":"        Student seventhStudent \u003d model.getStudentList().get(INDEX_SEVENTH_STUDENT.getZeroBased());","lastModifiedDate":"2022-11-06"},{"lineNumber":42,"author":{"gitId":"kaij77"},"content":"        MarkMasteryCheckCommand markCommand \u003d new MarkMasteryCheckCommand(INDEX_SEVENTH_STUDENT);","lastModifiedDate":"2022-11-06"},{"lineNumber":43,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":44,"author":{"gitId":"kaij77"},"content":"        String expectedMessage \u003d seventhStudent.getName() + MarkMasteryCheckCommand.MESSAGE_EMPTY_MASTERYCHECK;","lastModifiedDate":"2022-11-06"},{"lineNumber":45,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":46,"author":{"gitId":"kaij77"},"content":"        assertCommandFailure(markCommand, model, expectedMessage);","lastModifiedDate":"2022-11-06"},{"lineNumber":47,"author":{"gitId":"kaij77"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":48,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":49,"author":{"gitId":"kaij77"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":50,"author":{"gitId":"kaij77"},"content":"    public void execute_dateNotReached_throwsCommandException() {","lastModifiedDate":"2022-11-06"},{"lineNumber":51,"author":{"gitId":"kaij77"},"content":"        Student thirdStudent \u003d model.getStudentList().get(INDEX_THIRD_STUDENT.getZeroBased());","lastModifiedDate":"2022-11-06"},{"lineNumber":52,"author":{"gitId":"kaij77"},"content":"        MarkMasteryCheckCommand markCommand \u003d new MarkMasteryCheckCommand(INDEX_THIRD_STUDENT);","lastModifiedDate":"2022-11-06"},{"lineNumber":53,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":54,"author":{"gitId":"kaij77"},"content":"        String expectedMessage \u003d thirdStudent.getName() + String.format(MarkMasteryCheckCommand.MESSAGE_CANNOT_PASS,","lastModifiedDate":"2022-11-06"},{"lineNumber":55,"author":{"gitId":"kaij77"},"content":"                thirdStudent.getMasteryCheck().getValue(), LocalDate.now());","lastModifiedDate":"2022-11-06"},{"lineNumber":56,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":57,"author":{"gitId":"kaij77"},"content":"        assertCommandFailure(markCommand, model, expectedMessage);","lastModifiedDate":"2022-11-06"},{"lineNumber":58,"author":{"gitId":"kaij77"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":59,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":60,"author":{"gitId":"kaij77"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":61,"author":{"gitId":"kaij77"},"content":"    public void execute_studentNotMarked_success() {","lastModifiedDate":"2022-11-06"},{"lineNumber":62,"author":{"gitId":"kaij77"},"content":"        Student firstStudent \u003d model.getStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2022-11-06"},{"lineNumber":63,"author":{"gitId":"kaij77"},"content":"        Student editedStudent \u003d new StudentBuilder(firstStudent)","lastModifiedDate":"2022-11-06"},{"lineNumber":64,"author":{"gitId":"kaij77"},"content":"                .withMasteryCheck(LocalDate.of(2022, 2, 17), true).build();","lastModifiedDate":"2022-11-06"},{"lineNumber":65,"author":{"gitId":"kaij77"},"content":"        MarkMasteryCheckCommand markCommand \u003d new MarkMasteryCheckCommand(INDEX_FIRST_STUDENT);","lastModifiedDate":"2022-11-06"},{"lineNumber":66,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":67,"author":{"gitId":"kaij77"},"content":"        String expectedMessage \u003d String.format(MarkMasteryCheckCommand.MESSAGE_SUCCESS, editedStudent.getName());","lastModifiedDate":"2022-11-06"},{"lineNumber":68,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":69,"author":{"gitId":"kaij77"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getFriday(), new UserPrefs());","lastModifiedDate":"2022-11-06"},{"lineNumber":70,"author":{"gitId":"kaij77"},"content":"        expectedModel.setStudent(model.getStudentList().get(0), editedStudent);","lastModifiedDate":"2022-11-06"},{"lineNumber":71,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":72,"author":{"gitId":"kaij77"},"content":"        assertCommandSuccess(markCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-11-06"},{"lineNumber":73,"author":{"gitId":"kaij77"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":74,"author":{"gitId":"kaij77"},"content":"}","lastModifiedDate":"2022-11-06"}],"authorContributionMap":{"kaij77":74}},{"path":"src/test/java/friday/logic/commands/RemarkCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.logic.commands;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":3,"author":{"gitId":"HowSuen"},"content":"import static friday.logic.commands.CommandTestUtil.VALID_REMARK_AMY;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"HowSuen"},"content":"import static friday.logic.commands.CommandTestUtil.VALID_REMARK_BOB;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"HowSuen"},"content":"import static friday.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"HowSuen"},"content":"import static friday.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"jorrdansoh"},"content":"import static friday.logic.commands.CommandTestUtil.showStudentAtIndex;","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"jorrdansoh"},"content":"import static friday.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"jorrdansoh"},"content":"import static friday.testutil.TypicalIndexes.INDEX_SECOND_STUDENT;","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"Yuvaraj0702"},"content":"import static friday.testutil.TypicalStudents.getTypicalFriday;","lastModifiedDate":"2022-10-25"},{"lineNumber":11,"author":{"gitId":"HowSuen"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"HowSuen"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-09-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":16,"author":{"gitId":"HowSuen"},"content":"import friday.commons.core.Messages;","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"HowSuen"},"content":"import friday.commons.core.index.Index;","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"darrtzj"},"content":"import friday.model.Friday;","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"HowSuen"},"content":"import friday.model.Model;","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"HowSuen"},"content":"import friday.model.ModelManager;","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"HowSuen"},"content":"import friday.model.UserPrefs;","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"kaij77"},"content":"import friday.model.student.Remark;","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"kaij77"},"content":"import friday.model.student.Student;","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"jorrdansoh"},"content":"import friday.testutil.StudentBuilder;","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"// @@author HowSuen-reused","lastModifiedDate":"2022-11-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"// Reused from https://nus-cs2103-ay2223s1.github.io/tp/tutorials/AddRemark.html","lastModifiedDate":"2022-11-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"// with minor modifications","lastModifiedDate":"2022-11-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-09-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for RemarkCommand.","lastModifiedDate":"2022-09-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-09-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommandTest {","lastModifiedDate":"2022-09-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String REMARK_STUB \u003d \"Some remark\";","lastModifiedDate":"2022-09-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalFriday(), new UserPrefs());","lastModifiedDate":"2022-10-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-09-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void execute_addRemarkUnfilteredList_success() {","lastModifiedDate":"2022-09-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Student firstStudent \u003d model.getStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Student editedStudent \u003d new StudentBuilder(firstStudent).withRemark(REMARK_STUB).build();","lastModifiedDate":"2022-10-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        RemarkCommand remarkCommand \u003d new RemarkCommand(INDEX_FIRST_STUDENT,","lastModifiedDate":"2022-10-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                new Remark(editedStudent.getRemark().value));","lastModifiedDate":"2022-10-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(RemarkCommand.MESSAGE_ADD_REMARK_SUCCESS, editedStudent);","lastModifiedDate":"2022-10-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new Friday(model.getFriday()), new UserPrefs());","lastModifiedDate":"2022-10-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        expectedModel.setStudent(firstStudent, editedStudent);","lastModifiedDate":"2022-10-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertCommandSuccess(remarkCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-09-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-09-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void execute_deleteRemarkUnfilteredList_success() {","lastModifiedDate":"2022-09-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Student firstStudent \u003d model.getStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2022-10-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Student editedStudent \u003d new StudentBuilder(firstStudent).withRemark(\"\").build();","lastModifiedDate":"2022-10-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        RemarkCommand remarkCommand \u003d new RemarkCommand(INDEX_FIRST_STUDENT,","lastModifiedDate":"2022-10-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                new Remark(editedStudent.getRemark().toString()));","lastModifiedDate":"2022-10-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(RemarkCommand.MESSAGE_DELETE_REMARK_SUCCESS, editedStudent);","lastModifiedDate":"2022-10-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new Friday(model.getFriday()), new UserPrefs());","lastModifiedDate":"2022-10-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        expectedModel.setStudent(firstStudent, editedStudent);","lastModifiedDate":"2022-10-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertCommandSuccess(remarkCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-09-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-09-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2022-09-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        showStudentAtIndex(model, INDEX_FIRST_STUDENT);","lastModifiedDate":"2022-10-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        Student firstStudent \u003d model.getStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2022-10-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Student editedStudent \u003d new StudentBuilder(model.getStudentList()","lastModifiedDate":"2022-10-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .get(INDEX_FIRST_STUDENT.getZeroBased()))","lastModifiedDate":"2022-10-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .withRemark(REMARK_STUB).build();","lastModifiedDate":"2022-09-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        RemarkCommand remarkCommand \u003d new RemarkCommand(INDEX_FIRST_STUDENT,","lastModifiedDate":"2022-10-20"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                new Remark(editedStudent.getRemark().value));","lastModifiedDate":"2022-10-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(RemarkCommand.MESSAGE_ADD_REMARK_SUCCESS, editedStudent);","lastModifiedDate":"2022-10-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertCommandSuccess(remarkCommand, model, expectedMessage, model);","lastModifiedDate":"2022-10-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-09-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void execute_invalidStudentIndexUnfilteredList_failure() {","lastModifiedDate":"2022-10-20"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getStudentList().size() + 1);","lastModifiedDate":"2022-10-20"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        RemarkCommand remarkCommand \u003d new RemarkCommand(outOfBoundIndex, new Remark(VALID_REMARK_BOB));","lastModifiedDate":"2022-09-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertCommandFailure(remarkCommand, model, Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2022-09-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * but smaller than size of Friday.","lastModifiedDate":"2022-11-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-09-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void execute_invalidStudentIndexFilteredList_failure() {","lastModifiedDate":"2022-10-20"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        showStudentAtIndex(model, INDEX_FIRST_STUDENT);","lastModifiedDate":"2022-10-20"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_STUDENT;","lastModifiedDate":"2022-10-20"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of friday list","lastModifiedDate":"2022-11-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getFriday().getStudentList().size());","lastModifiedDate":"2022-10-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        RemarkCommand remarkCommand \u003d new RemarkCommand(outOfBoundIndex, new Remark(VALID_REMARK_BOB));","lastModifiedDate":"2022-09-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertCommandFailure(remarkCommand, model, Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-20"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-09-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2022-09-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        final RemarkCommand standardCommand \u003d new RemarkCommand(INDEX_FIRST_STUDENT,","lastModifiedDate":"2022-10-20"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                new Remark(VALID_REMARK_AMY));","lastModifiedDate":"2022-09-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-09-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        RemarkCommand commandWithSameValues \u003d new RemarkCommand(INDEX_FIRST_STUDENT,","lastModifiedDate":"2022-10-20"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                new Remark(VALID_REMARK_AMY));","lastModifiedDate":"2022-09-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2022-09-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-09-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2022-09-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-09-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2022-09-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-09-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2022-09-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2022-09-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new RemarkCommand(INDEX_SECOND_STUDENT,","lastModifiedDate":"2022-10-20"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                new Remark(VALID_REMARK_AMY))));","lastModifiedDate":"2022-09-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        // different remark -\u003e returns false","lastModifiedDate":"2022-09-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new RemarkCommand(INDEX_FIRST_STUDENT,","lastModifiedDate":"2022-10-20"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                new Remark(VALID_REMARK_BOB))));","lastModifiedDate":"2022-09-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-09-13"}],"authorContributionMap":{"jorrdansoh":4,"Yuvaraj0702":1,"darrtzj":1,"kaij77":2,"-":119,"HowSuen":12}},{"path":"src/test/java/friday/logic/commands/SortCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jorrdansoh"},"content":"package friday.logic.commands;","lastModifiedDate":"2022-10-21"},{"lineNumber":2,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":3,"author":{"gitId":"jorrdansoh"},"content":"import static friday.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-21"},{"lineNumber":4,"author":{"gitId":"jorrdansoh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"jorrdansoh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"jorrdansoh"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"jorrdansoh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"jorrdansoh"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"jorrdansoh"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"jorrdansoh"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"jorrdansoh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"jorrdansoh"},"content":"import friday.commons.core.GuiSettings;","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"jorrdansoh"},"content":"import friday.model.Friday;","lastModifiedDate":"2022-10-21"},{"lineNumber":17,"author":{"gitId":"jorrdansoh"},"content":"import friday.model.Model;","lastModifiedDate":"2022-10-21"},{"lineNumber":18,"author":{"gitId":"jorrdansoh"},"content":"import friday.model.ReadOnlyFriday;","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"jorrdansoh"},"content":"import friday.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"darrtzj"},"content":"import friday.model.alias.Alias;","lastModifiedDate":"2022-10-23"},{"lineNumber":21,"author":{"gitId":"darrtzj"},"content":"import friday.model.alias.ReservedKeyword;","lastModifiedDate":"2022-10-23"},{"lineNumber":22,"author":{"gitId":"jorrdansoh"},"content":"import friday.model.student.Student;","lastModifiedDate":"2022-10-21"},{"lineNumber":23,"author":{"gitId":"jorrdansoh"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"jorrdansoh"},"content":"import javafx.collections.transformation.SortedList;","lastModifiedDate":"2022-10-21"},{"lineNumber":25,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":26,"author":{"gitId":"jorrdansoh"},"content":"public class SortCommandTest {","lastModifiedDate":"2022-10-21"},{"lineNumber":27,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":28,"author":{"gitId":"jorrdansoh"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":29,"author":{"gitId":"jorrdansoh"},"content":"    public void constructor_nullComparator_throwsNullPointerException() {","lastModifiedDate":"2022-10-21"},{"lineNumber":30,"author":{"gitId":"jorrdansoh"},"content":"        assertThrows(NullPointerException.class, () -\u003e new SortCommand(null));","lastModifiedDate":"2022-10-21"},{"lineNumber":31,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":32,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":33,"author":{"gitId":"jorrdansoh"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":34,"author":{"gitId":"jorrdansoh"},"content":"    public void execute_studentsSortedByModel_sortSuccessful() throws Exception {","lastModifiedDate":"2022-10-21"},{"lineNumber":35,"author":{"gitId":"jorrdansoh"},"content":"        ModelStubAcceptingSorting modelStub \u003d new ModelStubAcceptingSorting();","lastModifiedDate":"2022-10-21"},{"lineNumber":36,"author":{"gitId":"jorrdansoh"},"content":"        Comparator\u003cStudent\u003e comparator \u003d (x, y) -\u003e x.getName().compareTo(y.getName());","lastModifiedDate":"2022-10-21"},{"lineNumber":37,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":38,"author":{"gitId":"jorrdansoh"},"content":"        CommandResult commandResult \u003d new SortCommand(comparator).execute(modelStub);","lastModifiedDate":"2022-10-21"},{"lineNumber":39,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":40,"author":{"gitId":"jorrdansoh"},"content":"        assertEquals(SortCommand.MESSAGE_SUCCESS, commandResult.getFeedbackToUser());","lastModifiedDate":"2022-10-21"},{"lineNumber":41,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":42,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":43,"author":{"gitId":"jorrdansoh"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":44,"author":{"gitId":"jorrdansoh"},"content":"    public void equals() {","lastModifiedDate":"2022-10-21"},{"lineNumber":45,"author":{"gitId":"jorrdansoh"},"content":"        Comparator\u003cStudent\u003e comparatorOne \u003d (x, y) -\u003e x.getName().compareTo(y.getName());","lastModifiedDate":"2022-10-21"},{"lineNumber":46,"author":{"gitId":"jorrdansoh"},"content":"        Comparator\u003cStudent\u003e comparatorTwo \u003d (x, y) -\u003e x.getConsultation().compareTo(y.getConsultation());","lastModifiedDate":"2022-10-21"},{"lineNumber":47,"author":{"gitId":"jorrdansoh"},"content":"        SortCommand sortCommandOne \u003d new SortCommand(comparatorOne);","lastModifiedDate":"2022-10-21"},{"lineNumber":48,"author":{"gitId":"jorrdansoh"},"content":"        SortCommand sortCommandTwo \u003d new SortCommand(comparatorTwo);","lastModifiedDate":"2022-10-21"},{"lineNumber":49,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":50,"author":{"gitId":"jorrdansoh"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-21"},{"lineNumber":51,"author":{"gitId":"jorrdansoh"},"content":"        assertTrue(sortCommandOne.equals(sortCommandOne));","lastModifiedDate":"2022-10-21"},{"lineNumber":52,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":53,"author":{"gitId":"jorrdansoh"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-21"},{"lineNumber":54,"author":{"gitId":"jorrdansoh"},"content":"        SortCommand sortCommandOneCopy \u003d new SortCommand(comparatorOne);","lastModifiedDate":"2022-10-21"},{"lineNumber":55,"author":{"gitId":"jorrdansoh"},"content":"        assertTrue(sortCommandOne.equals(sortCommandOneCopy));","lastModifiedDate":"2022-10-21"},{"lineNumber":56,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":57,"author":{"gitId":"jorrdansoh"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-21"},{"lineNumber":58,"author":{"gitId":"jorrdansoh"},"content":"        assertFalse(sortCommandOne.equals(1));","lastModifiedDate":"2022-10-21"},{"lineNumber":59,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":60,"author":{"gitId":"jorrdansoh"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-21"},{"lineNumber":61,"author":{"gitId":"jorrdansoh"},"content":"        assertFalse(sortCommandOne.equals(null));","lastModifiedDate":"2022-10-21"},{"lineNumber":62,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":63,"author":{"gitId":"jorrdansoh"},"content":"        // different student -\u003e returns false","lastModifiedDate":"2022-10-21"},{"lineNumber":64,"author":{"gitId":"jorrdansoh"},"content":"        assertFalse(sortCommandOne.equals(sortCommandTwo));","lastModifiedDate":"2022-10-21"},{"lineNumber":65,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":66,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":67,"author":{"gitId":"jorrdansoh"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":68,"author":{"gitId":"jorrdansoh"},"content":"     * A default model stub that have all the methods failing.","lastModifiedDate":"2022-10-21"},{"lineNumber":69,"author":{"gitId":"jorrdansoh"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":70,"author":{"gitId":"jorrdansoh"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2022-10-21"},{"lineNumber":71,"author":{"gitId":"jorrdansoh"},"content":"        @Override","lastModifiedDate":"2022-10-21"},{"lineNumber":72,"author":{"gitId":"jorrdansoh"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2022-10-21"},{"lineNumber":73,"author":{"gitId":"jorrdansoh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-21"},{"lineNumber":74,"author":{"gitId":"jorrdansoh"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":75,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":76,"author":{"gitId":"jorrdansoh"},"content":"        @Override","lastModifiedDate":"2022-10-21"},{"lineNumber":77,"author":{"gitId":"jorrdansoh"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2022-10-21"},{"lineNumber":78,"author":{"gitId":"jorrdansoh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-21"},{"lineNumber":79,"author":{"gitId":"jorrdansoh"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":80,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":81,"author":{"gitId":"jorrdansoh"},"content":"        @Override","lastModifiedDate":"2022-10-21"},{"lineNumber":82,"author":{"gitId":"jorrdansoh"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2022-10-21"},{"lineNumber":83,"author":{"gitId":"jorrdansoh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-21"},{"lineNumber":84,"author":{"gitId":"jorrdansoh"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":85,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":86,"author":{"gitId":"jorrdansoh"},"content":"        @Override","lastModifiedDate":"2022-10-21"},{"lineNumber":87,"author":{"gitId":"jorrdansoh"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2022-10-21"},{"lineNumber":88,"author":{"gitId":"jorrdansoh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-21"},{"lineNumber":89,"author":{"gitId":"jorrdansoh"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":90,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":91,"author":{"gitId":"jorrdansoh"},"content":"        @Override","lastModifiedDate":"2022-10-21"},{"lineNumber":92,"author":{"gitId":"jorrdansoh"},"content":"        public Path getFridayFilePath() {","lastModifiedDate":"2022-10-21"},{"lineNumber":93,"author":{"gitId":"jorrdansoh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-21"},{"lineNumber":94,"author":{"gitId":"jorrdansoh"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":95,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":96,"author":{"gitId":"jorrdansoh"},"content":"        @Override","lastModifiedDate":"2022-10-21"},{"lineNumber":97,"author":{"gitId":"jorrdansoh"},"content":"        public void setFridayFilePath(Path fridayFilePath) {","lastModifiedDate":"2022-10-21"},{"lineNumber":98,"author":{"gitId":"jorrdansoh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-21"},{"lineNumber":99,"author":{"gitId":"jorrdansoh"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":100,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":101,"author":{"gitId":"jorrdansoh"},"content":"        @Override","lastModifiedDate":"2022-10-21"},{"lineNumber":102,"author":{"gitId":"jorrdansoh"},"content":"        public void addStudent(Student student) {","lastModifiedDate":"2022-10-21"},{"lineNumber":103,"author":{"gitId":"jorrdansoh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-21"},{"lineNumber":104,"author":{"gitId":"jorrdansoh"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":105,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":106,"author":{"gitId":"jorrdansoh"},"content":"        @Override","lastModifiedDate":"2022-10-21"},{"lineNumber":107,"author":{"gitId":"jorrdansoh"},"content":"        public void setFriday(ReadOnlyFriday newData) {","lastModifiedDate":"2022-10-21"},{"lineNumber":108,"author":{"gitId":"jorrdansoh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-21"},{"lineNumber":109,"author":{"gitId":"jorrdansoh"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":110,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":111,"author":{"gitId":"jorrdansoh"},"content":"        @Override","lastModifiedDate":"2022-10-21"},{"lineNumber":112,"author":{"gitId":"jorrdansoh"},"content":"        public ReadOnlyFriday getFriday() {","lastModifiedDate":"2022-10-21"},{"lineNumber":113,"author":{"gitId":"jorrdansoh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-21"},{"lineNumber":114,"author":{"gitId":"jorrdansoh"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":115,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":116,"author":{"gitId":"jorrdansoh"},"content":"        @Override","lastModifiedDate":"2022-10-21"},{"lineNumber":117,"author":{"gitId":"jorrdansoh"},"content":"        public boolean hasStudent(Student student) {","lastModifiedDate":"2022-10-21"},{"lineNumber":118,"author":{"gitId":"jorrdansoh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-21"},{"lineNumber":119,"author":{"gitId":"jorrdansoh"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":120,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":121,"author":{"gitId":"jorrdansoh"},"content":"        @Override","lastModifiedDate":"2022-10-21"},{"lineNumber":122,"author":{"gitId":"jorrdansoh"},"content":"        public void deleteStudent(Student target) {","lastModifiedDate":"2022-10-21"},{"lineNumber":123,"author":{"gitId":"jorrdansoh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-21"},{"lineNumber":124,"author":{"gitId":"jorrdansoh"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":125,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":126,"author":{"gitId":"jorrdansoh"},"content":"        @Override","lastModifiedDate":"2022-10-21"},{"lineNumber":127,"author":{"gitId":"jorrdansoh"},"content":"        public void setStudent(Student target, Student editedStudent) {","lastModifiedDate":"2022-10-21"},{"lineNumber":128,"author":{"gitId":"jorrdansoh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-21"},{"lineNumber":129,"author":{"gitId":"jorrdansoh"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":130,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":131,"author":{"gitId":"jorrdansoh"},"content":"        @Override","lastModifiedDate":"2022-10-21"},{"lineNumber":132,"author":{"gitId":"jorrdansoh"},"content":"        public ObservableList\u003cStudent\u003e getStudentList() {","lastModifiedDate":"2022-10-21"},{"lineNumber":133,"author":{"gitId":"jorrdansoh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-21"},{"lineNumber":134,"author":{"gitId":"jorrdansoh"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":135,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":136,"author":{"gitId":"jorrdansoh"},"content":"        @Override","lastModifiedDate":"2022-10-21"},{"lineNumber":137,"author":{"gitId":"jorrdansoh"},"content":"        public void updateFilteredStudentList(Predicate\u003cStudent\u003e predicate) {","lastModifiedDate":"2022-10-21"},{"lineNumber":138,"author":{"gitId":"jorrdansoh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-21"},{"lineNumber":139,"author":{"gitId":"jorrdansoh"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":140,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":141,"author":{"gitId":"jorrdansoh"},"content":"        @Override","lastModifiedDate":"2022-10-21"},{"lineNumber":142,"author":{"gitId":"jorrdansoh"},"content":"        public void updateSortedStudentList(Comparator\u003cStudent\u003e comparator) {","lastModifiedDate":"2022-10-21"},{"lineNumber":143,"author":{"gitId":"jorrdansoh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-21"},{"lineNumber":144,"author":{"gitId":"jorrdansoh"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":145,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":146,"author":{"gitId":"darrtzj"},"content":"        @Override","lastModifiedDate":"2022-10-23"},{"lineNumber":147,"author":{"gitId":"darrtzj"},"content":"        public boolean hasAlias(Alias alias) {","lastModifiedDate":"2022-10-23"},{"lineNumber":148,"author":{"gitId":"darrtzj"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-23"},{"lineNumber":149,"author":{"gitId":"darrtzj"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":150,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":151,"author":{"gitId":"darrtzj"},"content":"        @Override","lastModifiedDate":"2022-10-23"},{"lineNumber":152,"author":{"gitId":"darrtzj"},"content":"        public void addAlias(Alias alias, ReservedKeyword keyword) {","lastModifiedDate":"2022-10-23"},{"lineNumber":153,"author":{"gitId":"darrtzj"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-23"},{"lineNumber":154,"author":{"gitId":"darrtzj"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":155,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":156,"author":{"gitId":"darrtzj"},"content":"        @Override","lastModifiedDate":"2022-10-23"},{"lineNumber":157,"author":{"gitId":"darrtzj"},"content":"        public void removeAlias(Alias target) {","lastModifiedDate":"2022-10-23"},{"lineNumber":158,"author":{"gitId":"darrtzj"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-23"},{"lineNumber":159,"author":{"gitId":"darrtzj"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":160,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":161,"author":{"gitId":"darrtzj"},"content":"        @Override","lastModifiedDate":"2022-10-23"},{"lineNumber":162,"author":{"gitId":"darrtzj"},"content":"        public String getKeyword(String key) {","lastModifiedDate":"2022-10-23"},{"lineNumber":163,"author":{"gitId":"darrtzj"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-23"},{"lineNumber":164,"author":{"gitId":"darrtzj"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":165,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":166,"author":{"gitId":"darrtzj"},"content":"        @Override","lastModifiedDate":"2022-10-23"},{"lineNumber":167,"author":{"gitId":"darrtzj"},"content":"        public String displayAliases() {","lastModifiedDate":"2022-10-23"},{"lineNumber":168,"author":{"gitId":"darrtzj"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-23"},{"lineNumber":169,"author":{"gitId":"darrtzj"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":170,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":171,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":172,"author":{"gitId":"jorrdansoh"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":173,"author":{"gitId":"jorrdansoh"},"content":"     * A Model stub that always accepts sorting.","lastModifiedDate":"2022-10-21"},{"lineNumber":174,"author":{"gitId":"jorrdansoh"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":175,"author":{"gitId":"jorrdansoh"},"content":"    private class ModelStubAcceptingSorting extends ModelStub {","lastModifiedDate":"2022-10-21"},{"lineNumber":176,"author":{"gitId":"jorrdansoh"},"content":"        private ObservableList\u003cStudent\u003e students \u003d getFriday().getStudentList();","lastModifiedDate":"2022-10-21"},{"lineNumber":177,"author":{"gitId":"jorrdansoh"},"content":"        final SortedList\u003cStudent\u003e sortedStudents \u003d new SortedList\u003c\u003e(students);","lastModifiedDate":"2022-10-21"},{"lineNumber":178,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":179,"author":{"gitId":"jorrdansoh"},"content":"        @Override","lastModifiedDate":"2022-10-21"},{"lineNumber":180,"author":{"gitId":"jorrdansoh"},"content":"        public ObservableList\u003cStudent\u003e getStudentList() {","lastModifiedDate":"2022-10-21"},{"lineNumber":181,"author":{"gitId":"jorrdansoh"},"content":"            return students;","lastModifiedDate":"2022-10-21"},{"lineNumber":182,"author":{"gitId":"jorrdansoh"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":183,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":184,"author":{"gitId":"jorrdansoh"},"content":"        @Override","lastModifiedDate":"2022-10-21"},{"lineNumber":185,"author":{"gitId":"jorrdansoh"},"content":"        public void updateSortedStudentList(Comparator\u003cStudent\u003e comparator) {","lastModifiedDate":"2022-10-21"},{"lineNumber":186,"author":{"gitId":"jorrdansoh"},"content":"            requireNonNull(comparator);","lastModifiedDate":"2022-10-21"},{"lineNumber":187,"author":{"gitId":"jorrdansoh"},"content":"            sortedStudents.setComparator(comparator);","lastModifiedDate":"2022-10-21"},{"lineNumber":188,"author":{"gitId":"jorrdansoh"},"content":"            students \u003d sortedStudents;","lastModifiedDate":"2022-10-21"},{"lineNumber":189,"author":{"gitId":"jorrdansoh"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":190,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":191,"author":{"gitId":"jorrdansoh"},"content":"        @Override","lastModifiedDate":"2022-10-21"},{"lineNumber":192,"author":{"gitId":"jorrdansoh"},"content":"        public ReadOnlyFriday getFriday() {","lastModifiedDate":"2022-10-21"},{"lineNumber":193,"author":{"gitId":"jorrdansoh"},"content":"            return new Friday();","lastModifiedDate":"2022-10-21"},{"lineNumber":194,"author":{"gitId":"jorrdansoh"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":195,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":196,"author":{"gitId":"jorrdansoh"},"content":"}","lastModifiedDate":"2022-10-21"}],"authorContributionMap":{"jorrdansoh":169,"darrtzj":27}},{"path":"src/test/java/friday/logic/commands/UnaliasCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"darrtzj"},"content":"package friday.logic.commands;","lastModifiedDate":"2022-10-23"},{"lineNumber":2,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":3,"author":{"gitId":"darrtzj"},"content":"import static friday.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-24"},{"lineNumber":4,"author":{"gitId":"darrtzj"},"content":"import static friday.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-23"},{"lineNumber":5,"author":{"gitId":"Yuvaraj0702"},"content":"import static friday.testutil.TypicalStudents.getTypicalFriday;","lastModifiedDate":"2022-10-25"},{"lineNumber":6,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":7,"author":{"gitId":"darrtzj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-23"},{"lineNumber":8,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":9,"author":{"gitId":"darrtzj"},"content":"import friday.model.Model;","lastModifiedDate":"2022-10-23"},{"lineNumber":10,"author":{"gitId":"darrtzj"},"content":"import friday.model.ModelManager;","lastModifiedDate":"2022-10-23"},{"lineNumber":11,"author":{"gitId":"darrtzj"},"content":"import friday.model.UserPrefs;","lastModifiedDate":"2022-10-23"},{"lineNumber":12,"author":{"gitId":"darrtzj"},"content":"import friday.model.alias.Alias;","lastModifiedDate":"2022-10-23"},{"lineNumber":13,"author":{"gitId":"darrtzj"},"content":"import friday.model.alias.ReservedKeyword;","lastModifiedDate":"2022-10-23"},{"lineNumber":14,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":15,"author":{"gitId":"darrtzj"},"content":"public class UnaliasCommandTest {","lastModifiedDate":"2022-10-23"},{"lineNumber":16,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":17,"author":{"gitId":"darrtzj"},"content":"    private static final Alias VALID_ALIAS \u003d new Alias(\"ls\");","lastModifiedDate":"2022-10-23"},{"lineNumber":18,"author":{"gitId":"darrtzj"},"content":"    private static final Alias VALID_ALIAS_2 \u003d new Alias(\"a\");","lastModifiedDate":"2022-10-23"},{"lineNumber":19,"author":{"gitId":"darrtzj"},"content":"    private static final ReservedKeyword VALID_KEYWORD \u003d new ReservedKeyword(ListCommand.COMMAND_WORD);","lastModifiedDate":"2022-10-23"},{"lineNumber":20,"author":{"gitId":"Yuvaraj0702"},"content":"    private Model model \u003d new ModelManager(getTypicalFriday(), new UserPrefs());","lastModifiedDate":"2022-10-25"},{"lineNumber":21,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":22,"author":{"gitId":"darrtzj"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":23,"author":{"gitId":"darrtzj"},"content":"    public void execute_unaliasAcceptedByModel_removeSuccessful() {","lastModifiedDate":"2022-10-23"},{"lineNumber":24,"author":{"gitId":"darrtzj"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getFriday(), new UserPrefs());","lastModifiedDate":"2022-10-23"},{"lineNumber":25,"author":{"gitId":"darrtzj"},"content":"        model.addAlias(VALID_ALIAS, VALID_KEYWORD);","lastModifiedDate":"2022-10-23"},{"lineNumber":26,"author":{"gitId":"darrtzj"},"content":"        UnaliasCommand unaliasCommand \u003d new UnaliasCommand(VALID_ALIAS);","lastModifiedDate":"2022-10-23"},{"lineNumber":27,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":28,"author":{"gitId":"darrtzj"},"content":"        String expectedMessage \u003d String.format(UnaliasCommand.MESSAGE_SUCCESS, VALID_ALIAS);","lastModifiedDate":"2022-10-23"},{"lineNumber":29,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":30,"author":{"gitId":"darrtzj"},"content":"        assertCommandSuccess(unaliasCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-23"},{"lineNumber":31,"author":{"gitId":"darrtzj"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":32,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":33,"author":{"gitId":"darrtzj"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":34,"author":{"gitId":"darrtzj"},"content":"    public void execute_aliasNotFound_throwsCommandException() {","lastModifiedDate":"2022-10-23"},{"lineNumber":35,"author":{"gitId":"darrtzj"},"content":"        model.addAlias(VALID_ALIAS, VALID_KEYWORD);","lastModifiedDate":"2022-10-23"},{"lineNumber":36,"author":{"gitId":"darrtzj"},"content":"        UnaliasCommand unaliasCommand \u003d new UnaliasCommand(VALID_ALIAS_2);","lastModifiedDate":"2022-10-23"},{"lineNumber":37,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":38,"author":{"gitId":"darrtzj"},"content":"        assertCommandFailure(unaliasCommand, model, UnaliasCommand.MESSAGE_ALIAS_NOT_FOUND);","lastModifiedDate":"2022-10-24"},{"lineNumber":39,"author":{"gitId":"darrtzj"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":40,"author":{"gitId":"darrtzj"},"content":"}","lastModifiedDate":"2022-10-23"}],"authorContributionMap":{"Yuvaraj0702":2,"darrtzj":38}},{"path":"src/test/java/friday/logic/commands/UnmarkMasteryCheckCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kaij77"},"content":"package friday.logic.commands;","lastModifiedDate":"2022-11-06"},{"lineNumber":2,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":3,"author":{"gitId":"kaij77"},"content":"import static friday.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-11-06"},{"lineNumber":4,"author":{"gitId":"kaij77"},"content":"import static friday.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-11-06"},{"lineNumber":5,"author":{"gitId":"kaij77"},"content":"import static friday.testutil.TypicalIndexes.INDEX_FOURTH_STUDENT;","lastModifiedDate":"2022-11-06"},{"lineNumber":6,"author":{"gitId":"kaij77"},"content":"import static friday.testutil.TypicalIndexes.INDEX_SECOND_STUDENT;","lastModifiedDate":"2022-11-06"},{"lineNumber":7,"author":{"gitId":"kaij77"},"content":"import static friday.testutil.TypicalIndexes.INDEX_SEVENTH_STUDENT;","lastModifiedDate":"2022-11-06"},{"lineNumber":8,"author":{"gitId":"kaij77"},"content":"import static friday.testutil.TypicalStudents.getTypicalFriday;","lastModifiedDate":"2022-11-06"},{"lineNumber":9,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":10,"author":{"gitId":"kaij77"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-11-06"},{"lineNumber":11,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":12,"author":{"gitId":"kaij77"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-11-06"},{"lineNumber":13,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":14,"author":{"gitId":"kaij77"},"content":"import friday.model.Model;","lastModifiedDate":"2022-11-06"},{"lineNumber":15,"author":{"gitId":"kaij77"},"content":"import friday.model.ModelManager;","lastModifiedDate":"2022-11-06"},{"lineNumber":16,"author":{"gitId":"kaij77"},"content":"import friday.model.UserPrefs;","lastModifiedDate":"2022-11-06"},{"lineNumber":17,"author":{"gitId":"kaij77"},"content":"import friday.model.student.Student;","lastModifiedDate":"2022-11-06"},{"lineNumber":18,"author":{"gitId":"kaij77"},"content":"import friday.testutil.StudentBuilder;","lastModifiedDate":"2022-11-06"},{"lineNumber":19,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":20,"author":{"gitId":"kaij77"},"content":"public class UnmarkMasteryCheckCommandTest {","lastModifiedDate":"2022-11-06"},{"lineNumber":21,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":22,"author":{"gitId":"kaij77"},"content":"    /**","lastModifiedDate":"2022-11-06"},{"lineNumber":23,"author":{"gitId":"kaij77"},"content":"     * Students 1 to 3 in this list do not have their Mastery Check already marked as passed, while the Students 4 to 6","lastModifiedDate":"2022-11-06"},{"lineNumber":24,"author":{"gitId":"kaij77"},"content":"     * do, and Student 7 has an empty Mastery Check.","lastModifiedDate":"2022-11-06"},{"lineNumber":25,"author":{"gitId":"kaij77"},"content":"     */","lastModifiedDate":"2022-11-06"},{"lineNumber":26,"author":{"gitId":"kaij77"},"content":"    private Model model \u003d new ModelManager(getTypicalFriday(), new UserPrefs());","lastModifiedDate":"2022-11-06"},{"lineNumber":27,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":28,"author":{"gitId":"kaij77"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":29,"author":{"gitId":"kaij77"},"content":"    public void execute_studentNotMarked_throwsCommandException() {","lastModifiedDate":"2022-11-06"},{"lineNumber":30,"author":{"gitId":"kaij77"},"content":"        Student secondStudent \u003d model.getStudentList().get(INDEX_SECOND_STUDENT.getZeroBased());","lastModifiedDate":"2022-11-06"},{"lineNumber":31,"author":{"gitId":"kaij77"},"content":"        UnmarkMasteryCheckCommand unmarkCommand \u003d new UnmarkMasteryCheckCommand(INDEX_SECOND_STUDENT);","lastModifiedDate":"2022-11-06"},{"lineNumber":32,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":33,"author":{"gitId":"kaij77"},"content":"        String expectedMessage \u003d String.format(UnmarkMasteryCheckCommand.MESSAGE_NOT_MARKED,","lastModifiedDate":"2022-11-06"},{"lineNumber":34,"author":{"gitId":"kaij77"},"content":"                secondStudent.getName());","lastModifiedDate":"2022-11-06"},{"lineNumber":35,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":36,"author":{"gitId":"kaij77"},"content":"        assertCommandFailure(unmarkCommand, model, expectedMessage);","lastModifiedDate":"2022-11-06"},{"lineNumber":37,"author":{"gitId":"kaij77"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":38,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":39,"author":{"gitId":"kaij77"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":40,"author":{"gitId":"kaij77"},"content":"    public void execute_emptyMasteryCheck_throwsCommandException() {","lastModifiedDate":"2022-11-06"},{"lineNumber":41,"author":{"gitId":"kaij77"},"content":"        Student seventhStudent \u003d model.getStudentList().get(INDEX_SEVENTH_STUDENT.getZeroBased());","lastModifiedDate":"2022-11-06"},{"lineNumber":42,"author":{"gitId":"kaij77"},"content":"        UnmarkMasteryCheckCommand unmarkCommand \u003d new UnmarkMasteryCheckCommand(INDEX_SEVENTH_STUDENT);","lastModifiedDate":"2022-11-06"},{"lineNumber":43,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":44,"author":{"gitId":"kaij77"},"content":"        String expectedMessage \u003d seventhStudent.getName() + UnmarkMasteryCheckCommand.MESSAGE_EMPTY_MASTERYCHECK;","lastModifiedDate":"2022-11-06"},{"lineNumber":45,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":46,"author":{"gitId":"kaij77"},"content":"        assertCommandFailure(unmarkCommand, model, expectedMessage);","lastModifiedDate":"2022-11-06"},{"lineNumber":47,"author":{"gitId":"kaij77"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":48,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":49,"author":{"gitId":"kaij77"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":50,"author":{"gitId":"kaij77"},"content":"    public void execute_studentIsMarked_success() {","lastModifiedDate":"2022-11-06"},{"lineNumber":51,"author":{"gitId":"kaij77"},"content":"        Student fourthStudent \u003d model.getStudentList().get(INDEX_FOURTH_STUDENT.getZeroBased());","lastModifiedDate":"2022-11-06"},{"lineNumber":52,"author":{"gitId":"kaij77"},"content":"        Student editedStudent \u003d new StudentBuilder(fourthStudent)","lastModifiedDate":"2022-11-06"},{"lineNumber":53,"author":{"gitId":"kaij77"},"content":"                .withMasteryCheck(LocalDate.of(2022, 4, 2), false).build();","lastModifiedDate":"2022-11-06"},{"lineNumber":54,"author":{"gitId":"kaij77"},"content":"        UnmarkMasteryCheckCommand unmarkCommand \u003d new UnmarkMasteryCheckCommand(INDEX_FOURTH_STUDENT);","lastModifiedDate":"2022-11-06"},{"lineNumber":55,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":56,"author":{"gitId":"kaij77"},"content":"        String expectedMessage \u003d String.format(UnmarkMasteryCheckCommand.MESSAGE_SUCCESS, editedStudent.getName());","lastModifiedDate":"2022-11-06"},{"lineNumber":57,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":58,"author":{"gitId":"kaij77"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getFriday(), new UserPrefs());","lastModifiedDate":"2022-11-06"},{"lineNumber":59,"author":{"gitId":"kaij77"},"content":"        expectedModel.setStudent(model.getStudentList().get(3), editedStudent);","lastModifiedDate":"2022-11-06"},{"lineNumber":60,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":61,"author":{"gitId":"kaij77"},"content":"        assertCommandSuccess(unmarkCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-11-06"},{"lineNumber":62,"author":{"gitId":"kaij77"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":63,"author":{"gitId":"kaij77"},"content":"}","lastModifiedDate":"2022-11-06"}],"authorContributionMap":{"kaij77":63}},{"path":"src/test/java/friday/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.logic.parser;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"HowSuen"},"content":"import static friday.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"kaij77"},"content":"import static friday.logic.commands.CommandTestUtil.CONSULTATION_DESC_AMY;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"kaij77"},"content":"import static friday.logic.commands.CommandTestUtil.CONSULTATION_DESC_BOB;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"HowSuen"},"content":"import static friday.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"HowSuen"},"content":"import static friday.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"kaij77"},"content":"import static friday.logic.commands.CommandTestUtil.INVALID_TELEGRAMHANDLE_DESC;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"kaij77"},"content":"import static friday.logic.commands.CommandTestUtil.MASTERYCHECK_DESC_AMY;","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"kaij77"},"content":"import static friday.logic.commands.CommandTestUtil.MASTERYCHECK_DESC_BOB;","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"HowSuen"},"content":"import static friday.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"HowSuen"},"content":"import static friday.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"HowSuen"},"content":"import static friday.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"HowSuen"},"content":"import static friday.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"HowSuen"},"content":"import static friday.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"HowSuen"},"content":"import static friday.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"kaij77"},"content":"import static friday.logic.commands.CommandTestUtil.TELEGRAMHANDLE_DESC_AMY;","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"kaij77"},"content":"import static friday.logic.commands.CommandTestUtil.TELEGRAMHANDLE_DESC_BOB;","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"HowSuen"},"content":"import static friday.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"HowSuen"},"content":"import static friday.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"HowSuen"},"content":"import static friday.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"HowSuen"},"content":"import static friday.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"jorrdansoh"},"content":"import static friday.testutil.TypicalStudents.AMY;","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"jorrdansoh"},"content":"import static friday.testutil.TypicalStudents.BOB;","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"HowSuen"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"HowSuen"},"content":"import friday.logic.commands.AddCommand;","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"kaij77"},"content":"import friday.model.student.Name;","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"kaij77"},"content":"import friday.model.student.Student;","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"kaij77"},"content":"import friday.model.student.TelegramHandle;","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"HowSuen"},"content":"import friday.model.tag.Tag;","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"jorrdansoh"},"content":"import friday.testutil.StudentBuilder;","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"HowSuen"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"HowSuen"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"HowSuen"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"HowSuen"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2022-10-06"},{"lineNumber":40,"author":{"gitId":"jorrdansoh"},"content":"        Student expectedStudent \u003d new StudentBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":42,"author":{"gitId":"HowSuen"},"content":"        // whitespace only preamble","lastModifiedDate":"2022-10-06"},{"lineNumber":43,"author":{"gitId":"kaij77"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + TELEGRAMHANDLE_DESC_BOB","lastModifiedDate":"2022-10-06"},{"lineNumber":44,"author":{"gitId":"kaij77"},"content":"                + CONSULTATION_DESC_BOB + MASTERYCHECK_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedStudent));","lastModifiedDate":"2022-10-06"},{"lineNumber":45,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":46,"author":{"gitId":"HowSuen"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2022-10-06"},{"lineNumber":47,"author":{"gitId":"kaij77"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + TELEGRAMHANDLE_DESC_BOB","lastModifiedDate":"2022-10-06"},{"lineNumber":48,"author":{"gitId":"kaij77"},"content":"                + CONSULTATION_DESC_BOB + MASTERYCHECK_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedStudent));","lastModifiedDate":"2022-10-06"},{"lineNumber":49,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":50,"author":{"gitId":"HowSuen"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2022-10-06"},{"lineNumber":51,"author":{"gitId":"kaij77"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + TELEGRAMHANDLE_DESC_AMY + TELEGRAMHANDLE_DESC_BOB","lastModifiedDate":"2022-10-06"},{"lineNumber":52,"author":{"gitId":"kaij77"},"content":"                + CONSULTATION_DESC_BOB + MASTERYCHECK_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedStudent));","lastModifiedDate":"2022-10-06"},{"lineNumber":53,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":54,"author":{"gitId":"HowSuen"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2022-10-06"},{"lineNumber":55,"author":{"gitId":"kaij77"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + TELEGRAMHANDLE_DESC_BOB + CONSULTATION_DESC_AMY","lastModifiedDate":"2022-10-06"},{"lineNumber":56,"author":{"gitId":"kaij77"},"content":"                + CONSULTATION_DESC_BOB + MASTERYCHECK_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedStudent));","lastModifiedDate":"2022-10-06"},{"lineNumber":57,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":58,"author":{"gitId":"HowSuen"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2022-10-06"},{"lineNumber":59,"author":{"gitId":"kaij77"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + TELEGRAMHANDLE_DESC_BOB + CONSULTATION_DESC_BOB","lastModifiedDate":"2022-10-06"},{"lineNumber":60,"author":{"gitId":"kaij77"},"content":"                + MASTERYCHECK_DESC_AMY + MASTERYCHECK_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedStudent));","lastModifiedDate":"2022-10-06"},{"lineNumber":61,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":62,"author":{"gitId":"HowSuen"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2022-10-06"},{"lineNumber":63,"author":{"gitId":"jorrdansoh"},"content":"        Student expectedStudentMultipleTags \u003d new StudentBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2022-10-20"},{"lineNumber":64,"author":{"gitId":"HowSuen"},"content":"                .build();","lastModifiedDate":"2022-10-06"},{"lineNumber":65,"author":{"gitId":"kaij77"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + TELEGRAMHANDLE_DESC_BOB + CONSULTATION_DESC_BOB","lastModifiedDate":"2022-10-06"},{"lineNumber":66,"author":{"gitId":"kaij77"},"content":"                + MASTERYCHECK_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2022-10-06"},{"lineNumber":67,"author":{"gitId":"kaij77"},"content":"                new AddCommand(expectedStudentMultipleTags));","lastModifiedDate":"2022-10-06"},{"lineNumber":68,"author":{"gitId":"HowSuen"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":69,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":70,"author":{"gitId":"HowSuen"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":71,"author":{"gitId":"HowSuen"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2022-10-06"},{"lineNumber":72,"author":{"gitId":"HowSuen"},"content":"        // zero tags","lastModifiedDate":"2022-10-06"},{"lineNumber":73,"author":{"gitId":"jorrdansoh"},"content":"        Student expectedStudent \u003d new StudentBuilder(AMY).withTags().build();","lastModifiedDate":"2022-10-20"},{"lineNumber":74,"author":{"gitId":"kaij77"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + TELEGRAMHANDLE_DESC_AMY + CONSULTATION_DESC_AMY","lastModifiedDate":"2022-10-06"},{"lineNumber":75,"author":{"gitId":"kaij77"},"content":"                        + MASTERYCHECK_DESC_AMY, new AddCommand(expectedStudent));","lastModifiedDate":"2022-10-06"},{"lineNumber":76,"author":{"gitId":"HowSuen"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":77,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":78,"author":{"gitId":"HowSuen"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":79,"author":{"gitId":"HowSuen"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2022-10-06"},{"lineNumber":80,"author":{"gitId":"HowSuen"},"content":"        // invalid name","lastModifiedDate":"2022-10-06"},{"lineNumber":81,"author":{"gitId":"kaij77"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + TELEGRAMHANDLE_DESC_BOB + CONSULTATION_DESC_BOB","lastModifiedDate":"2022-10-06"},{"lineNumber":82,"author":{"gitId":"kaij77"},"content":"                + MASTERYCHECK_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-06"},{"lineNumber":83,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":84,"author":{"gitId":"HowSuen"},"content":"        // invalid phone","lastModifiedDate":"2022-10-06"},{"lineNumber":85,"author":{"gitId":"kaij77"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_TELEGRAMHANDLE_DESC + CONSULTATION_DESC_BOB","lastModifiedDate":"2022-10-06"},{"lineNumber":86,"author":{"gitId":"kaij77"},"content":"                + MASTERYCHECK_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, TelegramHandle.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-06"},{"lineNumber":87,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":88,"author":{"gitId":"HowSuen"},"content":"        // invalid tag","lastModifiedDate":"2022-10-06"},{"lineNumber":89,"author":{"gitId":"kaij77"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + TELEGRAMHANDLE_DESC_BOB + CONSULTATION_DESC_BOB","lastModifiedDate":"2022-10-06"},{"lineNumber":90,"author":{"gitId":"kaij77"},"content":"                + MASTERYCHECK_DESC_BOB + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-06"},{"lineNumber":91,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":92,"author":{"gitId":"HowSuen"},"content":"        // non-empty preamble","lastModifiedDate":"2022-10-06"},{"lineNumber":93,"author":{"gitId":"kaij77"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + TELEGRAMHANDLE_DESC_BOB","lastModifiedDate":"2022-10-06"},{"lineNumber":94,"author":{"gitId":"kaij77"},"content":"                        + CONSULTATION_DESC_BOB + MASTERYCHECK_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2022-10-06"},{"lineNumber":95,"author":{"gitId":"HowSuen"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-06"},{"lineNumber":96,"author":{"gitId":"HowSuen"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":97,"author":{"gitId":"HowSuen"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"jorrdansoh":6,"kaij77":33,"HowSuen":58}},{"path":"src/test/java/friday/logic/parser/AliasCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"darrtzj"},"content":"package friday.logic.parser;","lastModifiedDate":"2022-10-23"},{"lineNumber":2,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":3,"author":{"gitId":"darrtzj"},"content":"import static friday.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-23"},{"lineNumber":4,"author":{"gitId":"darrtzj"},"content":"import static friday.logic.parser.CliSyntax.PREFIX_ALIAS;","lastModifiedDate":"2022-10-23"},{"lineNumber":5,"author":{"gitId":"darrtzj"},"content":"import static friday.logic.parser.CliSyntax.PREFIX_RESERVED_KEYWORD;","lastModifiedDate":"2022-10-23"},{"lineNumber":6,"author":{"gitId":"darrtzj"},"content":"import static friday.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-23"},{"lineNumber":7,"author":{"gitId":"darrtzj"},"content":"import static friday.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-23"},{"lineNumber":8,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":9,"author":{"gitId":"darrtzj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-23"},{"lineNumber":10,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":11,"author":{"gitId":"darrtzj"},"content":"import friday.logic.commands.AliasCommand;","lastModifiedDate":"2022-10-23"},{"lineNumber":12,"author":{"gitId":"darrtzj"},"content":"import friday.logic.commands.ListCommand;","lastModifiedDate":"2022-10-23"},{"lineNumber":13,"author":{"gitId":"darrtzj"},"content":"import friday.model.alias.Alias;","lastModifiedDate":"2022-10-23"},{"lineNumber":14,"author":{"gitId":"darrtzj"},"content":"import friday.model.alias.ReservedKeyword;","lastModifiedDate":"2022-10-23"},{"lineNumber":15,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":16,"author":{"gitId":"darrtzj"},"content":"public class AliasCommandParserTest {","lastModifiedDate":"2022-10-23"},{"lineNumber":17,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":18,"author":{"gitId":"darrtzj"},"content":"    private static final Alias VALID_ALIAS \u003d new Alias(\"ls\");","lastModifiedDate":"2022-10-25"},{"lineNumber":19,"author":{"gitId":"darrtzj"},"content":"    private static final ReservedKeyword VALID_KEYWORD \u003d new ReservedKeyword(ListCommand.COMMAND_WORD);","lastModifiedDate":"2022-10-25"},{"lineNumber":20,"author":{"gitId":"darrtzj"},"content":"    private static final String INVALID_PREFIX \u003d \"g/ \";","lastModifiedDate":"2022-10-23"},{"lineNumber":21,"author":{"gitId":"darrtzj"},"content":"    private static final String VALID_ALIAS_ARG \u003d \" \" + PREFIX_ALIAS + VALID_ALIAS;","lastModifiedDate":"2022-10-23"},{"lineNumber":22,"author":{"gitId":"darrtzj"},"content":"    private static final String VALID_RESERVED_KEYWORD_ARG \u003d \" \" + PREFIX_RESERVED_KEYWORD + ListCommand.COMMAND_WORD;","lastModifiedDate":"2022-10-23"},{"lineNumber":23,"author":{"gitId":"darrtzj"},"content":"    private static final String INVALID_ARGS_1 \u003d INVALID_PREFIX + VALID_ALIAS + VALID_RESERVED_KEYWORD_ARG;","lastModifiedDate":"2022-10-23"},{"lineNumber":24,"author":{"gitId":"darrtzj"},"content":"    private static final String INVALID_ARGS_2 \u003d VALID_ALIAS_ARG + INVALID_PREFIX + ListCommand.COMMAND_WORD;","lastModifiedDate":"2022-10-23"},{"lineNumber":25,"author":{"gitId":"darrtzj"},"content":"    private AliasCommandParser parser \u003d new AliasCommandParser();","lastModifiedDate":"2022-10-23"},{"lineNumber":26,"author":{"gitId":"darrtzj"},"content":"    private AliasCommand expectedCommand \u003d new AliasCommand(VALID_ALIAS, VALID_KEYWORD);","lastModifiedDate":"2022-10-25"},{"lineNumber":27,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":28,"author":{"gitId":"darrtzj"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":29,"author":{"gitId":"darrtzj"},"content":"    public void parse_validArgs_returnsAliasCommand() {","lastModifiedDate":"2022-10-23"},{"lineNumber":30,"author":{"gitId":"darrtzj"},"content":"        assertParseSuccess(parser, VALID_ALIAS_ARG + VALID_RESERVED_KEYWORD_ARG, expectedCommand);","lastModifiedDate":"2022-10-23"},{"lineNumber":31,"author":{"gitId":"darrtzj"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":32,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":33,"author":{"gitId":"darrtzj"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":34,"author":{"gitId":"darrtzj"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2022-10-23"},{"lineNumber":35,"author":{"gitId":"darrtzj"},"content":"        assertParseFailure(parser, INVALID_ARGS_1, String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-23"},{"lineNumber":36,"author":{"gitId":"darrtzj"},"content":"                AliasCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-23"},{"lineNumber":37,"author":{"gitId":"darrtzj"},"content":"        assertParseFailure(parser, INVALID_ARGS_2, String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-23"},{"lineNumber":38,"author":{"gitId":"darrtzj"},"content":"                AliasCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-23"},{"lineNumber":39,"author":{"gitId":"darrtzj"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":40,"author":{"gitId":"darrtzj"},"content":"}","lastModifiedDate":"2022-10-23"}],"authorContributionMap":{"darrtzj":40}},{"path":"src/test/java/friday/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.logic.parser;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  some random string /t tag with leading and trailing spaces \";","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2017-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2016-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2017-05-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2017-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2017-05-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2016-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"-":149,"HowSuen":1}},{"path":"src/test/java/friday/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.logic.parser;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"HowSuen"},"content":"import friday.logic.commands.Command;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"HowSuen"},"content":"import friday.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static void assertParseSuccess(Parser\u003c? extends Command\u003e parser, String userInput,","lastModifiedDate":"2022-02-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            Command expectedCommand) {","lastModifiedDate":"2022-02-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static void assertParseFailure(Parser\u003c? extends Command\u003e parser, String userInput, String expectedMessage) {","lastModifiedDate":"2022-02-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"-":36,"HowSuen":3}},{"path":"src/test/java/friday/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.logic.parser;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"HowSuen"},"content":"import static friday.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"HowSuen"},"content":"import static friday.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"HowSuen"},"content":"import static friday.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"jorrdansoh"},"content":"import static friday.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"HowSuen"},"content":"import friday.logic.commands.DeleteCommand;","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"jorrdansoh"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST_STUDENT));","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"jorrdansoh":2,"-":25,"HowSuen":5}},{"path":"src/test/java/friday/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.logic.parser;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"HowSuen"},"content":"import static friday.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"HowSuen"},"content":"import static friday.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"jorrdansoh"},"content":"import static friday.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"jorrdansoh"},"content":"import static friday.testutil.TypicalIndexes.INDEX_SECOND_STUDENT;","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"jorrdansoh"},"content":"import static friday.testutil.TypicalIndexes.INDEX_THIRD_STUDENT;","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"HowSuen"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"HowSuen"},"content":"import friday.commons.core.index.Index;","lastModifiedDate":"2022-10-08"},{"lineNumber":12,"author":{"gitId":"HowSuen"},"content":"import friday.logic.commands.CommandTestUtil;","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"HowSuen"},"content":"import friday.logic.commands.EditCommand;","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"kaij77"},"content":"import friday.model.student.Name;","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"kaij77"},"content":"import friday.model.student.TelegramHandle;","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"HowSuen"},"content":"import friday.model.tag.Tag;","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"HowSuen"},"content":"import friday.testutil.EditStudentDescriptorBuilder;","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"HowSuen"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"HowSuen"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"kaij77"},"content":"    private static final String INVALID_TAG \u003d \"*\" + PREFIX_TAG;","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"HowSuen"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"HowSuen"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"HowSuen"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"HowSuen"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"HowSuen"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"HowSuen"},"content":"        // no index specified","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"HowSuen"},"content":"        CommandParserTestUtil.assertParseFailure(parser, CommandTestUtil.VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"HowSuen"},"content":"        // no field specified","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"HowSuen"},"content":"        CommandParserTestUtil.assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"HowSuen"},"content":"        // no index and no field specified","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"HowSuen"},"content":"        CommandParserTestUtil.assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"HowSuen"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":40,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":41,"author":{"gitId":"HowSuen"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":42,"author":{"gitId":"HowSuen"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2022-10-06"},{"lineNumber":43,"author":{"gitId":"HowSuen"},"content":"        // negative index","lastModifiedDate":"2022-10-06"},{"lineNumber":44,"author":{"gitId":"HowSuen"},"content":"        CommandParserTestUtil.assertParseFailure(parser, \"-5\" + CommandTestUtil.NAME_DESC_AMY,","lastModifiedDate":"2022-10-06"},{"lineNumber":45,"author":{"gitId":"HowSuen"},"content":"                MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-06"},{"lineNumber":46,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":47,"author":{"gitId":"HowSuen"},"content":"        // zero index","lastModifiedDate":"2022-10-06"},{"lineNumber":48,"author":{"gitId":"HowSuen"},"content":"        CommandParserTestUtil.assertParseFailure(parser, \"0\" + CommandTestUtil.NAME_DESC_AMY,","lastModifiedDate":"2022-10-06"},{"lineNumber":49,"author":{"gitId":"HowSuen"},"content":"                MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-06"},{"lineNumber":50,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":51,"author":{"gitId":"HowSuen"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2022-10-06"},{"lineNumber":52,"author":{"gitId":"HowSuen"},"content":"        CommandParserTestUtil.assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-06"},{"lineNumber":53,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":54,"author":{"gitId":"HowSuen"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2022-10-06"},{"lineNumber":55,"author":{"gitId":"HowSuen"},"content":"        CommandParserTestUtil.assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-06"},{"lineNumber":56,"author":{"gitId":"HowSuen"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":57,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":58,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":59,"author":{"gitId":"HowSuen"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":60,"author":{"gitId":"HowSuen"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2022-10-06"},{"lineNumber":61,"author":{"gitId":"HowSuen"},"content":"        CommandParserTestUtil.assertParseFailure(parser, \"1\" + CommandTestUtil.INVALID_NAME_DESC,","lastModifiedDate":"2022-10-06"},{"lineNumber":62,"author":{"gitId":"HowSuen"},"content":"                Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2022-10-06"},{"lineNumber":63,"author":{"gitId":"kaij77"},"content":"        CommandParserTestUtil.assertParseFailure(parser, \"1\" + CommandTestUtil.INVALID_TELEGRAMHANDLE_DESC,","lastModifiedDate":"2022-10-06"},{"lineNumber":64,"author":{"gitId":"kaij77"},"content":"                TelegramHandle.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2022-10-06"},{"lineNumber":65,"author":{"gitId":"HowSuen"},"content":"        CommandParserTestUtil.assertParseFailure(parser, \"1\" + CommandTestUtil.INVALID_TAG_DESC,","lastModifiedDate":"2022-10-06"},{"lineNumber":66,"author":{"gitId":"HowSuen"},"content":"                Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2022-10-06"},{"lineNumber":67,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":68,"author":{"gitId":"HowSuen"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2022-10-06"},{"lineNumber":69,"author":{"gitId":"kaij77"},"content":"        CommandParserTestUtil.assertParseFailure(parser, \"1\" + CommandTestUtil.INVALID_TELEGRAMHANDLE_DESC","lastModifiedDate":"2022-10-06"},{"lineNumber":70,"author":{"gitId":"kaij77"},"content":"                + CommandTestUtil.CONSULTATION_DESC_AMY, TelegramHandle.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-06"},{"lineNumber":71,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":72,"author":{"gitId":"HowSuen"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2022-10-06"},{"lineNumber":73,"author":{"gitId":"HowSuen"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2022-10-06"},{"lineNumber":74,"author":{"gitId":"kaij77"},"content":"        CommandParserTestUtil.assertParseFailure(parser, \"1\" + CommandTestUtil.TELEGRAMHANDLE_DESC_BOB","lastModifiedDate":"2022-10-06"},{"lineNumber":75,"author":{"gitId":"kaij77"},"content":"                + CommandTestUtil.INVALID_TELEGRAMHANDLE_DESC, TelegramHandle.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-06"},{"lineNumber":76,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":77,"author":{"gitId":"jorrdansoh"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Student} being edited,","lastModifiedDate":"2022-10-20"},{"lineNumber":78,"author":{"gitId":"HowSuen"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2022-10-06"},{"lineNumber":79,"author":{"gitId":"HowSuen"},"content":"        CommandParserTestUtil.assertParseFailure(parser, \"1\" + CommandTestUtil.TAG_DESC_FRIEND","lastModifiedDate":"2022-10-06"},{"lineNumber":80,"author":{"gitId":"kaij77"},"content":"                + CommandTestUtil.TAG_DESC_HUSBAND + INVALID_TAG, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"HowSuen"},"content":"        CommandParserTestUtil.assertParseFailure(parser, \"1\" + CommandTestUtil.TAG_DESC_FRIEND","lastModifiedDate":"2022-10-06"},{"lineNumber":82,"author":{"gitId":"kaij77"},"content":"                + INVALID_TAG + CommandTestUtil.TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"HowSuen"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":84,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":85,"author":{"gitId":"HowSuen"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":86,"author":{"gitId":"HowSuen"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2022-10-06"},{"lineNumber":87,"author":{"gitId":"jorrdansoh"},"content":"        Index targetIndex \u003d INDEX_SECOND_STUDENT;","lastModifiedDate":"2022-10-20"},{"lineNumber":88,"author":{"gitId":"kaij77"},"content":"        String userInput \u003d targetIndex.getOneBased() + CommandTestUtil.TELEGRAMHANDLE_DESC_BOB","lastModifiedDate":"2022-10-06"},{"lineNumber":89,"author":{"gitId":"kaij77"},"content":"                + CommandTestUtil.TAG_DESC_HUSBAND + CommandTestUtil.CONSULTATION_DESC_AMY","lastModifiedDate":"2022-10-06"},{"lineNumber":90,"author":{"gitId":"kaij77"},"content":"                + CommandTestUtil.MASTERYCHECK_DESC_AMY + CommandTestUtil.NAME_DESC_AMY","lastModifiedDate":"2022-10-06"},{"lineNumber":91,"author":{"gitId":"HowSuen"},"content":"                + CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2022-10-06"},{"lineNumber":92,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":93,"author":{"gitId":"HowSuen"},"content":"        EditCommand.EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder()","lastModifiedDate":"2022-10-12"},{"lineNumber":94,"author":{"gitId":"HowSuen"},"content":"                .withName(CommandTestUtil.VALID_NAME_AMY)","lastModifiedDate":"2022-10-12"},{"lineNumber":95,"author":{"gitId":"kaij77"},"content":"                .withPhone(CommandTestUtil.VALID_TELEGRAMHANDLE_BOB)","lastModifiedDate":"2022-10-06"},{"lineNumber":96,"author":{"gitId":"kaij77"},"content":"                .withConsultation(CommandTestUtil.VALID_CONSULTATION_AMY).withMasteryCheck(","lastModifiedDate":"2022-10-06"},{"lineNumber":97,"author":{"gitId":"kaij77"},"content":"                        CommandTestUtil.VALID_MASTERYCHECK_DATE_AMY)","lastModifiedDate":"2022-11-06"},{"lineNumber":98,"author":{"gitId":"HowSuen"},"content":"                .withTags(CommandTestUtil.VALID_TAG_HUSBAND, CommandTestUtil.VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-10-06"},{"lineNumber":99,"author":{"gitId":"HowSuen"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-06"},{"lineNumber":100,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":101,"author":{"gitId":"HowSuen"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-06"},{"lineNumber":102,"author":{"gitId":"HowSuen"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":103,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":104,"author":{"gitId":"HowSuen"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":105,"author":{"gitId":"HowSuen"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2022-10-06"},{"lineNumber":106,"author":{"gitId":"jorrdansoh"},"content":"        Index targetIndex \u003d INDEX_FIRST_STUDENT;","lastModifiedDate":"2022-10-20"},{"lineNumber":107,"author":{"gitId":"kaij77"},"content":"        String userInput \u003d targetIndex.getOneBased() + CommandTestUtil.TELEGRAMHANDLE_DESC_BOB","lastModifiedDate":"2022-10-06"},{"lineNumber":108,"author":{"gitId":"kaij77"},"content":"                + CommandTestUtil.CONSULTATION_DESC_AMY;","lastModifiedDate":"2022-10-06"},{"lineNumber":109,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":110,"author":{"gitId":"HowSuen"},"content":"        EditCommand.EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder()","lastModifiedDate":"2022-10-12"},{"lineNumber":111,"author":{"gitId":"kaij77"},"content":"                .withPhone(CommandTestUtil.VALID_TELEGRAMHANDLE_BOB)","lastModifiedDate":"2022-10-06"},{"lineNumber":112,"author":{"gitId":"kaij77"},"content":"                .withConsultation(CommandTestUtil.VALID_CONSULTATION_AMY).build();","lastModifiedDate":"2022-10-06"},{"lineNumber":113,"author":{"gitId":"HowSuen"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-06"},{"lineNumber":114,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":115,"author":{"gitId":"HowSuen"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-06"},{"lineNumber":116,"author":{"gitId":"HowSuen"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":117,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":118,"author":{"gitId":"HowSuen"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":119,"author":{"gitId":"HowSuen"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2022-10-06"},{"lineNumber":120,"author":{"gitId":"HowSuen"},"content":"        // name","lastModifiedDate":"2022-10-06"},{"lineNumber":121,"author":{"gitId":"jorrdansoh"},"content":"        Index targetIndex \u003d INDEX_THIRD_STUDENT;","lastModifiedDate":"2022-10-20"},{"lineNumber":122,"author":{"gitId":"HowSuen"},"content":"        String userInput \u003d targetIndex.getOneBased() + CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-10-06"},{"lineNumber":123,"author":{"gitId":"HowSuen"},"content":"        EditCommand.EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder().withName(","lastModifiedDate":"2022-10-12"},{"lineNumber":124,"author":{"gitId":"HowSuen"},"content":"                CommandTestUtil.VALID_NAME_AMY).build();","lastModifiedDate":"2022-10-06"},{"lineNumber":125,"author":{"gitId":"HowSuen"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-06"},{"lineNumber":126,"author":{"gitId":"HowSuen"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-06"},{"lineNumber":127,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":128,"author":{"gitId":"HowSuen"},"content":"        // phone","lastModifiedDate":"2022-10-06"},{"lineNumber":129,"author":{"gitId":"kaij77"},"content":"        userInput \u003d targetIndex.getOneBased() + CommandTestUtil.TELEGRAMHANDLE_DESC_AMY;","lastModifiedDate":"2022-10-06"},{"lineNumber":130,"author":{"gitId":"HowSuen"},"content":"        descriptor \u003d new EditStudentDescriptorBuilder().withPhone(CommandTestUtil.VALID_TELEGRAMHANDLE_AMY).build();","lastModifiedDate":"2022-10-12"},{"lineNumber":131,"author":{"gitId":"HowSuen"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-06"},{"lineNumber":132,"author":{"gitId":"HowSuen"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-06"},{"lineNumber":133,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":134,"author":{"gitId":"HowSuen"},"content":"        // email","lastModifiedDate":"2022-10-06"},{"lineNumber":135,"author":{"gitId":"kaij77"},"content":"        userInput \u003d targetIndex.getOneBased() + CommandTestUtil.CONSULTATION_DESC_AMY;","lastModifiedDate":"2022-10-06"},{"lineNumber":136,"author":{"gitId":"HowSuen"},"content":"        descriptor \u003d new EditStudentDescriptorBuilder()","lastModifiedDate":"2022-10-12"},{"lineNumber":137,"author":{"gitId":"HowSuen"},"content":"                .withConsultation(CommandTestUtil.VALID_CONSULTATION_AMY).build();","lastModifiedDate":"2022-10-12"},{"lineNumber":138,"author":{"gitId":"HowSuen"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-06"},{"lineNumber":139,"author":{"gitId":"HowSuen"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-06"},{"lineNumber":140,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":141,"author":{"gitId":"HowSuen"},"content":"        // address","lastModifiedDate":"2022-10-06"},{"lineNumber":142,"author":{"gitId":"kaij77"},"content":"        userInput \u003d targetIndex.getOneBased() + CommandTestUtil.MASTERYCHECK_DESC_AMY;","lastModifiedDate":"2022-10-06"},{"lineNumber":143,"author":{"gitId":"HowSuen"},"content":"        descriptor \u003d new EditStudentDescriptorBuilder()","lastModifiedDate":"2022-10-12"},{"lineNumber":144,"author":{"gitId":"kaij77"},"content":"                .withMasteryCheck(CommandTestUtil.VALID_MASTERYCHECK_DATE_AMY).build();","lastModifiedDate":"2022-11-06"},{"lineNumber":145,"author":{"gitId":"HowSuen"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-06"},{"lineNumber":146,"author":{"gitId":"HowSuen"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-06"},{"lineNumber":147,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":148,"author":{"gitId":"HowSuen"},"content":"        // tags","lastModifiedDate":"2022-10-06"},{"lineNumber":149,"author":{"gitId":"HowSuen"},"content":"        userInput \u003d targetIndex.getOneBased() + CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2022-10-06"},{"lineNumber":150,"author":{"gitId":"HowSuen"},"content":"        descriptor \u003d new EditStudentDescriptorBuilder().withTags(CommandTestUtil.VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-10-12"},{"lineNumber":151,"author":{"gitId":"HowSuen"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-06"},{"lineNumber":152,"author":{"gitId":"HowSuen"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-06"},{"lineNumber":153,"author":{"gitId":"HowSuen"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":154,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":155,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":156,"author":{"gitId":"HowSuen"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":157,"author":{"gitId":"HowSuen"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2022-10-06"},{"lineNumber":158,"author":{"gitId":"jorrdansoh"},"content":"        Index targetIndex \u003d INDEX_FIRST_STUDENT;","lastModifiedDate":"2022-10-20"},{"lineNumber":159,"author":{"gitId":"kaij77"},"content":"        String userInput \u003d targetIndex.getOneBased() + CommandTestUtil.TELEGRAMHANDLE_DESC_AMY","lastModifiedDate":"2022-10-06"},{"lineNumber":160,"author":{"gitId":"kaij77"},"content":"                + CommandTestUtil.MASTERYCHECK_DESC_AMY","lastModifiedDate":"2022-10-06"},{"lineNumber":161,"author":{"gitId":"kaij77"},"content":"                + CommandTestUtil.CONSULTATION_DESC_AMY","lastModifiedDate":"2022-10-06"},{"lineNumber":162,"author":{"gitId":"kaij77"},"content":"                + CommandTestUtil.TAG_DESC_FRIEND + CommandTestUtil.TELEGRAMHANDLE_DESC_AMY","lastModifiedDate":"2022-10-06"},{"lineNumber":163,"author":{"gitId":"kaij77"},"content":"                + CommandTestUtil.MASTERYCHECK_DESC_AMY","lastModifiedDate":"2022-10-06"},{"lineNumber":164,"author":{"gitId":"kaij77"},"content":"                + CommandTestUtil.CONSULTATION_DESC_AMY + CommandTestUtil.TAG_DESC_FRIEND","lastModifiedDate":"2022-10-06"},{"lineNumber":165,"author":{"gitId":"kaij77"},"content":"                + CommandTestUtil.TELEGRAMHANDLE_DESC_BOB + CommandTestUtil.MASTERYCHECK_DESC_BOB","lastModifiedDate":"2022-10-06"},{"lineNumber":166,"author":{"gitId":"kaij77"},"content":"                + CommandTestUtil.CONSULTATION_DESC_BOB","lastModifiedDate":"2022-10-06"},{"lineNumber":167,"author":{"gitId":"HowSuen"},"content":"                + CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2022-10-06"},{"lineNumber":168,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":169,"author":{"gitId":"HowSuen"},"content":"        EditCommand.EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder()","lastModifiedDate":"2022-10-12"},{"lineNumber":170,"author":{"gitId":"kaij77"},"content":"                .withPhone(CommandTestUtil.VALID_TELEGRAMHANDLE_BOB)","lastModifiedDate":"2022-10-06"},{"lineNumber":171,"author":{"gitId":"kaij77"},"content":"                .withConsultation(CommandTestUtil.VALID_CONSULTATION_BOB)","lastModifiedDate":"2022-10-06"},{"lineNumber":172,"author":{"gitId":"kaij77"},"content":"                .withMasteryCheck(CommandTestUtil.VALID_MASTERYCHECK_DATE_BOB).withTags(","lastModifiedDate":"2022-11-06"},{"lineNumber":173,"author":{"gitId":"HowSuen"},"content":"                        CommandTestUtil.VALID_TAG_FRIEND, CommandTestUtil.VALID_TAG_HUSBAND)","lastModifiedDate":"2022-10-06"},{"lineNumber":174,"author":{"gitId":"HowSuen"},"content":"                .build();","lastModifiedDate":"2022-10-06"},{"lineNumber":175,"author":{"gitId":"HowSuen"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-06"},{"lineNumber":176,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":177,"author":{"gitId":"HowSuen"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-06"},{"lineNumber":178,"author":{"gitId":"HowSuen"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":179,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":180,"author":{"gitId":"HowSuen"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":181,"author":{"gitId":"HowSuen"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2022-10-06"},{"lineNumber":182,"author":{"gitId":"HowSuen"},"content":"        // no other valid values specified","lastModifiedDate":"2022-10-06"},{"lineNumber":183,"author":{"gitId":"jorrdansoh"},"content":"        Index targetIndex \u003d INDEX_FIRST_STUDENT;","lastModifiedDate":"2022-10-20"},{"lineNumber":184,"author":{"gitId":"kaij77"},"content":"        String userInput \u003d targetIndex.getOneBased() + CommandTestUtil.INVALID_TELEGRAMHANDLE_DESC","lastModifiedDate":"2022-10-06"},{"lineNumber":185,"author":{"gitId":"kaij77"},"content":"                + CommandTestUtil.TELEGRAMHANDLE_DESC_BOB;","lastModifiedDate":"2022-10-06"},{"lineNumber":186,"author":{"gitId":"HowSuen"},"content":"        EditCommand.EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder().withPhone(","lastModifiedDate":"2022-10-12"},{"lineNumber":187,"author":{"gitId":"kaij77"},"content":"                CommandTestUtil.VALID_TELEGRAMHANDLE_BOB).build();","lastModifiedDate":"2022-10-06"},{"lineNumber":188,"author":{"gitId":"HowSuen"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-06"},{"lineNumber":189,"author":{"gitId":"HowSuen"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-06"},{"lineNumber":190,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":191,"author":{"gitId":"HowSuen"},"content":"        // other valid values specified","lastModifiedDate":"2022-10-06"},{"lineNumber":192,"author":{"gitId":"kaij77"},"content":"        userInput \u003d targetIndex.getOneBased() + CommandTestUtil.CONSULTATION_DESC_BOB","lastModifiedDate":"2022-10-06"},{"lineNumber":193,"author":{"gitId":"kaij77"},"content":"                + CommandTestUtil.INVALID_TELEGRAMHANDLE_DESC","lastModifiedDate":"2022-10-06"},{"lineNumber":194,"author":{"gitId":"kaij77"},"content":"                + CommandTestUtil.MASTERYCHECK_DESC_BOB","lastModifiedDate":"2022-10-06"},{"lineNumber":195,"author":{"gitId":"kaij77"},"content":"                + CommandTestUtil.TELEGRAMHANDLE_DESC_BOB;","lastModifiedDate":"2022-10-06"},{"lineNumber":196,"author":{"gitId":"HowSuen"},"content":"        descriptor \u003d new EditStudentDescriptorBuilder().withPhone(CommandTestUtil.VALID_TELEGRAMHANDLE_BOB)","lastModifiedDate":"2022-10-12"},{"lineNumber":197,"author":{"gitId":"kaij77"},"content":"                .withConsultation(CommandTestUtil.VALID_CONSULTATION_BOB)","lastModifiedDate":"2022-10-06"},{"lineNumber":198,"author":{"gitId":"kaij77"},"content":"                .withMasteryCheck(CommandTestUtil.VALID_MASTERYCHECK_DATE_BOB).build();","lastModifiedDate":"2022-11-06"},{"lineNumber":199,"author":{"gitId":"HowSuen"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-06"},{"lineNumber":200,"author":{"gitId":"HowSuen"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-06"},{"lineNumber":201,"author":{"gitId":"HowSuen"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":202,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":203,"author":{"gitId":"HowSuen"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":204,"author":{"gitId":"HowSuen"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2022-10-06"},{"lineNumber":205,"author":{"gitId":"jorrdansoh"},"content":"        Index targetIndex \u003d INDEX_THIRD_STUDENT;","lastModifiedDate":"2022-10-20"},{"lineNumber":206,"author":{"gitId":"HowSuen"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2022-10-06"},{"lineNumber":207,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":208,"author":{"gitId":"HowSuen"},"content":"        EditCommand.EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder().withTags().build();","lastModifiedDate":"2022-10-12"},{"lineNumber":209,"author":{"gitId":"HowSuen"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-06"},{"lineNumber":210,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":211,"author":{"gitId":"HowSuen"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-06"},{"lineNumber":212,"author":{"gitId":"HowSuen"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":213,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":214,"author":{"gitId":"HowSuen"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"jorrdansoh":10,"kaij77":45,"HowSuen":159}},{"path":"src/test/java/friday/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.logic.parser;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"HowSuen"},"content":"import static friday.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"HowSuen"},"content":"import static friday.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"HowSuen"},"content":"import static friday.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"HowSuen"},"content":"import friday.logic.commands.FindCommand;","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"kaij77"},"content":"import friday.model.student.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"kaij77":1,"-":28,"HowSuen":5}},{"path":"src/test/java/friday/logic/parser/FridayParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.logic.parser;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"HowSuen"},"content":"import static friday.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"HowSuen"},"content":"import static friday.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"HowSuen"},"content":"import static friday.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"HowSuen"},"content":"import static friday.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"jorrdansoh"},"content":"import static friday.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"HowSuen"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"HowSuen"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"darrtzj"},"content":"//import friday.model.Friday;","lastModifiedDate":"2022-10-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"HowSuen"},"content":"import friday.logic.commands.AddCommand;","lastModifiedDate":"2022-10-24"},{"lineNumber":19,"author":{"gitId":"HowSuen"},"content":"import friday.logic.commands.ClearCommand;","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"HowSuen"},"content":"import friday.logic.commands.DeleteCommand;","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"HowSuen"},"content":"import friday.logic.commands.EditCommand;","lastModifiedDate":"2022-10-24"},{"lineNumber":22,"author":{"gitId":"HowSuen"},"content":"import friday.logic.commands.EditCommand.EditStudentDescriptor;","lastModifiedDate":"2022-10-24"},{"lineNumber":23,"author":{"gitId":"HowSuen"},"content":"import friday.logic.commands.ExitCommand;","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"HowSuen"},"content":"import friday.logic.commands.FindCommand;","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"HowSuen"},"content":"import friday.logic.commands.GradeCommand;","lastModifiedDate":"2022-10-24"},{"lineNumber":26,"author":{"gitId":"HowSuen"},"content":"import friday.logic.commands.GradeCommand.EditGradeDescriptor;","lastModifiedDate":"2022-10-24"},{"lineNumber":27,"author":{"gitId":"HowSuen"},"content":"import friday.logic.commands.HelpCommand;","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"HowSuen"},"content":"import friday.logic.commands.ListCommand;","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"HowSuen"},"content":"import friday.logic.commands.RemarkCommand;","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"HowSuen"},"content":"import friday.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"darrtzj"},"content":"import friday.model.Model;","lastModifiedDate":"2022-10-23"},{"lineNumber":32,"author":{"gitId":"darrtzj"},"content":"import friday.model.ModelManager;","lastModifiedDate":"2022-10-23"},{"lineNumber":33,"author":{"gitId":"kaij77"},"content":"import friday.model.student.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"kaij77"},"content":"import friday.model.student.Remark;","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"kaij77"},"content":"import friday.model.student.Student;","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"HowSuen"},"content":"import friday.testutil.EditGradeDescriptorBuilder;","lastModifiedDate":"2022-10-24"},{"lineNumber":37,"author":{"gitId":"HowSuen"},"content":"import friday.testutil.EditStudentDescriptorBuilder;","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"jorrdansoh"},"content":"import friday.testutil.StudentBuilder;","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"jorrdansoh"},"content":"import friday.testutil.StudentUtil;","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"kaij77"},"content":"public class FridayParserTest {","lastModifiedDate":"2022-10-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"HowSuen"},"content":"    private final FridayParser parser \u003d new FridayParser();","lastModifiedDate":"2022-10-19"},{"lineNumber":44,"author":{"gitId":"darrtzj"},"content":"    private final Model model \u003d new ModelManager();","lastModifiedDate":"2022-10-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"jorrdansoh"},"content":"        Student student \u003d new StudentBuilder().build();","lastModifiedDate":"2022-10-20"},{"lineNumber":49,"author":{"gitId":"darrtzj"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(StudentUtil.getAddCommand(student), model);","lastModifiedDate":"2022-10-24"},{"lineNumber":50,"author":{"gitId":"kaij77"},"content":"        assertEquals(new AddCommand(student), command);","lastModifiedDate":"2022-10-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"darrtzj"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD, model) instanceof ClearCommand);","lastModifiedDate":"2022-10-23"},{"lineNumber":56,"author":{"gitId":"darrtzj"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\", model) instanceof ClearCommand);","lastModifiedDate":"2022-10-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"darrtzj"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_STUDENT.getOneBased(), model);","lastModifiedDate":"2022-10-23"},{"lineNumber":63,"author":{"gitId":"jorrdansoh"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_STUDENT), command);","lastModifiedDate":"2022-10-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"jorrdansoh"},"content":"        Student student \u003d new StudentBuilder().build();","lastModifiedDate":"2022-10-20"},{"lineNumber":70,"author":{"gitId":"HowSuen"},"content":"        EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder(student).build();","lastModifiedDate":"2022-10-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"darrtzj"},"content":"                + INDEX_FIRST_STUDENT.getOneBased() + \" \" + StudentUtil.getEditStudentDescriptorDetails(descriptor),","lastModifiedDate":"2022-10-24"},{"lineNumber":73,"author":{"gitId":"darrtzj"},"content":"                model);","lastModifiedDate":"2022-10-24"},{"lineNumber":74,"author":{"gitId":"jorrdansoh"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_STUDENT, descriptor), command);","lastModifiedDate":"2022-10-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"darrtzj"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD, model) instanceof ExitCommand);","lastModifiedDate":"2022-10-23"},{"lineNumber":80,"author":{"gitId":"darrtzj"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\", model) instanceof ExitCommand);","lastModifiedDate":"2022-10-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"darrtzj"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")),","lastModifiedDate":"2022-10-23"},{"lineNumber":88,"author":{"gitId":"darrtzj"},"content":"                model);","lastModifiedDate":"2022-10-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"darrtzj"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD, model) instanceof HelpCommand);","lastModifiedDate":"2022-10-23"},{"lineNumber":95,"author":{"gitId":"darrtzj"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\", model) instanceof HelpCommand);","lastModifiedDate":"2022-10-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"darrtzj"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD, model) instanceof ListCommand);","lastModifiedDate":"2022-10-23"},{"lineNumber":101,"author":{"gitId":"darrtzj"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\", model) instanceof ListCommand);","lastModifiedDate":"2022-10-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    // @@author HowSuen-reused","lastModifiedDate":"2022-11-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    // Reused from https://nus-cs2103-ay2223s1.github.io/tp/tutorials/AddRemark.html","lastModifiedDate":"2022-11-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    // with minor modifications","lastModifiedDate":"2022-11-03"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-09-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void parseCommand_remark() throws Exception {","lastModifiedDate":"2022-09-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        final Remark remark \u003d new Remark(\"Some remark.\");","lastModifiedDate":"2022-09-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        RemarkCommand command \u003d (RemarkCommand) parser.parseCommand(RemarkCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2022-09-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_STUDENT.getOneBased() + \" \" + PREFIX_REMARK + remark.value, model);","lastModifiedDate":"2022-10-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertEquals(new RemarkCommand(INDEX_FIRST_STUDENT, remark), command);","lastModifiedDate":"2022-10-20"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parseCommand_grade() throws Exception {","lastModifiedDate":"2022-10-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Student student \u003d new StudentBuilder().build();","lastModifiedDate":"2022-10-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        EditGradeDescriptor descriptor \u003d new EditGradeDescriptorBuilder(student.getGradesList()).build();","lastModifiedDate":"2022-10-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        GradeCommand command \u003d (GradeCommand) parser.parseCommand(GradeCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_STUDENT.getOneBased() + \" \" + StudentUtil.getEditGradesDescriptorDetails(descriptor),","lastModifiedDate":"2022-10-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                model);","lastModifiedDate":"2022-10-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertEquals(new GradeCommand(INDEX_FIRST_STUDENT, descriptor), command);","lastModifiedDate":"2022-10-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\", model));","lastModifiedDate":"2022-10-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\",","lastModifiedDate":"2022-10-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                model));","lastModifiedDate":"2022-10-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"jorrdansoh":7,"darrtzj":18,"kaij77":5,"-":81,"HowSuen":25}},{"path":"src/test/java/friday/logic/parser/GradeCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.logic.parser;","lastModifiedDate":"2022-10-21"},{"lineNumber":2,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":3,"author":{"gitId":"HowSuen"},"content":"import static friday.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-21"},{"lineNumber":4,"author":{"gitId":"HowSuen"},"content":"import static friday.logic.parser.CliSyntax.PREFIX_FINALS;","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"HowSuen"},"content":"import static friday.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"HowSuen"},"content":"import static friday.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"HowSuen"},"content":"import static friday.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"HowSuen"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"HowSuen"},"content":"import friday.commons.core.index.Index;","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"HowSuen"},"content":"import friday.logic.commands.GradeCommand;","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"HowSuen"},"content":"import friday.logic.commands.GradeCommand.EditGradeDescriptor;","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"HowSuen"},"content":"import friday.testutil.EditGradeDescriptorBuilder;","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"HowSuen"},"content":"public class GradeCommandParserTest {","lastModifiedDate":"2022-10-21"},{"lineNumber":17,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":18,"author":{"gitId":"HowSuen"},"content":"    private GradeCommandParser parser \u003d new GradeCommandParser();","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"HowSuen"},"content":"    private final String nonEmptyScore \u003d \"69.99\";","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"HowSuen"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":22,"author":{"gitId":"HowSuen"},"content":"    public void parse_indexSpecified_success() {","lastModifiedDate":"2022-10-21"},{"lineNumber":23,"author":{"gitId":"HowSuen"},"content":"        // have grade","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"HowSuen"},"content":"        Index targetIndex \u003d INDEX_FIRST_STUDENT;","lastModifiedDate":"2022-10-21"},{"lineNumber":25,"author":{"gitId":"HowSuen"},"content":"        String userInput \u003d targetIndex.getOneBased() + \" \" + PREFIX_FINALS + nonEmptyScore;","lastModifiedDate":"2022-10-21"},{"lineNumber":26,"author":{"gitId":"HowSuen"},"content":"        EditGradeDescriptor descriptor \u003d new EditGradeDescriptorBuilder()","lastModifiedDate":"2022-10-21"},{"lineNumber":27,"author":{"gitId":"HowSuen"},"content":"                .withGrade(\"Finals\", nonEmptyScore).build();","lastModifiedDate":"2022-10-21"},{"lineNumber":28,"author":{"gitId":"HowSuen"},"content":"        GradeCommand expectedCommand \u003d new GradeCommand(INDEX_FIRST_STUDENT, descriptor);","lastModifiedDate":"2022-10-21"},{"lineNumber":29,"author":{"gitId":"HowSuen"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-21"},{"lineNumber":30,"author":{"gitId":"HowSuen"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":31,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":32,"author":{"gitId":"HowSuen"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":33,"author":{"gitId":"HowSuen"},"content":"    public void parse_missingCompulsoryField_failure() {","lastModifiedDate":"2022-10-21"},{"lineNumber":34,"author":{"gitId":"HowSuen"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, GradeCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-21"},{"lineNumber":35,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":36,"author":{"gitId":"HowSuen"},"content":"        // no parameters","lastModifiedDate":"2022-10-21"},{"lineNumber":37,"author":{"gitId":"HowSuen"},"content":"        assertParseFailure(parser, GradeCommand.COMMAND_WORD, expectedMessage);","lastModifiedDate":"2022-10-21"},{"lineNumber":38,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":39,"author":{"gitId":"HowSuen"},"content":"        // no index","lastModifiedDate":"2022-10-21"},{"lineNumber":40,"author":{"gitId":"HowSuen"},"content":"        assertParseFailure(parser, GradeCommand.COMMAND_WORD + \" \" + nonEmptyScore, expectedMessage);","lastModifiedDate":"2022-10-21"},{"lineNumber":41,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":42,"author":{"gitId":"HowSuen"},"content":"        // no score","lastModifiedDate":"2022-10-21"},{"lineNumber":43,"author":{"gitId":"HowSuen"},"content":"        assertParseFailure(parser, GradeCommand.COMMAND_WORD + \" \" + PREFIX_FINALS, expectedMessage);","lastModifiedDate":"2022-10-21"},{"lineNumber":44,"author":{"gitId":"HowSuen"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":45,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":46,"author":{"gitId":"HowSuen"},"content":"}","lastModifiedDate":"2022-10-21"}],"authorContributionMap":{"HowSuen":46}},{"path":"src/test/java/friday/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.logic.parser;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"HowSuen"},"content":"import static friday.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"HowSuen"},"content":"import static friday.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"jorrdansoh"},"content":"import static friday.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"kaij77"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":17,"author":{"gitId":"HowSuen"},"content":"import friday.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"darrtzj"},"content":"import friday.model.alias.Alias;","lastModifiedDate":"2022-10-23"},{"lineNumber":19,"author":{"gitId":"darrtzj"},"content":"import friday.model.alias.ReservedKeyword;","lastModifiedDate":"2022-10-23"},{"lineNumber":20,"author":{"gitId":"kaij77"},"content":"import friday.model.student.Consultation;","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"kaij77"},"content":"import friday.model.student.MasteryCheck;","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"kaij77"},"content":"import friday.model.student.Name;","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"kaij77"},"content":"import friday.model.student.TelegramHandle;","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"HowSuen"},"content":"import friday.model.tag.Tag;","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"kaij77"},"content":"    private static final String INVALID_TELEGRAMHANDLE \u003d \"+rachel\";","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"kaij77"},"content":"    private static final String VALID_TELEGRAMHANDLE \u003d \"r4chel_\";","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"kaij77"},"content":"    private static final LocalDate VALID_MASTERYCHECK \u003d LocalDate.of(2022, 9, 1);","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"kaij77"},"content":"    private static final LocalDate VALID_CONSULTATION \u003d LocalDate.parse(\"2022-08-17\");","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"darrtzj"},"content":"    private static final String INVALID_RESERVED_KEYWORD \u003d \"a\";","lastModifiedDate":"2022-10-23"},{"lineNumber":38,"author":{"gitId":"darrtzj"},"content":"    private static final String VALID_RESERVED_KEYWORD \u003d \"add\";","lastModifiedDate":"2022-10-23"},{"lineNumber":39,"author":{"gitId":"darrtzj"},"content":"    private static final String VALID_ALIAS \u003d \"ls\";","lastModifiedDate":"2022-10-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":57,"author":{"gitId":"jorrdansoh"},"content":"        assertEquals(INDEX_FIRST_STUDENT, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2022-10-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":60,"author":{"gitId":"jorrdansoh"},"content":"        assertEquals(INDEX_FIRST_STUDENT, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2022-10-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":88,"author":{"gitId":"jorrdansoh"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTelegramHandle(INVALID_TELEGRAMHANDLE));","lastModifiedDate":"2022-10-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"kaij77"},"content":"        TelegramHandle expectedTelegramHandle \u003d new TelegramHandle(VALID_TELEGRAMHANDLE);","lastModifiedDate":"2022-10-06"},{"lineNumber":94,"author":{"gitId":"jorrdansoh"},"content":"        assertEquals(expectedTelegramHandle, ParserUtil.parseTelegramHandle(VALID_TELEGRAMHANDLE));","lastModifiedDate":"2022-10-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"kaij77"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_TELEGRAMHANDLE + WHITESPACE;","lastModifiedDate":"2022-10-06"},{"lineNumber":100,"author":{"gitId":"kaij77"},"content":"        TelegramHandle expectedTelegramHandle \u003d new TelegramHandle(VALID_TELEGRAMHANDLE);","lastModifiedDate":"2022-10-06"},{"lineNumber":101,"author":{"gitId":"jorrdansoh"},"content":"        assertEquals(expectedTelegramHandle, ParserUtil.parseTelegramHandle(phoneWithWhitespace));","lastModifiedDate":"2022-10-06"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"kaij77"},"content":"        MasteryCheck expectedMasteryCheck \u003d new MasteryCheck(VALID_MASTERYCHECK);","lastModifiedDate":"2022-10-06"},{"lineNumber":107,"author":{"gitId":"jorrdansoh"},"content":"        assertEquals(expectedMasteryCheck, ParserUtil.parseMasteryCheck(VALID_MASTERYCHECK.toString()));","lastModifiedDate":"2022-10-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"kaij77"},"content":"        Consultation expectedConsultation \u003d new Consultation(VALID_CONSULTATION);","lastModifiedDate":"2022-10-06"},{"lineNumber":113,"author":{"gitId":"jorrdansoh"},"content":"        assertEquals(expectedConsultation, ParserUtil.parseConsultation(VALID_CONSULTATION.toString()));","lastModifiedDate":"2022-10-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":161,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":162,"author":{"gitId":"darrtzj"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":163,"author":{"gitId":"darrtzj"},"content":"    public void parseReservedKeywords_invalidValue_throwsParseException() {","lastModifiedDate":"2022-10-23"},{"lineNumber":164,"author":{"gitId":"darrtzj"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseReservedKeyword(INVALID_RESERVED_KEYWORD));","lastModifiedDate":"2022-10-23"},{"lineNumber":165,"author":{"gitId":"darrtzj"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":166,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":167,"author":{"gitId":"darrtzj"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":168,"author":{"gitId":"darrtzj"},"content":"    public void parseReservedKeywords_validValue_returnsReservedKeyword() throws Exception {","lastModifiedDate":"2022-10-23"},{"lineNumber":169,"author":{"gitId":"darrtzj"},"content":"        ReservedKeyword actualKeyword \u003d ParserUtil.parseReservedKeyword(VALID_RESERVED_KEYWORD);","lastModifiedDate":"2022-10-23"},{"lineNumber":170,"author":{"gitId":"darrtzj"},"content":"        ReservedKeyword expectedKeyword \u003d new ReservedKeyword(VALID_RESERVED_KEYWORD);","lastModifiedDate":"2022-10-23"},{"lineNumber":171,"author":{"gitId":"darrtzj"},"content":"        assertEquals(expectedKeyword, actualKeyword);","lastModifiedDate":"2022-10-23"},{"lineNumber":172,"author":{"gitId":"darrtzj"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":173,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":174,"author":{"gitId":"darrtzj"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":175,"author":{"gitId":"darrtzj"},"content":"    public void parseAlias_validValue_returnsAlias() {","lastModifiedDate":"2022-10-23"},{"lineNumber":176,"author":{"gitId":"darrtzj"},"content":"        Alias actualAlias \u003d ParserUtil.parseAlias(VALID_ALIAS);","lastModifiedDate":"2022-10-23"},{"lineNumber":177,"author":{"gitId":"darrtzj"},"content":"        Alias expectedAlias \u003d new Alias(VALID_ALIAS);","lastModifiedDate":"2022-10-23"},{"lineNumber":178,"author":{"gitId":"darrtzj"},"content":"        assertEquals(expectedAlias, actualAlias);","lastModifiedDate":"2022-10-23"},{"lineNumber":179,"author":{"gitId":"darrtzj"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"jorrdansoh":8,"darrtzj":24,"kaij77":14,"-":129,"HowSuen":5}},{"path":"src/test/java/friday/logic/parser/RemarkCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.logic.parser;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":3,"author":{"gitId":"HowSuen"},"content":"import static friday.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"HowSuen"},"content":"import static friday.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"HowSuen"},"content":"import static friday.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"HowSuen"},"content":"import static friday.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"jorrdansoh"},"content":"import static friday.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-09-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":11,"author":{"gitId":"HowSuen"},"content":"import friday.commons.core.index.Index;","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"HowSuen"},"content":"import friday.logic.commands.RemarkCommand;","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"kaij77"},"content":"import friday.model.student.Remark;","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"// @@author HowSuen-reused","lastModifiedDate":"2022-11-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"// Reused from https://nus-cs2103-ay2223s1.github.io/tp/tutorials/AddRemark.html","lastModifiedDate":"2022-11-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"// with minor modifications","lastModifiedDate":"2022-11-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class RemarkCommandParserTest {","lastModifiedDate":"2022-09-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private RemarkCommandParser parser \u003d new RemarkCommandParser();","lastModifiedDate":"2022-09-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final String nonEmptyRemark \u003d \"Some remark.\";","lastModifiedDate":"2022-09-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-09-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_indexSpecified_success() {","lastModifiedDate":"2022-09-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // have remark","lastModifiedDate":"2022-09-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_STUDENT;","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + \" \" + PREFIX_REMARK + nonEmptyRemark;","lastModifiedDate":"2022-09-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        RemarkCommand expectedCommand \u003d new RemarkCommand(INDEX_FIRST_STUDENT, new Remark(nonEmptyRemark));","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-09-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // no remark","lastModifiedDate":"2022-09-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + \" \" + PREFIX_REMARK;","lastModifiedDate":"2022-09-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new RemarkCommand(INDEX_FIRST_STUDENT, new Remark(\"\"));","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-09-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-09-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void parse_missingCompulsoryField_failure() {","lastModifiedDate":"2022-09-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, RemarkCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-09-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // no parameters","lastModifiedDate":"2022-09-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, RemarkCommand.COMMAND_WORD, expectedMessage);","lastModifiedDate":"2022-09-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // no index","lastModifiedDate":"2022-09-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, RemarkCommand.COMMAND_WORD + \" \" + nonEmptyRemark, expectedMessage);","lastModifiedDate":"2022-09-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-09-13"}],"authorContributionMap":{"jorrdansoh":1,"kaij77":1,"-":38,"HowSuen":7}},{"path":"src/test/java/friday/logic/parser/UnaliasCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"darrtzj"},"content":"package friday.logic.parser;","lastModifiedDate":"2022-10-23"},{"lineNumber":2,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":3,"author":{"gitId":"darrtzj"},"content":"import static friday.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-23"},{"lineNumber":4,"author":{"gitId":"darrtzj"},"content":"import static friday.logic.parser.CliSyntax.PREFIX_ALIAS;","lastModifiedDate":"2022-10-23"},{"lineNumber":5,"author":{"gitId":"darrtzj"},"content":"import static friday.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-23"},{"lineNumber":6,"author":{"gitId":"darrtzj"},"content":"import static friday.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-23"},{"lineNumber":7,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":8,"author":{"gitId":"darrtzj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-23"},{"lineNumber":9,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":10,"author":{"gitId":"darrtzj"},"content":"import friday.logic.commands.UnaliasCommand;","lastModifiedDate":"2022-10-23"},{"lineNumber":11,"author":{"gitId":"darrtzj"},"content":"import friday.model.alias.Alias;","lastModifiedDate":"2022-10-23"},{"lineNumber":12,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":13,"author":{"gitId":"darrtzj"},"content":"public class UnaliasCommandParserTest {","lastModifiedDate":"2022-10-23"},{"lineNumber":14,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":15,"author":{"gitId":"darrtzj"},"content":"    private static final Alias VALID_ALIAS \u003d new Alias(\"ls\");","lastModifiedDate":"2022-10-25"},{"lineNumber":16,"author":{"gitId":"darrtzj"},"content":"    private static final String INVALID_PREFIX \u003d \"g/\";","lastModifiedDate":"2022-10-23"},{"lineNumber":17,"author":{"gitId":"darrtzj"},"content":"    private static final String VALID_ARGS \u003d \" \" + PREFIX_ALIAS + VALID_ALIAS;","lastModifiedDate":"2022-10-23"},{"lineNumber":18,"author":{"gitId":"darrtzj"},"content":"    private static final String INVALID_ARGS \u003d \" \" + INVALID_PREFIX + VALID_ALIAS;","lastModifiedDate":"2022-10-23"},{"lineNumber":19,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":20,"author":{"gitId":"darrtzj"},"content":"    private UnaliasCommandParser parser \u003d new UnaliasCommandParser();","lastModifiedDate":"2022-10-23"},{"lineNumber":21,"author":{"gitId":"darrtzj"},"content":"    private UnaliasCommand expectedCommand \u003d new UnaliasCommand(VALID_ALIAS);","lastModifiedDate":"2022-10-25"},{"lineNumber":22,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":23,"author":{"gitId":"darrtzj"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":24,"author":{"gitId":"darrtzj"},"content":"    public void parse_validArgs_returnsUnaliasCommand() {","lastModifiedDate":"2022-10-23"},{"lineNumber":25,"author":{"gitId":"darrtzj"},"content":"        assertParseSuccess(parser, VALID_ARGS, expectedCommand);","lastModifiedDate":"2022-10-23"},{"lineNumber":26,"author":{"gitId":"darrtzj"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":27,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":28,"author":{"gitId":"darrtzj"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":29,"author":{"gitId":"darrtzj"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2022-10-23"},{"lineNumber":30,"author":{"gitId":"darrtzj"},"content":"        assertParseFailure(parser, INVALID_ARGS, String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-23"},{"lineNumber":31,"author":{"gitId":"darrtzj"},"content":"                UnaliasCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-23"},{"lineNumber":32,"author":{"gitId":"darrtzj"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":33,"author":{"gitId":"darrtzj"},"content":"}","lastModifiedDate":"2022-10-23"}],"authorContributionMap":{"darrtzj":33}},{"path":"src/test/java/friday/model/FridayTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.model;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"HowSuen"},"content":"import static friday.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"darrtzj"},"content":"import java.util.Map;","lastModifiedDate":"2022-10-23"},{"lineNumber":13,"author":{"gitId":"darrtzj"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"HowSuen"},"content":"import friday.logic.commands.CommandTestUtil;","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"darrtzj"},"content":"import friday.model.alias.Alias;","lastModifiedDate":"2022-10-25"},{"lineNumber":19,"author":{"gitId":"darrtzj"},"content":"import friday.model.alias.ReservedKeyword;","lastModifiedDate":"2022-10-25"},{"lineNumber":20,"author":{"gitId":"kaij77"},"content":"import friday.model.student.Student;","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"jorrdansoh"},"content":"import friday.model.student.exceptions.DuplicateStudentException;","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"jorrdansoh"},"content":"import friday.testutil.StudentBuilder;","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"jorrdansoh"},"content":"import friday.testutil.TypicalStudents;","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"kaij77"},"content":"public class FridayTest {","lastModifiedDate":"2022-11-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"Yuvaraj0702"},"content":"    private final Friday friday \u003d new Friday();","lastModifiedDate":"2022-10-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"Yuvaraj0702"},"content":"        assertEquals(Collections.emptyList(), friday.getStudentList());","lastModifiedDate":"2022-10-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"Yuvaraj0702"},"content":"        assertThrows(NullPointerException.class, () -\u003e friday.resetData(null));","lastModifiedDate":"2022-10-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"Yuvaraj0702"},"content":"    public void resetData_withValidReadOnlyFriday_replacesData() {","lastModifiedDate":"2022-10-25"},{"lineNumber":43,"author":{"gitId":"Yuvaraj0702"},"content":"        Friday newData \u003d TypicalStudents.getTypicalFriday();","lastModifiedDate":"2022-10-25"},{"lineNumber":44,"author":{"gitId":"Yuvaraj0702"},"content":"        friday.resetData(newData);","lastModifiedDate":"2022-10-25"},{"lineNumber":45,"author":{"gitId":"Yuvaraj0702"},"content":"        assertEquals(newData, friday);","lastModifiedDate":"2022-10-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"jorrdansoh"},"content":"    public void resetData_withDuplicateStudents_throwsDuplicateStudentException() {","lastModifiedDate":"2022-10-20"},{"lineNumber":50,"author":{"gitId":"jorrdansoh"},"content":"        // Two students with the same identity fields","lastModifiedDate":"2022-10-20"},{"lineNumber":51,"author":{"gitId":"jorrdansoh"},"content":"        Student editedAlice \u003d new StudentBuilder(TypicalStudents.ALICE)","lastModifiedDate":"2022-10-20"},{"lineNumber":52,"author":{"gitId":"kaij77"},"content":"                .withMasteryCheck(CommandTestUtil.VALID_MASTERYCHECK_DATE_BOB, false)","lastModifiedDate":"2022-11-06"},{"lineNumber":53,"author":{"gitId":"HowSuen"},"content":"                .withTags(CommandTestUtil.VALID_TAG_HUSBAND)","lastModifiedDate":"2022-10-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"jorrdansoh"},"content":"        List\u003cStudent\u003e newStudents \u003d Arrays.asList(TypicalStudents.ALICE, editedAlice);","lastModifiedDate":"2022-10-06"},{"lineNumber":56,"author":{"gitId":"Yuvaraj0702"},"content":"        FridayStub newData \u003d new FridayStub(newStudents);","lastModifiedDate":"2022-10-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":58,"author":{"gitId":"Yuvaraj0702"},"content":"        assertThrows(DuplicateStudentException.class, () -\u003e friday.resetData(newData));","lastModifiedDate":"2022-10-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"jorrdansoh"},"content":"    public void hasStudent_nullStudent_throwsNullPointerException() {","lastModifiedDate":"2022-10-20"},{"lineNumber":63,"author":{"gitId":"Yuvaraj0702"},"content":"        assertThrows(NullPointerException.class, () -\u003e friday.hasStudent(null));","lastModifiedDate":"2022-10-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"Yuvaraj0702"},"content":"    public void hasStudent_studentNotInFriday_returnsFalse() {","lastModifiedDate":"2022-10-25"},{"lineNumber":68,"author":{"gitId":"Yuvaraj0702"},"content":"        assertFalse(friday.hasStudent(TypicalStudents.ALICE));","lastModifiedDate":"2022-10-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"Yuvaraj0702"},"content":"    public void hasStudent_studentInFriday_returnsTrue() {","lastModifiedDate":"2022-10-25"},{"lineNumber":73,"author":{"gitId":"Yuvaraj0702"},"content":"        friday.addStudent(TypicalStudents.ALICE);","lastModifiedDate":"2022-10-25"},{"lineNumber":74,"author":{"gitId":"Yuvaraj0702"},"content":"        assertTrue(friday.hasStudent(TypicalStudents.ALICE));","lastModifiedDate":"2022-10-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"Yuvaraj0702"},"content":"    public void hasStudent_studentWithSameIdentityFieldsInFriday_returnsTrue() {","lastModifiedDate":"2022-10-25"},{"lineNumber":79,"author":{"gitId":"Yuvaraj0702"},"content":"        friday.addStudent(TypicalStudents.ALICE);","lastModifiedDate":"2022-10-25"},{"lineNumber":80,"author":{"gitId":"jorrdansoh"},"content":"        Student editedAlice \u003d new StudentBuilder(TypicalStudents.ALICE)","lastModifiedDate":"2022-10-20"},{"lineNumber":81,"author":{"gitId":"kaij77"},"content":"                .withMasteryCheck(CommandTestUtil.VALID_MASTERYCHECK_DATE_BOB, false)","lastModifiedDate":"2022-11-06"},{"lineNumber":82,"author":{"gitId":"HowSuen"},"content":"                .withTags(CommandTestUtil.VALID_TAG_HUSBAND)","lastModifiedDate":"2022-10-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"Yuvaraj0702"},"content":"        assertTrue(friday.hasStudent(editedAlice));","lastModifiedDate":"2022-10-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":88,"author":{"gitId":"jorrdansoh"},"content":"    public void getStudentList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-20"},{"lineNumber":89,"author":{"gitId":"Yuvaraj0702"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e friday.getStudentList().remove(0));","lastModifiedDate":"2022-10-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":93,"author":{"gitId":"Yuvaraj0702"},"content":"     * A stub ReadOnlyFriday whose students list can violate interface constraints.","lastModifiedDate":"2022-10-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"Yuvaraj0702"},"content":"    private static class FridayStub implements ReadOnlyFriday {","lastModifiedDate":"2022-10-25"},{"lineNumber":96,"author":{"gitId":"kaij77"},"content":"        private final ObservableList\u003cStudent\u003e students \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":98,"author":{"gitId":"Yuvaraj0702"},"content":"        FridayStub(Collection\u003cStudent\u003e students) {","lastModifiedDate":"2022-10-25"},{"lineNumber":99,"author":{"gitId":"kaij77"},"content":"            this.students.setAll(students);","lastModifiedDate":"2022-10-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":103,"author":{"gitId":"jorrdansoh"},"content":"        public ObservableList\u003cStudent\u003e getStudentList() {","lastModifiedDate":"2022-10-20"},{"lineNumber":104,"author":{"gitId":"kaij77"},"content":"            return students;","lastModifiedDate":"2022-10-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":106,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":107,"author":{"gitId":"darrtzj"},"content":"        @Override","lastModifiedDate":"2022-10-23"},{"lineNumber":108,"author":{"gitId":"darrtzj"},"content":"        public Set\u003cMap.Entry\u003cAlias, ReservedKeyword\u003e\u003e getAliasMap() {","lastModifiedDate":"2022-10-25"},{"lineNumber":109,"author":{"gitId":"darrtzj"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-23"},{"lineNumber":110,"author":{"gitId":"darrtzj"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"jorrdansoh":11,"Yuvaraj0702":22,"darrtzj":9,"kaij77":7,"-":59,"HowSuen":5}},{"path":"src/test/java/friday/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.model;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"Yuvaraj0702"},"content":"import static friday.model.Model.PREDICATE_SHOW_ALL_STUDENTS;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"HowSuen"},"content":"import static friday.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"HowSuen"},"content":"import friday.commons.core.GuiSettings;","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"kaij77"},"content":"import friday.model.student.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"Yuvaraj0702"},"content":"import friday.testutil.FridayBuilder;","lastModifiedDate":"2022-10-23"},{"lineNumber":18,"author":{"gitId":"jorrdansoh"},"content":"import friday.testutil.TypicalStudents;","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"darrtzj"},"content":"        assertEquals(new Friday(), new Friday(modelManager.getFriday()));","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"Yuvaraj0702"},"content":"        userPrefs.setFridayFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2022-10-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"Yuvaraj0702"},"content":"        userPrefs.setFridayFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2022-10-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2022-10-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"jorrdansoh"},"content":"    public void setFridayFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2022-11-05"},{"lineNumber":64,"author":{"gitId":"darrtzj"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setFridayFilePath(null));","lastModifiedDate":"2022-10-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"jorrdansoh"},"content":"    public void setFridayFilePath_validPath_setsFridayFilePath() {","lastModifiedDate":"2022-11-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"darrtzj"},"content":"        modelManager.setFridayFilePath(path);","lastModifiedDate":"2022-10-06"},{"lineNumber":71,"author":{"gitId":"darrtzj"},"content":"        assertEquals(path, modelManager.getFridayFilePath());","lastModifiedDate":"2022-10-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"jorrdansoh"},"content":"    public void hasStudent_nullStudent_throwsNullPointerException() {","lastModifiedDate":"2022-10-20"},{"lineNumber":76,"author":{"gitId":"jorrdansoh"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasStudent(null));","lastModifiedDate":"2022-10-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"jorrdansoh"},"content":"    public void hasStudent_studentNotInFriday_returnsFalse() {","lastModifiedDate":"2022-11-05"},{"lineNumber":81,"author":{"gitId":"jorrdansoh"},"content":"        assertFalse(modelManager.hasStudent(TypicalStudents.ALICE));","lastModifiedDate":"2022-10-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"jorrdansoh"},"content":"    public void hasStudent_studentInFriday_returnsTrue() {","lastModifiedDate":"2022-11-05"},{"lineNumber":86,"author":{"gitId":"jorrdansoh"},"content":"        modelManager.addStudent(TypicalStudents.ALICE);","lastModifiedDate":"2022-10-06"},{"lineNumber":87,"author":{"gitId":"jorrdansoh"},"content":"        assertTrue(modelManager.hasStudent(TypicalStudents.ALICE));","lastModifiedDate":"2022-10-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":91,"author":{"gitId":"jorrdansoh"},"content":"    public void getFilteredStudentList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-20"},{"lineNumber":92,"author":{"gitId":"jorrdansoh"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getStudentList().remove(0));","lastModifiedDate":"2022-10-20"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":97,"author":{"gitId":"Yuvaraj0702"},"content":"        Friday addressBook \u003d new FridayBuilder().withStudent(TypicalStudents.ALICE)","lastModifiedDate":"2022-10-23"},{"lineNumber":98,"author":{"gitId":"jorrdansoh"},"content":"                .withStudent(TypicalStudents.BENSON).build();","lastModifiedDate":"2022-10-20"},{"lineNumber":99,"author":{"gitId":"jorrdansoh"},"content":"        Friday differentFriday \u003d new Friday();","lastModifiedDate":"2022-11-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"jorrdansoh"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentFriday, userPrefs)));","lastModifiedDate":"2022-11-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"jorrdansoh"},"content":"        String[] keywords \u003d TypicalStudents.ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2022-10-06"},{"lineNumber":121,"author":{"gitId":"jorrdansoh"},"content":"        modelManager.updateFilteredStudentList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2022-10-06"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":125,"author":{"gitId":"Yuvaraj0702"},"content":"        modelManager.updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2022-10-09"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"Yuvaraj0702"},"content":"        differentUserPrefs.setFridayFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2022-10-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"jorrdansoh":17,"Yuvaraj0702":7,"darrtzj":4,"kaij77":1,"-":100,"HowSuen":3}},{"path":"src/test/java/friday/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.model;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"HowSuen"},"content":"import static friday.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"jorrdansoh"},"content":"    public void setFridayFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2022-11-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"Yuvaraj0702"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setFridayFilePath(null));","lastModifiedDate":"2022-10-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"jorrdansoh":1,"Yuvaraj0702":1,"-":17,"HowSuen":2}},{"path":"src/test/java/friday/model/alias/AliasMapTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"darrtzj"},"content":"package friday.model.alias;","lastModifiedDate":"2022-10-23"},{"lineNumber":2,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":3,"author":{"gitId":"darrtzj"},"content":"import static friday.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-23"},{"lineNumber":4,"author":{"gitId":"darrtzj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-23"},{"lineNumber":5,"author":{"gitId":"darrtzj"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-23"},{"lineNumber":6,"author":{"gitId":"darrtzj"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-23"},{"lineNumber":7,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":8,"author":{"gitId":"darrtzj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-23"},{"lineNumber":9,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":10,"author":{"gitId":"darrtzj"},"content":"import friday.logic.commands.ListCommand;","lastModifiedDate":"2022-10-23"},{"lineNumber":11,"author":{"gitId":"darrtzj"},"content":"import friday.model.alias.exceptions.AliasNotFoundException;","lastModifiedDate":"2022-10-23"},{"lineNumber":12,"author":{"gitId":"darrtzj"},"content":"import friday.model.alias.exceptions.DuplicateAliasException;","lastModifiedDate":"2022-10-23"},{"lineNumber":13,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":14,"author":{"gitId":"darrtzj"},"content":"public class AliasMapTest {","lastModifiedDate":"2022-10-23"},{"lineNumber":15,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":16,"author":{"gitId":"darrtzj"},"content":"    private static final Alias VALID_ALIAS \u003d new Alias(\"ls\");","lastModifiedDate":"2022-10-25"},{"lineNumber":17,"author":{"gitId":"darrtzj"},"content":"    private static final ReservedKeyword VALID_KEYWORD \u003d new ReservedKeyword(ListCommand.COMMAND_WORD);","lastModifiedDate":"2022-10-25"},{"lineNumber":18,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":19,"author":{"gitId":"darrtzj"},"content":"    private final AliasMap aliasMap \u003d new AliasMap();","lastModifiedDate":"2022-10-23"},{"lineNumber":20,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":21,"author":{"gitId":"darrtzj"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":22,"author":{"gitId":"darrtzj"},"content":"    public void contains_nullAlias_throwsNullPointerException() {","lastModifiedDate":"2022-10-23"},{"lineNumber":23,"author":{"gitId":"darrtzj"},"content":"        assertThrows(NullPointerException.class, () -\u003e aliasMap.contains(null));","lastModifiedDate":"2022-10-23"},{"lineNumber":24,"author":{"gitId":"darrtzj"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":25,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":26,"author":{"gitId":"darrtzj"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":27,"author":{"gitId":"darrtzj"},"content":"    public void contains_aliasNotInMap_returnsFalse() {","lastModifiedDate":"2022-10-23"},{"lineNumber":28,"author":{"gitId":"darrtzj"},"content":"        assertFalse(aliasMap.contains(VALID_ALIAS));","lastModifiedDate":"2022-10-23"},{"lineNumber":29,"author":{"gitId":"darrtzj"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":30,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":31,"author":{"gitId":"darrtzj"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":32,"author":{"gitId":"darrtzj"},"content":"    public void contains_aliasInMap_returnsTrue() {","lastModifiedDate":"2022-10-23"},{"lineNumber":33,"author":{"gitId":"darrtzj"},"content":"        aliasMap.add(VALID_ALIAS, VALID_KEYWORD);","lastModifiedDate":"2022-10-25"},{"lineNumber":34,"author":{"gitId":"darrtzj"},"content":"        assertTrue(aliasMap.contains(VALID_ALIAS));","lastModifiedDate":"2022-10-23"},{"lineNumber":35,"author":{"gitId":"darrtzj"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":36,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":37,"author":{"gitId":"darrtzj"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":38,"author":{"gitId":"darrtzj"},"content":"    public void add_nullAlias_throwsNullPointerException() {","lastModifiedDate":"2022-10-23"},{"lineNumber":39,"author":{"gitId":"darrtzj"},"content":"        assertThrows(NullPointerException.class, () -\u003e aliasMap.add(null, VALID_KEYWORD));","lastModifiedDate":"2022-10-25"},{"lineNumber":40,"author":{"gitId":"darrtzj"},"content":"        assertThrows(NullPointerException.class, () -\u003e aliasMap.add(VALID_ALIAS, null));","lastModifiedDate":"2022-10-25"},{"lineNumber":41,"author":{"gitId":"darrtzj"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":42,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":43,"author":{"gitId":"darrtzj"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":44,"author":{"gitId":"darrtzj"},"content":"    public void add_duplicateAlias_throwsDuplicateAliasException() {","lastModifiedDate":"2022-10-23"},{"lineNumber":45,"author":{"gitId":"darrtzj"},"content":"        aliasMap.add(VALID_ALIAS, VALID_KEYWORD);","lastModifiedDate":"2022-10-25"},{"lineNumber":46,"author":{"gitId":"darrtzj"},"content":"        assertThrows(DuplicateAliasException.class, () -\u003e aliasMap.add(VALID_ALIAS, VALID_KEYWORD));","lastModifiedDate":"2022-10-25"},{"lineNumber":47,"author":{"gitId":"darrtzj"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":48,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":49,"author":{"gitId":"darrtzj"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":50,"author":{"gitId":"darrtzj"},"content":"    public void remove_nullAlias_throwsNullPointerException() {","lastModifiedDate":"2022-10-23"},{"lineNumber":51,"author":{"gitId":"darrtzj"},"content":"        assertThrows(NullPointerException.class, () -\u003e aliasMap.remove(null));","lastModifiedDate":"2022-10-23"},{"lineNumber":52,"author":{"gitId":"darrtzj"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":53,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":54,"author":{"gitId":"darrtzj"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":55,"author":{"gitId":"darrtzj"},"content":"    public void remove_aliasDoesNotExist_throwsAliasNotFoundException() {","lastModifiedDate":"2022-10-23"},{"lineNumber":56,"author":{"gitId":"darrtzj"},"content":"        assertThrows(AliasNotFoundException.class, () -\u003e aliasMap.remove(VALID_ALIAS));","lastModifiedDate":"2022-10-25"},{"lineNumber":57,"author":{"gitId":"darrtzj"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":58,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":59,"author":{"gitId":"darrtzj"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":60,"author":{"gitId":"darrtzj"},"content":"    public void remove_existingAlias_removesAlias() {","lastModifiedDate":"2022-10-23"},{"lineNumber":61,"author":{"gitId":"darrtzj"},"content":"        aliasMap.add(VALID_ALIAS, VALID_KEYWORD);","lastModifiedDate":"2022-10-25"},{"lineNumber":62,"author":{"gitId":"darrtzj"},"content":"        aliasMap.remove(VALID_ALIAS);","lastModifiedDate":"2022-10-25"},{"lineNumber":63,"author":{"gitId":"darrtzj"},"content":"        AliasMap expectedAliasMap \u003d new AliasMap();","lastModifiedDate":"2022-10-23"},{"lineNumber":64,"author":{"gitId":"darrtzj"},"content":"        assertEquals(expectedAliasMap, aliasMap);","lastModifiedDate":"2022-10-23"},{"lineNumber":65,"author":{"gitId":"darrtzj"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":66,"author":{"gitId":"darrtzj"},"content":"}","lastModifiedDate":"2022-10-23"},{"lineNumber":67,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"}],"authorContributionMap":{"darrtzj":67}},{"path":"src/test/java/friday/model/alias/AliasTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"darrtzj"},"content":"package friday.model.alias;","lastModifiedDate":"2022-10-23"},{"lineNumber":2,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":3,"author":{"gitId":"darrtzj"},"content":"import static friday.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-23"},{"lineNumber":4,"author":{"gitId":"darrtzj"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-23"},{"lineNumber":5,"author":{"gitId":"darrtzj"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-23"},{"lineNumber":6,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":7,"author":{"gitId":"darrtzj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-23"},{"lineNumber":8,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":9,"author":{"gitId":"darrtzj"},"content":"import friday.logic.commands.AddCommand;","lastModifiedDate":"2022-10-23"},{"lineNumber":10,"author":{"gitId":"darrtzj"},"content":"import friday.logic.commands.DeleteCommand;","lastModifiedDate":"2022-10-23"},{"lineNumber":11,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":12,"author":{"gitId":"darrtzj"},"content":"public class AliasTest {","lastModifiedDate":"2022-10-23"},{"lineNumber":13,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":14,"author":{"gitId":"darrtzj"},"content":"    private static final String VALID_ALIAS_1 \u003d \"ls\";","lastModifiedDate":"2022-10-23"},{"lineNumber":15,"author":{"gitId":"darrtzj"},"content":"    private static final String VALID_ALIAS_2 \u003d \"a\";","lastModifiedDate":"2022-10-23"},{"lineNumber":16,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":17,"author":{"gitId":"darrtzj"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":18,"author":{"gitId":"darrtzj"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-23"},{"lineNumber":19,"author":{"gitId":"darrtzj"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Alias(null));","lastModifiedDate":"2022-10-23"},{"lineNumber":20,"author":{"gitId":"darrtzj"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":21,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":22,"author":{"gitId":"darrtzj"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":23,"author":{"gitId":"darrtzj"},"content":"    public void isValidAlias() {","lastModifiedDate":"2022-10-23"},{"lineNumber":24,"author":{"gitId":"darrtzj"},"content":"        // null alias","lastModifiedDate":"2022-10-23"},{"lineNumber":25,"author":{"gitId":"darrtzj"},"content":"        assertThrows(NullPointerException.class, () -\u003e Alias.isValidAlias(null));","lastModifiedDate":"2022-10-23"},{"lineNumber":26,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":27,"author":{"gitId":"darrtzj"},"content":"        // invalid alias","lastModifiedDate":"2022-10-23"},{"lineNumber":28,"author":{"gitId":"darrtzj"},"content":"        assertFalse(Alias.isValidAlias(AddCommand.COMMAND_WORD)); // alias in reserved keyword","lastModifiedDate":"2022-10-25"},{"lineNumber":29,"author":{"gitId":"darrtzj"},"content":"        assertFalse(Alias.isValidAlias(DeleteCommand.COMMAND_WORD)); // alias in reserved keyword","lastModifiedDate":"2022-10-25"},{"lineNumber":30,"author":{"gitId":"darrtzj"},"content":"        assertFalse(Alias.isValidAlias(\"\")); // alias is an empty string","lastModifiedDate":"2022-11-04"},{"lineNumber":31,"author":{"gitId":"darrtzj"},"content":"        assertFalse(Alias.isValidAlias(\"hello world\")); // alias contains more than 1 word","lastModifiedDate":"2022-11-04"},{"lineNumber":32,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":33,"author":{"gitId":"darrtzj"},"content":"        // valid name","lastModifiedDate":"2022-10-23"},{"lineNumber":34,"author":{"gitId":"darrtzj"},"content":"        assertTrue(Alias.isValidAlias(VALID_ALIAS_1)); // valid alias","lastModifiedDate":"2022-10-25"},{"lineNumber":35,"author":{"gitId":"darrtzj"},"content":"        assertTrue(Alias.isValidAlias(VALID_ALIAS_2)); // valid alias","lastModifiedDate":"2022-10-25"},{"lineNumber":36,"author":{"gitId":"darrtzj"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":37,"author":{"gitId":"darrtzj"},"content":"}","lastModifiedDate":"2022-10-23"},{"lineNumber":38,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"}],"authorContributionMap":{"darrtzj":38}},{"path":"src/test/java/friday/model/alias/ReservedKeywordTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"darrtzj"},"content":"package friday.model.alias;","lastModifiedDate":"2022-10-23"},{"lineNumber":2,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":3,"author":{"gitId":"darrtzj"},"content":"import static friday.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-23"},{"lineNumber":4,"author":{"gitId":"darrtzj"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-23"},{"lineNumber":5,"author":{"gitId":"darrtzj"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-23"},{"lineNumber":6,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":7,"author":{"gitId":"darrtzj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-23"},{"lineNumber":8,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":9,"author":{"gitId":"darrtzj"},"content":"import friday.logic.commands.AddCommand;","lastModifiedDate":"2022-10-23"},{"lineNumber":10,"author":{"gitId":"darrtzj"},"content":"import friday.logic.commands.DeleteCommand;","lastModifiedDate":"2022-10-23"},{"lineNumber":11,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":12,"author":{"gitId":"darrtzj"},"content":"public class ReservedKeywordTest {","lastModifiedDate":"2022-10-23"},{"lineNumber":13,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":14,"author":{"gitId":"darrtzj"},"content":"    private static final String INVALID_RESERVED_KEYWORD_1 \u003d \"\";","lastModifiedDate":"2022-10-23"},{"lineNumber":15,"author":{"gitId":"darrtzj"},"content":"    private static final String INVALID_RESERVED_KEYWORD_2 \u003d \"ad\";","lastModifiedDate":"2022-10-23"},{"lineNumber":16,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":17,"author":{"gitId":"darrtzj"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":18,"author":{"gitId":"darrtzj"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-23"},{"lineNumber":19,"author":{"gitId":"darrtzj"},"content":"        assertThrows(NullPointerException.class, () -\u003e new ReservedKeyword(null));","lastModifiedDate":"2022-10-23"},{"lineNumber":20,"author":{"gitId":"darrtzj"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":21,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":22,"author":{"gitId":"darrtzj"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":23,"author":{"gitId":"darrtzj"},"content":"    public void isValidReservedKeyword() {","lastModifiedDate":"2022-10-23"},{"lineNumber":24,"author":{"gitId":"darrtzj"},"content":"        // null reserved keyword","lastModifiedDate":"2022-10-23"},{"lineNumber":25,"author":{"gitId":"darrtzj"},"content":"        assertThrows(NullPointerException.class, () -\u003e ReservedKeyword.isValidReservedKeyword(null));","lastModifiedDate":"2022-10-23"},{"lineNumber":26,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":27,"author":{"gitId":"darrtzj"},"content":"        // invalid reserved keyword","lastModifiedDate":"2022-10-23"},{"lineNumber":28,"author":{"gitId":"darrtzj"},"content":"        assertFalse(ReservedKeyword.isValidReservedKeyword(INVALID_RESERVED_KEYWORD_1)); // empty string","lastModifiedDate":"2022-10-23"},{"lineNumber":29,"author":{"gitId":"darrtzj"},"content":"        assertFalse(ReservedKeyword.isValidReservedKeyword(INVALID_RESERVED_KEYWORD_2)); // non-empty invalid string","lastModifiedDate":"2022-10-23"},{"lineNumber":30,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":31,"author":{"gitId":"darrtzj"},"content":"        // valid reserved keyword","lastModifiedDate":"2022-10-23"},{"lineNumber":32,"author":{"gitId":"darrtzj"},"content":"        assertTrue(ReservedKeyword.isValidReservedKeyword(AddCommand.COMMAND_WORD)); // valid string","lastModifiedDate":"2022-10-23"},{"lineNumber":33,"author":{"gitId":"darrtzj"},"content":"        assertTrue(ReservedKeyword.isValidReservedKeyword(DeleteCommand.COMMAND_WORD)); // valid string","lastModifiedDate":"2022-10-23"},{"lineNumber":34,"author":{"gitId":"darrtzj"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":35,"author":{"gitId":"darrtzj"},"content":"}","lastModifiedDate":"2022-10-23"},{"lineNumber":36,"author":{"gitId":"darrtzj"},"content":"","lastModifiedDate":"2022-10-23"}],"authorContributionMap":{"darrtzj":36}},{"path":"src/test/java/friday/model/grade/GradeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.model.grade;","lastModifiedDate":"2022-10-21"},{"lineNumber":2,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":3,"author":{"gitId":"HowSuen"},"content":"import static friday.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-25"},{"lineNumber":4,"author":{"gitId":"HowSuen"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"HowSuen"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"HowSuen"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"HowSuen"},"content":"import friday.model.grades.Grade;","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"HowSuen"},"content":"public class GradeTest {","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"HowSuen"},"content":"    private static final String VALID_SCORE_1 \u003d \"0\";","lastModifiedDate":"2022-10-25"},{"lineNumber":14,"author":{"gitId":"HowSuen"},"content":"    private static final String VALID_SCORE_2 \u003d \"100\";","lastModifiedDate":"2022-10-25"},{"lineNumber":15,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":16,"author":{"gitId":"HowSuen"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":17,"author":{"gitId":"HowSuen"},"content":"    public void equals() {","lastModifiedDate":"2022-10-21"},{"lineNumber":18,"author":{"gitId":"HowSuen"},"content":"        Grade grade \u003d new Grade(\"RA1\", \"69.99\");","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"HowSuen"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"HowSuen"},"content":"        assertTrue(grade.equals(grade));","lastModifiedDate":"2022-10-21"},{"lineNumber":22,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":23,"author":{"gitId":"HowSuen"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"jorrdansoh"},"content":"        Grade gradeCopy \u003d new Grade(grade.getExamName(), grade.getScore());","lastModifiedDate":"2022-10-31"},{"lineNumber":25,"author":{"gitId":"HowSuen"},"content":"        assertTrue(grade.equals(gradeCopy));","lastModifiedDate":"2022-10-21"},{"lineNumber":26,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":27,"author":{"gitId":"HowSuen"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-21"},{"lineNumber":28,"author":{"gitId":"HowSuen"},"content":"        assertFalse(grade.equals(1));","lastModifiedDate":"2022-10-21"},{"lineNumber":29,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":30,"author":{"gitId":"HowSuen"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-21"},{"lineNumber":31,"author":{"gitId":"HowSuen"},"content":"        assertFalse(grade.equals(null));","lastModifiedDate":"2022-10-21"},{"lineNumber":32,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":33,"author":{"gitId":"HowSuen"},"content":"        // grade with different exam name -\u003e returns false","lastModifiedDate":"2022-10-21"},{"lineNumber":34,"author":{"gitId":"HowSuen"},"content":"        Grade differentGradeName \u003d new Grade(\"RA2\", \"69.99\");","lastModifiedDate":"2022-10-21"},{"lineNumber":35,"author":{"gitId":"HowSuen"},"content":"        assertFalse(grade.equals(differentGradeName));","lastModifiedDate":"2022-10-21"},{"lineNumber":36,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":37,"author":{"gitId":"HowSuen"},"content":"        // grade with different score, same name -\u003e returns false","lastModifiedDate":"2022-10-21"},{"lineNumber":38,"author":{"gitId":"HowSuen"},"content":"        Grade differentGradeScore \u003d new Grade(\"RA1\", \"74.5\");","lastModifiedDate":"2022-10-21"},{"lineNumber":39,"author":{"gitId":"HowSuen"},"content":"        assertFalse(grade.equals(differentGradeScore));","lastModifiedDate":"2022-10-21"},{"lineNumber":40,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":41,"author":{"gitId":"HowSuen"},"content":"        // grade with different grade -\u003e returns false","lastModifiedDate":"2022-10-21"},{"lineNumber":42,"author":{"gitId":"HowSuen"},"content":"        Grade differentGrade \u003d new Grade(\"Practical\", \"54.65\");","lastModifiedDate":"2022-10-21"},{"lineNumber":43,"author":{"gitId":"HowSuen"},"content":"        assertFalse(grade.equals(differentGrade));","lastModifiedDate":"2022-10-21"},{"lineNumber":44,"author":{"gitId":"HowSuen"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":45,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":46,"author":{"gitId":"HowSuen"},"content":"    @Test","lastModifiedDate":"2022-10-25"},{"lineNumber":47,"author":{"gitId":"HowSuen"},"content":"    public void isValidScore() {","lastModifiedDate":"2022-10-25"},{"lineNumber":48,"author":{"gitId":"HowSuen"},"content":"        // null score","lastModifiedDate":"2022-10-25"},{"lineNumber":49,"author":{"gitId":"HowSuen"},"content":"        assertThrows(NullPointerException.class, () -\u003e Grade.isValidScore(null));","lastModifiedDate":"2022-10-25"},{"lineNumber":50,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":51,"author":{"gitId":"HowSuen"},"content":"        // invalid score","lastModifiedDate":"2022-10-25"},{"lineNumber":52,"author":{"gitId":"HowSuen"},"content":"        assertFalse(Grade.isValidScore(\"a\")); // non-number score","lastModifiedDate":"2022-11-05"},{"lineNumber":53,"author":{"gitId":"HowSuen"},"content":"        assertFalse(Grade.isValidScore(\"-1\")); // negative score","lastModifiedDate":"2022-11-05"},{"lineNumber":54,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":55,"author":{"gitId":"HowSuen"},"content":"        // valid score","lastModifiedDate":"2022-10-25"},{"lineNumber":56,"author":{"gitId":"HowSuen"},"content":"        assertTrue(Grade.isValidScore(VALID_SCORE_1));","lastModifiedDate":"2022-10-25"},{"lineNumber":57,"author":{"gitId":"HowSuen"},"content":"        assertTrue(Grade.isValidScore(VALID_SCORE_2));","lastModifiedDate":"2022-10-25"},{"lineNumber":58,"author":{"gitId":"HowSuen"},"content":"        assertTrue(Grade.isValidScore(\"69.42\"));","lastModifiedDate":"2022-10-29"},{"lineNumber":59,"author":{"gitId":"HowSuen"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":60,"author":{"gitId":"HowSuen"},"content":"}","lastModifiedDate":"2022-10-21"}],"authorContributionMap":{"jorrdansoh":1,"HowSuen":59}},{"path":"src/test/java/friday/model/grade/GradesListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.model.grade;","lastModifiedDate":"2022-11-05"},{"lineNumber":2,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":3,"author":{"gitId":"HowSuen"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-11-05"},{"lineNumber":4,"author":{"gitId":"HowSuen"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-11-05"},{"lineNumber":5,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"HowSuen"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"HowSuen"},"content":"import friday.model.grades.Grade;","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"HowSuen"},"content":"import friday.model.grades.GradesList;","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"HowSuen"},"content":"public class GradesListTest {","lastModifiedDate":"2022-11-05"},{"lineNumber":12,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":13,"author":{"gitId":"HowSuen"},"content":"    @Test","lastModifiedDate":"2022-11-05"},{"lineNumber":14,"author":{"gitId":"HowSuen"},"content":"    public void equals() {","lastModifiedDate":"2022-11-05"},{"lineNumber":15,"author":{"gitId":"HowSuen"},"content":"        GradesList gradesList \u003d new GradesList();","lastModifiedDate":"2022-11-05"},{"lineNumber":16,"author":{"gitId":"HowSuen"},"content":"        Grade grade \u003d new Grade(\"RA1\", \"90\");","lastModifiedDate":"2022-11-05"},{"lineNumber":17,"author":{"gitId":"HowSuen"},"content":"        GradesList.editGrade(gradesList, grade);","lastModifiedDate":"2022-11-05"},{"lineNumber":18,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":19,"author":{"gitId":"HowSuen"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-11-05"},{"lineNumber":20,"author":{"gitId":"HowSuen"},"content":"        assertTrue(gradesList.equals(gradesList));","lastModifiedDate":"2022-11-05"},{"lineNumber":21,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":22,"author":{"gitId":"HowSuen"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-11-05"},{"lineNumber":23,"author":{"gitId":"HowSuen"},"content":"        GradesList gradesListCopy \u003d new GradesList();","lastModifiedDate":"2022-11-05"},{"lineNumber":24,"author":{"gitId":"HowSuen"},"content":"        GradesList.editGrade(gradesListCopy, grade);","lastModifiedDate":"2022-11-05"},{"lineNumber":25,"author":{"gitId":"HowSuen"},"content":"        assertTrue(gradesList.equals(gradesListCopy));","lastModifiedDate":"2022-11-05"},{"lineNumber":26,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":27,"author":{"gitId":"HowSuen"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-11-05"},{"lineNumber":28,"author":{"gitId":"HowSuen"},"content":"        assertFalse(gradesList.equals(1));","lastModifiedDate":"2022-11-05"},{"lineNumber":29,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":30,"author":{"gitId":"HowSuen"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-11-05"},{"lineNumber":31,"author":{"gitId":"HowSuen"},"content":"        assertFalse(gradesList.equals(null));","lastModifiedDate":"2022-11-05"},{"lineNumber":32,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":33,"author":{"gitId":"HowSuen"},"content":"        // gradesList with more grades -\u003e returns false","lastModifiedDate":"2022-11-05"},{"lineNumber":34,"author":{"gitId":"HowSuen"},"content":"        GradesList differentGradeList \u003d new GradesList();","lastModifiedDate":"2022-11-05"},{"lineNumber":35,"author":{"gitId":"HowSuen"},"content":"        Grade differentGrade \u003d new Grade(\"RA2\", \"80\");","lastModifiedDate":"2022-11-05"},{"lineNumber":36,"author":{"gitId":"HowSuen"},"content":"        GradesList.editGrade(differentGradeList, grade);","lastModifiedDate":"2022-11-05"},{"lineNumber":37,"author":{"gitId":"HowSuen"},"content":"        GradesList.editGrade(differentGradeList, differentGrade);","lastModifiedDate":"2022-11-05"},{"lineNumber":38,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":39,"author":{"gitId":"HowSuen"},"content":"        assertFalse(gradesList.equals(differentGradeList));","lastModifiedDate":"2022-11-05"},{"lineNumber":40,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":41,"author":{"gitId":"HowSuen"},"content":"        // grade with fewer grades -\u003e returns false","lastModifiedDate":"2022-11-05"},{"lineNumber":42,"author":{"gitId":"HowSuen"},"content":"        GradesList emptyGradesList \u003d new GradesList();","lastModifiedDate":"2022-11-05"},{"lineNumber":43,"author":{"gitId":"HowSuen"},"content":"        assertFalse(gradesList.equals(emptyGradesList));","lastModifiedDate":"2022-11-05"},{"lineNumber":44,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":45,"author":{"gitId":"HowSuen"},"content":"        // grade with same grade but different score -\u003e returns false","lastModifiedDate":"2022-11-05"},{"lineNumber":46,"author":{"gitId":"HowSuen"},"content":"        GradesList differentGradesListScore \u003d new GradesList();","lastModifiedDate":"2022-11-05"},{"lineNumber":47,"author":{"gitId":"HowSuen"},"content":"        Grade differentGradeScore \u003d new Grade(\"RA1\", \"15.00\");","lastModifiedDate":"2022-11-05"},{"lineNumber":48,"author":{"gitId":"HowSuen"},"content":"        GradesList.editGrade(differentGradesListScore, differentGradeScore);","lastModifiedDate":"2022-11-05"},{"lineNumber":49,"author":{"gitId":"HowSuen"},"content":"        assertFalse(gradesList.equals(differentGradesListScore));","lastModifiedDate":"2022-11-05"},{"lineNumber":50,"author":{"gitId":"HowSuen"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":51,"author":{"gitId":"HowSuen"},"content":"}","lastModifiedDate":"2022-11-05"}],"authorContributionMap":{"HowSuen":51}},{"path":"src/test/java/friday/model/student/ConsultationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kaij77"},"content":"package friday.model.student;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"kaij77"},"content":"import static friday.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"jorrdansoh"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"kaij77"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"jorrdansoh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"kaij77"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"kaij77"},"content":"public class ConsultationTest {","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"kaij77"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"kaij77"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"kaij77"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Consultation(null));","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"kaij77"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"kaij77"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"kaij77"},"content":"    public void isValidConsultation() {","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"jorrdansoh"},"content":"        assertFalse(Consultation.isValidConsultation(\"09-01-2022\")); // wrong order","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"jorrdansoh"},"content":"        assertFalse(Consultation.isValidConsultation(\"20220901\")); // missing \u0027-\u0027 symbols","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"jorrdansoh"},"content":"        assertFalse(Consultation.isValidConsultation(\"01-01\")); // missing year","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"jorrdansoh"},"content":"        assertFalse(Consultation.isValidConsultation(\"0000-12-05\")); // invalid year","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"jorrdansoh"},"content":"        assertFalse(Consultation.isValidConsultation(\"2022-13-05\")); // invalid month","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"jorrdansoh"},"content":"        assertFalse(Consultation.isValidConsultation(\"0000-12-32\")); // invalid day","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"jorrdansoh"},"content":"        assertFalse(Consultation.isValidConsultation(\"2022/09/01\")); // \u0027/\u0027 instead of \u0027-\u0027","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"jorrdansoh"},"content":"        assertFalse(Consultation.isValidConsultation(\"20 22-09-01\")); // space in year","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"jorrdansoh"},"content":"        assertFalse(Consultation.isValidConsultation(\"2022- 09 -01\")); // spaces in month","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"jorrdansoh"},"content":"        assertFalse(Consultation.isValidConsultation(\" 2022-09-01\")); // leading space","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"jorrdansoh"},"content":"        assertFalse(Consultation.isValidConsultation(\"2022-09-01 \")); // trailing space","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"jorrdansoh"},"content":"        assertFalse(Consultation.isValidConsultation(\"2022--09--01\")); // double \u0027-\u0027 symbol","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"jorrdansoh"},"content":"        assertFalse(Consultation.isValidConsultation(\"2022-09-0-1\")); // extra \u0027-\u0027 symbol","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"jorrdansoh"},"content":"        assertFalse(Consultation.isValidConsultation(\"1899-12-31\")); // only years 1900 - 2999 are valid","lastModifiedDate":"2022-11-05"},{"lineNumber":35,"author":{"gitId":"jorrdansoh"},"content":"        assertFalse(Consultation.isValidConsultation(\"3000-01-01\")); // only years 1900 - 2999 are valid","lastModifiedDate":"2022-11-05"},{"lineNumber":36,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"jorrdansoh"},"content":"        // valid dates","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"kaij77"},"content":"        assertTrue(Consultation.isValidConsultation(\"2022-09-01\"));","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"jorrdansoh"},"content":"        assertTrue(Consultation.isValidConsultation(\"2020-02-28\"));","lastModifiedDate":"2022-10-06"},{"lineNumber":40,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":41,"author":{"gitId":"jorrdansoh"},"content":"        assertTrue(Consultation.isValidConsultation(\"1900-01-01\")); // only years 1900 - 2999 are valid","lastModifiedDate":"2022-11-05"},{"lineNumber":42,"author":{"gitId":"jorrdansoh"},"content":"        assertTrue(Consultation.isValidConsultation(\"2999-12-31\")); // only years 1900 - 2999 are valid","lastModifiedDate":"2022-11-05"},{"lineNumber":43,"author":{"gitId":"kaij77"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":44,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"jorrdansoh"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"jorrdansoh"},"content":"    public void isEmpty() {","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"jorrdansoh"},"content":"        // not the empty instance","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"jorrdansoh"},"content":"        assertFalse(new Consultation(LocalDate.of(2001, 01, 01)).isEmpty());","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"jorrdansoh"},"content":"        // the empty instance","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"jorrdansoh"},"content":"        assertTrue(Consultation.EMPTY_CONSULTATION.isEmpty());","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":54,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":55,"author":{"gitId":"jorrdansoh"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":56,"author":{"gitId":"jorrdansoh"},"content":"    public void compareTo() {","lastModifiedDate":"2022-10-21"},{"lineNumber":57,"author":{"gitId":"jorrdansoh"},"content":"        // 2020 is smaller than 2025","lastModifiedDate":"2022-10-21"},{"lineNumber":58,"author":{"gitId":"jorrdansoh"},"content":"        assertTrue(new MasteryCheck(LocalDate.of(2021, 01, 01))","lastModifiedDate":"2022-10-21"},{"lineNumber":59,"author":{"gitId":"jorrdansoh"},"content":"                .compareTo(new MasteryCheck(LocalDate.of(2025, 01, 01))) \u003c 0);","lastModifiedDate":"2022-10-21"},{"lineNumber":60,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":61,"author":{"gitId":"jorrdansoh"},"content":"        // September is not larger than October","lastModifiedDate":"2022-10-21"},{"lineNumber":62,"author":{"gitId":"jorrdansoh"},"content":"        assertFalse(new MasteryCheck(LocalDate.of(2021, 9, 01))","lastModifiedDate":"2022-10-21"},{"lineNumber":63,"author":{"gitId":"jorrdansoh"},"content":"                .compareTo(new MasteryCheck(LocalDate.of(2021, 10, 01))) \u003e 0);","lastModifiedDate":"2022-10-21"},{"lineNumber":64,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":65,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":66,"author":{"gitId":"jorrdansoh"},"content":"        // 30 is not smaller than 20","lastModifiedDate":"2022-10-21"},{"lineNumber":67,"author":{"gitId":"jorrdansoh"},"content":"        assertFalse(new MasteryCheck(LocalDate.of(2021, 11, 30))","lastModifiedDate":"2022-10-21"},{"lineNumber":68,"author":{"gitId":"jorrdansoh"},"content":"                .compareTo(new MasteryCheck(LocalDate.of(2021, 11, 20))) \u003c 0);","lastModifiedDate":"2022-10-21"},{"lineNumber":69,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":70,"author":{"gitId":"jorrdansoh"},"content":"        // Same date","lastModifiedDate":"2022-10-21"},{"lineNumber":71,"author":{"gitId":"jorrdansoh"},"content":"        assertTrue(new MasteryCheck(LocalDate.of(2020, 12, 31))","lastModifiedDate":"2022-10-21"},{"lineNumber":72,"author":{"gitId":"jorrdansoh"},"content":"                .compareTo(new MasteryCheck(LocalDate.of(2020, 12, 31))) \u003d\u003d 0);","lastModifiedDate":"2022-10-21"},{"lineNumber":73,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":74,"author":{"gitId":"kaij77"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"jorrdansoh":55,"kaij77":19}},{"path":"src/test/java/friday/model/student/MasteryCheckTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kaij77"},"content":"package friday.model.student;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"kaij77"},"content":"import static friday.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"jorrdansoh"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"kaij77"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"jorrdansoh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"kaij77"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"kaij77"},"content":"public class MasteryCheckTest {","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"kaij77"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"kaij77"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"kaij77"},"content":"        assertThrows(NullPointerException.class, () -\u003e new MasteryCheck(null));","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"kaij77"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"kaij77"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"kaij77"},"content":"    public void isValidMasteryCheck() {","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"jorrdansoh"},"content":"        assertFalse(MasteryCheck.isValidMasteryCheck(\"09-01-2022\")); // wrong order","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"jorrdansoh"},"content":"        assertFalse(MasteryCheck.isValidMasteryCheck(\"20220901\")); // missing \u0027-\u0027 symbols","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"jorrdansoh"},"content":"        assertFalse(MasteryCheck.isValidMasteryCheck(\"01-01\")); // missing year","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"jorrdansoh"},"content":"        assertFalse(MasteryCheck.isValidMasteryCheck(\"0000-12-05\")); // invalid year","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"jorrdansoh"},"content":"        assertFalse(MasteryCheck.isValidMasteryCheck(\"2022-13-05\")); // invalid month","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"jorrdansoh"},"content":"        assertFalse(MasteryCheck.isValidMasteryCheck(\"0000-12-32\")); // invalid day","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"jorrdansoh"},"content":"        assertFalse(MasteryCheck.isValidMasteryCheck(\"2022/09/01\")); // \u0027/\u0027 instead of \u0027-\u0027","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"jorrdansoh"},"content":"        assertFalse(MasteryCheck.isValidMasteryCheck(\"20 22-09-01\")); // space in year","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"jorrdansoh"},"content":"        assertFalse(MasteryCheck.isValidMasteryCheck(\"2022- 09 -01\")); // spaces in month","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"jorrdansoh"},"content":"        assertFalse(MasteryCheck.isValidMasteryCheck(\" 2022-09-01\")); // leading space","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"jorrdansoh"},"content":"        assertFalse(MasteryCheck.isValidMasteryCheck(\"2022-09-01 \")); // trailing space","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"jorrdansoh"},"content":"        assertFalse(MasteryCheck.isValidMasteryCheck(\"2022--09--01\")); // double \u0027-\u0027 symbol","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"jorrdansoh"},"content":"        assertFalse(MasteryCheck.isValidMasteryCheck(\"2022-09-0-1\")); // extra \u0027-\u0027 symbol","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"jorrdansoh"},"content":"        assertFalse(MasteryCheck.isValidMasteryCheck(\"1899-12-31\")); // only years 1900 - 2999 are valid","lastModifiedDate":"2022-11-05"},{"lineNumber":35,"author":{"gitId":"jorrdansoh"},"content":"        assertFalse(MasteryCheck.isValidMasteryCheck(\"3000-01-01\")); // only years 1900 - 2999 are valid","lastModifiedDate":"2022-11-05"},{"lineNumber":36,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":37,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"kaij77"},"content":"        // valid dates","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"kaij77"},"content":"        assertTrue(MasteryCheck.isValidMasteryCheck(\"2019-06-07\"));","lastModifiedDate":"2022-10-06"},{"lineNumber":40,"author":{"gitId":"jorrdansoh"},"content":"        assertTrue(MasteryCheck.isValidMasteryCheck(\"2020-02-28\"));","lastModifiedDate":"2022-10-06"},{"lineNumber":41,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":42,"author":{"gitId":"jorrdansoh"},"content":"        assertTrue(MasteryCheck.isValidMasteryCheck(\"1900-01-01\")); // only years 1900 - 2999 are valid","lastModifiedDate":"2022-11-05"},{"lineNumber":43,"author":{"gitId":"jorrdansoh"},"content":"        assertTrue(MasteryCheck.isValidMasteryCheck(\"2999-12-31\")); // only years 1900 - 2999 are valid","lastModifiedDate":"2022-11-05"},{"lineNumber":44,"author":{"gitId":"kaij77"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":45,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"jorrdansoh"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"jorrdansoh"},"content":"    public void isEmpty() {","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"jorrdansoh"},"content":"        // not the empty instance","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"jorrdansoh"},"content":"        assertFalse(new MasteryCheck(LocalDate.of(2001, 01, 01)).isEmpty());","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"jorrdansoh"},"content":"        // the empty instance","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"jorrdansoh"},"content":"        assertTrue(MasteryCheck.EMPTY_MASTERYCHECK.isEmpty());","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":55,"author":{"gitId":"jorrdansoh"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":56,"author":{"gitId":"jorrdansoh"},"content":"    public void compareTo() {","lastModifiedDate":"2022-10-21"},{"lineNumber":57,"author":{"gitId":"jorrdansoh"},"content":"        // 2021 is smaller than 2022","lastModifiedDate":"2022-10-21"},{"lineNumber":58,"author":{"gitId":"jorrdansoh"},"content":"        assertTrue(new MasteryCheck(LocalDate.of(2021, 01, 01))","lastModifiedDate":"2022-10-21"},{"lineNumber":59,"author":{"gitId":"jorrdansoh"},"content":"                .compareTo(new MasteryCheck(LocalDate.of(2022, 01, 01))) \u003c 0);","lastModifiedDate":"2022-10-21"},{"lineNumber":60,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":61,"author":{"gitId":"jorrdansoh"},"content":"        // May is not smaller than April","lastModifiedDate":"2022-10-21"},{"lineNumber":62,"author":{"gitId":"jorrdansoh"},"content":"        assertFalse(new MasteryCheck(LocalDate.of(2021, 05, 01))","lastModifiedDate":"2022-10-21"},{"lineNumber":63,"author":{"gitId":"jorrdansoh"},"content":"                .compareTo(new MasteryCheck(LocalDate.of(2021, 04, 01))) \u003c 0);","lastModifiedDate":"2022-10-21"},{"lineNumber":64,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":65,"author":{"gitId":"jorrdansoh"},"content":"        // 20 is not larger than 21","lastModifiedDate":"2022-10-21"},{"lineNumber":66,"author":{"gitId":"jorrdansoh"},"content":"        assertFalse(new MasteryCheck(LocalDate.of(2021, 11, 20))","lastModifiedDate":"2022-10-21"},{"lineNumber":67,"author":{"gitId":"jorrdansoh"},"content":"                .compareTo(new MasteryCheck(LocalDate.of(2021, 11, 21))) \u003e 0);","lastModifiedDate":"2022-10-21"},{"lineNumber":68,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":69,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":70,"author":{"gitId":"jorrdansoh"},"content":"        // Same date","lastModifiedDate":"2022-10-21"},{"lineNumber":71,"author":{"gitId":"jorrdansoh"},"content":"        assertTrue(new MasteryCheck(LocalDate.of(2020, 12, 31))","lastModifiedDate":"2022-10-21"},{"lineNumber":72,"author":{"gitId":"jorrdansoh"},"content":"                .compareTo(new MasteryCheck(LocalDate.of(2020, 12, 31))) \u003d\u003d 0);","lastModifiedDate":"2022-10-21"},{"lineNumber":73,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":74,"author":{"gitId":"kaij77"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"jorrdansoh":53,"kaij77":21}},{"path":"src/test/java/friday/model/student/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kaij77"},"content":"package friday.model.student;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"kaij77"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"jorrdansoh"},"content":"import friday.testutil.StudentBuilder;","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"jorrdansoh"},"content":"        // different student -\u003e returns false","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"jorrdansoh"},"content":"        assertTrue(predicate.test(new StudentBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-10-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"jorrdansoh"},"content":"        assertTrue(predicate.test(new StudentBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-10-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"jorrdansoh"},"content":"        assertTrue(predicate.test(new StudentBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2022-10-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"jorrdansoh"},"content":"        assertTrue(predicate.test(new StudentBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-10-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"jorrdansoh"},"content":"        assertFalse(predicate.test(new StudentBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2022-10-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"Yuvaraj0702"},"content":"        assertFalse(predicate.test(new StudentBuilder().withName(\"Alic Bob\").build()));","lastModifiedDate":"2022-10-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"Yuvaraj0702"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alic@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2022-10-23"},{"lineNumber":73,"author":{"gitId":"Yuvaraj0702"},"content":"        assertFalse(predicate.test(new StudentBuilder().withName(\"Alic\").withTelegramHandle(\"12349\")","lastModifiedDate":"2022-10-23"},{"lineNumber":74,"author":{"gitId":"kaij77"},"content":"                .withConsultation(LocalDate.of(2022, 9, 1))","lastModifiedDate":"2022-10-06"},{"lineNumber":75,"author":{"gitId":"kaij77"},"content":"                .withMasteryCheck(LocalDate.of(2022, 9, 10), false).build()));","lastModifiedDate":"2022-11-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"jorrdansoh":7,"Yuvaraj0702":3,"kaij77":4,"-":63}},{"path":"src/test/java/friday/model/student/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kaij77"},"content":"package friday.model.student;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"HowSuen"},"content":"import static friday.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":41,"author":{"gitId":"jorrdansoh"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":42,"author":{"gitId":"jorrdansoh"},"content":"    public void compareTo() {","lastModifiedDate":"2022-10-21"},{"lineNumber":43,"author":{"gitId":"jorrdansoh"},"content":"        assertTrue(new Name(\"Jim\").compareTo(new Name(\"Jimmy\")) \u003c 0); // shorter names are smaller","lastModifiedDate":"2022-10-21"},{"lineNumber":44,"author":{"gitId":"jorrdansoh"},"content":"        assertTrue(new Name(\"Lumine\").compareTo(new Name(\"Aether\")) \u003e 0); // L comes after A","lastModifiedDate":"2022-10-21"},{"lineNumber":45,"author":{"gitId":"jorrdansoh"},"content":"        assertTrue(new Name(\"Candice\").compareTo(new Name(\"bandice\")) \u003e 0); // Comparison is case-insensitive","lastModifiedDate":"2022-10-29"},{"lineNumber":46,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"jorrdansoh":7,"kaij77":1,"-":38,"HowSuen":1}},{"path":"src/test/java/friday/model/student/RemarkTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kaij77"},"content":"package friday.model.student;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-09-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-09-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"// @@author HowSuen-reused","lastModifiedDate":"2022-11-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"// Reused from https://nus-cs2103-ay2223s1.github.io/tp/tutorials/AddRemark.html","lastModifiedDate":"2022-11-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class RemarkTest {","lastModifiedDate":"2022-09-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-09-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2022-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        Remark remark \u003d new Remark(\"Hello\");","lastModifiedDate":"2022-09-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-09-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertTrue(remark.equals(remark));","lastModifiedDate":"2022-09-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-09-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        Remark remarkCopy \u003d new Remark(remark.value);","lastModifiedDate":"2022-09-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertTrue(remark.equals(remarkCopy));","lastModifiedDate":"2022-09-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-09-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertFalse(remark.equals(1));","lastModifiedDate":"2022-09-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-09-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(remark.equals(null));","lastModifiedDate":"2022-09-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // different remark -\u003e returns false","lastModifiedDate":"2022-09-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Remark differentRemark \u003d new Remark(\"Bye\");","lastModifiedDate":"2022-09-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(remark.equals(differentRemark));","lastModifiedDate":"2022-09-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-09-14"}],"authorContributionMap":{"kaij77":1,"-":33}},{"path":"src/test/java/friday/model/student/StudentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kaij77"},"content":"package friday.model.student;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"kaij77"},"content":"import static friday.logic.commands.CommandTestUtil.VALID_CONSULTATION_BOB;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"kaij77"},"content":"import static friday.logic.commands.CommandTestUtil.VALID_MASTERYCHECK_DATE_BOB;","lastModifiedDate":"2022-11-06"},{"lineNumber":5,"author":{"gitId":"HowSuen"},"content":"import static friday.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"HowSuen"},"content":"import static friday.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"kaij77"},"content":"import static friday.logic.commands.CommandTestUtil.VALID_TELEGRAMHANDLE_BOB;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"HowSuen"},"content":"import static friday.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"jorrdansoh"},"content":"import static friday.testutil.TypicalStudents.ALICE;","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"jorrdansoh"},"content":"import static friday.testutil.TypicalStudents.BOB;","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"HowSuen"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"HowSuen"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":16,"author":{"gitId":"jorrdansoh"},"content":"import friday.testutil.StudentBuilder;","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"kaij77"},"content":"public class StudentTest {","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"jorrdansoh"},"content":"        Student student \u003d new StudentBuilder().build();","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"kaij77"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e student.getTags().remove(0));","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"jorrdansoh"},"content":"    public void isSameStudent() {","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"jorrdansoh"},"content":"        assertTrue(ALICE.isSameStudent(ALICE));","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"jorrdansoh"},"content":"        assertFalse(ALICE.isSameStudent(null));","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":35,"author":{"gitId":"jorrdansoh"},"content":"        Student editedAlice \u003d new StudentBuilder(ALICE).withTelegramHandle(VALID_TELEGRAMHANDLE_BOB)","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"kaij77"},"content":"                .withConsultation(VALID_CONSULTATION_BOB)","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"kaij77"},"content":"                .withMasteryCheck(VALID_MASTERYCHECK_DATE_BOB, false).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-11-06"},{"lineNumber":38,"author":{"gitId":"jorrdansoh"},"content":"        assertTrue(ALICE.isSameStudent(editedAlice));","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":41,"author":{"gitId":"jorrdansoh"},"content":"        editedAlice \u003d new StudentBuilder(ALICE)","lastModifiedDate":"2022-10-29"},{"lineNumber":42,"author":{"gitId":"jorrdansoh"},"content":"                .withName(VALID_NAME_BOB).withTelegramHandle(VALID_TELEGRAMHANDLE_BOB).build();","lastModifiedDate":"2022-10-29"},{"lineNumber":43,"author":{"gitId":"jorrdansoh"},"content":"        assertFalse(ALICE.isSameStudent(editedAlice));","lastModifiedDate":"2022-10-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":45,"author":{"gitId":"jorrdansoh"},"content":"        // name differs in case, all other attributes same -\u003e returns true","lastModifiedDate":"2022-10-29"},{"lineNumber":46,"author":{"gitId":"jorrdansoh"},"content":"        Student editedBob \u003d new StudentBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2022-10-20"},{"lineNumber":47,"author":{"gitId":"jorrdansoh"},"content":"        assertTrue(BOB.isSameStudent(editedBob));","lastModifiedDate":"2022-10-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"jorrdansoh"},"content":"        Student aliceCopy \u003d new StudentBuilder(ALICE).build();","lastModifiedDate":"2022-10-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"jorrdansoh"},"content":"        // different student -\u003e returns false","lastModifiedDate":"2022-10-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"jorrdansoh"},"content":"        Student editedAlice \u003d new StudentBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-10-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"jorrdansoh"},"content":"        editedAlice \u003d new StudentBuilder(ALICE).withTelegramHandle(VALID_TELEGRAMHANDLE_BOB).build();","lastModifiedDate":"2022-10-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"jorrdansoh"},"content":"        editedAlice \u003d new StudentBuilder(ALICE).withConsultation(VALID_CONSULTATION_BOB).build();","lastModifiedDate":"2022-10-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"kaij77"},"content":"        editedAlice \u003d new StudentBuilder(ALICE).withMasteryCheck(VALID_MASTERYCHECK_DATE_BOB, false).build();","lastModifiedDate":"2022-11-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":85,"author":{"gitId":"jorrdansoh"},"content":"        editedAlice \u003d new StudentBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-10-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"jorrdansoh":21,"kaij77":9,"-":53,"HowSuen":5}},{"path":"src/test/java/friday/model/student/TelegramHandleTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kaij77"},"content":"package friday.model.student;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"kaij77"},"content":"import static friday.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"kaij77"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"kaij77"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"kaij77"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"kaij77"},"content":"public class TelegramHandleTest {","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"kaij77"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"kaij77"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"kaij77"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TelegramHandle(null));","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"kaij77"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"kaij77"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"jorrdansoh"},"content":"    public void constructor_invalidTelegramHandle_throwsIllegalArgumentException() {","lastModifiedDate":"2022-11-05"},{"lineNumber":18,"author":{"gitId":"jorrdansoh"},"content":"        String invalidTelegramHandle \u003d \".\";","lastModifiedDate":"2022-11-05"},{"lineNumber":19,"author":{"gitId":"jorrdansoh"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new TelegramHandle(invalidTelegramHandle));","lastModifiedDate":"2022-11-05"},{"lineNumber":20,"author":{"gitId":"kaij77"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"kaij77"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"kaij77"},"content":"    public void isValidTelegramHandle() {","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"jorrdansoh"},"content":"        // null Telegram handle","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"kaij77"},"content":"        assertThrows(NullPointerException.class, () -\u003e TelegramHandle.isValidTelegramHandle(null));","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"jorrdansoh"},"content":"        // invalid Telegram handles","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"jorrdansoh"},"content":"        assertFalse(TelegramHandle.isValidTelegramHandle(\"\")); // empty handle is not allowed","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"jorrdansoh"},"content":"        assertFalse(TelegramHandle.isValidTelegramHandle(\"john+doe\")); // \"+\" symbols are not allowed","lastModifiedDate":"2022-11-05"},{"lineNumber":30,"author":{"gitId":"jorrdansoh"},"content":"        assertFalse(TelegramHandle.isValidTelegramHandle(\"john\")); // must be 5 characters or more","lastModifiedDate":"2022-11-05"},{"lineNumber":31,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"jorrdansoh"},"content":"        // valid Telegram handles","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"kaij77"},"content":"        assertTrue(TelegramHandle.isValidTelegramHandle(\"john123\")); // letters and numbers","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"jorrdansoh"},"content":"        assertTrue(TelegramHandle.isValidTelegramHandle(\"john1\")); // 5 characters length","lastModifiedDate":"2022-11-05"},{"lineNumber":35,"author":{"gitId":"kaij77"},"content":"        assertTrue(TelegramHandle.isValidTelegramHandle(\"john_doe\")); // with an underscore","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"HowSuen"},"content":"        assertTrue(TelegramHandle.isValidTelegramHandle(\"John_Doe\")); // capital letters are allowed","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"kaij77"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"jorrdansoh"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"jorrdansoh"},"content":"    public void isEmpty() {","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"jorrdansoh"},"content":"        assertFalse(new TelegramHandle(\"empty\").isEmpty()); // not the empty instance","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"jorrdansoh"},"content":"        assertTrue(TelegramHandle.EMPTY_TELEGRAMHANDLE.isEmpty()); // the empty instance","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"jorrdansoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":46,"author":{"gitId":"jorrdansoh"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":47,"author":{"gitId":"jorrdansoh"},"content":"    public void compareTo() {","lastModifiedDate":"2022-10-21"},{"lineNumber":48,"author":{"gitId":"jorrdansoh"},"content":"        // 89 comes after 80","lastModifiedDate":"2022-10-21"},{"lineNumber":49,"author":{"gitId":"jorrdansoh"},"content":"        assertTrue(new TelegramHandle(\"89jimmy\").compareTo(new TelegramHandle(\"80jimmy\")) \u003e 0);","lastModifiedDate":"2022-10-21"},{"lineNumber":50,"author":{"gitId":"jorrdansoh"},"content":"        // Longer handles are larger","lastModifiedDate":"2022-10-21"},{"lineNumber":51,"author":{"gitId":"jorrdansoh"},"content":"        assertTrue(new Name(\"Tommyyyy\").compareTo(new Name(\"Tommy\")) \u003e 0);","lastModifiedDate":"2022-10-21"},{"lineNumber":52,"author":{"gitId":"jorrdansoh"},"content":"        // All digits come before all alphabets","lastModifiedDate":"2022-10-21"},{"lineNumber":53,"author":{"gitId":"jorrdansoh"},"content":"        assertTrue(new TelegramHandle(\"90000\").compareTo(new TelegramHandle(\"aether\")) \u003c 0);","lastModifiedDate":"2022-10-21"},{"lineNumber":54,"author":{"gitId":"jorrdansoh"},"content":"        // Comparison is case-insensitive","lastModifiedDate":"2022-10-29"},{"lineNumber":55,"author":{"gitId":"jorrdansoh"},"content":"        assertTrue(new Name(\"Candice123\").compareTo(new Name(\"bandice123\")) \u003e 0);","lastModifiedDate":"2022-10-29"},{"lineNumber":56,"author":{"gitId":"jorrdansoh"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":57,"author":{"gitId":"kaij77"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"jorrdansoh":29,"kaij77":27,"HowSuen":1}},{"path":"src/test/java/friday/model/student/UniqueStudentListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kaij77"},"content":"package friday.model.student;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"kaij77"},"content":"import static friday.logic.commands.CommandTestUtil.VALID_MASTERYCHECK_DATE_BOB;","lastModifiedDate":"2022-11-06"},{"lineNumber":4,"author":{"gitId":"HowSuen"},"content":"import static friday.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"HowSuen"},"content":"import static friday.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"jorrdansoh"},"content":"import static friday.testutil.TypicalStudents.ALICE;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"jorrdansoh"},"content":"import static friday.testutil.TypicalStudents.BOB;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"HowSuen"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"HowSuen"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"HowSuen"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"jorrdansoh"},"content":"import friday.model.student.exceptions.DuplicateStudentException;","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"jorrdansoh"},"content":"import friday.model.student.exceptions.StudentNotFoundException;","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"jorrdansoh"},"content":"import friday.testutil.StudentBuilder;","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"kaij77"},"content":"public class UniqueStudentListTest {","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"jorrdansoh"},"content":"    private final UniqueStudentList uniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"jorrdansoh"},"content":"    public void contains_nullStudent_throwsNullPointerException() {","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"jorrdansoh"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueStudentList.contains(null));","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"jorrdansoh"},"content":"    public void contains_studentNotInList_returnsFalse() {","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"jorrdansoh"},"content":"        assertFalse(uniqueStudentList.contains(ALICE));","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"jorrdansoh"},"content":"    public void contains_studentInList_returnsTrue() {","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"jorrdansoh"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"jorrdansoh"},"content":"        assertTrue(uniqueStudentList.contains(ALICE));","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"jorrdansoh"},"content":"    public void contains_studentWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2022-10-20"},{"lineNumber":44,"author":{"gitId":"jorrdansoh"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2022-10-20"},{"lineNumber":45,"author":{"gitId":"kaij77"},"content":"        Student editedAlice \u003d new StudentBuilder(ALICE).withMasteryCheck(VALID_MASTERYCHECK_DATE_BOB, false)","lastModifiedDate":"2022-11-06"},{"lineNumber":46,"author":{"gitId":"kaij77"},"content":"                .withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-10-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"jorrdansoh"},"content":"        assertTrue(uniqueStudentList.contains(editedAlice));","lastModifiedDate":"2022-10-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"jorrdansoh"},"content":"    public void add_nullStudent_throwsNullPointerException() {","lastModifiedDate":"2022-10-20"},{"lineNumber":53,"author":{"gitId":"Yuvaraj0702"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2022-11-03"},{"lineNumber":54,"author":{"gitId":"Yuvaraj0702"},"content":"                uniqueStudentList.add(null));","lastModifiedDate":"2022-11-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"jorrdansoh"},"content":"    public void add_duplicateStudent_throwsDuplicateStudentException() {","lastModifiedDate":"2022-10-20"},{"lineNumber":59,"author":{"gitId":"jorrdansoh"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2022-10-20"},{"lineNumber":60,"author":{"gitId":"Yuvaraj0702"},"content":"        assertThrows(DuplicateStudentException.class, () -\u003e","lastModifiedDate":"2022-11-03"},{"lineNumber":61,"author":{"gitId":"Yuvaraj0702"},"content":"                uniqueStudentList.add(ALICE));","lastModifiedDate":"2022-11-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"jorrdansoh"},"content":"    public void setStudent_nullTargetStudent_throwsNullPointerException() {","lastModifiedDate":"2022-10-20"},{"lineNumber":66,"author":{"gitId":"Yuvaraj0702"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2022-11-03"},{"lineNumber":67,"author":{"gitId":"Yuvaraj0702"},"content":"                uniqueStudentList.setStudent(null, ALICE));","lastModifiedDate":"2022-11-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"jorrdansoh"},"content":"    public void setStudent_nullEditedStudent_throwsNullPointerException() {","lastModifiedDate":"2022-10-20"},{"lineNumber":72,"author":{"gitId":"Yuvaraj0702"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2022-11-03"},{"lineNumber":73,"author":{"gitId":"Yuvaraj0702"},"content":"                uniqueStudentList.setStudent(ALICE, null));","lastModifiedDate":"2022-11-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"jorrdansoh"},"content":"    public void setStudent_targetStudentNotInList_throwsStudentNotFoundException() {","lastModifiedDate":"2022-10-20"},{"lineNumber":78,"author":{"gitId":"Yuvaraj0702"},"content":"        assertThrows(StudentNotFoundException.class, () -\u003e","lastModifiedDate":"2022-11-03"},{"lineNumber":79,"author":{"gitId":"Yuvaraj0702"},"content":"                uniqueStudentList.setStudent(ALICE, ALICE));","lastModifiedDate":"2022-11-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"jorrdansoh"},"content":"    public void setStudent_editedStudentIsSameStudent_success() {","lastModifiedDate":"2022-10-20"},{"lineNumber":84,"author":{"gitId":"jorrdansoh"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2022-10-20"},{"lineNumber":85,"author":{"gitId":"jorrdansoh"},"content":"        uniqueStudentList.setStudent(ALICE, ALICE);","lastModifiedDate":"2022-10-20"},{"lineNumber":86,"author":{"gitId":"jorrdansoh"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2022-10-20"},{"lineNumber":87,"author":{"gitId":"jorrdansoh"},"content":"        expectedUniqueStudentList.add(ALICE);","lastModifiedDate":"2022-10-20"},{"lineNumber":88,"author":{"gitId":"jorrdansoh"},"content":"        assertEquals(expectedUniqueStudentList, uniqueStudentList);","lastModifiedDate":"2022-10-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"jorrdansoh"},"content":"    public void setStudent_editedStudentHasSameIdentity_success() {","lastModifiedDate":"2022-10-20"},{"lineNumber":93,"author":{"gitId":"jorrdansoh"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2022-10-20"},{"lineNumber":94,"author":{"gitId":"kaij77"},"content":"        Student editedAlice \u003d new StudentBuilder(ALICE).withMasteryCheck(VALID_MASTERYCHECK_DATE_BOB, false)","lastModifiedDate":"2022-11-06"},{"lineNumber":95,"author":{"gitId":"kaij77"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-10-06"},{"lineNumber":96,"author":{"gitId":"jorrdansoh"},"content":"        uniqueStudentList.setStudent(ALICE, editedAlice);","lastModifiedDate":"2022-10-20"},{"lineNumber":97,"author":{"gitId":"jorrdansoh"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2022-10-20"},{"lineNumber":98,"author":{"gitId":"jorrdansoh"},"content":"        expectedUniqueStudentList.add(editedAlice);","lastModifiedDate":"2022-10-20"},{"lineNumber":99,"author":{"gitId":"jorrdansoh"},"content":"        assertEquals(expectedUniqueStudentList, uniqueStudentList);","lastModifiedDate":"2022-10-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"jorrdansoh"},"content":"    public void setStudent_editedStudentHasDifferentIdentity_success() {","lastModifiedDate":"2022-10-20"},{"lineNumber":104,"author":{"gitId":"jorrdansoh"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2022-10-20"},{"lineNumber":105,"author":{"gitId":"jorrdansoh"},"content":"        uniqueStudentList.setStudent(ALICE, BOB);","lastModifiedDate":"2022-10-20"},{"lineNumber":106,"author":{"gitId":"jorrdansoh"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2022-10-20"},{"lineNumber":107,"author":{"gitId":"jorrdansoh"},"content":"        expectedUniqueStudentList.add(BOB);","lastModifiedDate":"2022-10-20"},{"lineNumber":108,"author":{"gitId":"jorrdansoh"},"content":"        assertEquals(expectedUniqueStudentList, uniqueStudentList);","lastModifiedDate":"2022-10-20"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"jorrdansoh"},"content":"    public void setStudent_editedStudentHasNonUniqueIdentity_throwsDuplicateStudentException() {","lastModifiedDate":"2022-10-20"},{"lineNumber":113,"author":{"gitId":"jorrdansoh"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2022-10-20"},{"lineNumber":114,"author":{"gitId":"jorrdansoh"},"content":"        uniqueStudentList.add(BOB);","lastModifiedDate":"2022-10-20"},{"lineNumber":115,"author":{"gitId":"Yuvaraj0702"},"content":"        assertThrows(DuplicateStudentException.class, () -\u003e","lastModifiedDate":"2022-11-03"},{"lineNumber":116,"author":{"gitId":"Yuvaraj0702"},"content":"                uniqueStudentList.setStudent(ALICE, BOB));","lastModifiedDate":"2022-11-03"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":120,"author":{"gitId":"jorrdansoh"},"content":"    public void remove_nullStudent_throwsNullPointerException() {","lastModifiedDate":"2022-10-20"},{"lineNumber":121,"author":{"gitId":"Yuvaraj0702"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2022-11-03"},{"lineNumber":122,"author":{"gitId":"Yuvaraj0702"},"content":"                uniqueStudentList.remove(null));","lastModifiedDate":"2022-11-03"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"jorrdansoh"},"content":"    public void remove_studentDoesNotExist_throwsStudentNotFoundException() {","lastModifiedDate":"2022-10-20"},{"lineNumber":127,"author":{"gitId":"Yuvaraj0702"},"content":"        assertThrows(StudentNotFoundException.class, () -\u003e","lastModifiedDate":"2022-11-03"},{"lineNumber":128,"author":{"gitId":"Yuvaraj0702"},"content":"                uniqueStudentList.remove(ALICE));","lastModifiedDate":"2022-11-03"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"jorrdansoh"},"content":"    public void remove_existingStudent_removesStudent() {","lastModifiedDate":"2022-10-20"},{"lineNumber":133,"author":{"gitId":"jorrdansoh"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2022-10-20"},{"lineNumber":134,"author":{"gitId":"jorrdansoh"},"content":"        uniqueStudentList.remove(ALICE);","lastModifiedDate":"2022-10-20"},{"lineNumber":135,"author":{"gitId":"jorrdansoh"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2022-10-20"},{"lineNumber":136,"author":{"gitId":"jorrdansoh"},"content":"        assertEquals(expectedUniqueStudentList, uniqueStudentList);","lastModifiedDate":"2022-10-20"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"jorrdansoh"},"content":"    public void setStudents_nullUniqueStudentList_throwsNullPointerException() {","lastModifiedDate":"2022-10-20"},{"lineNumber":141,"author":{"gitId":"Yuvaraj0702"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2022-11-03"},{"lineNumber":142,"author":{"gitId":"Yuvaraj0702"},"content":"                uniqueStudentList.setStudents((UniqueStudentList) null));","lastModifiedDate":"2022-11-03"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"jorrdansoh"},"content":"    public void setStudents_uniqueStudentList_replacesOwnListWithProvidedUniqueStudentList() {","lastModifiedDate":"2022-10-20"},{"lineNumber":147,"author":{"gitId":"jorrdansoh"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2022-10-20"},{"lineNumber":148,"author":{"gitId":"jorrdansoh"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2022-10-20"},{"lineNumber":149,"author":{"gitId":"jorrdansoh"},"content":"        expectedUniqueStudentList.add(BOB);","lastModifiedDate":"2022-10-20"},{"lineNumber":150,"author":{"gitId":"jorrdansoh"},"content":"        uniqueStudentList.setStudents(expectedUniqueStudentList);","lastModifiedDate":"2022-10-20"},{"lineNumber":151,"author":{"gitId":"jorrdansoh"},"content":"        assertEquals(expectedUniqueStudentList, uniqueStudentList);","lastModifiedDate":"2022-10-20"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"jorrdansoh"},"content":"    public void setStudents_nullList_throwsNullPointerException() {","lastModifiedDate":"2022-10-20"},{"lineNumber":156,"author":{"gitId":"Yuvaraj0702"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2022-11-03"},{"lineNumber":157,"author":{"gitId":"Yuvaraj0702"},"content":"                uniqueStudentList.setStudents((List\u003cStudent\u003e) null));","lastModifiedDate":"2022-11-03"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"jorrdansoh"},"content":"    public void setStudents_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2022-10-20"},{"lineNumber":162,"author":{"gitId":"jorrdansoh"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2022-10-20"},{"lineNumber":163,"author":{"gitId":"kaij77"},"content":"        List\u003cStudent\u003e studentList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2022-10-06"},{"lineNumber":164,"author":{"gitId":"jorrdansoh"},"content":"        uniqueStudentList.setStudents(studentList);","lastModifiedDate":"2022-10-20"},{"lineNumber":165,"author":{"gitId":"jorrdansoh"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2022-10-20"},{"lineNumber":166,"author":{"gitId":"jorrdansoh"},"content":"        expectedUniqueStudentList.add(BOB);","lastModifiedDate":"2022-10-20"},{"lineNumber":167,"author":{"gitId":"jorrdansoh"},"content":"        assertEquals(expectedUniqueStudentList, uniqueStudentList);","lastModifiedDate":"2022-10-20"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":171,"author":{"gitId":"jorrdansoh"},"content":"    public void setStudents_listWithDuplicateStudents_throwsDuplicateStudentException() {","lastModifiedDate":"2022-10-20"},{"lineNumber":172,"author":{"gitId":"kaij77"},"content":"        List\u003cStudent\u003e listWithDuplicateStudents \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2022-10-06"},{"lineNumber":173,"author":{"gitId":"Yuvaraj0702"},"content":"        assertThrows(DuplicateStudentException.class, () -\u003e","lastModifiedDate":"2022-11-03"},{"lineNumber":174,"author":{"gitId":"Yuvaraj0702"},"content":"                uniqueStudentList.setStudents(listWithDuplicateStudents));","lastModifiedDate":"2022-11-03"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":179,"author":{"gitId":"Yuvaraj0702"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e","lastModifiedDate":"2022-11-03"},{"lineNumber":180,"author":{"gitId":"Yuvaraj0702"},"content":"                uniqueStudentList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2022-11-03"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":182,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"jorrdansoh":65,"Yuvaraj0702":24,"kaij77":9,"-":79,"HowSuen":5}},{"path":"src/test/java/friday/model/tag/TagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.model.tag;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":3,"author":{"gitId":"HowSuen"},"content":"import static friday.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class TagTest {","lastModifiedDate":"2017-12-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Tag(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":16,"author":{"gitId":"kaij77"},"content":"        String invalidTagName \u003d \"*\";","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidTagName));","lastModifiedDate":"2019-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void isValidTagName() {","lastModifiedDate":"2017-12-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null tag name","lastModifiedDate":"2017-12-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Tag.isValidTagName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-12-04"}],"authorContributionMap":{"kaij77":1,"-":23,"HowSuen":2}},{"path":"src/test/java/friday/storage/JsonAdaptedStudentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.storage;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"jorrdansoh"},"content":"import static friday.storage.JsonAdaptedStudent.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"HowSuen"},"content":"import static friday.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"HowSuen"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"kaij77"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"HowSuen"},"content":"import friday.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"HowSuen"},"content":"import friday.model.grades.GradesList;","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"jorrdansoh"},"content":"import friday.model.student.Consultation;","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"jorrdansoh"},"content":"import friday.model.student.MasteryCheck;","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"kaij77"},"content":"import friday.model.student.Name;","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"kaij77"},"content":"import friday.model.student.TelegramHandle;","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"jorrdansoh"},"content":"import friday.testutil.TypicalStudents;","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"kaij77"},"content":"public class JsonAdaptedStudentTest {","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"kaij77"},"content":"    private static final String INVALID_TELEGRAMHANDLE \u003d \"+john--\";","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"jorrdansoh"},"content":"    private static final String VALID_NAME \u003d TypicalStudents.BENSON.getName().toString();","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"jorrdansoh"},"content":"    private static final String VALID_TELEGRAMHANDLE \u003d TypicalStudents.BENSON.getTelegramHandle().value;","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"kaij77"},"content":"    private static final LocalDate VALID_CONSULTATION \u003d","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"jorrdansoh"},"content":"            LocalDate.parse(TypicalStudents.BENSON.getConsultation().getValue().toString());","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"kaij77"},"content":"    private static final LocalDate VALID_MASTERYCHECK \u003d","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"jorrdansoh"},"content":"            LocalDate.parse(TypicalStudents.BENSON.getMasteryCheck().getValue().toString());","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"jorrdansoh"},"content":"    private static final String VALID_REMARK \u003d TypicalStudents.BENSON.getRemark().toString();","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"jorrdansoh"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d TypicalStudents.BENSON.getTags().stream()","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"HowSuen"},"content":"    private static final List\u003cJsonAdaptedGrade\u003e VALID_GRADES \u003d new GradesList().getGradesArrayList()","lastModifiedDate":"2022-10-21"},{"lineNumber":38,"author":{"gitId":"HowSuen"},"content":"            .stream()","lastModifiedDate":"2022-10-21"},{"lineNumber":39,"author":{"gitId":"HowSuen"},"content":"            .map(JsonAdaptedGrade::new)","lastModifiedDate":"2022-10-21"},{"lineNumber":40,"author":{"gitId":"HowSuen"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2022-10-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"jorrdansoh"},"content":"    public void toModelType_validStudentDetails_returnsStudent() throws Exception {","lastModifiedDate":"2022-10-20"},{"lineNumber":44,"author":{"gitId":"jorrdansoh"},"content":"        JsonAdaptedStudent student \u003d new JsonAdaptedStudent(TypicalStudents.BENSON);","lastModifiedDate":"2022-10-20"},{"lineNumber":45,"author":{"gitId":"jorrdansoh"},"content":"        assertEquals(TypicalStudents.BENSON, student.toModelType());","lastModifiedDate":"2022-10-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"jorrdansoh"},"content":"        JsonAdaptedStudent student \u003d","lastModifiedDate":"2022-10-20"},{"lineNumber":51,"author":{"gitId":"jorrdansoh"},"content":"                new JsonAdaptedStudent(INVALID_NAME, VALID_TELEGRAMHANDLE, VALID_CONSULTATION, VALID_MASTERYCHECK,","lastModifiedDate":"2022-10-20"},{"lineNumber":52,"author":{"gitId":"HowSuen"},"content":"                        false, VALID_REMARK, VALID_TAGS, VALID_GRADES);","lastModifiedDate":"2022-10-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"jorrdansoh"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, student::toModelType);","lastModifiedDate":"2022-10-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"jorrdansoh"},"content":"        JsonAdaptedStudent student \u003d","lastModifiedDate":"2022-10-20"},{"lineNumber":60,"author":{"gitId":"jorrdansoh"},"content":"                new JsonAdaptedStudent(null, VALID_TELEGRAMHANDLE, VALID_CONSULTATION, VALID_MASTERYCHECK,","lastModifiedDate":"2022-10-20"},{"lineNumber":61,"author":{"gitId":"HowSuen"},"content":"                        false, VALID_REMARK, VALID_TAGS, VALID_GRADES);","lastModifiedDate":"2022-10-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"jorrdansoh"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, student::toModelType);","lastModifiedDate":"2022-10-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"kaij77"},"content":"    public void toModelType_invalidTelegramHandle_throwsIllegalValueException() {","lastModifiedDate":"2022-10-06"},{"lineNumber":68,"author":{"gitId":"jorrdansoh"},"content":"        JsonAdaptedStudent student \u003d","lastModifiedDate":"2022-10-20"},{"lineNumber":69,"author":{"gitId":"jorrdansoh"},"content":"                new JsonAdaptedStudent(VALID_NAME, INVALID_TELEGRAMHANDLE, VALID_CONSULTATION, VALID_MASTERYCHECK,","lastModifiedDate":"2022-10-20"},{"lineNumber":70,"author":{"gitId":"HowSuen"},"content":"                        false, VALID_REMARK, VALID_TAGS, VALID_GRADES);","lastModifiedDate":"2022-10-21"},{"lineNumber":71,"author":{"gitId":"kaij77"},"content":"        String expectedMessage \u003d TelegramHandle.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-10-06"},{"lineNumber":72,"author":{"gitId":"jorrdansoh"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, student::toModelType);","lastModifiedDate":"2022-10-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"kaij77"},"content":"    public void toModelType_nullTelegramHandle_throwsIllegalValueException() {","lastModifiedDate":"2022-10-06"},{"lineNumber":77,"author":{"gitId":"jorrdansoh"},"content":"        JsonAdaptedStudent student \u003d","lastModifiedDate":"2022-10-20"},{"lineNumber":78,"author":{"gitId":"jorrdansoh"},"content":"                new JsonAdaptedStudent(VALID_NAME, null, VALID_CONSULTATION, VALID_MASTERYCHECK,","lastModifiedDate":"2022-10-20"},{"lineNumber":79,"author":{"gitId":"HowSuen"},"content":"                        false, VALID_REMARK, VALID_TAGS, VALID_GRADES);","lastModifiedDate":"2022-10-21"},{"lineNumber":80,"author":{"gitId":"kaij77"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, TelegramHandle.class.getSimpleName());","lastModifiedDate":"2022-10-06"},{"lineNumber":81,"author":{"gitId":"jorrdansoh"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, student::toModelType);","lastModifiedDate":"2022-10-20"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"kaij77"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2022-10-06"},{"lineNumber":86,"author":{"gitId":"kaij77"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2022-10-06"},{"lineNumber":87,"author":{"gitId":"kaij77"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2022-10-06"},{"lineNumber":88,"author":{"gitId":"jorrdansoh"},"content":"        JsonAdaptedStudent student \u003d","lastModifiedDate":"2022-10-20"},{"lineNumber":89,"author":{"gitId":"jorrdansoh"},"content":"                new JsonAdaptedStudent(VALID_NAME, VALID_TELEGRAMHANDLE, VALID_CONSULTATION, VALID_MASTERYCHECK,","lastModifiedDate":"2022-10-20"},{"lineNumber":90,"author":{"gitId":"HowSuen"},"content":"                        false, VALID_REMARK, invalidTags, VALID_GRADES);","lastModifiedDate":"2022-10-21"},{"lineNumber":91,"author":{"gitId":"jorrdansoh"},"content":"        assertThrows(IllegalValueException.class, student::toModelType);","lastModifiedDate":"2022-10-20"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"kaij77"},"content":"    public void toModelType_nullConsultation_throwsIllegalValueException() {","lastModifiedDate":"2022-10-06"},{"lineNumber":97,"author":{"gitId":"jorrdansoh"},"content":"        JsonAdaptedStudent student \u003d","lastModifiedDate":"2022-10-20"},{"lineNumber":98,"author":{"gitId":"kaij77"},"content":"                new JsonAdaptedStudent(VALID_NAME, VALID_TELEGRAMHANDLE, null, VALID_MASTERYCHECK,","lastModifiedDate":"2022-10-20"},{"lineNumber":99,"author":{"gitId":"HowSuen"},"content":"                        false, VALID_REMARK, VALID_TAGS, VALID_GRADES);","lastModifiedDate":"2022-10-21"},{"lineNumber":100,"author":{"gitId":"kaij77"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Consultation.class.getSimpleName());","lastModifiedDate":"2022-10-06"},{"lineNumber":101,"author":{"gitId":"jorrdansoh"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, student::toModelType);","lastModifiedDate":"2022-10-20"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"kaij77"},"content":"    public void toModelType_nullMasteryCheck_throwsIllegalValueException() {","lastModifiedDate":"2022-10-06"},{"lineNumber":106,"author":{"gitId":"jorrdansoh"},"content":"        JsonAdaptedStudent student \u003d","lastModifiedDate":"2022-10-20"},{"lineNumber":107,"author":{"gitId":"jorrdansoh"},"content":"                new JsonAdaptedStudent(VALID_NAME, VALID_TELEGRAMHANDLE, VALID_CONSULTATION, null,","lastModifiedDate":"2022-10-20"},{"lineNumber":108,"author":{"gitId":"HowSuen"},"content":"                        false, VALID_REMARK, VALID_TAGS, VALID_GRADES);","lastModifiedDate":"2022-10-21"},{"lineNumber":109,"author":{"gitId":"kaij77"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, MasteryCheck.class.getSimpleName());","lastModifiedDate":"2022-10-06"},{"lineNumber":110,"author":{"gitId":"jorrdansoh"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, student::toModelType);","lastModifiedDate":"2022-10-20"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":113,"author":{"gitId":"HowSuen"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":114,"author":{"gitId":"HowSuen"},"content":"    public void toModelType_nullGradesList_throwsIllegalValueException() {","lastModifiedDate":"2022-10-21"},{"lineNumber":115,"author":{"gitId":"HowSuen"},"content":"        JsonAdaptedStudent student \u003d","lastModifiedDate":"2022-10-21"},{"lineNumber":116,"author":{"gitId":"HowSuen"},"content":"                new JsonAdaptedStudent(VALID_NAME, VALID_TELEGRAMHANDLE, VALID_CONSULTATION, VALID_MASTERYCHECK,","lastModifiedDate":"2022-10-21"},{"lineNumber":117,"author":{"gitId":"HowSuen"},"content":"                        false, VALID_REMARK, VALID_TAGS, null);","lastModifiedDate":"2022-10-21"},{"lineNumber":118,"author":{"gitId":"HowSuen"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, GradesList.class.getSimpleName());","lastModifiedDate":"2022-10-21"},{"lineNumber":119,"author":{"gitId":"HowSuen"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, student::toModelType);","lastModifiedDate":"2022-10-21"},{"lineNumber":120,"author":{"gitId":"HowSuen"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"jorrdansoh":33,"kaij77":20,"-":43,"HowSuen":25}},{"path":"src/test/java/friday/storage/JsonFridayStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.storage;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"HowSuen"},"content":"import static friday.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"Yuvaraj0702"},"content":"import friday.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-25"},{"lineNumber":15,"author":{"gitId":"darrtzj"},"content":"import friday.model.Friday;","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"darrtzj"},"content":"import friday.model.ReadOnlyFriday;","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"jorrdansoh"},"content":"import friday.testutil.TypicalStudents;","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"kaij77"},"content":"public class JsonFridayStorageTest {","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"kaij77"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonFridayStorageTest\");","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"Yuvaraj0702"},"content":"    public void readFriday_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2022-10-25"},{"lineNumber":27,"author":{"gitId":"Yuvaraj0702"},"content":"        assertThrows(NullPointerException.class, () -\u003e readFriday(null));","lastModifiedDate":"2022-10-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"Yuvaraj0702"},"content":"    private java.util.Optional\u003cReadOnlyFriday\u003e readFriday(String filePath) throws Exception {","lastModifiedDate":"2022-10-25"},{"lineNumber":31,"author":{"gitId":"darrtzj"},"content":"        return new JsonFridayStorage(Paths.get(filePath)).readFriday(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"Yuvaraj0702"},"content":"        assertFalse(readFriday(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2022-10-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"Yuvaraj0702"},"content":"        assertThrows(DataConversionException.class, () -\u003e","lastModifiedDate":"2022-11-03"},{"lineNumber":48,"author":{"gitId":"Yuvaraj0702"},"content":"                readFriday(\"notJsonFormatFriday.json\"));","lastModifiedDate":"2022-11-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"Yuvaraj0702"},"content":"    public void readFriday_invalidStudentFriday_throwDataConversionException() {","lastModifiedDate":"2022-10-25"},{"lineNumber":53,"author":{"gitId":"Yuvaraj0702"},"content":"        assertThrows(DataConversionException.class, () -\u003e","lastModifiedDate":"2022-11-03"},{"lineNumber":54,"author":{"gitId":"Yuvaraj0702"},"content":"                readFriday(\"invalidStudentFriday.json\"));","lastModifiedDate":"2022-11-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"Yuvaraj0702"},"content":"    public void readFriday_invalidAndValidStudentFriday_throwDataConversionException() {","lastModifiedDate":"2022-10-25"},{"lineNumber":59,"author":{"gitId":"Yuvaraj0702"},"content":"        assertThrows(DataConversionException.class, () -\u003e","lastModifiedDate":"2022-11-03"},{"lineNumber":60,"author":{"gitId":"Yuvaraj0702"},"content":"                readFriday(\"invalidAndValidStudentFriday.json\"));","lastModifiedDate":"2022-11-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"Yuvaraj0702"},"content":"    public void readAndSaveFriday_allInOrder_success() throws Exception {","lastModifiedDate":"2022-10-25"},{"lineNumber":66,"author":{"gitId":"Yuvaraj0702"},"content":"        Path filePath \u003d testFolder.resolve(\"TempFriday.json\");","lastModifiedDate":"2022-10-25"},{"lineNumber":67,"author":{"gitId":"Yuvaraj0702"},"content":"        Friday original \u003d TypicalStudents.getTypicalFriday();","lastModifiedDate":"2022-10-25"},{"lineNumber":68,"author":{"gitId":"darrtzj"},"content":"        JsonFridayStorage jsonFridayStorage \u003d new JsonFridayStorage(filePath);","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"darrtzj"},"content":"        jsonFridayStorage.saveFriday(original, filePath);","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"darrtzj"},"content":"        ReadOnlyFriday readBack \u003d jsonFridayStorage.readFriday(filePath).get();","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"darrtzj"},"content":"        assertEquals(original, new Friday(readBack));","lastModifiedDate":"2022-10-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"jorrdansoh"},"content":"        original.addStudent(TypicalStudents.HOON);","lastModifiedDate":"2022-10-20"},{"lineNumber":77,"author":{"gitId":"jorrdansoh"},"content":"        original.removeStudent(TypicalStudents.ALICE);","lastModifiedDate":"2022-10-20"},{"lineNumber":78,"author":{"gitId":"darrtzj"},"content":"        jsonFridayStorage.saveFriday(original, filePath);","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"darrtzj"},"content":"        readBack \u003d jsonFridayStorage.readFriday(filePath).get();","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"darrtzj"},"content":"        assertEquals(original, new Friday(readBack));","lastModifiedDate":"2022-10-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"jorrdansoh"},"content":"        original.addStudent(TypicalStudents.IDA);","lastModifiedDate":"2022-10-20"},{"lineNumber":84,"author":{"gitId":"darrtzj"},"content":"        jsonFridayStorage.saveFriday(original); // file path not specified","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"darrtzj"},"content":"        readBack \u003d jsonFridayStorage.readFriday().get(); // file path not specified","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"darrtzj"},"content":"        assertEquals(original, new Friday(readBack));","lastModifiedDate":"2022-10-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"Yuvaraj0702"},"content":"    public void saveFriday_nullFriday_throwsNullPointerException() {","lastModifiedDate":"2022-10-25"},{"lineNumber":92,"author":{"gitId":"Yuvaraj0702"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2022-11-03"},{"lineNumber":93,"author":{"gitId":"Yuvaraj0702"},"content":"                saveFriday(null, \"SomeFile.json\"));","lastModifiedDate":"2022-11-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"Yuvaraj0702"},"content":"     * Saves {@code Friday} at the specified {@code filePath}.","lastModifiedDate":"2022-10-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"Yuvaraj0702"},"content":"    private void saveFriday(ReadOnlyFriday friday, String filePath) {","lastModifiedDate":"2022-10-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"darrtzj"},"content":"            new JsonFridayStorage(Paths.get(filePath))","lastModifiedDate":"2022-10-10"},{"lineNumber":102,"author":{"gitId":"Yuvaraj0702"},"content":"                    .saveFriday(friday, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2022-10-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"Yuvaraj0702"},"content":"    public void saveFriday_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2022-10-25"},{"lineNumber":110,"author":{"gitId":"Yuvaraj0702"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveFriday(new Friday(), null));","lastModifiedDate":"2022-10-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"jorrdansoh":4,"Yuvaraj0702":25,"darrtzj":14,"kaij77":2,"-":65,"HowSuen":2}},{"path":"src/test/java/friday/storage/JsonSerializableFridayTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.storage;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"HowSuen"},"content":"import static friday.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"HowSuen"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":6,"author":{"gitId":"Yuvaraj0702"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-11-03"},{"lineNumber":7,"author":{"gitId":"Yuvaraj0702"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-11-03"},{"lineNumber":8,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":9,"author":{"gitId":"Yuvaraj0702"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-11-03"},{"lineNumber":10,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":11,"author":{"gitId":"Yuvaraj0702"},"content":"import friday.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-11-03"},{"lineNumber":12,"author":{"gitId":"Yuvaraj0702"},"content":"import friday.commons.util.JsonUtil;","lastModifiedDate":"2022-11-03"},{"lineNumber":13,"author":{"gitId":"Yuvaraj0702"},"content":"import friday.model.Friday;","lastModifiedDate":"2022-11-03"},{"lineNumber":14,"author":{"gitId":"Yuvaraj0702"},"content":"import friday.testutil.TypicalStudents;","lastModifiedDate":"2022-11-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"kaij77"},"content":"public class JsonSerializableFridayTest {","lastModifiedDate":"2022-10-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"Yuvaraj0702"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\",","lastModifiedDate":"2022-11-03"},{"lineNumber":19,"author":{"gitId":"Yuvaraj0702"},"content":"            \"JsonSerializableFridayTest\");","lastModifiedDate":"2022-11-03"},{"lineNumber":20,"author":{"gitId":"Yuvaraj0702"},"content":"    private static final Path TYPICAL_STUDENTS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalStudentFriday.json\");","lastModifiedDate":"2022-11-03"},{"lineNumber":21,"author":{"gitId":"Yuvaraj0702"},"content":"    private static final Path INVALID_STUDENT_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidStudentFriday.json\");","lastModifiedDate":"2022-11-03"},{"lineNumber":22,"author":{"gitId":"Yuvaraj0702"},"content":"    private static final Path DUPLICATE_STUDENT_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateStudentFriday.json\");","lastModifiedDate":"2022-11-03"},{"lineNumber":23,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":24,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":25,"author":{"gitId":"Yuvaraj0702"},"content":"    @Test","lastModifiedDate":"2022-11-03"},{"lineNumber":26,"author":{"gitId":"Yuvaraj0702"},"content":"    public void toModelType_typicalStudentsFile_success() throws Exception {","lastModifiedDate":"2022-11-03"},{"lineNumber":27,"author":{"gitId":"Yuvaraj0702"},"content":"        JsonSerializableFriday dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_STUDENTS_FILE,","lastModifiedDate":"2022-11-03"},{"lineNumber":28,"author":{"gitId":"Yuvaraj0702"},"content":"                JsonSerializableFriday.class).get();","lastModifiedDate":"2022-11-03"},{"lineNumber":29,"author":{"gitId":"Yuvaraj0702"},"content":"        Friday fridayFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2022-11-03"},{"lineNumber":30,"author":{"gitId":"jorrdansoh"},"content":"        Friday typicalStudentsFriday \u003d TypicalStudents.getTypicalFridayForTest();","lastModifiedDate":"2022-11-05"},{"lineNumber":31,"author":{"gitId":"jorrdansoh"},"content":"        assertEquals(fridayFromFile, typicalStudentsFriday);","lastModifiedDate":"2022-11-05"},{"lineNumber":32,"author":{"gitId":"Yuvaraj0702"},"content":"    }","lastModifiedDate":"2022-11-03"},{"lineNumber":33,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":34,"author":{"gitId":"Yuvaraj0702"},"content":"    @Test","lastModifiedDate":"2022-11-03"},{"lineNumber":35,"author":{"gitId":"Yuvaraj0702"},"content":"    public void toModelType_invalidStudentFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2022-11-03"},{"lineNumber":36,"author":{"gitId":"Yuvaraj0702"},"content":"        JsonSerializableFriday dataFromFile \u003d JsonUtil.readJsonFile(INVALID_STUDENT_FILE,","lastModifiedDate":"2022-11-03"},{"lineNumber":37,"author":{"gitId":"Yuvaraj0702"},"content":"                JsonSerializableFriday.class).get();","lastModifiedDate":"2022-11-03"},{"lineNumber":38,"author":{"gitId":"Yuvaraj0702"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2022-11-03"},{"lineNumber":39,"author":{"gitId":"Yuvaraj0702"},"content":"    }","lastModifiedDate":"2022-11-03"},{"lineNumber":40,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":41,"author":{"gitId":"Yuvaraj0702"},"content":"    @Test","lastModifiedDate":"2022-11-03"},{"lineNumber":42,"author":{"gitId":"Yuvaraj0702"},"content":"    public void toModelType_duplicateStudents_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2022-11-03"},{"lineNumber":43,"author":{"gitId":"Yuvaraj0702"},"content":"        JsonSerializableFriday dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_STUDENT_FILE,","lastModifiedDate":"2022-11-03"},{"lineNumber":44,"author":{"gitId":"Yuvaraj0702"},"content":"                JsonSerializableFriday.class).get();","lastModifiedDate":"2022-11-03"},{"lineNumber":45,"author":{"gitId":"Yuvaraj0702"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableFriday.MESSAGE_DUPLICATE_STUDENT,","lastModifiedDate":"2022-11-03"},{"lineNumber":46,"author":{"gitId":"Yuvaraj0702"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2022-11-03"},{"lineNumber":47,"author":{"gitId":"Yuvaraj0702"},"content":"    }","lastModifiedDate":"2022-11-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"jorrdansoh":2,"Yuvaraj0702":38,"kaij77":1,"-":4,"HowSuen":3}},{"path":"src/test/java/friday/storage/JsonSerializableMasteryCheckBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kaij77"},"content":"package friday.storage;","lastModifiedDate":"2022-10-25"},{"lineNumber":2,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":3,"author":{"gitId":"kaij77"},"content":"import static friday.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-25"},{"lineNumber":4,"author":{"gitId":"kaij77"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-25"},{"lineNumber":5,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":6,"author":{"gitId":"kaij77"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"kaij77"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-10-25"},{"lineNumber":8,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":9,"author":{"gitId":"kaij77"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-25"},{"lineNumber":10,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":11,"author":{"gitId":"kaij77"},"content":"import friday.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-25"},{"lineNumber":12,"author":{"gitId":"kaij77"},"content":"import friday.commons.util.JsonUtil;","lastModifiedDate":"2022-10-25"},{"lineNumber":13,"author":{"gitId":"Yuvaraj0702"},"content":"import friday.model.Friday;","lastModifiedDate":"2022-11-03"},{"lineNumber":14,"author":{"gitId":"kaij77"},"content":"import friday.testutil.TypicalStudents;","lastModifiedDate":"2022-10-25"},{"lineNumber":15,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":16,"author":{"gitId":"kaij77"},"content":"public class JsonSerializableMasteryCheckBookTest {","lastModifiedDate":"2022-10-25"},{"lineNumber":17,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":18,"author":{"gitId":"kaij77"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\",","lastModifiedDate":"2022-10-25"},{"lineNumber":19,"author":{"gitId":"Yuvaraj0702"},"content":"            \"JsonSerializableFridayTest\");","lastModifiedDate":"2022-11-03"},{"lineNumber":20,"author":{"gitId":"Yuvaraj0702"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalStudentFriday.json\");","lastModifiedDate":"2022-11-03"},{"lineNumber":21,"author":{"gitId":"Yuvaraj0702"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidStudentFriday.json\");","lastModifiedDate":"2022-11-03"},{"lineNumber":22,"author":{"gitId":"Yuvaraj0702"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateStudentFriday.json\");","lastModifiedDate":"2022-11-03"},{"lineNumber":23,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":24,"author":{"gitId":"kaij77"},"content":"    @Test","lastModifiedDate":"2022-10-25"},{"lineNumber":25,"author":{"gitId":"kaij77"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2022-10-25"},{"lineNumber":26,"author":{"gitId":"Yuvaraj0702"},"content":"        JsonSerializableFriday dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2022-11-03"},{"lineNumber":27,"author":{"gitId":"Yuvaraj0702"},"content":"                JsonSerializableFriday.class).get();","lastModifiedDate":"2022-11-03"},{"lineNumber":28,"author":{"gitId":"Yuvaraj0702"},"content":"        Friday fridayFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2022-11-03"},{"lineNumber":29,"author":{"gitId":"Yuvaraj0702"},"content":"        Friday typicalPersonsFriday \u003d TypicalStudents.getTypicalFridayForTest();","lastModifiedDate":"2022-11-03"},{"lineNumber":30,"author":{"gitId":"Yuvaraj0702"},"content":"        assertEquals(fridayFromFile, typicalPersonsFriday);","lastModifiedDate":"2022-11-03"},{"lineNumber":31,"author":{"gitId":"kaij77"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":32,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":33,"author":{"gitId":"kaij77"},"content":"    @Test","lastModifiedDate":"2022-10-25"},{"lineNumber":34,"author":{"gitId":"kaij77"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2022-10-25"},{"lineNumber":35,"author":{"gitId":"Yuvaraj0702"},"content":"        JsonSerializableFriday dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2022-11-03"},{"lineNumber":36,"author":{"gitId":"Yuvaraj0702"},"content":"                JsonSerializableFriday.class).get();","lastModifiedDate":"2022-11-03"},{"lineNumber":37,"author":{"gitId":"kaij77"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2022-10-25"},{"lineNumber":38,"author":{"gitId":"kaij77"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":39,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":40,"author":{"gitId":"kaij77"},"content":"    @Test","lastModifiedDate":"2022-10-25"},{"lineNumber":41,"author":{"gitId":"kaij77"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2022-10-25"},{"lineNumber":42,"author":{"gitId":"Yuvaraj0702"},"content":"        JsonSerializableFriday dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2022-11-03"},{"lineNumber":43,"author":{"gitId":"Yuvaraj0702"},"content":"                JsonSerializableFriday.class).get();","lastModifiedDate":"2022-11-03"},{"lineNumber":44,"author":{"gitId":"Yuvaraj0702"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableFriday.MESSAGE_DUPLICATE_STUDENT,","lastModifiedDate":"2022-11-03"},{"lineNumber":45,"author":{"gitId":"kaij77"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2022-10-25"},{"lineNumber":46,"author":{"gitId":"kaij77"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":47,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":48,"author":{"gitId":"kaij77"},"content":"}","lastModifiedDate":"2022-10-25"}],"authorContributionMap":{"Yuvaraj0702":16,"kaij77":32}},{"path":"src/test/java/friday/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.storage;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"HowSuen"},"content":"import static friday.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"HowSuen"},"content":"import friday.commons.core.GuiSettings;","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"HowSuen"},"content":"import friday.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"HowSuen"},"content":"import friday.model.UserPrefs;","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"HowSuen"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\",","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"HowSuen"},"content":"            \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2022-10-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"Yuvaraj0702"},"content":"        userPrefs.setFridayFilePath(Paths.get(\"friday.json\"));","lastModifiedDate":"2022-10-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2022-10-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2022-10-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"Yuvaraj0702"},"content":"        Path prefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2022-11-03"},{"lineNumber":109,"author":{"gitId":"Yuvaraj0702"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(prefsFilePath);","lastModifiedDate":"2022-11-03"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"Yuvaraj0702":3,"-":113,"HowSuen":7}},{"path":"src/test/java/friday/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.storage;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"HowSuen"},"content":"import friday.commons.core.GuiSettings;","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"darrtzj"},"content":"import friday.model.Friday;","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"darrtzj"},"content":"import friday.model.ReadOnlyFriday;","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"HowSuen"},"content":"import friday.model.UserPrefs;","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"jorrdansoh"},"content":"import friday.testutil.TypicalStudents;","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"Yuvaraj0702"},"content":"        JsonFridayStorage fridayStorage \u003d new JsonFridayStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2022-10-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"Yuvaraj0702"},"content":"        storageManager \u003d new StorageManager(fridayStorage, userPrefsStorage);","lastModifiedDate":"2022-10-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"Yuvaraj0702"},"content":"    public void fridayReadSave() throws Exception {","lastModifiedDate":"2022-10-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"Yuvaraj0702"},"content":"         * {@link JsonFridayStorage} class.","lastModifiedDate":"2022-10-25"},{"lineNumber":55,"author":{"gitId":"kaij77"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonFridayStorageTest} class.","lastModifiedDate":"2022-10-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"Yuvaraj0702"},"content":"        Friday original \u003d TypicalStudents.getTypicalFriday();","lastModifiedDate":"2022-10-25"},{"lineNumber":58,"author":{"gitId":"darrtzj"},"content":"        storageManager.saveFriday(original);","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"darrtzj"},"content":"        ReadOnlyFriday retrieved \u003d storageManager.readFriday().get();","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"darrtzj"},"content":"        assertEquals(original, new Friday(retrieved));","lastModifiedDate":"2022-10-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"Yuvaraj0702"},"content":"    public void getFridayFilePath() {","lastModifiedDate":"2022-10-25"},{"lineNumber":65,"author":{"gitId":"darrtzj"},"content":"        assertNotNull(storageManager.getFridayFilePath());","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jorrdansoh":1,"Yuvaraj0702":6,"darrtzj":6,"kaij77":1,"-":51,"HowSuen":3}},{"path":"src/test/java/friday/testutil/Assert.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.testutil;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2019-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.function.Executable;","lastModifiedDate":"2019-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A set of assertion methods useful for writing tests.","lastModifiedDate":"2017-07-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Assert {","lastModifiedDate":"2017-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception.","lastModifiedDate":"2019-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This is a wrapper method that invokes {@link Assertions#assertThrows(Class, Executable)}, to maintain consistency","lastModifiedDate":"2019-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * with our custom {@link #assertThrows(Class, String, Executable)} method.","lastModifiedDate":"2019-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * To standardize API calls in this project, users should use this method instead of","lastModifiedDate":"2019-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Assertions#assertThrows(Class, Executable)}.","lastModifiedDate":"2019-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception with the {@code expectedMessage}.","lastModifiedDate":"2019-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * If there\u0027s no need for the verification of the exception\u0027s error message, call","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * {@link #assertThrows(Class, Executable)} instead.","lastModifiedDate":"2019-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @see #assertThrows(Class, Executable)","lastModifiedDate":"2019-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, String expectedMessage,","lastModifiedDate":"2019-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Throwable thrownException \u003d Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedMessage, thrownException.getMessage());","lastModifiedDate":"2019-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-17"}],"authorContributionMap":{"-":33,"HowSuen":1}},{"path":"src/test/java/friday/testutil/EditGradeDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.testutil;","lastModifiedDate":"2022-10-21"},{"lineNumber":2,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":3,"author":{"gitId":"HowSuen"},"content":"import friday.logic.commands.GradeCommand.EditGradeDescriptor;","lastModifiedDate":"2022-10-21"},{"lineNumber":4,"author":{"gitId":"HowSuen"},"content":"import friday.model.grades.Grade;","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"HowSuen"},"content":"import friday.model.grades.GradesList;","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"HowSuen"},"content":"/**","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"HowSuen"},"content":" * A utility class to help with building EditGradeDescriptor objects.","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"HowSuen"},"content":" */","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"HowSuen"},"content":"public class EditGradeDescriptorBuilder {","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"HowSuen"},"content":"    private EditGradeDescriptor descriptor;","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"HowSuen"},"content":"    public EditGradeDescriptorBuilder() {","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"HowSuen"},"content":"        descriptor \u003d new EditGradeDescriptor();","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"HowSuen"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":17,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":18,"author":{"gitId":"HowSuen"},"content":"    public EditGradeDescriptorBuilder(EditGradeDescriptor descriptor) {","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"HowSuen"},"content":"        this.descriptor \u003d new EditGradeDescriptor(descriptor);","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"HowSuen"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":22,"author":{"gitId":"HowSuen"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":23,"author":{"gitId":"HowSuen"},"content":"     * Returns an {@code EditGradeDescriptor} with fields containing {@code gradesList}\u0027s grades","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"HowSuen"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":25,"author":{"gitId":"HowSuen"},"content":"    public EditGradeDescriptorBuilder(GradesList gradesList) {","lastModifiedDate":"2022-10-21"},{"lineNumber":26,"author":{"gitId":"HowSuen"},"content":"        descriptor \u003d new EditGradeDescriptor();","lastModifiedDate":"2022-10-21"},{"lineNumber":27,"author":{"gitId":"HowSuen"},"content":"        descriptor.setRa1(gradesList.getGrade(\"RA1\"));","lastModifiedDate":"2022-10-21"},{"lineNumber":28,"author":{"gitId":"HowSuen"},"content":"        descriptor.setRa2(gradesList.getGrade(\"RA2\"));","lastModifiedDate":"2022-10-21"},{"lineNumber":29,"author":{"gitId":"jorrdansoh"},"content":"        descriptor.setMt(gradesList.getGrade(\"Midterm\"));","lastModifiedDate":"2022-10-24"},{"lineNumber":30,"author":{"gitId":"HowSuen"},"content":"        descriptor.setFt(gradesList.getGrade(\"Finals\"));","lastModifiedDate":"2022-10-21"},{"lineNumber":31,"author":{"gitId":"HowSuen"},"content":"        descriptor.setPa(gradesList.getGrade(\"Practical\"));","lastModifiedDate":"2022-10-21"},{"lineNumber":32,"author":{"gitId":"HowSuen"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":33,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":34,"author":{"gitId":"HowSuen"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":35,"author":{"gitId":"HowSuen"},"content":"     * Sets the {@code Grade} of the {@code EditGradeDescriptor} that we are building.","lastModifiedDate":"2022-10-21"},{"lineNumber":36,"author":{"gitId":"HowSuen"},"content":"     *","lastModifiedDate":"2022-10-21"},{"lineNumber":37,"author":{"gitId":"HowSuen"},"content":"     * @param examName the name of the exam","lastModifiedDate":"2022-10-21"},{"lineNumber":38,"author":{"gitId":"HowSuen"},"content":"     * @param score the score of the exam","lastModifiedDate":"2022-10-21"},{"lineNumber":39,"author":{"gitId":"HowSuen"},"content":"     * @return the EditGradeDescriptor to build","lastModifiedDate":"2022-10-21"},{"lineNumber":40,"author":{"gitId":"HowSuen"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":41,"author":{"gitId":"HowSuen"},"content":"    public EditGradeDescriptorBuilder withGrade(String examName, String score) {","lastModifiedDate":"2022-10-21"},{"lineNumber":42,"author":{"gitId":"HowSuen"},"content":"        Grade newGrade \u003d new Grade(examName, score);","lastModifiedDate":"2022-10-21"},{"lineNumber":43,"author":{"gitId":"HowSuen"},"content":"        switch (examName) {","lastModifiedDate":"2022-10-21"},{"lineNumber":44,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":45,"author":{"gitId":"HowSuen"},"content":"        case \"RA1\":","lastModifiedDate":"2022-10-21"},{"lineNumber":46,"author":{"gitId":"HowSuen"},"content":"            descriptor.setRa1(newGrade);","lastModifiedDate":"2022-10-21"},{"lineNumber":47,"author":{"gitId":"HowSuen"},"content":"            break;","lastModifiedDate":"2022-10-21"},{"lineNumber":48,"author":{"gitId":"HowSuen"},"content":"        case \"RA2\":","lastModifiedDate":"2022-10-21"},{"lineNumber":49,"author":{"gitId":"HowSuen"},"content":"            descriptor.setRa2(newGrade);","lastModifiedDate":"2022-10-21"},{"lineNumber":50,"author":{"gitId":"HowSuen"},"content":"            break;","lastModifiedDate":"2022-10-21"},{"lineNumber":51,"author":{"gitId":"HowSuen"},"content":"        case \"Practical\":","lastModifiedDate":"2022-10-21"},{"lineNumber":52,"author":{"gitId":"HowSuen"},"content":"            descriptor.setPa(newGrade);","lastModifiedDate":"2022-10-21"},{"lineNumber":53,"author":{"gitId":"HowSuen"},"content":"            break;","lastModifiedDate":"2022-10-21"},{"lineNumber":54,"author":{"gitId":"jorrdansoh"},"content":"        case \"Midterm\":","lastModifiedDate":"2022-10-24"},{"lineNumber":55,"author":{"gitId":"HowSuen"},"content":"            descriptor.setMt(newGrade);","lastModifiedDate":"2022-10-21"},{"lineNumber":56,"author":{"gitId":"HowSuen"},"content":"            break;","lastModifiedDate":"2022-10-21"},{"lineNumber":57,"author":{"gitId":"HowSuen"},"content":"        case \"Finals\":","lastModifiedDate":"2022-10-21"},{"lineNumber":58,"author":{"gitId":"HowSuen"},"content":"            descriptor.setFt(newGrade);","lastModifiedDate":"2022-10-21"},{"lineNumber":59,"author":{"gitId":"HowSuen"},"content":"            break;","lastModifiedDate":"2022-10-21"},{"lineNumber":60,"author":{"gitId":"HowSuen"},"content":"        default:","lastModifiedDate":"2022-10-21"},{"lineNumber":61,"author":{"gitId":"HowSuen"},"content":"            break;","lastModifiedDate":"2022-10-21"},{"lineNumber":62,"author":{"gitId":"HowSuen"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":63,"author":{"gitId":"HowSuen"},"content":"        return this;","lastModifiedDate":"2022-10-21"},{"lineNumber":64,"author":{"gitId":"HowSuen"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":65,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":66,"author":{"gitId":"HowSuen"},"content":"    public EditGradeDescriptor build() {","lastModifiedDate":"2022-10-21"},{"lineNumber":67,"author":{"gitId":"HowSuen"},"content":"        return descriptor;","lastModifiedDate":"2022-10-21"},{"lineNumber":68,"author":{"gitId":"HowSuen"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":69,"author":{"gitId":"HowSuen"},"content":"}","lastModifiedDate":"2022-10-21"}],"authorContributionMap":{"jorrdansoh":2,"HowSuen":67}},{"path":"src/test/java/friday/testutil/EditStudentDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.testutil;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"kaij77"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":8,"author":{"gitId":"HowSuen"},"content":"import friday.logic.commands.EditCommand;","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"HowSuen"},"content":"import friday.logic.commands.EditCommand.EditStudentDescriptor;","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"kaij77"},"content":"import friday.model.student.Consultation;","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"kaij77"},"content":"import friday.model.student.MasteryCheck;","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"kaij77"},"content":"import friday.model.student.Name;","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"kaij77"},"content":"import friday.model.student.Student;","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"kaij77"},"content":"import friday.model.student.TelegramHandle;","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"HowSuen"},"content":"import friday.model.tag.Tag;","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"HowSuen"},"content":" * A utility class to help with building EditStudentDescriptor objects.","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"HowSuen"},"content":"public class EditStudentDescriptorBuilder {","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"HowSuen"},"content":"    private EditStudentDescriptor descriptor;","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"HowSuen"},"content":"    public EditStudentDescriptorBuilder() {","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"HowSuen"},"content":"        descriptor \u003d new EditCommand.EditStudentDescriptor();","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"HowSuen"},"content":"    public EditStudentDescriptorBuilder(EditStudentDescriptor descriptor) {","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"HowSuen"},"content":"        this.descriptor \u003d new EditStudentDescriptor(descriptor);","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"jorrdansoh"},"content":"     * Returns an {@code EditStudentDescriptor} with fields containing {@code student}\u0027s details","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"HowSuen"},"content":"    public EditStudentDescriptorBuilder(Student student) {","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"HowSuen"},"content":"        descriptor \u003d new EditStudentDescriptor();","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"kaij77"},"content":"        descriptor.setName(student.getName());","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"kaij77"},"content":"        descriptor.setTelegramHandle(student.getTelegramHandle());","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"kaij77"},"content":"        descriptor.setConsultation(student.getConsultation());","lastModifiedDate":"2022-10-06"},{"lineNumber":40,"author":{"gitId":"kaij77"},"content":"        descriptor.setMasteryCheck(student.getMasteryCheck());","lastModifiedDate":"2022-10-06"},{"lineNumber":41,"author":{"gitId":"kaij77"},"content":"        descriptor.setTags(student.getTags());","lastModifiedDate":"2022-10-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":45,"author":{"gitId":"HowSuen"},"content":"     * Sets the {@code Name} of the {@code EditStudentDescriptor} that we are building.","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":47,"author":{"gitId":"HowSuen"},"content":"    public EditStudentDescriptorBuilder withName(String name) {","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"HowSuen"},"content":"     * Sets the {@code TelegramHandle} of the {@code EditStudentDescriptor} that we are building.","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":55,"author":{"gitId":"HowSuen"},"content":"    public EditStudentDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"kaij77"},"content":"        descriptor.setTelegramHandle(new TelegramHandle(phone));","lastModifiedDate":"2022-10-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"HowSuen"},"content":"     * Sets the {@code Consultation} of the {@code EditStudentDescriptor} that we are building.","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"HowSuen"},"content":"    public EditStudentDescriptorBuilder withConsultation(LocalDate desiredDate) {","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"kaij77"},"content":"        descriptor.setConsultation(new Consultation(desiredDate));","lastModifiedDate":"2022-10-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"HowSuen"},"content":"     * Sets the {@code MasteryCheck} of the {@code EditStudentDescriptor} that we are building.","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"HowSuen"},"content":"    public EditStudentDescriptorBuilder withMasteryCheck(LocalDate desiredDate) {","lastModifiedDate":"2022-10-12"},{"lineNumber":72,"author":{"gitId":"kaij77"},"content":"        descriptor.setMasteryCheck(new MasteryCheck(desiredDate));","lastModifiedDate":"2022-10-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"HowSuen"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditStudentDescriptor}","lastModifiedDate":"2022-10-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":80,"author":{"gitId":"HowSuen"},"content":"    public EditStudentDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2022-10-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":86,"author":{"gitId":"HowSuen"},"content":"    public EditStudentDescriptor build() {","lastModifiedDate":"2022-10-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"jorrdansoh":1,"kaij77":14,"-":50,"HowSuen":24}},{"path":"src/test/java/friday/testutil/FridayBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Yuvaraj0702"},"content":"package friday.testutil;","lastModifiedDate":"2022-10-23"},{"lineNumber":2,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":3,"author":{"gitId":"Yuvaraj0702"},"content":"import friday.model.Friday;","lastModifiedDate":"2022-10-23"},{"lineNumber":4,"author":{"gitId":"Yuvaraj0702"},"content":"import friday.model.student.Student;","lastModifiedDate":"2022-10-23"},{"lineNumber":5,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":6,"author":{"gitId":"Yuvaraj0702"},"content":"/**","lastModifiedDate":"2022-10-23"},{"lineNumber":7,"author":{"gitId":"Yuvaraj0702"},"content":" * A utility class to help with building Friday objects.","lastModifiedDate":"2022-10-24"},{"lineNumber":8,"author":{"gitId":"Yuvaraj0702"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2022-10-23"},{"lineNumber":9,"author":{"gitId":"jorrdansoh"},"content":" *     {@code Friday friday \u003d new FridayBuilder().withStudent(\"John\", \"Doe\").build();}","lastModifiedDate":"2022-11-01"},{"lineNumber":10,"author":{"gitId":"Yuvaraj0702"},"content":" */","lastModifiedDate":"2022-10-23"},{"lineNumber":11,"author":{"gitId":"Yuvaraj0702"},"content":"public class FridayBuilder {","lastModifiedDate":"2022-10-23"},{"lineNumber":12,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":13,"author":{"gitId":"Yuvaraj0702"},"content":"    private Friday friday;","lastModifiedDate":"2022-10-23"},{"lineNumber":14,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":15,"author":{"gitId":"Yuvaraj0702"},"content":"    public FridayBuilder() {","lastModifiedDate":"2022-10-23"},{"lineNumber":16,"author":{"gitId":"Yuvaraj0702"},"content":"        friday \u003d new Friday();","lastModifiedDate":"2022-10-23"},{"lineNumber":17,"author":{"gitId":"Yuvaraj0702"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":18,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":19,"author":{"gitId":"Yuvaraj0702"},"content":"    public FridayBuilder(Friday friday) {","lastModifiedDate":"2022-10-23"},{"lineNumber":20,"author":{"gitId":"Yuvaraj0702"},"content":"        this.friday \u003d friday;","lastModifiedDate":"2022-10-23"},{"lineNumber":21,"author":{"gitId":"Yuvaraj0702"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":22,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":23,"author":{"gitId":"Yuvaraj0702"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":24,"author":{"gitId":"jorrdansoh"},"content":"     * Adds a new {@code Student} to the {@code Friday} that we are building.","lastModifiedDate":"2022-11-01"},{"lineNumber":25,"author":{"gitId":"Yuvaraj0702"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":26,"author":{"gitId":"Yuvaraj0702"},"content":"    public FridayBuilder withStudent(Student student) {","lastModifiedDate":"2022-10-23"},{"lineNumber":27,"author":{"gitId":"Yuvaraj0702"},"content":"        friday.addStudent(student);","lastModifiedDate":"2022-10-23"},{"lineNumber":28,"author":{"gitId":"Yuvaraj0702"},"content":"        return this;","lastModifiedDate":"2022-10-23"},{"lineNumber":29,"author":{"gitId":"Yuvaraj0702"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":30,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":31,"author":{"gitId":"Yuvaraj0702"},"content":"    public Friday build() {","lastModifiedDate":"2022-10-23"},{"lineNumber":32,"author":{"gitId":"Yuvaraj0702"},"content":"        return friday;","lastModifiedDate":"2022-10-23"},{"lineNumber":33,"author":{"gitId":"Yuvaraj0702"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":34,"author":{"gitId":"Yuvaraj0702"},"content":"}","lastModifiedDate":"2022-10-23"}],"authorContributionMap":{"jorrdansoh":2,"Yuvaraj0702":32}},{"path":"src/test/java/friday/testutil/SerializableTestClass.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.testutil;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A class used to test serialization and deserialization","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class SerializableTestClass {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String JSON_STRING_REPRESENTATION \u003d String.format(\"{%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"  \\\"name\\\" : \\\"This is a test class\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"  \\\"listOfLocalDateTimes\\\" : \"","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"[ \\\"-999999999-01-01T00:00:00\\\", \\\"+999999999-12-31T23:59:59.999999999\\\", \"","lastModifiedDate":"2016-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"\\\"0001-01-01T01:01:00\\\" ],%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"  \\\"mapOfIntegerToString\\\" : {%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"    \\\"1\\\" : \\\"One\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"    \\\"2\\\" : \\\"Two\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    \\\"3\\\" : \\\"Three\\\"%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"  }%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"}\");","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String NAME_TEST_VALUE \u003d \"This is a test class\";","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private String name;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private List\u003cLocalDateTime\u003e listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private HashMap\u003cInteger, String\u003e mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getNameTestValue() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return NAME_TEST_VALUE;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static List\u003cLocalDateTime\u003e getListTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cLocalDateTime\u003e listOfLocalDateTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MIN);","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MAX);","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.of(1, 1, 1, 1, 1));","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static HashMap\u003cInteger, String\u003e getHashMapTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        HashMap\u003cInteger, String\u003e mapOfIntegerToString \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(1, \"One\");","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(2, \"Two\");","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(3, \"Three\");","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d getNameTestValue();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes \u003d getListTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        mapOfIntegerToString \u003d getHashMapTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getName() {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public List\u003cLocalDateTime\u003e getListOfLocalDateTimes() {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public HashMap\u003cInteger, String\u003e getMapOfIntegerToString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":71,"HowSuen":1}},{"path":"src/test/java/friday/testutil/StudentBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.testutil;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"kaij77"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":7,"author":{"gitId":"HowSuen"},"content":"import friday.model.grades.Grade;","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"HowSuen"},"content":"import friday.model.grades.GradesList;","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"kaij77"},"content":"import friday.model.student.Consultation;","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"kaij77"},"content":"import friday.model.student.MasteryCheck;","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"kaij77"},"content":"import friday.model.student.Name;","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"kaij77"},"content":"import friday.model.student.Remark;","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"kaij77"},"content":"import friday.model.student.Student;","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"kaij77"},"content":"import friday.model.student.TelegramHandle;","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"HowSuen"},"content":"import friday.model.tag.Tag;","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"HowSuen"},"content":"import friday.model.util.SampleDataUtil;","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"jorrdansoh"},"content":" * A utility class to help with building Student objects.","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":21,"author":{"gitId":"jorrdansoh"},"content":"public class StudentBuilder {","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":24,"author":{"gitId":"kaij77"},"content":"    public static final String DEFAULT_TELEGRAMHANDLE \u003d \"amy123\";","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"kaij77"},"content":"    public static final LocalDate DEFAULT_CONSULTATION \u003d LocalDate.of(2022, 9, 1);","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"kaij77"},"content":"    public static final LocalDate DEFAULT_MASTERYCHECK \u003d LocalDate.of(2022, 11, 22);","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"kaij77"},"content":"    public static final String DEFAULT_REMARK \u003d \"She loves CS1101S\";","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":30,"author":{"gitId":"kaij77"},"content":"    private TelegramHandle telegramHandle;","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"kaij77"},"content":"    private Consultation consultation;","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"kaij77"},"content":"    private MasteryCheck masteryCheck;","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Remark remark;","lastModifiedDate":"2022-09-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"HowSuen"},"content":"    private GradesList gradesList;","lastModifiedDate":"2022-10-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"jorrdansoh"},"content":"     * Creates a {@code StudentBuilder} with the default details.","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":40,"author":{"gitId":"jorrdansoh"},"content":"    public StudentBuilder() {","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"kaij77"},"content":"        telegramHandle \u003d new TelegramHandle(DEFAULT_TELEGRAMHANDLE);","lastModifiedDate":"2022-10-06"},{"lineNumber":43,"author":{"gitId":"kaij77"},"content":"        consultation \u003d new Consultation(DEFAULT_CONSULTATION);","lastModifiedDate":"2022-10-06"},{"lineNumber":44,"author":{"gitId":"kaij77"},"content":"        masteryCheck \u003d new MasteryCheck(DEFAULT_MASTERYCHECK);","lastModifiedDate":"2022-10-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        remark \u003d new Remark(DEFAULT_REMARK);","lastModifiedDate":"2022-09-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"HowSuen"},"content":"        gradesList \u003d new GradesList();","lastModifiedDate":"2022-10-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":51,"author":{"gitId":"jorrdansoh"},"content":"     * Initializes the StudentBuilder with the data of {@code studentToCopy}.","lastModifiedDate":"2022-10-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":53,"author":{"gitId":"jorrdansoh"},"content":"    public StudentBuilder(Student studentToCopy) {","lastModifiedDate":"2022-10-20"},{"lineNumber":54,"author":{"gitId":"kaij77"},"content":"        name \u003d studentToCopy.getName();","lastModifiedDate":"2022-10-06"},{"lineNumber":55,"author":{"gitId":"kaij77"},"content":"        telegramHandle \u003d studentToCopy.getTelegramHandle();","lastModifiedDate":"2022-10-06"},{"lineNumber":56,"author":{"gitId":"kaij77"},"content":"        consultation \u003d studentToCopy.getConsultation();","lastModifiedDate":"2022-10-06"},{"lineNumber":57,"author":{"gitId":"kaij77"},"content":"        masteryCheck \u003d studentToCopy.getMasteryCheck();","lastModifiedDate":"2022-10-06"},{"lineNumber":58,"author":{"gitId":"kaij77"},"content":"        remark \u003d studentToCopy.getRemark();","lastModifiedDate":"2022-10-06"},{"lineNumber":59,"author":{"gitId":"kaij77"},"content":"        tags \u003d new HashSet\u003c\u003e(studentToCopy.getTags());","lastModifiedDate":"2022-10-06"},{"lineNumber":60,"author":{"gitId":"HowSuen"},"content":"        gradesList \u003d studentToCopy.getGradesList();","lastModifiedDate":"2022-10-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":64,"author":{"gitId":"jorrdansoh"},"content":"     * Sets the {@code Name} of the {@code Student} that we are building.","lastModifiedDate":"2022-10-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":66,"author":{"gitId":"jorrdansoh"},"content":"    public StudentBuilder withName(String name) {","lastModifiedDate":"2022-10-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":72,"author":{"gitId":"jorrdansoh"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Student} that we are building.","lastModifiedDate":"2022-10-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":74,"author":{"gitId":"jorrdansoh"},"content":"    public StudentBuilder withTags(String ... tags) {","lastModifiedDate":"2022-10-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":80,"author":{"gitId":"kaij77"},"content":"     * Sets the {@code MasteryCheck} of the {@code Student} that we are building with the given isPassed.","lastModifiedDate":"2022-11-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":82,"author":{"gitId":"kaij77"},"content":"    public StudentBuilder withMasteryCheck(LocalDate desiredDate, boolean isPassed) {","lastModifiedDate":"2022-11-06"},{"lineNumber":83,"author":{"gitId":"kaij77"},"content":"        this.masteryCheck \u003d new MasteryCheck(desiredDate, isPassed);","lastModifiedDate":"2022-11-06"},{"lineNumber":84,"author":{"gitId":"kaij77"},"content":"        return this;","lastModifiedDate":"2022-11-06"},{"lineNumber":85,"author":{"gitId":"kaij77"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":86,"author":{"gitId":"kaij77"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":87,"author":{"gitId":"kaij77"},"content":"    /**","lastModifiedDate":"2022-11-06"},{"lineNumber":88,"author":{"gitId":"kaij77"},"content":"     * Sets the {@code MasteryCheck} of the {@code Student} that we are building to an empty Mastery Check.","lastModifiedDate":"2022-11-06"},{"lineNumber":89,"author":{"gitId":"kaij77"},"content":"     */","lastModifiedDate":"2022-11-06"},{"lineNumber":90,"author":{"gitId":"kaij77"},"content":"    public StudentBuilder withEmptyMasteryCheck() {","lastModifiedDate":"2022-11-06"},{"lineNumber":91,"author":{"gitId":"kaij77"},"content":"        this.masteryCheck \u003d MasteryCheck.EMPTY_MASTERYCHECK;","lastModifiedDate":"2022-11-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":96,"author":{"gitId":"jorrdansoh"},"content":"     * Sets the {@code TelegramHandle} of the {@code Student} that we are building.","lastModifiedDate":"2022-10-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":98,"author":{"gitId":"jorrdansoh"},"content":"    public StudentBuilder withTelegramHandle(String handle) {","lastModifiedDate":"2022-10-20"},{"lineNumber":99,"author":{"gitId":"kaij77"},"content":"        this.telegramHandle \u003d new TelegramHandle(handle);","lastModifiedDate":"2022-10-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":104,"author":{"gitId":"jorrdansoh"},"content":"     * Sets the {@code Consultation} of the {@code Student} that we are building.","lastModifiedDate":"2022-10-20"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":106,"author":{"gitId":"jorrdansoh"},"content":"    public StudentBuilder withConsultation(LocalDate desiredDate) {","lastModifiedDate":"2022-10-20"},{"lineNumber":107,"author":{"gitId":"kaij77"},"content":"        this.consultation \u003d new Consultation(desiredDate);","lastModifiedDate":"2022-10-06"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-14"},{"lineNumber":112,"author":{"gitId":"jorrdansoh"},"content":"     * Sets the {@code Remark} of the {@code Student} that we are building.","lastModifiedDate":"2022-10-20"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-14"},{"lineNumber":114,"author":{"gitId":"jorrdansoh"},"content":"    public StudentBuilder withRemark(String remark) {","lastModifiedDate":"2022-10-20"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        this.remark \u003d new Remark(remark);","lastModifiedDate":"2022-09-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2022-09-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":119,"author":{"gitId":"HowSuen"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":120,"author":{"gitId":"HowSuen"},"content":"     * Sets the {@code GradesList} of the {@code Student} that we are building.","lastModifiedDate":"2022-10-21"},{"lineNumber":121,"author":{"gitId":"HowSuen"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":122,"author":{"gitId":"HowSuen"},"content":"    public StudentBuilder withGradesList(String examName, String score) {","lastModifiedDate":"2022-10-21"},{"lineNumber":123,"author":{"gitId":"HowSuen"},"content":"        GradesList.editGrade(this.gradesList, new Grade(examName, score));","lastModifiedDate":"2022-10-21"},{"lineNumber":124,"author":{"gitId":"HowSuen"},"content":"        return this;","lastModifiedDate":"2022-10-21"},{"lineNumber":125,"author":{"gitId":"HowSuen"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":126,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":127,"author":{"gitId":"kaij77"},"content":"    public Student build() {","lastModifiedDate":"2022-10-06"},{"lineNumber":128,"author":{"gitId":"HowSuen"},"content":"        return new Student(name, telegramHandle, consultation, masteryCheck, remark, tags, gradesList);","lastModifiedDate":"2022-10-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":131,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"jorrdansoh":16,"kaij77":37,"-":61,"HowSuen":17}},{"path":"src/test/java/friday/testutil/StudentUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.testutil;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"kaij77"},"content":"import static friday.logic.parser.CliSyntax.PREFIX_CONSULTATION;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"HowSuen"},"content":"import static friday.logic.parser.CliSyntax.PREFIX_FINALS;","lastModifiedDate":"2022-10-24"},{"lineNumber":5,"author":{"gitId":"kaij77"},"content":"import static friday.logic.parser.CliSyntax.PREFIX_MASTERYCHECK;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"HowSuen"},"content":"import static friday.logic.parser.CliSyntax.PREFIX_MIDTERM;","lastModifiedDate":"2022-10-24"},{"lineNumber":7,"author":{"gitId":"HowSuen"},"content":"import static friday.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"HowSuen"},"content":"import static friday.logic.parser.CliSyntax.PREFIX_PRACTICAL;","lastModifiedDate":"2022-10-24"},{"lineNumber":9,"author":{"gitId":"HowSuen"},"content":"import static friday.logic.parser.CliSyntax.PREFIX_RA1;","lastModifiedDate":"2022-10-24"},{"lineNumber":10,"author":{"gitId":"HowSuen"},"content":"import static friday.logic.parser.CliSyntax.PREFIX_RA2;","lastModifiedDate":"2022-10-24"},{"lineNumber":11,"author":{"gitId":"HowSuen"},"content":"import static friday.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"kaij77"},"content":"import static friday.logic.parser.CliSyntax.PREFIX_TELEGRAMHANDLE;","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":16,"author":{"gitId":"HowSuen"},"content":"import friday.logic.commands.AddCommand;","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"HowSuen"},"content":"import friday.logic.commands.EditCommand.EditStudentDescriptor;","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"HowSuen"},"content":"import friday.logic.commands.GradeCommand.EditGradeDescriptor;","lastModifiedDate":"2022-10-24"},{"lineNumber":19,"author":{"gitId":"kaij77"},"content":"import friday.model.student.Student;","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"HowSuen"},"content":"import friday.model.tag.Tag;","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"jorrdansoh"},"content":" * A utility class for Student.","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"jorrdansoh"},"content":"public class StudentUtil {","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"jorrdansoh"},"content":"     * Returns an add command string for adding the {@code student}.","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"kaij77"},"content":"    public static String getAddCommand(Student student) {","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"jorrdansoh"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getStudentDetails(student);","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":35,"author":{"gitId":"jorrdansoh"},"content":"     * Returns the part of command string for the given {@code student}\u0027s details.","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":37,"author":{"gitId":"jorrdansoh"},"content":"    public static String getStudentDetails(Student student) {","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"Yuvaraj0702"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2022-11-02"},{"lineNumber":39,"author":{"gitId":"Yuvaraj0702"},"content":"        stringBuilder.append(PREFIX_NAME + student.getName().fullName + \" \");","lastModifiedDate":"2022-11-02"},{"lineNumber":40,"author":{"gitId":"Yuvaraj0702"},"content":"        stringBuilder.append(PREFIX_TELEGRAMHANDLE + student.getTelegramHandle().value + \" \");","lastModifiedDate":"2022-11-02"},{"lineNumber":41,"author":{"gitId":"Yuvaraj0702"},"content":"        stringBuilder.append(PREFIX_CONSULTATION + student.getConsultation().toString() + \" \");","lastModifiedDate":"2022-11-02"},{"lineNumber":42,"author":{"gitId":"Yuvaraj0702"},"content":"        stringBuilder.append(PREFIX_MASTERYCHECK + student.getMasteryCheck().toString() + \" \");","lastModifiedDate":"2022-11-02"},{"lineNumber":43,"author":{"gitId":"kaij77"},"content":"        student.getTags().stream().forEach(","lastModifiedDate":"2022-10-06"},{"lineNumber":44,"author":{"gitId":"Yuvaraj0702"},"content":"            s -\u003e stringBuilder.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2022-11-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"Yuvaraj0702"},"content":"        return stringBuilder.toString();","lastModifiedDate":"2022-11-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"HowSuen"},"content":"     * Returns the part of command string for the given {@code EditStudentDescriptor}\u0027s details.","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"jorrdansoh"},"content":"    public static String getEditStudentDescriptorDetails(EditStudentDescriptor descriptor) {","lastModifiedDate":"2022-10-20"},{"lineNumber":53,"author":{"gitId":"Yuvaraj0702"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2022-11-02"},{"lineNumber":54,"author":{"gitId":"Yuvaraj0702"},"content":"        descriptor.getName().ifPresent(name -\u003e","lastModifiedDate":"2022-11-02"},{"lineNumber":55,"author":{"gitId":"Yuvaraj0702"},"content":"                stringBuilder.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2022-11-02"},{"lineNumber":56,"author":{"gitId":"Yuvaraj0702"},"content":"        descriptor.getTelegramHandle().ifPresent(phone -\u003e","lastModifiedDate":"2022-11-02"},{"lineNumber":57,"author":{"gitId":"Yuvaraj0702"},"content":"                stringBuilder.append(PREFIX_TELEGRAMHANDLE).append(phone.value)","lastModifiedDate":"2022-11-02"},{"lineNumber":58,"author":{"gitId":"kaij77"},"content":"                .append(\" \"));","lastModifiedDate":"2022-10-06"},{"lineNumber":59,"author":{"gitId":"Yuvaraj0702"},"content":"        descriptor.getConsultation().ifPresent(email -\u003e","lastModifiedDate":"2022-11-02"},{"lineNumber":60,"author":{"gitId":"Yuvaraj0702"},"content":"                stringBuilder.append(PREFIX_CONSULTATION).append(email.toString())","lastModifiedDate":"2022-11-02"},{"lineNumber":61,"author":{"gitId":"kaij77"},"content":"                .append(\" \"));","lastModifiedDate":"2022-10-06"},{"lineNumber":62,"author":{"gitId":"Yuvaraj0702"},"content":"        descriptor.getMasteryCheck().ifPresent(address -\u003e","lastModifiedDate":"2022-11-02"},{"lineNumber":63,"author":{"gitId":"Yuvaraj0702"},"content":"                stringBuilder.append(PREFIX_MASTERYCHECK).append(address.toString())","lastModifiedDate":"2022-11-02"},{"lineNumber":64,"author":{"gitId":"kaij77"},"content":"                .append(\" \"));","lastModifiedDate":"2022-10-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":68,"author":{"gitId":"Yuvaraj0702"},"content":"                stringBuilder.append(PREFIX_TAG);","lastModifiedDate":"2022-11-02"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":70,"author":{"gitId":"Yuvaraj0702"},"content":"                tags.forEach(s -\u003e stringBuilder.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2022-11-02"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":73,"author":{"gitId":"Yuvaraj0702"},"content":"        return stringBuilder.toString();","lastModifiedDate":"2022-11-02"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":75,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":76,"author":{"gitId":"HowSuen"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":77,"author":{"gitId":"HowSuen"},"content":"     * Returns the part of command string for the given {@code EditGradeDescriptor}\u0027s grades.","lastModifiedDate":"2022-10-24"},{"lineNumber":78,"author":{"gitId":"HowSuen"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":79,"author":{"gitId":"HowSuen"},"content":"    public static String getEditGradesDescriptorDetails(EditGradeDescriptor descriptor) {","lastModifiedDate":"2022-10-24"},{"lineNumber":80,"author":{"gitId":"Yuvaraj0702"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2022-11-02"},{"lineNumber":81,"author":{"gitId":"Yuvaraj0702"},"content":"        descriptor.getRa1().ifPresent(ra1 -\u003e","lastModifiedDate":"2022-11-02"},{"lineNumber":82,"author":{"gitId":"Yuvaraj0702"},"content":"                stringBuilder.append(PREFIX_RA1).append(ra1.getScore()).append(\" \"));","lastModifiedDate":"2022-11-02"},{"lineNumber":83,"author":{"gitId":"Yuvaraj0702"},"content":"        descriptor.getRa2().ifPresent(ra2 -\u003e","lastModifiedDate":"2022-11-02"},{"lineNumber":84,"author":{"gitId":"Yuvaraj0702"},"content":"                stringBuilder.append(PREFIX_RA2).append(ra2.getScore()).append(\" \"));","lastModifiedDate":"2022-11-02"},{"lineNumber":85,"author":{"gitId":"Yuvaraj0702"},"content":"        descriptor.getMt().ifPresent(mt -\u003e","lastModifiedDate":"2022-11-02"},{"lineNumber":86,"author":{"gitId":"Yuvaraj0702"},"content":"                stringBuilder.append(PREFIX_MIDTERM).append(mt.getScore()).append(\" \"));","lastModifiedDate":"2022-11-02"},{"lineNumber":87,"author":{"gitId":"Yuvaraj0702"},"content":"        descriptor.getFt().ifPresent(ft -\u003e","lastModifiedDate":"2022-11-02"},{"lineNumber":88,"author":{"gitId":"Yuvaraj0702"},"content":"                stringBuilder.append(PREFIX_FINALS).append(ft.getScore()).append(\" \"));","lastModifiedDate":"2022-11-02"},{"lineNumber":89,"author":{"gitId":"Yuvaraj0702"},"content":"        descriptor.getPa().ifPresent(pa -\u003e","lastModifiedDate":"2022-11-02"},{"lineNumber":90,"author":{"gitId":"Yuvaraj0702"},"content":"                stringBuilder.append(PREFIX_PRACTICAL).append(pa.getScore()).append(\" \"));","lastModifiedDate":"2022-11-02"},{"lineNumber":91,"author":{"gitId":"Yuvaraj0702"},"content":"        return stringBuilder.toString();","lastModifiedDate":"2022-11-02"},{"lineNumber":92,"author":{"gitId":"HowSuen"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"jorrdansoh":7,"Yuvaraj0702":31,"kaij77":9,"-":27,"HowSuen":19}},{"path":"src/test/java/friday/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.testutil;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"HowSuen"},"content":"import friday.commons.core.index.Index;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"HowSuen"},"content":"import friday.model.Model;","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"kaij77"},"content":"import friday.model.student.Student;","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"jorrdansoh"},"content":"     * Returns the middle index of the student in the {@code model}\u0027s student list.","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"jorrdansoh"},"content":"        return Index.fromOneBased(model.getStudentList().size() / 2);","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"jorrdansoh"},"content":"     * Returns the last index of the student in the {@code model}\u0027s student list.","lastModifiedDate":"2022-10-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"jorrdansoh"},"content":"        return Index.fromOneBased(model.getStudentList().size());","lastModifiedDate":"2022-10-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"jorrdansoh"},"content":"     * Returns the student in the {@code model}\u0027s student list at {@code index}.","lastModifiedDate":"2022-10-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"jorrdansoh"},"content":"    public static Student getStudent(Model model, Index index) {","lastModifiedDate":"2022-10-20"},{"lineNumber":53,"author":{"gitId":"jorrdansoh"},"content":"        return model.getStudentList().get(index.getZeroBased());","lastModifiedDate":"2022-10-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jorrdansoh":7,"kaij77":1,"-":44,"HowSuen":3}},{"path":"src/test/java/friday/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.testutil;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"HowSuen"},"content":"import friday.commons.core.index.Index;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"jorrdansoh"},"content":"    public static final Index INDEX_FIRST_STUDENT \u003d Index.fromOneBased(1);","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"jorrdansoh"},"content":"    public static final Index INDEX_SECOND_STUDENT \u003d Index.fromOneBased(2);","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"jorrdansoh"},"content":"    public static final Index INDEX_THIRD_STUDENT \u003d Index.fromOneBased(3);","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"kaij77"},"content":"    public static final Index INDEX_FOURTH_STUDENT \u003d Index.fromOneBased(4);","lastModifiedDate":"2022-11-06"},{"lineNumber":13,"author":{"gitId":"kaij77"},"content":"    public static final Index INDEX_FIFTH_STUDENT \u003d Index.fromOneBased(5);","lastModifiedDate":"2022-11-06"},{"lineNumber":14,"author":{"gitId":"kaij77"},"content":"    public static final Index INDEX_SEVENTH_STUDENT \u003d Index.fromOneBased(7);","lastModifiedDate":"2022-11-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"jorrdansoh":3,"kaij77":3,"-":7,"HowSuen":2}},{"path":"src/test/java/friday/testutil/TypicalStudents.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.testutil;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":3,"author":{"gitId":"kaij77"},"content":"import static friday.logic.commands.CommandTestUtil.VALID_CONSULTATION_AMY;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"kaij77"},"content":"import static friday.logic.commands.CommandTestUtil.VALID_CONSULTATION_BOB;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"kaij77"},"content":"import static friday.logic.commands.CommandTestUtil.VALID_MASTERYCHECK_DATE_AMY;","lastModifiedDate":"2022-11-06"},{"lineNumber":6,"author":{"gitId":"kaij77"},"content":"import static friday.logic.commands.CommandTestUtil.VALID_MASTERYCHECK_DATE_BOB;","lastModifiedDate":"2022-11-06"},{"lineNumber":7,"author":{"gitId":"HowSuen"},"content":"import static friday.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"HowSuen"},"content":"import static friday.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"HowSuen"},"content":"import static friday.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"HowSuen"},"content":"import static friday.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"kaij77"},"content":"import static friday.logic.commands.CommandTestUtil.VALID_TELEGRAMHANDLE_AMY;","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"kaij77"},"content":"import static friday.logic.commands.CommandTestUtil.VALID_TELEGRAMHANDLE_BOB;","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"HowSuen"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"kaij77"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":19,"author":{"gitId":"darrtzj"},"content":"import friday.model.Friday;","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"kaij77"},"content":"import friday.model.student.Student;","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":23,"author":{"gitId":"jorrdansoh"},"content":" * A utility class containing a list of {@code Student} objects to be used in tests.","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":25,"author":{"gitId":"jorrdansoh"},"content":"public class TypicalStudents {","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":27,"author":{"gitId":"kaij77"},"content":"    // Mastery Checks of these Students have not been marked as passed","lastModifiedDate":"2022-11-06"},{"lineNumber":28,"author":{"gitId":"jorrdansoh"},"content":"    public static final Student ALICE \u003d new StudentBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"kaij77"},"content":"            .withMasteryCheck(LocalDate.of(2022, 2, 17), false)","lastModifiedDate":"2022-11-06"},{"lineNumber":30,"author":{"gitId":"kaij77"},"content":"            .withConsultation(LocalDate.of(2022, 2, 22))","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"HowSuen"},"content":"            .withTelegramHandle(\"al1ce\").withRemark(\"She loves CS1101S\")","lastModifiedDate":"2022-10-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":33,"author":{"gitId":"jorrdansoh"},"content":"    public static final Student BENSON \u003d new StudentBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"kaij77"},"content":"            .withMasteryCheck(LocalDate.of(2022, 8, 17), false)","lastModifiedDate":"2022-11-06"},{"lineNumber":35,"author":{"gitId":"kaij77"},"content":"            .withRemark(\"He can\u0027t take beer!\").withConsultation(LocalDate.of(2022, 9, 17))","lastModifiedDate":"2022-11-06"},{"lineNumber":36,"author":{"gitId":"kaij77"},"content":"            .withTelegramHandle(\"benson123\").withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2022-11-06"},{"lineNumber":37,"author":{"gitId":"jorrdansoh"},"content":"    public static final Student CARL \u003d new StudentBuilder().withName(\"Carl Kurz\").withTelegramHandle(\"carl_isle\")","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"kaij77"},"content":"            .withConsultation(LocalDate.of(2022, 11, 17))","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"kaij77"},"content":"            .withMasteryCheck(LocalDate.of(2090, 11, 12), false).build();","lastModifiedDate":"2022-11-06"},{"lineNumber":40,"author":{"gitId":"kaij77"},"content":"    // Mastery Checks of these Students have been marked as passed","lastModifiedDate":"2022-11-06"},{"lineNumber":41,"author":{"gitId":"jorrdansoh"},"content":"    public static final Student DANIEL \u003d new StudentBuilder().withName(\"Daniel Meier\").withTelegramHandle(\"d4ni3l\")","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"kaij77"},"content":"            .withConsultation(LocalDate.of(2022, 1, 21))","lastModifiedDate":"2022-10-06"},{"lineNumber":43,"author":{"gitId":"kaij77"},"content":"            .withMasteryCheck(LocalDate.of(2022, 4, 2), true)","lastModifiedDate":"2022-11-06"},{"lineNumber":44,"author":{"gitId":"kaij77"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2022-11-06"},{"lineNumber":45,"author":{"gitId":"jorrdansoh"},"content":"    public static final Student ELLE \u003d new StudentBuilder().withName(\"Elle Meyer\").withTelegramHandle(\"e33elle33\")","lastModifiedDate":"2022-10-20"},{"lineNumber":46,"author":{"gitId":"kaij77"},"content":"            .withConsultation(LocalDate.of(2022, 9, 7))","lastModifiedDate":"2022-10-06"},{"lineNumber":47,"author":{"gitId":"kaij77"},"content":"            .withMasteryCheck(LocalDate.of(2022, 1, 1), true).withTags(\"friends\").build();","lastModifiedDate":"2022-11-06"},{"lineNumber":48,"author":{"gitId":"jorrdansoh"},"content":"    public static final Student FIONA \u003d new StudentBuilder().withName(\"Fiona Kunz\").withTelegramHandle(\"fionakunz\")","lastModifiedDate":"2022-10-20"},{"lineNumber":49,"author":{"gitId":"kaij77"},"content":"            .withConsultation(LocalDate.of(2022, 2, 20))","lastModifiedDate":"2022-10-06"},{"lineNumber":50,"author":{"gitId":"kaij77"},"content":"            .withMasteryCheck(LocalDate.of(2022, 3, 27), true)","lastModifiedDate":"2022-11-06"},{"lineNumber":51,"author":{"gitId":"kaij77"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2022-11-06"},{"lineNumber":52,"author":{"gitId":"kaij77"},"content":"    // empty Mastery Check","lastModifiedDate":"2022-11-06"},{"lineNumber":53,"author":{"gitId":"jorrdansoh"},"content":"    public static final Student GEORGE \u003d new StudentBuilder().withName(\"George Best\").withTelegramHandle(\"imthe_best\")","lastModifiedDate":"2022-10-20"},{"lineNumber":54,"author":{"gitId":"kaij77"},"content":"            .withConsultation(LocalDate.of(2022, 12, 17)).withEmptyMasteryCheck()","lastModifiedDate":"2022-11-06"},{"lineNumber":55,"author":{"gitId":"kaij77"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2022-11-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":58,"author":{"gitId":"jorrdansoh"},"content":"    public static final Student HOON \u003d new StudentBuilder().withName(\"Hoon Meier\").withTelegramHandle(\"hoonigan1\")","lastModifiedDate":"2022-10-20"},{"lineNumber":59,"author":{"gitId":"kaij77"},"content":"            .withConsultation(LocalDate.of(2022, 2, 23))","lastModifiedDate":"2022-10-06"},{"lineNumber":60,"author":{"gitId":"kaij77"},"content":"            .withMasteryCheck(LocalDate.of(2020, 2, 17), false)","lastModifiedDate":"2022-11-06"},{"lineNumber":61,"author":{"gitId":"kaij77"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2022-11-06"},{"lineNumber":62,"author":{"gitId":"jorrdansoh"},"content":"    public static final Student IDA \u003d new StudentBuilder().withName(\"Ida Mueller\").withTelegramHandle(\"id4mueller\")","lastModifiedDate":"2022-10-20"},{"lineNumber":63,"author":{"gitId":"kaij77"},"content":"            .withConsultation(LocalDate.of(2024, 2, 17))","lastModifiedDate":"2022-10-06"},{"lineNumber":64,"author":{"gitId":"kaij77"},"content":"            .withMasteryCheck(LocalDate.of(2024, 2, 7), false)","lastModifiedDate":"2022-11-06"},{"lineNumber":65,"author":{"gitId":"kaij77"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2022-11-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":67,"author":{"gitId":"jorrdansoh"},"content":"    // Manually added - Student\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2022-10-20"},{"lineNumber":68,"author":{"gitId":"jorrdansoh"},"content":"    public static final Student AMY \u003d new StudentBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2022-10-20"},{"lineNumber":69,"author":{"gitId":"kaij77"},"content":"            .withTelegramHandle(VALID_TELEGRAMHANDLE_AMY).withConsultation(VALID_CONSULTATION_AMY)","lastModifiedDate":"2022-10-06"},{"lineNumber":70,"author":{"gitId":"kaij77"},"content":"            .withMasteryCheck(VALID_MASTERYCHECK_DATE_AMY, false).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-11-06"},{"lineNumber":71,"author":{"gitId":"jorrdansoh"},"content":"    public static final Student BOB \u003d new StudentBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2022-10-20"},{"lineNumber":72,"author":{"gitId":"kaij77"},"content":"            .withTelegramHandle(VALID_TELEGRAMHANDLE_BOB).withConsultation(VALID_CONSULTATION_BOB)","lastModifiedDate":"2022-10-06"},{"lineNumber":73,"author":{"gitId":"kaij77"},"content":"            .withMasteryCheck(VALID_MASTERYCHECK_DATE_BOB, false).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2022-11-06"},{"lineNumber":74,"author":{"gitId":"kaij77"},"content":"            .build();","lastModifiedDate":"2022-11-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":76,"author":{"gitId":"jorrdansoh"},"content":"    private TypicalStudents() {} // prevents instantiation","lastModifiedDate":"2022-10-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"jorrdansoh"},"content":"     * Returns an {@code Friday} with all the typical students.","lastModifiedDate":"2022-11-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":81,"author":{"gitId":"Yuvaraj0702"},"content":"    public static Friday getTypicalFriday() {","lastModifiedDate":"2022-10-25"},{"lineNumber":82,"author":{"gitId":"jorrdansoh"},"content":"        Friday friday \u003d new Friday();","lastModifiedDate":"2022-11-01"},{"lineNumber":83,"author":{"gitId":"jorrdansoh"},"content":"        for (Student student : getTypicalStudents()) {","lastModifiedDate":"2022-10-20"},{"lineNumber":84,"author":{"gitId":"jorrdansoh"},"content":"            friday.addStudent(student);","lastModifiedDate":"2022-11-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":86,"author":{"gitId":"jorrdansoh"},"content":"        return friday;","lastModifiedDate":"2022-11-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":89,"author":{"gitId":"Yuvaraj0702"},"content":"    public static Friday getTypicalFridayForTest() {","lastModifiedDate":"2022-11-03"},{"lineNumber":90,"author":{"gitId":"Yuvaraj0702"},"content":"        Friday ab \u003d new Friday();","lastModifiedDate":"2022-11-03"},{"lineNumber":91,"author":{"gitId":"Yuvaraj0702"},"content":"        for (Student student : getTypicalStudentsForTest()) {","lastModifiedDate":"2022-11-03"},{"lineNumber":92,"author":{"gitId":"Yuvaraj0702"},"content":"            ab.addStudent(student);","lastModifiedDate":"2022-11-03"},{"lineNumber":93,"author":{"gitId":"Yuvaraj0702"},"content":"        }","lastModifiedDate":"2022-11-03"},{"lineNumber":94,"author":{"gitId":"Yuvaraj0702"},"content":"        return ab;","lastModifiedDate":"2022-11-03"},{"lineNumber":95,"author":{"gitId":"Yuvaraj0702"},"content":"    }","lastModifiedDate":"2022-11-03"},{"lineNumber":96,"author":{"gitId":"Yuvaraj0702"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":97,"author":{"gitId":"jorrdansoh"},"content":"    public static List\u003cStudent\u003e getTypicalStudents() {","lastModifiedDate":"2022-10-20"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":100,"author":{"gitId":"Yuvaraj0702"},"content":"    public static List\u003cStudent\u003e getTypicalStudentsForTest() {","lastModifiedDate":"2022-11-03"},{"lineNumber":101,"author":{"gitId":"Yuvaraj0702"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON));","lastModifiedDate":"2022-11-03"},{"lineNumber":102,"author":{"gitId":"Yuvaraj0702"},"content":"    }","lastModifiedDate":"2022-11-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"jorrdansoh":21,"Yuvaraj0702":12,"darrtzj":1,"kaij77":39,"-":23,"HowSuen":7}},{"path":"src/test/java/friday/ui/TestFxmlObject.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.ui;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.beans.DefaultProperty;","lastModifiedDate":"2016-12-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A test object which can be constructed via an FXML file.","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unlike other JavaFX classes, this class can be constructed without the JavaFX toolkit being initialized.","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"@DefaultProperty(\"text\")","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class TestFxmlObject {","lastModifiedDate":"2016-12-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private String text;","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public TestFxmlObject() {}","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public TestFxmlObject(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        setText(text);","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public String getText() {","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return text;","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setText(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.text \u003d text;","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-04-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                || (other instanceof TestFxmlObject // instanceof handles nulls","lastModifiedDate":"2017-04-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                        \u0026\u0026 text.equals(((TestFxmlObject) other).getText()));","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"-":34,"HowSuen":1}},{"path":"src/test/java/friday/ui/UiPartTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HowSuen"},"content":"package friday.ui;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"HowSuen"},"content":"import static friday.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2019-04-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"HowSuen"},"content":"import friday.MainApp;","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class UiPartTest {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String MISSING_FILE_PATH \u003d \"UiPartTest/missingFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_FILE_PATH \u003d \"UiPartTest/invalidFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_PATH \u003d \"UiPartTest/validFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_WITH_FX_ROOT_PATH \u003d \"UiPartTest/validFileWithFxRoot.fxml\";","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final TestFxmlObject VALID_FILE_ROOT \u003d new TestFxmlObject(\"Hello World!\");","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor_nullFileUrl_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null));","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null, new Object()));","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_missingFileUrl_throwsAssertionError() throws Exception {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        URL missingFileUrl \u003d new URL(testFolder.toUri().toURL(), MISSING_FILE_PATH);","lastModifiedDate":"2019-04-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl));","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl, new Object()));","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileUrl_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        URL invalidFileUrl \u003d getTestFileUrl(INVALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl));","lastModifiedDate":"2022-10-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl, new Object()));","lastModifiedDate":"2022-10-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void constructor_validFileUrl_loadsFile() {","lastModifiedDate":"2016-12-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl).getRoot());","lastModifiedDate":"2016-12-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-11-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void constructor_validFileWithFxRootUrl_loadsFile() {","lastModifiedDate":"2017-11-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_WITH_FX_ROOT_PATH);","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        TestFxmlObject root \u003d new TestFxmlObject();","lastModifiedDate":"2017-11-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl, root).getRoot());","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void constructor_nullFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null));","lastModifiedDate":"2022-10-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null, new Object()));","lastModifiedDate":"2022-10-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void constructor_missingFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH));","lastModifiedDate":"2022-10-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH, new Object()));","lastModifiedDate":"2022-10-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileName_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH));","lastModifiedDate":"2022-10-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH, new Object()));","lastModifiedDate":"2022-10-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private URL getTestFileUrl(String testFilePath) {","lastModifiedDate":"2016-12-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String testFilePathInView \u003d \"/view/\" + testFilePath;","lastModifiedDate":"2016-12-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        URL testFileUrl \u003d MainApp.class.getResource(testFilePathInView);","lastModifiedDate":"2016-12-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertNotNull(testFileUrl, testFilePathInView + \" does not exist.\");","lastModifiedDate":"2019-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return testFileUrl;","lastModifiedDate":"2016-12-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * UiPart used for testing.","lastModifiedDate":"2016-12-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * It should only be used with invalid FXML files or the valid file located at {@link VALID_FILE_PATH}.","lastModifiedDate":"2016-12-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class TestUiPart\u003cT\u003e extends UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @FXML","lastModifiedDate":"2016-12-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        private TestFxmlObject validFileRoot; // Check that @FXML annotations work","lastModifiedDate":"2016-12-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            super(fxmlFileName, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl);","lastModifiedDate":"2016-12-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            super(fxmlFileName);","lastModifiedDate":"2016-12-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"-":111,"HowSuen":3}},{"path":"src/test/resources/view/UiPartTest/validFile.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-12-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"HowSuen"},"content":"\u003c?import friday.ui.TestFxmlObject?\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003eHello World!\u003c/TestFxmlObject\u003e","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"-":3,"HowSuen":1}},{"path":"src/test/resources/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":3,"author":{"gitId":"HowSuen"},"content":"\u003cfx:root type\u003d\"friday.ui.TestFxmlObject\" xmlns\u003d\"http://javafx.com/javafx\"","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"-":5,"HowSuen":1}}]
