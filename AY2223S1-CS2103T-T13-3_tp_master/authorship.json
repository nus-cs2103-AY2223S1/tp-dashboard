[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"josephaedan"},"content":"# :memo: CLInkedIn","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":3,"author":{"gitId":"josephaedan"},"content":"CLInkedIn is a desktop contact management Java application made for Recruiters to manage their contacts list of candidates.","lastModifiedDate":"2022-09-28"},{"lineNumber":4,"author":{"gitId":"josephaedan"},"content":"CLInkedIn operates mainly using a Command Line Interface (CLI), but still has a Graphical User Interface (GUI) made with JavaFX for improved user experience.","lastModifiedDate":"2022-09-28"},{"lineNumber":5,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"josephaedan"},"content":"If you can type fast, CLInkedIn can get your contact management tasks done faster than","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"josephaedan"},"content":"traditional GUI apps.","lastModifiedDate":"2022-09-28"},{"lineNumber":8,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":9,"author":{"gitId":"josephaedan"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S1-CS2103T-T13-3/tp/actions)","lastModifiedDate":"2022-09-28"},{"lineNumber":10,"author":{"gitId":"josephaedan"},"content":"[![codecov](https://codecov.io/gh/AY2223S1-CS2103T-T13-3/tp/branch/master/graph/badge.svg?token\u003d3QKZJQZ9Q9)](https://codecov.io/gh/AY2223S1-CS2103T-T13-3/tp)","lastModifiedDate":"2022-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"josephaedan"},"content":"* Example usages:","lastModifiedDate":"2022-09-28"},{"lineNumber":15,"author":{"gitId":"josephaedan"},"content":"  * Keep track of the candidates/contacts you have met through events or recruitment applications.","lastModifiedDate":"2022-09-28"},{"lineNumber":16,"author":{"gitId":"josephaedan"},"content":"  * Tag candidates by their skills, experience and stage in the recruitment process.","lastModifiedDate":"2022-09-28"},{"lineNumber":17,"author":{"gitId":"josephaedan"},"content":"  * Filter candidates according to a specific skill, experience or stage in the recruitment process.","lastModifiedDate":"2022-09-28"},{"lineNumber":18,"author":{"gitId":"josephaedan"},"content":"  * Edit/remove details of the candidates/contacts.","lastModifiedDate":"2022-09-28"},{"lineNumber":19,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":20,"author":{"gitId":"josephaedan"},"content":"* For more information on how to use CLInkedIn, please see our [User Guide](https://ay2223s1-cs2103t-t13-3.github.io/tp/UserGuide.html)","lastModifiedDate":"2022-09-28"},{"lineNumber":21,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":22,"author":{"gitId":"josephaedan"},"content":"* For more information about the implementation of CLInkedIn, please see our [Developer Guide](https://ay2223s1-cs2103t-t13-3.github.io/tp/DeveloperGuide.html)","lastModifiedDate":"2022-09-28"},{"lineNumber":23,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":24,"author":{"gitId":"josephaedan"},"content":"* For the detailed documentation of this project, see the **[CLInkedIn Product Website](https://ay2223s1-cs2103t-t13-3.github.io/tp/)**.","lastModifiedDate":"2022-09-28"},{"lineNumber":25,"author":{"gitId":"josephaedan"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2022-09-28"}],"authorContributionMap":{"josephaedan":22,"-":3}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"emptygx"},"content":"mainClassName \u003d \u0027seedu.clinkedin.Main\u0027","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"pratham31012002"},"content":"    implementation group: \u0027com.opencsv\u0027, name: \u0027opencsv\u0027, version: \u00274.1\u0027","lastModifiedDate":"2022-10-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":64,"author":{"gitId":"agarwal-anjali"},"content":"    implementation group: \u0027org.apache.httpcomponents\u0027, name: \u0027httpclient\u0027, version: \u00274.3.4\u0027","lastModifiedDate":"2022-10-27"},{"lineNumber":65,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":69,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":73,"author":{"gitId":"emptygx"},"content":"    archiveFileName \u003d \u0027CLInkedIn.jar\u0027","lastModifiedDate":"2022-10-16"},{"lineNumber":74,"author":{"gitId":"emptygx"},"content":"}","lastModifiedDate":"2022-10-16"},{"lineNumber":75,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":76,"author":{"gitId":"emptygx"},"content":"run {","lastModifiedDate":"2022-10-16"},{"lineNumber":77,"author":{"gitId":"emptygx"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-10-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"agarwal-anjali":2,"emptygx":6,"pratham31012002":2,"-":70}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"josephaedan"},"content":"### Joseph Aedan Marcus","lastModifiedDate":"2022-09-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"josephaedan"},"content":"\u003cimg src\u003d\"images/josephaedan.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"josephaedan"},"content":"[[github](https://github.com/josephaedan)]","lastModifiedDate":"2022-09-28"},{"lineNumber":17,"author":{"gitId":"josephaedan"},"content":"[[portfolio](team/josephaedan.md)]","lastModifiedDate":"2022-09-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"josephaedan"},"content":"* Role: Developer","lastModifiedDate":"2022-09-28"},{"lineNumber":20,"author":{"gitId":"josephaedan"},"content":"* Responsibilities: UI and Feature Implementation","lastModifiedDate":"2022-09-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"pratham31012002"},"content":"### Pratham Jain","lastModifiedDate":"2022-09-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"pratham31012002"},"content":"\u003cimg src\u003d\"images/pratham31012002.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"pratham31012002"},"content":"[[github](https://github.com/pratham31012002)]","lastModifiedDate":"2022-09-28"},{"lineNumber":27,"author":{"gitId":"pratham31012002"},"content":"[[portfolio](team/pratham31012002.md)]","lastModifiedDate":"2022-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"pratham31012002"},"content":"* Role: Developer","lastModifiedDate":"2022-09-28"},{"lineNumber":30,"author":{"gitId":"pratham31012002"},"content":"* Responsibilities: Scheduling and tracking","lastModifiedDate":"2022-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"agarwal-anjali"},"content":"### Anjali Agarwal","lastModifiedDate":"2022-09-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"agarwal-anjali"},"content":"\u003cimg src\u003d\"images/agarwal-anjali.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"agarwal-anjali"},"content":"[[github](http://github.com/agarwal-anjali)]","lastModifiedDate":"2022-09-28"},{"lineNumber":37,"author":{"gitId":"agarwal-anjali"},"content":"[[portfolio](team/agarwal-anjali.md)]","lastModifiedDate":"2022-09-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"agarwal-anjali"},"content":"* Responsibilities: Integration","lastModifiedDate":"2022-09-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"emptygx"},"content":"### Marcus Tan","lastModifiedDate":"2022-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"emptygx"},"content":"\u003cimg src\u003d\"images/emptygx.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"emptygx"},"content":"[[github](http://github.com/emptygx)]","lastModifiedDate":"2022-09-28"},{"lineNumber":47,"author":{"gitId":"emptygx"},"content":"[[portfolio](team/emptygx.md)]","lastModifiedDate":"2022-09-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"emptygx"},"content":"* Responsibilities: UI and Design","lastModifiedDate":"2022-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"emptygx"},"content":"### Ying Ting","lastModifiedDate":"2022-09-28"},{"lineNumber":53,"author":{"gitId":"ytingtan"},"content":"\u003cimg src\u003d\"images/ytingtan.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"emptygx"},"content":"[[github](http://github.com/ytingtan)]","lastModifiedDate":"2022-09-28"},{"lineNumber":56,"author":{"gitId":"emptygx"},"content":"[[portfolio](team/ytingtan.md)]","lastModifiedDate":"2022-09-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"agarwal-anjali":5,"ytingtan":1,"josephaedan":6,"pratham31012002":6,"emptygx":8,"-":33}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"pratham31012002"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.)","lastModifiedDate":"2022-10-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"emptygx"},"content":"### Find feature","lastModifiedDate":"2022-10-27"},{"lineNumber":158,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":159,"author":{"gitId":"emptygx"},"content":"#### Implementation","lastModifiedDate":"2022-10-27"},{"lineNumber":160,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":161,"author":{"gitId":"emptygx"},"content":"The find mechanism is facilitated by `FindCommandParser` which implements `Parser`. It parses the user input and","lastModifiedDate":"2022-10-27"},{"lineNumber":162,"author":{"gitId":"emptygx"},"content":"returns a `FindCommand` object. The `FindCommand` object then calls the `Model#updateFilteredPersonList()` method to","lastModifiedDate":"2022-10-27"},{"lineNumber":163,"author":{"gitId":"emptygx"},"content":"update the list of persons shown to the user.","lastModifiedDate":"2022-10-27"},{"lineNumber":164,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":165,"author":{"gitId":"emptygx"},"content":"The find mechanism has two modes: generic and prefix-based.","lastModifiedDate":"2022-10-27"},{"lineNumber":166,"author":{"gitId":"emptygx"},"content":"- The generic mode is used when the user does not specify any prefix.","lastModifiedDate":"2022-10-27"},{"lineNumber":167,"author":{"gitId":"emptygx"},"content":"- The prefix-based mode is used when the user specifies at least one prefix.","lastModifiedDate":"2022-10-27"},{"lineNumber":168,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":169,"author":{"gitId":"emptygx"},"content":"Both modes use the `DetailsContainKeywordsPredicate` class to filter the person list, which uses the","lastModifiedDate":"2022-10-27"},{"lineNumber":170,"author":{"gitId":"emptygx"},"content":"`containsKeywordsIgnoreCase` method to check if the person\u0027s details contain the keywords.","lastModifiedDate":"2022-10-27"},{"lineNumber":171,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":172,"author":{"gitId":"emptygx"},"content":"Given below is an example usage scenario of the generic mode and how the find mechanism behaves at each step.","lastModifiedDate":"2022-10-27"},{"lineNumber":173,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":174,"author":{"gitId":"emptygx"},"content":"Step 1. The user launches the application for the first time. The `AddressBook` will be initialized with the initial","lastModifiedDate":"2022-10-27"},{"lineNumber":175,"author":{"gitId":"emptygx"},"content":"address book state, and the `filteredPersons` will be initialized to show all persons.","lastModifiedDate":"2022-10-27"},{"lineNumber":176,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":177,"author":{"gitId":"emptygx"},"content":"Step 2. The user executes `find Betsy` command to find the person named `Betsy` in the address book. The `find` command","lastModifiedDate":"2022-10-27"},{"lineNumber":178,"author":{"gitId":"emptygx"},"content":"calls `FindCommandParser#parse()` which will parse the command.","lastModifiedDate":"2022-10-27"},{"lineNumber":179,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":180,"author":{"gitId":"emptygx"},"content":"Step 3. Since this is a generic find command, `FindCommandParser` trims the user input and creates a","lastModifiedDate":"2022-10-27"},{"lineNumber":181,"author":{"gitId":"emptygx"},"content":"`DetailsContainsKeywordsPredicate` object with the trimmed user input. The `DetailsContainsKeywordsPredicate` object is","lastModifiedDate":"2022-10-27"},{"lineNumber":182,"author":{"gitId":"emptygx"},"content":"then passed to a newly created `FindCommand` object.","lastModifiedDate":"2022-10-27"},{"lineNumber":183,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":184,"author":{"gitId":"emptygx"},"content":"Step 4. The `FindCommand` object calls the `Model#updateFilteredPersonList()` method with the","lastModifiedDate":"2022-10-27"},{"lineNumber":185,"author":{"gitId":"emptygx"},"content":"`DetailsContainsKeywordsPredicate` object as the argument. The `Model#updateFilteredPersonList()` method will then","lastModifiedDate":"2022-10-27"},{"lineNumber":186,"author":{"gitId":"emptygx"},"content":"update the `filteredPersons` list in `ModelManager` to show only persons that matches the predicate.","lastModifiedDate":"2022-10-27"},{"lineNumber":187,"author":{"gitId":"emptygx"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The `DetailsContainsKeywordsPredicate`","lastModifiedDate":"2022-10-27"},{"lineNumber":188,"author":{"gitId":"emptygx"},"content":"object will check if the person\u0027s details contains the keywords using the `containsKeywordsIgnoreCase` method in its","lastModifiedDate":"2022-10-27"},{"lineNumber":189,"author":{"gitId":"emptygx"},"content":"`test` method.","lastModifiedDate":"2022-10-27"},{"lineNumber":190,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":191,"author":{"gitId":"emptygx"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":192,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":193,"author":{"gitId":"emptygx"},"content":"Given below is an example usage scenario of the prefix-based mode and how the find mechanism behaves at each step.","lastModifiedDate":"2022-10-27"},{"lineNumber":194,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":195,"author":{"gitId":"emptygx"},"content":"Step 1. The user launches the application for the first time. The `AddressBook` will be initialized with the initial","lastModifiedDate":"2022-10-27"},{"lineNumber":196,"author":{"gitId":"emptygx"},"content":"address book state, and the `filteredPersons` will be initialized to show all persons.","lastModifiedDate":"2022-10-27"},{"lineNumber":197,"author":{"gitId":"emptygx"},"content":"Step 2. The user executes `find n/Betsy` command to find the person named `Betsy` in the address book. The `find`","lastModifiedDate":"2022-10-27"},{"lineNumber":198,"author":{"gitId":"emptygx"},"content":"command calls `FindCommandParser#parse()` which will parse the command.","lastModifiedDate":"2022-10-27"},{"lineNumber":199,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":200,"author":{"gitId":"emptygx"},"content":"Step 3. Since this is a prefix-based find command, `FindCommandParser` uses `ArgumentTokenizer` to tokenize the user","lastModifiedDate":"2022-10-27"},{"lineNumber":201,"author":{"gitId":"emptygx"},"content":"input. `ArgumentTokenizer` will then find the prefixes in the user input and put the keywords in the respective","lastModifiedDate":"2022-10-27"},{"lineNumber":202,"author":{"gitId":"emptygx"},"content":"prefixes into a map. `FindCommandParser` will then create a `DetailsContainsKeywordsPredicate` object with the keywords","lastModifiedDate":"2022-10-27"},{"lineNumber":203,"author":{"gitId":"emptygx"},"content":"in the map. The `DetailsContainsKeywordsPredicate` object is then passed to a newly created `FindCommand` object.","lastModifiedDate":"2022-10-27"},{"lineNumber":204,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":205,"author":{"gitId":"emptygx"},"content":"Step 4. The `FindCommand` object calls the `Model#updateFilteredPersonList()` method with the","lastModifiedDate":"2022-10-27"},{"lineNumber":206,"author":{"gitId":"emptygx"},"content":"`DetailsContainsKeywordsPredicate` object as the argument. The `Model#updateFilteredPersonList()` method will then","lastModifiedDate":"2022-10-27"},{"lineNumber":207,"author":{"gitId":"emptygx"},"content":"update the `filteredPersons` list in `ModelManager` to show only persons that matches the predicate.","lastModifiedDate":"2022-10-27"},{"lineNumber":208,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":209,"author":{"gitId":"emptygx"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** For prefix-based find command, the","lastModifiedDate":"2022-10-27"},{"lineNumber":210,"author":{"gitId":"emptygx"},"content":"`DetailsContainsKeywordsPredicate` object will check if the person\u0027s specified details based on the prefixes contains","lastModifiedDate":"2022-10-27"},{"lineNumber":211,"author":{"gitId":"emptygx"},"content":"the keywords using the `containsKeywordsIgnoreCase` method in its `test` method.","lastModifiedDate":"2022-10-27"},{"lineNumber":212,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":213,"author":{"gitId":"emptygx"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":214,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":215,"author":{"gitId":"emptygx"},"content":"If the user input is invalid, `FindCommandParser#parse()` will throw a `ParseException` with the respective error. This","lastModifiedDate":"2022-10-27"},{"lineNumber":216,"author":{"gitId":"emptygx"},"content":"will give the user the correct syntax to use the find command.","lastModifiedDate":"2022-10-27"},{"lineNumber":217,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":218,"author":{"gitId":"emptygx"},"content":"The following sequence diagram shows how the find operation works:","lastModifiedDate":"2022-10-27"},{"lineNumber":219,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":220,"author":{"gitId":"emptygx"},"content":"\u003cimg src\u003d\"images/FindSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":221,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":222,"author":{"gitId":"emptygx"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `FindCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2022-10-27"},{"lineNumber":223,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":224,"author":{"gitId":"emptygx"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":225,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":226,"author":{"gitId":"emptygx"},"content":"The following activity diagram summarizes what happens when a user executes a find command:","lastModifiedDate":"2022-10-27"},{"lineNumber":227,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":228,"author":{"gitId":"emptygx"},"content":"![FindActivityDiagram](images/FindActivityDiagram.png)","lastModifiedDate":"2022-10-27"},{"lineNumber":229,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":230,"author":{"gitId":"emptygx"},"content":"#### Design Considerations","lastModifiedDate":"2022-10-27"},{"lineNumber":231,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":232,"author":{"gitId":"emptygx"},"content":"##### Aspect: How find executes:","lastModifiedDate":"2022-10-27"},{"lineNumber":233,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":234,"author":{"gitId":"emptygx"},"content":"* **Alternative 1 (current choice):** One `FindCommand` class and `COMMAND_WORD` that handles both generic and","lastModifiedDate":"2022-10-27"},{"lineNumber":235,"author":{"gitId":"emptygx"},"content":"prefix-based find.","lastModifiedDate":"2022-10-27"},{"lineNumber":236,"author":{"gitId":"emptygx"},"content":"    * Pros: Less code duplication.","lastModifiedDate":"2022-10-27"},{"lineNumber":237,"author":{"gitId":"emptygx"},"content":"    * Pros: More user-friendly.","lastModifiedDate":"2022-10-27"},{"lineNumber":238,"author":{"gitId":"emptygx"},"content":"    * Cons: More complicated logic in `FindCommandParser` class.","lastModifiedDate":"2022-10-27"},{"lineNumber":239,"author":{"gitId":"emptygx"},"content":"    * Cons: Greater difficulty in implementing (more cases to consider).","lastModifiedDate":"2022-10-27"},{"lineNumber":240,"author":{"gitId":"emptygx"},"content":"* **Alternative 2:** One `FindCommand` class and `COMMAND_WORD` that handles generic find and multiple find classes","lastModifiedDate":"2022-10-27"},{"lineNumber":241,"author":{"gitId":"emptygx"},"content":"that handle prefix-based find e.g. `FindNameCommand`, `FindPhoneCommand`, `FindEmailCommand`.","lastModifiedDate":"2022-10-27"},{"lineNumber":242,"author":{"gitId":"emptygx"},"content":"    * Pros: Easier to implement.","lastModifiedDate":"2022-10-27"},{"lineNumber":243,"author":{"gitId":"emptygx"},"content":"    * Pros: Less complicated logic in `FindCommandParser` class.","lastModifiedDate":"2022-10-27"},{"lineNumber":244,"author":{"gitId":"emptygx"},"content":"    * Cons: More code duplication (have to create new classes for each prefix that are almost identical).","lastModifiedDate":"2022-10-27"},{"lineNumber":245,"author":{"gitId":"emptygx"},"content":"    * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2022-10-27"},{"lineNumber":246,"author":{"gitId":"emptygx"},"content":"    * Cons: Less user-friendly.","lastModifiedDate":"2022-10-27"},{"lineNumber":247,"author":{"gitId":"emptygx"},"content":"    * Cons: User must remember the different commands for each prefix.","lastModifiedDate":"2022-10-27"},{"lineNumber":248,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":249,"author":{"gitId":"emptygx"},"content":"### Add/Edit/Delete Tags Feature","lastModifiedDate":"2022-10-27"},{"lineNumber":250,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":251,"author":{"gitId":"emptygx"},"content":"#### Implementation","lastModifiedDate":"2022-10-27"},{"lineNumber":252,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":253,"author":{"gitId":"emptygx"},"content":"The addition, modification and deletion of tags are executed through `AddCommand`, `AddTagCommand`, `DeleteTagCommand`, `EditCommand`, and facilated by `Tag`, `TagType`, `UniqueTagTypeMap` and `UniqueTagList`.","lastModifiedDate":"2022-10-27"},{"lineNumber":254,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":255,"author":{"gitId":"emptygx"},"content":"Each candidate in the `UniquePersonList` has a `UniqueTagTypeMap`, which represents a map of the tag types and corresponding tags belonging to the person. `UniqueTagTypeMap` implements the following operations:","lastModifiedDate":"2022-10-27"},{"lineNumber":256,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":257,"author":{"gitId":"emptygx"},"content":"* `UniqueTagTypeMap#mergeTagTypeMap()` — Merges a `UniqueTagTypeMap` with the existing `UniqueTagTypeMap` of the candidate.","lastModifiedDate":"2022-10-27"},{"lineNumber":258,"author":{"gitId":"emptygx"},"content":"* `UniqueTagTypeMap#removeTags()` — Removes the tags from the `UniqueTagTypeMap` of the candidate.","lastModifiedDate":"2022-10-27"},{"lineNumber":259,"author":{"gitId":"emptygx"},"content":"* `UniqueTagTypeMap#mergeTag()` — Adds a tag of the given tag type to the `UniqueTagTypeMap` of the candidate.","lastModifiedDate":"2022-10-27"},{"lineNumber":260,"author":{"gitId":"emptygx"},"content":"* `UniqueTagTypeMap#setTagTypeMap()` — Replaces the `UniqueTagTypeMap` of the candidate with the given `UniqueTagTypeMap`.","lastModifiedDate":"2022-10-27"},{"lineNumber":261,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":262,"author":{"gitId":"emptygx"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The `UniqueTagTypeMap` internally uses an `ObservableMap`, backed by a `HashMap`, that maps each tag type of the candidate to a `UniqueTagList` of tags.","lastModifiedDate":"2022-10-27"},{"lineNumber":263,"author":{"gitId":"emptygx"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":264,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":265,"author":{"gitId":"emptygx"},"content":"Given below is an example usage scenario and how the add/edit/delete Tag mechanism behaves at each step:","lastModifiedDate":"2022-10-27"},{"lineNumber":266,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":267,"author":{"gitId":"emptygx"},"content":"Step 1. The user executes `addTag 3 st/Java dt/Bachelors` to add a skill tag `Java` and degree tag `Bachelors` to the 3rd candidate in the displayed list of candidates. After being parsed by the `AddTagCommandParser` to an `AddTagCommand`, the `AddTagCommand` initializes a new `UniqueTagTypeMap` with the existing `UniqueTagTypeMap` of candidate `3` by invoking the `UniqueTagTypeMap#setTagTypeMap()`, and merges the new tags by invoking `UniqueTagTypeMap#mergeTagTypeMap()`. After this, a new `Person` is created with the `updatedTags` and all other attributes same as that of the existing `Person`, and the `ModelManager#setPerson` is invoked to modify the addressBook with the updated candidate.","lastModifiedDate":"2022-10-27"},{"lineNumber":268,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":269,"author":{"gitId":"emptygx"},"content":"Step 2. The user executes `edit 3 st/Java-JavaScript` to edit the skill tag `Java` to `JavaScript` of the 3rd candidate in the displayed list of candidates. After being parsed by the `EditCommandParser` to an `EditCommand`, the `EditCommand` initializes a new `UniqueTagTypeMap` with the existing `UniqueTagTypeMap` of candidate `3` by invoking the `UniqueTagTypeMap#setTagTypeMap()`, removes the existing tags to be edited by invoking `UniqueTagTypeMap#removeTags()` and adds the edited tags by invoking the `UniqueTagTypeMap#mergeTagTypeMap()`. After this, a new `Person` is created with the `updatedTags` and all other attributes same as that of the existing `Person`, and the `ModelManager#setPerson` is invoked to modify the addressBook with the updated candidate.","lastModifiedDate":"2022-10-27"},{"lineNumber":270,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":271,"author":{"gitId":"emptygx"},"content":"Step 3. The user executes `deleteTag 3 st/JavaScript dt/Bachelors` to delete the skill tag `JavaScript` and degree tag `Bachelors` of the 3rd candidate in the displayed list of candidates. After being parsed by the `DeleteTagCommand` to a `DeleteTagCommand`, the `DeleteTagCommand` initializes a new `UniqueTagTypeMap` with the existing `UniqueTagTypeMap` of candidate `3` by invoking the `UniqueTagTypeMap#setTagTypeMap()` and removes the tags to be deleted by invoking `UniqueTagTypeMap#removeTags()`. After this, a new `Person` is created with the `updatedTags` and all other attributes same as that of the existing `Person`, and the `ModelManager#setPerson` is invoked to modify the addressBook with the updated candidate.","lastModifiedDate":"2022-10-27"},{"lineNumber":272,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":273,"author":{"gitId":"emptygx"},"content":"#### Design Considerations:","lastModifiedDate":"2022-10-27"},{"lineNumber":274,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":275,"author":{"gitId":"emptygx"},"content":"**Aspect: How the addressBook is updated:**","lastModifiedDate":"2022-10-27"},{"lineNumber":276,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":277,"author":{"gitId":"emptygx"},"content":"* **Alternative 1 (current choice):** Creates a new person each time a tag is added, edited or deleted.","lastModifiedDate":"2022-10-27"},{"lineNumber":278,"author":{"gitId":"emptygx"},"content":"    * Pros: Ensures that `Person` and all its attributes are immutable.","lastModifiedDate":"2022-10-27"},{"lineNumber":279,"author":{"gitId":"emptygx"},"content":"    * Cons: May be inefficient compared to directly updating the attributes of `Person`.","lastModifiedDate":"2022-10-27"},{"lineNumber":280,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":281,"author":{"gitId":"emptygx"},"content":"* **Alternative 2:** Modifies the existing `UniqueTagTypeMap` of the candidate each time a tag is added, edited or deleted.","lastModifiedDate":"2022-10-27"},{"lineNumber":282,"author":{"gitId":"emptygx"},"content":"  itself.","lastModifiedDate":"2022-10-27"},{"lineNumber":283,"author":{"gitId":"emptygx"},"content":"    * Pros: May be more efficient, as a new `Person` instance is not created every time a tag is added, edited or deleted.","lastModifiedDate":"2022-10-27"},{"lineNumber":284,"author":{"gitId":"emptygx"},"content":"    * Cons: Allowing `Person` to be mutated may not be safe and defensive.","lastModifiedDate":"2022-10-27"},{"lineNumber":285,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":286,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":287,"author":{"gitId":"emptygx"},"content":"### Create/Edit/Delete Tag Types feature","lastModifiedDate":"2022-10-27"},{"lineNumber":288,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":289,"author":{"gitId":"emptygx"},"content":"For the ease of classifying tags and storing candidate information in a more organised way, users can now also create Tag Types and assign tags to the relevant Tag Types.","lastModifiedDate":"2022-10-27"},{"lineNumber":290,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":291,"author":{"gitId":"emptygx"},"content":"This feature is facilitated by `UniqueTagTypeMap` class. It implements the `Iterable\u003cTagType\u003e` interface.","lastModifiedDate":"2022-10-27"},{"lineNumber":292,"author":{"gitId":"emptygx"},"content":"Additionally, it implements the following operations:","lastModifiedDate":"2022-10-27"},{"lineNumber":293,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":294,"author":{"gitId":"emptygx"},"content":"* UniqueTagTypeMap#createTagType()  —  Creates a unique Tag Type and adds it to the prefixMap of available Tag Types.","lastModifiedDate":"2022-10-27"},{"lineNumber":295,"author":{"gitId":"emptygx"},"content":"* UniqueTagTypeMap#setExistingTagType()  —  Edits the Tag Type name and Tag Type alias of an existing Tag Type.","lastModifiedDate":"2022-10-27"},{"lineNumber":296,"author":{"gitId":"emptygx"},"content":"* UniqueTagTypeMap#removeExistingTagType()  —  Deletes a Tag Type from the prefixMap and, hence, the Tag Type is no more recognised as a valid Tag Type.","lastModifiedDate":"2022-10-27"},{"lineNumber":297,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":298,"author":{"gitId":"emptygx"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The `prefixMap` in `UniqueTagTypeMap` is a HashMap that maps all the existing Tag Type alias to their respective Tag Types. For user convenience, we have already provided the user with the three basic Tag Types a recruiter might need: Skills Tag Type (alias: st/), Degree Tag Type (alias: dt/), and Job Type Tag Type (alias: jtt/)\u003cbr\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":299,"author":{"gitId":"emptygx"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":300,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":301,"author":{"gitId":"emptygx"},"content":"Given below is an example usage scenario and how the create/edit/delete Tag Types mechanism behaves at each step:","lastModifiedDate":"2022-10-27"},{"lineNumber":302,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":303,"author":{"gitId":"emptygx"},"content":"Step 1. The user launches the application for the first time. The `prefixMap` in the `UniqueTagTypeMap` will be initialised with the initial 3 Key — Value pairs: st/ — Skills, dt/ — Degree, and jtt/ — Job Type.","lastModifiedDate":"2022-10-27"},{"lineNumber":304,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":305,"author":{"gitId":"emptygx"},"content":"Step 2. The user executes `createTagType Grade grdt` command to add a Grade Tag Type to the available Tag Types so that the recruiter can now add Tags of Grade Tag Type to candidates using the alias grdt/. The `createTagTYpe` command calls the `UniqueTagTypeMap#createTagType()`, causing the addition of grdt/ — Grade key-value pair to the `prefixMap`.","lastModifiedDate":"2022-10-27"},{"lineNumber":306,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":307,"author":{"gitId":"emptygx"},"content":"Step 3. The user executes the \u0027editTagType Grade-Score grdt-scrt\u0027 to edit the existing Tag Type Grade and rename it as Score. The `editTagType` command calls the `UniqueTagTypeMap#setExistingTagType()` to remove the grdt/ — Grade key-value pair from the `prefixMap` and add scrt/ — Score key-value pair to the `prefixMap`. Furthermore, the `editTagType` command also calls \u0027Model#editTagTypeForAllPerson()\u0027 to edit the Grade Tag Type name and rename it as Score Tag Type for all person who had Tags of Grade Tag Type.","lastModifiedDate":"2022-10-27"},{"lineNumber":308,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":309,"author":{"gitId":"emptygx"},"content":"Step 4. The user executes the `deleteTagType Score` to delete the Score Tag Type and all Tags of Score Tag Type for all person in CLInkedIn. The `deleteTagType` command calls the `UniqueTagTypeMap#removeExistingTagType()` to remove the scrt/ — Score key-value pair from the `prefixMap`. Furthermore, it also calls the `Model#deleteTagTypeForAllPerson()` to delete the Score Tag Type and the Tags assigned to the Score Tag TYpe for each person having Tags of Score Tag Type.","lastModifiedDate":"2022-10-27"},{"lineNumber":310,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":311,"author":{"gitId":"emptygx"},"content":"### Status feature","lastModifiedDate":"2022-10-27"},{"lineNumber":312,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":313,"author":{"gitId":"emptygx"},"content":"#### Implementation","lastModifiedDate":"2022-10-27"},{"lineNumber":314,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":315,"author":{"gitId":"emptygx"},"content":"The proposed `Status` feature is added as an attribute under the `Person` class.","lastModifiedDate":"2022-10-27"},{"lineNumber":316,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":317,"author":{"gitId":"emptygx"},"content":"A `Status` class is created, and is implemented via a `String`. The String can only take in alphanumeric inputs.","lastModifiedDate":"2022-10-27"},{"lineNumber":318,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":319,"author":{"gitId":"emptygx"},"content":"The `Status` attribute is mainly implemented by the following methods:","lastModifiedDate":"2022-10-27"},{"lineNumber":320,"author":{"gitId":"emptygx"},"content":"- `Status` can be added via the `AddCommand`","lastModifiedDate":"2022-10-27"},{"lineNumber":321,"author":{"gitId":"emptygx"},"content":"- `Status` can be edited via the `EditCommand`.","lastModifiedDate":"2022-10-27"},{"lineNumber":322,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":323,"author":{"gitId":"emptygx"},"content":"It is also additionally facilitated by these methods:","lastModifiedDate":"2022-10-27"},{"lineNumber":324,"author":{"gitId":"emptygx"},"content":"- `AddCommandParser#parse()` - Checks the input for the status prefix, only adds a candidate into CLInkedIn if the entry has a `Status` prefix and a valid `Status` input","lastModifiedDate":"2022-10-27"},{"lineNumber":325,"author":{"gitId":"emptygx"},"content":"- `AddressBookParser#parseCommand()` - Checks the input for `AddCommand` or `EditCommand`","lastModifiedDate":"2022-10-27"},{"lineNumber":326,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":327,"author":{"gitId":"emptygx"},"content":"Here is an example of what happens when the recruiter attempts to add a candidate to CLInkedIn:","lastModifiedDate":"2022-10-27"},{"lineNumber":328,"author":{"gitId":"emptygx"},"content":"1. Recruiter enters the command `add n/John Doe p/999 e/john@mail/com a/singapore s/Application Received`","lastModifiedDate":"2022-10-27"},{"lineNumber":329,"author":{"gitId":"emptygx"},"content":"2. The command is first parsed by `AddressBookParser#parseCommand()`, which identifies the command word of every command.","lastModifiedDate":"2022-10-27"},{"lineNumber":330,"author":{"gitId":"emptygx"},"content":"3. Since this is an `AddCommand`, the remaining arguments are passed into `AddCommandParser#parse()`","lastModifiedDate":"2022-10-27"},{"lineNumber":331,"author":{"gitId":"emptygx"},"content":"4. Each of the different arguments of a candidate (name, phone, email, address, status) are parsed by `AddCommandParser#parse()`","lastModifiedDate":"2022-10-27"},{"lineNumber":332,"author":{"gitId":"emptygx"},"content":"5. If any of the compulsory arguments of a candidate (name, phone, email, address, status) are not present, the command will fail its execution and `ParseException` will be thrown.","lastModifiedDate":"2022-10-27"},{"lineNumber":333,"author":{"gitId":"emptygx"},"content":"6. Next, the `AddCommand#execute()` is called, which triggers the `Model#addPerson(Person)` command and a `CommandResult` is returned","lastModifiedDate":"2022-10-27"},{"lineNumber":334,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":335,"author":{"gitId":"emptygx"},"content":"Here is an example of what happens when the recruiter attempts to edit a candidate\u0027s status  CLInkedIn:","lastModifiedDate":"2022-10-27"},{"lineNumber":336,"author":{"gitId":"emptygx"},"content":"1. Recruiter enters the command `edit 1 s/OA In Progress`","lastModifiedDate":"2022-10-27"},{"lineNumber":337,"author":{"gitId":"emptygx"},"content":"2. The command is first parsed by `AddressBookParser#parseCommand()`, which identifies the command word of every command.","lastModifiedDate":"2022-10-27"},{"lineNumber":338,"author":{"gitId":"emptygx"},"content":"3. Since this is an `EditCommand`, the remaining arguments are passed into `EditCommandParser#parse()`","lastModifiedDate":"2022-10-27"},{"lineNumber":339,"author":{"gitId":"emptygx"},"content":"4. Each of the different arguments to be edited are parsed by `EditCommandParser#parse()`.","lastModifiedDate":"2022-10-27"},{"lineNumber":340,"author":{"gitId":"emptygx"},"content":"5. An `EditPersonDescriptor` is created and modified depending on the arguments to be edited.","lastModifiedDate":"2022-10-27"},{"lineNumber":341,"author":{"gitId":"emptygx"},"content":"6. An `EditCommand` object is generated.","lastModifiedDate":"2022-10-27"},{"lineNumber":342,"author":{"gitId":"emptygx"},"content":"7. Next, the `EditCommand#execute()` is called, which triggers the `Model#setPerson(Person)` and `Model#updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS)` commands","lastModifiedDate":"2022-10-27"},{"lineNumber":343,"author":{"gitId":"emptygx"},"content":"8. A `CommandResult` is returned.","lastModifiedDate":"2022-10-27"},{"lineNumber":344,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":345,"author":{"gitId":"emptygx"},"content":"#### Design Considerations","lastModifiedDate":"2022-10-27"},{"lineNumber":346,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":347,"author":{"gitId":"emptygx"},"content":"It is designed to be a mandatory feature, as every candidate under the recruiting process must be at an application stage.","lastModifiedDate":"2022-10-27"},{"lineNumber":348,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":349,"author":{"gitId":"emptygx"},"content":"### Note feature","lastModifiedDate":"2022-10-27"},{"lineNumber":350,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":351,"author":{"gitId":"emptygx"},"content":"#### Implementation","lastModifiedDate":"2022-10-27"},{"lineNumber":352,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":353,"author":{"gitId":"emptygx"},"content":"The proposed `Note` feature is added as an optional attribute under the `Person` class.","lastModifiedDate":"2022-10-27"},{"lineNumber":354,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":355,"author":{"gitId":"emptygx"},"content":"A `Note` class is created, and is implemented via a `String`. The String can take in any input, including a blank string.","lastModifiedDate":"2022-10-27"},{"lineNumber":356,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":357,"author":{"gitId":"emptygx"},"content":"The `Note` attribute is mainly implemented by the following methods:","lastModifiedDate":"2022-10-27"},{"lineNumber":358,"author":{"gitId":"emptygx"},"content":"- `Note` can be added via the `AddCommand`","lastModifiedDate":"2022-10-27"},{"lineNumber":359,"author":{"gitId":"emptygx"},"content":"- `Note` can be edited via the `EditCommand`.","lastModifiedDate":"2022-10-27"},{"lineNumber":360,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":361,"author":{"gitId":"emptygx"},"content":"It is also additionally facilitated by these methods:","lastModifiedDate":"2022-10-27"},{"lineNumber":362,"author":{"gitId":"emptygx"},"content":"- `NoteCommandParser#parse()` - Checks the input for the Note prefix, only adds a candidate into CLInkedIn if the entry has a `Note` prefix and a valid `Note` input","lastModifiedDate":"2022-10-27"},{"lineNumber":363,"author":{"gitId":"emptygx"},"content":"- `AddressBookParser#parseCommand()` - Checks the input for `AddCommand` or `EditCommand`","lastModifiedDate":"2022-10-27"},{"lineNumber":364,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":365,"author":{"gitId":"emptygx"},"content":"Here is an example of what happens when the recruiter attempts to add a candidate to CLInkedIn:","lastModifiedDate":"2022-10-27"},{"lineNumber":366,"author":{"gitId":"emptygx"},"content":"1. Recruiter enters the command `add n/John Doe p/999 e/john@mail/com a/singapore note/Strong in Python.`","lastModifiedDate":"2022-10-27"},{"lineNumber":367,"author":{"gitId":"emptygx"},"content":"2. The command is first parsed by `AddressBookParser#parseCommand()`, which identifies the command word of every command.","lastModifiedDate":"2022-10-27"},{"lineNumber":368,"author":{"gitId":"emptygx"},"content":"3. Since this is an `AddCommand`, the remaining arguments are passed into `AddCommandParser#parse()`","lastModifiedDate":"2022-10-27"},{"lineNumber":369,"author":{"gitId":"emptygx"},"content":"4. Each of the different arguments of a candidate (name, phone, email, address, Status) are parsed by `AddCommandParser#parse()`","lastModifiedDate":"2022-10-27"},{"lineNumber":370,"author":{"gitId":"emptygx"},"content":"5. If any of the compulsory arguments of a candidate (name, phone, email, address, Status) are not present, the command will fail its execution and `ParseException` will be thrown.","lastModifiedDate":"2022-10-27"},{"lineNumber":371,"author":{"gitId":"emptygx"},"content":"6. Next, the `AddCommand#execute()` is called, which triggers the `Model#addPerson(Person)` command and a `CommandResult` is returned","lastModifiedDate":"2022-10-27"},{"lineNumber":372,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":373,"author":{"gitId":"emptygx"},"content":"Here is an example of what happens when the recruiter attempts to edit a candidate\u0027s Note  CLInkedIn:","lastModifiedDate":"2022-10-27"},{"lineNumber":374,"author":{"gitId":"emptygx"},"content":"1. Recruiter enters the command `edit 1 note/Missed 2 interviews`","lastModifiedDate":"2022-10-27"},{"lineNumber":375,"author":{"gitId":"emptygx"},"content":"2. The command is first parsed by `AddressBookParser#parseCommand()`, which identifies the command word of every command.","lastModifiedDate":"2022-10-27"},{"lineNumber":376,"author":{"gitId":"emptygx"},"content":"3. Since this is an `EditCommand`, the remaining arguments are passed into `EditCommandParser#parse()`","lastModifiedDate":"2022-10-27"},{"lineNumber":377,"author":{"gitId":"emptygx"},"content":"4. Each of the different arguments to be edited are parsed by `EditCommandParser#parse()`.","lastModifiedDate":"2022-10-27"},{"lineNumber":378,"author":{"gitId":"emptygx"},"content":"5. An `EditPersonDescriptor` is created and modified depending on the arguments to be edited.","lastModifiedDate":"2022-10-27"},{"lineNumber":379,"author":{"gitId":"emptygx"},"content":"6. An `EditCommand` object is generated.","lastModifiedDate":"2022-10-27"},{"lineNumber":380,"author":{"gitId":"emptygx"},"content":"7. Next, the `EditCommand#execute()` is called, which triggers the `Model#setPerson(Person)` and `Model#updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS)` commands","lastModifiedDate":"2022-10-27"},{"lineNumber":381,"author":{"gitId":"emptygx"},"content":"8. A `CommandResult` is returned.","lastModifiedDate":"2022-10-27"},{"lineNumber":382,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":383,"author":{"gitId":"emptygx"},"content":"#### Design Considerations","lastModifiedDate":"2022-10-27"},{"lineNumber":384,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":385,"author":{"gitId":"emptygx"},"content":"It is designed to be an optional feature, as it is meant to be a supplementary source of notetaking that recruiters can make on candidates saved.","lastModifiedDate":"2022-10-27"},{"lineNumber":386,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":387,"author":{"gitId":"emptygx"},"content":"### Rating feature","lastModifiedDate":"2022-10-27"},{"lineNumber":388,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":389,"author":{"gitId":"emptygx"},"content":"The proposed `Rating` feature is added as an attribute under the `Person` class.","lastModifiedDate":"2022-10-27"},{"lineNumber":390,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":391,"author":{"gitId":"emptygx"},"content":"A `Rating` class is created, and is implemented via a `String`. The String can only take in integers from 1 to 10 inclusive.","lastModifiedDate":"2022-10-27"},{"lineNumber":392,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":393,"author":{"gitId":"emptygx"},"content":"The `Rating` attribute is mainly implemented by the following methods:","lastModifiedDate":"2022-10-27"},{"lineNumber":394,"author":{"gitId":"emptygx"},"content":"- `Rating` can be added via the `RateCommand`","lastModifiedDate":"2022-10-27"},{"lineNumber":395,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":396,"author":{"gitId":"emptygx"},"content":"It is also additionally facilitated by these methods:","lastModifiedDate":"2022-10-27"},{"lineNumber":397,"author":{"gitId":"emptygx"},"content":"- `RateCommandParser#parse()` - Checks the input for the rating prefix, only adds the rating to the candidate if the entry has a `Rating` prefix and a valid `Rating` input","lastModifiedDate":"2022-10-27"},{"lineNumber":398,"author":{"gitId":"emptygx"},"content":"- `AddressBookParser#parseCommand()` - Checks the input for `RateCommand`.","lastModifiedDate":"2022-10-27"},{"lineNumber":399,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":400,"author":{"gitId":"emptygx"},"content":"Here is an example of what happens when the recruiter attempts to add a rating to a candidate on CLInkedIn:","lastModifiedDate":"2022-10-27"},{"lineNumber":401,"author":{"gitId":"emptygx"},"content":"1. Recruiter enters the command `rate 4 rate/8`","lastModifiedDate":"2022-10-27"},{"lineNumber":402,"author":{"gitId":"emptygx"},"content":"2. The command is first parsed by `AddressBookParser#parseCommand()`, which identifies the command word of every command.","lastModifiedDate":"2022-10-27"},{"lineNumber":403,"author":{"gitId":"emptygx"},"content":"3. Since this is a `RateCommand`, the remaining arguments are passed into `RateCommandParser#parse()`","lastModifiedDate":"2022-10-27"},{"lineNumber":404,"author":{"gitId":"emptygx"},"content":"4. The different arguments (index, rating) are parsed by `RateCommandParser#parse()` and a `RateCommand` object is created.","lastModifiedDate":"2022-10-27"},{"lineNumber":405,"author":{"gitId":"emptygx"},"content":"5. Next, the `RateCommand#execute()` is called, which triggers the `Model#setPerson(Person)` and `Model#updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS)` commands","lastModifiedDate":"2022-10-27"},{"lineNumber":406,"author":{"gitId":"emptygx"},"content":"6. A `CommandResult` is returned.","lastModifiedDate":"2022-10-27"},{"lineNumber":407,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":408,"author":{"gitId":"emptygx"},"content":"#### Design Considerations","lastModifiedDate":"2022-10-27"},{"lineNumber":409,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":410,"author":{"gitId":"emptygx"},"content":"##### Aspect: Compulsory vs Non-compulsory","lastModifiedDate":"2022-10-27"},{"lineNumber":411,"author":{"gitId":"emptygx"},"content":"It is designed to be a non-compulsory feature, as the recruiter might not be able to rate every candidate at every stage of the recruiting process.","lastModifiedDate":"2022-10-27"},{"lineNumber":412,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":413,"author":{"gitId":"emptygx"},"content":"##### Aspect: Argument type of the `Rating` constructor","lastModifiedDate":"2022-10-27"},{"lineNumber":414,"author":{"gitId":"emptygx"},"content":"It is designed to take in a String, as Commands are parsed as a String. However, the constructor will parse the String and the Rating is stored as an Integer.","lastModifiedDate":"2022-10-27"},{"lineNumber":415,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":416,"author":{"gitId":"ytingtan"},"content":"### Undo/redo feature","lastModifiedDate":"2022-10-28"},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":440,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":453,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":455,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":457,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":460,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":461,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":462,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":469,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":470,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":471,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":472,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":473,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":474,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":475,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":476,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":477,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":478,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":479,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":480,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":481,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":482,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":483,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":484,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":485,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":486,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":487,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":488,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":489,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":490,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":491,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":492,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":493,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":494,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":495,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":496,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":497,"author":{"gitId":"ytingtan"},"content":"### Sort feature ","lastModifiedDate":"2022-10-28"},{"lineNumber":498,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":499,"author":{"gitId":"ytingtan"},"content":"#### Implementation ","lastModifiedDate":"2022-10-28"},{"lineNumber":500,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":501,"author":{"gitId":"ytingtan"},"content":"The proposed sorting feature sorts candidates based on their rating. The candidates will then be displayed in descending order of rating. ","lastModifiedDate":"2022-10-28"},{"lineNumber":502,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":503,"author":{"gitId":"ytingtan"},"content":"It is mainly implemented by the `SortCommand` method. ","lastModifiedDate":"2022-10-28"},{"lineNumber":504,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":505,"author":{"gitId":"ytingtan"},"content":"Here is an example of what happens when the recruiter attempts to sort candidates on CLInkedIn:","lastModifiedDate":"2022-10-28"},{"lineNumber":506,"author":{"gitId":"ytingtan"},"content":"1. Recruiter enters the command `sort`","lastModifiedDate":"2022-10-28"},{"lineNumber":507,"author":{"gitId":"ytingtan"},"content":"2. The command is first parsed by `AddressBookParser#parseCommand()`, which identifies the command word of every command. ","lastModifiedDate":"2022-10-28"},{"lineNumber":508,"author":{"gitId":"ytingtan"},"content":"3. Since this is a `SortCommand`, there is no parser. A `SortCommand()` object is returned by the parser. ","lastModifiedDate":"2022-10-28"},{"lineNumber":509,"author":{"gitId":"ytingtan"},"content":"4. Next, the `SortCommand#execute(Model model)` is called, which triggers the `Model#updateSort(Comparator)` command ","lastModifiedDate":"2022-10-28"},{"lineNumber":510,"author":{"gitId":"ytingtan"},"content":"5. Lastly, a `CommandResult` is returned.","lastModifiedDate":"2022-10-28"},{"lineNumber":511,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":512,"author":{"gitId":"ytingtan"},"content":"#### Design Considerations ","lastModifiedDate":"2022-10-28"},{"lineNumber":513,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":514,"author":{"gitId":"ytingtan"},"content":"As candidates with no ratings are implemented to have a rating of 0, the candidates with no ratings will be ordered below the candidates with ratings.","lastModifiedDate":"2022-10-28"},{"lineNumber":515,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":516,"author":{"gitId":"ytingtan"},"content":"This is because the recruiter would have no opinion about candidates with no rating, and thus no need to make comparisons that include candidates with no rating. ","lastModifiedDate":"2022-10-28"},{"lineNumber":517,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":518,"author":{"gitId":"ytingtan"},"content":"The purpose of this feature is such that recruiters can view candidates based on order of desirability, and they would not need to look at candidates with no rating and they do not know their desirability yet. ","lastModifiedDate":"2022-10-28"},{"lineNumber":519,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":520,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":521,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":522,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":523,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":524,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":525,"author":{"gitId":"ytingtan"},"content":"### Add/Edit/Delete Tags Feature","lastModifiedDate":"2022-10-28"},{"lineNumber":526,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":527,"author":{"gitId":"pratham31012002"},"content":"#### Implementation","lastModifiedDate":"2022-10-20"},{"lineNumber":528,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":529,"author":{"gitId":"pratham31012002"},"content":"The addition, modification and deletion of tags are executed through `AddCommand`, `AddTagCommand`, `DeleteTagCommand`, `EditCommand`, and facilated by `Tag`, `TagType`, `UniqueTagTypeMap` and `UniqueTagList`.","lastModifiedDate":"2022-10-20"},{"lineNumber":530,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":531,"author":{"gitId":"pratham31012002"},"content":"Each candidate in the `UniquePersonList` has a `UniqueTagTypeMap`, which represents a map of the tag types and corresponding tags belonging to the person. `UniqueTagTypeMap` implements the following operations:","lastModifiedDate":"2022-10-20"},{"lineNumber":532,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":533,"author":{"gitId":"pratham31012002"},"content":"* `UniqueTagTypeMap#mergeTagTypeMap()` — Merges a `UniqueTagTypeMap` with the existing `UniqueTagTypeMap` of the candidate.","lastModifiedDate":"2022-10-20"},{"lineNumber":534,"author":{"gitId":"pratham31012002"},"content":"* `UniqueTagTypeMap#removeTags()` — Removes the tags from the `UniqueTagTypeMap` of the candidate.","lastModifiedDate":"2022-10-20"},{"lineNumber":535,"author":{"gitId":"pratham31012002"},"content":"* `UniqueTagTypeMap#mergeTag()` — Adds a tag of the given tag type to the `UniqueTagTypeMap` of the candidate.","lastModifiedDate":"2022-10-20"},{"lineNumber":536,"author":{"gitId":"pratham31012002"},"content":"* `UniqueTagTypeMap#setTagTypeMap()` — Replaces the `UniqueTagTypeMap` of the candidate with the given `UniqueTagTypeMap`.","lastModifiedDate":"2022-10-20"},{"lineNumber":537,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":538,"author":{"gitId":"pratham31012002"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The `UniqueTagTypeMap` internally uses an `ObservableMap`, backed by a `HashMap`, that maps each tag type of the candidate to a `UniqueTagList` of tags.","lastModifiedDate":"2022-10-20"},{"lineNumber":539,"author":{"gitId":"pratham31012002"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":540,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":541,"author":{"gitId":"pratham31012002"},"content":"Given below is an example usage scenario and how the add/edit/delete Tag mechanism behaves at each step:","lastModifiedDate":"2022-10-20"},{"lineNumber":542,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":543,"author":{"gitId":"ytingtan"},"content":"1. The user executes `addTag 3 st/Java dt/Bachelors` to add a skill tag `Java` and degree tag `Bachelors` to the 3rd candidate in the displayed list of candidates. After being parsed by the `AddTagCommandParser` to an `AddTagCommand`, the `AddTagCommand` initializes a new `UniqueTagTypeMap` with the existing `UniqueTagTypeMap` of candidate `3` by invoking the `UniqueTagTypeMap#setTagTypeMap()`, and merges the new tags by invoking `UniqueTagTypeMap#mergeTagTypeMap()`. After this, a new `Person` is created with the `updatedTags` and all other attributes same as that of the existing `Person`, and the `ModelManager#setPerson` is invoked to modify the addressBook with the updated candidate.","lastModifiedDate":"2022-10-28"},{"lineNumber":544,"author":{"gitId":"ytingtan"},"content":"2. The user executes `edit 3 st/Java-JavaScript` to edit the skill tag `Java` to `JavaScript` of the 3rd candidate in the displayed list of candidates. After being parsed by the `EditCommandParser` to an `EditCommand`, the `EditCommand` initializes a new `UniqueTagTypeMap` with the existing `UniqueTagTypeMap` of candidate `3` by invoking the `UniqueTagTypeMap#setTagTypeMap()`, removes the existing tags to be edited by invoking `UniqueTagTypeMap#removeTags()` and adds the edited tags by invoking the `UniqueTagTypeMap#mergeTagTypeMap()`. After this, a new `Person` is created with the `updatedTags` and all other attributes same as that of the existing `Person`, and the `ModelManager#setPerson` is invoked to modify the addressBook with the updated candidate.","lastModifiedDate":"2022-10-28"},{"lineNumber":545,"author":{"gitId":"ytingtan"},"content":"3. The user executes `deleteTag 3 st/JavaScript dt/Bachelors` to delete the skill tag `JavaScript` and degree tag `Bachelors` of the 3rd candidate in the displayed list of candidates. After being parsed by the `DeleteTagCommand` to a `DeleteTagCommand`, the `DeleteTagCommand` initializes a new `UniqueTagTypeMap` with the existing `UniqueTagTypeMap` of candidate `3` by invoking the `UniqueTagTypeMap#setTagTypeMap()` and removes the tags to be deleted by invoking `UniqueTagTypeMap#removeTags()`. After this, a new `Person` is created with the `updatedTags` and all other attributes same as that of the existing `Person`, and the `ModelManager#setPerson` is invoked to modify the addressBook with the updated candidate.","lastModifiedDate":"2022-10-28"},{"lineNumber":546,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":547,"author":{"gitId":"pratham31012002"},"content":"#### Design Considerations:","lastModifiedDate":"2022-10-20"},{"lineNumber":548,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":549,"author":{"gitId":"pratham31012002"},"content":"**Aspect: How the addressBook is updated:**","lastModifiedDate":"2022-10-20"},{"lineNumber":550,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":551,"author":{"gitId":"pratham31012002"},"content":"* **Alternative 1 (current choice):** Creates a new person each time a tag is added, edited or deleted.","lastModifiedDate":"2022-10-20"},{"lineNumber":552,"author":{"gitId":"pratham31012002"},"content":"    * Pros: Ensures that `Person` and all its attributes are immutable.","lastModifiedDate":"2022-10-20"},{"lineNumber":553,"author":{"gitId":"pratham31012002"},"content":"    * Cons: May be inefficient compared to directly updating the attributes of `Person`.","lastModifiedDate":"2022-10-20"},{"lineNumber":554,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":555,"author":{"gitId":"pratham31012002"},"content":"* **Alternative 2:** Modifies the existing `UniqueTagTypeMap` of the candidate each time a tag is added, edited or deleted.","lastModifiedDate":"2022-10-20"},{"lineNumber":556,"author":{"gitId":"pratham31012002"},"content":"  itself.","lastModifiedDate":"2022-10-20"},{"lineNumber":557,"author":{"gitId":"pratham31012002"},"content":"    * Pros: May be more efficient, as a new `Person` instance is not created every time a tag is added, edited or deleted.","lastModifiedDate":"2022-10-20"},{"lineNumber":558,"author":{"gitId":"pratham31012002"},"content":"    * Cons: Allowing `Person` to be mutated may not be safe and defensive.","lastModifiedDate":"2022-10-20"},{"lineNumber":559,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":560,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":561,"author":{"gitId":"agarwal-anjali"},"content":"### \\[Implemented\\] Create/Edit/Delete Tag Types feature","lastModifiedDate":"2022-10-20"},{"lineNumber":562,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":563,"author":{"gitId":"agarwal-anjali"},"content":"For the ease of classifying tags and storing candidate information in a more organised way, users can now also create Tag Types and assign tags to the relevant Tag Types.","lastModifiedDate":"2022-10-20"},{"lineNumber":564,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":565,"author":{"gitId":"agarwal-anjali"},"content":"This feature is facilitated by `UniqueTagTypeMap` class. It implements the `Iterable\u003cTagType\u003e` interface.","lastModifiedDate":"2022-10-20"},{"lineNumber":566,"author":{"gitId":"agarwal-anjali"},"content":"Additionally, it implements the following operations:","lastModifiedDate":"2022-10-20"},{"lineNumber":567,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":568,"author":{"gitId":"agarwal-anjali"},"content":"* UniqueTagTypeMap#createTagType()  —  Creates a unique Tag Type and adds it to the prefixMap of available Tag Types.","lastModifiedDate":"2022-10-20"},{"lineNumber":569,"author":{"gitId":"agarwal-anjali"},"content":"* UniqueTagTypeMap#setExistingTagType()  —  Edits the Tag Type name and Tag Type alias of an existing Tag Type.","lastModifiedDate":"2022-10-20"},{"lineNumber":570,"author":{"gitId":"agarwal-anjali"},"content":"* UniqueTagTypeMap#removeExistingTagType()  —  Deletes a Tag Type from the prefixMap and, hence, the Tag Type is no more recognised as a valid Tag Type.","lastModifiedDate":"2022-10-20"},{"lineNumber":571,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":572,"author":{"gitId":"agarwal-anjali"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The `prefixMap` in `UniqueTagTypeMap` is a HashMap that maps all the existing Tag Type alias to their respective Tag Types. For user convenience, we have already provided the user with the three basic Tag Types a recruiter might need: Skills Tag Type (alias: st/), Degree Tag Type (alias: dt/), and Job Type Tag Type (alias: jtt/)\u003cbr\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":573,"author":{"gitId":"agarwal-anjali"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":574,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":575,"author":{"gitId":"agarwal-anjali"},"content":"Given below is an example usage scenario and how the create/edit/delete Tag Types mechanism behaves at each step:","lastModifiedDate":"2022-10-20"},{"lineNumber":576,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":577,"author":{"gitId":"ytingtan"},"content":"1. The user launches the application for the first time. The `prefixMap` in the `UniqueTagTypeMap` will be initialised with the initial 3 Key — Value pairs: st/ — Skills, dt/ — Degree, and jtt/ — Job Type.","lastModifiedDate":"2022-10-28"},{"lineNumber":578,"author":{"gitId":"ytingtan"},"content":"2. The user executes `createTagType Grade grdt` command to add a Grade Tag Type to the available Tag Types so that the recruiter can now add Tags of Grade Tag Type to candidates using the alias grdt/. The `createTagTYpe` command calls the `UniqueTagTypeMap#createTagType()`, causing the addition of grdt/ — Grade key-value pair to the `prefixMap`.","lastModifiedDate":"2022-10-28"},{"lineNumber":579,"author":{"gitId":"ytingtan"},"content":"3. The user executes the \u0027editTagType Grade-Score grdt-scrt\u0027 to edit the existing Tag Type Grade and rename it as Score. The `editTagType` command calls the `UniqueTagTypeMap#setExistingTagType()` to remove the grdt/ — Grade key-value pair from the `prefixMap` and add scrt/ — Score key-value pair to the `prefixMap`. Furthermore, the `editTagType` command also calls \u0027Model#editTagTypeForAllPerson()\u0027 to edit the Grade Tag Type name and rename it as Score Tag Type for all person who had Tags of Grade Tag Type.","lastModifiedDate":"2022-10-28"},{"lineNumber":580,"author":{"gitId":"ytingtan"},"content":"4. The user executes the `deleteTagType Score` to delete the Score Tag Type and all Tags of Score Tag Type for all person in CLInkedIn. The `deleteTagType` command calls the `UniqueTagTypeMap#removeExistingTagType()` to remove the scrt/ — Score key-value pair from the `prefixMap`. Furthermore, it also calls the `Model#deleteTagTypeForAllPerson()` to delete the Score Tag Type and the Tags assigned to the Score Tag TYpe for each person having Tags of Score Tag Type.","lastModifiedDate":"2022-10-28"},{"lineNumber":581,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":582,"author":{"gitId":"ytingtan"},"content":"### \\[Implemented\\] Status feature","lastModifiedDate":"2022-10-21"},{"lineNumber":583,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":584,"author":{"gitId":"ytingtan"},"content":"#### Implementation","lastModifiedDate":"2022-10-21"},{"lineNumber":585,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":586,"author":{"gitId":"ytingtan"},"content":"The proposed `Status` feature is added as an attribute under the `Person` class.","lastModifiedDate":"2022-10-21"},{"lineNumber":587,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":588,"author":{"gitId":"ytingtan"},"content":"A `Status` class is created, and is implemented via a `String`. The String can only take in alphanumeric inputs.","lastModifiedDate":"2022-10-21"},{"lineNumber":589,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":590,"author":{"gitId":"ytingtan"},"content":"The `Status` attribute is mainly implemented by the following methods:","lastModifiedDate":"2022-10-21"},{"lineNumber":591,"author":{"gitId":"ytingtan"},"content":"- `Status` can be added via the `AddCommand`","lastModifiedDate":"2022-10-21"},{"lineNumber":592,"author":{"gitId":"ytingtan"},"content":"- `Status` can be edited via the `EditCommand`.","lastModifiedDate":"2022-10-21"},{"lineNumber":593,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":594,"author":{"gitId":"ytingtan"},"content":"It is also additionally facilitated by these methods:","lastModifiedDate":"2022-10-21"},{"lineNumber":595,"author":{"gitId":"ytingtan"},"content":"- `AddCommandParser#parse()` - Checks the input for the status prefix, only adds a candidate into CLInkedIn if the entry has a `Status` prefix and a valid `Status` input","lastModifiedDate":"2022-10-21"},{"lineNumber":596,"author":{"gitId":"ytingtan"},"content":"- `AddressBookParser#parseCommand()` - Checks the input for `AddCommand` or `EditCommand`","lastModifiedDate":"2022-10-21"},{"lineNumber":597,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":598,"author":{"gitId":"ytingtan"},"content":"Here is an example of what happens when the recruiter attempts to add a candidate to CLInkedIn:","lastModifiedDate":"2022-10-21"},{"lineNumber":599,"author":{"gitId":"ytingtan"},"content":"1. Recruiter enters the command `add n/John Doe p/999 e/john@mail/com a/singapore s/Application Received`","lastModifiedDate":"2022-10-21"},{"lineNumber":600,"author":{"gitId":"ytingtan"},"content":"2. The command is first parsed by `AddressBookParser#parseCommand()`, which identifies the command word of every command.","lastModifiedDate":"2022-10-21"},{"lineNumber":601,"author":{"gitId":"ytingtan"},"content":"3. Since this is an `AddCommand`, the remaining arguments are passed into `AddCommandParser#parse()`","lastModifiedDate":"2022-10-21"},{"lineNumber":602,"author":{"gitId":"ytingtan"},"content":"4. Each of the different arguments of a candidate (name, phone, email, address, status) are parsed by `AddCommandParser#parse()`","lastModifiedDate":"2022-10-21"},{"lineNumber":603,"author":{"gitId":"ytingtan"},"content":"5. If any of the compulsory arguments of a candidate (name, phone, email, address, status) are not present, the command will fail its execution and `ParseException` will be thrown.","lastModifiedDate":"2022-10-21"},{"lineNumber":604,"author":{"gitId":"ytingtan"},"content":"6. Next, the `AddCommand#execute()` is called, which triggers the `Model#addPerson(Person)` command and a `CommandResult` is returned","lastModifiedDate":"2022-10-21"},{"lineNumber":605,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":606,"author":{"gitId":"ytingtan"},"content":"Here is an example of what happens when the recruiter attempts to edit a candidate\u0027s status  CLInkedIn:","lastModifiedDate":"2022-10-21"},{"lineNumber":607,"author":{"gitId":"ytingtan"},"content":"1. Recruiter enters the command `edit 1 s/OA In Progress`","lastModifiedDate":"2022-10-21"},{"lineNumber":608,"author":{"gitId":"ytingtan"},"content":"2. The command is first parsed by `AddressBookParser#parseCommand()`, which identifies the command word of every command.","lastModifiedDate":"2022-10-21"},{"lineNumber":609,"author":{"gitId":"ytingtan"},"content":"3. Since this is an `EditCommand`, the remaining arguments are passed into `EditCommandParser#parse()`","lastModifiedDate":"2022-10-21"},{"lineNumber":610,"author":{"gitId":"ytingtan"},"content":"4. Each of the different arguments to be edited are parsed by `EditCommandParser#parse()`.","lastModifiedDate":"2022-10-21"},{"lineNumber":611,"author":{"gitId":"ytingtan"},"content":"5. An `EditPersonDescriptor` is created and modified depending on the arguments to be edited.","lastModifiedDate":"2022-10-21"},{"lineNumber":612,"author":{"gitId":"ytingtan"},"content":"6. An `EditCommand` object is generated.","lastModifiedDate":"2022-10-21"},{"lineNumber":613,"author":{"gitId":"ytingtan"},"content":"7. Next, the `EditCommand#execute()` is called, which triggers the `Model#setPerson(Person)` and `Model#updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS)` commands","lastModifiedDate":"2022-10-21"},{"lineNumber":614,"author":{"gitId":"ytingtan"},"content":"8. A `CommandResult` is returned.","lastModifiedDate":"2022-10-21"},{"lineNumber":615,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":616,"author":{"gitId":"ytingtan"},"content":"#### Design Considerations","lastModifiedDate":"2022-10-21"},{"lineNumber":617,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":618,"author":{"gitId":"ytingtan"},"content":"It is designed to be a mandatory feature, as every candidate under the recruiting process must be at an application stage.","lastModifiedDate":"2022-10-21"},{"lineNumber":619,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":620,"author":{"gitId":"josephaedan"},"content":"### \\[Implemented\\] Note feature","lastModifiedDate":"2022-10-21"},{"lineNumber":621,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":622,"author":{"gitId":"josephaedan"},"content":"#### Implementation","lastModifiedDate":"2022-10-21"},{"lineNumber":623,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":624,"author":{"gitId":"josephaedan"},"content":"The proposed `Note` feature is added as an optional attribute under the `Person` class.","lastModifiedDate":"2022-10-21"},{"lineNumber":625,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":626,"author":{"gitId":"josephaedan"},"content":"A `Note` class is created, and is implemented via a `String`. The String can take in any input, including a blank string.","lastModifiedDate":"2022-10-21"},{"lineNumber":627,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":628,"author":{"gitId":"josephaedan"},"content":"The `Note` attribute is mainly implemented by the following methods:","lastModifiedDate":"2022-10-21"},{"lineNumber":629,"author":{"gitId":"josephaedan"},"content":"- `Note` can be added via the `AddCommand`","lastModifiedDate":"2022-10-21"},{"lineNumber":630,"author":{"gitId":"josephaedan"},"content":"- `Note` can be edited via the `EditCommand`.","lastModifiedDate":"2022-10-21"},{"lineNumber":631,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":632,"author":{"gitId":"josephaedan"},"content":"It is also additionally facilitated by these methods:","lastModifiedDate":"2022-10-21"},{"lineNumber":633,"author":{"gitId":"josephaedan"},"content":"- `NoteCommandParser#parse()` - Checks the input for the Note prefix, only adds a candidate into CLInkedIn if the entry has a `Note` prefix and a valid `Note` input","lastModifiedDate":"2022-10-21"},{"lineNumber":634,"author":{"gitId":"josephaedan"},"content":"- `AddressBookParser#parseCommand()` - Checks the input for `AddCommand` or `EditCommand`","lastModifiedDate":"2022-10-21"},{"lineNumber":635,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":636,"author":{"gitId":"josephaedan"},"content":"Here is an example of what happens when the recruiter attempts to add a candidate to CLInkedIn:","lastModifiedDate":"2022-10-21"},{"lineNumber":637,"author":{"gitId":"josephaedan"},"content":"1. Recruiter enters the command `add n/John Doe p/999 e/john@mail/com a/singapore note/Strong in Python.`","lastModifiedDate":"2022-10-21"},{"lineNumber":638,"author":{"gitId":"josephaedan"},"content":"2. The command is first parsed by `AddressBookParser#parseCommand()`, which identifies the command word of every command.","lastModifiedDate":"2022-10-21"},{"lineNumber":639,"author":{"gitId":"josephaedan"},"content":"3. Since this is an `AddCommand`, the remaining arguments are passed into `AddCommandParser#parse()`","lastModifiedDate":"2022-10-21"},{"lineNumber":640,"author":{"gitId":"josephaedan"},"content":"4. Each of the different arguments of a candidate (name, phone, email, address, Status) are parsed by `AddCommandParser#parse()`","lastModifiedDate":"2022-10-21"},{"lineNumber":641,"author":{"gitId":"josephaedan"},"content":"5. If any of the compulsory arguments of a candidate (name, phone, email, address, Status) are not present, the command will fail its execution and `ParseException` will be thrown.","lastModifiedDate":"2022-10-21"},{"lineNumber":642,"author":{"gitId":"josephaedan"},"content":"6. Next, the `AddCommand#execute()` is called, which triggers the `Model#addPerson(Person)` command and a `CommandResult` is returned","lastModifiedDate":"2022-10-21"},{"lineNumber":643,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":644,"author":{"gitId":"josephaedan"},"content":"Here is an example of what happens when the recruiter attempts to edit a candidate\u0027s Note  CLInkedIn:","lastModifiedDate":"2022-10-21"},{"lineNumber":645,"author":{"gitId":"josephaedan"},"content":"1. Recruiter enters the command `edit 1 note/Missed 2 interviews`","lastModifiedDate":"2022-10-21"},{"lineNumber":646,"author":{"gitId":"josephaedan"},"content":"2. The command is first parsed by `AddressBookParser#parseCommand()`, which identifies the command word of every command.","lastModifiedDate":"2022-10-21"},{"lineNumber":647,"author":{"gitId":"josephaedan"},"content":"3. Since this is an `EditCommand`, the remaining arguments are passed into `EditCommandParser#parse()`","lastModifiedDate":"2022-10-21"},{"lineNumber":648,"author":{"gitId":"josephaedan"},"content":"4. Each of the different arguments to be edited are parsed by `EditCommandParser#parse()`.","lastModifiedDate":"2022-10-21"},{"lineNumber":649,"author":{"gitId":"josephaedan"},"content":"5. An `EditPersonDescriptor` is created and modified depending on the arguments to be edited.","lastModifiedDate":"2022-10-21"},{"lineNumber":650,"author":{"gitId":"josephaedan"},"content":"6. An `EditCommand` object is generated.","lastModifiedDate":"2022-10-21"},{"lineNumber":651,"author":{"gitId":"josephaedan"},"content":"7. Next, the `EditCommand#execute()` is called, which triggers the `Model#setPerson(Person)` and `Model#updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS)` commands","lastModifiedDate":"2022-10-21"},{"lineNumber":652,"author":{"gitId":"josephaedan"},"content":"8. A `CommandResult` is returned.","lastModifiedDate":"2022-10-21"},{"lineNumber":653,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":654,"author":{"gitId":"josephaedan"},"content":"#### Design Considerations","lastModifiedDate":"2022-10-21"},{"lineNumber":655,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":656,"author":{"gitId":"josephaedan"},"content":"It is designed to be an optional feature, as it is meant to be a supplementary source of notetaking that recruiters can make on candidates saved.","lastModifiedDate":"2022-10-21"},{"lineNumber":657,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":658,"author":{"gitId":"ytingtan"},"content":"### \\[Implementing\\] Rating feature","lastModifiedDate":"2022-10-21"},{"lineNumber":659,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":660,"author":{"gitId":"ytingtan"},"content":"The proposed `Rating` feature is added as an attribute under the `Person` class.","lastModifiedDate":"2022-10-21"},{"lineNumber":661,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":662,"author":{"gitId":"ytingtan"},"content":"A `Rating` class is created, and is implemented via a `String`. The String can only take in integers from 1 to 10 inclusive.","lastModifiedDate":"2022-10-21"},{"lineNumber":663,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":664,"author":{"gitId":"ytingtan"},"content":"The `Rating` attribute is mainly implemented by the following methods:","lastModifiedDate":"2022-10-21"},{"lineNumber":665,"author":{"gitId":"ytingtan"},"content":"- `Rating` can be added via the `RateCommand`","lastModifiedDate":"2022-10-21"},{"lineNumber":666,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":667,"author":{"gitId":"ytingtan"},"content":"It is also additionally facilitated by these methods:","lastModifiedDate":"2022-10-21"},{"lineNumber":668,"author":{"gitId":"ytingtan"},"content":"- `RateCommandParser#parse()` - Checks the input for the rating prefix, only adds the rating to the candidate if the entry has a `Rating` prefix and a valid `Rating` input","lastModifiedDate":"2022-10-21"},{"lineNumber":669,"author":{"gitId":"ytingtan"},"content":"- `AddressBookParser#parseCommand()` - Checks the input for `RateCommand`.","lastModifiedDate":"2022-10-21"},{"lineNumber":670,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":671,"author":{"gitId":"ytingtan"},"content":"Here is an example of what happens when the recruiter attempts to add a rating to a candidate on CLInkedIn:","lastModifiedDate":"2022-10-21"},{"lineNumber":672,"author":{"gitId":"ytingtan"},"content":"1. Recruiter enters the command `rate 4 rate/8`","lastModifiedDate":"2022-10-21"},{"lineNumber":673,"author":{"gitId":"ytingtan"},"content":"2. The command is first parsed by `AddressBookParser#parseCommand()`, which identifies the command word of every command.","lastModifiedDate":"2022-10-21"},{"lineNumber":674,"author":{"gitId":"ytingtan"},"content":"3. Since this is a `RateCommand`, the remaining arguments are passed into `RateCommandParser#parse()`","lastModifiedDate":"2022-10-21"},{"lineNumber":675,"author":{"gitId":"ytingtan"},"content":"4. The different arguments (index, rating) are parsed by `RateCommandParser#parse()` and a `RateCommand` object is created.","lastModifiedDate":"2022-10-21"},{"lineNumber":676,"author":{"gitId":"ytingtan"},"content":"5. Next, the `RateCommand#execute()` is called, which triggers the `Model#setPerson(Person)` and `Model#updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS)` commands","lastModifiedDate":"2022-10-21"},{"lineNumber":677,"author":{"gitId":"ytingtan"},"content":"6. A `CommandResult` is returned.","lastModifiedDate":"2022-10-21"},{"lineNumber":678,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":679,"author":{"gitId":"ytingtan"},"content":"#### Design Considerations","lastModifiedDate":"2022-10-21"},{"lineNumber":680,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":681,"author":{"gitId":"ytingtan"},"content":"#### Aspect: Compulsory vs Non-compulsory","lastModifiedDate":"2022-10-21"},{"lineNumber":682,"author":{"gitId":"ytingtan"},"content":"It is designed to be a non-compulsory feature, as the recruiter might not be able to rate every candidate at every stage of the recruiting process.","lastModifiedDate":"2022-10-21"},{"lineNumber":683,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":684,"author":{"gitId":"ytingtan"},"content":"#### Aspect: Argument type of the `Rating` constructor","lastModifiedDate":"2022-10-21"},{"lineNumber":685,"author":{"gitId":"ytingtan"},"content":"It is designed to take in a String, as Commands are parsed as a String. However, the constructor will parse the String and the Rating is stored as an Integer.","lastModifiedDate":"2022-10-21"},{"lineNumber":686,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":687,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":688,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":689,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":690,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":691,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":692,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":693,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":694,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":695,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":696,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":697,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":698,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":699,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":700,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":701,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":702,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":703,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":704,"author":{"gitId":"agarwal-anjali"},"content":"Recruting and hiring managers.","lastModifiedDate":"2022-09-28"},{"lineNumber":705,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":706,"author":{"gitId":"agarwal-anjali"},"content":"**Value proposition**:","lastModifiedDate":"2022-09-28"},{"lineNumber":707,"author":{"gitId":"agarwal-anjali"},"content":"Manage candidates using a CLI faster than mouse/GUI driven apps. Make use of Skill, Degree, Job Type, or any other custom tags and rating system to filter candidates for the next hire.","lastModifiedDate":"2022-09-28"},{"lineNumber":708,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":709,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":710,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":711,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":712,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":713,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":714,"author":{"gitId":"pratham31012002"},"content":"| Priority   | As a …​                                     | I can …​                                                                                          | So that I can…​                                                                     |","lastModifiedDate":"2022-09-28"},{"lineNumber":715,"author":{"gitId":"pratham31012002"},"content":"|------------|---------------------------------------------|---------------------------------------------------------------------------------------------------|-------------------------------------------------------------------------------------|","lastModifiedDate":"2022-09-28"},{"lineNumber":716,"author":{"gitId":"-"},"content":"| `* * *`    | new user                                    | see usage instructions                                                                            | refer to instructions when I forget how to use the App                              |","lastModifiedDate":"2020-05-23"},{"lineNumber":717,"author":{"gitId":"-"},"content":"| `* * *`    | user                                        | add a new person                                                                                  |                                                                                     |","lastModifiedDate":"2020-05-23"},{"lineNumber":718,"author":{"gitId":"-"},"content":"| `* * *`    | user                                        | delete a person                                                                                   | remove entries that I no longer need                                                |","lastModifiedDate":"2020-05-23"},{"lineNumber":719,"author":{"gitId":"-"},"content":"| `* * *`    | user                                        | find a person by name                                                                             | locate details of persons without having to go through the entire list              |","lastModifiedDate":"2020-05-23"},{"lineNumber":720,"author":{"gitId":"-"},"content":"| `* *`      | user                                        | hide private contact details                                                                      | minimize chance of someone else seeing them by accident                             |","lastModifiedDate":"2020-05-23"},{"lineNumber":721,"author":{"gitId":"-"},"content":"| `*`        | user with many persons in the address book  | sort persons by name                                                                              | locate a person easily                                                              |","lastModifiedDate":"2020-05-23"},{"lineNumber":722,"author":{"gitId":"pratham31012002"},"content":"| `* * *`    | user                                        | use the help command                                                                              | view the command summary                                                            |","lastModifiedDate":"2022-09-28"},{"lineNumber":723,"author":{"gitId":"pratham31012002"},"content":"| `* * *`    | user                                        | check the total number of candidates                                                              | keep a track of the number of applicants.                                           |","lastModifiedDate":"2022-09-28"},{"lineNumber":724,"author":{"gitId":"pratham31012002"},"content":"| `* * *`    | user                                        | add tags to existing or new candidates                                                            | categorise candidates.                                                              |","lastModifiedDate":"2022-09-28"},{"lineNumber":725,"author":{"gitId":"pratham31012002"},"content":"| `* * *`    | user                                        | add a Skill type tag                                                                              | keep a track of all the relevant skills of candidates.                              |","lastModifiedDate":"2022-09-28"},{"lineNumber":726,"author":{"gitId":"pratham31012002"},"content":"| `* * *`    | user                                        | add a Degree type tag                                                                             | keep track of the highest level of education of candidates. - degree                |","lastModifiedDate":"2022-09-28"},{"lineNumber":727,"author":{"gitId":"pratham31012002"},"content":"| `* * *`    | user                                        | add a Job Type type tag                                                                           | view which candidates are applying for internships/full-time/part-time/temporary.   |","lastModifiedDate":"2022-09-28"},{"lineNumber":728,"author":{"gitId":"pratham31012002"},"content":"| `* * *`    | user                                        | remove tags                                                                                       | remove attributes that are no more relevant.                                        |","lastModifiedDate":"2022-09-28"},{"lineNumber":729,"author":{"gitId":"pratham31012002"},"content":"| `* * *`    | user                                        | edit tags                                                                                         | update attributes with the most relevant information.                               |","lastModifiedDate":"2022-09-28"},{"lineNumber":730,"author":{"gitId":"pratham31012002"},"content":"| `* * *`    | user                                        | add the application status of candidates                                                          | keep a track of a candidate’s application progress.                                 |","lastModifiedDate":"2022-09-28"},{"lineNumber":731,"author":{"gitId":"pratham31012002"},"content":"| `* * *`    | user                                        | update the application status of candidates                                                       | advance a candidate to another status.                                              |","lastModifiedDate":"2022-09-28"},{"lineNumber":732,"author":{"gitId":"pratham31012002"},"content":"| `**`       | user                                        | add a rating to candidates                                                                        | quantify the merit of a candidate.                                                  |","lastModifiedDate":"2022-09-28"},{"lineNumber":733,"author":{"gitId":"pratham31012002"},"content":"| `**`       | user                                        | delete the rating of candidates                                                                   | remove wrong/unwanted ratings.                                                      |","lastModifiedDate":"2022-09-28"},{"lineNumber":734,"author":{"gitId":"pratham31012002"},"content":"| `**`       | user                                        | edit the rating of candidates                                                                     | update the ratings of candidates.                                                   |","lastModifiedDate":"2022-09-28"},{"lineNumber":735,"author":{"gitId":"pratham31012002"},"content":"| `**`       | user                                        | sort candidates based on their rating                                                             | view candidates based on the order of desirability.                                 |","lastModifiedDate":"2022-09-28"},{"lineNumber":736,"author":{"gitId":"pratham31012002"},"content":"| `* * *`    | user                                        | search for candidates using keywords                                                              | view the candidates that meet a specific criteria.                                  |","lastModifiedDate":"2022-09-28"},{"lineNumber":737,"author":{"gitId":"pratham31012002"},"content":"| `* * *`    | user                                        | search candidates based on tags                                                                   | view candidates based on their skills, level of education, etc.                     |","lastModifiedDate":"2022-09-28"},{"lineNumber":738,"author":{"gitId":"pratham31012002"},"content":"| `* * *`    | user                                        | search candidates based on ratings                                                                | filter candidates based on their suitability.                                       |","lastModifiedDate":"2022-09-28"},{"lineNumber":739,"author":{"gitId":"pratham31012002"},"content":"| `* * *`    | user                                        | search candidates based on their location                                                         | view eligible candidates for a particular region/country.                           |","lastModifiedDate":"2022-09-28"},{"lineNumber":740,"author":{"gitId":"pratham31012002"},"content":"| `* * *`    | user                                        | search candidates based on application status                                                     | view all candidates with the same application status.                               |","lastModifiedDate":"2022-09-28"},{"lineNumber":741,"author":{"gitId":"pratham31012002"},"content":"| `* * *`    | user                                        | add optional notes/comments for candidates                                                        | keep track of additional information.                                               |","lastModifiedDate":"2022-09-28"},{"lineNumber":742,"author":{"gitId":"pratham31012002"},"content":"| `*`        | user                                        | add links to LinkedIn profiles, Github profiles or Personal websites of candidates                | keep track of more information about candidates.                                    |","lastModifiedDate":"2022-09-28"},{"lineNumber":743,"author":{"gitId":"pratham31012002"},"content":"| `*`        | user                                        | copy links of LinkedIn profiles, Github profiles or Personal websites of candidates to clipboard  | easily open these links.                                                            |","lastModifiedDate":"2022-09-28"},{"lineNumber":744,"author":{"gitId":"pratham31012002"},"content":"| `**`       | user                                        | search for candidates based on a combination of multiple criteria                                 | view candidates that meet a particular set of criteria.                             |","lastModifiedDate":"2022-09-28"},{"lineNumber":745,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":746,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":747,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":748,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":749,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":750,"author":{"gitId":"pratham31012002"},"content":"(For all use cases below, the **System** is the `CLInkedIn` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2022-09-28"},{"lineNumber":751,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":752,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":753,"author":{"gitId":"-"},"content":"**Use case: Delete a person**","lastModifiedDate":"2020-05-23"},{"lineNumber":754,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":755,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":756,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":757,"author":{"gitId":"-"},"content":"1.  User requests to list persons","lastModifiedDate":"2020-05-23"},{"lineNumber":758,"author":{"gitId":"agarwal-anjali"},"content":"2.  CLInkedIn shows a list of persons","lastModifiedDate":"2022-09-28"},{"lineNumber":759,"author":{"gitId":"-"},"content":"3.  User requests to delete a specific person in the list","lastModifiedDate":"2020-05-23"},{"lineNumber":760,"author":{"gitId":"agarwal-anjali"},"content":"4.  CLInkedIn deletes the person","lastModifiedDate":"2022-09-28"},{"lineNumber":761,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":762,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":763,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":764,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":765,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":766,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":767,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":768,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":769,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":770,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":771,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":772,"author":{"gitId":"agarwal-anjali"},"content":"    * 3a1. CLInkedIn shows an error message.","lastModifiedDate":"2022-09-28"},{"lineNumber":773,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":774,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":775,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":776,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":777,"author":{"gitId":"pratham31012002"},"content":"**Use case: Search for candidates**","lastModifiedDate":"2022-09-28"},{"lineNumber":778,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":779,"author":{"gitId":"pratham31012002"},"content":"**MSS**","lastModifiedDate":"2022-09-28"},{"lineNumber":780,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":781,"author":{"gitId":"pratham31012002"},"content":"1. User requests to search for candidates using keywords like candidate name, location, application status, tags, etc.","lastModifiedDate":"2022-09-28"},{"lineNumber":782,"author":{"gitId":"pratham31012002"},"content":"2. CLInkedIn shows a list of candidates with details matching the search keywords.","lastModifiedDate":"2022-09-28"},{"lineNumber":783,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":784,"author":{"gitId":"pratham31012002"},"content":"    Use case ends.","lastModifiedDate":"2022-09-28"},{"lineNumber":785,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":786,"author":{"gitId":"pratham31012002"},"content":"**Use case: Modify Candidate details**","lastModifiedDate":"2022-09-28"},{"lineNumber":787,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":788,"author":{"gitId":"pratham31012002"},"content":"**MSS**","lastModifiedDate":"2022-09-28"},{"lineNumber":789,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":790,"author":{"gitId":"pratham31012002"},"content":"1. User requests to list persons.","lastModifiedDate":"2022-09-28"},{"lineNumber":791,"author":{"gitId":"pratham31012002"},"content":"2. AddressBook shows a list of persons.","lastModifiedDate":"2022-09-28"},{"lineNumber":792,"author":{"gitId":"pratham31012002"},"content":"3. User requests to edit the name, location, application status, tags, etc. of a specific candidate in the list.","lastModifiedDate":"2022-09-28"},{"lineNumber":793,"author":{"gitId":"pratham31012002"},"content":"4. CLInkedIn updates the details of the corresponding candidate.","lastModifiedDate":"2022-09-28"},{"lineNumber":794,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":795,"author":{"gitId":"pratham31012002"},"content":"   Use case ends.","lastModifiedDate":"2022-09-28"},{"lineNumber":796,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":797,"author":{"gitId":"pratham31012002"},"content":"**Extensions**","lastModifiedDate":"2022-09-28"},{"lineNumber":798,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":799,"author":{"gitId":"pratham31012002"},"content":"* 2a. The list is empty.","lastModifiedDate":"2022-09-28"},{"lineNumber":800,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":801,"author":{"gitId":"pratham31012002"},"content":"   Use case ends.","lastModifiedDate":"2022-09-28"},{"lineNumber":802,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":803,"author":{"gitId":"pratham31012002"},"content":"* 3a. CLInkedIn detects that the candidate does not exist in the list.","lastModifiedDate":"2022-09-28"},{"lineNumber":804,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":805,"author":{"gitId":"pratham31012002"},"content":"    * 3a1. CLInkedIn requests for a valid command.","lastModifiedDate":"2022-09-28"},{"lineNumber":806,"author":{"gitId":"pratham31012002"},"content":"    * 3a2. User enters new command.","lastModifiedDate":"2022-09-28"},{"lineNumber":807,"author":{"gitId":"pratham31012002"},"content":"      Steps 3a1-3a2 are repeated until the command entered is valid.","lastModifiedDate":"2022-09-28"},{"lineNumber":808,"author":{"gitId":"pratham31012002"},"content":"      Use case resumes from step 4.","lastModifiedDate":"2022-09-28"},{"lineNumber":809,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":810,"author":{"gitId":"pratham31012002"},"content":"* 3b. User requests to edit an invalid tag of a candidate.","lastModifiedDate":"2022-09-28"},{"lineNumber":811,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":812,"author":{"gitId":"pratham31012002"},"content":"    * 3b1. CLInkedIn requests to enter a valid tag.","lastModifiedDate":"2022-09-28"},{"lineNumber":813,"author":{"gitId":"pratham31012002"},"content":"    * 3b2. User enters new command.","lastModifiedDate":"2022-09-28"},{"lineNumber":814,"author":{"gitId":"pratham31012002"},"content":"      Steps 3b1-3b2 are repeated until the tag entered is valid.","lastModifiedDate":"2022-09-28"},{"lineNumber":815,"author":{"gitId":"pratham31012002"},"content":"      Use case resumes from step 4.","lastModifiedDate":"2022-09-28"},{"lineNumber":816,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":817,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":818,"author":{"gitId":"agarwal-anjali"},"content":"**Use case: Create a custom tag type**","lastModifiedDate":"2022-09-28"},{"lineNumber":819,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":820,"author":{"gitId":"agarwal-anjali"},"content":"**MSS**","lastModifiedDate":"2022-09-28"},{"lineNumber":821,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":822,"author":{"gitId":"agarwal-anjali"},"content":"1.  User requests to create a custom tag type with a specified tag alias.","lastModifiedDate":"2022-09-28"},{"lineNumber":823,"author":{"gitId":"agarwal-anjali"},"content":"2.  CLInkedIn creates the custom tag type with the specified tag alias.","lastModifiedDate":"2022-09-28"},{"lineNumber":824,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":825,"author":{"gitId":"agarwal-anjali"},"content":"    Use case ends.","lastModifiedDate":"2022-09-28"},{"lineNumber":826,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":827,"author":{"gitId":"agarwal-anjali"},"content":"**Extensions**","lastModifiedDate":"2022-09-28"},{"lineNumber":828,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":829,"author":{"gitId":"agarwal-anjali"},"content":"* 1a. CLInkedIn detects that the custom tag already exists.","lastModifiedDate":"2022-09-28"},{"lineNumber":830,"author":{"gitId":"agarwal-anjali"},"content":"    * 1a1. CLInkedIn shows an error message and requests user to re-enter the tag type and tag alias.","lastModifiedDate":"2022-09-28"},{"lineNumber":831,"author":{"gitId":"agarwal-anjali"},"content":"    * 1a2. User enters new tag type and tag alias.","lastModifiedDate":"2022-09-28"},{"lineNumber":832,"author":{"gitId":"agarwal-anjali"},"content":"      Steps 1a1-1a2 repeats until the user enters a valid tag type.","lastModifiedDate":"2022-09-28"},{"lineNumber":833,"author":{"gitId":"agarwal-anjali"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2022-09-28"},{"lineNumber":834,"author":{"gitId":"agarwal-anjali"},"content":"* 1b. CLInkedIn detects that the tag alias already exists.","lastModifiedDate":"2022-09-28"},{"lineNumber":835,"author":{"gitId":"agarwal-anjali"},"content":"    * 1b1. CLInkedIn shows an error message and requests user to re-enter the tag alias.","lastModifiedDate":"2022-09-28"},{"lineNumber":836,"author":{"gitId":"agarwal-anjali"},"content":"    * 1b2. User enters a new tag alias.","lastModifiedDate":"2022-09-28"},{"lineNumber":837,"author":{"gitId":"agarwal-anjali"},"content":"      Steps 1b1-1b2 repeats until the user enters a valid tag alias.","lastModifiedDate":"2022-09-28"},{"lineNumber":838,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2022-09-28"},{"lineNumber":839,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":840,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":841,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":842,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":843,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":844,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":845,"author":{"gitId":"-"},"content":"2. Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":846,"author":{"gitId":"-"},"content":"3. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":847,"author":{"gitId":"ytingtan"},"content":"4. User interface should be intuitive for a novice who has never used a command-line address book system.","lastModifiedDate":"2022-09-28"},{"lineNumber":848,"author":{"gitId":"ytingtan"},"content":"5. This product is offered as a free desktop service.","lastModifiedDate":"2022-09-28"},{"lineNumber":849,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":850,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":851,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":852,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":853,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":854,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":855,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":856,"author":{"gitId":"ytingtan"},"content":"* **Candidate**: An entry in CLInkedIn","lastModifiedDate":"2022-09-28"},{"lineNumber":857,"author":{"gitId":"ytingtan"},"content":"* **Personal Information**: Phone number, email, and address of candidate","lastModifiedDate":"2022-09-28"},{"lineNumber":858,"author":{"gitId":"ytingtan"},"content":"* **Status**: Stage of recruiting process. A chronological order would be Pending Application, Application Received, Passed ATS, OA In Progress, OA Submitted, Pending Interview, Interview Completed and the possible outcomes are Hired and Rejected.","lastModifiedDate":"2022-09-28"},{"lineNumber":859,"author":{"gitId":"agarwal-anjali"},"content":"* **Skill Tag Type**: A type of tag that comprises of all tags of skills like Java, ReactJS, UI/UX, etc.","lastModifiedDate":"2022-09-28"},{"lineNumber":860,"author":{"gitId":"agarwal-anjali"},"content":"* **Degree Tag Type**: A type of tag that comprises of tags of the degrees achieved by the candidate like Bachelors, Masters, PHD, etc.","lastModifiedDate":"2022-09-28"},{"lineNumber":861,"author":{"gitId":"agarwal-anjali"},"content":"* **Job Type Tag Type**: A type of tag that comprises of tag of candidates selected job type like Intern, Part-time, Full-time, etc.","lastModifiedDate":"2022-09-28"},{"lineNumber":862,"author":{"gitId":"ytingtan"},"content":"* **Rating**: Suitability of candidate from 1 (lowest, does not fit role at all) to 5 (highest, perfect fit for the role)","lastModifiedDate":"2022-09-28"},{"lineNumber":863,"author":{"gitId":"ytingtan"},"content":"* **Notes**: Additional information about candidate","lastModifiedDate":"2022-09-28"},{"lineNumber":864,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":865,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":866,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":867,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":868,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":869,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":870,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":871,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":872,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":873,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":874,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":875,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":876,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":877,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":878,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":879,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":880,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":881,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":882,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":883,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":884,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":885,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":886,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":887,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":888,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":889,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":890,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":891,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":892,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":893,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":894,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":895,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":896,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":897,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":898,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":899,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":900,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":901,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":902,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":903,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":904,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":905,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":906,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":907,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":908,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":909,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":910,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":911,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":912,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":913,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":914,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"agarwal-anjali":45,"ytingtan":107,"pratham31012002":99,"emptygx":259,"josephaedan":38,"-":366}},{"path":"docs/SettingUp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Setting up and getting started","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Setting up the project in your computer","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2020-06-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps.","lastModifiedDate":"2020-06-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"First, **fork** this repo, and **clone** the fork into your computer.","lastModifiedDate":"2020-06-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2020-06-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK 11**.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.\u003cbr\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  :exclamation: Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2020-06-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. **Verify the setup**:","lastModifiedDate":"2020-06-07"},{"lineNumber":26,"author":{"gitId":"emptygx"},"content":"   1. Run the `seedu.clinkedin.Main` and try a few commands.","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   1. [Run the tests](Testing.md) to ensure they all pass.","lastModifiedDate":"2020-06-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## Before writing code","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. **Configure the coding style**","lastModifiedDate":"2020-06-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours.","lastModifiedDate":"2020-09-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code.","lastModifiedDate":"2020-06-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. **Set up CI**","lastModifiedDate":"2020-06-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. **Learn the design**","lastModifiedDate":"2020-06-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [AddressBook’s architecture](DeveloperGuide.md#architecture).","lastModifiedDate":"2020-06-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"1. **Do the tutorials**","lastModifiedDate":"2020-06-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"   These tutorials will help you get acquainted with the codebase.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   * [Tracing code](tutorials/TracingCode.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   * [Adding a new command](tutorials/AddRemark.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   * [Removing fields](tutorials/RemovingFields.md)","lastModifiedDate":"2021-08-01"}],"authorContributionMap":{"emptygx":1,"-":54}},{"path":"docs/Testing.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Testing guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Running tests","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"There are two ways to run tests.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"* **Method 1: Using IntelliJ JUnit test runner**","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * To run all tests, right-click on the `src/test/java` folder and choose `Run \u0027All Tests\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  * To run a subset of tests, you can right-click on a test package,","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    test class, or a test and choose `Run \u0027ABC\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* **Method 2: Using Gradle**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  * Open a console and run the command `gradlew clean test` (Mac/Linux: `./gradlew clean test`)","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-secondary\"\u003e:link: **Link**: Read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html) to learn more about using Gradle.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"## Types of tests","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"This project has three types of tests:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"1. *Unit tests* targeting the lowest level methods/classes.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"emptygx"},"content":"   e.g. `seedu.clinkedin.commons.StringUtilTest`","lastModifiedDate":"2022-10-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. *Integration tests* that are checking the integration of multiple code units (those code units are assumed to be working).\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"emptygx"},"content":"   e.g. `seedu.clinkedin.storage.StorageManagerTest`","lastModifiedDate":"2022-10-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"1. Hybrids of unit and integration tests. These test are checking multiple code units as well as how the are connected together.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"emptygx"},"content":"   e.g. `seedu.clinkedin.logic.LogicManagerTest`","lastModifiedDate":"2022-10-15"}],"authorContributionMap":{"emptygx":3,"-":33}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"josephaedan"},"content":"\u003ch1 align\u003d\"center\"\u003e:book: Welcome to CLInkedIn User Guide!\u003c/h1\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"josephaedan"},"content":"Welcome to the CLInkedIn User Guide! If you are a recruiter who is using CLInkedIn, or someone who is curious to find out more about CLInkedIn and its features, look no further!","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"josephaedan"},"content":"In this user guide, you will find instructions on how to install CLInkedIn and a guide on how to use CLInkedIn\u0027s numerous features.","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":11,"author":{"gitId":"josephaedan"},"content":"💻 Are you a Developer? Do check out the [CLInkedIn Developer Guide](https://ay2223s1-cs2103t-t13-3.github.io/tp/DeveloperGuide.html) for more technical information!","lastModifiedDate":"2022-09-29"},{"lineNumber":12,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":13,"author":{"gitId":"josephaedan"},"content":"## Table of Contents","lastModifiedDate":"2022-09-29"},{"lineNumber":14,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"josephaedan"},"content":"1. [Introduction to CLInkedIn](#introduction)","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"josephaedan"},"content":"2. [Useful Notation](#useful-notations)","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"josephaedan"},"content":"3. [Quick start](#quick-start)","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"josephaedan"},"content":"4. [Features](#features)","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"josephaedan"},"content":"   1. [Viewing help `help`](#viewing-help--help)","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"josephaedan"},"content":"   2. [Adding/Deleting contacts in CLInkedIn](#addingdeleting-contacts-in-clinkedin)","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"josephaedan"},"content":"      1. [Adding a person `add`](#adding-a-person-add)","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"josephaedan"},"content":"      2. [Deleting a person `delete`](#deleting-a-person--delete)","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"pratham31012002"},"content":"   3. [Adding/Editing/Deleting Tag Types in CLInkedIn](#addingdeleting-contacts-in-clinkedin)","lastModifiedDate":"2022-10-28"},{"lineNumber":24,"author":{"gitId":"pratham31012002"},"content":"      1. [Creating a custom tag type `createTagType`](#creating-a-custom-tag-type-createtagtype)","lastModifiedDate":"2022-10-28"},{"lineNumber":25,"author":{"gitId":"pratham31012002"},"content":"      2. [Editing tag type name `editTagType`](#editing-tag-type-name-edittagtype)","lastModifiedDate":"2022-10-28"},{"lineNumber":26,"author":{"gitId":"pratham31012002"},"content":"      3. [Deleting an existing tag type `deleteTagType`](#deleting-an-existing-tag-type-deletetagtype)","lastModifiedDate":"2022-10-28"},{"lineNumber":27,"author":{"gitId":"pratham31012002"},"content":"   4. [Modifying contacts in CLInkedIn](#modifying-contacts-in-clinkedin)","lastModifiedDate":"2022-10-28"},{"lineNumber":28,"author":{"gitId":"josephaedan"},"content":"      1. [Editing a person `edit`](#editing-a-person--edit)","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"pratham31012002"},"content":"      2. [Adding an optional tag `addTag`](#adding-a-tag-to-an-existing-person--addtag)","lastModifiedDate":"2022-10-28"},{"lineNumber":30,"author":{"gitId":"pratham31012002"},"content":"      3. [Deleting an optional tag `deleteTag`]([#deleting-a-tag-of-an-existing-person--deletetag)","lastModifiedDate":"2022-10-28"},{"lineNumber":31,"author":{"gitId":"pratham31012002"},"content":"      4. [Adding optional information `addNote`](#adding-optional-information-addnote)","lastModifiedDate":"2022-10-28"},{"lineNumber":32,"author":{"gitId":"pratham31012002"},"content":"      5. [Deleting optional information `deleteNote`](#deleting-optional-information-deletenote)","lastModifiedDate":"2022-10-28"},{"lineNumber":33,"author":{"gitId":"pratham31012002"},"content":"      6. [Adding optional rating `addRate`](#adding-optional-rating-addrate)","lastModifiedDate":"2022-10-28"},{"lineNumber":34,"author":{"gitId":"agarwal-anjali"},"content":"      7. [Sorting candidates based on rating `sort`](#sorting-candidates-based-on-rating-sort)","lastModifiedDate":"2022-10-28"},{"lineNumber":35,"author":{"gitId":"pratham31012002"},"content":"      8. [Adding optional links `addLink`](#adding-optional-links-addlink)","lastModifiedDate":"2022-10-28"},{"lineNumber":36,"author":{"gitId":"pratham31012002"},"content":"      9. [Deleting links `celeteLink`](#deleting-links-deletelink)","lastModifiedDate":"2022-10-28"},{"lineNumber":37,"author":{"gitId":"pratham31012002"},"content":"   5. [Modifying contacts view in CLInkedIn](#modifying-contacts-view-in-clinkedin)","lastModifiedDate":"2022-10-28"},{"lineNumber":38,"author":{"gitId":"pratham31012002"},"content":"      1. [Viewing the details of a person `view`](#viewing-the-details-of-a-person--view)","lastModifiedDate":"2022-10-28"},{"lineNumber":39,"author":{"gitId":"agarwal-anjali"},"content":"      2. [Listing all persons `list`](#listing-all-persons--list)","lastModifiedDate":"2022-10-28"},{"lineNumber":40,"author":{"gitId":"agarwal-anjali"},"content":"      3. [Finding personal information and tags `find`](#finding-personal-information-and-tags-find)","lastModifiedDate":"2022-10-28"},{"lineNumber":41,"author":{"gitId":"agarwal-anjali"},"content":"      4. [Clearing all contacts `clear`](#clearing-all-contacts--clear)","lastModifiedDate":"2022-10-28"},{"lineNumber":42,"author":{"gitId":"pratham31012002"},"content":"      5. [Viewing statistics `stats`](#viewing-statistics-based-on-ratings-of-candidates-stats)","lastModifiedDate":"2022-10-28"},{"lineNumber":43,"author":{"gitId":"pratham31012002"},"content":"      6. [Importing contacts `import`](#importing-an-addressbook-import)","lastModifiedDate":"2022-10-28"},{"lineNumber":44,"author":{"gitId":"pratham31012002"},"content":"      7. [Exporting contacts `export`](#importing-an-addressbook-import)","lastModifiedDate":"2022-10-28"},{"lineNumber":45,"author":{"gitId":"agarwal-anjali"},"content":"      8. [Exiting CLInkedIn `exit`](#exiting-clinkedin--exit)","lastModifiedDate":"2022-10-28"},{"lineNumber":46,"author":{"gitId":"pratham31012002"},"content":"   6. [Miscellaneous Features/Commands](#miscellaneous-featurescommands)","lastModifiedDate":"2022-10-28"},{"lineNumber":47,"author":{"gitId":"josephaedan"},"content":"      5. [Saving the data](#saving-the-data)","lastModifiedDate":"2022-10-27"},{"lineNumber":48,"author":{"gitId":"josephaedan"},"content":"      6. [Editing the data file](#editing-the-data-file)","lastModifiedDate":"2022-10-27"},{"lineNumber":49,"author":{"gitId":"josephaedan"},"content":"5. [FAQ](#faq)","lastModifiedDate":"2022-10-27"},{"lineNumber":50,"author":{"gitId":"josephaedan"},"content":"6. [Command Summary](#command-summary)","lastModifiedDate":"2022-10-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"josephaedan"},"content":"## Introduction","lastModifiedDate":"2022-09-29"},{"lineNumber":53,"author":{"gitId":"josephaedan"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2022-09-29"},{"lineNumber":54,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":55,"author":{"gitId":"josephaedan"},"content":"CLInkedIn is a **desktop address book application made for Recruiting and Hiring Managers to keep track of candidates and their job applications.** The application is optimized for use via a **Command Line Interface (CLI)** while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2022-09-29"},{"lineNumber":56,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":57,"author":{"gitId":"josephaedan"},"content":"If you can type fast, CLInkedIn can get your Recruitment tasks done faster than traditional GUI apps.","lastModifiedDate":"2022-09-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":59,"author":{"gitId":"josephaedan"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-09-29"},{"lineNumber":60,"author":{"gitId":"josephaedan"},"content":"## Useful Notations","lastModifiedDate":"2022-09-29"},{"lineNumber":61,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":62,"author":{"gitId":"josephaedan"},"content":"While exploring CLInkedIn\u0027s features with this user guide, do take note of these symbols used in the user guide and what information they represent.","lastModifiedDate":"2022-09-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":64,"author":{"gitId":"josephaedan"},"content":"| Symbol | Meaning |","lastModifiedDate":"2022-09-29"},{"lineNumber":65,"author":{"gitId":"josephaedan"},"content":"| :----: | ------- |","lastModifiedDate":"2022-09-29"},{"lineNumber":66,"author":{"gitId":"josephaedan"},"content":"| :information_source: | Important information |","lastModifiedDate":"2022-09-29"},{"lineNumber":67,"author":{"gitId":"josephaedan"},"content":"| :exclamation: | Warning or caution |","lastModifiedDate":"2022-09-29"},{"lineNumber":68,"author":{"gitId":"josephaedan"},"content":"| :bulb: | Additional information such as tips or notes |","lastModifiedDate":"2022-09-29"},{"lineNumber":69,"author":{"gitId":"josephaedan"},"content":"| :wrench: | Help with common technical issues |","lastModifiedDate":"2022-09-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"josephaedan"},"content":"1. Ensure you have Java [`11`](https://www.oracle.com/sg/java/technologies/javase/jdk11-archive-downloads.html) or above installed in your Computer.","lastModifiedDate":"2022-09-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"emptygx"},"content":"1. Download the latest `CLInkedIn.jar` from [here](https://github.com/AY2223S1-CS2103T-T13-3/tp/releases).","lastModifiedDate":"2022-09-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"emptygx"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your `CLInkedIn` application.","lastModifiedDate":"2022-09-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"1. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"   * **`list`** : Lists all contacts.","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"   * **`add`**`n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01` : Adds a contact named `John Doe` to the Address Book.","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"   * **`delete`**`3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"   * **`clear`** : Deletes all contacts.","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"   * **`exit`** : Exits the app.","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":123,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":125,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"josephaedan"},"content":"## Viewing help : `help`","lastModifiedDate":"2022-10-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"Shows a message explaning how to access the help page.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"josephaedan"},"content":"## Adding/Deleting contacts in CLInkedIn","lastModifiedDate":"2022-10-27"},{"lineNumber":136,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":137,"author":{"gitId":"josephaedan"},"content":"The following functions deal with adding or deleting contacts from your address book in CLInkedIn.","lastModifiedDate":"2022-10-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"### Adding a person: `add`","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"Adds a person to the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"agarwal-anjali"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS s/STATUS [note/NOTE] [st/SKILL_TAG] [dt/DEGREE_TAG] [jt/JOB_TYPE_TAG] [\u003calias\u003e/TAG]…​ [rate/RATING] [l/LINK]…​`","lastModifiedDate":"2022-10-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"agarwal-anjali"},"content":"You can have any number and any kind of tags (including 0).","lastModifiedDate":"2022-09-28"},{"lineNumber":147,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"pratham31012002"},"content":"* By default, you can add 3 types of tags - `SKILL_TAG`, `DEGREE_TAG`, `JOB_TYPE_TAG`.","lastModifiedDate":"2022-09-28"},{"lineNumber":150,"author":{"gitId":"pratham31012002"},"content":"* Alternatively, you can create your own custom tag type and alias for it. See `create` command.","lastModifiedDate":"2022-09-28"},{"lineNumber":151,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":152,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"ytingtan"},"content":"* `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01 st/Java dt/Bachelors jt/Internship, rate/4`","lastModifiedDate":"2022-10-26"},{"lineNumber":154,"author":{"gitId":"agarwal-anjali"},"content":"* `add n/Betsy Crowe st/java e/betsycrowe@example.com a/Newgate Prison p/1234567 s/Rejected`","lastModifiedDate":"2022-10-27"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"josephaedan"},"content":"### Deleting a person : `delete`","lastModifiedDate":"2022-10-27"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"josephaedan"},"content":"Deletes the specified person from the address book.","lastModifiedDate":"2022-10-27"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"josephaedan"},"content":"Format: `delete INDEX`","lastModifiedDate":"2022-10-27"},{"lineNumber":161,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":162,"author":{"gitId":"josephaedan"},"content":"* Deletes the person at the specified `INDEX`.","lastModifiedDate":"2022-10-27"},{"lineNumber":163,"author":{"gitId":"josephaedan"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2022-10-27"},{"lineNumber":164,"author":{"gitId":"josephaedan"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-10-27"},{"lineNumber":165,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":166,"author":{"gitId":"josephaedan"},"content":"Examples:","lastModifiedDate":"2022-10-27"},{"lineNumber":167,"author":{"gitId":"josephaedan"},"content":"* `list` followed by `delete 2` deletes the 2nd person in the address book.","lastModifiedDate":"2022-10-27"},{"lineNumber":168,"author":{"gitId":"josephaedan"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st person in the results of the `find` command.","lastModifiedDate":"2022-10-27"},{"lineNumber":169,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":170,"author":{"gitId":"pratham31012002"},"content":"## Adding/Editing/Deleting Tag Types in CLInkedIn","lastModifiedDate":"2022-10-28"},{"lineNumber":171,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":172,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":173,"author":{"gitId":"pratham31012002"},"content":"### Creating a custom tag type: `createTagType`","lastModifiedDate":"2022-10-28"},{"lineNumber":174,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":175,"author":{"gitId":"pratham31012002"},"content":"Creates a custom tag type apart from the existing Skill, Degree, and Job Type tag types.","lastModifiedDate":"2022-10-28"},{"lineNumber":176,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":177,"author":{"gitId":"pratham31012002"},"content":"Format: `createTagType TAG_TYPE TAG_ALIAS`","lastModifiedDate":"2022-10-28"},{"lineNumber":178,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":179,"author":{"gitId":"pratham31012002"},"content":"- Creates a new `TAG_TYPE` tag type.","lastModifiedDate":"2022-10-28"},{"lineNumber":180,"author":{"gitId":"pratham31012002"},"content":"- `TAG_ALIAS` can be used to add tags to this custom tag type.","lastModifiedDate":"2022-10-28"},{"lineNumber":181,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":182,"author":{"gitId":"pratham31012002"},"content":"Examples:","lastModifiedDate":"2022-10-28"},{"lineNumber":183,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":184,"author":{"gitId":"pratham31012002"},"content":"- `create GPA gpat` creates a tag type `GPA` with `gpat` as its tag alias.","lastModifiedDate":"2022-10-28"},{"lineNumber":185,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":186,"author":{"gitId":"pratham31012002"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2022-10-28"},{"lineNumber":187,"author":{"gitId":"pratham31012002"},"content":"You can use existing tag types: Skill, or Degree, or Job Type.","lastModifiedDate":"2022-10-28"},{"lineNumber":188,"author":{"gitId":"pratham31012002"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":189,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":190,"author":{"gitId":"pratham31012002"},"content":"### Editing tag type name: `editTagType`","lastModifiedDate":"2022-10-28"},{"lineNumber":191,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":192,"author":{"gitId":"pratham31012002"},"content":"Edits the name and alias of an existing tag type to `NEW_TAG_TYPE` and `NEW_TAG_ALIAS`","lastModifiedDate":"2022-10-28"},{"lineNumber":193,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":194,"author":{"gitId":"pratham31012002"},"content":"Format: `editTagType OLD_TAG_TYPE-NEW_TAG_TYPE OLD_TAG_ALIAS-NEW_TAG_ALIAS`","lastModifiedDate":"2022-10-28"},{"lineNumber":195,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":196,"author":{"gitId":"pratham31012002"},"content":"Examples: `editTagType GPA-Grade gpat-grdt`","lastModifiedDate":"2022-10-28"},{"lineNumber":197,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":198,"author":{"gitId":"pratham31012002"},"content":"- Edits name of the `GPA` tag type to `Grade` and its tag alias from `gpat` to `grdt`","lastModifiedDate":"2022-10-28"},{"lineNumber":199,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":200,"author":{"gitId":"pratham31012002"},"content":"### Deleting an existing tag type: `deleteTagType`","lastModifiedDate":"2022-10-28"},{"lineNumber":201,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":202,"author":{"gitId":"pratham31012002"},"content":"Deletes an existing tag type and its corresponding tag alias.","lastModifiedDate":"2022-10-28"},{"lineNumber":203,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":204,"author":{"gitId":"pratham31012002"},"content":"Format: `deleteTagType TAG_TYPE`","lastModifiedDate":"2022-10-28"},{"lineNumber":205,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":206,"author":{"gitId":"pratham31012002"},"content":"Examples: `deleteTagType GPA`","lastModifiedDate":"2022-10-28"},{"lineNumber":207,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":208,"author":{"gitId":"pratham31012002"},"content":"- Deletes the `GPA` tag type.","lastModifiedDate":"2022-10-28"},{"lineNumber":209,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":210,"author":{"gitId":"josephaedan"},"content":"## Modifying contacts in CLInkedIn","lastModifiedDate":"2022-10-27"},{"lineNumber":211,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":212,"author":{"gitId":"josephaedan"},"content":"The following functions deal with modifying the information about the contacts saved in CLInkedIn.","lastModifiedDate":"2022-10-27"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"### Editing a person : `edit`","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"Edits an existing person in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"agarwal-anjali"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [s/STATUS] [note/NOTE] [st/OLD_SKILL_TAG-NEW_SKILL_TAG] [dt/OLD_DEGREE_TAG-NEW_DEGREE_TAG] [jt/OLD_JOB_TYPE_TAG-NEW_JOB_TYPE_TAG] [\u003calias\u003e/OLD_TAG-NEW_TAG]…​ [rate/RATING] [l/LINK]…​`","lastModifiedDate":"2022-10-27"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"* Edits the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"pratham31012002"},"content":"* While editing **Skill** tags, the existing `OLD_SKILL` of the person will be renamed to `NEW_SKILL`(Same for **Degree**, **JobType** and **Custom** tags).","lastModifiedDate":"2022-09-28"},{"lineNumber":223,"author":{"gitId":"pratham31012002"},"content":"* You can remove **all** the person’s tags by typing `t/` without specifying any tags after it.","lastModifiedDate":"2022-09-28"},{"lineNumber":224,"author":{"gitId":"pratham31012002"},"content":"* You can remove **all** the person’s **Skill** tags by typing `st/` without specifying any tags after it (Same for **Degree**, **JobType** and **Custom** tags).","lastModifiedDate":"2022-09-28"},{"lineNumber":225,"author":{"gitId":"agarwal-anjali"},"content":"*","lastModifiedDate":"2022-10-27"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"* `edit 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st person to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"* `edit 2 n/Betsy Crower t/` Edits the name of the 2nd person to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"pratham31012002"},"content":"* `edit 2 dt/Bachelors-Masters` Edits the Degree tag `Bachelors` of the 2nd person to be `Masters`.","lastModifiedDate":"2022-09-28"},{"lineNumber":231,"author":{"gitId":"agarwal-anjali"},"content":"* `edit 2 l/https://github.com/AY2223S1-CS2103T-T13-3/tp/pulls` Edits by replacing all existing links with the provided link.","lastModifiedDate":"2022-10-27"},{"lineNumber":232,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":233,"author":{"gitId":"ytingtan"},"content":"### Adding a tag to an existing person : `addTag`","lastModifiedDate":"2022-09-29"},{"lineNumber":234,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":235,"author":{"gitId":"pratham31012002"},"content":"Adds a tag to an existing person in the address book.","lastModifiedDate":"2022-09-28"},{"lineNumber":236,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":237,"author":{"gitId":"pratham31012002"},"content":"Format: `addTag INDEX [st/SKILL_TAG] [dt/DEGREE_TAG] [jt/JOB_TYPE_TAG] [\u003calias\u003e/TAG]…​`","lastModifiedDate":"2022-09-28"},{"lineNumber":238,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":239,"author":{"gitId":"pratham31012002"},"content":"* Adds a tag to the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-09-28"},{"lineNumber":240,"author":{"gitId":"pratham31012002"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2022-09-28"},{"lineNumber":241,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":242,"author":{"gitId":"pratham31012002"},"content":"Examples:","lastModifiedDate":"2022-09-28"},{"lineNumber":243,"author":{"gitId":"pratham31012002"},"content":"* `addTag 3 st/Java` Adds a **Skill** tag `Java` to the 3rd person.","lastModifiedDate":"2022-09-28"},{"lineNumber":244,"author":{"gitId":"pratham31012002"},"content":"* `edit 2 dt/Bachelors` Adds a **Degree** tag `Bachelors` to the 2nd person.","lastModifiedDate":"2022-09-28"},{"lineNumber":245,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":246,"author":{"gitId":"ytingtan"},"content":"### Deleting a tag of an existing person : `deleteTag`","lastModifiedDate":"2022-09-29"},{"lineNumber":247,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":248,"author":{"gitId":"pratham31012002"},"content":"Deletes a tag of an existing person in the address book.","lastModifiedDate":"2022-09-28"},{"lineNumber":249,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":250,"author":{"gitId":"pratham31012002"},"content":"Format: `deleteTag INDEX [st/SKILL_TAG] [dt/DEGREE_TAG] [jt/JOB_TYPE_TAG] [\u003calias\u003e/TAG]…​`","lastModifiedDate":"2022-09-28"},{"lineNumber":251,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":252,"author":{"gitId":"pratham31012002"},"content":"* Deletes an existing tag of the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-09-28"},{"lineNumber":253,"author":{"gitId":"pratham31012002"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2022-09-28"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":255,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-09-28"},{"lineNumber":256,"author":{"gitId":"pratham31012002"},"content":"* `deleteTag 3 st/Java` Deletes the **Skill** tag `Java` of the 3rd person.","lastModifiedDate":"2022-09-28"},{"lineNumber":257,"author":{"gitId":"pratham31012002"},"content":"* `deleteTag 2 dt/Bachelors` Deletes the **Degree** tag `Bachelors` of the 2nd person.","lastModifiedDate":"2022-09-28"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"agarwal-anjali"},"content":"### Adding optional information: `addNote`","lastModifiedDate":"2022-10-28"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":261,"author":{"gitId":"agarwal-anjali"},"content":"Adds additional optional information (notes) to a person","lastModifiedDate":"2022-10-28"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":263,"author":{"gitId":"agarwal-anjali"},"content":"Format: `addNote INDEX note/NOTE`","lastModifiedDate":"2022-10-28"},{"lineNumber":264,"author":{"gitId":"agarwal-anjali"},"content":"* The INDEX refers to the index number shown in the displayed person list.","lastModifiedDate":"2022-10-28"},{"lineNumber":265,"author":{"gitId":"agarwal-anjali"},"content":"* The index must be a positive integer 1, 2, 3, …​","lastModifiedDate":"2022-10-28"},{"lineNumber":266,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":267,"author":{"gitId":"agarwal-anjali"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Note:**","lastModifiedDate":"2022-10-28"},{"lineNumber":268,"author":{"gitId":"agarwal-anjali"},"content":"A person can have any number of notes (including 0)","lastModifiedDate":"2022-10-28"},{"lineNumber":269,"author":{"gitId":"agarwal-anjali"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":270,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":271,"author":{"gitId":"agarwal-anjali"},"content":"Examples:","lastModifiedDate":"2022-09-28"},{"lineNumber":272,"author":{"gitId":"agarwal-anjali"},"content":"* `addNote 4 note/Strong in Java` adds a note `Strong in Java` to the 4th person in the address book.","lastModifiedDate":"2022-10-28"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":274,"author":{"gitId":"agarwal-anjali"},"content":"### Deleting optional information: `deleteNote`","lastModifiedDate":"2022-10-28"},{"lineNumber":275,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":276,"author":{"gitId":"agarwal-anjali"},"content":"Deletes optional information (notes) of a person.","lastModifiedDate":"2022-10-28"},{"lineNumber":277,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":278,"author":{"gitId":"agarwal-anjali"},"content":"Format: `deleteNote INDEX`","lastModifiedDate":"2022-10-28"},{"lineNumber":279,"author":{"gitId":"agarwal-anjali"},"content":"* The INDEX refers to the index number shown in the displayed person list.","lastModifiedDate":"2022-10-28"},{"lineNumber":280,"author":{"gitId":"agarwal-anjali"},"content":"* The index must be a positive integer 1, 2, 3, …​","lastModifiedDate":"2022-10-28"},{"lineNumber":281,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":282,"author":{"gitId":"agarwal-anjali"},"content":"Examples:","lastModifiedDate":"2022-10-28"},{"lineNumber":283,"author":{"gitId":"agarwal-anjali"},"content":"* `deletNote 4` deletes all notes of the 4th person in the address book.","lastModifiedDate":"2022-10-28"},{"lineNumber":284,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":285,"author":{"gitId":"agarwal-anjali"},"content":"### Adding optional rating: `addRate`","lastModifiedDate":"2022-10-28"},{"lineNumber":286,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":287,"author":{"gitId":"agarwal-anjali"},"content":"Adds a numerical representation of candidates to make quick comparisons between candidates. ","lastModifiedDate":"2022-10-28"},{"lineNumber":288,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":289,"author":{"gitId":"agarwal-anjali"},"content":"Format: `addRate INDEX rate/\u003cRATING\u003e`","lastModifiedDate":"2022-10-28"},{"lineNumber":290,"author":{"gitId":"agarwal-anjali"},"content":"* The INDEX refers to the index number shown in the displayed person list.","lastModifiedDate":"2022-10-28"},{"lineNumber":291,"author":{"gitId":"agarwal-anjali"},"content":"* The INDEX must be a positive integer 1, 2, 3, …​","lastModifiedDate":"2022-10-28"},{"lineNumber":292,"author":{"gitId":"agarwal-anjali"},"content":"* The RATING must be an integer between 1 and 10 inclusive.","lastModifiedDate":"2022-10-28"},{"lineNumber":293,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":294,"author":{"gitId":"agarwal-anjali"},"content":"Examples:","lastModifiedDate":"2022-10-28"},{"lineNumber":295,"author":{"gitId":"agarwal-anjali"},"content":"* `addRate 2 rate/5` adds a rating of `5` to the 2nd person in the address book.","lastModifiedDate":"2022-10-28"},{"lineNumber":296,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":297,"author":{"gitId":"agarwal-anjali"},"content":"### Sorting candidates based on Rating: `sort`","lastModifiedDate":"2022-10-28"},{"lineNumber":298,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":299,"author":{"gitId":"agarwal-anjali"},"content":"Sorts candidates in CLInkedIn according to their rating given. Candidates will be sorted according to their ratings in descending order (highest rating to lowest).","lastModifiedDate":"2022-10-28"},{"lineNumber":300,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":301,"author":{"gitId":"agarwal-anjali"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Note:**","lastModifiedDate":"2022-10-28"},{"lineNumber":302,"author":{"gitId":"agarwal-anjali"},"content":"Recall that rating is an optional field for a candidate. Thus, candidates with no ratings given will be displayed at the bottom, after candidates with a rating.","lastModifiedDate":"2022-10-28"},{"lineNumber":303,"author":{"gitId":"agarwal-anjali"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":304,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":305,"author":{"gitId":"agarwal-anjali"},"content":"Format: `sort`","lastModifiedDate":"2022-10-28"},{"lineNumber":306,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":307,"author":{"gitId":"agarwal-anjali"},"content":"Example:","lastModifiedDate":"2022-10-28"},{"lineNumber":308,"author":{"gitId":"agarwal-anjali"},"content":"* `sort` will return a list of the candidates, sorted in order of descending rating.","lastModifiedDate":"2022-10-28"},{"lineNumber":309,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":310,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":311,"author":{"gitId":"agarwal-anjali"},"content":"### Adding optional links: `addLink`","lastModifiedDate":"2022-10-28"},{"lineNumber":312,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":313,"author":{"gitId":"agarwal-anjali"},"content":"Add links to candidate\u0027s online profiles/websites. Once added you can simply click on the icon and you will be redirected to the webpage. ","lastModifiedDate":"2022-10-28"},{"lineNumber":314,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":315,"author":{"gitId":"agarwal-anjali"},"content":"Format: `addLink INDEX l/\u003cLINK\u003e`","lastModifiedDate":"2022-10-28"},{"lineNumber":316,"author":{"gitId":"emptygx"},"content":"* The INDEX refers to the index number shown in the displayed person list.","lastModifiedDate":"2022-09-28"},{"lineNumber":317,"author":{"gitId":"agarwal-anjali"},"content":"* The INDEX must be a positive integer 1, 2, 3, …​","lastModifiedDate":"2022-10-28"},{"lineNumber":318,"author":{"gitId":"agarwal-anjali"},"content":"* The link must be a valid link with a protocol.","lastModifiedDate":"2022-10-28"},{"lineNumber":319,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":320,"author":{"gitId":"agarwal-anjali"},"content":"Examples:","lastModifiedDate":"2022-10-28"},{"lineNumber":321,"author":{"gitId":"agarwal-anjali"},"content":"* `addLink 2 l/https://www.instagram.com l/https://github.com` adds links to the instagram and github page ` to the 2nd person in the address book.","lastModifiedDate":"2022-10-28"},{"lineNumber":322,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":323,"author":{"gitId":"emptygx"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Note:**","lastModifiedDate":"2022-09-28"},{"lineNumber":324,"author":{"gitId":"agarwal-anjali"},"content":"If the link is not a platform recognised by CLInkedIn (LinkedIn, GitHub, Instagram, Telegram, Twitter, Snapchat, Discord, Facebook) then a general icon for links is displayed.","lastModifiedDate":"2022-10-28"},{"lineNumber":325,"author":{"gitId":"emptygx"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":326,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":327,"author":{"gitId":"agarwal-anjali"},"content":"### Deleting links: `deleteLink`","lastModifiedDate":"2022-10-28"},{"lineNumber":328,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":329,"author":{"gitId":"agarwal-anjali"},"content":"Deletes all links of a person.","lastModifiedDate":"2022-10-28"},{"lineNumber":330,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":331,"author":{"gitId":"agarwal-anjali"},"content":"Format: `deleteLink INDEX`","lastModifiedDate":"2022-10-28"},{"lineNumber":332,"author":{"gitId":"agarwal-anjali"},"content":"* The INDEX refers to the index number shown in the displayed person list.","lastModifiedDate":"2022-10-28"},{"lineNumber":333,"author":{"gitId":"agarwal-anjali"},"content":"* The index must be a positive integer 1, 2, 3, …​","lastModifiedDate":"2022-10-28"},{"lineNumber":334,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":335,"author":{"gitId":"emptygx"},"content":"Examples:","lastModifiedDate":"2022-09-28"},{"lineNumber":336,"author":{"gitId":"agarwal-anjali"},"content":"* `deletLink 4` deletes all links of the 4th person in the address book.","lastModifiedDate":"2022-10-28"},{"lineNumber":337,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":338,"author":{"gitId":"pratham31012002"},"content":"## Modifying contacts view in CLInkedIn","lastModifiedDate":"2022-10-28"},{"lineNumber":339,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":340,"author":{"gitId":"agarwal-anjali"},"content":"### Viewing the details of a person : `view`","lastModifiedDate":"2022-10-28"},{"lineNumber":341,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":342,"author":{"gitId":"agarwal-anjali"},"content":"Show details of a person in the addressbook.","lastModifiedDate":"2022-10-28"},{"lineNumber":343,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":344,"author":{"gitId":"agarwal-anjali"},"content":"Format: `view INDEX`","lastModifiedDate":"2022-10-28"},{"lineNumber":345,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":346,"author":{"gitId":"agarwal-anjali"},"content":"Examples: `view 2` views the details of the 2nd person in the addressbook.","lastModifiedDate":"2022-10-28"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":348,"author":{"gitId":"josephaedan"},"content":"### Listing all persons : `list`","lastModifiedDate":"2022-10-27"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":350,"author":{"gitId":"josephaedan"},"content":"Shows a list of all persons in the address book.","lastModifiedDate":"2022-10-27"},{"lineNumber":351,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":352,"author":{"gitId":"josephaedan"},"content":"Format: `list`","lastModifiedDate":"2022-10-27"},{"lineNumber":353,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":354,"author":{"gitId":"josephaedan"},"content":"### Finding personal information and tags: `find`","lastModifiedDate":"2022-10-27"},{"lineNumber":355,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":356,"author":{"gitId":"josephaedan"},"content":"Finds candidates whose personal information and tags contain any of the given keywords.","lastModifiedDate":"2022-10-27"},{"lineNumber":357,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":358,"author":{"gitId":"josephaedan"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]` **or** `find [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [s/STATUS] [rate/RATING]","lastModifiedDate":"2022-10-27"},{"lineNumber":359,"author":{"gitId":"josephaedan"},"content":"[MORE_TAGGED_KEYWORDS]...`","lastModifiedDate":"2022-10-27"},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":361,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2022-10-27"},{"lineNumber":362,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2022-10-27"},{"lineNumber":363,"author":{"gitId":"josephaedan"},"content":"* The personal information and tags will be searched.","lastModifiedDate":"2022-10-27"},{"lineNumber":364,"author":{"gitId":"josephaedan"},"content":"* Partial words will be matched e.g. `Han` will match `Hans`","lastModifiedDate":"2022-10-27"},{"lineNumber":365,"author":{"gitId":"-"},"content":"* Persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2022-10-27"},{"lineNumber":366,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2022-10-27"},{"lineNumber":367,"author":{"gitId":"josephaedan"},"content":"* Search can be further refined by specifying the type of tag to search for.","lastModifiedDate":"2022-10-27"},{"lineNumber":368,"author":{"gitId":"josephaedan"},"content":"  e.g. `find n/John p/867` will return `John Doe` with **Phone** number `8675309`","lastModifiedDate":"2022-10-27"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":370,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-10-27"},{"lineNumber":371,"author":{"gitId":"-"},"content":"* `find John` returns `john` and `John Doe`","lastModifiedDate":"2022-10-27"},{"lineNumber":372,"author":{"gitId":"josephaedan"},"content":"* `find Java` returns list of candidates with Java skills","lastModifiedDate":"2022-10-27"},{"lineNumber":373,"author":{"gitId":"-"},"content":"* `find alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":374,"author":{"gitId":"josephaedan"},"content":"* `find n/John` returns `John Doe`","lastModifiedDate":"2022-10-27"},{"lineNumber":375,"author":{"gitId":"josephaedan"},"content":"* `find n/alex n/david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":376,"author":{"gitId":"josephaedan"},"content":"* `find s/application pending` returns list of candidates with status `application pending`","lastModifiedDate":"2022-10-27"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":378,"author":{"gitId":"agarwal-anjali"},"content":"### Clearing all contacts : `clear`","lastModifiedDate":"2022-10-28"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":380,"author":{"gitId":"agarwal-anjali"},"content":"Clears all entries from the address book.","lastModifiedDate":"2022-10-28"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":382,"author":{"gitId":"agarwal-anjali"},"content":"Format: `clear`","lastModifiedDate":"2022-10-28"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":384,"author":{"gitId":"agarwal-anjali"},"content":"### Viewing Statistics based on ratings of candidates: `stats`","lastModifiedDate":"2022-10-28"},{"lineNumber":385,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":386,"author":{"gitId":"agarwal-anjali"},"content":"Views statistics of the candidates currently saved in CLInkedIn.","lastModifiedDate":"2022-10-28"},{"lineNumber":387,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":388,"author":{"gitId":"agarwal-anjali"},"content":"Format: `stats`","lastModifiedDate":"2022-10-28"},{"lineNumber":389,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":390,"author":{"gitId":"josephaedan"},"content":"Example:","lastModifiedDate":"2022-10-27"},{"lineNumber":391,"author":{"gitId":"agarwal-anjali"},"content":"* `stats` displays the statistics regarding the contacts saved in CLInkedIn.","lastModifiedDate":"2022-10-28"},{"lineNumber":392,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":393,"author":{"gitId":"agarwal-anjali"},"content":"### Exporting the addressbook: `export`","lastModifiedDate":"2022-10-28"},{"lineNumber":394,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":395,"author":{"gitId":"agarwal-anjali"},"content":"Exports the data for the displayed list of candidates to the specified location in the specified format. ","lastModifiedDate":"2022-10-28"},{"lineNumber":396,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":397,"author":{"gitId":"agarwal-anjali"},"content":"Format: `export path/\u003cPATH WITH NAME OF FILE TO BE EXPORTED TO\u003e`","lastModifiedDate":"2022-10-28"},{"lineNumber":398,"author":{"gitId":"agarwal-anjali"},"content":"* The format of the file must be JSON or CSV.","lastModifiedDate":"2022-10-28"},{"lineNumber":399,"author":{"gitId":"agarwal-anjali"},"content":"* Any directory in the path which does not exist will automatically be created.","lastModifiedDate":"2022-10-28"},{"lineNumber":400,"author":{"gitId":"agarwal-anjali"},"content":"* Only the displayed list of candidates will be exported.","lastModifiedDate":"2022-10-28"},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":402,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-10-28"},{"lineNumber":403,"author":{"gitId":"agarwal-anjali"},"content":"* `export path//Desktop/sample/data.csv` exports the filtered list of candidates to `data.csv` in the `sample` directory of the `Desktop`.","lastModifiedDate":"2022-10-28"},{"lineNumber":404,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":405,"author":{"gitId":"agarwal-anjali"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2022-10-28"},{"lineNumber":406,"author":{"gitId":"agarwal-anjali"},"content":"Alternatively to export files using GUI, you can either go to `Export` -\u003e `Export` in the Menu Bar or enter the command `export`.","lastModifiedDate":"2022-10-28"},{"lineNumber":407,"author":{"gitId":"agarwal-anjali"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":408,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":409,"author":{"gitId":"agarwal-anjali"},"content":"### Importing an addressbook: `import`","lastModifiedDate":"2022-10-28"},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":411,"author":{"gitId":"agarwal-anjali"},"content":"Imports the data for candidates from the specified file.","lastModifiedDate":"2022-10-28"},{"lineNumber":412,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":413,"author":{"gitId":"agarwal-anjali"},"content":"Format: `import path/\u003cPATH WITH NAME OF FILE TO BE IMPORTED FROM\u003e`","lastModifiedDate":"2022-10-28"},{"lineNumber":414,"author":{"gitId":"agarwal-anjali"},"content":"* The format of the file must be JSON or CSV.","lastModifiedDate":"2022-10-28"},{"lineNumber":415,"author":{"gitId":"agarwal-anjali"},"content":"* Data being import will be merged with the existing data in the addressbook.","lastModifiedDate":"2022-10-28"},{"lineNumber":416,"author":{"gitId":"agarwal-anjali"},"content":"* Candidates whose name already exists in the addressbook will be ignored.","lastModifiedDate":"2022-10-28"},{"lineNumber":417,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":418,"author":{"gitId":"agarwal-anjali"},"content":"Examples:","lastModifiedDate":"2022-10-28"},{"lineNumber":419,"author":{"gitId":"agarwal-anjali"},"content":"* `import path//Desktop/sample/data.csv` imports the list of candidates from `data.csv` in the `sample` directory of the `Desktop` to the addressbook.","lastModifiedDate":"2022-10-28"},{"lineNumber":420,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":421,"author":{"gitId":"agarwal-anjali"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2022-10-28"},{"lineNumber":422,"author":{"gitId":"agarwal-anjali"},"content":"Alternatively to import files using GUI, you can either go to `Import` -\u003e `Import` in the Menu Bar or enter the command `import`.","lastModifiedDate":"2022-10-28"},{"lineNumber":423,"author":{"gitId":"agarwal-anjali"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":424,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"josephaedan"},"content":"### Exiting CLInkedIn : `exit`","lastModifiedDate":"2022-10-27"},{"lineNumber":426,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"agarwal-anjali"},"content":"* Alternatively, you can also go to `File\u0027 -\u003e `Exit` in the Menu Bar.","lastModifiedDate":"2022-10-28"},{"lineNumber":431,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":432,"author":{"gitId":"agarwal-anjali"},"content":"## Miscellaneous Features/Commands","lastModifiedDate":"2022-10-28"},{"lineNumber":433,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":434,"author":{"gitId":"agarwal-anjali"},"content":"The following miscallenous features are implemented in CLInkedIn and are available to users.","lastModifiedDate":"2022-10-28"},{"lineNumber":435,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"emptygx"},"content":"CLInkedIn data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2022-09-29"},{"lineNumber":439,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":440,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":441,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":442,"author":{"gitId":"emptygx"},"content":"CLInkedIn data are saved as a JSON file `[JAR file location]/data/clinkedin.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2022-09-29"},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":444,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":445,"author":{"gitId":"emptygx"},"content":"If your changes to the data file makes its format invalid, CLInkedIn will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2022-09-29"},{"lineNumber":446,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":447,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":448,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":453,"author":{"gitId":"emptygx"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous CLInkedIn home folder.","lastModifiedDate":"2022-09-29"},{"lineNumber":454,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":455,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":457,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":460,"author":{"gitId":"pratham31012002"},"content":"| Action            | Format, Examples                                                                                                                                                                                                                                                     |","lastModifiedDate":"2022-09-28"},{"lineNumber":461,"author":{"gitId":"ytingtan"},"content":"|-------------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-09-28"},{"lineNumber":462,"author":{"gitId":"pratham31012002"},"content":"| **Add**           | `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [st/SKILL_TAG] [dt/DEGREE_TAG] [jt/JOB_TYPE_TAG] [\u003calias\u003e/TAG]…​` \u003cbr\u003e e.g., `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01 st/Java`                                                   |","lastModifiedDate":"2022-09-28"},{"lineNumber":463,"author":{"gitId":"pratham31012002"},"content":"| **Clear**         | `clear`                                                                                                                                                                                                                                                              |","lastModifiedDate":"2022-09-28"},{"lineNumber":464,"author":{"gitId":"pratham31012002"},"content":"| **Delete**        | `delete INDEX`\u003cbr\u003e e.g., `delete 3`                                                                                                                                                                                                                                  |","lastModifiedDate":"2022-09-28"},{"lineNumber":465,"author":{"gitId":"pratham31012002"},"content":"| **Edit**          | `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [st/OLD_SKILL_TAG-NEW_SKILL_TAG] [dt/OLD_DEGREE_TAG-NEW_DEGREE_TAG] [jt/OLD_JOB_TYPE_TAG-NEW_JOB_TYPE_TAG] [\u003calias\u003e/OLD_TAG-NEW_TAG]…​`\u003cbr\u003e e.g.,`edit 1 p/91234567 e/johndoe@example.com dt/Bachelors-Masters` |","lastModifiedDate":"2022-09-28"},{"lineNumber":466,"author":{"gitId":"pratham31012002"},"content":"| **AddTag**        | `addTag INDEX [st/SKILL_TAG] [dt/DEGREE_TAG] [jt/JOB_TYPE_TAG] [\u003calias\u003e/TAG]…​`\u003cbr\u003e e.g., `addTag 3 st/Java`                                                                                                                                                         |","lastModifiedDate":"2022-09-28"},{"lineNumber":467,"author":{"gitId":"agarwal-anjali"},"content":"| **deleteTag**     | `deleteTag INDEX [st/SKILL_TAG] [dt/DEGREE_TAG] [jt/JOB_TYPE_TAG] [\u003calias\u003e/TAG]…​`\u003cbr\u003e e.g., `deleteTag 2 dt/Bachelors`\u003cbr/\u003e                                                                                                                                         |","lastModifiedDate":"2022-09-28"},{"lineNumber":468,"author":{"gitId":"agarwal-anjali"},"content":"| **Create**        | `create TAG_TYPE TAG_ALIAS` \u003cbr\u003e e.g., `create GPA gpat`                                                                                                                                                                                                             |","lastModifiedDate":"2022-09-28"},{"lineNumber":469,"author":{"gitId":"agarwal-anjali"},"content":"| **EditTagType**   | `editTagType OLD_TAG_TYPE-NEW_TAG_TYPE OLD_TAG_ALIAS-NEW_TAG_ALIAS` \u003cbr\u003e e.g., `editTagType GPA-Grade gpat-grdt`                                                                                                                                                     |","lastModifiedDate":"2022-09-28"},{"lineNumber":470,"author":{"gitId":"agarwal-anjali"},"content":"| **DeleteTagType** | `deleteTagType TAG_TYPE` \u003cbr\u003e e.g., `deleteTagType GPA`                                                                                                                                                                                                              |","lastModifiedDate":"2022-09-28"},{"lineNumber":471,"author":{"gitId":"emptygx"},"content":"| **Find**          | `find KEYWORD [MORE_KEYWORDS]` or `find [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [MORE_TAGGED_KEYWORDS]`  \u003cbr\u003e e.g., `find James Jake` , `find n/Alex p/8764321`                                                                                                          |","lastModifiedDate":"2022-10-10"},{"lineNumber":472,"author":{"gitId":"pratham31012002"},"content":"| **List**          | `list`                                                                                                                                                                                                                                                               |","lastModifiedDate":"2022-09-28"},{"lineNumber":473,"author":{"gitId":"ytingtan"},"content":"| **Status**        | `status INDEX s/STATUS` \u003cbr\u003e e.g., `status 1 s/Rejected`                                                                                                                                                                                                             |","lastModifiedDate":"2022-09-28"},{"lineNumber":474,"author":{"gitId":"pratham31012002"},"content":"| **Help**          | `help`                                                                                                                                                                                                                                                               |","lastModifiedDate":"2022-09-28"},{"lineNumber":475,"author":{"gitId":"ytingtan"},"content":"| **Sort**          | `sort`                                                                                                                                                                                                                                                               |","lastModifiedDate":"2022-10-28"},{"lineNumber":476,"author":{"gitId":"ytingtan"},"content":"| **Rate**          | `rate INDEX r/RATING` \u003cbr\u003e e.g., `rate 3 rate/5`                                                                                                                                                                                                                     |","lastModifiedDate":"2022-10-28"},{"lineNumber":477,"author":{"gitId":"ytingtan"},"content":"| **Export**        | `export path/\u003cPATH WITH NAME OF FILE TO BE EXPORTED TO\u003e` \u003cbr\u003e e.g., `export path//Desktop/sample/data.csv`                                                                                                                                                                                                          |","lastModifiedDate":"2022-10-28"},{"lineNumber":478,"author":{"gitId":"ytingtan"},"content":"| **Import**        | `import path/\u003cPATH WITH NAME OF FILE TO BE IMPORTED FROM\u003e` \u003cbr\u003e e.g., `import path//Desktop/sample/data.csv`                                                                                                                                                                                                        |                                                                                                                                                                                                                                                                                                            |","lastModifiedDate":"2022-10-28"},{"lineNumber":479,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":480,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":481,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-09-29"}],"authorContributionMap":{"agarwal-anjali":127,"ytingtan":13,"josephaedan":83,"pratham31012002":96,"emptygx":16,"-":146}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"josephaedan"},"content":"    content: \"CLInkedIn\";","lastModifiedDate":"2022-09-28"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"josephaedan":1,"-":294}},{"path":"docs/diagrams/FindActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"@startuml","lastModifiedDate":"2022-10-21"},{"lineNumber":2,"author":{"gitId":"emptygx"},"content":"!include style.puml","lastModifiedDate":"2022-10-21"},{"lineNumber":3,"author":{"gitId":"emptygx"},"content":"skinparam activity {","lastModifiedDate":"2022-10-21"},{"lineNumber":4,"author":{"gitId":"emptygx"},"content":"    BackgroundColor beige","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"emptygx"},"content":"    BorderColor red","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"emptygx"},"content":"}","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"emptygx"},"content":"start","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"emptygx"},"content":":User executes command;","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"emptygx"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"emptygx"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"emptygx"},"content":"if () then ([no prefixes used])","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"emptygx"},"content":"    :Search each person\u0027s","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"emptygx"},"content":"    details for any","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"emptygx"},"content":"    keyword matches;","lastModifiedDate":"2022-10-21"},{"lineNumber":17,"author":{"gitId":"emptygx"},"content":"    :Return matching","lastModifiedDate":"2022-10-21"},{"lineNumber":18,"author":{"gitId":"emptygx"},"content":"    persons as a","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"emptygx"},"content":"    filtered list;","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"emptygx"},"content":"else if () then ([prefixes used])","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"emptygx"},"content":"    :Search the specific","lastModifiedDate":"2022-10-21"},{"lineNumber":22,"author":{"gitId":"emptygx"},"content":"    fields for any keyword","lastModifiedDate":"2022-10-21"},{"lineNumber":23,"author":{"gitId":"emptygx"},"content":"    matches based on the","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"emptygx"},"content":"    prefixes;","lastModifiedDate":"2022-10-21"},{"lineNumber":25,"author":{"gitId":"emptygx"},"content":"    :Return matching","lastModifiedDate":"2022-10-21"},{"lineNumber":26,"author":{"gitId":"emptygx"},"content":"    persons as a","lastModifiedDate":"2022-10-21"},{"lineNumber":27,"author":{"gitId":"emptygx"},"content":"    filtered list;","lastModifiedDate":"2022-10-21"},{"lineNumber":28,"author":{"gitId":"emptygx"},"content":"else ([else])","lastModifiedDate":"2022-10-21"},{"lineNumber":29,"author":{"gitId":"emptygx"},"content":"    :Show an error","lastModifiedDate":"2022-10-21"},{"lineNumber":30,"author":{"gitId":"emptygx"},"content":"    message with the","lastModifiedDate":"2022-10-21"},{"lineNumber":31,"author":{"gitId":"emptygx"},"content":"    correct syntax;","lastModifiedDate":"2022-10-21"},{"lineNumber":32,"author":{"gitId":"emptygx"},"content":"endif","lastModifiedDate":"2022-10-21"},{"lineNumber":33,"author":{"gitId":"emptygx"},"content":"stop","lastModifiedDate":"2022-10-21"},{"lineNumber":34,"author":{"gitId":"emptygx"},"content":"@enduml","lastModifiedDate":"2022-10-21"}],"authorContributionMap":{"emptygx":34}},{"path":"docs/diagrams/FindSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"@startuml","lastModifiedDate":"2022-10-21"},{"lineNumber":2,"author":{"gitId":"emptygx"},"content":"!include style.puml","lastModifiedDate":"2022-10-21"},{"lineNumber":3,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":4,"author":{"gitId":"emptygx"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"emptygx"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"emptygx"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"emptygx"},"content":"participant \"f:FindCommand\" as FindCommand LOGIC_COLOR","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"emptygx"},"content":"end box","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"emptygx"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"emptygx"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"emptygx"},"content":"end box","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"emptygx"},"content":"[-\u003e LogicManager : execute(find n/John)","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"emptygx"},"content":"activate LogicManager","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":17,"author":{"gitId":"emptygx"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(find n/John)","lastModifiedDate":"2022-10-21"},{"lineNumber":18,"author":{"gitId":"emptygx"},"content":"activate AddressBookParser","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"emptygx"},"content":"create FindCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"emptygx"},"content":"AddressBookParser -\u003e FindCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":22,"author":{"gitId":"emptygx"},"content":"activate FindCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":23,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"emptygx"},"content":"FindCommand --\u003e AddressBookParser","lastModifiedDate":"2022-10-21"},{"lineNumber":25,"author":{"gitId":"emptygx"},"content":"deactivate FindCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":26,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":27,"author":{"gitId":"emptygx"},"content":"AddressBookParser --\u003e LogicManager : f","lastModifiedDate":"2022-10-21"},{"lineNumber":28,"author":{"gitId":"emptygx"},"content":"deactivate AddressBookParser","lastModifiedDate":"2022-10-21"},{"lineNumber":29,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":30,"author":{"gitId":"emptygx"},"content":"LogicManager -\u003e FindCommand : execute(model)","lastModifiedDate":"2022-10-21"},{"lineNumber":31,"author":{"gitId":"emptygx"},"content":"activate FindCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":32,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":33,"author":{"gitId":"emptygx"},"content":"FindCommand -\u003e Model : updateFilteredPersonList(predicate)","lastModifiedDate":"2022-10-21"},{"lineNumber":34,"author":{"gitId":"emptygx"},"content":"activate Model","lastModifiedDate":"2022-10-21"},{"lineNumber":35,"author":{"gitId":"emptygx"},"content":"FindCommand -[hidden]-\u003e LogicManager : void","lastModifiedDate":"2022-10-21"},{"lineNumber":36,"author":{"gitId":"emptygx"},"content":"Model --\u003e FindCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":37,"author":{"gitId":"emptygx"},"content":"deactivate Model","lastModifiedDate":"2022-10-21"},{"lineNumber":38,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":39,"author":{"gitId":"emptygx"},"content":"FindCommand --\u003e LogicManager : result","lastModifiedDate":"2022-10-21"},{"lineNumber":40,"author":{"gitId":"emptygx"},"content":"deactivate FindCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":41,"author":{"gitId":"emptygx"},"content":"FindCommand -[hidden]-\u003e LogicManager : result","lastModifiedDate":"2022-10-21"},{"lineNumber":42,"author":{"gitId":"emptygx"},"content":"destroy FindCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":43,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":44,"author":{"gitId":"emptygx"},"content":"[\u003c--LogicManager","lastModifiedDate":"2022-10-21"},{"lineNumber":45,"author":{"gitId":"emptygx"},"content":"deactivate LogicManager","lastModifiedDate":"2022-10-21"},{"lineNumber":46,"author":{"gitId":"emptygx"},"content":"@enduml","lastModifiedDate":"2022-10-21"}],"authorContributionMap":{"emptygx":46}},{"path":"docs/team/agarwal-anjali.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"agarwal-anjali"},"content":"---","lastModifiedDate":"2022-09-28"},{"lineNumber":2,"author":{"gitId":"agarwal-anjali"},"content":"layout: page","lastModifiedDate":"2022-09-28"},{"lineNumber":3,"author":{"gitId":"agarwal-anjali"},"content":"title: Anjali Agarwal\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-28"},{"lineNumber":4,"author":{"gitId":"agarwal-anjali"},"content":"---","lastModifiedDate":"2022-09-28"},{"lineNumber":5,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"agarwal-anjali"},"content":"### Project: CLInkedIn","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":8,"author":{"gitId":"agarwal-anjali"},"content":"CLInkedIn is a desktop address book application made for Recruiting and Hiring Managers.","lastModifiedDate":"2022-09-28"},{"lineNumber":9,"author":{"gitId":"agarwal-anjali"},"content":"The user interacts with it using a CLI, and it has a GUI created with JavaFX.","lastModifiedDate":"2022-09-28"},{"lineNumber":10,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":11,"author":{"gitId":"agarwal-anjali"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-28"},{"lineNumber":12,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":13,"author":{"gitId":"agarwal-anjali"},"content":"* **New Feature**:","lastModifiedDate":"2022-09-28"},{"lineNumber":14,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":15,"author":{"gitId":"agarwal-anjali"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dagarwal-anjali\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-09-28"},{"lineNumber":16,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":17,"author":{"gitId":"agarwal-anjali"},"content":"* **Project management**:","lastModifiedDate":"2022-09-28"},{"lineNumber":18,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":19,"author":{"gitId":"agarwal-anjali"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-28"},{"lineNumber":20,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":21,"author":{"gitId":"agarwal-anjali"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-28"},{"lineNumber":22,"author":{"gitId":"agarwal-anjali"},"content":"    * User Guide:","lastModifiedDate":"2022-09-28"},{"lineNumber":23,"author":{"gitId":"agarwal-anjali"},"content":"      - Added documentation for the different kinds of tag commands.","lastModifiedDate":"2022-09-28"},{"lineNumber":24,"author":{"gitId":"agarwal-anjali"},"content":"    * Developer Guide:","lastModifiedDate":"2022-09-28"},{"lineNumber":25,"author":{"gitId":"agarwal-anjali"},"content":"      - Added details for the Target User Profile, Value Proposition, and User Stories.","lastModifiedDate":"2022-09-28"},{"lineNumber":26,"author":{"gitId":"agarwal-anjali"},"content":"      - Added details for the Use Cases.","lastModifiedDate":"2022-09-28"},{"lineNumber":27,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":28,"author":{"gitId":"agarwal-anjali"},"content":"* **Community**:","lastModifiedDate":"2022-09-28"},{"lineNumber":29,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":30,"author":{"gitId":"agarwal-anjali"},"content":"* **Tools**:","lastModifiedDate":"2022-09-28"},{"lineNumber":31,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-09-28"}],"authorContributionMap":{"agarwal-anjali":31}},{"path":"docs/team/emptygx.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"---","lastModifiedDate":"2022-09-28"},{"lineNumber":2,"author":{"gitId":"emptygx"},"content":"layout: page","lastModifiedDate":"2022-09-28"},{"lineNumber":3,"author":{"gitId":"emptygx"},"content":"title: Marcus Tan\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-28"},{"lineNumber":4,"author":{"gitId":"emptygx"},"content":"---","lastModifiedDate":"2022-09-28"},{"lineNumber":5,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"emptygx"},"content":"### Project: CLInkedIn","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":8,"author":{"gitId":"emptygx"},"content":"CLInkedIn is a desktop address book application made for Recruiting and Hiring Managers.","lastModifiedDate":"2022-09-28"},{"lineNumber":9,"author":{"gitId":"emptygx"},"content":"The user interacts with it using a CLI, and it has a GUI created with JavaFX.","lastModifiedDate":"2022-09-28"},{"lineNumber":10,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":11,"author":{"gitId":"emptygx"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-28"},{"lineNumber":12,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":13,"author":{"gitId":"emptygx"},"content":"* **New Feature**:","lastModifiedDate":"2022-09-28"},{"lineNumber":14,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":15,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":16,"author":{"gitId":"emptygx"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003demptygx\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-09-28"},{"lineNumber":17,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":18,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":19,"author":{"gitId":"emptygx"},"content":"* **Project management**:","lastModifiedDate":"2022-09-28"},{"lineNumber":20,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":21,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":22,"author":{"gitId":"emptygx"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-28"},{"lineNumber":23,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":24,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":25,"author":{"gitId":"emptygx"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-28"},{"lineNumber":26,"author":{"gitId":"emptygx"},"content":"    * User Guide:","lastModifiedDate":"2022-09-28"},{"lineNumber":27,"author":{"gitId":"emptygx"},"content":"        - Added documentation for the adding of optional information.","lastModifiedDate":"2022-09-28"},{"lineNumber":28,"author":{"gitId":"emptygx"},"content":"    * Readme:","lastModifiedDate":"2022-09-28"},{"lineNumber":29,"author":{"gitId":"emptygx"},"content":"        - Designed and added UI mockup.","lastModifiedDate":"2022-09-28"},{"lineNumber":30,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":31,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":32,"author":{"gitId":"emptygx"},"content":"* **Community**:","lastModifiedDate":"2022-09-28"},{"lineNumber":33,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":34,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":35,"author":{"gitId":"emptygx"},"content":"* **Tools**:","lastModifiedDate":"2022-09-28"},{"lineNumber":36,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-09-28"}],"authorContributionMap":{"emptygx":36}},{"path":"docs/team/josephaedan.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"josephaedan"},"content":"---","lastModifiedDate":"2022-09-28"},{"lineNumber":2,"author":{"gitId":"josephaedan"},"content":"layout: page","lastModifiedDate":"2022-09-28"},{"lineNumber":3,"author":{"gitId":"josephaedan"},"content":"title: Joseph Aedan Marcus\u0027 Project Portfolio Page","lastModifiedDate":"2022-09-28"},{"lineNumber":4,"author":{"gitId":"josephaedan"},"content":"---","lastModifiedDate":"2022-09-28"},{"lineNumber":5,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"josephaedan"},"content":"### Project: CLInkedIn","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":8,"author":{"gitId":"josephaedan"},"content":"CLInkedIn is a desktop contact management Java application made for Recruiters to manage their contacts list of candidates.","lastModifiedDate":"2022-09-28"},{"lineNumber":9,"author":{"gitId":"josephaedan"},"content":"CLInkedIn operates mainly using a Command Line Interface (CLI), but still has a Graphical User Interface (GUI) made with JavaFX for improved user experience.","lastModifiedDate":"2022-09-28"},{"lineNumber":10,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":11,"author":{"gitId":"josephaedan"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-28"},{"lineNumber":12,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":13,"author":{"gitId":"josephaedan"},"content":"* **New Feature**:","lastModifiedDate":"2022-09-28"},{"lineNumber":14,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":15,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":16,"author":{"gitId":"josephaedan"},"content":"* **New Feature**:","lastModifiedDate":"2022-09-28"},{"lineNumber":17,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":18,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":19,"author":{"gitId":"josephaedan"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003djosephaedan\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-09-28"},{"lineNumber":20,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":21,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":22,"author":{"gitId":"josephaedan"},"content":"* **Project management**:","lastModifiedDate":"2022-09-28"},{"lineNumber":23,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":24,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":25,"author":{"gitId":"josephaedan"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-28"},{"lineNumber":26,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":27,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":28,"author":{"gitId":"josephaedan"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-28"},{"lineNumber":29,"author":{"gitId":"josephaedan"},"content":"    * Readme:","lastModifiedDate":"2022-09-28"},{"lineNumber":30,"author":{"gitId":"josephaedan"},"content":"        - Added the project description and the user guide and developer guide link.","lastModifiedDate":"2022-09-28"},{"lineNumber":31,"author":{"gitId":"josephaedan"},"content":"        - Added explanation of the target user profile and value proposition.","lastModifiedDate":"2022-09-28"},{"lineNumber":32,"author":{"gitId":"josephaedan"},"content":"        - Added example usages.","lastModifiedDate":"2022-09-28"},{"lineNumber":33,"author":{"gitId":"josephaedan"},"content":"    * User Guide:","lastModifiedDate":"2022-09-28"},{"lineNumber":34,"author":{"gitId":"josephaedan"},"content":"      - Added documentation for the skill feature, including the `skill` command and its various parameters.","lastModifiedDate":"2022-09-28"},{"lineNumber":35,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":36,"author":{"gitId":"josephaedan"},"content":"* **Community**:","lastModifiedDate":"2022-09-28"},{"lineNumber":37,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":38,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":39,"author":{"gitId":"josephaedan"},"content":"* **Tools**:","lastModifiedDate":"2022-09-28"}],"authorContributionMap":{"josephaedan":39}},{"path":"docs/team/pratham31012002.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"pratham31012002"},"content":"---","lastModifiedDate":"2022-09-28"},{"lineNumber":2,"author":{"gitId":"pratham31012002"},"content":"layout: page","lastModifiedDate":"2022-09-28"},{"lineNumber":3,"author":{"gitId":"pratham31012002"},"content":"title: Pratham Jain\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-28"},{"lineNumber":4,"author":{"gitId":"pratham31012002"},"content":"---","lastModifiedDate":"2022-09-28"},{"lineNumber":5,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"pratham31012002"},"content":"### Project: CLInkedIn","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":8,"author":{"gitId":"pratham31012002"},"content":"CLInkedIn is a desktop address book application made for Recruiting and Hiring Managers. The user interacts with it using a CLI, and it has a GUI created with JavaFX.","lastModifiedDate":"2022-09-28"},{"lineNumber":9,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":10,"author":{"gitId":"pratham31012002"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-28"},{"lineNumber":11,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":12,"author":{"gitId":"pratham31012002"},"content":"* **New Feature**:","lastModifiedDate":"2022-09-28"},{"lineNumber":13,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":14,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":15,"author":{"gitId":"pratham31012002"},"content":"* **New Feature**:","lastModifiedDate":"2022-09-28"},{"lineNumber":16,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":17,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":18,"author":{"gitId":"pratham31012002"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dpratham31012002\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-09-28"},{"lineNumber":19,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":20,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":21,"author":{"gitId":"pratham31012002"},"content":"* **Project management**:","lastModifiedDate":"2022-09-28"},{"lineNumber":22,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":23,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":24,"author":{"gitId":"pratham31012002"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-28"},{"lineNumber":25,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":26,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":27,"author":{"gitId":"pratham31012002"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-28"},{"lineNumber":28,"author":{"gitId":"pratham31012002"},"content":"    * User Guide:","lastModifiedDate":"2022-09-28"},{"lineNumber":29,"author":{"gitId":"pratham31012002"},"content":"        * Added documentation for the different kinds of `tag` commands.","lastModifiedDate":"2022-09-28"},{"lineNumber":30,"author":{"gitId":"pratham31012002"},"content":"    * Developer Guide:","lastModifiedDate":"2022-09-28"},{"lineNumber":31,"author":{"gitId":"pratham31012002"},"content":"        * Added details for the Use Cases.","lastModifiedDate":"2022-09-28"},{"lineNumber":32,"author":{"gitId":"pratham31012002"},"content":"        * Added details for the Target User Profile, Value Proposition, and User Stories.","lastModifiedDate":"2022-09-28"},{"lineNumber":33,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":34,"author":{"gitId":"pratham31012002"},"content":"* **Community**:","lastModifiedDate":"2022-09-28"},{"lineNumber":35,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":36,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":37,"author":{"gitId":"pratham31012002"},"content":"* **Tools**:","lastModifiedDate":"2022-09-28"},{"lineNumber":38,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-09-28"}],"authorContributionMap":{"pratham31012002":38}},{"path":"docs/team/yingting.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ytingtan"},"content":"---","lastModifiedDate":"2022-09-28"},{"lineNumber":2,"author":{"gitId":"ytingtan"},"content":"layout: page","lastModifiedDate":"2022-09-28"},{"lineNumber":3,"author":{"gitId":"ytingtan"},"content":"title: Tan Ying Ting\u0027 Project Portfolio Page","lastModifiedDate":"2022-09-28"},{"lineNumber":4,"author":{"gitId":"ytingtan"},"content":"---","lastModifiedDate":"2022-09-28"},{"lineNumber":5,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"ytingtan"},"content":"### Project: CLInkedIn","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":8,"author":{"gitId":"ytingtan"},"content":"CLInkedIn is a Java application made for recruiters to manage their of candidates.","lastModifiedDate":"2022-09-28"},{"lineNumber":9,"author":{"gitId":"ytingtan"},"content":"CLInkedIn operates mainly using a Command Line Interface (CLI), but still has a Graphical User Interface (GUI) made with JavaFX for improved user experience.","lastModifiedDate":"2022-09-28"},{"lineNumber":10,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":11,"author":{"gitId":"ytingtan"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-28"},{"lineNumber":12,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":13,"author":{"gitId":"ytingtan"},"content":"* **New Feature**:","lastModifiedDate":"2022-09-28"},{"lineNumber":14,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":15,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":16,"author":{"gitId":"ytingtan"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dytingtan\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-09-28"},{"lineNumber":17,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":18,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":19,"author":{"gitId":"ytingtan"},"content":"* **Project management**:","lastModifiedDate":"2022-09-28"},{"lineNumber":20,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":21,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":22,"author":{"gitId":"ytingtan"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-28"},{"lineNumber":23,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":24,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":25,"author":{"gitId":"ytingtan"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-28"},{"lineNumber":26,"author":{"gitId":"ytingtan"},"content":"    * Developer Guide:","lastModifiedDate":"2022-09-28"},{"lineNumber":27,"author":{"gitId":"ytingtan"},"content":"        - Added Glossary","lastModifiedDate":"2022-09-28"},{"lineNumber":28,"author":{"gitId":"ytingtan"},"content":"        - Added Non-functional requirements","lastModifiedDate":"2022-09-28"},{"lineNumber":29,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":30,"author":{"gitId":"ytingtan"},"content":"    * User Guide:","lastModifiedDate":"2022-09-28"},{"lineNumber":31,"author":{"gitId":"ytingtan"},"content":"        - Added documentation for the `find` feature","lastModifiedDate":"2022-09-28"},{"lineNumber":32,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":33,"author":{"gitId":"ytingtan"},"content":"* **Community**:","lastModifiedDate":"2022-09-28"},{"lineNumber":34,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":35,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":36,"author":{"gitId":"ytingtan"},"content":"* **Tools**:","lastModifiedDate":"2022-09-28"}],"authorContributionMap":{"ytingtan":36}},{"path":"docs/team/ytingtan.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ytingtan"},"content":"---","lastModifiedDate":"2022-09-28"},{"lineNumber":2,"author":{"gitId":"ytingtan"},"content":"layout: page","lastModifiedDate":"2022-09-28"},{"lineNumber":3,"author":{"gitId":"ytingtan"},"content":"title: Tan Ying Ting\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-28"},{"lineNumber":4,"author":{"gitId":"ytingtan"},"content":"---","lastModifiedDate":"2022-09-28"},{"lineNumber":5,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"ytingtan"},"content":"### Project: CLInkedIn","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":8,"author":{"gitId":"ytingtan"},"content":"CLInkedIn is a desktop application made for recruiters to manage candidates.","lastModifiedDate":"2022-09-28"},{"lineNumber":9,"author":{"gitId":"ytingtan"},"content":"CLInkedIn operates mainly using a Command Line Interface (CLI), but still has a Graphical User Interface (GUI) made with JavaFX for improved user experience.","lastModifiedDate":"2022-09-28"},{"lineNumber":10,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":11,"author":{"gitId":"ytingtan"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-28"},{"lineNumber":12,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":13,"author":{"gitId":"ytingtan"},"content":"* **New Feature**:","lastModifiedDate":"2022-09-28"},{"lineNumber":14,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":15,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":16,"author":{"gitId":"ytingtan"},"content":"* **New Feature**:","lastModifiedDate":"2022-09-28"},{"lineNumber":17,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":18,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":19,"author":{"gitId":"ytingtan"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dytingtan\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-09-28"},{"lineNumber":20,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":21,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":22,"author":{"gitId":"ytingtan"},"content":"* **Project management**:","lastModifiedDate":"2022-09-28"},{"lineNumber":23,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":24,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":25,"author":{"gitId":"ytingtan"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-28"},{"lineNumber":26,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":27,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":28,"author":{"gitId":"ytingtan"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-28"},{"lineNumber":29,"author":{"gitId":"ytingtan"},"content":"    * Readme:","lastModifiedDate":"2022-09-28"},{"lineNumber":30,"author":{"gitId":"ytingtan"},"content":"        - Added the project description and the user guide and developer guide link.","lastModifiedDate":"2022-09-28"},{"lineNumber":31,"author":{"gitId":"ytingtan"},"content":"        - Added explanation of the target user profile and value proposition.","lastModifiedDate":"2022-09-28"},{"lineNumber":32,"author":{"gitId":"ytingtan"},"content":"        - Added example usages.","lastModifiedDate":"2022-09-28"},{"lineNumber":33,"author":{"gitId":"ytingtan"},"content":"    * Developers Guide:","lastModifiedDate":"2022-09-28"},{"lineNumber":34,"author":{"gitId":"ytingtan"},"content":"        - Added Glossary","lastModifiedDate":"2022-09-28"},{"lineNumber":35,"author":{"gitId":"ytingtan"},"content":"        - Added Non-functional requirements","lastModifiedDate":"2022-09-28"},{"lineNumber":36,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":37,"author":{"gitId":"ytingtan"},"content":"* **Community**:","lastModifiedDate":"2022-09-28"},{"lineNumber":38,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":39,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":40,"author":{"gitId":"ytingtan"},"content":"* **Tools**:","lastModifiedDate":"2022-09-28"}],"authorContributionMap":{"ytingtan":40}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.logic.commands;","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.Model;","lastModifiedDate":"2022-10-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2020-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2022-01-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            + \": Edits the remark of the person identified \"","lastModifiedDate":"2021-08-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594) after you are done.","lastModifiedDate":"2022-01-02"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"emptygx"},"content":"Create a `RemarkCommandParser` class in the `seedu.clinkedin.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2022-10-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2022-01-02"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of person data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the person’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a person.","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"emptygx"},"content":"Create a new `Remark` in `seedu.clinkedin.model.person`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2022-10-15"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2022-01-02"},{"lineNumber":235,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each person.","lastModifiedDate":"2020-07-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"emptygx"},"content":"Simply add the following to [`seedu.clinkedin.ui.PersonCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2022-10-15"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2022-01-02"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    remark.setText(person.getRemark().value);","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-07-29"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2021-08-01"},{"lineNumber":348,"author":{"gitId":"-"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-08-01"},{"lineNumber":349,"author":{"gitId":"-"},"content":"                personToEdit.getAddress(), remark, personToEdit.getTags());","lastModifiedDate":"2020-07-29"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":360,"author":{"gitId":"-"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2022-01-02"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":378,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2022-01-02"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"emptygx":6,"-":395}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `address` field from `Person` class.","lastModifiedDate":"2021-08-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `address` field can be done similarly.","lastModifiedDate":"2021-08-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Let’s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"emptygx"},"content":"The `address` field in `Person` is actually an instance of the `seedu.clinkedin.model.person.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2022-10-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditPersonDescriptor` may require more careful inspection.","lastModifiedDate":"2021-08-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Let’s try removing references to `Address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"1. Safe delete the field `address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Person` class will require you to modify its constructor.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `PersonCard` that has not been removed nor identified.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"A quick look at the `PersonCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"**`PersonCard.java`**","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"**`PersonCard.fxml`**","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"**`invalidPersonAddressBook.json`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"emptygx":1,"-":111}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"![ArchitectureDiagram](../images/ArchitectureDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"emptygx"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `seedu.clinkedin.logic.Logic`.","lastModifiedDate":"2022-10-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"emptygx"},"content":"A quick look at the `seedu.clinkedin.logic.Logic` (an extract given below) confirms that this indeed might be what we’re looking for.","lastModifiedDate":"2022-10-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Let’s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `AddressBookParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-07-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2021-07-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-07-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditPersonDescriptor`. Recall that we can verify the contents of `editPersonDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"       Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"       Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"       if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"       model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"       model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-07-31"},{"lineNumber":204,"author":{"gitId":"-"},"content":"   * it uses the `setPerson()` method (defined in the interface `Model` and implemented in `ModelManager` as per the usual pattern) to update the person data.","lastModifiedDate":"2021-07-31"},{"lineNumber":205,"author":{"gitId":"-"},"content":"   * it uses the `updateFilteredPersonList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ persons.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     FYI, The \u0027filtered list\u0027 is the list of persons resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the persons so that the user can see the edited person along with all other persons. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of persons is being tracked.","lastModifiedDate":"2021-07-31"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     \u003cimg src\u003d\"../images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    \u003cimg src\u003d\"../images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-07-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** When trying to step into a statement such as `storage.saveAddressBook(model.getAddressBook())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"1.  As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonAddressBook#saveAddressBook()` method which calls the `JsonSerializableAddressBook` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2021-07-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    **`JsonSerializableAddressBook` constructor:**","lastModifiedDate":"2021-07-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        persons.addAll(","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            source.getPersonList()","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                  .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                  .map(JsonAdaptedPerson::new)","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                  .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"1. It appears that a `JsonAdaptedPerson` is created for each `Person` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    5.  Add a new field to `Person`","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"emptygx":2,"-":299}},{"path":"src/main/java/seedu/clinkedin/AppParameters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.commons.core.LogsCenter;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.commons.util.FileUtil;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents the parsed command-line parameters given to the application.","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AppParameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AppParameters.class);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Path configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path getConfigPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setConfigPath(Path configPath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.configPath \u003d configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the application command-line parameters.","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static AppParameters parse(Application.Parameters parameters) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e namedParameters \u003d parameters.getNamed();","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String configPathParameter \u003d namedParameters.get(\"config\");","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (configPathParameter !\u003d null \u0026\u0026 !FileUtil.isValidPath(configPathParameter)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            logger.warning(\"Invalid config path \" + configPathParameter + \". Using default config path.\");","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            configPathParameter \u003d null;","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        appParameters.setConfigPath(configPathParameter !\u003d null ? Paths.get(configPathParameter) : null);","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return appParameters;","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!(other instanceof AppParameters)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d (AppParameters) other;","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return Objects.equals(getConfigPath(), otherAppParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return configPath.hashCode();","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"emptygx":3,"-":61}},{"path":"src/main/java/seedu/clinkedin/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" *     Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"emptygx":1,"-":24}},{"path":"src/main/java/seedu/clinkedin/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"pratham31012002"},"content":"import javax.swing.JFrame;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"pratham31012002"},"content":"import javax.swing.JOptionPane;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.commons.core.Config;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.commons.core.LogsCenter;","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.commons.core.Version;","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.commons.util.ConfigUtil;","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.commons.util.StringUtil;","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.logic.Logic;","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.logic.LogicManager;","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.AddressBook;","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.Model;","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.ModelManager;","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-10-15"},{"lineNumber":24,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.UserPrefs;","lastModifiedDate":"2022-10-15"},{"lineNumber":26,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.util.SampleDataUtil;","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.storage.AddressBookStorage;","lastModifiedDate":"2022-10-15"},{"lineNumber":28,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.storage.JsonAddressBookStorage;","lastModifiedDate":"2022-10-15"},{"lineNumber":29,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.storage.JsonUserPrefsStorage;","lastModifiedDate":"2022-10-15"},{"lineNumber":30,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.storage.Storage;","lastModifiedDate":"2022-10-15"},{"lineNumber":31,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.storage.StorageManager;","lastModifiedDate":"2022-10-15"},{"lineNumber":32,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.storage.UserPrefsStorage;","lastModifiedDate":"2022-10-15"},{"lineNumber":33,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.ui.Ui;","lastModifiedDate":"2022-10-15"},{"lineNumber":34,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.ui.UiManager;","lastModifiedDate":"2022-10-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 0, true);","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"emptygx"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing CLInkedIn ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-10-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"emptygx"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s clinkedin book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2022-10-15"},{"lineNumber":75,"author":{"gitId":"emptygx"},"content":"     * The data from the sample clinkedin book will be used instead if {@code storage}\u0027s clinkedin book is not found,","lastModifiedDate":"2022-10-15"},{"lineNumber":76,"author":{"gitId":"emptygx"},"content":"     * or an empty clinkedin book will be used instead if errors occur when reading {@code storage}\u0027s clinkedin book.","lastModifiedDate":"2022-10-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                logger.info(\"Data file not found. Will be starting with a sample AddressBook\");","lastModifiedDate":"2016-12-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"agarwal-anjali"},"content":"            // initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2022-10-28"},{"lineNumber":87,"author":{"gitId":"agarwal-anjali"},"content":"            initialData \u003d SampleDataUtil.getSampleAddressBook();","lastModifiedDate":"2022-10-28"},{"lineNumber":88,"author":{"gitId":"pratham31012002"},"content":"            // Might want to keep.","lastModifiedDate":"2022-10-27"},{"lineNumber":89,"author":{"gitId":"pratham31012002"},"content":"            //            JFrame dialogFrame \u003d new JFrame();","lastModifiedDate":"2022-10-27"},{"lineNumber":90,"author":{"gitId":"pratham31012002"},"content":"            //            JOptionPane.showMessageDialog(dialogFrame,","lastModifiedDate":"2022-10-27"},{"lineNumber":91,"author":{"gitId":"pratham31012002"},"content":"            //                    \"Sample data being loaded as no entries found.\",","lastModifiedDate":"2022-10-27"},{"lineNumber":92,"author":{"gitId":"pratham31012002"},"content":"            //                    \"Please Note\",","lastModifiedDate":"2022-10-27"},{"lineNumber":93,"author":{"gitId":"pratham31012002"},"content":"            //                    JOptionPane.INFORMATION_MESSAGE);","lastModifiedDate":"2022-10-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"pratham31012002"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty AddressBook.\");","lastModifiedDate":"2022-10-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"pratham31012002"},"content":"            JFrame dialogFrame \u003d new JFrame();","lastModifiedDate":"2022-10-27"},{"lineNumber":98,"author":{"gitId":"pratham31012002"},"content":"            JOptionPane.showMessageDialog(dialogFrame,","lastModifiedDate":"2022-10-27"},{"lineNumber":99,"author":{"gitId":"pratham31012002"},"content":"                    \"Data file not in the correct format. Will be starting with an empty AddressBook.\",","lastModifiedDate":"2022-10-27"},{"lineNumber":100,"author":{"gitId":"pratham31012002"},"content":"                    \"Warning\",","lastModifiedDate":"2022-10-27"},{"lineNumber":101,"author":{"gitId":"pratham31012002"},"content":"                    JOptionPane.WARNING_MESSAGE);","lastModifiedDate":"2022-10-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":103,"author":{"gitId":"pratham31012002"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook.\");","lastModifiedDate":"2022-10-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"pratham31012002"},"content":"            JFrame dialogFrame \u003d new JFrame();","lastModifiedDate":"2022-10-27"},{"lineNumber":106,"author":{"gitId":"pratham31012002"},"content":"            JOptionPane.showMessageDialog(dialogFrame,","lastModifiedDate":"2022-10-27"},{"lineNumber":107,"author":{"gitId":"pratham31012002"},"content":"                    \"Problem while reading from the file. Will be starting with an empty AddressBook.\",","lastModifiedDate":"2022-10-27"},{"lineNumber":108,"author":{"gitId":"pratham31012002"},"content":"                    \"Warning\",","lastModifiedDate":"2022-10-27"},{"lineNumber":109,"author":{"gitId":"pratham31012002"},"content":"                    JOptionPane.WARNING_MESSAGE);","lastModifiedDate":"2022-10-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":169,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"emptygx"},"content":"        logger.info(\"Starting CLInkedIn \" + MainApp.VERSION);","lastModifiedDate":"2022-10-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"emptygx"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping ClinkedIn ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-10-15"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":201,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"agarwal-anjali":2,"emptygx":30,"pratham31012002":20,"-":149}},{"path":"src/main/java/seedu/clinkedin/commons/core/Config.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.commons.core;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Config values used by the app","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Config {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Path DEFAULT_CONFIG_FILE \u003d Paths.get(\"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    // Config values customizable through config file","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private Level logLevel \u003d Level.INFO;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path userPrefsFilePath \u003d Paths.get(\"preferences.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public Level getLogLevel() {","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setLogLevel(Level logLevel) {","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.logLevel \u003d logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void setUserPrefsFilePath(Path userPrefsFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!(other instanceof Config)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config o \u003d (Config) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Objects.equals(logLevel, o.logLevel)","lastModifiedDate":"2018-12-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(userPrefsFilePath, o.userPrefsFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return Objects.hash(logLevel, userPrefsFilePath);","lastModifiedDate":"2018-12-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        sb.append(\"Current log level : \" + logLevel);","lastModifiedDate":"2018-12-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        sb.append(\"\\nPreference file Location : \" + userPrefsFilePath);","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"emptygx":1,"-":62}},{"path":"src/main/java/seedu/clinkedin/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.commons.core;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_HEIGHT \u003d 600;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_WIDTH \u003d 740;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings o \u003d (GuiSettings) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d o.windowWidth","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d o.windowHeight","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, o.windowCoordinates);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        sb.append(\"Width : \" + windowWidth + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        sb.append(\"Height : \" + windowHeight + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        sb.append(\"Position : \" + windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"emptygx":1,"-":78}},{"path":"src/main/java/seedu/clinkedin/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.commons.core;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String LOG_FILE \u003d \"addressbook.log\";","lastModifiedDate":"2016-09-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static FileHandler fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static ConsoleHandler consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes with a custom log level (specified in the {@code config} object)","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Logging levels for existing loggers will only be updated if the logger with the same name","lastModifiedDate":"2016-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * is requested again from the LogsCenter.","lastModifiedDate":"2016-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.info(\"currentLogLevel: \" + currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name.","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(false);","lastModifiedDate":"2016-09-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addConsoleHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addFileHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (clazz \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return Logger.getLogger(\"\");","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates the {@code consoleHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void addConsoleHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (consoleHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            consoleHandler \u003d createConsoleHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logger.addHandler(consoleHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Remove all the handlers from {@code logger}.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Creates {@code fileHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static void addFileHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (fileHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                fileHandler \u003d createFileHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-04-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Creates a {@code FileHandler} for the log file.","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @throws IOException if there are problems opening the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private static FileHandler createFileHandler() throws IOException {","lastModifiedDate":"2016-09-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2016-09-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2016-09-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        fileHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private static ConsoleHandler createConsoleHandler() {","lastModifiedDate":"2016-09-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2016-09-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"emptygx":1,"-":111}},{"path":"src/main/java/seedu/clinkedin/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.commons.core;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"emptygx"},"content":"    public static final String MESSAGE_CANNOT_UNDO \u003d \"CLInkedIn cannot undo any further!\";","lastModifiedDate":"2022-10-24"},{"lineNumber":12,"author":{"gitId":"emptygx"},"content":"    public static final String MESSAGE_CANNOT_REDO \u003d \"CLInkedIn cannot redo any further!\";","lastModifiedDate":"2022-10-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"emptygx"},"content":"    public static final String MESSAGE_STATS_DISPLAYED_OVERVIEW \u003d \"Statistics displayed!\\n\"","lastModifiedDate":"2022-10-23"},{"lineNumber":15,"author":{"gitId":"emptygx"},"content":"            + \"Number of candidates used to calculate statistics: %1$d\\n\";","lastModifiedDate":"2022-10-28"},{"lineNumber":16,"author":{"gitId":"emptygx"},"content":"    public static final String MESSAGE_TAGS_STATS \u003d \"Average tags per person: %1$.2f\\n\"","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"emptygx"},"content":"            + \"Highest number of tags a single person has: %2$.0f\\n\"","lastModifiedDate":"2022-10-23"},{"lineNumber":18,"author":{"gitId":"emptygx"},"content":"            + \"Lowest number of tags a single person has: %3$.0f\\n\"","lastModifiedDate":"2022-10-23"},{"lineNumber":19,"author":{"gitId":"emptygx"},"content":"            + \"Total number of tags added to displayed persons: %4$.0f\";","lastModifiedDate":"2022-10-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"emptygx":9,"-":11}},{"path":"src/main/java/seedu/clinkedin/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.commons.core;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a version with major, minor and patch number","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final int major;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final int minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final int patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.major \u003d major;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public int getMajor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return major;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public int getMinor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int getPatch() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @param versionString version number string","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @return a Version object","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                versionMatcher.group(4) \u003d\u003d null ? false : true);","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (major !\u003d other.major) {","lastModifiedDate":"2018-08-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return major - other.major;","lastModifiedDate":"2018-08-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (minor !\u003d other.minor) {","lastModifiedDate":"2018-08-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return minor - other.minor;","lastModifiedDate":"2018-08-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (patch !\u003d other.patch) {","lastModifiedDate":"2018-08-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return patch - other.patch;","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2018-08-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (isEarlyAccess) {","lastModifiedDate":"2018-08-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return -1;","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return 1;","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Version)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        final Version other \u003d (Version) obj;","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return compareTo(other) \u003d\u003d 0;","lastModifiedDate":"2018-08-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"emptygx":1,"-":115}},{"path":"src/main/java/seedu/clinkedin/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.commons.core.index;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof Index // instanceof handles nulls","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 zeroBasedIndex \u003d\u003d ((Index) other).zeroBasedIndex); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"emptygx":1,"-":53}},{"path":"src/main/java/seedu/clinkedin/commons/exceptions/CannotRedoAddressBookException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.commons.exceptions;","lastModifiedDate":"2022-10-24"},{"lineNumber":2,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":3,"author":{"gitId":"emptygx"},"content":"/**","lastModifiedDate":"2022-10-24"},{"lineNumber":4,"author":{"gitId":"emptygx"},"content":" * Signals that undo operation is not possible.","lastModifiedDate":"2022-10-24"},{"lineNumber":5,"author":{"gitId":"emptygx"},"content":" */","lastModifiedDate":"2022-10-24"},{"lineNumber":6,"author":{"gitId":"emptygx"},"content":"public class CannotRedoAddressBookException extends Exception {","lastModifiedDate":"2022-10-24"},{"lineNumber":7,"author":{"gitId":"emptygx"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":8,"author":{"gitId":"emptygx"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2022-10-24"},{"lineNumber":9,"author":{"gitId":"emptygx"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":10,"author":{"gitId":"emptygx"},"content":"    public CannotRedoAddressBookException(String message) {","lastModifiedDate":"2022-10-24"},{"lineNumber":11,"author":{"gitId":"emptygx"},"content":"        super(message);","lastModifiedDate":"2022-10-24"},{"lineNumber":12,"author":{"gitId":"emptygx"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":13,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":14,"author":{"gitId":"emptygx"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":15,"author":{"gitId":"emptygx"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2022-10-24"},{"lineNumber":16,"author":{"gitId":"emptygx"},"content":"     * @param cause of the main exception","lastModifiedDate":"2022-10-24"},{"lineNumber":17,"author":{"gitId":"emptygx"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":18,"author":{"gitId":"emptygx"},"content":"    public CannotRedoAddressBookException(String message, Throwable cause) {","lastModifiedDate":"2022-10-24"},{"lineNumber":19,"author":{"gitId":"emptygx"},"content":"        super(message, cause);","lastModifiedDate":"2022-10-24"},{"lineNumber":20,"author":{"gitId":"emptygx"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":21,"author":{"gitId":"emptygx"},"content":"}","lastModifiedDate":"2022-10-24"}],"authorContributionMap":{"emptygx":21}},{"path":"src/main/java/seedu/clinkedin/commons/exceptions/CannotUndoAddressBookException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.commons.exceptions;","lastModifiedDate":"2022-10-24"},{"lineNumber":2,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":3,"author":{"gitId":"emptygx"},"content":"/**","lastModifiedDate":"2022-10-24"},{"lineNumber":4,"author":{"gitId":"emptygx"},"content":" * Signals that undo operation is not possible.","lastModifiedDate":"2022-10-24"},{"lineNumber":5,"author":{"gitId":"emptygx"},"content":" */","lastModifiedDate":"2022-10-24"},{"lineNumber":6,"author":{"gitId":"emptygx"},"content":"public class CannotUndoAddressBookException extends Exception {","lastModifiedDate":"2022-10-24"},{"lineNumber":7,"author":{"gitId":"emptygx"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":8,"author":{"gitId":"emptygx"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2022-10-24"},{"lineNumber":9,"author":{"gitId":"emptygx"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":10,"author":{"gitId":"emptygx"},"content":"    public CannotUndoAddressBookException(String message) {","lastModifiedDate":"2022-10-24"},{"lineNumber":11,"author":{"gitId":"emptygx"},"content":"        super(message);","lastModifiedDate":"2022-10-24"},{"lineNumber":12,"author":{"gitId":"emptygx"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":13,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":14,"author":{"gitId":"emptygx"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":15,"author":{"gitId":"emptygx"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2022-10-24"},{"lineNumber":16,"author":{"gitId":"emptygx"},"content":"     * @param cause of the main exception","lastModifiedDate":"2022-10-24"},{"lineNumber":17,"author":{"gitId":"emptygx"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":18,"author":{"gitId":"emptygx"},"content":"    public CannotUndoAddressBookException(String message, Throwable cause) {","lastModifiedDate":"2022-10-24"},{"lineNumber":19,"author":{"gitId":"emptygx"},"content":"        super(message, cause);","lastModifiedDate":"2022-10-24"},{"lineNumber":20,"author":{"gitId":"emptygx"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":21,"author":{"gitId":"emptygx"},"content":"}","lastModifiedDate":"2022-10-24"}],"authorContributionMap":{"emptygx":21}},{"path":"src/main/java/seedu/clinkedin/commons/exceptions/DataConversionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.commons.exceptions;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error during conversion of data from one format to another","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class DataConversionException extends Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public DataConversionException(Exception cause) {","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(cause);","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"emptygx":1,"-":10}},{"path":"src/main/java/seedu/clinkedin/commons/exceptions/EmptyFileException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pratham31012002"},"content":"package seedu.clinkedin.commons.exceptions;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":3,"author":{"gitId":"pratham31012002"},"content":"/**","lastModifiedDate":"2022-10-26"},{"lineNumber":4,"author":{"gitId":"pratham31012002"},"content":" * Signals that file is empty.","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"pratham31012002"},"content":" */","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"pratham31012002"},"content":"public class EmptyFileException extends Exception {","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"pratham31012002"},"content":"    public EmptyFileException(String message) {","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"pratham31012002"},"content":"        super(message);","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"pratham31012002"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"pratham31012002"},"content":"}","lastModifiedDate":"2022-10-26"}],"authorContributionMap":{"pratham31012002":10}},{"path":"src/main/java/seedu/clinkedin/commons/exceptions/IllegalValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.commons.exceptions;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that some given data does not fulfill some constraints.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class IllegalValueException extends Exception {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @param cause of the main exception","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"emptygx":1,"-":20}},{"path":"src/main/java/seedu/clinkedin/commons/util/AppUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.commons.util;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.MainApp;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A container for App specific utility functions","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AppUtil {","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Gets an {@code Image} from the specified path.","lastModifiedDate":"2020-05-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(imagePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"pratham31012002"},"content":"    public static void checkArgument(Boolean condition) throws IllegalArgumentException {","lastModifiedDate":"2022-10-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException with {@code errorMessage} if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"pratham31012002"},"content":"    public static void checkArgument(Boolean condition, String errorMessage) throws IllegalArgumentException {","lastModifiedDate":"2022-10-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"emptygx":2,"pratham31012002":2,"-":38}},{"path":"src/main/java/seedu/clinkedin/commons/util/CollectionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.commons.util;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-06-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2016-12-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Utility methods related to Collections","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CollectionUtil {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** @see #requireAllNonNull(Collection) */","lastModifiedDate":"2017-05-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Object... items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Stream.of(items).forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Throws NullPointerException if {@code items} or any element of {@code items} is null.","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Collection\u003c?\u003e items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        items.forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if {@code items} contain any elements that are non-null.","lastModifiedDate":"2017-06-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isAnyNonNull(Object... items) {","lastModifiedDate":"2017-06-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);","lastModifiedDate":"2017-06-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"emptygx":1,"-":34}},{"path":"src/main/java/seedu/clinkedin/commons/util/ConfigUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.commons.util;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.commons.core.Config;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A class for accessing the Config File.","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ConfigUtil {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static Optional\u003cConfig\u003e readConfig(Path configFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(configFilePath, Config.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static void saveConfig(Config config, Path configFilePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(config, configFilePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"emptygx":3,"-":20}},{"path":"src/main/java/seedu/clinkedin/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.commons.util;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"pratham31012002"},"content":"import java.io.File;","lastModifiedDate":"2022-10-24"},{"lineNumber":4,"author":{"gitId":"pratham31012002"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"pratham31012002"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2022-10-24"},{"lineNumber":6,"author":{"gitId":"pratham31012002"},"content":"import java.io.FileReader;","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"pratham31012002"},"content":"import java.io.OutputStreamWriter;","lastModifiedDate":"2022-10-24"},{"lineNumber":9,"author":{"gitId":"pratham31012002"},"content":"import java.nio.charset.StandardCharsets;","lastModifiedDate":"2022-10-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"pratham31012002"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"pratham31012002"},"content":"import java.util.List;","lastModifiedDate":"2022-10-24"},{"lineNumber":16,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":17,"author":{"gitId":"pratham31012002"},"content":"import com.opencsv.CSVReader;","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"pratham31012002"},"content":"import com.opencsv.CSVWriter;","lastModifiedDate":"2022-10-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"pratham31012002"},"content":"import seedu.clinkedin.commons.exceptions.EmptyFileException;","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"pratham31012002"},"content":"    private static final String UTF8_BOM \u003d \"\\uFEFF\"; // the UTF-8 byte order mark (BOM)","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"pratham31012002"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@code Paths#get(String)},","lastModifiedDate":"2022-10-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"pratham31012002"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":98,"author":{"gitId":"pratham31012002"},"content":"     * Exports data to file path.","lastModifiedDate":"2022-10-24"},{"lineNumber":99,"author":{"gitId":"pratham31012002"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":100,"author":{"gitId":"pratham31012002"},"content":"    public static void exportToCsvFile(String filePath, List\u003cString[]\u003e data) throws IOException {","lastModifiedDate":"2022-10-24"},{"lineNumber":101,"author":{"gitId":"pratham31012002"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2022-10-24"},{"lineNumber":102,"author":{"gitId":"pratham31012002"},"content":"        if (file.getParentFile() !\u003d null) {","lastModifiedDate":"2022-10-24"},{"lineNumber":103,"author":{"gitId":"pratham31012002"},"content":"            file.getParentFile().mkdirs();","lastModifiedDate":"2022-10-24"},{"lineNumber":104,"author":{"gitId":"pratham31012002"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":105,"author":{"gitId":"pratham31012002"},"content":"        file.createNewFile();","lastModifiedDate":"2022-10-24"},{"lineNumber":106,"author":{"gitId":"pratham31012002"},"content":"        FileOutputStream outputStream \u003d new FileOutputStream(file, false);","lastModifiedDate":"2022-10-24"},{"lineNumber":107,"author":{"gitId":"pratham31012002"},"content":"        CSVWriter writer \u003d new CSVWriter(new OutputStreamWriter(outputStream, StandardCharsets.UTF_8));","lastModifiedDate":"2022-10-24"},{"lineNumber":108,"author":{"gitId":"pratham31012002"},"content":"        outputStream.write(0xef);","lastModifiedDate":"2022-10-24"},{"lineNumber":109,"author":{"gitId":"pratham31012002"},"content":"        outputStream.write(0xbb);","lastModifiedDate":"2022-10-24"},{"lineNumber":110,"author":{"gitId":"pratham31012002"},"content":"        outputStream.write(0xbf);","lastModifiedDate":"2022-10-24"},{"lineNumber":111,"author":{"gitId":"pratham31012002"},"content":"        writer.writeAll(data);","lastModifiedDate":"2022-10-24"},{"lineNumber":112,"author":{"gitId":"pratham31012002"},"content":"        writer.close();","lastModifiedDate":"2022-10-24"},{"lineNumber":113,"author":{"gitId":"pratham31012002"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":114,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":115,"author":{"gitId":"pratham31012002"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":116,"author":{"gitId":"pratham31012002"},"content":"     * Imports data from file path.","lastModifiedDate":"2022-10-26"},{"lineNumber":117,"author":{"gitId":"pratham31012002"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":118,"author":{"gitId":"pratham31012002"},"content":"    public static ArrayList\u003cArrayList\u003cString[]\u003e\u003e importFromCsvFile(String filePath) throws IOException,","lastModifiedDate":"2022-10-26"},{"lineNumber":119,"author":{"gitId":"pratham31012002"},"content":"            EmptyFileException {","lastModifiedDate":"2022-10-26"},{"lineNumber":120,"author":{"gitId":"pratham31012002"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2022-10-26"},{"lineNumber":121,"author":{"gitId":"pratham31012002"},"content":"        if (!file.exists() || file.isDirectory()) {","lastModifiedDate":"2022-10-26"},{"lineNumber":122,"author":{"gitId":"pratham31012002"},"content":"            throw new FileNotFoundException(\"File couldn\u0027t be found!\");","lastModifiedDate":"2022-10-26"},{"lineNumber":123,"author":{"gitId":"pratham31012002"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":124,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":125,"author":{"gitId":"pratham31012002"},"content":"        FileReader filereader \u003d new FileReader(file);","lastModifiedDate":"2022-10-26"},{"lineNumber":126,"author":{"gitId":"pratham31012002"},"content":"        CSVReader reader \u003d new CSVReader(filereader);","lastModifiedDate":"2022-10-26"},{"lineNumber":127,"author":{"gitId":"pratham31012002"},"content":"        ArrayList\u003cArrayList\u003cString[]\u003e\u003e data \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-26"},{"lineNumber":128,"author":{"gitId":"pratham31012002"},"content":"        ArrayList\u003cString[]\u003e person \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-26"},{"lineNumber":129,"author":{"gitId":"pratham31012002"},"content":"        String[] line;","lastModifiedDate":"2022-10-26"},{"lineNumber":130,"author":{"gitId":"pratham31012002"},"content":"        line \u003d reader.readNext();","lastModifiedDate":"2022-10-26"},{"lineNumber":131,"author":{"gitId":"pratham31012002"},"content":"        if (line \u003d\u003d null) {","lastModifiedDate":"2022-10-26"},{"lineNumber":132,"author":{"gitId":"pratham31012002"},"content":"            throw new EmptyFileException(\"File is empty!\");","lastModifiedDate":"2022-10-26"},{"lineNumber":133,"author":{"gitId":"pratham31012002"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":134,"author":{"gitId":"pratham31012002"},"content":"        if (line.length \u003e 0 \u0026\u0026 line[0].startsWith(UTF8_BOM)) {","lastModifiedDate":"2022-10-26"},{"lineNumber":135,"author":{"gitId":"pratham31012002"},"content":"            line[0] \u003d line[0].substring(1);","lastModifiedDate":"2022-10-26"},{"lineNumber":136,"author":{"gitId":"pratham31012002"},"content":"            person.add(line);","lastModifiedDate":"2022-10-26"},{"lineNumber":137,"author":{"gitId":"pratham31012002"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":138,"author":{"gitId":"pratham31012002"},"content":"        while ((line \u003d reader.readNext()) !\u003d null) {","lastModifiedDate":"2022-10-26"},{"lineNumber":139,"author":{"gitId":"pratham31012002"},"content":"            if (line.length \u003d\u003d 0 || line[0].isBlank()) {","lastModifiedDate":"2022-10-26"},{"lineNumber":140,"author":{"gitId":"pratham31012002"},"content":"                data.add(person);","lastModifiedDate":"2022-10-26"},{"lineNumber":141,"author":{"gitId":"pratham31012002"},"content":"                person \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-26"},{"lineNumber":142,"author":{"gitId":"pratham31012002"},"content":"            } else {","lastModifiedDate":"2022-10-26"},{"lineNumber":143,"author":{"gitId":"pratham31012002"},"content":"                person.add(line);","lastModifiedDate":"2022-10-26"},{"lineNumber":144,"author":{"gitId":"pratham31012002"},"content":"            }","lastModifiedDate":"2022-10-26"},{"lineNumber":145,"author":{"gitId":"pratham31012002"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":146,"author":{"gitId":"pratham31012002"},"content":"        return data;","lastModifiedDate":"2022-10-26"},{"lineNumber":147,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":148,"author":{"gitId":"pratham31012002"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":149,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"emptygx":1,"pratham31012002":68,"-":81}},{"path":"src/main/java/seedu/clinkedin/commons/util/ImageUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"agarwal-anjali"},"content":"package seedu.clinkedin.commons.util;","lastModifiedDate":"2022-10-24"},{"lineNumber":2,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":3,"author":{"gitId":"agarwal-anjali"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-10-24"},{"lineNumber":4,"author":{"gitId":"agarwal-anjali"},"content":"import seedu.clinkedin.MainApp;","lastModifiedDate":"2022-10-24"},{"lineNumber":5,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":6,"author":{"gitId":"agarwal-anjali"},"content":"/**","lastModifiedDate":"2022-10-24"},{"lineNumber":7,"author":{"gitId":"agarwal-anjali"},"content":" * Retrieves Image file","lastModifiedDate":"2022-10-24"},{"lineNumber":8,"author":{"gitId":"agarwal-anjali"},"content":" */","lastModifiedDate":"2022-10-24"},{"lineNumber":9,"author":{"gitId":"agarwal-anjali"},"content":"public class ImageUtil {","lastModifiedDate":"2022-10-24"},{"lineNumber":10,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":11,"author":{"gitId":"agarwal-anjali"},"content":"    private static final String IMAGE_RESOURCE_PATH \u003d \"/images/\";","lastModifiedDate":"2022-10-24"},{"lineNumber":12,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":13,"author":{"gitId":"agarwal-anjali"},"content":"    private static Image getImage(String imagePath) {","lastModifiedDate":"2022-10-24"},{"lineNumber":14,"author":{"gitId":"agarwal-anjali"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2022-10-24"},{"lineNumber":15,"author":{"gitId":"agarwal-anjali"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":16,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":17,"author":{"gitId":"ytingtan"},"content":"    public static Image getStar(String starType) {","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"ytingtan"},"content":"        String imageFile;","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"ytingtan"},"content":"        if (starType.equals(\"emptystar\")) {","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"ytingtan"},"content":"            imageFile \u003d \"emptystar.png\";","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"ytingtan"},"content":"        } else if (starType.equals(\"halfstar\")) {","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"ytingtan"},"content":"            imageFile \u003d \"halfstar.png\";","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"ytingtan"},"content":"        } else {","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"ytingtan"},"content":"            imageFile \u003d \"fullstar.png\";","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"ytingtan"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"ytingtan"},"content":"        return getImage(IMAGE_RESOURCE_PATH + \"rating/\" + imageFile);","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"ytingtan"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"agarwal-anjali"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":29,"author":{"gitId":"agarwal-anjali"},"content":"     * Returns a social platform icon given a platform.","lastModifiedDate":"2022-10-24"},{"lineNumber":30,"author":{"gitId":"agarwal-anjali"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":31,"author":{"gitId":"agarwal-anjali"},"content":"    public static Image getSocialIcon(String platform) {","lastModifiedDate":"2022-10-24"},{"lineNumber":32,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":33,"author":{"gitId":"agarwal-anjali"},"content":"        String imageFile;","lastModifiedDate":"2022-10-24"},{"lineNumber":34,"author":{"gitId":"agarwal-anjali"},"content":"        switch (platform) {","lastModifiedDate":"2022-10-24"},{"lineNumber":35,"author":{"gitId":"agarwal-anjali"},"content":"        case \"instagram\":","lastModifiedDate":"2022-10-24"},{"lineNumber":36,"author":{"gitId":"agarwal-anjali"},"content":"            imageFile \u003d \"instagram.png\";","lastModifiedDate":"2022-10-24"},{"lineNumber":37,"author":{"gitId":"agarwal-anjali"},"content":"            break;","lastModifiedDate":"2022-10-24"},{"lineNumber":38,"author":{"gitId":"agarwal-anjali"},"content":"        case \"telegram\":","lastModifiedDate":"2022-10-24"},{"lineNumber":39,"author":{"gitId":"agarwal-anjali"},"content":"            imageFile \u003d \"telegram.png\";","lastModifiedDate":"2022-10-24"},{"lineNumber":40,"author":{"gitId":"agarwal-anjali"},"content":"            break;","lastModifiedDate":"2022-10-24"},{"lineNumber":41,"author":{"gitId":"agarwal-anjali"},"content":"        case \"facebook\":","lastModifiedDate":"2022-10-24"},{"lineNumber":42,"author":{"gitId":"agarwal-anjali"},"content":"            imageFile \u003d \"facebook.png\";","lastModifiedDate":"2022-10-24"},{"lineNumber":43,"author":{"gitId":"agarwal-anjali"},"content":"            break;","lastModifiedDate":"2022-10-24"},{"lineNumber":44,"author":{"gitId":"agarwal-anjali"},"content":"        case \"github\":","lastModifiedDate":"2022-10-24"},{"lineNumber":45,"author":{"gitId":"agarwal-anjali"},"content":"            imageFile \u003d \"github.png\";","lastModifiedDate":"2022-10-24"},{"lineNumber":46,"author":{"gitId":"agarwal-anjali"},"content":"            break;","lastModifiedDate":"2022-10-24"},{"lineNumber":47,"author":{"gitId":"agarwal-anjali"},"content":"        case \"discord\":","lastModifiedDate":"2022-10-24"},{"lineNumber":48,"author":{"gitId":"agarwal-anjali"},"content":"            imageFile \u003d \"discord.png\";","lastModifiedDate":"2022-10-24"},{"lineNumber":49,"author":{"gitId":"agarwal-anjali"},"content":"            break;","lastModifiedDate":"2022-10-24"},{"lineNumber":50,"author":{"gitId":"agarwal-anjali"},"content":"        case \"linkedin\":","lastModifiedDate":"2022-10-24"},{"lineNumber":51,"author":{"gitId":"agarwal-anjali"},"content":"            imageFile \u003d \"linkedin.png\";","lastModifiedDate":"2022-10-24"},{"lineNumber":52,"author":{"gitId":"agarwal-anjali"},"content":"            break;","lastModifiedDate":"2022-10-24"},{"lineNumber":53,"author":{"gitId":"agarwal-anjali"},"content":"        case \"snapchat\":","lastModifiedDate":"2022-10-24"},{"lineNumber":54,"author":{"gitId":"agarwal-anjali"},"content":"            imageFile \u003d \"snapchat.png\";","lastModifiedDate":"2022-10-24"},{"lineNumber":55,"author":{"gitId":"agarwal-anjali"},"content":"            break;","lastModifiedDate":"2022-10-24"},{"lineNumber":56,"author":{"gitId":"agarwal-anjali"},"content":"        case \"twitter\":","lastModifiedDate":"2022-10-24"},{"lineNumber":57,"author":{"gitId":"agarwal-anjali"},"content":"            imageFile \u003d \"twitter.png\";","lastModifiedDate":"2022-10-24"},{"lineNumber":58,"author":{"gitId":"agarwal-anjali"},"content":"            break;","lastModifiedDate":"2022-10-24"},{"lineNumber":59,"author":{"gitId":"agarwal-anjali"},"content":"        case \"general\":","lastModifiedDate":"2022-10-24"},{"lineNumber":60,"author":{"gitId":"agarwal-anjali"},"content":"            imageFile \u003d \"general.png\";","lastModifiedDate":"2022-10-24"},{"lineNumber":61,"author":{"gitId":"agarwal-anjali"},"content":"            break;","lastModifiedDate":"2022-10-24"},{"lineNumber":62,"author":{"gitId":"agarwal-anjali"},"content":"        default:","lastModifiedDate":"2022-10-24"},{"lineNumber":63,"author":{"gitId":"agarwal-anjali"},"content":"            return null;","lastModifiedDate":"2022-10-24"},{"lineNumber":64,"author":{"gitId":"agarwal-anjali"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":65,"author":{"gitId":"agarwal-anjali"},"content":"        return getImage(IMAGE_RESOURCE_PATH + \"links/\" + imageFile);","lastModifiedDate":"2022-10-24"},{"lineNumber":66,"author":{"gitId":"agarwal-anjali"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":67,"author":{"gitId":"agarwal-anjali"},"content":"}","lastModifiedDate":"2022-10-24"}],"authorContributionMap":{"agarwal-anjali":56,"ytingtan":11}},{"path":"src/main/java/seedu/clinkedin/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.commons.util;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.commons.core.LogsCenter;","lastModifiedDate":"2022-10-15"},{"lineNumber":24,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class JsonUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    .addDeserializer(Level.class, new LevelDeserializer(Level.class)));","lastModifiedDate":"2016-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);","lastModifiedDate":"2016-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the Json object from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2016-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * If any values are missing from the file, default values will be used, as long as the file is a valid json file.","lastModifiedDate":"2016-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null.","lastModifiedDate":"2016-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param classOfObjectToDeserialize Json file has to correspond to the structure in the class given here.","lastModifiedDate":"2016-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile(","lastModifiedDate":"2016-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            logger.info(\"Json file \" + filePath + \" not found\");","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2016-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        T jsonFile;","lastModifiedDate":"2016-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2018-04-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new DataConversionException(e);","lastModifiedDate":"2016-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2016-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Saves the Json object to the specified file.","lastModifiedDate":"2016-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2016-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @param jsonFile cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2016-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2017-05-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        serializeObjectToJsonFile(filePath, jsonFile);","lastModifiedDate":"2018-04-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Converts a given string representation of a JSON data to instance of a class","lastModifiedDate":"2016-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @return The instance of T with the specified values in the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2016-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2016-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Converts a given instance of a class into its JSON data string representation","lastModifiedDate":"2016-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param instance The T object to be converted into the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @return JSON data representation of the given class instance, in string","lastModifiedDate":"2016-10-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2016-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2016-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            super(vc);","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"         * Gets the logging level that matches loggingLevelString","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"         * \u003cp\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2016-09-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            return Level.class;","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"emptygx":3,"-":140}},{"path":"src/main/java/seedu/clinkedin/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.commons.util;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"emptygx"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":42,"author":{"gitId":"emptygx"},"content":"     * Returns true if the {@code sentence} contains the {@code sequence}.","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"emptygx"},"content":"     *   Ignores case and full word match not required.","lastModifiedDate":"2022-10-06"},{"lineNumber":44,"author":{"gitId":"emptygx"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":45,"author":{"gitId":"emptygx"},"content":"     *       containsSequenceIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"emptygx"},"content":"     *       containsSequenceIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"emptygx"},"content":"     *       containsSequenceIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d true //not a full word match","lastModifiedDate":"2022-10-13"},{"lineNumber":48,"author":{"gitId":"emptygx"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":49,"author":{"gitId":"emptygx"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"emptygx"},"content":"     * @param sequence cannot be null, cannot be empty, can be multiple words","lastModifiedDate":"2022-10-13"},{"lineNumber":51,"author":{"gitId":"emptygx"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"emptygx"},"content":"    public static boolean containsSequenceIgnoreCase(String sentence, String sequence) {","lastModifiedDate":"2022-10-13"},{"lineNumber":53,"author":{"gitId":"emptygx"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2022-10-13"},{"lineNumber":54,"author":{"gitId":"emptygx"},"content":"        requireNonNull(sequence);","lastModifiedDate":"2022-10-13"},{"lineNumber":55,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":56,"author":{"gitId":"emptygx"},"content":"        String preppedSequence \u003d sequence.trim();","lastModifiedDate":"2022-10-13"},{"lineNumber":57,"author":{"gitId":"emptygx"},"content":"        checkArgument(!preppedSequence.isEmpty(), \"Sequence parameter cannot be empty\");","lastModifiedDate":"2022-10-13"},{"lineNumber":58,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":59,"author":{"gitId":"emptygx"},"content":"        String preppedSentence \u003d sentence.toLowerCase();","lastModifiedDate":"2022-10-13"},{"lineNumber":60,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":61,"author":{"gitId":"emptygx"},"content":"        return preppedSentence.contains(preppedSequence.toLowerCase());","lastModifiedDate":"2022-10-13"},{"lineNumber":62,"author":{"gitId":"emptygx"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":63,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":64,"author":{"gitId":"emptygx"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":65,"author":{"gitId":"emptygx"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2022-10-13"},{"lineNumber":66,"author":{"gitId":"emptygx"},"content":"     *   Ignores case and full word match is not required.","lastModifiedDate":"2022-10-13"},{"lineNumber":67,"author":{"gitId":"emptygx"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":68,"author":{"gitId":"emptygx"},"content":"     *       containsPartialWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2022-10-13"},{"lineNumber":69,"author":{"gitId":"emptygx"},"content":"     *       containsPartialWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2022-10-13"},{"lineNumber":70,"author":{"gitId":"emptygx"},"content":"     *       containsPartialWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d true //not a full word match","lastModifiedDate":"2022-10-13"},{"lineNumber":71,"author":{"gitId":"emptygx"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":72,"author":{"gitId":"emptygx"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2022-10-06"},{"lineNumber":73,"author":{"gitId":"emptygx"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2022-10-06"},{"lineNumber":74,"author":{"gitId":"emptygx"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":75,"author":{"gitId":"emptygx"},"content":"    public static boolean containsPartialWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2022-10-13"},{"lineNumber":76,"author":{"gitId":"emptygx"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2022-10-06"},{"lineNumber":77,"author":{"gitId":"emptygx"},"content":"        requireNonNull(word);","lastModifiedDate":"2022-10-06"},{"lineNumber":78,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":79,"author":{"gitId":"emptygx"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2022-10-06"},{"lineNumber":80,"author":{"gitId":"emptygx"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2022-10-06"},{"lineNumber":81,"author":{"gitId":"emptygx"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2022-10-06"},{"lineNumber":82,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":83,"author":{"gitId":"emptygx"},"content":"        String preppedSentence \u003d sentence.toLowerCase();","lastModifiedDate":"2022-10-06"},{"lineNumber":84,"author":{"gitId":"emptygx"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2022-10-06"},{"lineNumber":85,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":86,"author":{"gitId":"emptygx"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2022-10-06"},{"lineNumber":87,"author":{"gitId":"emptygx"},"content":"                .anyMatch(w -\u003e w.contains(preppedWord.toLowerCase()));","lastModifiedDate":"2022-10-13"},{"lineNumber":88,"author":{"gitId":"emptygx"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":89,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"emptygx":51,"-":66}},{"path":"src/main/java/seedu/clinkedin/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.logic;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.commons.core.GuiSettings;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"josephaedan"},"content":"import seedu.clinkedin.logic.commands.Command;","lastModifiedDate":"2022-10-28"},{"lineNumber":8,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.logic.commands.CommandResult;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.Person;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"josephaedan"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":28,"author":{"gitId":"josephaedan"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2022-10-28"},{"lineNumber":29,"author":{"gitId":"josephaedan"},"content":"     * @param command The command to be executed.","lastModifiedDate":"2022-10-28"},{"lineNumber":30,"author":{"gitId":"josephaedan"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2022-10-28"},{"lineNumber":31,"author":{"gitId":"josephaedan"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2022-10-28"},{"lineNumber":32,"author":{"gitId":"josephaedan"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":33,"author":{"gitId":"josephaedan"},"content":"    CommandResult execute(Command command) throws CommandException;","lastModifiedDate":"2022-10-28"},{"lineNumber":34,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":38,"author":{"gitId":"emptygx"},"content":"     * @see seedu.clinkedin.model.Model#getAddressBook()","lastModifiedDate":"2022-10-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":45,"author":{"gitId":"josephaedan"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":46,"author":{"gitId":"josephaedan"},"content":"     * Returns the size of the filtered person list","lastModifiedDate":"2022-10-08"},{"lineNumber":47,"author":{"gitId":"josephaedan"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":48,"author":{"gitId":"josephaedan"},"content":"    int getFilteredPersonListSize();","lastModifiedDate":"2022-10-08"},{"lineNumber":49,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":50,"author":{"gitId":"ytingtan"},"content":"    // /**","lastModifiedDate":"2022-10-28"},{"lineNumber":51,"author":{"gitId":"ytingtan"},"content":"    // * Returns an unmodifiable view of the sorted list of persons based on rating.","lastModifiedDate":"2022-10-28"},{"lineNumber":52,"author":{"gitId":"ytingtan"},"content":"    // */","lastModifiedDate":"2022-10-28"},{"lineNumber":53,"author":{"gitId":"ytingtan"},"content":"    // ObservableList\u003cPerson\u003e getSortedPersonList();","lastModifiedDate":"2022-10-28"},{"lineNumber":54,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2022-10-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"ytingtan":5,"emptygx":8,"josephaedan":14,"-":42}},{"path":"src/main/java/seedu/clinkedin/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.logic;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.commons.core.GuiSettings;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.commons.core.LogsCenter;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.logic.commands.Command;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.logic.commands.CommandResult;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.logic.parser.AddressBookParser;","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.Model;","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.Person;","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.storage.Storage;","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"josephaedan"},"content":"    @Override","lastModifiedDate":"2022-10-28"},{"lineNumber":58,"author":{"gitId":"josephaedan"},"content":"    public CommandResult execute(Command command) throws CommandException {","lastModifiedDate":"2022-10-28"},{"lineNumber":59,"author":{"gitId":"josephaedan"},"content":"        logger.info(\"----------------[USER COMMAND][\" + command + \"]\");","lastModifiedDate":"2022-10-28"},{"lineNumber":60,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":61,"author":{"gitId":"josephaedan"},"content":"        CommandResult commandResult;","lastModifiedDate":"2022-10-28"},{"lineNumber":62,"author":{"gitId":"josephaedan"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2022-10-28"},{"lineNumber":63,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":83,"author":{"gitId":"josephaedan"},"content":"    @Override","lastModifiedDate":"2022-10-08"},{"lineNumber":84,"author":{"gitId":"josephaedan"},"content":"    public int getFilteredPersonListSize() {","lastModifiedDate":"2022-10-08"},{"lineNumber":85,"author":{"gitId":"josephaedan"},"content":"        return model.getFilteredNumberOfPersons();","lastModifiedDate":"2022-10-08"},{"lineNumber":86,"author":{"gitId":"josephaedan"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":87,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":88,"author":{"gitId":"ytingtan"},"content":"    // @Override","lastModifiedDate":"2022-10-28"},{"lineNumber":89,"author":{"gitId":"ytingtan"},"content":"    // public ObservableList\u003cPerson\u003e getSortedPersonList() {","lastModifiedDate":"2022-10-28"},{"lineNumber":90,"author":{"gitId":"ytingtan"},"content":"    //    return model.getSortedPersonList();","lastModifiedDate":"2022-10-28"},{"lineNumber":91,"author":{"gitId":"ytingtan"},"content":"    //}","lastModifiedDate":"2022-10-28"},{"lineNumber":92,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"ytingtan":5,"emptygx":12,"josephaedan":12,"-":78}},{"path":"src/main/java/seedu/clinkedin/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.logic.commands;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.parser.CliSyntax.PREFIX_NOTE;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"ytingtan"},"content":"import static seedu.clinkedin.logic.parser.CliSyntax.PREFIX_RATING;","lastModifiedDate":"2022-10-17"},{"lineNumber":10,"author":{"gitId":"ytingtan"},"content":"import static seedu.clinkedin.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2022-10-17"},{"lineNumber":11,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.Model;","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.Person;","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2022-10-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"ytingtan"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book.\\n\"","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":30,"author":{"gitId":"ytingtan"},"content":"            + \"[\" + PREFIX_TAG + \"TAG] \"","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"ytingtan"},"content":"            + PREFIX_STATUS + \"STATUS\"","lastModifiedDate":"2022-10-17"},{"lineNumber":32,"author":{"gitId":"ytingtan"},"content":"            + \"[\" + PREFIX_NOTE + \"NOTE]\"","lastModifiedDate":"2022-10-17"},{"lineNumber":33,"author":{"gitId":"ytingtan"},"content":"            + \"[\" + PREFIX_RATING + \"RATING]...\\n\"","lastModifiedDate":"2022-10-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"ytingtan"},"content":"            + PREFIX_TAG + \"owesMoney \"","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"josephaedan"},"content":"            + PREFIX_STATUS + \"Application Pending \"","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"ytingtan"},"content":"            + PREFIX_NOTE + \"Has a dog.\"","lastModifiedDate":"2022-10-17"},{"lineNumber":43,"author":{"gitId":"ytingtan"},"content":"            + PREFIX_RATING + \"4\";","lastModifiedDate":"2022-10-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2022-10-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ytingtan":10,"emptygx":10,"josephaedan":1,"-":55}},{"path":"src/main/java/seedu/clinkedin/logic/commands/AddLinkCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"agarwal-anjali"},"content":"package seedu.clinkedin.logic.commands;","lastModifiedDate":"2022-10-28"},{"lineNumber":2,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":3,"author":{"gitId":"agarwal-anjali"},"content":"import static seedu.clinkedin.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-28"},{"lineNumber":4,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":5,"author":{"gitId":"agarwal-anjali"},"content":"import java.util.List;","lastModifiedDate":"2022-10-28"},{"lineNumber":6,"author":{"gitId":"agarwal-anjali"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-28"},{"lineNumber":7,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":8,"author":{"gitId":"agarwal-anjali"},"content":"import seedu.clinkedin.commons.core.Messages;","lastModifiedDate":"2022-10-28"},{"lineNumber":9,"author":{"gitId":"agarwal-anjali"},"content":"import seedu.clinkedin.commons.core.index.Index;","lastModifiedDate":"2022-10-28"},{"lineNumber":10,"author":{"gitId":"agarwal-anjali"},"content":"import seedu.clinkedin.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-28"},{"lineNumber":11,"author":{"gitId":"agarwal-anjali"},"content":"import seedu.clinkedin.model.Model;","lastModifiedDate":"2022-10-28"},{"lineNumber":12,"author":{"gitId":"agarwal-anjali"},"content":"import seedu.clinkedin.model.link.Link;","lastModifiedDate":"2022-10-28"},{"lineNumber":13,"author":{"gitId":"agarwal-anjali"},"content":"import seedu.clinkedin.model.person.Person;","lastModifiedDate":"2022-10-28"},{"lineNumber":14,"author":{"gitId":"agarwal-anjali"},"content":"import seedu.clinkedin.model.person.UniqueTagTypeMap;","lastModifiedDate":"2022-10-28"},{"lineNumber":15,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":16,"author":{"gitId":"agarwal-anjali"},"content":"/**","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"agarwal-anjali"},"content":" * Adds new links to an existing person in the address book.","lastModifiedDate":"2022-10-28"},{"lineNumber":18,"author":{"gitId":"agarwal-anjali"},"content":" */","lastModifiedDate":"2022-10-28"},{"lineNumber":19,"author":{"gitId":"agarwal-anjali"},"content":"public class AddLinkCommand extends Command {","lastModifiedDate":"2022-10-28"},{"lineNumber":20,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":21,"author":{"gitId":"agarwal-anjali"},"content":"    public static final String COMMAND_WORD \u003d \"addlink\";","lastModifiedDate":"2022-10-28"},{"lineNumber":22,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":23,"author":{"gitId":"agarwal-anjali"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-28"},{"lineNumber":24,"author":{"gitId":"agarwal-anjali"},"content":"            + \": Adds links to the person identified\"","lastModifiedDate":"2022-10-28"},{"lineNumber":25,"author":{"gitId":"agarwal-anjali"},"content":"            + \"by the index number in the address book.\\n\"","lastModifiedDate":"2022-10-28"},{"lineNumber":26,"author":{"gitId":"agarwal-anjali"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2022-10-28"},{"lineNumber":27,"author":{"gitId":"agarwal-anjali"},"content":"            + \"addLink INDEX l/LINK\\n\\n\"","lastModifiedDate":"2022-10-28"},{"lineNumber":28,"author":{"gitId":"agarwal-anjali"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2022-10-28"},{"lineNumber":29,"author":{"gitId":"agarwal-anjali"},"content":"            + \"l/https://www.instagram.com\"","lastModifiedDate":"2022-10-28"},{"lineNumber":30,"author":{"gitId":"agarwal-anjali"},"content":"            + \"l/https://github.com\";","lastModifiedDate":"2022-10-28"},{"lineNumber":31,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":32,"author":{"gitId":"agarwal-anjali"},"content":"    public static final String MESSAGE_ADD_LINKS_SUCCESS \u003d \"Added links to the Person: %1$s\";","lastModifiedDate":"2022-10-28"},{"lineNumber":33,"author":{"gitId":"agarwal-anjali"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists\";","lastModifiedDate":"2022-10-28"},{"lineNumber":34,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":35,"author":{"gitId":"agarwal-anjali"},"content":"    private final Index index;","lastModifiedDate":"2022-10-28"},{"lineNumber":36,"author":{"gitId":"agarwal-anjali"},"content":"    private final Set\u003cLink\u003e links;","lastModifiedDate":"2022-10-28"},{"lineNumber":37,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":38,"author":{"gitId":"agarwal-anjali"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":39,"author":{"gitId":"agarwal-anjali"},"content":"     * @param index of the person in the filtered person list to edit the note","lastModifiedDate":"2022-10-28"},{"lineNumber":40,"author":{"gitId":"agarwal-anjali"},"content":"     * @param links to be added to the person","lastModifiedDate":"2022-10-28"},{"lineNumber":41,"author":{"gitId":"agarwal-anjali"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":42,"author":{"gitId":"agarwal-anjali"},"content":"    public AddLinkCommand(Index index, Set\u003cLink\u003e links) {","lastModifiedDate":"2022-10-28"},{"lineNumber":43,"author":{"gitId":"agarwal-anjali"},"content":"        requireAllNonNull(index, links);","lastModifiedDate":"2022-10-28"},{"lineNumber":44,"author":{"gitId":"agarwal-anjali"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-10-28"},{"lineNumber":45,"author":{"gitId":"agarwal-anjali"},"content":"        this.links \u003d links;","lastModifiedDate":"2022-10-28"},{"lineNumber":46,"author":{"gitId":"agarwal-anjali"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":47,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":48,"author":{"gitId":"agarwal-anjali"},"content":"    @Override","lastModifiedDate":"2022-10-28"},{"lineNumber":49,"author":{"gitId":"agarwal-anjali"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-28"},{"lineNumber":50,"author":{"gitId":"agarwal-anjali"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-10-28"},{"lineNumber":51,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":52,"author":{"gitId":"agarwal-anjali"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-28"},{"lineNumber":53,"author":{"gitId":"agarwal-anjali"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-28"},{"lineNumber":54,"author":{"gitId":"agarwal-anjali"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":55,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":56,"author":{"gitId":"agarwal-anjali"},"content":"        Person personToUpdate \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-10-28"},{"lineNumber":57,"author":{"gitId":"agarwal-anjali"},"content":"        UniqueTagTypeMap tagMap \u003d new UniqueTagTypeMap();","lastModifiedDate":"2022-10-28"},{"lineNumber":58,"author":{"gitId":"agarwal-anjali"},"content":"        tagMap.setTagTypeMap(personToUpdate.getTags());","lastModifiedDate":"2022-10-28"},{"lineNumber":59,"author":{"gitId":"agarwal-anjali"},"content":"        Set\u003cLink\u003e updatedLinks \u003d personToUpdate.mergeLinks(links);","lastModifiedDate":"2022-10-28"},{"lineNumber":60,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":61,"author":{"gitId":"agarwal-anjali"},"content":"        Person updatedPerson \u003d new Person(personToUpdate.getName(), personToUpdate.getPhone(),","lastModifiedDate":"2022-10-28"},{"lineNumber":62,"author":{"gitId":"agarwal-anjali"},"content":"                personToUpdate.getEmail(), personToUpdate.getAddress(), tagMap, personToUpdate.getStatus(),","lastModifiedDate":"2022-10-28"},{"lineNumber":63,"author":{"gitId":"agarwal-anjali"},"content":"                personToUpdate.getNote(), personToUpdate.getRating(), updatedLinks);","lastModifiedDate":"2022-10-28"},{"lineNumber":64,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":65,"author":{"gitId":"agarwal-anjali"},"content":"        if (!personToUpdate.isSamePerson(updatedPerson) \u0026\u0026 model.hasPerson(updatedPerson)) {","lastModifiedDate":"2022-10-28"},{"lineNumber":66,"author":{"gitId":"agarwal-anjali"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2022-10-28"},{"lineNumber":67,"author":{"gitId":"agarwal-anjali"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":68,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":69,"author":{"gitId":"agarwal-anjali"},"content":"        model.setPerson(personToUpdate, updatedPerson);","lastModifiedDate":"2022-10-28"},{"lineNumber":70,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":71,"author":{"gitId":"agarwal-anjali"},"content":"        return new CommandResult(String.format(MESSAGE_ADD_LINKS_SUCCESS, updatedPerson));","lastModifiedDate":"2022-10-28"},{"lineNumber":72,"author":{"gitId":"agarwal-anjali"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":73,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":74,"author":{"gitId":"agarwal-anjali"},"content":"    @Override","lastModifiedDate":"2022-10-28"},{"lineNumber":75,"author":{"gitId":"agarwal-anjali"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-28"},{"lineNumber":76,"author":{"gitId":"agarwal-anjali"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-28"},{"lineNumber":77,"author":{"gitId":"agarwal-anjali"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-28"},{"lineNumber":78,"author":{"gitId":"agarwal-anjali"},"content":"            return true;","lastModifiedDate":"2022-10-28"},{"lineNumber":79,"author":{"gitId":"agarwal-anjali"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":80,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":81,"author":{"gitId":"agarwal-anjali"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-28"},{"lineNumber":82,"author":{"gitId":"agarwal-anjali"},"content":"        if (!(other instanceof AddLinkCommand)) {","lastModifiedDate":"2022-10-28"},{"lineNumber":83,"author":{"gitId":"agarwal-anjali"},"content":"            return false;","lastModifiedDate":"2022-10-28"},{"lineNumber":84,"author":{"gitId":"agarwal-anjali"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":85,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":86,"author":{"gitId":"agarwal-anjali"},"content":"        // state check","lastModifiedDate":"2022-10-28"},{"lineNumber":87,"author":{"gitId":"agarwal-anjali"},"content":"        AddLinkCommand e \u003d (AddLinkCommand) other;","lastModifiedDate":"2022-10-28"},{"lineNumber":88,"author":{"gitId":"agarwal-anjali"},"content":"        return index.equals(e.index)","lastModifiedDate":"2022-10-28"},{"lineNumber":89,"author":{"gitId":"agarwal-anjali"},"content":"                \u0026\u0026 links.equals(e.links);","lastModifiedDate":"2022-10-28"},{"lineNumber":90,"author":{"gitId":"agarwal-anjali"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":91,"author":{"gitId":"agarwal-anjali"},"content":"}","lastModifiedDate":"2022-10-28"}],"authorContributionMap":{"agarwal-anjali":91}},{"path":"src/main/java/seedu/clinkedin/logic/commands/AddNoteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.logic.commands;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"josephaedan"},"content":"import java.util.List;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.commons.core.Messages;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.commons.core.index.Index;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.Model;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.Note;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.Person;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.UniqueTagTypeMap;","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"josephaedan"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"ytingtan"},"content":" * Changes the note of an existing person in the address book.","lastModifiedDate":"2022-10-17"},{"lineNumber":17,"author":{"gitId":"josephaedan"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"agarwal-anjali"},"content":"public class AddNoteCommand extends Command {","lastModifiedDate":"2022-10-28"},{"lineNumber":19,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"agarwal-anjali"},"content":"    public static final String COMMAND_WORD \u003d \"addnote\";","lastModifiedDate":"2022-10-28"},{"lineNumber":21,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"josephaedan"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"josephaedan"},"content":"            + \": Adds an optional note to the person identified\"","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"agarwal-anjali"},"content":"            + \"by the index number in the address book.\\n\"","lastModifiedDate":"2022-10-28"},{"lineNumber":25,"author":{"gitId":"ytingtan"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2022-10-17"},{"lineNumber":26,"author":{"gitId":"agarwal-anjali"},"content":"            + \"addNote INDEX note/NOTE\\n\\n\"","lastModifiedDate":"2022-10-28"},{"lineNumber":27,"author":{"gitId":"josephaedan"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"agarwal-anjali"},"content":"            + \"note/Strong in Java\";","lastModifiedDate":"2022-10-28"},{"lineNumber":29,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"josephaedan"},"content":"    public static final String MESSAGE_ADD_NOTE_SUCCESS \u003d \"Added note to Person: %1$s\";","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"agarwal-anjali"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists\";","lastModifiedDate":"2022-10-28"},{"lineNumber":32,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"josephaedan"},"content":"    private final Index index;","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"josephaedan"},"content":"    private final Note note;","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"josephaedan"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"josephaedan"},"content":"     * @param index of the person in the filtered person list to edit the note","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"josephaedan"},"content":"     * @param note  note of the person to be updated to","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"josephaedan"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"agarwal-anjali"},"content":"    public AddNoteCommand(Index index, Note note) {","lastModifiedDate":"2022-10-28"},{"lineNumber":41,"author":{"gitId":"josephaedan"},"content":"        requireAllNonNull(index, note);","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"josephaedan"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"josephaedan"},"content":"        this.note \u003d note;","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"josephaedan"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"josephaedan"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"josephaedan"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"josephaedan"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"josephaedan"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"josephaedan"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"josephaedan"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"agarwal-anjali"},"content":"        Person personToUpdate \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-10-28"},{"lineNumber":55,"author":{"gitId":"agarwal-anjali"},"content":"        Note updatedNote \u003d personToUpdate.mergeNote(note);","lastModifiedDate":"2022-10-28"},{"lineNumber":56,"author":{"gitId":"pratham31012002"},"content":"        UniqueTagTypeMap tagMap \u003d new UniqueTagTypeMap();","lastModifiedDate":"2022-10-13"},{"lineNumber":57,"author":{"gitId":"agarwal-anjali"},"content":"        tagMap.setTagTypeMap(personToUpdate.getTags());","lastModifiedDate":"2022-10-28"},{"lineNumber":58,"author":{"gitId":"agarwal-anjali"},"content":"        Person updatedPerson \u003d new Person(personToUpdate.getName(), personToUpdate.getPhone(),","lastModifiedDate":"2022-10-28"},{"lineNumber":59,"author":{"gitId":"agarwal-anjali"},"content":"                personToUpdate.getEmail(), personToUpdate.getAddress(), tagMap, personToUpdate.getStatus(),","lastModifiedDate":"2022-10-28"},{"lineNumber":60,"author":{"gitId":"agarwal-anjali"},"content":"                updatedNote, personToUpdate.getRating(), personToUpdate.getLinks());","lastModifiedDate":"2022-10-28"},{"lineNumber":61,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"agarwal-anjali"},"content":"        if (!personToUpdate.isSamePerson(updatedPerson) \u0026\u0026 model.hasPerson(updatedPerson)) {","lastModifiedDate":"2022-10-28"},{"lineNumber":63,"author":{"gitId":"agarwal-anjali"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2022-10-28"},{"lineNumber":64,"author":{"gitId":"josephaedan"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"agarwal-anjali"},"content":"        model.setPerson(personToUpdate, updatedPerson);","lastModifiedDate":"2022-10-28"},{"lineNumber":67,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":68,"author":{"gitId":"agarwal-anjali"},"content":"        return new CommandResult(String.format(MESSAGE_ADD_NOTE_SUCCESS, updatedPerson));","lastModifiedDate":"2022-10-28"},{"lineNumber":69,"author":{"gitId":"josephaedan"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":71,"author":{"gitId":"josephaedan"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":72,"author":{"gitId":"josephaedan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-12"},{"lineNumber":73,"author":{"gitId":"josephaedan"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-12"},{"lineNumber":74,"author":{"gitId":"josephaedan"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-12"},{"lineNumber":75,"author":{"gitId":"josephaedan"},"content":"            return true;","lastModifiedDate":"2022-10-12"},{"lineNumber":76,"author":{"gitId":"josephaedan"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":77,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":78,"author":{"gitId":"josephaedan"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-12"},{"lineNumber":79,"author":{"gitId":"agarwal-anjali"},"content":"        if (!(other instanceof AddNoteCommand)) {","lastModifiedDate":"2022-10-28"},{"lineNumber":80,"author":{"gitId":"josephaedan"},"content":"            return false;","lastModifiedDate":"2022-10-12"},{"lineNumber":81,"author":{"gitId":"josephaedan"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":82,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":83,"author":{"gitId":"josephaedan"},"content":"        // state check","lastModifiedDate":"2022-10-12"},{"lineNumber":84,"author":{"gitId":"agarwal-anjali"},"content":"        AddNoteCommand e \u003d (AddNoteCommand) other;","lastModifiedDate":"2022-10-28"},{"lineNumber":85,"author":{"gitId":"josephaedan"},"content":"        return index.equals(e.index)","lastModifiedDate":"2022-10-12"},{"lineNumber":86,"author":{"gitId":"josephaedan"},"content":"                \u0026\u0026 note.equals(e.note);","lastModifiedDate":"2022-10-12"},{"lineNumber":87,"author":{"gitId":"josephaedan"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":88,"author":{"gitId":"josephaedan"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"agarwal-anjali":20,"ytingtan":2,"emptygx":9,"josephaedan":56,"pratham31012002":1}},{"path":"src/main/java/seedu/clinkedin/logic/commands/AddRateCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ytingtan"},"content":"package seedu.clinkedin.logic.commands;","lastModifiedDate":"2022-10-17"},{"lineNumber":2,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":3,"author":{"gitId":"ytingtan"},"content":"import static seedu.clinkedin.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-17"},{"lineNumber":4,"author":{"gitId":"ytingtan"},"content":"import static seedu.clinkedin.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-10-17"},{"lineNumber":5,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":6,"author":{"gitId":"ytingtan"},"content":"import java.util.List;","lastModifiedDate":"2022-10-17"},{"lineNumber":7,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":8,"author":{"gitId":"ytingtan"},"content":"import seedu.clinkedin.commons.core.Messages;","lastModifiedDate":"2022-10-17"},{"lineNumber":9,"author":{"gitId":"ytingtan"},"content":"import seedu.clinkedin.commons.core.index.Index;","lastModifiedDate":"2022-10-17"},{"lineNumber":10,"author":{"gitId":"ytingtan"},"content":"import seedu.clinkedin.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-17"},{"lineNumber":11,"author":{"gitId":"ytingtan"},"content":"import seedu.clinkedin.model.Model;","lastModifiedDate":"2022-10-17"},{"lineNumber":12,"author":{"gitId":"ytingtan"},"content":"import seedu.clinkedin.model.person.Person;","lastModifiedDate":"2022-10-17"},{"lineNumber":13,"author":{"gitId":"ytingtan"},"content":"import seedu.clinkedin.model.person.Rating;","lastModifiedDate":"2022-10-17"},{"lineNumber":14,"author":{"gitId":"ytingtan"},"content":"import seedu.clinkedin.model.person.UniqueTagTypeMap;","lastModifiedDate":"2022-10-17"},{"lineNumber":15,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":16,"author":{"gitId":"ytingtan"},"content":"/**","lastModifiedDate":"2022-10-17"},{"lineNumber":17,"author":{"gitId":"ytingtan"},"content":" * Changes rating of an existing person in the address book.","lastModifiedDate":"2022-10-17"},{"lineNumber":18,"author":{"gitId":"ytingtan"},"content":" */","lastModifiedDate":"2022-10-17"},{"lineNumber":19,"author":{"gitId":"ytingtan"},"content":"public class AddRateCommand extends Command {","lastModifiedDate":"2022-10-28"},{"lineNumber":20,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":21,"author":{"gitId":"ytingtan"},"content":"    public static final String COMMAND_WORD \u003d \"addrate\";","lastModifiedDate":"2022-10-28"},{"lineNumber":22,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":23,"author":{"gitId":"ytingtan"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-17"},{"lineNumber":24,"author":{"gitId":"ytingtan"},"content":"            + \": Adds an optional rating to the person identified\"","lastModifiedDate":"2022-10-17"},{"lineNumber":25,"author":{"gitId":"ytingtan"},"content":"            + \"by the index number in the address book. \"","lastModifiedDate":"2022-10-17"},{"lineNumber":26,"author":{"gitId":"ytingtan"},"content":"            + \"Existing rating will be overwritten by the input. \\n\"","lastModifiedDate":"2022-10-17"},{"lineNumber":27,"author":{"gitId":"ytingtan"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2022-10-17"},{"lineNumber":28,"author":{"gitId":"ytingtan"},"content":"            + \"rate INDEX rate/RATING \\n\\n\"","lastModifiedDate":"2022-10-17"},{"lineNumber":29,"author":{"gitId":"ytingtan"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2022-10-17"},{"lineNumber":30,"author":{"gitId":"ytingtan"},"content":"            + \"rate/4\\n\\n\"","lastModifiedDate":"2022-10-17"},{"lineNumber":31,"author":{"gitId":"ytingtan"},"content":"            + \" will add a rating of 4 to the first person in the address book.\";","lastModifiedDate":"2022-10-17"},{"lineNumber":32,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":33,"author":{"gitId":"ytingtan"},"content":"    public static final String MESSAGE_ADD_RATING_SUCCESS \u003d \"Added rating to Person: %1$s\";","lastModifiedDate":"2022-10-17"},{"lineNumber":34,"author":{"gitId":"ytingtan"},"content":"    public static final String MESSAGE_DELETE_RATING_SUCCESS \u003d \"Removed rating from Person: %1$s\";","lastModifiedDate":"2022-10-17"},{"lineNumber":35,"author":{"gitId":"pratham31012002"},"content":"    public static final String MESSAGE_RATING_EXIST \u003d \"Rating for this person already exists\";","lastModifiedDate":"2022-10-28"},{"lineNumber":36,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":37,"author":{"gitId":"ytingtan"},"content":"    private final Index index;","lastModifiedDate":"2022-10-17"},{"lineNumber":38,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":39,"author":{"gitId":"ytingtan"},"content":"    private final Rating rating;","lastModifiedDate":"2022-10-17"},{"lineNumber":40,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":41,"author":{"gitId":"ytingtan"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":42,"author":{"gitId":"ytingtan"},"content":"     * @param index of the person in the filtered person list to edit the rating","lastModifiedDate":"2022-10-17"},{"lineNumber":43,"author":{"gitId":"ytingtan"},"content":"     * @param rating rating of the person to be updated to","lastModifiedDate":"2022-10-17"},{"lineNumber":44,"author":{"gitId":"ytingtan"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":45,"author":{"gitId":"ytingtan"},"content":"    public AddRateCommand(Index index, Rating rating) {","lastModifiedDate":"2022-10-28"},{"lineNumber":46,"author":{"gitId":"ytingtan"},"content":"        requireAllNonNull(index, rating);","lastModifiedDate":"2022-10-17"},{"lineNumber":47,"author":{"gitId":"ytingtan"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-10-17"},{"lineNumber":48,"author":{"gitId":"ytingtan"},"content":"        this.rating \u003d rating;","lastModifiedDate":"2022-10-17"},{"lineNumber":49,"author":{"gitId":"ytingtan"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":50,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":51,"author":{"gitId":"ytingtan"},"content":"    @Override","lastModifiedDate":"2022-10-17"},{"lineNumber":52,"author":{"gitId":"ytingtan"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-17"},{"lineNumber":53,"author":{"gitId":"ytingtan"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-10-17"},{"lineNumber":54,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":55,"author":{"gitId":"ytingtan"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-17"},{"lineNumber":56,"author":{"gitId":"ytingtan"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-17"},{"lineNumber":57,"author":{"gitId":"ytingtan"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":58,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":59,"author":{"gitId":"ytingtan"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-10-17"},{"lineNumber":60,"author":{"gitId":"pratham31012002"},"content":"        if (!personToEdit.getRating().toString().equals(\"0\")) {","lastModifiedDate":"2022-10-28"},{"lineNumber":61,"author":{"gitId":"pratham31012002"},"content":"            throw new CommandException(MESSAGE_RATING_EXIST);","lastModifiedDate":"2022-10-28"},{"lineNumber":62,"author":{"gitId":"pratham31012002"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":63,"author":{"gitId":"ytingtan"},"content":"        UniqueTagTypeMap tagMap \u003d new UniqueTagTypeMap();","lastModifiedDate":"2022-10-17"},{"lineNumber":64,"author":{"gitId":"ytingtan"},"content":"        tagMap.setTagTypeMap(personToEdit.getTags());","lastModifiedDate":"2022-10-17"},{"lineNumber":65,"author":{"gitId":"ytingtan"},"content":"        Person editedPerson \u003d new Person(personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2022-10-17"},{"lineNumber":66,"author":{"gitId":"ytingtan"},"content":"                personToEdit.getAddress(), tagMap, personToEdit.getStatus(), personToEdit.getNote(), rating,","lastModifiedDate":"2022-10-25"},{"lineNumber":67,"author":{"gitId":"ytingtan"},"content":"                personToEdit.getLinks());","lastModifiedDate":"2022-10-25"},{"lineNumber":68,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":69,"author":{"gitId":"ytingtan"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2022-10-17"},{"lineNumber":70,"author":{"gitId":"ytingtan"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-10-17"},{"lineNumber":71,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":72,"author":{"gitId":"pratham31012002"},"content":"        return new CommandResult(String.format(MESSAGE_ADD_RATING_SUCCESS, editedPerson));","lastModifiedDate":"2022-10-28"},{"lineNumber":73,"author":{"gitId":"ytingtan"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":74,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":75,"author":{"gitId":"ytingtan"},"content":"    @Override","lastModifiedDate":"2022-10-17"},{"lineNumber":76,"author":{"gitId":"ytingtan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-17"},{"lineNumber":77,"author":{"gitId":"ytingtan"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-17"},{"lineNumber":78,"author":{"gitId":"ytingtan"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-17"},{"lineNumber":79,"author":{"gitId":"ytingtan"},"content":"            return true;","lastModifiedDate":"2022-10-17"},{"lineNumber":80,"author":{"gitId":"ytingtan"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":81,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":82,"author":{"gitId":"ytingtan"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-17"},{"lineNumber":83,"author":{"gitId":"ytingtan"},"content":"        if (!(other instanceof AddRateCommand)) {","lastModifiedDate":"2022-10-28"},{"lineNumber":84,"author":{"gitId":"ytingtan"},"content":"            return false;","lastModifiedDate":"2022-10-17"},{"lineNumber":85,"author":{"gitId":"ytingtan"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":86,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":87,"author":{"gitId":"ytingtan"},"content":"        // state check","lastModifiedDate":"2022-10-17"},{"lineNumber":88,"author":{"gitId":"ytingtan"},"content":"        AddRateCommand e \u003d (AddRateCommand) other;","lastModifiedDate":"2022-10-28"},{"lineNumber":89,"author":{"gitId":"ytingtan"},"content":"        return index.equals(e.index)","lastModifiedDate":"2022-10-17"},{"lineNumber":90,"author":{"gitId":"ytingtan"},"content":"                \u0026\u0026 rating.equals(e.rating);","lastModifiedDate":"2022-10-17"},{"lineNumber":91,"author":{"gitId":"ytingtan"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":92,"author":{"gitId":"ytingtan"},"content":"}","lastModifiedDate":"2022-10-17"}],"authorContributionMap":{"ytingtan":87,"pratham31012002":5}},{"path":"src/main/java/seedu/clinkedin/logic/commands/AddTagCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.logic.commands;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":3,"author":{"gitId":"agarwal-anjali"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.parser.CliSyntax.PREFIX_DEGREETAG;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.parser.CliSyntax.PREFIX_JOBTYPETAG;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.parser.CliSyntax.PREFIX_SKILLTAG;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":10,"author":{"gitId":"pratham31012002"},"content":"import java.util.List;","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.commons.core.Messages;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.commons.core.index.Index;","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.Model;","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.Person;","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.UniqueTagTypeMap;","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.tag.exceptions.DuplicateTagException;","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":21,"author":{"gitId":"agarwal-anjali"},"content":"/**","lastModifiedDate":"2022-10-07"},{"lineNumber":22,"author":{"gitId":"agarwal-anjali"},"content":" * Adds a tag of a specific tag type to a person.","lastModifiedDate":"2022-10-07"},{"lineNumber":23,"author":{"gitId":"agarwal-anjali"},"content":" */","lastModifiedDate":"2022-10-07"},{"lineNumber":24,"author":{"gitId":"agarwal-anjali"},"content":"public class AddTagCommand extends Command {","lastModifiedDate":"2022-10-07"},{"lineNumber":25,"author":{"gitId":"pratham31012002"},"content":"    public static final String COMMAND_WORD \u003d \"addtag\";","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":27,"author":{"gitId":"agarwal-anjali"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a tag of a specific tag type to a person.\\n\"","lastModifiedDate":"2022-10-07"},{"lineNumber":28,"author":{"gitId":"agarwal-anjali"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-10-07"},{"lineNumber":29,"author":{"gitId":"agarwal-anjali"},"content":"            + \"INDEX (must be a positive integer) \"","lastModifiedDate":"2022-10-07"},{"lineNumber":30,"author":{"gitId":"agarwal-anjali"},"content":"            + \"[\" + PREFIX_SKILLTAG + \" TAG] \"","lastModifiedDate":"2022-10-07"},{"lineNumber":31,"author":{"gitId":"agarwal-anjali"},"content":"            + \"[\" + PREFIX_DEGREETAG + \" TAG] \"","lastModifiedDate":"2022-10-07"},{"lineNumber":32,"author":{"gitId":"agarwal-anjali"},"content":"            + \"[\" + PREFIX_JOBTYPETAG + \" TAG]...\\n\"","lastModifiedDate":"2022-10-07"},{"lineNumber":33,"author":{"gitId":"agarwal-anjali"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-07"},{"lineNumber":34,"author":{"gitId":"agarwal-anjali"},"content":"            + \"1 \"","lastModifiedDate":"2022-10-07"},{"lineNumber":35,"author":{"gitId":"agarwal-anjali"},"content":"            + PREFIX_SKILLTAG + \"Java \"","lastModifiedDate":"2022-10-07"},{"lineNumber":36,"author":{"gitId":"agarwal-anjali"},"content":"            + PREFIX_DEGREETAG + \"Undergraduate \"","lastModifiedDate":"2022-10-07"},{"lineNumber":37,"author":{"gitId":"agarwal-anjali"},"content":"            + PREFIX_JOBTYPETAG + \"Internship\";","lastModifiedDate":"2022-10-07"},{"lineNumber":38,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":39,"author":{"gitId":"agarwal-anjali"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New tags added: : %1$s\";","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"agarwal-anjali"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists\";","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":42,"author":{"gitId":"agarwal-anjali"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"agarwal-anjali"},"content":"    private final UniqueTagTypeMap toAdd;","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"agarwal-anjali"},"content":"    private EditCommand.EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":46,"author":{"gitId":"agarwal-anjali"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":47,"author":{"gitId":"agarwal-anjali"},"content":"     * Creates an AddTagCommand to add the specified {@code Tag}","lastModifiedDate":"2022-10-07"},{"lineNumber":48,"author":{"gitId":"agarwal-anjali"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":49,"author":{"gitId":"agarwal-anjali"},"content":"    public AddTagCommand(Index targetIndex, UniqueTagTypeMap toAdd) {","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"pratham31012002"},"content":"        requireAllNonNull(targetIndex, toAdd);","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"agarwal-anjali"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"agarwal-anjali"},"content":"        this.toAdd \u003d toAdd;","lastModifiedDate":"2022-10-07"},{"lineNumber":53,"author":{"gitId":"agarwal-anjali"},"content":"        editPersonDescriptor \u003d new EditCommand.EditPersonDescriptor();","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"agarwal-anjali"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":55,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":56,"author":{"gitId":"agarwal-anjali"},"content":"    @Override","lastModifiedDate":"2022-10-07"},{"lineNumber":57,"author":{"gitId":"agarwal-anjali"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-07"},{"lineNumber":58,"author":{"gitId":"agarwal-anjali"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"agarwal-anjali"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"agarwal-anjali"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"agarwal-anjali"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"agarwal-anjali"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"agarwal-anjali"},"content":"        editPersonDescriptor.setNewTagTypeMap(toAdd);","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"agarwal-anjali"},"content":"        try {","lastModifiedDate":"2022-10-13"},{"lineNumber":68,"author":{"gitId":"agarwal-anjali"},"content":"            Person personToEdit \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"agarwal-anjali"},"content":"            Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"agarwal-anjali"},"content":"            if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"agarwal-anjali"},"content":"                throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"agarwal-anjali"},"content":"            }","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"agarwal-anjali"},"content":"            model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"agarwal-anjali"},"content":"            model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"agarwal-anjali"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS, editedPerson));","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"agarwal-anjali"},"content":"        } catch (DuplicateTagException d) {","lastModifiedDate":"2022-10-13"},{"lineNumber":78,"author":{"gitId":"agarwal-anjali"},"content":"            throw new CommandException(d.getMessage());","lastModifiedDate":"2022-10-13"},{"lineNumber":79,"author":{"gitId":"agarwal-anjali"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":80,"author":{"gitId":"agarwal-anjali"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"pratham31012002"},"content":"    private static Person createEditedPerson(Person personToEdit,","lastModifiedDate":"2022-10-11"},{"lineNumber":83,"author":{"gitId":"agarwal-anjali"},"content":"                                             EditCommand.EditPersonDescriptor editPersonDescriptor)","lastModifiedDate":"2022-10-13"},{"lineNumber":84,"author":{"gitId":"agarwal-anjali"},"content":"            throws DuplicateTagException {","lastModifiedDate":"2022-10-13"},{"lineNumber":85,"author":{"gitId":"agarwal-anjali"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"agarwal-anjali"},"content":"        UniqueTagTypeMap updatedTags \u003d new UniqueTagTypeMap();","lastModifiedDate":"2022-10-10"},{"lineNumber":87,"author":{"gitId":"agarwal-anjali"},"content":"        updatedTags.setTagTypeMap(personToEdit.getTags());","lastModifiedDate":"2022-10-10"},{"lineNumber":88,"author":{"gitId":"agarwal-anjali"},"content":"        updatedTags.mergeTagTypeMap(editPersonDescriptor.getNewTagTypeMap().get());","lastModifiedDate":"2022-10-11"},{"lineNumber":89,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":90,"author":{"gitId":"agarwal-anjali"},"content":"        return new Person(personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2022-10-10"},{"lineNumber":91,"author":{"gitId":"agarwal-anjali"},"content":"                personToEdit.getAddress(), updatedTags, personToEdit.getStatus(), personToEdit.getNote(),","lastModifiedDate":"2022-10-23"},{"lineNumber":92,"author":{"gitId":"pratham31012002"},"content":"                personToEdit.getRating(), personToEdit.getLinks());","lastModifiedDate":"2022-10-27"},{"lineNumber":93,"author":{"gitId":"agarwal-anjali"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":94,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":95,"author":{"gitId":"agarwal-anjali"},"content":"    @Override","lastModifiedDate":"2022-10-07"},{"lineNumber":96,"author":{"gitId":"agarwal-anjali"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-07"},{"lineNumber":97,"author":{"gitId":"agarwal-anjali"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-07"},{"lineNumber":98,"author":{"gitId":"agarwal-anjali"},"content":"                || (other instanceof AddTagCommand // instanceof handles nulls","lastModifiedDate":"2022-10-07"},{"lineNumber":99,"author":{"gitId":"agarwal-anjali"},"content":"                \u0026\u0026 targetIndex.equals(((AddTagCommand) other).targetIndex)","lastModifiedDate":"2022-10-10"},{"lineNumber":100,"author":{"gitId":"agarwal-anjali"},"content":"                \u0026\u0026 toAdd.equals(((AddTagCommand) other).toAdd));","lastModifiedDate":"2022-10-07"},{"lineNumber":101,"author":{"gitId":"agarwal-anjali"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":102,"author":{"gitId":"agarwal-anjali"},"content":"}","lastModifiedDate":"2022-10-07"}],"authorContributionMap":{"agarwal-anjali":83,"emptygx":13,"pratham31012002":6}},{"path":"src/main/java/seedu/clinkedin/logic/commands/AddToCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"agarwal-anjali"},"content":"package seedu.clinkedin.logic.commands;","lastModifiedDate":"2022-10-28"},{"lineNumber":2,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":3,"author":{"gitId":"agarwal-anjali"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-28"},{"lineNumber":4,"author":{"gitId":"agarwal-anjali"},"content":"import static seedu.clinkedin.logic.parser.CliSyntax.PREFIX_LINK;","lastModifiedDate":"2022-10-28"},{"lineNumber":5,"author":{"gitId":"agarwal-anjali"},"content":"import static seedu.clinkedin.logic.parser.CliSyntax.PREFIX_NOTE;","lastModifiedDate":"2022-10-28"},{"lineNumber":6,"author":{"gitId":"agarwal-anjali"},"content":"import static seedu.clinkedin.logic.parser.CliSyntax.PREFIX_RATING;","lastModifiedDate":"2022-10-28"},{"lineNumber":7,"author":{"gitId":"agarwal-anjali"},"content":"import static seedu.clinkedin.logic.parser.CliSyntax.PREFIX_SKILLTAG;","lastModifiedDate":"2022-10-28"},{"lineNumber":8,"author":{"gitId":"agarwal-anjali"},"content":"import static seedu.clinkedin.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-28"},{"lineNumber":9,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":10,"author":{"gitId":"agarwal-anjali"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-28"},{"lineNumber":11,"author":{"gitId":"agarwal-anjali"},"content":"import java.util.List;","lastModifiedDate":"2022-10-28"},{"lineNumber":12,"author":{"gitId":"agarwal-anjali"},"content":"import java.util.Map;","lastModifiedDate":"2022-10-28"},{"lineNumber":13,"author":{"gitId":"agarwal-anjali"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-28"},{"lineNumber":14,"author":{"gitId":"agarwal-anjali"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-28"},{"lineNumber":15,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":16,"author":{"gitId":"agarwal-anjali"},"content":"import seedu.clinkedin.commons.core.Messages;","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"agarwal-anjali"},"content":"import seedu.clinkedin.commons.core.index.Index;","lastModifiedDate":"2022-10-28"},{"lineNumber":18,"author":{"gitId":"agarwal-anjali"},"content":"import seedu.clinkedin.commons.util.CollectionUtil;","lastModifiedDate":"2022-10-28"},{"lineNumber":19,"author":{"gitId":"agarwal-anjali"},"content":"import seedu.clinkedin.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-28"},{"lineNumber":20,"author":{"gitId":"agarwal-anjali"},"content":"import seedu.clinkedin.model.Model;","lastModifiedDate":"2022-10-28"},{"lineNumber":21,"author":{"gitId":"agarwal-anjali"},"content":"import seedu.clinkedin.model.link.Link;","lastModifiedDate":"2022-10-28"},{"lineNumber":22,"author":{"gitId":"agarwal-anjali"},"content":"import seedu.clinkedin.model.person.Note;","lastModifiedDate":"2022-10-28"},{"lineNumber":23,"author":{"gitId":"agarwal-anjali"},"content":"import seedu.clinkedin.model.person.Person;","lastModifiedDate":"2022-10-28"},{"lineNumber":24,"author":{"gitId":"agarwal-anjali"},"content":"import seedu.clinkedin.model.person.Rating;","lastModifiedDate":"2022-10-28"},{"lineNumber":25,"author":{"gitId":"agarwal-anjali"},"content":"import seedu.clinkedin.model.person.UniqueTagTypeMap;","lastModifiedDate":"2022-10-28"},{"lineNumber":26,"author":{"gitId":"agarwal-anjali"},"content":"import seedu.clinkedin.model.person.exceptions.RatingAlreadyExistsException;","lastModifiedDate":"2022-10-28"},{"lineNumber":27,"author":{"gitId":"agarwal-anjali"},"content":"import seedu.clinkedin.model.person.exceptions.TagTypeNotFoundException;","lastModifiedDate":"2022-10-28"},{"lineNumber":28,"author":{"gitId":"agarwal-anjali"},"content":"import seedu.clinkedin.model.tag.TagType;","lastModifiedDate":"2022-10-28"},{"lineNumber":29,"author":{"gitId":"agarwal-anjali"},"content":"import seedu.clinkedin.model.tag.UniqueTagList;","lastModifiedDate":"2022-10-28"},{"lineNumber":30,"author":{"gitId":"agarwal-anjali"},"content":"import seedu.clinkedin.model.tag.exceptions.DuplicateTagException;","lastModifiedDate":"2022-10-28"},{"lineNumber":31,"author":{"gitId":"agarwal-anjali"},"content":"import seedu.clinkedin.model.tag.exceptions.TagNotFoundException;","lastModifiedDate":"2022-10-28"},{"lineNumber":32,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":33,"author":{"gitId":"agarwal-anjali"},"content":"/**","lastModifiedDate":"2022-10-28"},{"lineNumber":34,"author":{"gitId":"agarwal-anjali"},"content":" * Adds a person to the address book.","lastModifiedDate":"2022-10-28"},{"lineNumber":35,"author":{"gitId":"agarwal-anjali"},"content":" */","lastModifiedDate":"2022-10-28"},{"lineNumber":36,"author":{"gitId":"agarwal-anjali"},"content":"public class AddToCommand extends Command {","lastModifiedDate":"2022-10-28"},{"lineNumber":37,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":38,"author":{"gitId":"agarwal-anjali"},"content":"    public static final String COMMAND_WORD \u003d \"addto\";","lastModifiedDate":"2022-10-28"},{"lineNumber":39,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":40,"author":{"gitId":"agarwal-anjali"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-28"},{"lineNumber":41,"author":{"gitId":"agarwal-anjali"},"content":"            + \": Add additional attributes to an existing person in the address book.\\n\"","lastModifiedDate":"2022-10-28"},{"lineNumber":42,"author":{"gitId":"agarwal-anjali"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-10-28"},{"lineNumber":43,"author":{"gitId":"agarwal-anjali"},"content":"            + \"[\" + PREFIX_TAG + \"TAG] \"","lastModifiedDate":"2022-10-28"},{"lineNumber":44,"author":{"gitId":"agarwal-anjali"},"content":"            + \"[\" + PREFIX_NOTE + \"NOTE]\"","lastModifiedDate":"2022-10-28"},{"lineNumber":45,"author":{"gitId":"agarwal-anjali"},"content":"            + \"[\" + PREFIX_RATING + \"RATING]\"","lastModifiedDate":"2022-10-28"},{"lineNumber":46,"author":{"gitId":"agarwal-anjali"},"content":"            + \"[\" + PREFIX_LINK + \"LINK]...\\n\"","lastModifiedDate":"2022-10-28"},{"lineNumber":47,"author":{"gitId":"agarwal-anjali"},"content":"            + \"Example: \" + COMMAND_WORD + \"2 \"","lastModifiedDate":"2022-10-28"},{"lineNumber":48,"author":{"gitId":"agarwal-anjali"},"content":"            + PREFIX_SKILLTAG + \"java \"","lastModifiedDate":"2022-10-28"},{"lineNumber":49,"author":{"gitId":"agarwal-anjali"},"content":"            + PREFIX_SKILLTAG + \"python \"","lastModifiedDate":"2022-10-28"},{"lineNumber":50,"author":{"gitId":"agarwal-anjali"},"content":"            + PREFIX_NOTE + \"Can do administrative work.\"","lastModifiedDate":"2022-10-28"},{"lineNumber":51,"author":{"gitId":"agarwal-anjali"},"content":"            + PREFIX_RATING + \"4\"","lastModifiedDate":"2022-10-28"},{"lineNumber":52,"author":{"gitId":"agarwal-anjali"},"content":"            + PREFIX_LINK + \"https://github.com/unknown-person\";","lastModifiedDate":"2022-10-28"},{"lineNumber":53,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":54,"author":{"gitId":"agarwal-anjali"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New Attributes added to person added: %1$s\";","lastModifiedDate":"2022-10-28"},{"lineNumber":55,"author":{"gitId":"agarwal-anjali"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2022-10-28"},{"lineNumber":56,"author":{"gitId":"agarwal-anjali"},"content":"    public static final String MESSAGE_NO_ATTRIBUTE_TO_ADD \u003d \"Attributes to add should not be empty!\";","lastModifiedDate":"2022-10-28"},{"lineNumber":57,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":58,"author":{"gitId":"agarwal-anjali"},"content":"    private final Index index;","lastModifiedDate":"2022-10-28"},{"lineNumber":59,"author":{"gitId":"agarwal-anjali"},"content":"    private final UpdatePersonDescriptor updatePersonDescriptor;","lastModifiedDate":"2022-10-28"},{"lineNumber":60,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":61,"author":{"gitId":"agarwal-anjali"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":62,"author":{"gitId":"agarwal-anjali"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2022-10-28"},{"lineNumber":63,"author":{"gitId":"agarwal-anjali"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":64,"author":{"gitId":"agarwal-anjali"},"content":"    public AddToCommand(Index index, UpdatePersonDescriptor updatePersonDescriptor) {","lastModifiedDate":"2022-10-28"},{"lineNumber":65,"author":{"gitId":"agarwal-anjali"},"content":"        requireNonNull(updatePersonDescriptor);","lastModifiedDate":"2022-10-28"},{"lineNumber":66,"author":{"gitId":"agarwal-anjali"},"content":"        requireNonNull(index);","lastModifiedDate":"2022-10-28"},{"lineNumber":67,"author":{"gitId":"agarwal-anjali"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-10-28"},{"lineNumber":68,"author":{"gitId":"agarwal-anjali"},"content":"        this.updatePersonDescriptor \u003d updatePersonDescriptor;","lastModifiedDate":"2022-10-28"},{"lineNumber":69,"author":{"gitId":"agarwal-anjali"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":70,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":71,"author":{"gitId":"agarwal-anjali"},"content":"    @Override","lastModifiedDate":"2022-10-28"},{"lineNumber":72,"author":{"gitId":"agarwal-anjali"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-28"},{"lineNumber":73,"author":{"gitId":"agarwal-anjali"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-28"},{"lineNumber":74,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":75,"author":{"gitId":"agarwal-anjali"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-10-28"},{"lineNumber":76,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":77,"author":{"gitId":"agarwal-anjali"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-28"},{"lineNumber":78,"author":{"gitId":"agarwal-anjali"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-28"},{"lineNumber":79,"author":{"gitId":"agarwal-anjali"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":80,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":81,"author":{"gitId":"agarwal-anjali"},"content":"        try {","lastModifiedDate":"2022-10-28"},{"lineNumber":82,"author":{"gitId":"agarwal-anjali"},"content":"            Person personToBeUpdated \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-10-28"},{"lineNumber":83,"author":{"gitId":"agarwal-anjali"},"content":"            Person updatedPerson \u003d createUpdatedPerson(personToBeUpdated, updatePersonDescriptor);","lastModifiedDate":"2022-10-28"},{"lineNumber":84,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":85,"author":{"gitId":"agarwal-anjali"},"content":"            if (!personToBeUpdated.isSamePerson(updatedPerson) \u0026\u0026 model.hasPerson(updatedPerson)) {","lastModifiedDate":"2022-10-28"},{"lineNumber":86,"author":{"gitId":"agarwal-anjali"},"content":"                throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2022-10-28"},{"lineNumber":87,"author":{"gitId":"agarwal-anjali"},"content":"            }","lastModifiedDate":"2022-10-28"},{"lineNumber":88,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":89,"author":{"gitId":"agarwal-anjali"},"content":"            model.setPerson(personToBeUpdated, updatedPerson);","lastModifiedDate":"2022-10-28"},{"lineNumber":90,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":91,"author":{"gitId":"agarwal-anjali"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS, updatedPerson));","lastModifiedDate":"2022-10-28"},{"lineNumber":92,"author":{"gitId":"agarwal-anjali"},"content":"        } catch (TagTypeNotFoundException | TagNotFoundException | DuplicateTagException","lastModifiedDate":"2022-10-28"},{"lineNumber":93,"author":{"gitId":"agarwal-anjali"},"content":"                 | RatingAlreadyExistsException e) {","lastModifiedDate":"2022-10-28"},{"lineNumber":94,"author":{"gitId":"agarwal-anjali"},"content":"            throw new CommandException(e.getMessage());","lastModifiedDate":"2022-10-28"},{"lineNumber":95,"author":{"gitId":"agarwal-anjali"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":96,"author":{"gitId":"agarwal-anjali"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":97,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":98,"author":{"gitId":"agarwal-anjali"},"content":"    @Override","lastModifiedDate":"2022-10-28"},{"lineNumber":99,"author":{"gitId":"agarwal-anjali"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-28"},{"lineNumber":100,"author":{"gitId":"agarwal-anjali"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-28"},{"lineNumber":101,"author":{"gitId":"agarwal-anjali"},"content":"                || (other instanceof AddToCommand // instanceof handles nulls","lastModifiedDate":"2022-10-28"},{"lineNumber":102,"author":{"gitId":"agarwal-anjali"},"content":"                \u0026\u0026 index.equals(((AddToCommand) other).index)","lastModifiedDate":"2022-10-28"},{"lineNumber":103,"author":{"gitId":"agarwal-anjali"},"content":"                \u0026\u0026 updatePersonDescriptor.equals(((AddToCommand) other).updatePersonDescriptor));","lastModifiedDate":"2022-10-28"},{"lineNumber":104,"author":{"gitId":"agarwal-anjali"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":105,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":106,"author":{"gitId":"agarwal-anjali"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":107,"author":{"gitId":"agarwal-anjali"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2022-10-28"},{"lineNumber":108,"author":{"gitId":"agarwal-anjali"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2022-10-28"},{"lineNumber":109,"author":{"gitId":"agarwal-anjali"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":110,"author":{"gitId":"agarwal-anjali"},"content":"    private static Person createUpdatedPerson(Person personToUpdate,","lastModifiedDate":"2022-10-28"},{"lineNumber":111,"author":{"gitId":"agarwal-anjali"},"content":"                                              AddToCommand.UpdatePersonDescriptor updatePersonDescriptor)","lastModifiedDate":"2022-10-28"},{"lineNumber":112,"author":{"gitId":"agarwal-anjali"},"content":"            throws TagTypeNotFoundException, TagNotFoundException, DuplicateTagException, RatingAlreadyExistsException {","lastModifiedDate":"2022-10-28"},{"lineNumber":113,"author":{"gitId":"agarwal-anjali"},"content":"        assert personToUpdate !\u003d null;","lastModifiedDate":"2022-10-28"},{"lineNumber":114,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":115,"author":{"gitId":"agarwal-anjali"},"content":"        Map\u003cTagType, UniqueTagList\u003e personToEditTags \u003d personToUpdate.getTags();","lastModifiedDate":"2022-10-28"},{"lineNumber":116,"author":{"gitId":"agarwal-anjali"},"content":"        UniqueTagTypeMap original \u003d new UniqueTagTypeMap();","lastModifiedDate":"2022-10-28"},{"lineNumber":117,"author":{"gitId":"agarwal-anjali"},"content":"        original.setTagTypeMap(personToEditTags);","lastModifiedDate":"2022-10-28"},{"lineNumber":118,"author":{"gitId":"agarwal-anjali"},"content":"        UniqueTagTypeMap tagsToAdd \u003d updatePersonDescriptor.getTagTypeMap().get();","lastModifiedDate":"2022-10-28"},{"lineNumber":119,"author":{"gitId":"agarwal-anjali"},"content":"        original.mergeTagTypeMap(tagsToAdd);","lastModifiedDate":"2022-10-28"},{"lineNumber":120,"author":{"gitId":"agarwal-anjali"},"content":"        UniqueTagTypeMap updatedTags \u003d original;","lastModifiedDate":"2022-10-28"},{"lineNumber":121,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":122,"author":{"gitId":"agarwal-anjali"},"content":"        Optional\u003cNote\u003e notesToAdd \u003d updatePersonDescriptor.getNote();","lastModifiedDate":"2022-10-28"},{"lineNumber":123,"author":{"gitId":"agarwal-anjali"},"content":"        Note updatedNote \u003d personToUpdate.getNote();","lastModifiedDate":"2022-10-28"},{"lineNumber":124,"author":{"gitId":"agarwal-anjali"},"content":"        if (notesToAdd.isPresent()) {","lastModifiedDate":"2022-10-28"},{"lineNumber":125,"author":{"gitId":"agarwal-anjali"},"content":"            updatedNote \u003d personToUpdate.mergeNote(notesToAdd.get());","lastModifiedDate":"2022-10-28"},{"lineNumber":126,"author":{"gitId":"agarwal-anjali"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":127,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":128,"author":{"gitId":"agarwal-anjali"},"content":"        Optional\u003cRating\u003e ratingToAdd \u003d updatePersonDescriptor.getRating();","lastModifiedDate":"2022-10-28"},{"lineNumber":129,"author":{"gitId":"agarwal-anjali"},"content":"        Rating updatedRating \u003d personToUpdate.getRating();","lastModifiedDate":"2022-10-28"},{"lineNumber":130,"author":{"gitId":"agarwal-anjali"},"content":"        if (!updatedRating.toString().equals(\"0\")) {","lastModifiedDate":"2022-10-28"},{"lineNumber":131,"author":{"gitId":"agarwal-anjali"},"content":"            throw new RatingAlreadyExistsException();","lastModifiedDate":"2022-10-28"},{"lineNumber":132,"author":{"gitId":"agarwal-anjali"},"content":"        } else if (ratingToAdd.isPresent()) {","lastModifiedDate":"2022-10-28"},{"lineNumber":133,"author":{"gitId":"agarwal-anjali"},"content":"            updatedRating \u003d ratingToAdd.get();","lastModifiedDate":"2022-10-28"},{"lineNumber":134,"author":{"gitId":"agarwal-anjali"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":135,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":136,"author":{"gitId":"agarwal-anjali"},"content":"        Optional\u003cSet\u003cLink\u003e\u003e linksToAdd \u003d updatePersonDescriptor.getLinks();","lastModifiedDate":"2022-10-28"},{"lineNumber":137,"author":{"gitId":"agarwal-anjali"},"content":"        Set\u003cLink\u003e updatedLinks \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-28"},{"lineNumber":138,"author":{"gitId":"agarwal-anjali"},"content":"        if (linksToAdd.isPresent()) {","lastModifiedDate":"2022-10-28"},{"lineNumber":139,"author":{"gitId":"agarwal-anjali"},"content":"            updatedLinks \u003d personToUpdate.mergeLinks(linksToAdd.get());","lastModifiedDate":"2022-10-28"},{"lineNumber":140,"author":{"gitId":"agarwal-anjali"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":141,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":142,"author":{"gitId":"agarwal-anjali"},"content":"        return new Person(personToUpdate.getName(), personToUpdate.getPhone(), personToUpdate.getEmail(),","lastModifiedDate":"2022-10-28"},{"lineNumber":143,"author":{"gitId":"agarwal-anjali"},"content":"                personToUpdate.getAddress(), updatedTags, personToUpdate.getStatus(),","lastModifiedDate":"2022-10-28"},{"lineNumber":144,"author":{"gitId":"agarwal-anjali"},"content":"                updatedNote, updatedRating, updatedLinks);","lastModifiedDate":"2022-10-28"},{"lineNumber":145,"author":{"gitId":"agarwal-anjali"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":146,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":147,"author":{"gitId":"agarwal-anjali"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":148,"author":{"gitId":"agarwal-anjali"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2022-10-28"},{"lineNumber":149,"author":{"gitId":"agarwal-anjali"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2022-10-28"},{"lineNumber":150,"author":{"gitId":"agarwal-anjali"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":151,"author":{"gitId":"agarwal-anjali"},"content":"    public static class UpdatePersonDescriptor {","lastModifiedDate":"2022-10-28"},{"lineNumber":152,"author":{"gitId":"agarwal-anjali"},"content":"        private UniqueTagTypeMap tagTypeMap \u003d new UniqueTagTypeMap();","lastModifiedDate":"2022-10-28"},{"lineNumber":153,"author":{"gitId":"agarwal-anjali"},"content":"        private Note note;","lastModifiedDate":"2022-10-28"},{"lineNumber":154,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":155,"author":{"gitId":"agarwal-anjali"},"content":"        private Rating rating;","lastModifiedDate":"2022-10-28"},{"lineNumber":156,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":157,"author":{"gitId":"agarwal-anjali"},"content":"        private Set\u003cLink\u003e links;","lastModifiedDate":"2022-10-28"},{"lineNumber":158,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":159,"author":{"gitId":"agarwal-anjali"},"content":"        public UpdatePersonDescriptor() {}","lastModifiedDate":"2022-10-28"},{"lineNumber":160,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":161,"author":{"gitId":"agarwal-anjali"},"content":"        /**","lastModifiedDate":"2022-10-28"},{"lineNumber":162,"author":{"gitId":"agarwal-anjali"},"content":"         * Copy constructor.","lastModifiedDate":"2022-10-28"},{"lineNumber":163,"author":{"gitId":"agarwal-anjali"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2022-10-28"},{"lineNumber":164,"author":{"gitId":"agarwal-anjali"},"content":"         */","lastModifiedDate":"2022-10-28"},{"lineNumber":165,"author":{"gitId":"agarwal-anjali"},"content":"        public UpdatePersonDescriptor(AddToCommand.UpdatePersonDescriptor toCopy) {","lastModifiedDate":"2022-10-28"},{"lineNumber":166,"author":{"gitId":"agarwal-anjali"},"content":"            setTagTypeMap(toCopy.tagTypeMap);","lastModifiedDate":"2022-10-28"},{"lineNumber":167,"author":{"gitId":"agarwal-anjali"},"content":"            setNote(toCopy.note);","lastModifiedDate":"2022-10-28"},{"lineNumber":168,"author":{"gitId":"agarwal-anjali"},"content":"            setRating(toCopy.rating);","lastModifiedDate":"2022-10-28"},{"lineNumber":169,"author":{"gitId":"agarwal-anjali"},"content":"            setLinks(toCopy.links);","lastModifiedDate":"2022-10-28"},{"lineNumber":170,"author":{"gitId":"agarwal-anjali"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":171,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":172,"author":{"gitId":"agarwal-anjali"},"content":"        /**","lastModifiedDate":"2022-10-28"},{"lineNumber":173,"author":{"gitId":"agarwal-anjali"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2022-10-28"},{"lineNumber":174,"author":{"gitId":"agarwal-anjali"},"content":"         */","lastModifiedDate":"2022-10-28"},{"lineNumber":175,"author":{"gitId":"agarwal-anjali"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2022-10-28"},{"lineNumber":176,"author":{"gitId":"agarwal-anjali"},"content":"            if (!tagTypeMap.isEmpty()) {","lastModifiedDate":"2022-10-28"},{"lineNumber":177,"author":{"gitId":"agarwal-anjali"},"content":"                return true;","lastModifiedDate":"2022-10-28"},{"lineNumber":178,"author":{"gitId":"agarwal-anjali"},"content":"            }","lastModifiedDate":"2022-10-28"},{"lineNumber":179,"author":{"gitId":"agarwal-anjali"},"content":"            return CollectionUtil.isAnyNonNull(note, rating, links);","lastModifiedDate":"2022-10-28"},{"lineNumber":180,"author":{"gitId":"agarwal-anjali"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":181,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":182,"author":{"gitId":"agarwal-anjali"},"content":"        public void setNote(Note note) {","lastModifiedDate":"2022-10-28"},{"lineNumber":183,"author":{"gitId":"agarwal-anjali"},"content":"            this.note \u003d note;","lastModifiedDate":"2022-10-28"},{"lineNumber":184,"author":{"gitId":"agarwal-anjali"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":185,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":186,"author":{"gitId":"agarwal-anjali"},"content":"        public Optional\u003cNote\u003e getNote() {","lastModifiedDate":"2022-10-28"},{"lineNumber":187,"author":{"gitId":"agarwal-anjali"},"content":"            return Optional.ofNullable(note);","lastModifiedDate":"2022-10-28"},{"lineNumber":188,"author":{"gitId":"agarwal-anjali"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":189,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":190,"author":{"gitId":"agarwal-anjali"},"content":"        /**","lastModifiedDate":"2022-10-28"},{"lineNumber":191,"author":{"gitId":"agarwal-anjali"},"content":"         * Sets {@code newTagTypeMap} to this object\u0027s {@code newTagTypeMap}.","lastModifiedDate":"2022-10-28"},{"lineNumber":192,"author":{"gitId":"agarwal-anjali"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2022-10-28"},{"lineNumber":193,"author":{"gitId":"agarwal-anjali"},"content":"         */","lastModifiedDate":"2022-10-28"},{"lineNumber":194,"author":{"gitId":"agarwal-anjali"},"content":"        public void setTagTypeMap(UniqueTagTypeMap tagTypeMap) {","lastModifiedDate":"2022-10-28"},{"lineNumber":195,"author":{"gitId":"agarwal-anjali"},"content":"            this.tagTypeMap \u003d tagTypeMap;","lastModifiedDate":"2022-10-28"},{"lineNumber":196,"author":{"gitId":"agarwal-anjali"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":197,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":198,"author":{"gitId":"agarwal-anjali"},"content":"        /**","lastModifiedDate":"2022-10-28"},{"lineNumber":199,"author":{"gitId":"agarwal-anjali"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2022-10-28"},{"lineNumber":200,"author":{"gitId":"agarwal-anjali"},"content":"         * if modification is attempted.","lastModifiedDate":"2022-10-28"},{"lineNumber":201,"author":{"gitId":"agarwal-anjali"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2022-10-28"},{"lineNumber":202,"author":{"gitId":"agarwal-anjali"},"content":"         */","lastModifiedDate":"2022-10-28"},{"lineNumber":203,"author":{"gitId":"agarwal-anjali"},"content":"        public Optional\u003cUniqueTagTypeMap\u003e getTagTypeMap() {","lastModifiedDate":"2022-10-28"},{"lineNumber":204,"author":{"gitId":"agarwal-anjali"},"content":"            return (tagTypeMap !\u003d null) ? Optional.of(tagTypeMap) : Optional.empty();","lastModifiedDate":"2022-10-28"},{"lineNumber":205,"author":{"gitId":"agarwal-anjali"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":206,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":207,"author":{"gitId":"agarwal-anjali"},"content":"        public Optional\u003cRating\u003e getRating() {","lastModifiedDate":"2022-10-28"},{"lineNumber":208,"author":{"gitId":"agarwal-anjali"},"content":"            return Optional.ofNullable(rating);","lastModifiedDate":"2022-10-28"},{"lineNumber":209,"author":{"gitId":"agarwal-anjali"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":210,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":211,"author":{"gitId":"agarwal-anjali"},"content":"        public void setRating(Rating rating) {","lastModifiedDate":"2022-10-28"},{"lineNumber":212,"author":{"gitId":"agarwal-anjali"},"content":"            this.rating \u003d rating;","lastModifiedDate":"2022-10-28"},{"lineNumber":213,"author":{"gitId":"agarwal-anjali"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":214,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":215,"author":{"gitId":"agarwal-anjali"},"content":"        public void setLinks(Set\u003cLink\u003e links) {","lastModifiedDate":"2022-10-28"},{"lineNumber":216,"author":{"gitId":"agarwal-anjali"},"content":"            this.links \u003d links;","lastModifiedDate":"2022-10-28"},{"lineNumber":217,"author":{"gitId":"agarwal-anjali"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":218,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":219,"author":{"gitId":"agarwal-anjali"},"content":"        public Optional\u003cSet\u003cLink\u003e\u003e getLinks() {","lastModifiedDate":"2022-10-28"},{"lineNumber":220,"author":{"gitId":"agarwal-anjali"},"content":"            return Optional.ofNullable(links);","lastModifiedDate":"2022-10-28"},{"lineNumber":221,"author":{"gitId":"agarwal-anjali"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":222,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":223,"author":{"gitId":"agarwal-anjali"},"content":"        @Override","lastModifiedDate":"2022-10-28"},{"lineNumber":224,"author":{"gitId":"agarwal-anjali"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2022-10-28"},{"lineNumber":225,"author":{"gitId":"agarwal-anjali"},"content":"            // short circuit if same object","lastModifiedDate":"2022-10-28"},{"lineNumber":226,"author":{"gitId":"agarwal-anjali"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-28"},{"lineNumber":227,"author":{"gitId":"agarwal-anjali"},"content":"                return true;","lastModifiedDate":"2022-10-28"},{"lineNumber":228,"author":{"gitId":"agarwal-anjali"},"content":"            }","lastModifiedDate":"2022-10-28"},{"lineNumber":229,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":230,"author":{"gitId":"agarwal-anjali"},"content":"            // instanceof handles nulls","lastModifiedDate":"2022-10-28"},{"lineNumber":231,"author":{"gitId":"agarwal-anjali"},"content":"            if (!(other instanceof AddToCommand.UpdatePersonDescriptor)) {","lastModifiedDate":"2022-10-28"},{"lineNumber":232,"author":{"gitId":"agarwal-anjali"},"content":"                return false;","lastModifiedDate":"2022-10-28"},{"lineNumber":233,"author":{"gitId":"agarwal-anjali"},"content":"            }","lastModifiedDate":"2022-10-28"},{"lineNumber":234,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":235,"author":{"gitId":"agarwal-anjali"},"content":"            // state check","lastModifiedDate":"2022-10-28"},{"lineNumber":236,"author":{"gitId":"agarwal-anjali"},"content":"            AddToCommand.UpdatePersonDescriptor u \u003d (AddToCommand.UpdatePersonDescriptor) other;","lastModifiedDate":"2022-10-28"},{"lineNumber":237,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":238,"author":{"gitId":"agarwal-anjali"},"content":"            return getTagTypeMap().equals(u.getTagTypeMap())","lastModifiedDate":"2022-10-28"},{"lineNumber":239,"author":{"gitId":"agarwal-anjali"},"content":"                    \u0026\u0026 getNote().equals(u.getNote())","lastModifiedDate":"2022-10-28"},{"lineNumber":240,"author":{"gitId":"agarwal-anjali"},"content":"                    \u0026\u0026 getRating().equals(u.getRating())","lastModifiedDate":"2022-10-28"},{"lineNumber":241,"author":{"gitId":"agarwal-anjali"},"content":"                    \u0026\u0026 getLinks().equals(u.getLinks());","lastModifiedDate":"2022-10-28"},{"lineNumber":242,"author":{"gitId":"agarwal-anjali"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":243,"author":{"gitId":"agarwal-anjali"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":244,"author":{"gitId":"agarwal-anjali"},"content":"}","lastModifiedDate":"2022-10-28"}],"authorContributionMap":{"agarwal-anjali":244}},{"path":"src/main/java/seedu/clinkedin/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.logic.commands;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.AddressBook;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.Model;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2022-10-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"josephaedan"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"josephaedan"},"content":"            + \": Clears all entries from the address book.\\n\"","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"josephaedan"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Address book has been cleared!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        model.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"emptygx":3,"josephaedan":5,"-":20}},{"path":"src/main/java/seedu/clinkedin/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.logic.commands;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.Model;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"emptygx":3,"-":17}},{"path":"src/main/java/seedu/clinkedin/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.logic.commands;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"emptygx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-28"},{"lineNumber":6,"author":{"gitId":"emptygx"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-10-28"},{"lineNumber":7,"author":{"gitId":"emptygx"},"content":"import java.util.List;","lastModifiedDate":"2022-10-28"},{"lineNumber":8,"author":{"gitId":"emptygx"},"content":"import java.util.Map;","lastModifiedDate":"2022-10-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"emptygx"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-28"},{"lineNumber":12,"author":{"gitId":"emptygx"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-28"},{"lineNumber":13,"author":{"gitId":"emptygx"},"content":"import javafx.scene.chart.PieChart;","lastModifiedDate":"2022-10-28"},{"lineNumber":14,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"emptygx"},"content":"    private final Map\u003cString, Map\u003cString, Integer\u003e\u003e stats;","lastModifiedDate":"2022-10-28"},{"lineNumber":23,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"pratham31012002"},"content":"    /** Export Window should open. */","lastModifiedDate":"2022-10-24"},{"lineNumber":31,"author":{"gitId":"pratham31012002"},"content":"    private final boolean isExport;","lastModifiedDate":"2022-10-24"},{"lineNumber":32,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":33,"author":{"gitId":"pratham31012002"},"content":"    /** Import Window should open. */","lastModifiedDate":"2022-10-26"},{"lineNumber":34,"author":{"gitId":"pratham31012002"},"content":"    private final boolean isImport;","lastModifiedDate":"2022-10-26"},{"lineNumber":35,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"emptygx"},"content":"        this(feedbackToUser, showHelp, exit, false, false, new HashMap\u003c\u003e());","lastModifiedDate":"2022-10-28"},{"lineNumber":41,"author":{"gitId":"pratham31012002"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":42,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":43,"author":{"gitId":"pratham31012002"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":44,"author":{"gitId":"pratham31012002"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2022-10-24"},{"lineNumber":45,"author":{"gitId":"pratham31012002"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":46,"author":{"gitId":"pratham31012002"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit, boolean isExport) {","lastModifiedDate":"2022-10-24"},{"lineNumber":47,"author":{"gitId":"emptygx"},"content":"        this(feedbackToUser, showHelp, exit, isExport, false, new HashMap\u003c\u003e());","lastModifiedDate":"2022-10-28"},{"lineNumber":48,"author":{"gitId":"pratham31012002"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":49,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":50,"author":{"gitId":"pratham31012002"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":51,"author":{"gitId":"pratham31012002"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2022-10-26"},{"lineNumber":52,"author":{"gitId":"pratham31012002"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":53,"author":{"gitId":"pratham31012002"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit, boolean isExport, boolean isImport) {","lastModifiedDate":"2022-10-26"},{"lineNumber":54,"author":{"gitId":"emptygx"},"content":"        this(feedbackToUser, showHelp, exit, isExport, isImport, new HashMap\u003c\u003e());","lastModifiedDate":"2022-10-28"},{"lineNumber":55,"author":{"gitId":"emptygx"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":56,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":57,"author":{"gitId":"emptygx"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":58,"author":{"gitId":"emptygx"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser} and {@code stats}.","lastModifiedDate":"2022-10-28"},{"lineNumber":59,"author":{"gitId":"emptygx"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":60,"author":{"gitId":"emptygx"},"content":"    public CommandResult(String feedbackToUser, Map\u003cString, Map\u003cString, Integer\u003e\u003e stats) {","lastModifiedDate":"2022-10-28"},{"lineNumber":61,"author":{"gitId":"emptygx"},"content":"        this(feedbackToUser, false, false, false, false, stats);","lastModifiedDate":"2022-10-28"},{"lineNumber":62,"author":{"gitId":"emptygx"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":63,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":64,"author":{"gitId":"emptygx"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":65,"author":{"gitId":"emptygx"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2022-10-28"},{"lineNumber":66,"author":{"gitId":"emptygx"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":67,"author":{"gitId":"emptygx"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit, boolean isExport, boolean isImport,","lastModifiedDate":"2022-10-28"},{"lineNumber":68,"author":{"gitId":"emptygx"},"content":"                         Map\u003cString, Map\u003cString, Integer\u003e\u003e stats) {","lastModifiedDate":"2022-10-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"pratham31012002"},"content":"        this.isExport \u003d isExport;","lastModifiedDate":"2022-10-24"},{"lineNumber":73,"author":{"gitId":"pratham31012002"},"content":"        this.isImport \u003d isImport;","lastModifiedDate":"2022-10-26"},{"lineNumber":74,"author":{"gitId":"emptygx"},"content":"        this.stats \u003d stats;","lastModifiedDate":"2022-10-28"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"emptygx"},"content":"        this(feedbackToUser, false, false, false, false,","lastModifiedDate":"2022-10-28"},{"lineNumber":83,"author":{"gitId":"emptygx"},"content":"                new HashMap\u003c\u003e());","lastModifiedDate":"2022-10-28"},{"lineNumber":84,"author":{"gitId":"emptygx"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":85,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":86,"author":{"gitId":"emptygx"},"content":"    public List\u003cString\u003e getStatsTitles() {","lastModifiedDate":"2022-10-28"},{"lineNumber":87,"author":{"gitId":"emptygx"},"content":"        return new ArrayList\u003c\u003e(stats.keySet());","lastModifiedDate":"2022-10-28"},{"lineNumber":88,"author":{"gitId":"emptygx"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":89,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":90,"author":{"gitId":"emptygx"},"content":"    public List\u003cObservableList\u003cPieChart.Data\u003e\u003e getPieChartStats() {","lastModifiedDate":"2022-10-28"},{"lineNumber":91,"author":{"gitId":"emptygx"},"content":"        if (stats.isEmpty()) {","lastModifiedDate":"2022-10-28"},{"lineNumber":92,"author":{"gitId":"emptygx"},"content":"            return null;","lastModifiedDate":"2022-10-28"},{"lineNumber":93,"author":{"gitId":"emptygx"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":94,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":95,"author":{"gitId":"emptygx"},"content":"        List\u003cObservableList\u003cPieChart.Data\u003e\u003e datas \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-28"},{"lineNumber":96,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":97,"author":{"gitId":"emptygx"},"content":"        for (Map.Entry\u003cString, Map\u003cString, Integer\u003e\u003e entry : stats.entrySet()) {","lastModifiedDate":"2022-10-28"},{"lineNumber":98,"author":{"gitId":"emptygx"},"content":"            ObservableList\u003cPieChart.Data\u003e pieChartData \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-28"},{"lineNumber":99,"author":{"gitId":"emptygx"},"content":"            for (Map.Entry\u003cString, Integer\u003e entry2 : entry.getValue().entrySet()) {","lastModifiedDate":"2022-10-28"},{"lineNumber":100,"author":{"gitId":"emptygx"},"content":"                pieChartData.add(new PieChart.Data(entry2.getKey(), entry2.getValue()));","lastModifiedDate":"2022-10-28"},{"lineNumber":101,"author":{"gitId":"emptygx"},"content":"            }","lastModifiedDate":"2022-10-28"},{"lineNumber":102,"author":{"gitId":"emptygx"},"content":"            datas.add(pieChartData);","lastModifiedDate":"2022-10-28"},{"lineNumber":103,"author":{"gitId":"emptygx"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":104,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":105,"author":{"gitId":"emptygx"},"content":"        return datas;","lastModifiedDate":"2022-10-28"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":112,"author":{"gitId":"emptygx"},"content":"    public boolean isShowStats() {","lastModifiedDate":"2022-10-28"},{"lineNumber":113,"author":{"gitId":"emptygx"},"content":"        return !stats.isEmpty();","lastModifiedDate":"2022-10-28"},{"lineNumber":114,"author":{"gitId":"emptygx"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":115,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":116,"author":{"gitId":"emptygx"},"content":"    public boolean isShowFeedback() {","lastModifiedDate":"2022-10-28"},{"lineNumber":117,"author":{"gitId":"emptygx"},"content":"        return stats.isEmpty();","lastModifiedDate":"2022-10-28"},{"lineNumber":118,"author":{"gitId":"emptygx"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":119,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":128,"author":{"gitId":"pratham31012002"},"content":"    public boolean isExport() {","lastModifiedDate":"2022-10-24"},{"lineNumber":129,"author":{"gitId":"pratham31012002"},"content":"        return isExport;","lastModifiedDate":"2022-10-24"},{"lineNumber":130,"author":{"gitId":"pratham31012002"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":131,"author":{"gitId":"pratham31012002"},"content":"    public boolean isImport() {","lastModifiedDate":"2022-10-26"},{"lineNumber":132,"author":{"gitId":"pratham31012002"},"content":"        return isImport;","lastModifiedDate":"2022-10-26"},{"lineNumber":133,"author":{"gitId":"pratham31012002"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":134,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":147,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":149,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"emptygx":62,"pratham31012002":28,"-":68}},{"path":"src/main/java/seedu/clinkedin/logic/commands/CreateTagTypeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.logic.commands;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":3,"author":{"gitId":"pratham31012002"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.logic.parser.Prefix;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.logic.parser.exceptions.DuplicatePrefixException;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.Model;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.UniqueTagTypeMap;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.exceptions.DuplicateTagTypeException;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.tag.TagType;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":13,"author":{"gitId":"agarwal-anjali"},"content":"/**","lastModifiedDate":"2022-10-07"},{"lineNumber":14,"author":{"gitId":"agarwal-anjali"},"content":" * Creates a new tag type.","lastModifiedDate":"2022-10-07"},{"lineNumber":15,"author":{"gitId":"agarwal-anjali"},"content":" */","lastModifiedDate":"2022-10-07"},{"lineNumber":16,"author":{"gitId":"agarwal-anjali"},"content":"public class CreateTagTypeCommand extends Command {","lastModifiedDate":"2022-10-07"},{"lineNumber":17,"author":{"gitId":"agarwal-anjali"},"content":"    public static final String COMMAND_WORD \u003d \"createtagtype\";","lastModifiedDate":"2022-10-19"},{"lineNumber":18,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":19,"author":{"gitId":"agarwal-anjali"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Creates a new tag type so that you can add a tag \"","lastModifiedDate":"2022-10-07"},{"lineNumber":20,"author":{"gitId":"agarwal-anjali"},"content":"            + \"of a specific tag type to persons.\\n\"","lastModifiedDate":"2022-10-07"},{"lineNumber":21,"author":{"gitId":"agarwal-anjali"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-10-07"},{"lineNumber":22,"author":{"gitId":"agarwal-anjali"},"content":"            + \"TAG_TYPE TAG_ALIAS\\n\"","lastModifiedDate":"2022-10-07"},{"lineNumber":23,"author":{"gitId":"agarwal-anjali"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-07"},{"lineNumber":24,"author":{"gitId":"pratham31012002"},"content":"            + \"Grade grdt\";","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":26,"author":{"gitId":"agarwal-anjali"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New tag type created: %1$s\";","lastModifiedDate":"2022-10-07"},{"lineNumber":27,"author":{"gitId":"agarwal-anjali"},"content":"    public static final String MESSAGE_DUPLICATE_TAG_TYPE \u003d \"This tag type already exists\";","lastModifiedDate":"2022-10-07"},{"lineNumber":28,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":29,"author":{"gitId":"agarwal-anjali"},"content":"    private final TagType toAdd;","lastModifiedDate":"2022-10-07"},{"lineNumber":30,"author":{"gitId":"agarwal-anjali"},"content":"    private final Prefix prefix;","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":32,"author":{"gitId":"agarwal-anjali"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":33,"author":{"gitId":"agarwal-anjali"},"content":"     * Creates a CreateTagTypeCommand to add the specified {@code TagType}","lastModifiedDate":"2022-10-07"},{"lineNumber":34,"author":{"gitId":"agarwal-anjali"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":35,"author":{"gitId":"agarwal-anjali"},"content":"    public CreateTagTypeCommand(TagType toAdd, Prefix prefix) {","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"agarwal-anjali"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"ytingtan"},"content":"        requireNonNull(prefix);","lastModifiedDate":"2022-10-17"},{"lineNumber":38,"author":{"gitId":"agarwal-anjali"},"content":"        this.toAdd \u003d toAdd;","lastModifiedDate":"2022-10-07"},{"lineNumber":39,"author":{"gitId":"agarwal-anjali"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"agarwal-anjali"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":41,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":42,"author":{"gitId":"agarwal-anjali"},"content":"    @Override","lastModifiedDate":"2022-10-07"},{"lineNumber":43,"author":{"gitId":"agarwal-anjali"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-07"},{"lineNumber":44,"author":{"gitId":"agarwal-anjali"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"agarwal-anjali"},"content":"        try {","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"agarwal-anjali"},"content":"            UniqueTagTypeMap.createTagType(prefix, toAdd);","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"agarwal-anjali"},"content":"        } catch (DuplicatePrefixException | DuplicateTagTypeException d) {","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"agarwal-anjali"},"content":"            throw new CommandException(d.getMessage());","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"agarwal-anjali"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"agarwal-anjali"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"agarwal-anjali"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":52,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":53,"author":{"gitId":"agarwal-anjali"},"content":"    @Override","lastModifiedDate":"2022-10-07"},{"lineNumber":54,"author":{"gitId":"agarwal-anjali"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-07"},{"lineNumber":55,"author":{"gitId":"agarwal-anjali"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-07"},{"lineNumber":56,"author":{"gitId":"agarwal-anjali"},"content":"                || (other instanceof CreateTagTypeCommand // instanceof handles nulls","lastModifiedDate":"2022-10-07"},{"lineNumber":57,"author":{"gitId":"agarwal-anjali"},"content":"                \u0026\u0026 toAdd.equals(((CreateTagTypeCommand) other).toAdd));","lastModifiedDate":"2022-10-07"},{"lineNumber":58,"author":{"gitId":"agarwal-anjali"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":59,"author":{"gitId":"agarwal-anjali"},"content":"}","lastModifiedDate":"2022-10-07"}],"authorContributionMap":{"agarwal-anjali":47,"ytingtan":1,"emptygx":8,"pratham31012002":3}},{"path":"src/main/java/seedu/clinkedin/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.logic.commands;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.commons.core.Messages;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.commons.core.index.Index;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.Model;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.Person;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2022-10-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \": Deletes the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, personToDelete));","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"emptygx":6,"-":47}},{"path":"src/main/java/seedu/clinkedin/logic/commands/DeleteLinkCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"agarwal-anjali"},"content":"package seedu.clinkedin.logic.commands;","lastModifiedDate":"2022-10-28"},{"lineNumber":2,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":3,"author":{"gitId":"agarwal-anjali"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-28"},{"lineNumber":4,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":5,"author":{"gitId":"agarwal-anjali"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-28"},{"lineNumber":6,"author":{"gitId":"agarwal-anjali"},"content":"import java.util.List;","lastModifiedDate":"2022-10-28"},{"lineNumber":7,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":8,"author":{"gitId":"agarwal-anjali"},"content":"import seedu.clinkedin.commons.core.Messages;","lastModifiedDate":"2022-10-28"},{"lineNumber":9,"author":{"gitId":"agarwal-anjali"},"content":"import seedu.clinkedin.commons.core.index.Index;","lastModifiedDate":"2022-10-28"},{"lineNumber":10,"author":{"gitId":"agarwal-anjali"},"content":"import seedu.clinkedin.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-28"},{"lineNumber":11,"author":{"gitId":"agarwal-anjali"},"content":"import seedu.clinkedin.model.Model;","lastModifiedDate":"2022-10-28"},{"lineNumber":12,"author":{"gitId":"agarwal-anjali"},"content":"import seedu.clinkedin.model.person.Person;","lastModifiedDate":"2022-10-28"},{"lineNumber":13,"author":{"gitId":"agarwal-anjali"},"content":"import seedu.clinkedin.model.person.UniqueTagTypeMap;","lastModifiedDate":"2022-10-28"},{"lineNumber":14,"author":{"gitId":"agarwal-anjali"},"content":"import seedu.clinkedin.model.person.exceptions.TagTypeNotFoundException;","lastModifiedDate":"2022-10-28"},{"lineNumber":15,"author":{"gitId":"agarwal-anjali"},"content":"import seedu.clinkedin.model.tag.exceptions.TagNotFoundException;","lastModifiedDate":"2022-10-28"},{"lineNumber":16,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"agarwal-anjali"},"content":"/**","lastModifiedDate":"2022-10-28"},{"lineNumber":18,"author":{"gitId":"agarwal-anjali"},"content":" * Deletes links of a person.","lastModifiedDate":"2022-10-28"},{"lineNumber":19,"author":{"gitId":"agarwal-anjali"},"content":" */","lastModifiedDate":"2022-10-28"},{"lineNumber":20,"author":{"gitId":"agarwal-anjali"},"content":"public class DeleteLinkCommand extends Command {","lastModifiedDate":"2022-10-28"},{"lineNumber":21,"author":{"gitId":"agarwal-anjali"},"content":"    public static final String COMMAND_WORD \u003d \"deletelink\";","lastModifiedDate":"2022-10-28"},{"lineNumber":22,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":23,"author":{"gitId":"agarwal-anjali"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-28"},{"lineNumber":24,"author":{"gitId":"agarwal-anjali"},"content":"            + \": Deletes the links for the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2022-10-28"},{"lineNumber":25,"author":{"gitId":"agarwal-anjali"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2022-10-28"},{"lineNumber":26,"author":{"gitId":"agarwal-anjali"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-28"},{"lineNumber":27,"author":{"gitId":"agarwal-anjali"},"content":"            + \"1 \";","lastModifiedDate":"2022-10-28"},{"lineNumber":28,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":29,"author":{"gitId":"agarwal-anjali"},"content":"    public static final String MESSAGE_DELETE_LINK_SUCCESS \u003d \"Deleted links for the person: %1$s\";","lastModifiedDate":"2022-10-28"},{"lineNumber":30,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":31,"author":{"gitId":"agarwal-anjali"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists\";","lastModifiedDate":"2022-10-28"},{"lineNumber":32,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":33,"author":{"gitId":"agarwal-anjali"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-10-28"},{"lineNumber":34,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":35,"author":{"gitId":"agarwal-anjali"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":36,"author":{"gitId":"agarwal-anjali"},"content":"     * Creates an DeleteNoteCommand to delete the specified {@code Note} of a person at the specified {@code Index}","lastModifiedDate":"2022-10-28"},{"lineNumber":37,"author":{"gitId":"agarwal-anjali"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":38,"author":{"gitId":"agarwal-anjali"},"content":"    public DeleteLinkCommand(Index targetIndex) {","lastModifiedDate":"2022-10-28"},{"lineNumber":39,"author":{"gitId":"agarwal-anjali"},"content":"        requireNonNull(targetIndex);","lastModifiedDate":"2022-10-28"},{"lineNumber":40,"author":{"gitId":"agarwal-anjali"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-10-28"},{"lineNumber":41,"author":{"gitId":"agarwal-anjali"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":42,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":43,"author":{"gitId":"agarwal-anjali"},"content":"    @Override","lastModifiedDate":"2022-10-28"},{"lineNumber":44,"author":{"gitId":"agarwal-anjali"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-28"},{"lineNumber":45,"author":{"gitId":"agarwal-anjali"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-28"},{"lineNumber":46,"author":{"gitId":"agarwal-anjali"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-10-28"},{"lineNumber":47,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":48,"author":{"gitId":"agarwal-anjali"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-28"},{"lineNumber":49,"author":{"gitId":"agarwal-anjali"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-28"},{"lineNumber":50,"author":{"gitId":"agarwal-anjali"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":51,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":52,"author":{"gitId":"agarwal-anjali"},"content":"        try {","lastModifiedDate":"2022-10-28"},{"lineNumber":53,"author":{"gitId":"agarwal-anjali"},"content":"            Person personToUpdate \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-28"},{"lineNumber":54,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":55,"author":{"gitId":"agarwal-anjali"},"content":"            UniqueTagTypeMap tagMap \u003d new UniqueTagTypeMap();","lastModifiedDate":"2022-10-28"},{"lineNumber":56,"author":{"gitId":"agarwal-anjali"},"content":"            tagMap.setTagTypeMap(personToUpdate.getTags());","lastModifiedDate":"2022-10-28"},{"lineNumber":57,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":58,"author":{"gitId":"agarwal-anjali"},"content":"            Person updatedPerson \u003d new Person(personToUpdate.getName(), personToUpdate.getPhone(),","lastModifiedDate":"2022-10-28"},{"lineNumber":59,"author":{"gitId":"agarwal-anjali"},"content":"                    personToUpdate.getEmail(), personToUpdate.getAddress(), tagMap,","lastModifiedDate":"2022-10-28"},{"lineNumber":60,"author":{"gitId":"agarwal-anjali"},"content":"                    personToUpdate.getStatus(), personToUpdate.getNote(), personToUpdate.getRating(), new HashSet\u003c\u003e());","lastModifiedDate":"2022-10-28"},{"lineNumber":61,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":62,"author":{"gitId":"agarwal-anjali"},"content":"            if (!personToUpdate.isSamePerson(updatedPerson) \u0026\u0026 model.hasPerson(updatedPerson)) {","lastModifiedDate":"2022-10-28"},{"lineNumber":63,"author":{"gitId":"agarwal-anjali"},"content":"                throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2022-10-28"},{"lineNumber":64,"author":{"gitId":"agarwal-anjali"},"content":"            }","lastModifiedDate":"2022-10-28"},{"lineNumber":65,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":66,"author":{"gitId":"agarwal-anjali"},"content":"            model.setPerson(personToUpdate, updatedPerson);","lastModifiedDate":"2022-10-28"},{"lineNumber":67,"author":{"gitId":"agarwal-anjali"},"content":"            return new CommandResult(String.format(MESSAGE_DELETE_LINK_SUCCESS, updatedPerson));","lastModifiedDate":"2022-10-28"},{"lineNumber":68,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":69,"author":{"gitId":"agarwal-anjali"},"content":"        } catch (TagTypeNotFoundException | TagNotFoundException t) {","lastModifiedDate":"2022-10-28"},{"lineNumber":70,"author":{"gitId":"agarwal-anjali"},"content":"            throw new CommandException(t.getMessage());","lastModifiedDate":"2022-10-28"},{"lineNumber":71,"author":{"gitId":"agarwal-anjali"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":72,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":73,"author":{"gitId":"agarwal-anjali"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":74,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":75,"author":{"gitId":"agarwal-anjali"},"content":"    @Override","lastModifiedDate":"2022-10-28"},{"lineNumber":76,"author":{"gitId":"agarwal-anjali"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-28"},{"lineNumber":77,"author":{"gitId":"agarwal-anjali"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-28"},{"lineNumber":78,"author":{"gitId":"agarwal-anjali"},"content":"                || (other instanceof DeleteLinkCommand // instanceof handles nulls","lastModifiedDate":"2022-10-28"},{"lineNumber":79,"author":{"gitId":"agarwal-anjali"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteLinkCommand) other).targetIndex));","lastModifiedDate":"2022-10-28"},{"lineNumber":80,"author":{"gitId":"agarwal-anjali"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":81,"author":{"gitId":"agarwal-anjali"},"content":"}","lastModifiedDate":"2022-10-28"}],"authorContributionMap":{"agarwal-anjali":81}},{"path":"src/main/java/seedu/clinkedin/logic/commands/DeleteNoteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"agarwal-anjali"},"content":"package seedu.clinkedin.logic.commands;","lastModifiedDate":"2022-10-28"},{"lineNumber":2,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":3,"author":{"gitId":"agarwal-anjali"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-28"},{"lineNumber":4,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":5,"author":{"gitId":"agarwal-anjali"},"content":"import java.util.List;","lastModifiedDate":"2022-10-28"},{"lineNumber":6,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":7,"author":{"gitId":"agarwal-anjali"},"content":"import seedu.clinkedin.commons.core.Messages;","lastModifiedDate":"2022-10-28"},{"lineNumber":8,"author":{"gitId":"agarwal-anjali"},"content":"import seedu.clinkedin.commons.core.index.Index;","lastModifiedDate":"2022-10-28"},{"lineNumber":9,"author":{"gitId":"agarwal-anjali"},"content":"import seedu.clinkedin.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-28"},{"lineNumber":10,"author":{"gitId":"agarwal-anjali"},"content":"import seedu.clinkedin.model.Model;","lastModifiedDate":"2022-10-28"},{"lineNumber":11,"author":{"gitId":"agarwal-anjali"},"content":"import seedu.clinkedin.model.person.Note;","lastModifiedDate":"2022-10-28"},{"lineNumber":12,"author":{"gitId":"agarwal-anjali"},"content":"import seedu.clinkedin.model.person.Person;","lastModifiedDate":"2022-10-28"},{"lineNumber":13,"author":{"gitId":"agarwal-anjali"},"content":"import seedu.clinkedin.model.person.UniqueTagTypeMap;","lastModifiedDate":"2022-10-28"},{"lineNumber":14,"author":{"gitId":"agarwal-anjali"},"content":"import seedu.clinkedin.model.person.exceptions.TagTypeNotFoundException;","lastModifiedDate":"2022-10-28"},{"lineNumber":15,"author":{"gitId":"agarwal-anjali"},"content":"import seedu.clinkedin.model.tag.exceptions.TagNotFoundException;","lastModifiedDate":"2022-10-28"},{"lineNumber":16,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"agarwal-anjali"},"content":"/**","lastModifiedDate":"2022-10-28"},{"lineNumber":18,"author":{"gitId":"agarwal-anjali"},"content":" * Deletes notes for a person.","lastModifiedDate":"2022-10-28"},{"lineNumber":19,"author":{"gitId":"agarwal-anjali"},"content":" */","lastModifiedDate":"2022-10-28"},{"lineNumber":20,"author":{"gitId":"agarwal-anjali"},"content":"public class DeleteNoteCommand extends Command {","lastModifiedDate":"2022-10-28"},{"lineNumber":21,"author":{"gitId":"agarwal-anjali"},"content":"    public static final String COMMAND_WORD \u003d \"deletenote\";","lastModifiedDate":"2022-10-28"},{"lineNumber":22,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":23,"author":{"gitId":"agarwal-anjali"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-28"},{"lineNumber":24,"author":{"gitId":"agarwal-anjali"},"content":"            + \": Deletes the note for the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2022-10-28"},{"lineNumber":25,"author":{"gitId":"agarwal-anjali"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2022-10-28"},{"lineNumber":26,"author":{"gitId":"agarwal-anjali"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-28"},{"lineNumber":27,"author":{"gitId":"agarwal-anjali"},"content":"            + \"1 \";","lastModifiedDate":"2022-10-28"},{"lineNumber":28,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":29,"author":{"gitId":"agarwal-anjali"},"content":"    public static final String MESSAGE_DELETE_NOTE_SUCCESS \u003d \"Deleted note for the person: %1$s\";","lastModifiedDate":"2022-10-28"},{"lineNumber":30,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":31,"author":{"gitId":"agarwal-anjali"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists\";","lastModifiedDate":"2022-10-28"},{"lineNumber":32,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":33,"author":{"gitId":"agarwal-anjali"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-10-28"},{"lineNumber":34,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":35,"author":{"gitId":"agarwal-anjali"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":36,"author":{"gitId":"agarwal-anjali"},"content":"     * Creates an DeleteNoteCommand to delete the specified {@code Note} of a person at the specified {@code Index}","lastModifiedDate":"2022-10-28"},{"lineNumber":37,"author":{"gitId":"agarwal-anjali"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":38,"author":{"gitId":"agarwal-anjali"},"content":"    public DeleteNoteCommand(Index targetIndex) {","lastModifiedDate":"2022-10-28"},{"lineNumber":39,"author":{"gitId":"agarwal-anjali"},"content":"        requireNonNull(targetIndex);","lastModifiedDate":"2022-10-28"},{"lineNumber":40,"author":{"gitId":"agarwal-anjali"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-10-28"},{"lineNumber":41,"author":{"gitId":"agarwal-anjali"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":42,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":43,"author":{"gitId":"agarwal-anjali"},"content":"    @Override","lastModifiedDate":"2022-10-28"},{"lineNumber":44,"author":{"gitId":"agarwal-anjali"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-28"},{"lineNumber":45,"author":{"gitId":"agarwal-anjali"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-28"},{"lineNumber":46,"author":{"gitId":"agarwal-anjali"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-10-28"},{"lineNumber":47,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":48,"author":{"gitId":"agarwal-anjali"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-28"},{"lineNumber":49,"author":{"gitId":"agarwal-anjali"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-28"},{"lineNumber":50,"author":{"gitId":"agarwal-anjali"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":51,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":52,"author":{"gitId":"agarwal-anjali"},"content":"        try {","lastModifiedDate":"2022-10-28"},{"lineNumber":53,"author":{"gitId":"agarwal-anjali"},"content":"            Person personToUpdate \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-28"},{"lineNumber":54,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":55,"author":{"gitId":"agarwal-anjali"},"content":"            UniqueTagTypeMap tagMap \u003d new UniqueTagTypeMap();","lastModifiedDate":"2022-10-28"},{"lineNumber":56,"author":{"gitId":"agarwal-anjali"},"content":"            tagMap.setTagTypeMap(personToUpdate.getTags());","lastModifiedDate":"2022-10-28"},{"lineNumber":57,"author":{"gitId":"agarwal-anjali"},"content":"            Person updatedPerson \u003d new Person(personToUpdate.getName(), personToUpdate.getPhone(),","lastModifiedDate":"2022-10-28"},{"lineNumber":58,"author":{"gitId":"agarwal-anjali"},"content":"                    personToUpdate.getEmail(), personToUpdate.getAddress(), tagMap,","lastModifiedDate":"2022-10-28"},{"lineNumber":59,"author":{"gitId":"agarwal-anjali"},"content":"                    personToUpdate.getStatus(), new Note(\"\"), personToUpdate.getRating(),","lastModifiedDate":"2022-10-28"},{"lineNumber":60,"author":{"gitId":"agarwal-anjali"},"content":"                    personToUpdate.getLinks());","lastModifiedDate":"2022-10-28"},{"lineNumber":61,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":62,"author":{"gitId":"agarwal-anjali"},"content":"            if (!personToUpdate.isSamePerson(updatedPerson) \u0026\u0026 model.hasPerson(updatedPerson)) {","lastModifiedDate":"2022-10-28"},{"lineNumber":63,"author":{"gitId":"agarwal-anjali"},"content":"                throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2022-10-28"},{"lineNumber":64,"author":{"gitId":"agarwal-anjali"},"content":"            }","lastModifiedDate":"2022-10-28"},{"lineNumber":65,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":66,"author":{"gitId":"agarwal-anjali"},"content":"            model.setPerson(personToUpdate, updatedPerson);","lastModifiedDate":"2022-10-28"},{"lineNumber":67,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":68,"author":{"gitId":"agarwal-anjali"},"content":"            return new CommandResult(String.format(MESSAGE_DELETE_NOTE_SUCCESS, updatedPerson));","lastModifiedDate":"2022-10-28"},{"lineNumber":69,"author":{"gitId":"agarwal-anjali"},"content":"        } catch (TagTypeNotFoundException | TagNotFoundException t) {","lastModifiedDate":"2022-10-28"},{"lineNumber":70,"author":{"gitId":"agarwal-anjali"},"content":"            throw new CommandException(t.getMessage());","lastModifiedDate":"2022-10-28"},{"lineNumber":71,"author":{"gitId":"agarwal-anjali"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":72,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":73,"author":{"gitId":"agarwal-anjali"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":74,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":75,"author":{"gitId":"agarwal-anjali"},"content":"    @Override","lastModifiedDate":"2022-10-28"},{"lineNumber":76,"author":{"gitId":"agarwal-anjali"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-28"},{"lineNumber":77,"author":{"gitId":"agarwal-anjali"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-28"},{"lineNumber":78,"author":{"gitId":"agarwal-anjali"},"content":"                || (other instanceof DeleteNoteCommand // instanceof handles nulls","lastModifiedDate":"2022-10-28"},{"lineNumber":79,"author":{"gitId":"agarwal-anjali"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteNoteCommand) other).targetIndex));","lastModifiedDate":"2022-10-28"},{"lineNumber":80,"author":{"gitId":"agarwal-anjali"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":81,"author":{"gitId":"agarwal-anjali"},"content":"}","lastModifiedDate":"2022-10-28"}],"authorContributionMap":{"agarwal-anjali":81}},{"path":"src/main/java/seedu/clinkedin/logic/commands/DeleteRateCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ytingtan"},"content":"package seedu.clinkedin.logic.commands;","lastModifiedDate":"2022-10-28"},{"lineNumber":2,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":3,"author":{"gitId":"ytingtan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-28"},{"lineNumber":4,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":5,"author":{"gitId":"ytingtan"},"content":"import java.util.List;","lastModifiedDate":"2022-10-28"},{"lineNumber":6,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":7,"author":{"gitId":"ytingtan"},"content":"import seedu.clinkedin.commons.core.Messages;","lastModifiedDate":"2022-10-28"},{"lineNumber":8,"author":{"gitId":"ytingtan"},"content":"import seedu.clinkedin.commons.core.index.Index;","lastModifiedDate":"2022-10-28"},{"lineNumber":9,"author":{"gitId":"ytingtan"},"content":"import seedu.clinkedin.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-28"},{"lineNumber":10,"author":{"gitId":"ytingtan"},"content":"import seedu.clinkedin.model.Model;","lastModifiedDate":"2022-10-28"},{"lineNumber":11,"author":{"gitId":"ytingtan"},"content":"import seedu.clinkedin.model.person.Person;","lastModifiedDate":"2022-10-28"},{"lineNumber":12,"author":{"gitId":"ytingtan"},"content":"import seedu.clinkedin.model.person.Rating;","lastModifiedDate":"2022-10-28"},{"lineNumber":13,"author":{"gitId":"ytingtan"},"content":"import seedu.clinkedin.model.person.UniqueTagTypeMap;","lastModifiedDate":"2022-10-28"},{"lineNumber":14,"author":{"gitId":"ytingtan"},"content":"import seedu.clinkedin.model.person.exceptions.TagTypeNotFoundException;","lastModifiedDate":"2022-10-28"},{"lineNumber":15,"author":{"gitId":"ytingtan"},"content":"import seedu.clinkedin.model.tag.exceptions.TagNotFoundException;","lastModifiedDate":"2022-10-28"},{"lineNumber":16,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"ytingtan"},"content":"/**","lastModifiedDate":"2022-10-28"},{"lineNumber":18,"author":{"gitId":"ytingtan"},"content":" * Deletes rating of an existing person in the address book.","lastModifiedDate":"2022-10-28"},{"lineNumber":19,"author":{"gitId":"ytingtan"},"content":" */","lastModifiedDate":"2022-10-28"},{"lineNumber":20,"author":{"gitId":"ytingtan"},"content":"public class DeleteRateCommand extends Command {","lastModifiedDate":"2022-10-28"},{"lineNumber":21,"author":{"gitId":"ytingtan"},"content":"    public static final String COMMAND_WORD \u003d \"deleterate\";","lastModifiedDate":"2022-10-28"},{"lineNumber":22,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":23,"author":{"gitId":"ytingtan"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-28"},{"lineNumber":24,"author":{"gitId":"ytingtan"},"content":"            + \": Deletes the rating for the person identified by the index number used\"","lastModifiedDate":"2022-10-28"},{"lineNumber":25,"author":{"gitId":"ytingtan"},"content":"            + \"in the displayed person list.\\n\"","lastModifiedDate":"2022-10-28"},{"lineNumber":26,"author":{"gitId":"ytingtan"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2022-10-28"},{"lineNumber":27,"author":{"gitId":"ytingtan"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-28"},{"lineNumber":28,"author":{"gitId":"ytingtan"},"content":"            + \"1 \";","lastModifiedDate":"2022-10-28"},{"lineNumber":29,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":30,"author":{"gitId":"ytingtan"},"content":"    public static final String MESSAGE_DELETE_RATE_SUCCESS \u003d \"Deleted rating for the person: %1$s\";","lastModifiedDate":"2022-10-28"},{"lineNumber":31,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":32,"author":{"gitId":"ytingtan"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists\";","lastModifiedDate":"2022-10-28"},{"lineNumber":33,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":34,"author":{"gitId":"ytingtan"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-10-28"},{"lineNumber":35,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":36,"author":{"gitId":"ytingtan"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":37,"author":{"gitId":"ytingtan"},"content":"     *  Creates a deleteRateCommand to delete the specified {@code Rating} of a person at the specified {@code Index}","lastModifiedDate":"2022-10-28"},{"lineNumber":38,"author":{"gitId":"ytingtan"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":39,"author":{"gitId":"ytingtan"},"content":"    public DeleteRateCommand(Index targetIndex) {","lastModifiedDate":"2022-10-28"},{"lineNumber":40,"author":{"gitId":"ytingtan"},"content":"        requireNonNull(targetIndex);","lastModifiedDate":"2022-10-28"},{"lineNumber":41,"author":{"gitId":"ytingtan"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-10-28"},{"lineNumber":42,"author":{"gitId":"ytingtan"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":43,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":44,"author":{"gitId":"ytingtan"},"content":"    @Override","lastModifiedDate":"2022-10-28"},{"lineNumber":45,"author":{"gitId":"ytingtan"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-28"},{"lineNumber":46,"author":{"gitId":"ytingtan"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-28"},{"lineNumber":47,"author":{"gitId":"ytingtan"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-10-28"},{"lineNumber":48,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":49,"author":{"gitId":"ytingtan"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-28"},{"lineNumber":50,"author":{"gitId":"ytingtan"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-28"},{"lineNumber":51,"author":{"gitId":"ytingtan"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":52,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":53,"author":{"gitId":"ytingtan"},"content":"        try {","lastModifiedDate":"2022-10-28"},{"lineNumber":54,"author":{"gitId":"ytingtan"},"content":"            Person personToUpdate \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-28"},{"lineNumber":55,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":56,"author":{"gitId":"ytingtan"},"content":"            UniqueTagTypeMap tagMap \u003d new UniqueTagTypeMap();","lastModifiedDate":"2022-10-28"},{"lineNumber":57,"author":{"gitId":"ytingtan"},"content":"            tagMap.setTagTypeMap(personToUpdate.getTags());","lastModifiedDate":"2022-10-28"},{"lineNumber":58,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":59,"author":{"gitId":"ytingtan"},"content":"            Rating newRating \u003d new Rating(\"0\");","lastModifiedDate":"2022-10-28"},{"lineNumber":60,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":61,"author":{"gitId":"ytingtan"},"content":"            Person updatedPerson \u003d new Person(personToUpdate.getName(), personToUpdate.getPhone(),","lastModifiedDate":"2022-10-28"},{"lineNumber":62,"author":{"gitId":"ytingtan"},"content":"                    personToUpdate.getEmail(), personToUpdate.getAddress(), tagMap,","lastModifiedDate":"2022-10-28"},{"lineNumber":63,"author":{"gitId":"ytingtan"},"content":"                    personToUpdate.getStatus(), personToUpdate.getNote(), newRating,","lastModifiedDate":"2022-10-28"},{"lineNumber":64,"author":{"gitId":"ytingtan"},"content":"                    personToUpdate.getLinks());","lastModifiedDate":"2022-10-28"},{"lineNumber":65,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":66,"author":{"gitId":"ytingtan"},"content":"            if (!personToUpdate.isSamePerson(updatedPerson) \u0026\u0026 model.hasPerson(updatedPerson)) {","lastModifiedDate":"2022-10-28"},{"lineNumber":67,"author":{"gitId":"ytingtan"},"content":"                throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2022-10-28"},{"lineNumber":68,"author":{"gitId":"ytingtan"},"content":"            }","lastModifiedDate":"2022-10-28"},{"lineNumber":69,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":70,"author":{"gitId":"ytingtan"},"content":"            model.setPerson(personToUpdate, updatedPerson);","lastModifiedDate":"2022-10-28"},{"lineNumber":71,"author":{"gitId":"ytingtan"},"content":"            return new CommandResult(String.format(MESSAGE_DELETE_RATE_SUCCESS, updatedPerson));","lastModifiedDate":"2022-10-28"},{"lineNumber":72,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":73,"author":{"gitId":"ytingtan"},"content":"        } catch (TagTypeNotFoundException | TagNotFoundException t) {","lastModifiedDate":"2022-10-28"},{"lineNumber":74,"author":{"gitId":"ytingtan"},"content":"            throw new CommandException(t.getMessage());","lastModifiedDate":"2022-10-28"},{"lineNumber":75,"author":{"gitId":"ytingtan"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":76,"author":{"gitId":"ytingtan"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":77,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":78,"author":{"gitId":"ytingtan"},"content":"    @Override","lastModifiedDate":"2022-10-28"},{"lineNumber":79,"author":{"gitId":"ytingtan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-28"},{"lineNumber":80,"author":{"gitId":"ytingtan"},"content":"        return other \u003d\u003d this //short circuit if same object","lastModifiedDate":"2022-10-28"},{"lineNumber":81,"author":{"gitId":"ytingtan"},"content":"                || (other instanceof DeleteRateCommand // instanceof handles nulls","lastModifiedDate":"2022-10-28"},{"lineNumber":82,"author":{"gitId":"ytingtan"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteRateCommand) other).targetIndex));","lastModifiedDate":"2022-10-28"},{"lineNumber":83,"author":{"gitId":"ytingtan"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":84,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":85,"author":{"gitId":"ytingtan"},"content":"}","lastModifiedDate":"2022-10-28"}],"authorContributionMap":{"ytingtan":85}},{"path":"src/main/java/seedu/clinkedin/logic/commands/DeleteTagCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.logic.commands;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":3,"author":{"gitId":"agarwal-anjali"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.parser.CliSyntax.PREFIX_DEGREETAG;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.parser.CliSyntax.PREFIX_JOBTYPETAG;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.parser.CliSyntax.PREFIX_SKILLTAG;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":9,"author":{"gitId":"pratham31012002"},"content":"import java.util.List;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.commons.core.Messages;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.commons.core.index.Index;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.Model;","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.Person;","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.UniqueTagTypeMap;","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.exceptions.TagTypeNotFoundException;","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.tag.exceptions.TagNotFoundException;","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"agarwal-anjali"},"content":"/**","lastModifiedDate":"2022-10-07"},{"lineNumber":22,"author":{"gitId":"agarwal-anjali"},"content":" * Deletes a specified tag of a person.","lastModifiedDate":"2022-10-07"},{"lineNumber":23,"author":{"gitId":"agarwal-anjali"},"content":" */","lastModifiedDate":"2022-10-07"},{"lineNumber":24,"author":{"gitId":"agarwal-anjali"},"content":"public class DeleteTagCommand extends Command {","lastModifiedDate":"2022-10-07"},{"lineNumber":25,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":26,"author":{"gitId":"pratham31012002"},"content":"    public static final String COMMAND_WORD \u003d \"deletetag\";","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":28,"author":{"gitId":"agarwal-anjali"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-07"},{"lineNumber":29,"author":{"gitId":"agarwal-anjali"},"content":"            + \": Deletes the tag of the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2022-10-07"},{"lineNumber":30,"author":{"gitId":"agarwal-anjali"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2022-10-07"},{"lineNumber":31,"author":{"gitId":"agarwal-anjali"},"content":"            + \"[\" + PREFIX_SKILLTAG + \"TAG] \"","lastModifiedDate":"2022-10-07"},{"lineNumber":32,"author":{"gitId":"agarwal-anjali"},"content":"            + \"[\" + PREFIX_DEGREETAG + \"TAG] \"","lastModifiedDate":"2022-10-07"},{"lineNumber":33,"author":{"gitId":"agarwal-anjali"},"content":"            + \"[\" + PREFIX_JOBTYPETAG + \"TAG]\\n\"","lastModifiedDate":"2022-10-07"},{"lineNumber":34,"author":{"gitId":"agarwal-anjali"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-07"},{"lineNumber":35,"author":{"gitId":"agarwal-anjali"},"content":"            + \"1 \"","lastModifiedDate":"2022-10-07"},{"lineNumber":36,"author":{"gitId":"agarwal-anjali"},"content":"            + PREFIX_SKILLTAG + \"Java \";","lastModifiedDate":"2022-10-07"},{"lineNumber":37,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":38,"author":{"gitId":"agarwal-anjali"},"content":"    public static final String MESSAGE_DELETE_TAGS_SUCCESS \u003d \"Deleted tags of the person: %1$s\";","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"agarwal-anjali"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists\";","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":42,"author":{"gitId":"agarwal-anjali"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-10-07"},{"lineNumber":43,"author":{"gitId":"agarwal-anjali"},"content":"    private final UniqueTagTypeMap toDelete;","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"agarwal-anjali"},"content":"    private EditCommand.EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":46,"author":{"gitId":"agarwal-anjali"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":47,"author":{"gitId":"agarwal-anjali"},"content":"     * Creates an DeleteTagCommand to delete the specified {@code Tag} of a person at the specified {@code Index}","lastModifiedDate":"2022-10-07"},{"lineNumber":48,"author":{"gitId":"agarwal-anjali"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":49,"author":{"gitId":"agarwal-anjali"},"content":"    public DeleteTagCommand(Index targetIndex, UniqueTagTypeMap toDelete) {","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"agarwal-anjali"},"content":"        requireNonNull(targetIndex);","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"agarwal-anjali"},"content":"        requireNonNull(toDelete);","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"agarwal-anjali"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-10-07"},{"lineNumber":53,"author":{"gitId":"agarwal-anjali"},"content":"        this.toDelete \u003d toDelete;","lastModifiedDate":"2022-10-07"},{"lineNumber":54,"author":{"gitId":"agarwal-anjali"},"content":"        editPersonDescriptor \u003d new EditCommand.EditPersonDescriptor();","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"agarwal-anjali"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":56,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":57,"author":{"gitId":"agarwal-anjali"},"content":"    @Override","lastModifiedDate":"2022-10-07"},{"lineNumber":58,"author":{"gitId":"agarwal-anjali"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-07"},{"lineNumber":59,"author":{"gitId":"agarwal-anjali"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"agarwal-anjali"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"agarwal-anjali"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"agarwal-anjali"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"agarwal-anjali"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"agarwal-anjali"},"content":"        editPersonDescriptor.setNewTagTypeMap(toDelete);","lastModifiedDate":"2022-10-13"},{"lineNumber":67,"author":{"gitId":"agarwal-anjali"},"content":"        UniqueTagTypeMap tagsToBeDeleted \u003d editPersonDescriptor.getNewTagTypeMap().get();","lastModifiedDate":"2022-10-20"},{"lineNumber":68,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"agarwal-anjali"},"content":"        try {","lastModifiedDate":"2022-10-13"},{"lineNumber":70,"author":{"gitId":"agarwal-anjali"},"content":"            Person personToEdit \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"agarwal-anjali"},"content":"            Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"agarwal-anjali"},"content":"            if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"agarwal-anjali"},"content":"                throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"agarwal-anjali"},"content":"            }","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"agarwal-anjali"},"content":"            model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"agarwal-anjali"},"content":"            model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"agarwal-anjali"},"content":"            return new CommandResult(String.format(MESSAGE_DELETE_TAGS_SUCCESS, tagsToBeDeleted));","lastModifiedDate":"2022-10-20"},{"lineNumber":80,"author":{"gitId":"agarwal-anjali"},"content":"        } catch (TagTypeNotFoundException | TagNotFoundException t) {","lastModifiedDate":"2022-10-13"},{"lineNumber":81,"author":{"gitId":"agarwal-anjali"},"content":"            throw new CommandException(t.getMessage());","lastModifiedDate":"2022-10-13"},{"lineNumber":82,"author":{"gitId":"agarwal-anjali"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":83,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":84,"author":{"gitId":"agarwal-anjali"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"pratham31012002"},"content":"    private static Person createEditedPerson(Person personToEdit,","lastModifiedDate":"2022-10-11"},{"lineNumber":87,"author":{"gitId":"agarwal-anjali"},"content":"                                             EditCommand.EditPersonDescriptor editPersonDescriptor)","lastModifiedDate":"2022-10-13"},{"lineNumber":88,"author":{"gitId":"agarwal-anjali"},"content":"            throws TagTypeNotFoundException, TagNotFoundException {","lastModifiedDate":"2022-10-13"},{"lineNumber":89,"author":{"gitId":"agarwal-anjali"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2022-10-10"},{"lineNumber":90,"author":{"gitId":"agarwal-anjali"},"content":"        UniqueTagTypeMap updatedTags \u003d new UniqueTagTypeMap();","lastModifiedDate":"2022-10-10"},{"lineNumber":91,"author":{"gitId":"agarwal-anjali"},"content":"        updatedTags.setTagTypeMap(personToEdit.getTags());","lastModifiedDate":"2022-10-10"},{"lineNumber":92,"author":{"gitId":"agarwal-anjali"},"content":"        updatedTags.removeTags(editPersonDescriptor.getNewTagTypeMap().get());","lastModifiedDate":"2022-10-13"},{"lineNumber":93,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":94,"author":{"gitId":"agarwal-anjali"},"content":"        return new Person(personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2022-10-10"},{"lineNumber":95,"author":{"gitId":"agarwal-anjali"},"content":"                personToEdit.getAddress(), updatedTags, personToEdit.getStatus(), personToEdit.getNote(),","lastModifiedDate":"2022-10-23"},{"lineNumber":96,"author":{"gitId":"pratham31012002"},"content":"                personToEdit.getRating(), personToEdit.getLinks());","lastModifiedDate":"2022-10-28"},{"lineNumber":97,"author":{"gitId":"agarwal-anjali"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":98,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":99,"author":{"gitId":"agarwal-anjali"},"content":"    @Override","lastModifiedDate":"2022-10-07"},{"lineNumber":100,"author":{"gitId":"agarwal-anjali"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-07"},{"lineNumber":101,"author":{"gitId":"agarwal-anjali"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-07"},{"lineNumber":102,"author":{"gitId":"agarwal-anjali"},"content":"                || (other instanceof DeleteTagCommand // instanceof handles nulls","lastModifiedDate":"2022-10-07"},{"lineNumber":103,"author":{"gitId":"agarwal-anjali"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteTagCommand) other).targetIndex)","lastModifiedDate":"2022-10-07"},{"lineNumber":104,"author":{"gitId":"agarwal-anjali"},"content":"                \u0026\u0026 toDelete.equals(((DeleteTagCommand) other).toDelete));","lastModifiedDate":"2022-10-07"},{"lineNumber":105,"author":{"gitId":"agarwal-anjali"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":106,"author":{"gitId":"agarwal-anjali"},"content":"}","lastModifiedDate":"2022-10-07"}],"authorContributionMap":{"agarwal-anjali":88,"emptygx":13,"pratham31012002":5}},{"path":"src/main/java/seedu/clinkedin/logic/commands/DeleteTagTypeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.logic.commands;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":3,"author":{"gitId":"pratham31012002"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.Model;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.UniqueTagTypeMap;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.exceptions.TagTypeNotFoundException;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.tag.TagType;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":11,"author":{"gitId":"agarwal-anjali"},"content":"/**","lastModifiedDate":"2022-10-07"},{"lineNumber":12,"author":{"gitId":"agarwal-anjali"},"content":" * Deletes a specified tag type.","lastModifiedDate":"2022-10-07"},{"lineNumber":13,"author":{"gitId":"agarwal-anjali"},"content":" */","lastModifiedDate":"2022-10-07"},{"lineNumber":14,"author":{"gitId":"agarwal-anjali"},"content":"public class DeleteTagTypeCommand extends Command {","lastModifiedDate":"2022-10-07"},{"lineNumber":15,"author":{"gitId":"pratham31012002"},"content":"    public static final String COMMAND_WORD \u003d \"deletetagtype\";","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":17,"author":{"gitId":"agarwal-anjali"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-07"},{"lineNumber":18,"author":{"gitId":"agarwal-anjali"},"content":"            + \": Deletes the tag type from the list of tag types that can be added to a person.\\n\"","lastModifiedDate":"2022-10-07"},{"lineNumber":19,"author":{"gitId":"agarwal-anjali"},"content":"            + \"Parameters: TAG_TYPE \\n\"","lastModifiedDate":"2022-10-07"},{"lineNumber":20,"author":{"gitId":"agarwal-anjali"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-07"},{"lineNumber":21,"author":{"gitId":"agarwal-anjali"},"content":"            + \"Grade \";","lastModifiedDate":"2022-10-07"},{"lineNumber":22,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":23,"author":{"gitId":"agarwal-anjali"},"content":"    public static final String MESSAGE_DELETE_TAG_TYPE_SUCCESS \u003d \"Deleted tag type: %1$s\";","lastModifiedDate":"2022-10-07"},{"lineNumber":24,"author":{"gitId":"agarwal-anjali"},"content":"    private final TagType toDelete;","lastModifiedDate":"2022-10-07"},{"lineNumber":25,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":26,"author":{"gitId":"agarwal-anjali"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":27,"author":{"gitId":"agarwal-anjali"},"content":"     * Creates a DeleteTagTypeCommand to delete the specified {@code TagType}","lastModifiedDate":"2022-10-07"},{"lineNumber":28,"author":{"gitId":"agarwal-anjali"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":29,"author":{"gitId":"agarwal-anjali"},"content":"    public DeleteTagTypeCommand(TagType toDelete) {","lastModifiedDate":"2022-10-07"},{"lineNumber":30,"author":{"gitId":"agarwal-anjali"},"content":"        requireNonNull(toDelete);","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"agarwal-anjali"},"content":"        this.toDelete \u003d toDelete;","lastModifiedDate":"2022-10-07"},{"lineNumber":32,"author":{"gitId":"agarwal-anjali"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":33,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":34,"author":{"gitId":"agarwal-anjali"},"content":"    @Override","lastModifiedDate":"2022-10-07"},{"lineNumber":35,"author":{"gitId":"agarwal-anjali"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-07"},{"lineNumber":36,"author":{"gitId":"agarwal-anjali"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"agarwal-anjali"},"content":"        try {","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"agarwal-anjali"},"content":"            UniqueTagTypeMap.removeExistingTagType(toDelete);","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"agarwal-anjali"},"content":"        } catch (TagTypeNotFoundException t) {","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"agarwal-anjali"},"content":"            throw new CommandException(t.getMessage());","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"agarwal-anjali"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"agarwal-anjali"},"content":"        model.deleteTagTypeForAllPerson(toDelete);","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"agarwal-anjali"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_TAG_TYPE_SUCCESS, toDelete));","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"agarwal-anjali"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":46,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":47,"author":{"gitId":"agarwal-anjali"},"content":"    @Override","lastModifiedDate":"2022-10-07"},{"lineNumber":48,"author":{"gitId":"agarwal-anjali"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-07"},{"lineNumber":49,"author":{"gitId":"agarwal-anjali"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-07"},{"lineNumber":50,"author":{"gitId":"agarwal-anjali"},"content":"                || (other instanceof DeleteTagTypeCommand // instanceof handles nulls","lastModifiedDate":"2022-10-07"},{"lineNumber":51,"author":{"gitId":"agarwal-anjali"},"content":"                \u0026\u0026 toDelete.equals(((DeleteTagTypeCommand) other).toDelete));","lastModifiedDate":"2022-10-07"},{"lineNumber":52,"author":{"gitId":"agarwal-anjali"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":53,"author":{"gitId":"agarwal-anjali"},"content":"}","lastModifiedDate":"2022-10-07"}],"authorContributionMap":{"agarwal-anjali":44,"emptygx":6,"pratham31012002":3}},{"path":"src/main/java/seedu/clinkedin/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.logic.commands;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.parser.CliSyntax.PREFIX_NOTE;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"ytingtan"},"content":"import static seedu.clinkedin.logic.parser.CliSyntax.PREFIX_RATING;","lastModifiedDate":"2022-10-17"},{"lineNumber":10,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"agarwal-anjali"},"content":"import java.util.Map;","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"agarwal-anjali"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":19,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.commons.core.Messages;","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.commons.core.index.Index;","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.commons.util.CollectionUtil;","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.Model;","lastModifiedDate":"2022-10-15"},{"lineNumber":24,"author":{"gitId":"agarwal-anjali"},"content":"import seedu.clinkedin.model.link.Link;","lastModifiedDate":"2022-10-23"},{"lineNumber":25,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.Address;","lastModifiedDate":"2022-10-15"},{"lineNumber":26,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.Email;","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.Name;","lastModifiedDate":"2022-10-15"},{"lineNumber":28,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.Note;","lastModifiedDate":"2022-10-15"},{"lineNumber":29,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.Person;","lastModifiedDate":"2022-10-15"},{"lineNumber":30,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.Phone;","lastModifiedDate":"2022-10-15"},{"lineNumber":31,"author":{"gitId":"ytingtan"},"content":"import seedu.clinkedin.model.person.Rating;","lastModifiedDate":"2022-10-17"},{"lineNumber":32,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.Status;","lastModifiedDate":"2022-10-15"},{"lineNumber":33,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.UniqueTagTypeMap;","lastModifiedDate":"2022-10-15"},{"lineNumber":34,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.exceptions.TagTypeNotFoundException;","lastModifiedDate":"2022-10-15"},{"lineNumber":35,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.tag.TagType;","lastModifiedDate":"2022-10-15"},{"lineNumber":36,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.tag.UniqueTagList;","lastModifiedDate":"2022-10-15"},{"lineNumber":37,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.tag.exceptions.DuplicateTagException;","lastModifiedDate":"2022-10-15"},{"lineNumber":38,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.tag.exceptions.TagNotFoundException;","lastModifiedDate":"2022-10-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"ytingtan"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2022-10-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":51,"author":{"gitId":"ytingtan"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2022-10-17"},{"lineNumber":52,"author":{"gitId":"ytingtan"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2022-10-17"},{"lineNumber":53,"author":{"gitId":"ytingtan"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2022-10-17"},{"lineNumber":54,"author":{"gitId":"ytingtan"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2022-10-17"},{"lineNumber":55,"author":{"gitId":"josephaedan"},"content":"            + \"[\" + PREFIX_TAG + \"TAG] \"","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"ytingtan"},"content":"            + PREFIX_STATUS + \"STATUS\"","lastModifiedDate":"2022-10-17"},{"lineNumber":57,"author":{"gitId":"ytingtan"},"content":"            + \"[\" + PREFIX_NOTE + \"NOTE]\"","lastModifiedDate":"2022-10-17"},{"lineNumber":58,"author":{"gitId":"ytingtan"},"content":"            + \"[\" + PREFIX_RATING + \"RATING]...\\n\"","lastModifiedDate":"2022-10-17"},{"lineNumber":59,"author":{"gitId":"agarwal-anjali"},"content":"            + \"Example: \" + COMMAND_WORD + \"1 \"","lastModifiedDate":"2022-10-28"},{"lineNumber":60,"author":{"gitId":"ytingtan"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2022-10-17"},{"lineNumber":61,"author":{"gitId":"ytingtan"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2022-10-17"},{"lineNumber":62,"author":{"gitId":"ytingtan"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2022-10-17"},{"lineNumber":63,"author":{"gitId":"ytingtan"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2022-10-17"},{"lineNumber":64,"author":{"gitId":"ytingtan"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2022-10-17"},{"lineNumber":65,"author":{"gitId":"ytingtan"},"content":"            + PREFIX_TAG + \"owesMoney \"","lastModifiedDate":"2022-10-17"},{"lineNumber":66,"author":{"gitId":"ytingtan"},"content":"            + PREFIX_STATUS + \"Application Pending \"","lastModifiedDate":"2022-10-17"},{"lineNumber":67,"author":{"gitId":"ytingtan"},"content":"            + PREFIX_NOTE + \"Has a dog.\"","lastModifiedDate":"2022-10-17"},{"lineNumber":68,"author":{"gitId":"ytingtan"},"content":"            + PREFIX_RATING + \"4\";","lastModifiedDate":"2022-10-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":72,"author":{"gitId":"ytingtan"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2022-10-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":86,"author":{"gitId":"pratham31012002"},"content":"        this.editPersonDescriptor \u003d editPersonDescriptor;","lastModifiedDate":"2022-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":98,"author":{"gitId":"agarwal-anjali"},"content":"        try {","lastModifiedDate":"2022-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-07"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2017-08-05"},{"lineNumber":109,"author":{"gitId":"agarwal-anjali"},"content":"        } catch (TagTypeNotFoundException | TagNotFoundException | DuplicateTagException e) {","lastModifiedDate":"2022-10-13"},{"lineNumber":110,"author":{"gitId":"agarwal-anjali"},"content":"            throw new CommandException(e.getMessage());","lastModifiedDate":"2022-10-13"},{"lineNumber":111,"author":{"gitId":"agarwal-anjali"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":112,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":119,"author":{"gitId":"agarwal-anjali"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor)","lastModifiedDate":"2022-10-13"},{"lineNumber":120,"author":{"gitId":"agarwal-anjali"},"content":"            throws TagTypeNotFoundException, TagNotFoundException, DuplicateTagException {","lastModifiedDate":"2022-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":127,"author":{"gitId":"agarwal-anjali"},"content":"        Map\u003cTagType, UniqueTagList\u003e personToEditTags \u003d personToEdit.getTags();","lastModifiedDate":"2022-10-11"},{"lineNumber":128,"author":{"gitId":"agarwal-anjali"},"content":"        UniqueTagTypeMap original \u003d new UniqueTagTypeMap();","lastModifiedDate":"2022-10-11"},{"lineNumber":129,"author":{"gitId":"agarwal-anjali"},"content":"        original.setTagTypeMap(personToEditTags);","lastModifiedDate":"2022-10-11"},{"lineNumber":130,"author":{"gitId":"agarwal-anjali"},"content":"        UniqueTagTypeMap toEdit \u003d editPersonDescriptor.getOldTagTypeMap().get();","lastModifiedDate":"2022-10-11"},{"lineNumber":131,"author":{"gitId":"agarwal-anjali"},"content":"        UniqueTagTypeMap editTo \u003d editPersonDescriptor.getNewTagTypeMap().get();","lastModifiedDate":"2022-10-11"},{"lineNumber":132,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":133,"author":{"gitId":"agarwal-anjali"},"content":"        original.removeTags(toEdit);","lastModifiedDate":"2022-10-11"},{"lineNumber":134,"author":{"gitId":"agarwal-anjali"},"content":"        original.mergeTagTypeMap(editTo);","lastModifiedDate":"2022-10-11"},{"lineNumber":135,"author":{"gitId":"agarwal-anjali"},"content":"        UniqueTagTypeMap updatedTags \u003d original;","lastModifiedDate":"2022-10-11"},{"lineNumber":136,"author":{"gitId":"ytingtan"},"content":"        Note updatedNote \u003d editPersonDescriptor.getNote().orElse(personToEdit.getNote());","lastModifiedDate":"2022-10-17"},{"lineNumber":137,"author":{"gitId":"ytingtan"},"content":"        Status updatedStatus \u003d editPersonDescriptor.getStatus().orElse(personToEdit.getStatus());","lastModifiedDate":"2022-10-09"},{"lineNumber":138,"author":{"gitId":"ytingtan"},"content":"        Rating updatedRating \u003d editPersonDescriptor.getRating().orElse(personToEdit.getRating());","lastModifiedDate":"2022-10-17"},{"lineNumber":139,"author":{"gitId":"agarwal-anjali"},"content":"        Set\u003cLink\u003e updatedLinks \u003d editPersonDescriptor.getLinks().orElse(personToEdit.getLinks());","lastModifiedDate":"2022-10-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":141,"author":{"gitId":"josephaedan"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedTags, updatedStatus,","lastModifiedDate":"2022-10-12"},{"lineNumber":142,"author":{"gitId":"ytingtan"},"content":"                updatedNote, updatedRating, updatedLinks);","lastModifiedDate":"2022-10-25"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":172,"author":{"gitId":"pratham31012002"},"content":"        private UniqueTagTypeMap oldTagTypeMap \u003d new UniqueTagTypeMap();","lastModifiedDate":"2022-10-13"},{"lineNumber":173,"author":{"gitId":"pratham31012002"},"content":"        private UniqueTagTypeMap newTagTypeMap \u003d new UniqueTagTypeMap();","lastModifiedDate":"2022-10-13"},{"lineNumber":174,"author":{"gitId":"ytingtan"},"content":"        private Status status;","lastModifiedDate":"2022-10-09"},{"lineNumber":175,"author":{"gitId":"josephaedan"},"content":"        private Note note;","lastModifiedDate":"2022-10-12"},{"lineNumber":176,"author":{"gitId":"ytingtan"},"content":"        private Rating rating;","lastModifiedDate":"2022-10-17"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"agarwal-anjali"},"content":"        private Set\u003cLink\u003e links;","lastModifiedDate":"2022-10-23"},{"lineNumber":179,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":183,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":184,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":185,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":191,"author":{"gitId":"agarwal-anjali"},"content":"            setOldTagTypeMap(toCopy.oldTagTypeMap);","lastModifiedDate":"2022-10-11"},{"lineNumber":192,"author":{"gitId":"agarwal-anjali"},"content":"            setNewTagTypeMap(toCopy.oldTagTypeMap);","lastModifiedDate":"2022-10-11"},{"lineNumber":193,"author":{"gitId":"ytingtan"},"content":"            setStatus(toCopy.status);","lastModifiedDate":"2022-10-09"},{"lineNumber":194,"author":{"gitId":"josephaedan"},"content":"            setNote(toCopy.note);","lastModifiedDate":"2022-10-12"},{"lineNumber":195,"author":{"gitId":"ytingtan"},"content":"            setRating(toCopy.rating);","lastModifiedDate":"2022-10-17"},{"lineNumber":196,"author":{"gitId":"agarwal-anjali"},"content":"            setLinks(toCopy.links);","lastModifiedDate":"2022-10-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":201,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":203,"author":{"gitId":"pratham31012002"},"content":"            if (!newTagTypeMap.isEmpty() || !oldTagTypeMap.isEmpty()) {","lastModifiedDate":"2022-10-13"},{"lineNumber":204,"author":{"gitId":"pratham31012002"},"content":"                return true;","lastModifiedDate":"2022-10-13"},{"lineNumber":205,"author":{"gitId":"pratham31012002"},"content":"            }","lastModifiedDate":"2022-10-13"},{"lineNumber":206,"author":{"gitId":"ytingtan"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, status, note, rating, links);","lastModifiedDate":"2022-10-25"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":234,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":238,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":241,"author":{"gitId":"ytingtan"},"content":"        public void setStatus(Status status) {","lastModifiedDate":"2022-10-09"},{"lineNumber":242,"author":{"gitId":"ytingtan"},"content":"            this.status \u003d status;","lastModifiedDate":"2022-10-09"},{"lineNumber":243,"author":{"gitId":"ytingtan"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":244,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":245,"author":{"gitId":"ytingtan"},"content":"        public Optional\u003cStatus\u003e getStatus() {","lastModifiedDate":"2022-10-09"},{"lineNumber":246,"author":{"gitId":"ytingtan"},"content":"            return Optional.ofNullable(status);","lastModifiedDate":"2022-10-09"},{"lineNumber":247,"author":{"gitId":"ytingtan"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":248,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":249,"author":{"gitId":"josephaedan"},"content":"        public void setNote(Note note) {","lastModifiedDate":"2022-10-12"},{"lineNumber":250,"author":{"gitId":"josephaedan"},"content":"            this.note \u003d note;","lastModifiedDate":"2022-10-12"},{"lineNumber":251,"author":{"gitId":"josephaedan"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":252,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":253,"author":{"gitId":"josephaedan"},"content":"        public Optional\u003cNote\u003e getNote() {","lastModifiedDate":"2022-10-12"},{"lineNumber":254,"author":{"gitId":"josephaedan"},"content":"            return Optional.ofNullable(note);","lastModifiedDate":"2022-10-12"},{"lineNumber":255,"author":{"gitId":"josephaedan"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":256,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":258,"author":{"gitId":"agarwal-anjali"},"content":"         * Sets {@code oldTagTypeMap} to this object\u0027s {@code oldTagTypeMap}.","lastModifiedDate":"2022-10-11"},{"lineNumber":259,"author":{"gitId":"agarwal-anjali"},"content":"         * A defensive copy of {@code oldTagTypeMap} is used internally.","lastModifiedDate":"2022-10-11"},{"lineNumber":260,"author":{"gitId":"agarwal-anjali"},"content":"         */","lastModifiedDate":"2022-10-11"},{"lineNumber":261,"author":{"gitId":"agarwal-anjali"},"content":"        public void setOldTagTypeMap(UniqueTagTypeMap oldTagTypeMap) {","lastModifiedDate":"2022-10-11"},{"lineNumber":262,"author":{"gitId":"agarwal-anjali"},"content":"            this.oldTagTypeMap \u003d oldTagTypeMap;","lastModifiedDate":"2022-10-11"},{"lineNumber":263,"author":{"gitId":"agarwal-anjali"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":264,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":265,"author":{"gitId":"agarwal-anjali"},"content":"        /**","lastModifiedDate":"2022-10-11"},{"lineNumber":266,"author":{"gitId":"agarwal-anjali"},"content":"         * Sets {@code newTagTypeMap} to this object\u0027s {@code newTagTypeMap}.","lastModifiedDate":"2022-10-11"},{"lineNumber":267,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":268,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":269,"author":{"gitId":"agarwal-anjali"},"content":"        public void setNewTagTypeMap(UniqueTagTypeMap newTagTypeMap) {","lastModifiedDate":"2022-10-11"},{"lineNumber":270,"author":{"gitId":"agarwal-anjali"},"content":"            this.newTagTypeMap \u003d newTagTypeMap;","lastModifiedDate":"2022-10-11"},{"lineNumber":271,"author":{"gitId":"agarwal-anjali"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":272,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":273,"author":{"gitId":"agarwal-anjali"},"content":"        /**","lastModifiedDate":"2022-10-11"},{"lineNumber":274,"author":{"gitId":"agarwal-anjali"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2022-10-11"},{"lineNumber":275,"author":{"gitId":"agarwal-anjali"},"content":"         * if modification is attempted.","lastModifiedDate":"2022-10-11"},{"lineNumber":276,"author":{"gitId":"agarwal-anjali"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2022-10-11"},{"lineNumber":277,"author":{"gitId":"agarwal-anjali"},"content":"         */","lastModifiedDate":"2022-10-11"},{"lineNumber":278,"author":{"gitId":"agarwal-anjali"},"content":"        public Optional\u003cUniqueTagTypeMap\u003e getOldTagTypeMap() {","lastModifiedDate":"2022-10-11"},{"lineNumber":279,"author":{"gitId":"agarwal-anjali"},"content":"            return (oldTagTypeMap !\u003d null) ? Optional.of(oldTagTypeMap) : Optional.empty();","lastModifiedDate":"2022-10-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":282,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":283,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":284,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":285,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":286,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":287,"author":{"gitId":"agarwal-anjali"},"content":"        public Optional\u003cUniqueTagTypeMap\u003e getNewTagTypeMap() {","lastModifiedDate":"2022-10-11"},{"lineNumber":288,"author":{"gitId":"agarwal-anjali"},"content":"            return (newTagTypeMap !\u003d null) ? Optional.of(newTagTypeMap) : Optional.empty();","lastModifiedDate":"2022-10-11"},{"lineNumber":289,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":291,"author":{"gitId":"ytingtan"},"content":"        public Optional\u003cRating\u003e getRating() {","lastModifiedDate":"2022-10-17"},{"lineNumber":292,"author":{"gitId":"ytingtan"},"content":"            return Optional.ofNullable(rating);","lastModifiedDate":"2022-10-17"},{"lineNumber":293,"author":{"gitId":"ytingtan"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":294,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":295,"author":{"gitId":"ytingtan"},"content":"        public void setRating(Rating rating) {","lastModifiedDate":"2022-10-17"},{"lineNumber":296,"author":{"gitId":"ytingtan"},"content":"            this.rating \u003d rating;","lastModifiedDate":"2022-10-17"},{"lineNumber":297,"author":{"gitId":"ytingtan"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":298,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":299,"author":{"gitId":"agarwal-anjali"},"content":"        public void setLinks(Set\u003cLink\u003e links) {","lastModifiedDate":"2022-10-23"},{"lineNumber":300,"author":{"gitId":"agarwal-anjali"},"content":"            this.links \u003d links;","lastModifiedDate":"2022-10-23"},{"lineNumber":301,"author":{"gitId":"agarwal-anjali"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":302,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":303,"author":{"gitId":"agarwal-anjali"},"content":"        public Optional\u003cSet\u003cLink\u003e\u003e getLinks() {","lastModifiedDate":"2022-10-23"},{"lineNumber":304,"author":{"gitId":"agarwal-anjali"},"content":"            return Optional.ofNullable(links);","lastModifiedDate":"2022-10-23"},{"lineNumber":305,"author":{"gitId":"ytingtan"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":306,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":307,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":308,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":309,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":310,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":311,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":312,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":314,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":315,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":316,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":317,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":319,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":320,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":322,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":323,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":324,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":325,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":326,"author":{"gitId":"agarwal-anjali"},"content":"                    \u0026\u0026 getOldTagTypeMap().equals(e.getOldTagTypeMap())","lastModifiedDate":"2022-10-11"},{"lineNumber":327,"author":{"gitId":"pratham31012002"},"content":"                    \u0026\u0026 getNewTagTypeMap().equals(e.getNewTagTypeMap())","lastModifiedDate":"2022-10-13"},{"lineNumber":328,"author":{"gitId":"josephaedan"},"content":"                    \u0026\u0026 getStatus().equals(e.getStatus())","lastModifiedDate":"2022-10-12"},{"lineNumber":329,"author":{"gitId":"ytingtan"},"content":"                    \u0026\u0026 getNote().equals(e.getNote())","lastModifiedDate":"2022-10-17"},{"lineNumber":330,"author":{"gitId":"ytingtan"},"content":"                    \u0026\u0026 getRating().equals(e.getRating())","lastModifiedDate":"2022-10-25"},{"lineNumber":331,"author":{"gitId":"agarwal-anjali"},"content":"                    \u0026\u0026 getLinks().equals(e.getLinks());","lastModifiedDate":"2022-10-23"},{"lineNumber":332,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":333,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":334,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":336,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"agarwal-anjali":55,"ytingtan":51,"emptygx":27,"josephaedan":13,"pratham31012002":8,"-":182}},{"path":"src/main/java/seedu/clinkedin/logic/commands/EditTagTypeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.logic.commands;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":3,"author":{"gitId":"pratham31012002"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.logic.parser.Prefix;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.Model;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.UniqueTagTypeMap;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.tag.TagType;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":12,"author":{"gitId":"agarwal-anjali"},"content":"/**","lastModifiedDate":"2022-10-07"},{"lineNumber":13,"author":{"gitId":"agarwal-anjali"},"content":" * Edits a tag type.","lastModifiedDate":"2022-10-07"},{"lineNumber":14,"author":{"gitId":"agarwal-anjali"},"content":" */","lastModifiedDate":"2022-10-07"},{"lineNumber":15,"author":{"gitId":"agarwal-anjali"},"content":"public class EditTagTypeCommand extends Command {","lastModifiedDate":"2022-10-07"},{"lineNumber":16,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":17,"author":{"gitId":"pratham31012002"},"content":"    public static final String COMMAND_WORD \u003d \"edittagtype\";","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":19,"author":{"gitId":"agarwal-anjali"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-07"},{"lineNumber":20,"author":{"gitId":"agarwal-anjali"},"content":"            + \": Edits an existing tag type and its tag alias.\\n\"","lastModifiedDate":"2022-10-07"},{"lineNumber":21,"author":{"gitId":"agarwal-anjali"},"content":"            + \"Parameters: OLD_TAG_TYPE-NEW-TAG-TYPE OLD_TAG_ALIAS-NEW_TAG_ALIAS\\n\"","lastModifiedDate":"2022-10-07"},{"lineNumber":22,"author":{"gitId":"agarwal-anjali"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-07"},{"lineNumber":23,"author":{"gitId":"agarwal-anjali"},"content":"            + \"Grade-GPA grdt-gpat \";","lastModifiedDate":"2022-10-07"},{"lineNumber":24,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":25,"author":{"gitId":"agarwal-anjali"},"content":"    public static final String MESSAGE_EDIT_TAG_TYPE_SUCCESS \u003d \"Edited tag type: %1$s\";","lastModifiedDate":"2022-10-07"},{"lineNumber":26,"author":{"gitId":"agarwal-anjali"},"content":"    private final TagType toEditTagType;","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"agarwal-anjali"},"content":"    private final TagType editToTagType;","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"agarwal-anjali"},"content":"    private final Prefix toEditPrefix;","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"agarwal-anjali"},"content":"    private final Prefix editToPrefix;","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":31,"author":{"gitId":"agarwal-anjali"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":32,"author":{"gitId":"agarwal-anjali"},"content":"     * Creates an EditTagTypeCommand to edit the specified {@code TagType}","lastModifiedDate":"2022-10-07"},{"lineNumber":33,"author":{"gitId":"agarwal-anjali"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":34,"author":{"gitId":"agarwal-anjali"},"content":"    public EditTagTypeCommand(Prefix toEditPrefix, TagType toEditTagType, Prefix editToPrefix, TagType editToTagType) {","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"pratham31012002"},"content":"        requireAllNonNull(toEditPrefix, toEditTagType, editToPrefix, editToTagType);","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"agarwal-anjali"},"content":"        this.toEditPrefix \u003d toEditPrefix;","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"agarwal-anjali"},"content":"        this.toEditTagType \u003d toEditTagType;","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"agarwal-anjali"},"content":"        this.editToPrefix \u003d editToPrefix;","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"agarwal-anjali"},"content":"        this.editToTagType \u003d editToTagType;","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"agarwal-anjali"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":41,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":42,"author":{"gitId":"agarwal-anjali"},"content":"    @Override","lastModifiedDate":"2022-10-07"},{"lineNumber":43,"author":{"gitId":"agarwal-anjali"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-07"},{"lineNumber":44,"author":{"gitId":"agarwal-anjali"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"agarwal-anjali"},"content":"        try {","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"agarwal-anjali"},"content":"            UniqueTagTypeMap.setExistingTagType(toEditPrefix, editToPrefix, editToTagType);","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"agarwal-anjali"},"content":"            model.editTagTypeForAllPerson(toEditTagType, editToTagType);","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"agarwal-anjali"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-10-26"},{"lineNumber":49,"author":{"gitId":"agarwal-anjali"},"content":"            throw new CommandException(e.getMessage());","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"agarwal-anjali"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":51,"author":{"gitId":"agarwal-anjali"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_TAG_TYPE_SUCCESS, editToTagType));","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"agarwal-anjali"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":53,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":54,"author":{"gitId":"agarwal-anjali"},"content":"    @Override","lastModifiedDate":"2022-10-07"},{"lineNumber":55,"author":{"gitId":"agarwal-anjali"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-07"},{"lineNumber":56,"author":{"gitId":"agarwal-anjali"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-07"},{"lineNumber":57,"author":{"gitId":"agarwal-anjali"},"content":"                || (other instanceof EditTagTypeCommand // instanceof handles nulls","lastModifiedDate":"2022-10-07"},{"lineNumber":58,"author":{"gitId":"agarwal-anjali"},"content":"                \u0026\u0026 toEditPrefix.equals(((EditTagTypeCommand) other).toEditPrefix)","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"agarwal-anjali"},"content":"                \u0026\u0026 toEditTagType.equals(((EditTagTypeCommand) other).toEditTagType)","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"agarwal-anjali"},"content":"                \u0026\u0026 editToPrefix.equals(((EditTagTypeCommand) other).editToPrefix)","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"agarwal-anjali"},"content":"                \u0026\u0026 editToTagType.equals(((EditTagTypeCommand) other).editToTagType));","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"agarwal-anjali"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":63,"author":{"gitId":"agarwal-anjali"},"content":"}","lastModifiedDate":"2022-10-07"}],"authorContributionMap":{"agarwal-anjali":52,"emptygx":7,"pratham31012002":4}},{"path":"src/main/java/seedu/clinkedin/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.logic.commands;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.Model;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Address Book as requested ...\";","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"emptygx":2,"-":17}},{"path":"src/main/java/seedu/clinkedin/logic/commands/ExportCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pratham31012002"},"content":"package seedu.clinkedin.logic.commands;","lastModifiedDate":"2022-10-21"},{"lineNumber":2,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":3,"author":{"gitId":"pratham31012002"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-21"},{"lineNumber":4,"author":{"gitId":"pratham31012002"},"content":"import static seedu.clinkedin.commons.util.FileUtil.exportToCsvFile;","lastModifiedDate":"2022-10-24"},{"lineNumber":5,"author":{"gitId":"pratham31012002"},"content":"import static seedu.clinkedin.logic.parser.CliSyntax.PREFIX_PATH;","lastModifiedDate":"2022-10-22"},{"lineNumber":6,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"pratham31012002"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-24"},{"lineNumber":8,"author":{"gitId":"pratham31012002"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"pratham31012002"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"pratham31012002"},"content":"import java.util.List;","lastModifiedDate":"2022-10-24"},{"lineNumber":11,"author":{"gitId":"pratham31012002"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-24"},{"lineNumber":12,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":13,"author":{"gitId":"pratham31012002"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-24"},{"lineNumber":14,"author":{"gitId":"pratham31012002"},"content":"import seedu.clinkedin.commons.util.JsonUtil;","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"pratham31012002"},"content":"import seedu.clinkedin.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-24"},{"lineNumber":16,"author":{"gitId":"pratham31012002"},"content":"import seedu.clinkedin.logic.parser.ParserUtil.FileType;","lastModifiedDate":"2022-10-22"},{"lineNumber":17,"author":{"gitId":"pratham31012002"},"content":"import seedu.clinkedin.model.AddressBook;","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"pratham31012002"},"content":"import seedu.clinkedin.model.Model;","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"pratham31012002"},"content":"import seedu.clinkedin.model.person.Person;","lastModifiedDate":"2022-10-24"},{"lineNumber":20,"author":{"gitId":"pratham31012002"},"content":"import seedu.clinkedin.storage.JsonSerializableAddressBook;","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":22,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":23,"author":{"gitId":"pratham31012002"},"content":"/**","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"pratham31012002"},"content":" * Exports the addressbook.","lastModifiedDate":"2022-10-21"},{"lineNumber":25,"author":{"gitId":"pratham31012002"},"content":" */","lastModifiedDate":"2022-10-21"},{"lineNumber":26,"author":{"gitId":"pratham31012002"},"content":"public class ExportCommand extends Command {","lastModifiedDate":"2022-10-21"},{"lineNumber":27,"author":{"gitId":"pratham31012002"},"content":"    public static final String COMMAND_WORD \u003d \"export\";","lastModifiedDate":"2022-10-21"},{"lineNumber":28,"author":{"gitId":"pratham31012002"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Exports the address book.\\n\"","lastModifiedDate":"2022-10-21"},{"lineNumber":29,"author":{"gitId":"pratham31012002"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-10-21"},{"lineNumber":30,"author":{"gitId":"pratham31012002"},"content":"            + PREFIX_PATH + \"PATH\\n\"","lastModifiedDate":"2022-10-22"},{"lineNumber":31,"author":{"gitId":"pratham31012002"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-21"},{"lineNumber":32,"author":{"gitId":"pratham31012002"},"content":"            + PREFIX_PATH + \"~/Desktop/data.csv\";","lastModifiedDate":"2022-10-22"},{"lineNumber":33,"author":{"gitId":"pratham31012002"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"PersonList exported successfully in %s\";","lastModifiedDate":"2022-10-24"},{"lineNumber":34,"author":{"gitId":"pratham31012002"},"content":"    public static final String MESSAGE_WINDOW \u003d \"Opening Export Window...\";","lastModifiedDate":"2022-10-24"},{"lineNumber":35,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":36,"author":{"gitId":"pratham31012002"},"content":"    private String filePath;","lastModifiedDate":"2022-10-22"},{"lineNumber":37,"author":{"gitId":"pratham31012002"},"content":"    private FileType fileType;","lastModifiedDate":"2022-10-22"},{"lineNumber":38,"author":{"gitId":"pratham31012002"},"content":"    private boolean onlyCommand;","lastModifiedDate":"2022-10-24"},{"lineNumber":39,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":40,"author":{"gitId":"pratham31012002"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":41,"author":{"gitId":"pratham31012002"},"content":"     * Creates an ExportCommand to export the AddressBook","lastModifiedDate":"2022-10-21"},{"lineNumber":42,"author":{"gitId":"pratham31012002"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":43,"author":{"gitId":"pratham31012002"},"content":"    public ExportCommand(String filePath, FileType fileType) {","lastModifiedDate":"2022-10-22"},{"lineNumber":44,"author":{"gitId":"pratham31012002"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-10-22"},{"lineNumber":45,"author":{"gitId":"pratham31012002"},"content":"        this.fileType \u003d fileType;","lastModifiedDate":"2022-10-22"},{"lineNumber":46,"author":{"gitId":"pratham31012002"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":47,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":48,"author":{"gitId":"pratham31012002"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":49,"author":{"gitId":"pratham31012002"},"content":"     * Creates an ExportCommand to export the AddressBook","lastModifiedDate":"2022-10-24"},{"lineNumber":50,"author":{"gitId":"pratham31012002"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":51,"author":{"gitId":"pratham31012002"},"content":"    public ExportCommand() {","lastModifiedDate":"2022-10-24"},{"lineNumber":52,"author":{"gitId":"pratham31012002"},"content":"        this.onlyCommand \u003d true;","lastModifiedDate":"2022-10-24"},{"lineNumber":53,"author":{"gitId":"pratham31012002"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":54,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":55,"author":{"gitId":"pratham31012002"},"content":"    @Override","lastModifiedDate":"2022-10-21"},{"lineNumber":56,"author":{"gitId":"pratham31012002"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-24"},{"lineNumber":57,"author":{"gitId":"pratham31012002"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-21"},{"lineNumber":58,"author":{"gitId":"pratham31012002"},"content":"        if (onlyCommand) {","lastModifiedDate":"2022-10-24"},{"lineNumber":59,"author":{"gitId":"pratham31012002"},"content":"            return new CommandResult(MESSAGE_WINDOW, false, false, true);","lastModifiedDate":"2022-10-24"},{"lineNumber":60,"author":{"gitId":"pratham31012002"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":61,"author":{"gitId":"pratham31012002"},"content":"        ObservableList\u003cPerson\u003e personList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-10-27"},{"lineNumber":62,"author":{"gitId":"pratham31012002"},"content":"        switch (fileType) {","lastModifiedDate":"2022-10-27"},{"lineNumber":63,"author":{"gitId":"pratham31012002"},"content":"        case CSV:","lastModifiedDate":"2022-10-27"},{"lineNumber":64,"author":{"gitId":"pratham31012002"},"content":"            toCsv(personList);","lastModifiedDate":"2022-10-27"},{"lineNumber":65,"author":{"gitId":"pratham31012002"},"content":"            break;","lastModifiedDate":"2022-10-27"},{"lineNumber":66,"author":{"gitId":"pratham31012002"},"content":"        case JSON:","lastModifiedDate":"2022-10-27"},{"lineNumber":67,"author":{"gitId":"pratham31012002"},"content":"            toJson(personList);","lastModifiedDate":"2022-10-27"},{"lineNumber":68,"author":{"gitId":"pratham31012002"},"content":"            break;","lastModifiedDate":"2022-10-27"},{"lineNumber":69,"author":{"gitId":"pratham31012002"},"content":"        default:","lastModifiedDate":"2022-10-27"},{"lineNumber":70,"author":{"gitId":"pratham31012002"},"content":"            throw new CommandException(\"File format invalid or not compatible!\");","lastModifiedDate":"2022-10-27"},{"lineNumber":71,"author":{"gitId":"pratham31012002"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":72,"author":{"gitId":"pratham31012002"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, filePath));","lastModifiedDate":"2022-10-24"},{"lineNumber":73,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":74,"author":{"gitId":"pratham31012002"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":75,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":76,"author":{"gitId":"pratham31012002"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":77,"author":{"gitId":"pratham31012002"},"content":"     * Convert personList to CSVFormat parsable form.","lastModifiedDate":"2022-10-24"},{"lineNumber":78,"author":{"gitId":"pratham31012002"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":79,"author":{"gitId":"pratham31012002"},"content":"    public static List\u003cString[]\u003e toCsvFormat(ObservableList\u003cPerson\u003e personList) {","lastModifiedDate":"2022-10-24"},{"lineNumber":80,"author":{"gitId":"pratham31012002"},"content":"        return personList.stream().flatMap(person -\u003e person.getDetailsAsArray().stream()).collect(Collectors.toList());","lastModifiedDate":"2022-10-24"},{"lineNumber":81,"author":{"gitId":"pratham31012002"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":82,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":83,"author":{"gitId":"pratham31012002"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":84,"author":{"gitId":"pratham31012002"},"content":"     * Export in CSV format.","lastModifiedDate":"2022-10-27"},{"lineNumber":85,"author":{"gitId":"pratham31012002"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":86,"author":{"gitId":"pratham31012002"},"content":"    public void toCsv(ObservableList\u003cPerson\u003e personList) throws CommandException {","lastModifiedDate":"2022-10-27"},{"lineNumber":87,"author":{"gitId":"pratham31012002"},"content":"        List\u003cString[]\u003e data \u003d toCsvFormat(personList);","lastModifiedDate":"2022-10-27"},{"lineNumber":88,"author":{"gitId":"pratham31012002"},"content":"        try {","lastModifiedDate":"2022-10-27"},{"lineNumber":89,"author":{"gitId":"pratham31012002"},"content":"            exportToCsvFile(filePath, data);","lastModifiedDate":"2022-10-27"},{"lineNumber":90,"author":{"gitId":"pratham31012002"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2022-10-27"},{"lineNumber":91,"author":{"gitId":"pratham31012002"},"content":"            throw new CommandException(\"Couldn\u0027t export file! Check file path and try again!\");","lastModifiedDate":"2022-10-27"},{"lineNumber":92,"author":{"gitId":"pratham31012002"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":93,"author":{"gitId":"pratham31012002"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":94,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":95,"author":{"gitId":"pratham31012002"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":96,"author":{"gitId":"pratham31012002"},"content":"     * Export in JSON format.","lastModifiedDate":"2022-10-27"},{"lineNumber":97,"author":{"gitId":"pratham31012002"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":98,"author":{"gitId":"pratham31012002"},"content":"    public void toJson(ObservableList\u003cPerson\u003e personList) throws CommandException {","lastModifiedDate":"2022-10-27"},{"lineNumber":99,"author":{"gitId":"pratham31012002"},"content":"        AddressBook filteredAddressBook \u003d new AddressBook();","lastModifiedDate":"2022-10-27"},{"lineNumber":100,"author":{"gitId":"pratham31012002"},"content":"        filteredAddressBook.setPersons(personList);","lastModifiedDate":"2022-10-27"},{"lineNumber":101,"author":{"gitId":"pratham31012002"},"content":"        try {","lastModifiedDate":"2022-10-27"},{"lineNumber":102,"author":{"gitId":"pratham31012002"},"content":"            Path path \u003d Paths.get(filePath);","lastModifiedDate":"2022-10-27"},{"lineNumber":103,"author":{"gitId":"pratham31012002"},"content":"            JsonUtil.saveJsonFile(new JsonSerializableAddressBook(filteredAddressBook), path);","lastModifiedDate":"2022-10-27"},{"lineNumber":104,"author":{"gitId":"pratham31012002"},"content":"        } catch (IOException | IllegalArgumentException e) {","lastModifiedDate":"2022-10-27"},{"lineNumber":105,"author":{"gitId":"pratham31012002"},"content":"            throw new CommandException(\"Couldn\u0027t export file! Check file path and try again!\");","lastModifiedDate":"2022-10-27"},{"lineNumber":106,"author":{"gitId":"pratham31012002"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":107,"author":{"gitId":"pratham31012002"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":108,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":109,"author":{"gitId":"pratham31012002"},"content":"    @Override","lastModifiedDate":"2022-10-28"},{"lineNumber":110,"author":{"gitId":"pratham31012002"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-28"},{"lineNumber":111,"author":{"gitId":"pratham31012002"},"content":"        if (this.onlyCommand) {","lastModifiedDate":"2022-10-28"},{"lineNumber":112,"author":{"gitId":"pratham31012002"},"content":"            return other instanceof ExportCommand \u0026\u0026 ((ExportCommand) other).onlyCommand;","lastModifiedDate":"2022-10-28"},{"lineNumber":113,"author":{"gitId":"pratham31012002"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":114,"author":{"gitId":"pratham31012002"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-28"},{"lineNumber":115,"author":{"gitId":"pratham31012002"},"content":"                || (other instanceof ExportCommand // instanceof handles nulls","lastModifiedDate":"2022-10-28"},{"lineNumber":116,"author":{"gitId":"pratham31012002"},"content":"                \u0026\u0026 filePath.equals(((ExportCommand) other).filePath)","lastModifiedDate":"2022-10-28"},{"lineNumber":117,"author":{"gitId":"pratham31012002"},"content":"                \u0026\u0026 fileType \u003d\u003d ((ExportCommand) other).fileType);","lastModifiedDate":"2022-10-28"},{"lineNumber":118,"author":{"gitId":"pratham31012002"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":119,"author":{"gitId":"pratham31012002"},"content":"}","lastModifiedDate":"2022-10-21"}],"authorContributionMap":{"pratham31012002":119}},{"path":"src/main/java/seedu/clinkedin/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.logic.commands;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":5,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.commons.core.Messages;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.Model;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.DetailsContainKeywordsPredicate;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"ytingtan"},"content":" * Finds and lists all persons in address book whose details contain any of the argument or tagged keywords.","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"agarwal-anjali"},"content":" * Keyword matching is case-insensitive.","lastModifiedDate":"2022-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"emptygx"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose details contain any of \"","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"emptygx"},"content":"            + \"the specified tagged or untagged keywords (case-insensitive) and displays them as a list \"","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"emptygx"},"content":"            + \"with index numbers.\\n\"","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"emptygx"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\\n\"","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"emptygx"},"content":"            + \"Example: \" + COMMAND_WORD + \" n/alex p/87654321 t/friends t/owesMoney\";","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"ytingtan"},"content":"    final DetailsContainKeywordsPredicate predicate;","lastModifiedDate":"2022-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":26,"author":{"gitId":"emptygx"},"content":"    public FindCommand(DetailsContainKeywordsPredicate predicate) {","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2018-04-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"agarwal-anjali":1,"ytingtan":2,"emptygx":10,"-":31}},{"path":"src/main/java/seedu/clinkedin/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.logic.commands;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.Model;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"josephaedan"},"content":"            + \"Entering \u0027\" + COMMAND_WORD","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"josephaedan"},"content":"            + \"\u0027 alone will open up a separate window to show help instructions for all commands.\\n\"","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"josephaedan"},"content":"            + \"Entering \u0027\" + COMMAND_WORD + \" \u003ccommand\u003e\u0027 will show help instructions for the specified command.\\n\"","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"josephaedan"},"content":"            + \"Example: \\n\\t- \" + COMMAND_WORD","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"josephaedan"},"content":"            + \"\\n\\t- \" + COMMAND_WORD + \" add\";","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"josephaedan"},"content":"    private final boolean showHelpWindow;","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"josephaedan"},"content":"    private final String shownHelpMessage;","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"josephaedan"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"josephaedan"},"content":"     * Creates a default HelpCommand to show help instructions for all commands.","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"josephaedan"},"content":"     * This will open up a separate window to show help instructions for all","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"josephaedan"},"content":"     * commands.","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"josephaedan"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"josephaedan"},"content":"    public HelpCommand() {","lastModifiedDate":"2022-10-26"},{"lineNumber":28,"author":{"gitId":"josephaedan"},"content":"        this.showHelpWindow \u003d true;","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"josephaedan"},"content":"        this.shownHelpMessage \u003d \"Opened help window.\";","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"josephaedan"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":31,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":32,"author":{"gitId":"josephaedan"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":33,"author":{"gitId":"josephaedan"},"content":"     * Creates a HelpCommand to show help instructions for the specified command.","lastModifiedDate":"2022-10-26"},{"lineNumber":34,"author":{"gitId":"josephaedan"},"content":"     * @param commandMessage The help message to be shown.","lastModifiedDate":"2022-10-26"},{"lineNumber":35,"author":{"gitId":"josephaedan"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":36,"author":{"gitId":"josephaedan"},"content":"    public HelpCommand(String commandMessage) {","lastModifiedDate":"2022-10-26"},{"lineNumber":37,"author":{"gitId":"josephaedan"},"content":"        this.showHelpWindow \u003d false;","lastModifiedDate":"2022-10-26"},{"lineNumber":38,"author":{"gitId":"josephaedan"},"content":"        this.shownHelpMessage \u003d commandMessage;","lastModifiedDate":"2022-10-26"},{"lineNumber":39,"author":{"gitId":"josephaedan"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":43,"author":{"gitId":"josephaedan"},"content":"        return new CommandResult(shownHelpMessage, showHelpWindow, false);","lastModifiedDate":"2022-10-26"},{"lineNumber":44,"author":{"gitId":"josephaedan"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":45,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":46,"author":{"gitId":"josephaedan"},"content":"    @Override","lastModifiedDate":"2022-10-26"},{"lineNumber":47,"author":{"gitId":"josephaedan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-26"},{"lineNumber":48,"author":{"gitId":"josephaedan"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-26"},{"lineNumber":49,"author":{"gitId":"josephaedan"},"content":"                || (other instanceof HelpCommand // instanceof handles nulls","lastModifiedDate":"2022-10-26"},{"lineNumber":50,"author":{"gitId":"josephaedan"},"content":"                        \u0026\u0026 showHelpWindow \u003d\u003d ((HelpCommand) other).showHelpWindow","lastModifiedDate":"2022-10-26"},{"lineNumber":51,"author":{"gitId":"josephaedan"},"content":"                        \u0026\u0026 shownHelpMessage.equals(((HelpCommand) other).shownHelpMessage));","lastModifiedDate":"2022-10-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"emptygx":2,"josephaedan":36,"-":15}},{"path":"src/main/java/seedu/clinkedin/logic/commands/ImportCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pratham31012002"},"content":"package seedu.clinkedin.logic.commands;","lastModifiedDate":"2022-10-21"},{"lineNumber":2,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":3,"author":{"gitId":"pratham31012002"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-21"},{"lineNumber":4,"author":{"gitId":"pratham31012002"},"content":"import static seedu.clinkedin.commons.util.FileUtil.importFromCsvFile;","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"pratham31012002"},"content":"import static seedu.clinkedin.logic.parser.CliSyntax.PREFIX_PATH;","lastModifiedDate":"2022-10-22"},{"lineNumber":6,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"pratham31012002"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"pratham31012002"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"pratham31012002"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"pratham31012002"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"pratham31012002"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"pratham31012002"},"content":"import java.util.List;","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"pratham31012002"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"pratham31012002"},"content":"import seedu.clinkedin.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"pratham31012002"},"content":"import seedu.clinkedin.commons.exceptions.EmptyFileException;","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"pratham31012002"},"content":"import seedu.clinkedin.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"pratham31012002"},"content":"import seedu.clinkedin.commons.util.JsonUtil;","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"pratham31012002"},"content":"import seedu.clinkedin.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"pratham31012002"},"content":"import seedu.clinkedin.logic.parser.ParserUtil;","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"pratham31012002"},"content":"import seedu.clinkedin.logic.parser.ParserUtil.FileType;","lastModifiedDate":"2022-10-22"},{"lineNumber":22,"author":{"gitId":"pratham31012002"},"content":"import seedu.clinkedin.logic.parser.exceptions.InvalidPersonException;","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"pratham31012002"},"content":"import seedu.clinkedin.model.AddressBook;","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"pratham31012002"},"content":"import seedu.clinkedin.model.Model;","lastModifiedDate":"2022-10-21"},{"lineNumber":25,"author":{"gitId":"pratham31012002"},"content":"import seedu.clinkedin.model.person.Person;","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"pratham31012002"},"content":"import seedu.clinkedin.model.person.UniqueTagTypeMap;","lastModifiedDate":"2022-10-28"},{"lineNumber":27,"author":{"gitId":"pratham31012002"},"content":"import seedu.clinkedin.model.person.exceptions.DuplicateTagTypeException;","lastModifiedDate":"2022-10-28"},{"lineNumber":28,"author":{"gitId":"pratham31012002"},"content":"import seedu.clinkedin.model.tag.TagType;","lastModifiedDate":"2022-10-28"},{"lineNumber":29,"author":{"gitId":"pratham31012002"},"content":"import seedu.clinkedin.storage.JsonSerializableAddressBook;","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":31,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":32,"author":{"gitId":"pratham31012002"},"content":"/**","lastModifiedDate":"2022-10-21"},{"lineNumber":33,"author":{"gitId":"pratham31012002"},"content":" * Imports an addressbook.","lastModifiedDate":"2022-10-21"},{"lineNumber":34,"author":{"gitId":"pratham31012002"},"content":" */","lastModifiedDate":"2022-10-21"},{"lineNumber":35,"author":{"gitId":"pratham31012002"},"content":"public class ImportCommand extends Command {","lastModifiedDate":"2022-10-21"},{"lineNumber":36,"author":{"gitId":"pratham31012002"},"content":"    public static final String COMMAND_WORD \u003d \"import\";","lastModifiedDate":"2022-10-21"},{"lineNumber":37,"author":{"gitId":"pratham31012002"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Imports the address book.\\n\"","lastModifiedDate":"2022-10-21"},{"lineNumber":38,"author":{"gitId":"pratham31012002"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-10-21"},{"lineNumber":39,"author":{"gitId":"pratham31012002"},"content":"            + PREFIX_PATH + \"PATH\\n\"","lastModifiedDate":"2022-10-22"},{"lineNumber":40,"author":{"gitId":"pratham31012002"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-21"},{"lineNumber":41,"author":{"gitId":"pratham31012002"},"content":"            + PREFIX_PATH + \"~/Desktop/data.csv\";","lastModifiedDate":"2022-10-22"},{"lineNumber":42,"author":{"gitId":"pratham31012002"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"File imported successfully!\";","lastModifiedDate":"2022-10-21"},{"lineNumber":43,"author":{"gitId":"pratham31012002"},"content":"    public static final String MESSAGE_EMPTY_FILE \u003d \"There are no CSV row entries detected in %s!\"","lastModifiedDate":"2022-10-26"},{"lineNumber":44,"author":{"gitId":"pratham31012002"},"content":"            + \" Please check your CSV file!\";","lastModifiedDate":"2022-10-26"},{"lineNumber":45,"author":{"gitId":"pratham31012002"},"content":"    public static final String MESSAGE_NO_CHANGE \u003d","lastModifiedDate":"2022-10-26"},{"lineNumber":46,"author":{"gitId":"pratham31012002"},"content":"            \"CLInkedIn already contains all the candidates you are importing from %s!\";","lastModifiedDate":"2022-10-26"},{"lineNumber":47,"author":{"gitId":"pratham31012002"},"content":"    public static final String MESSAGE_SOME_CHANGE \u003d","lastModifiedDate":"2022-10-26"},{"lineNumber":48,"author":{"gitId":"pratham31012002"},"content":"            \"Some candidates were ignored as adding them would result in duplicate persons!\";","lastModifiedDate":"2022-10-26"},{"lineNumber":49,"author":{"gitId":"pratham31012002"},"content":"    public static final String MESSAGE_NEW_TAGTYPES \u003d","lastModifiedDate":"2022-10-28"},{"lineNumber":50,"author":{"gitId":"pratham31012002"},"content":"            \"Missing tag types were created!\";","lastModifiedDate":"2022-10-28"},{"lineNumber":51,"author":{"gitId":"pratham31012002"},"content":"    public static final String MESSAGE_WINDOW \u003d \"Opening Import Window...\";","lastModifiedDate":"2022-10-26"},{"lineNumber":52,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":53,"author":{"gitId":"pratham31012002"},"content":"    private String filePath;","lastModifiedDate":"2022-10-22"},{"lineNumber":54,"author":{"gitId":"pratham31012002"},"content":"    private FileType fileType;","lastModifiedDate":"2022-10-22"},{"lineNumber":55,"author":{"gitId":"pratham31012002"},"content":"    private boolean onlyCommand;","lastModifiedDate":"2022-10-26"},{"lineNumber":56,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":57,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":58,"author":{"gitId":"pratham31012002"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":59,"author":{"gitId":"pratham31012002"},"content":"     * Creates an ImportCommand to import an AddressBook","lastModifiedDate":"2022-10-21"},{"lineNumber":60,"author":{"gitId":"pratham31012002"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":61,"author":{"gitId":"pratham31012002"},"content":"    public ImportCommand(String fileName, FileType fileType) {","lastModifiedDate":"2022-10-22"},{"lineNumber":62,"author":{"gitId":"pratham31012002"},"content":"        this.filePath \u003d fileName;","lastModifiedDate":"2022-10-22"},{"lineNumber":63,"author":{"gitId":"pratham31012002"},"content":"        this.fileType \u003d fileType;","lastModifiedDate":"2022-10-22"},{"lineNumber":64,"author":{"gitId":"pratham31012002"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":65,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":66,"author":{"gitId":"pratham31012002"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":67,"author":{"gitId":"pratham31012002"},"content":"     * Creates an ImportCommand to import an AddressBook","lastModifiedDate":"2022-10-26"},{"lineNumber":68,"author":{"gitId":"pratham31012002"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":69,"author":{"gitId":"pratham31012002"},"content":"    public ImportCommand() {","lastModifiedDate":"2022-10-26"},{"lineNumber":70,"author":{"gitId":"pratham31012002"},"content":"        this.onlyCommand \u003d true;","lastModifiedDate":"2022-10-26"},{"lineNumber":71,"author":{"gitId":"pratham31012002"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":72,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":73,"author":{"gitId":"pratham31012002"},"content":"    @Override","lastModifiedDate":"2022-10-21"},{"lineNumber":74,"author":{"gitId":"pratham31012002"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-26"},{"lineNumber":75,"author":{"gitId":"pratham31012002"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-21"},{"lineNumber":76,"author":{"gitId":"pratham31012002"},"content":"        if (onlyCommand) {","lastModifiedDate":"2022-10-26"},{"lineNumber":77,"author":{"gitId":"pratham31012002"},"content":"            return new CommandResult(MESSAGE_WINDOW, false, false, false, true);","lastModifiedDate":"2022-10-26"},{"lineNumber":78,"author":{"gitId":"pratham31012002"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":79,"author":{"gitId":"pratham31012002"},"content":"        List\u003cPerson\u003e personList;","lastModifiedDate":"2022-10-27"},{"lineNumber":80,"author":{"gitId":"pratham31012002"},"content":"        switch (fileType) {","lastModifiedDate":"2022-10-27"},{"lineNumber":81,"author":{"gitId":"pratham31012002"},"content":"        case CSV:","lastModifiedDate":"2022-10-27"},{"lineNumber":82,"author":{"gitId":"pratham31012002"},"content":"            personList \u003d fromCsv();","lastModifiedDate":"2022-10-27"},{"lineNumber":83,"author":{"gitId":"pratham31012002"},"content":"            break;","lastModifiedDate":"2022-10-27"},{"lineNumber":84,"author":{"gitId":"pratham31012002"},"content":"        case JSON:","lastModifiedDate":"2022-10-27"},{"lineNumber":85,"author":{"gitId":"pratham31012002"},"content":"            personList \u003d fromJson();","lastModifiedDate":"2022-10-27"},{"lineNumber":86,"author":{"gitId":"pratham31012002"},"content":"            break;","lastModifiedDate":"2022-10-27"},{"lineNumber":87,"author":{"gitId":"pratham31012002"},"content":"        default:","lastModifiedDate":"2022-10-27"},{"lineNumber":88,"author":{"gitId":"pratham31012002"},"content":"            throw new CommandException(\"File format invalid or not compatible!\");","lastModifiedDate":"2022-10-27"},{"lineNumber":89,"author":{"gitId":"pratham31012002"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":90,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":91,"author":{"gitId":"pratham31012002"},"content":"        boolean isUpdated \u003d false;","lastModifiedDate":"2022-10-26"},{"lineNumber":92,"author":{"gitId":"pratham31012002"},"content":"        boolean isSomeExisting \u003d false;","lastModifiedDate":"2022-10-26"},{"lineNumber":93,"author":{"gitId":"pratham31012002"},"content":"        for (Person person : personList) {","lastModifiedDate":"2022-10-26"},{"lineNumber":94,"author":{"gitId":"pratham31012002"},"content":"            if (!model.hasPerson(person)) {","lastModifiedDate":"2022-10-26"},{"lineNumber":95,"author":{"gitId":"pratham31012002"},"content":"                isUpdated \u003d true;","lastModifiedDate":"2022-10-26"},{"lineNumber":96,"author":{"gitId":"pratham31012002"},"content":"                model.addPerson(person);","lastModifiedDate":"2022-10-26"},{"lineNumber":97,"author":{"gitId":"pratham31012002"},"content":"            } else {","lastModifiedDate":"2022-10-26"},{"lineNumber":98,"author":{"gitId":"pratham31012002"},"content":"                isSomeExisting \u003d true;","lastModifiedDate":"2022-10-26"},{"lineNumber":99,"author":{"gitId":"pratham31012002"},"content":"            }","lastModifiedDate":"2022-10-26"},{"lineNumber":100,"author":{"gitId":"pratham31012002"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":101,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":102,"author":{"gitId":"pratham31012002"},"content":"        boolean isNewCreated \u003d false;","lastModifiedDate":"2022-10-28"},{"lineNumber":103,"author":{"gitId":"pratham31012002"},"content":"        if (isUpdated \u0026\u0026 fileType \u003d\u003d fileType.CSV) {","lastModifiedDate":"2022-10-28"},{"lineNumber":104,"author":{"gitId":"pratham31012002"},"content":"            try {","lastModifiedDate":"2022-10-28"},{"lineNumber":105,"author":{"gitId":"pratham31012002"},"content":"                if (isCreateNonExistingTagTypes(personList)) {","lastModifiedDate":"2022-10-28"},{"lineNumber":106,"author":{"gitId":"pratham31012002"},"content":"                    isNewCreated \u003d true;","lastModifiedDate":"2022-10-28"},{"lineNumber":107,"author":{"gitId":"pratham31012002"},"content":"                }","lastModifiedDate":"2022-10-28"},{"lineNumber":108,"author":{"gitId":"pratham31012002"},"content":"            } catch (DuplicateTagTypeException dte) {","lastModifiedDate":"2022-10-28"},{"lineNumber":109,"author":{"gitId":"pratham31012002"},"content":"                throw new CommandException(\"File format invalid or not compatible!\");","lastModifiedDate":"2022-10-28"},{"lineNumber":110,"author":{"gitId":"pratham31012002"},"content":"            }","lastModifiedDate":"2022-10-28"},{"lineNumber":111,"author":{"gitId":"pratham31012002"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":112,"author":{"gitId":"pratham31012002"},"content":"        StringBuilder returnMessage \u003d new StringBuilder();","lastModifiedDate":"2022-10-28"},{"lineNumber":113,"author":{"gitId":"pratham31012002"},"content":"        if (isUpdated) {","lastModifiedDate":"2022-10-26"},{"lineNumber":114,"author":{"gitId":"pratham31012002"},"content":"            returnMessage.append(MESSAGE_SUCCESS);","lastModifiedDate":"2022-10-28"},{"lineNumber":115,"author":{"gitId":"pratham31012002"},"content":"            if (isSomeExisting) {","lastModifiedDate":"2022-10-28"},{"lineNumber":116,"author":{"gitId":"pratham31012002"},"content":"                returnMessage.append(\" \" + MESSAGE_SOME_CHANGE);","lastModifiedDate":"2022-10-28"},{"lineNumber":117,"author":{"gitId":"pratham31012002"},"content":"            }","lastModifiedDate":"2022-10-28"},{"lineNumber":118,"author":{"gitId":"pratham31012002"},"content":"            if (isNewCreated) {","lastModifiedDate":"2022-10-28"},{"lineNumber":119,"author":{"gitId":"pratham31012002"},"content":"                returnMessage.append(\" \" + MESSAGE_NEW_TAGTYPES);","lastModifiedDate":"2022-10-28"},{"lineNumber":120,"author":{"gitId":"pratham31012002"},"content":"            }","lastModifiedDate":"2022-10-28"},{"lineNumber":121,"author":{"gitId":"pratham31012002"},"content":"            return new CommandResult(returnMessage.toString());","lastModifiedDate":"2022-10-28"},{"lineNumber":122,"author":{"gitId":"pratham31012002"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":123,"author":{"gitId":"pratham31012002"},"content":"        return new CommandResult(String.format(MESSAGE_NO_CHANGE, filePath));","lastModifiedDate":"2022-10-26"},{"lineNumber":124,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":125,"author":{"gitId":"pratham31012002"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":126,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":127,"author":{"gitId":"pratham31012002"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":128,"author":{"gitId":"pratham31012002"},"content":"     * Creates tag types not pre-existing in the addressbook.","lastModifiedDate":"2022-10-28"},{"lineNumber":129,"author":{"gitId":"pratham31012002"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":130,"author":{"gitId":"pratham31012002"},"content":"    public boolean isCreateNonExistingTagTypes(List\u003cPerson\u003e personList) throws DuplicateTagTypeException {","lastModifiedDate":"2022-10-28"},{"lineNumber":131,"author":{"gitId":"pratham31012002"},"content":"        boolean result \u003d false;","lastModifiedDate":"2022-10-28"},{"lineNumber":132,"author":{"gitId":"pratham31012002"},"content":"        for (Person p : personList) {","lastModifiedDate":"2022-10-28"},{"lineNumber":133,"author":{"gitId":"pratham31012002"},"content":"            for (TagType tagType: p.getTags().keySet()) {","lastModifiedDate":"2022-10-28"},{"lineNumber":134,"author":{"gitId":"pratham31012002"},"content":"                if (!UniqueTagTypeMap.getPrefixMap().containsKey(tagType.getPrefix())","lastModifiedDate":"2022-10-28"},{"lineNumber":135,"author":{"gitId":"pratham31012002"},"content":"                        \u0026\u0026 !UniqueTagTypeMap.getPrefixMap().containsValue(tagType)) {","lastModifiedDate":"2022-10-28"},{"lineNumber":136,"author":{"gitId":"pratham31012002"},"content":"                    result \u003d true;","lastModifiedDate":"2022-10-28"},{"lineNumber":137,"author":{"gitId":"pratham31012002"},"content":"                    UniqueTagTypeMap.createTagType(tagType.getPrefix(), tagType);","lastModifiedDate":"2022-10-28"},{"lineNumber":138,"author":{"gitId":"pratham31012002"},"content":"                } else if (!UniqueTagTypeMap.getPrefixMap().containsKey(tagType.getPrefix())","lastModifiedDate":"2022-10-28"},{"lineNumber":139,"author":{"gitId":"pratham31012002"},"content":"                        || !UniqueTagTypeMap.getPrefixMap().containsValue(tagType)) {","lastModifiedDate":"2022-10-28"},{"lineNumber":140,"author":{"gitId":"pratham31012002"},"content":"                    throw new DuplicateTagTypeException();","lastModifiedDate":"2022-10-28"},{"lineNumber":141,"author":{"gitId":"pratham31012002"},"content":"                }","lastModifiedDate":"2022-10-28"},{"lineNumber":142,"author":{"gitId":"pratham31012002"},"content":"            }","lastModifiedDate":"2022-10-28"},{"lineNumber":143,"author":{"gitId":"pratham31012002"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":144,"author":{"gitId":"pratham31012002"},"content":"        return result;","lastModifiedDate":"2022-10-28"},{"lineNumber":145,"author":{"gitId":"pratham31012002"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":146,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":147,"author":{"gitId":"pratham31012002"},"content":"    public List\u003cPerson\u003e getPersonList(ArrayList\u003cArrayList\u003cString[]\u003e\u003e stringPersonList) throws CommandException {","lastModifiedDate":"2022-10-26"},{"lineNumber":148,"author":{"gitId":"pratham31012002"},"content":"        List\u003cPerson\u003e personList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-26"},{"lineNumber":149,"author":{"gitId":"pratham31012002"},"content":"        for (ArrayList\u003cString[]\u003e person: stringPersonList) {","lastModifiedDate":"2022-10-26"},{"lineNumber":150,"author":{"gitId":"pratham31012002"},"content":"            try {","lastModifiedDate":"2022-10-26"},{"lineNumber":151,"author":{"gitId":"pratham31012002"},"content":"                personList.add(ParserUtil.parsePerson(person));","lastModifiedDate":"2022-10-26"},{"lineNumber":152,"author":{"gitId":"pratham31012002"},"content":"            } catch (InvalidPersonException ipe) {","lastModifiedDate":"2022-10-26"},{"lineNumber":153,"author":{"gitId":"pratham31012002"},"content":"                throw new CommandException(\"Address book couldn\u0027t be imported as the file format is incorrect!\");","lastModifiedDate":"2022-10-28"},{"lineNumber":154,"author":{"gitId":"pratham31012002"},"content":"            }","lastModifiedDate":"2022-10-26"},{"lineNumber":155,"author":{"gitId":"pratham31012002"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":156,"author":{"gitId":"pratham31012002"},"content":"        return personList;","lastModifiedDate":"2022-10-26"},{"lineNumber":157,"author":{"gitId":"pratham31012002"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":158,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":159,"author":{"gitId":"pratham31012002"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":160,"author":{"gitId":"pratham31012002"},"content":"     * Reads from JSON file.","lastModifiedDate":"2022-10-27"},{"lineNumber":161,"author":{"gitId":"pratham31012002"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":162,"author":{"gitId":"pratham31012002"},"content":"    public List\u003cPerson\u003e fromJson() throws CommandException {","lastModifiedDate":"2022-10-27"},{"lineNumber":163,"author":{"gitId":"pratham31012002"},"content":"        Optional\u003cJsonSerializableAddressBook\u003e jsonAddressBook;","lastModifiedDate":"2022-10-27"},{"lineNumber":164,"author":{"gitId":"pratham31012002"},"content":"        try {","lastModifiedDate":"2022-10-27"},{"lineNumber":165,"author":{"gitId":"pratham31012002"},"content":"            Path path \u003d Paths.get(filePath);","lastModifiedDate":"2022-10-27"},{"lineNumber":166,"author":{"gitId":"pratham31012002"},"content":"            jsonAddressBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2022-10-27"},{"lineNumber":167,"author":{"gitId":"pratham31012002"},"content":"                    path, JsonSerializableAddressBook.class);","lastModifiedDate":"2022-10-27"},{"lineNumber":168,"author":{"gitId":"pratham31012002"},"content":"        } catch (DataConversionException | IllegalArgumentException e) {","lastModifiedDate":"2022-10-27"},{"lineNumber":169,"author":{"gitId":"pratham31012002"},"content":"            throw new CommandException(\"Couldn\u0027t read file properly. Check your file again!\");","lastModifiedDate":"2022-10-27"},{"lineNumber":170,"author":{"gitId":"pratham31012002"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":171,"author":{"gitId":"pratham31012002"},"content":"        if (!jsonAddressBook.isPresent()) {","lastModifiedDate":"2022-10-27"},{"lineNumber":172,"author":{"gitId":"pratham31012002"},"content":"            throw new CommandException(\"Couldn\u0027t read file properly. Check your file again!\");","lastModifiedDate":"2022-10-27"},{"lineNumber":173,"author":{"gitId":"pratham31012002"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":174,"author":{"gitId":"pratham31012002"},"content":"        Optional\u003cAddressBook\u003e addressBook;","lastModifiedDate":"2022-10-27"},{"lineNumber":175,"author":{"gitId":"pratham31012002"},"content":"        try {","lastModifiedDate":"2022-10-27"},{"lineNumber":176,"author":{"gitId":"pratham31012002"},"content":"            addressBook \u003d Optional.of(jsonAddressBook.get().toModelType());","lastModifiedDate":"2022-10-27"},{"lineNumber":177,"author":{"gitId":"pratham31012002"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2022-10-27"},{"lineNumber":178,"author":{"gitId":"pratham31012002"},"content":"            throw new CommandException(\"Incompatible file format. Check your file again!\");","lastModifiedDate":"2022-10-27"},{"lineNumber":179,"author":{"gitId":"pratham31012002"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":180,"author":{"gitId":"pratham31012002"},"content":"        if (addressBook.isPresent()) {","lastModifiedDate":"2022-10-27"},{"lineNumber":181,"author":{"gitId":"pratham31012002"},"content":"            return addressBook.get().getPersonList();","lastModifiedDate":"2022-10-27"},{"lineNumber":182,"author":{"gitId":"pratham31012002"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":183,"author":{"gitId":"pratham31012002"},"content":"        throw new CommandException(\"Incompatible file format. Check your file again!\");","lastModifiedDate":"2022-10-27"},{"lineNumber":184,"author":{"gitId":"pratham31012002"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":185,"author":{"gitId":"pratham31012002"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":186,"author":{"gitId":"pratham31012002"},"content":"     * Reads from CSV file.","lastModifiedDate":"2022-10-27"},{"lineNumber":187,"author":{"gitId":"pratham31012002"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":188,"author":{"gitId":"pratham31012002"},"content":"    public List\u003cPerson\u003e fromCsv() throws CommandException {","lastModifiedDate":"2022-10-27"},{"lineNumber":189,"author":{"gitId":"pratham31012002"},"content":"        ArrayList\u003cArrayList\u003cString[]\u003e\u003e content;","lastModifiedDate":"2022-10-27"},{"lineNumber":190,"author":{"gitId":"pratham31012002"},"content":"        try {","lastModifiedDate":"2022-10-27"},{"lineNumber":191,"author":{"gitId":"pratham31012002"},"content":"            content \u003d importFromCsvFile(filePath);","lastModifiedDate":"2022-10-27"},{"lineNumber":192,"author":{"gitId":"pratham31012002"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-10-27"},{"lineNumber":193,"author":{"gitId":"pratham31012002"},"content":"            throw new CommandException(e.getMessage());","lastModifiedDate":"2022-10-27"},{"lineNumber":194,"author":{"gitId":"pratham31012002"},"content":"        } catch (EmptyFileException e) {","lastModifiedDate":"2022-10-27"},{"lineNumber":195,"author":{"gitId":"pratham31012002"},"content":"            throw new CommandException(e.getMessage());","lastModifiedDate":"2022-10-27"},{"lineNumber":196,"author":{"gitId":"pratham31012002"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-10-27"},{"lineNumber":197,"author":{"gitId":"pratham31012002"},"content":"            throw new CommandException(\"Couldn\u0027t import file!\");","lastModifiedDate":"2022-10-27"},{"lineNumber":198,"author":{"gitId":"pratham31012002"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":199,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":200,"author":{"gitId":"pratham31012002"},"content":"        if (content.size() \u003d\u003d 0) {","lastModifiedDate":"2022-10-27"},{"lineNumber":201,"author":{"gitId":"pratham31012002"},"content":"            throw new CommandException(String.format(MESSAGE_EMPTY_FILE, filePath));","lastModifiedDate":"2022-10-27"},{"lineNumber":202,"author":{"gitId":"pratham31012002"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":203,"author":{"gitId":"pratham31012002"},"content":"        List\u003cPerson\u003e personList \u003d getPersonList(content);","lastModifiedDate":"2022-10-27"},{"lineNumber":204,"author":{"gitId":"pratham31012002"},"content":"        return personList;","lastModifiedDate":"2022-10-27"},{"lineNumber":205,"author":{"gitId":"pratham31012002"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":206,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":207,"author":{"gitId":"pratham31012002"},"content":"    @Override","lastModifiedDate":"2022-10-28"},{"lineNumber":208,"author":{"gitId":"pratham31012002"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-28"},{"lineNumber":209,"author":{"gitId":"pratham31012002"},"content":"        if (this.onlyCommand) {","lastModifiedDate":"2022-10-28"},{"lineNumber":210,"author":{"gitId":"pratham31012002"},"content":"            return other instanceof ImportCommand \u0026\u0026 ((ImportCommand) other).onlyCommand;","lastModifiedDate":"2022-10-28"},{"lineNumber":211,"author":{"gitId":"pratham31012002"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":212,"author":{"gitId":"pratham31012002"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-28"},{"lineNumber":213,"author":{"gitId":"pratham31012002"},"content":"                || (other instanceof ImportCommand // instanceof handles nulls","lastModifiedDate":"2022-10-28"},{"lineNumber":214,"author":{"gitId":"pratham31012002"},"content":"                \u0026\u0026 filePath.equals(((ImportCommand) other).filePath)","lastModifiedDate":"2022-10-28"},{"lineNumber":215,"author":{"gitId":"pratham31012002"},"content":"                \u0026\u0026 fileType \u003d\u003d ((ImportCommand) other).fileType);","lastModifiedDate":"2022-10-28"},{"lineNumber":216,"author":{"gitId":"pratham31012002"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":217,"author":{"gitId":"pratham31012002"},"content":"}","lastModifiedDate":"2022-10-21"}],"authorContributionMap":{"pratham31012002":217}},{"path":"src/main/java/seedu/clinkedin/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.logic.commands;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.Model;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2022-10-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"josephaedan"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Lists all candidates in the CLInkedIn address book.\\n\"","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"josephaedan"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"pratham31012002"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all persons.\";","lastModifiedDate":"2022-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"emptygx":3,"josephaedan":2,"pratham31012002":1,"-":20}},{"path":"src/main/java/seedu/clinkedin/logic/commands/RedoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.logic.commands;","lastModifiedDate":"2022-10-24"},{"lineNumber":2,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":3,"author":{"gitId":"emptygx"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-24"},{"lineNumber":4,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":5,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.commons.core.Messages;","lastModifiedDate":"2022-10-24"},{"lineNumber":6,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-24"},{"lineNumber":7,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.Model;","lastModifiedDate":"2022-10-24"},{"lineNumber":8,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":9,"author":{"gitId":"emptygx"},"content":"/**","lastModifiedDate":"2022-10-24"},{"lineNumber":10,"author":{"gitId":"emptygx"},"content":" * Restores the previously undone modification to CLInkedIn.","lastModifiedDate":"2022-10-24"},{"lineNumber":11,"author":{"gitId":"emptygx"},"content":" */","lastModifiedDate":"2022-10-24"},{"lineNumber":12,"author":{"gitId":"emptygx"},"content":"public class RedoCommand extends Command {","lastModifiedDate":"2022-10-24"},{"lineNumber":13,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":14,"author":{"gitId":"emptygx"},"content":"    public static final String COMMAND_WORD \u003d \"redo\";","lastModifiedDate":"2022-10-24"},{"lineNumber":15,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":16,"author":{"gitId":"emptygx"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Restores the previously undone modification \"","lastModifiedDate":"2022-10-24"},{"lineNumber":17,"author":{"gitId":"emptygx"},"content":"            + \"to CLInkedIn.\\n\"","lastModifiedDate":"2022-10-24"},{"lineNumber":18,"author":{"gitId":"emptygx"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2022-10-24"},{"lineNumber":19,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":20,"author":{"gitId":"emptygx"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Redo successful!\";","lastModifiedDate":"2022-10-24"},{"lineNumber":21,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":22,"author":{"gitId":"emptygx"},"content":"    public RedoCommand() {","lastModifiedDate":"2022-10-24"},{"lineNumber":23,"author":{"gitId":"emptygx"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":24,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":25,"author":{"gitId":"emptygx"},"content":"    @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":26,"author":{"gitId":"emptygx"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-24"},{"lineNumber":27,"author":{"gitId":"emptygx"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-24"},{"lineNumber":28,"author":{"gitId":"emptygx"},"content":"        if (!model.canRedoAddressBook()) {","lastModifiedDate":"2022-10-24"},{"lineNumber":29,"author":{"gitId":"emptygx"},"content":"            throw new CommandException(Messages.MESSAGE_CANNOT_REDO);","lastModifiedDate":"2022-10-24"},{"lineNumber":30,"author":{"gitId":"emptygx"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":31,"author":{"gitId":"emptygx"},"content":"        model.redoAddressBook();","lastModifiedDate":"2022-10-24"},{"lineNumber":32,"author":{"gitId":"emptygx"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2022-10-24"},{"lineNumber":33,"author":{"gitId":"emptygx"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":34,"author":{"gitId":"emptygx"},"content":"}","lastModifiedDate":"2022-10-24"}],"authorContributionMap":{"emptygx":34}},{"path":"src/main/java/seedu/clinkedin/logic/commands/SortCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ytingtan"},"content":"package seedu.clinkedin.logic.commands;","lastModifiedDate":"2022-10-28"},{"lineNumber":2,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":3,"author":{"gitId":"ytingtan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-28"},{"lineNumber":4,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":5,"author":{"gitId":"ytingtan"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-10-28"},{"lineNumber":6,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":7,"author":{"gitId":"ytingtan"},"content":"import seedu.clinkedin.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-28"},{"lineNumber":8,"author":{"gitId":"ytingtan"},"content":"import seedu.clinkedin.model.Model;","lastModifiedDate":"2022-10-28"},{"lineNumber":9,"author":{"gitId":"ytingtan"},"content":"import seedu.clinkedin.model.person.Person;","lastModifiedDate":"2022-10-28"},{"lineNumber":10,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":11,"author":{"gitId":"ytingtan"},"content":"/**","lastModifiedDate":"2022-10-28"},{"lineNumber":12,"author":{"gitId":"ytingtan"},"content":" * Sorts candidates based on their ratings. Candidates with no ratings will be placed at the bottom of the list.","lastModifiedDate":"2022-10-28"},{"lineNumber":13,"author":{"gitId":"ytingtan"},"content":" *","lastModifiedDate":"2022-10-28"},{"lineNumber":14,"author":{"gitId":"ytingtan"},"content":" */","lastModifiedDate":"2022-10-28"},{"lineNumber":15,"author":{"gitId":"ytingtan"},"content":"public class SortCommand extends Command {","lastModifiedDate":"2022-10-28"},{"lineNumber":16,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"ytingtan"},"content":"    public static final String COMMAND_WORD \u003d \"sort\";","lastModifiedDate":"2022-10-28"},{"lineNumber":18,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":19,"author":{"gitId":"ytingtan"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Sorts persons by their rating\"","lastModifiedDate":"2022-10-28"},{"lineNumber":20,"author":{"gitId":"ytingtan"},"content":"            + \"from high to low.\\n\"","lastModifiedDate":"2022-10-28"},{"lineNumber":21,"author":{"gitId":"ytingtan"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-10-28"},{"lineNumber":22,"author":{"gitId":"ytingtan"},"content":"            + \"(none)\"","lastModifiedDate":"2022-10-28"},{"lineNumber":23,"author":{"gitId":"ytingtan"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2022-10-28"},{"lineNumber":24,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":25,"author":{"gitId":"ytingtan"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Sorted by rating!\";","lastModifiedDate":"2022-10-28"},{"lineNumber":26,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":27,"author":{"gitId":"ytingtan"},"content":"    private final Comparator\u003cPerson\u003e comparator;","lastModifiedDate":"2022-10-28"},{"lineNumber":28,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":29,"author":{"gitId":"ytingtan"},"content":"    public SortCommand() {","lastModifiedDate":"2022-10-28"},{"lineNumber":30,"author":{"gitId":"ytingtan"},"content":"        this.comparator \u003d (p1, p2) -\u003e p2.compareByRating(p1);","lastModifiedDate":"2022-10-28"},{"lineNumber":31,"author":{"gitId":"ytingtan"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":32,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":33,"author":{"gitId":"ytingtan"},"content":"    public Comparator\u003cPerson\u003e getComparator() {","lastModifiedDate":"2022-10-28"},{"lineNumber":34,"author":{"gitId":"ytingtan"},"content":"        return comparator;","lastModifiedDate":"2022-10-28"},{"lineNumber":35,"author":{"gitId":"ytingtan"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":36,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":37,"author":{"gitId":"ytingtan"},"content":"    @Override","lastModifiedDate":"2022-10-28"},{"lineNumber":38,"author":{"gitId":"ytingtan"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-28"},{"lineNumber":39,"author":{"gitId":"ytingtan"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-28"},{"lineNumber":40,"author":{"gitId":"ytingtan"},"content":"        model.updateSort(getComparator());","lastModifiedDate":"2022-10-28"},{"lineNumber":41,"author":{"gitId":"ytingtan"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS));","lastModifiedDate":"2022-10-28"},{"lineNumber":42,"author":{"gitId":"ytingtan"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":43,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":44,"author":{"gitId":"ytingtan"},"content":"    @Override","lastModifiedDate":"2022-10-28"},{"lineNumber":45,"author":{"gitId":"ytingtan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-28"},{"lineNumber":46,"author":{"gitId":"ytingtan"},"content":"        return other \u003d\u003d this //short circuit if same object","lastModifiedDate":"2022-10-28"},{"lineNumber":47,"author":{"gitId":"ytingtan"},"content":"            || (other instanceof SortCommand // instanceof handles nulls","lastModifiedDate":"2022-10-28"},{"lineNumber":48,"author":{"gitId":"ytingtan"},"content":"                \u0026\u0026 comparator.equals(((SortCommand) other).comparator)); // state check","lastModifiedDate":"2022-10-28"},{"lineNumber":49,"author":{"gitId":"ytingtan"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":50,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":51,"author":{"gitId":"ytingtan"},"content":"}","lastModifiedDate":"2022-10-28"}],"authorContributionMap":{"ytingtan":51}},{"path":"src/main/java/seedu/clinkedin/logic/commands/StatsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.logic.commands;","lastModifiedDate":"2022-10-23"},{"lineNumber":2,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":3,"author":{"gitId":"emptygx"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-23"},{"lineNumber":4,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":5,"author":{"gitId":"emptygx"},"content":"import java.util.DoubleSummaryStatistics;","lastModifiedDate":"2022-10-23"},{"lineNumber":6,"author":{"gitId":"emptygx"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-10-28"},{"lineNumber":7,"author":{"gitId":"emptygx"},"content":"import java.util.Map;","lastModifiedDate":"2022-10-28"},{"lineNumber":8,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":9,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.commons.core.Messages;","lastModifiedDate":"2022-10-23"},{"lineNumber":10,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.Model;","lastModifiedDate":"2022-10-23"},{"lineNumber":11,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":12,"author":{"gitId":"emptygx"},"content":"/**","lastModifiedDate":"2022-10-23"},{"lineNumber":13,"author":{"gitId":"emptygx"},"content":" * Calculates and displays the statistics of the persons in the user\u0027s ClInkedIn.","lastModifiedDate":"2022-10-23"},{"lineNumber":14,"author":{"gitId":"emptygx"},"content":" * Uses the DoubleSummaryStatistics class to calculate the statistics.","lastModifiedDate":"2022-10-23"},{"lineNumber":15,"author":{"gitId":"emptygx"},"content":" * Only the persons currently displayed in the user\u0027s ClInkedIn will be used to calculate the statistics. i.e. the","lastModifiedDate":"2022-10-23"},{"lineNumber":16,"author":{"gitId":"emptygx"},"content":" * statistics will not include persons that are filtered out by the user.","lastModifiedDate":"2022-10-23"},{"lineNumber":17,"author":{"gitId":"emptygx"},"content":" */","lastModifiedDate":"2022-10-23"},{"lineNumber":18,"author":{"gitId":"emptygx"},"content":"public class StatsCommand extends Command {","lastModifiedDate":"2022-10-23"},{"lineNumber":19,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":20,"author":{"gitId":"emptygx"},"content":"    public static final String COMMAND_WORD \u003d \"stats\";","lastModifiedDate":"2022-10-23"},{"lineNumber":21,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":22,"author":{"gitId":"emptygx"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Calculates and displays the statistics of the persons \"","lastModifiedDate":"2022-10-23"},{"lineNumber":23,"author":{"gitId":"emptygx"},"content":"            + \"in the user\u0027s ClInkedIn.\\n\"","lastModifiedDate":"2022-10-23"},{"lineNumber":24,"author":{"gitId":"emptygx"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2022-10-23"},{"lineNumber":25,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":26,"author":{"gitId":"emptygx"},"content":"    private Map\u003cString, Map\u003cString, Integer\u003e\u003e stats;","lastModifiedDate":"2022-10-28"},{"lineNumber":27,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":28,"author":{"gitId":"emptygx"},"content":"    @Override","lastModifiedDate":"2022-10-23"},{"lineNumber":29,"author":{"gitId":"emptygx"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-10-23"},{"lineNumber":30,"author":{"gitId":"emptygx"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-23"},{"lineNumber":31,"author":{"gitId":"emptygx"},"content":"        DoubleSummaryStatistics tagStats \u003d model.getStats();","lastModifiedDate":"2022-10-28"},{"lineNumber":32,"author":{"gitId":"emptygx"},"content":"        stats \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-10-28"},{"lineNumber":33,"author":{"gitId":"emptygx"},"content":"        Map\u003cString, Integer\u003e ratingStatsMap \u003d model.getRatingCount();","lastModifiedDate":"2022-10-28"},{"lineNumber":34,"author":{"gitId":"emptygx"},"content":"        stats.put(\"Rating Statistics\", ratingStatsMap);","lastModifiedDate":"2022-10-28"},{"lineNumber":35,"author":{"gitId":"emptygx"},"content":"        return new CommandResult(String.format(","lastModifiedDate":"2022-10-23"},{"lineNumber":36,"author":{"gitId":"emptygx"},"content":"                Messages.MESSAGE_STATS_DISPLAYED_OVERVIEW, tagStats.getCount()), stats);","lastModifiedDate":"2022-10-28"},{"lineNumber":37,"author":{"gitId":"emptygx"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":38,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":39,"author":{"gitId":"emptygx"},"content":"    @Override","lastModifiedDate":"2022-10-23"},{"lineNumber":40,"author":{"gitId":"emptygx"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-23"},{"lineNumber":41,"author":{"gitId":"emptygx"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-23"},{"lineNumber":42,"author":{"gitId":"emptygx"},"content":"                || (other instanceof StatsCommand // instanceof handles nulls","lastModifiedDate":"2022-10-23"},{"lineNumber":43,"author":{"gitId":"emptygx"},"content":"                ); // state check","lastModifiedDate":"2022-10-23"},{"lineNumber":44,"author":{"gitId":"emptygx"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":45,"author":{"gitId":"emptygx"},"content":"}","lastModifiedDate":"2022-10-23"}],"authorContributionMap":{"emptygx":45}},{"path":"src/main/java/seedu/clinkedin/logic/commands/UndoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.logic.commands;","lastModifiedDate":"2022-10-24"},{"lineNumber":2,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":3,"author":{"gitId":"emptygx"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-24"},{"lineNumber":4,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":5,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.commons.core.Messages;","lastModifiedDate":"2022-10-24"},{"lineNumber":6,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-24"},{"lineNumber":7,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.Model;","lastModifiedDate":"2022-10-24"},{"lineNumber":8,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":9,"author":{"gitId":"emptygx"},"content":"/**","lastModifiedDate":"2022-10-24"},{"lineNumber":10,"author":{"gitId":"emptygx"},"content":" * Undoes the previous modification to CLInkedIn.","lastModifiedDate":"2022-10-24"},{"lineNumber":11,"author":{"gitId":"emptygx"},"content":" */","lastModifiedDate":"2022-10-24"},{"lineNumber":12,"author":{"gitId":"emptygx"},"content":"public class UndoCommand extends Command {","lastModifiedDate":"2022-10-24"},{"lineNumber":13,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":14,"author":{"gitId":"emptygx"},"content":"    public static final String COMMAND_WORD \u003d \"undo\";","lastModifiedDate":"2022-10-24"},{"lineNumber":15,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":16,"author":{"gitId":"emptygx"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Undoes the previous modification to CLInkedIn.\\n\"","lastModifiedDate":"2022-10-24"},{"lineNumber":17,"author":{"gitId":"emptygx"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2022-10-24"},{"lineNumber":18,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":19,"author":{"gitId":"emptygx"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Undo successful!\";","lastModifiedDate":"2022-10-24"},{"lineNumber":20,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":21,"author":{"gitId":"emptygx"},"content":"    public UndoCommand() {","lastModifiedDate":"2022-10-24"},{"lineNumber":22,"author":{"gitId":"emptygx"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":23,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":24,"author":{"gitId":"emptygx"},"content":"    @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":25,"author":{"gitId":"emptygx"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-24"},{"lineNumber":26,"author":{"gitId":"emptygx"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-24"},{"lineNumber":27,"author":{"gitId":"emptygx"},"content":"        if (!model.canUndoAddressBook()) {","lastModifiedDate":"2022-10-24"},{"lineNumber":28,"author":{"gitId":"emptygx"},"content":"            throw new CommandException(Messages.MESSAGE_CANNOT_UNDO);","lastModifiedDate":"2022-10-24"},{"lineNumber":29,"author":{"gitId":"emptygx"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":30,"author":{"gitId":"emptygx"},"content":"        model.undoAddressBook();","lastModifiedDate":"2022-10-24"},{"lineNumber":31,"author":{"gitId":"emptygx"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2022-10-24"},{"lineNumber":32,"author":{"gitId":"emptygx"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":33,"author":{"gitId":"emptygx"},"content":"}","lastModifiedDate":"2022-10-24"}],"authorContributionMap":{"emptygx":33}},{"path":"src/main/java/seedu/clinkedin/logic/commands/ViewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"josephaedan"},"content":"package seedu.clinkedin.logic.commands;","lastModifiedDate":"2022-10-28"},{"lineNumber":2,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":3,"author":{"gitId":"josephaedan"},"content":"import static seedu.clinkedin.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-28"},{"lineNumber":4,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":5,"author":{"gitId":"josephaedan"},"content":"import java.util.List;","lastModifiedDate":"2022-10-28"},{"lineNumber":6,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":7,"author":{"gitId":"josephaedan"},"content":"import seedu.clinkedin.commons.core.Messages;","lastModifiedDate":"2022-10-28"},{"lineNumber":8,"author":{"gitId":"josephaedan"},"content":"import seedu.clinkedin.commons.core.index.Index;","lastModifiedDate":"2022-10-28"},{"lineNumber":9,"author":{"gitId":"josephaedan"},"content":"import seedu.clinkedin.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-28"},{"lineNumber":10,"author":{"gitId":"josephaedan"},"content":"import seedu.clinkedin.model.Model;","lastModifiedDate":"2022-10-28"},{"lineNumber":11,"author":{"gitId":"josephaedan"},"content":"import seedu.clinkedin.model.person.Person;","lastModifiedDate":"2022-10-28"},{"lineNumber":12,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":13,"author":{"gitId":"josephaedan"},"content":"/**","lastModifiedDate":"2022-10-28"},{"lineNumber":14,"author":{"gitId":"josephaedan"},"content":" * Views the contact information of a person identified using their displayed index.","lastModifiedDate":"2022-10-28"},{"lineNumber":15,"author":{"gitId":"josephaedan"},"content":" */","lastModifiedDate":"2022-10-28"},{"lineNumber":16,"author":{"gitId":"josephaedan"},"content":"public class ViewCommand extends Command {","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":18,"author":{"gitId":"josephaedan"},"content":"    public static final String COMMAND_WORD \u003d \"view\";","lastModifiedDate":"2022-10-28"},{"lineNumber":19,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":20,"author":{"gitId":"josephaedan"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-28"},{"lineNumber":21,"author":{"gitId":"josephaedan"},"content":"            + \": Views additional information about the candidate identified \"","lastModifiedDate":"2022-10-28"},{"lineNumber":22,"author":{"gitId":"josephaedan"},"content":"            + \"by the index number in the address book.\\n\"","lastModifiedDate":"2022-10-28"},{"lineNumber":23,"author":{"gitId":"josephaedan"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2022-10-28"},{"lineNumber":24,"author":{"gitId":"josephaedan"},"content":"            + \"view INDEX\\n\\n\"","lastModifiedDate":"2022-10-28"},{"lineNumber":25,"author":{"gitId":"josephaedan"},"content":"            + \"Example: `\" + COMMAND_WORD + \" 1`\"","lastModifiedDate":"2022-10-28"},{"lineNumber":26,"author":{"gitId":"josephaedan"},"content":"            + \" will display the information of the candidate at index 1\";","lastModifiedDate":"2022-10-28"},{"lineNumber":27,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":28,"author":{"gitId":"josephaedan"},"content":"    private final Index index;","lastModifiedDate":"2022-10-28"},{"lineNumber":29,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":30,"author":{"gitId":"josephaedan"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":31,"author":{"gitId":"josephaedan"},"content":"     * Constructor to view the information about a person.","lastModifiedDate":"2022-10-28"},{"lineNumber":32,"author":{"gitId":"josephaedan"},"content":"     * This constructor is called from the user CLI command, or from the GUI.","lastModifiedDate":"2022-10-28"},{"lineNumber":33,"author":{"gitId":"josephaedan"},"content":"     * @param index of the person in the filtered person list to edit the note","lastModifiedDate":"2022-10-28"},{"lineNumber":34,"author":{"gitId":"josephaedan"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":35,"author":{"gitId":"josephaedan"},"content":"    public ViewCommand(Index index) {","lastModifiedDate":"2022-10-28"},{"lineNumber":36,"author":{"gitId":"josephaedan"},"content":"        requireAllNonNull(index);","lastModifiedDate":"2022-10-28"},{"lineNumber":37,"author":{"gitId":"josephaedan"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-10-28"},{"lineNumber":38,"author":{"gitId":"josephaedan"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":39,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":40,"author":{"gitId":"josephaedan"},"content":"    @Override","lastModifiedDate":"2022-10-28"},{"lineNumber":41,"author":{"gitId":"josephaedan"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-28"},{"lineNumber":42,"author":{"gitId":"josephaedan"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-10-28"},{"lineNumber":43,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":44,"author":{"gitId":"josephaedan"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-28"},{"lineNumber":45,"author":{"gitId":"josephaedan"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-28"},{"lineNumber":46,"author":{"gitId":"josephaedan"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":47,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":48,"author":{"gitId":"josephaedan"},"content":"        Person personToView \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-10-28"},{"lineNumber":49,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":50,"author":{"gitId":"josephaedan"},"content":"        return new CommandResult(personToView.toString());","lastModifiedDate":"2022-10-28"},{"lineNumber":51,"author":{"gitId":"josephaedan"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":52,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":53,"author":{"gitId":"josephaedan"},"content":"    @Override","lastModifiedDate":"2022-10-28"},{"lineNumber":54,"author":{"gitId":"josephaedan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-28"},{"lineNumber":55,"author":{"gitId":"josephaedan"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-28"},{"lineNumber":56,"author":{"gitId":"josephaedan"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-28"},{"lineNumber":57,"author":{"gitId":"josephaedan"},"content":"            return true;","lastModifiedDate":"2022-10-28"},{"lineNumber":58,"author":{"gitId":"josephaedan"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":59,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":60,"author":{"gitId":"josephaedan"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-28"},{"lineNumber":61,"author":{"gitId":"josephaedan"},"content":"        if (!(other instanceof ViewCommand)) {","lastModifiedDate":"2022-10-28"},{"lineNumber":62,"author":{"gitId":"josephaedan"},"content":"            return false;","lastModifiedDate":"2022-10-28"},{"lineNumber":63,"author":{"gitId":"josephaedan"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":64,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":65,"author":{"gitId":"josephaedan"},"content":"        // state check","lastModifiedDate":"2022-10-28"},{"lineNumber":66,"author":{"gitId":"josephaedan"},"content":"        ViewCommand e \u003d (ViewCommand) other;","lastModifiedDate":"2022-10-28"},{"lineNumber":67,"author":{"gitId":"josephaedan"},"content":"        return index.equals(e.index);","lastModifiedDate":"2022-10-28"},{"lineNumber":68,"author":{"gitId":"josephaedan"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":69,"author":{"gitId":"josephaedan"},"content":"}","lastModifiedDate":"2022-10-28"}],"authorContributionMap":{"josephaedan":69}},{"path":"src/main/java/seedu/clinkedin/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.logic.commands.exceptions;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"emptygx":1,"-":16}},{"path":"src/main/java/seedu/clinkedin/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.logic.parser;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"agarwal-anjali"},"content":"import static seedu.clinkedin.logic.parser.CliSyntax.PREFIX_LINK;","lastModifiedDate":"2022-10-24"},{"lineNumber":7,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.parser.CliSyntax.PREFIX_NOTE;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"ytingtan"},"content":"import static seedu.clinkedin.logic.parser.CliSyntax.PREFIX_RATING;","lastModifiedDate":"2022-10-17"},{"lineNumber":11,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"pratham31012002"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"pratham31012002"},"content":"import java.util.List;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"pratham31012002"},"content":"import java.util.Map;","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"agarwal-anjali"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":19,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.logic.commands.AddCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"agarwal-anjali"},"content":"import seedu.clinkedin.model.link.Link;","lastModifiedDate":"2022-10-23"},{"lineNumber":22,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.Address;","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.Email;","lastModifiedDate":"2022-10-15"},{"lineNumber":24,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.Name;","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.Note;","lastModifiedDate":"2022-10-15"},{"lineNumber":26,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.Person;","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.Phone;","lastModifiedDate":"2022-10-15"},{"lineNumber":28,"author":{"gitId":"ytingtan"},"content":"import seedu.clinkedin.model.person.Rating;","lastModifiedDate":"2022-10-17"},{"lineNumber":29,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.Status;","lastModifiedDate":"2022-10-15"},{"lineNumber":30,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.UniqueTagTypeMap;","lastModifiedDate":"2022-10-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"pratham31012002"},"content":" * Parses input arguments and creates a new AddCommand object.","lastModifiedDate":"2022-10-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":39,"author":{"gitId":"pratham31012002"},"content":"     * @throws ParseException If the user input does not conform the expected format.","lastModifiedDate":"2022-10-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"pratham31012002"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, CliSyntax.getPrefixes());","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":44,"author":{"gitId":"josephaedan"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_STATUS)","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":49,"author":{"gitId":"pratham31012002"},"content":"        if (!CliSyntax.getUniquePrefixes().stream().allMatch(pref -\u003e argMultimap.getAllValues(pref).size() \u003c\u003d 1)) {","lastModifiedDate":"2022-10-26"},{"lineNumber":50,"author":{"gitId":"pratham31012002"},"content":"            throw new ParseException(\"Name, Phone, Email, Address, Status, Note, Rating can\u0027t have multiple values.\");","lastModifiedDate":"2022-10-26"},{"lineNumber":51,"author":{"gitId":"pratham31012002"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"pratham31012002"},"content":"        Map\u003cPrefix, List\u003cString\u003e\u003e prefToStrings \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"pratham31012002"},"content":"        CliSyntax.getPrefixTags().stream().forEach(pref -\u003e prefToStrings.put(pref, argMultimap.getAllValues(pref)));","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"pratham31012002"},"content":"        UniqueTagTypeMap tagMap \u003d ParserUtil.parseTags(prefToStrings);","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"ytingtan"},"content":"        Status status \u003d ParserUtil.parseStatus(argMultimap.getValue(PREFIX_STATUS).get());","lastModifiedDate":"2022-10-09"},{"lineNumber":61,"author":{"gitId":"josephaedan"},"content":"        Note note \u003d ParserUtil.parseNote(argMultimap.getValue(PREFIX_NOTE).orElse(\"\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"ytingtan"},"content":"        Rating rating \u003d ParserUtil.parseRating(argMultimap.getValue(PREFIX_RATING).orElse(\"0\"));","lastModifiedDate":"2022-10-17"},{"lineNumber":63,"author":{"gitId":"agarwal-anjali"},"content":"        Set\u003cLink\u003e links \u003d ParserUtil.parseLinks(argMultimap.getAllValues(PREFIX_LINK));","lastModifiedDate":"2022-10-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":65,"author":{"gitId":"ytingtan"},"content":"        Person person \u003d new Person(name, phone, email, address, tagMap, status, note, rating, links);","lastModifiedDate":"2022-10-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"agarwal-anjali":4,"ytingtan":5,"emptygx":18,"pratham31012002":13,"josephaedan":2,"-":36}},{"path":"src/main/java/seedu/clinkedin/logic/parser/AddLinkCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"agarwal-anjali"},"content":"package seedu.clinkedin.logic.parser;","lastModifiedDate":"2022-10-28"},{"lineNumber":2,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":3,"author":{"gitId":"agarwal-anjali"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-28"},{"lineNumber":4,"author":{"gitId":"agarwal-anjali"},"content":"import static seedu.clinkedin.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-28"},{"lineNumber":5,"author":{"gitId":"agarwal-anjali"},"content":"import static seedu.clinkedin.logic.parser.CliSyntax.PREFIX_LINK;","lastModifiedDate":"2022-10-28"},{"lineNumber":6,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":7,"author":{"gitId":"agarwal-anjali"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-28"},{"lineNumber":8,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":9,"author":{"gitId":"agarwal-anjali"},"content":"import seedu.clinkedin.commons.core.index.Index;","lastModifiedDate":"2022-10-28"},{"lineNumber":10,"author":{"gitId":"agarwal-anjali"},"content":"import seedu.clinkedin.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-28"},{"lineNumber":11,"author":{"gitId":"agarwal-anjali"},"content":"import seedu.clinkedin.logic.commands.AddLinkCommand;","lastModifiedDate":"2022-10-28"},{"lineNumber":12,"author":{"gitId":"agarwal-anjali"},"content":"import seedu.clinkedin.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-28"},{"lineNumber":13,"author":{"gitId":"agarwal-anjali"},"content":"import seedu.clinkedin.model.link.Link;","lastModifiedDate":"2022-10-28"},{"lineNumber":14,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":15,"author":{"gitId":"agarwal-anjali"},"content":"/**","lastModifiedDate":"2022-10-28"},{"lineNumber":16,"author":{"gitId":"agarwal-anjali"},"content":" * Parses input arguments and creates a new AddLinkCommand object","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"agarwal-anjali"},"content":" */","lastModifiedDate":"2022-10-28"},{"lineNumber":18,"author":{"gitId":"agarwal-anjali"},"content":"public class AddLinkCommandParser implements Parser\u003cAddLinkCommand\u003e {","lastModifiedDate":"2022-10-28"},{"lineNumber":19,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":20,"author":{"gitId":"agarwal-anjali"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":21,"author":{"gitId":"agarwal-anjali"},"content":"     * Parses the given {@code String} of arguments in the context of the","lastModifiedDate":"2022-10-28"},{"lineNumber":22,"author":{"gitId":"agarwal-anjali"},"content":"     * AddLinkCommand","lastModifiedDate":"2022-10-28"},{"lineNumber":23,"author":{"gitId":"agarwal-anjali"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":24,"author":{"gitId":"agarwal-anjali"},"content":"    public AddLinkCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-28"},{"lineNumber":25,"author":{"gitId":"agarwal-anjali"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-10-28"},{"lineNumber":26,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":27,"author":{"gitId":"agarwal-anjali"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_LINK);","lastModifiedDate":"2022-10-28"},{"lineNumber":28,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":29,"author":{"gitId":"agarwal-anjali"},"content":"        Index index;","lastModifiedDate":"2022-10-28"},{"lineNumber":30,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":31,"author":{"gitId":"agarwal-anjali"},"content":"        try {","lastModifiedDate":"2022-10-28"},{"lineNumber":32,"author":{"gitId":"agarwal-anjali"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-10-28"},{"lineNumber":33,"author":{"gitId":"agarwal-anjali"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2022-10-28"},{"lineNumber":34,"author":{"gitId":"agarwal-anjali"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-28"},{"lineNumber":35,"author":{"gitId":"agarwal-anjali"},"content":"                    AddLinkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2022-10-28"},{"lineNumber":36,"author":{"gitId":"agarwal-anjali"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":37,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":38,"author":{"gitId":"agarwal-anjali"},"content":"        Set\u003cLink\u003e links \u003d ParserUtil.parseLinks(argMultimap.getAllValues(PREFIX_LINK));","lastModifiedDate":"2022-10-28"},{"lineNumber":39,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":40,"author":{"gitId":"agarwal-anjali"},"content":"        return new AddLinkCommand(index, links);","lastModifiedDate":"2022-10-28"},{"lineNumber":41,"author":{"gitId":"agarwal-anjali"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":42,"author":{"gitId":"agarwal-anjali"},"content":"}","lastModifiedDate":"2022-10-28"}],"authorContributionMap":{"agarwal-anjali":42}},{"path":"src/main/java/seedu/clinkedin/logic/parser/AddNoteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.logic.parser;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"josephaedan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.parser.CliSyntax.PREFIX_NOTE;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"agarwal-anjali"},"content":"import java.util.function.BinaryOperator;","lastModifiedDate":"2022-10-28"},{"lineNumber":8,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":9,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.commons.core.index.Index;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"agarwal-anjali"},"content":"import seedu.clinkedin.logic.commands.AddNoteCommand;","lastModifiedDate":"2022-10-28"},{"lineNumber":12,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.Note;","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"josephaedan"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"agarwal-anjali"},"content":" * Parses input arguments and creates a new AddNoteCommand object","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"josephaedan"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"agarwal-anjali"},"content":"public class AddNoteCommandParser implements Parser\u003cAddNoteCommand\u003e {","lastModifiedDate":"2022-10-28"},{"lineNumber":19,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"josephaedan"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"josephaedan"},"content":"     * Parses the given {@code String} of arguments in the context of the","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"agarwal-anjali"},"content":"     * AddNoteCommand","lastModifiedDate":"2022-10-28"},{"lineNumber":23,"author":{"gitId":"josephaedan"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"agarwal-anjali"},"content":"    public AddNoteCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-28"},{"lineNumber":25,"author":{"gitId":"josephaedan"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"josephaedan"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"josephaedan"},"content":"                PREFIX_NOTE);","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"josephaedan"},"content":"        Index index;","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"josephaedan"},"content":"        Note note;","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"josephaedan"},"content":"        try {","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"josephaedan"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"josephaedan"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"josephaedan"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"agarwal-anjali"},"content":"                    AddNoteCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2022-10-28"},{"lineNumber":35,"author":{"gitId":"josephaedan"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"agarwal-anjali"},"content":"        BinaryOperator\u003cString\u003e combiner \u003d (x, y) -\u003e x + \"\\n\" + y;","lastModifiedDate":"2022-10-28"},{"lineNumber":37,"author":{"gitId":"agarwal-anjali"},"content":"        note \u003d new Note(argMultimap.getAllValues(PREFIX_NOTE).stream().reduce(combiner).get());","lastModifiedDate":"2022-10-28"},{"lineNumber":38,"author":{"gitId":"agarwal-anjali"},"content":"        return new AddNoteCommand(index, note);","lastModifiedDate":"2022-10-28"},{"lineNumber":39,"author":{"gitId":"josephaedan"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"josephaedan"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"agarwal-anjali":11,"emptygx":7,"josephaedan":22}},{"path":"src/main/java/seedu/clinkedin/logic/parser/AddRateCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ytingtan"},"content":"package seedu.clinkedin.logic.parser;","lastModifiedDate":"2022-10-17"},{"lineNumber":2,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":3,"author":{"gitId":"ytingtan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-17"},{"lineNumber":4,"author":{"gitId":"ytingtan"},"content":"import static seedu.clinkedin.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-17"},{"lineNumber":5,"author":{"gitId":"ytingtan"},"content":"import static seedu.clinkedin.logic.parser.CliSyntax.PREFIX_RATING;","lastModifiedDate":"2022-10-17"},{"lineNumber":6,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":7,"author":{"gitId":"ytingtan"},"content":"import seedu.clinkedin.commons.core.index.Index;","lastModifiedDate":"2022-10-17"},{"lineNumber":8,"author":{"gitId":"ytingtan"},"content":"import seedu.clinkedin.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-17"},{"lineNumber":9,"author":{"gitId":"ytingtan"},"content":"import seedu.clinkedin.logic.commands.AddRateCommand;","lastModifiedDate":"2022-10-28"},{"lineNumber":10,"author":{"gitId":"ytingtan"},"content":"import seedu.clinkedin.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-17"},{"lineNumber":11,"author":{"gitId":"ytingtan"},"content":"import seedu.clinkedin.model.person.Rating;","lastModifiedDate":"2022-10-17"},{"lineNumber":12,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":13,"author":{"gitId":"ytingtan"},"content":"/**","lastModifiedDate":"2022-10-17"},{"lineNumber":14,"author":{"gitId":"ytingtan"},"content":" * Parses input arguments and creates a new RateCommand object","lastModifiedDate":"2022-10-17"},{"lineNumber":15,"author":{"gitId":"ytingtan"},"content":" */","lastModifiedDate":"2022-10-17"},{"lineNumber":16,"author":{"gitId":"ytingtan"},"content":"public class AddRateCommandParser implements Parser\u003cAddRateCommand\u003e {","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":18,"author":{"gitId":"ytingtan"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":19,"author":{"gitId":"ytingtan"},"content":"     * Parses the given {@code String} of arguments in the context of the","lastModifiedDate":"2022-10-17"},{"lineNumber":20,"author":{"gitId":"ytingtan"},"content":"     * RateCommand","lastModifiedDate":"2022-10-17"},{"lineNumber":21,"author":{"gitId":"ytingtan"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":22,"author":{"gitId":"ytingtan"},"content":"    public AddRateCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-28"},{"lineNumber":23,"author":{"gitId":"ytingtan"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-10-17"},{"lineNumber":24,"author":{"gitId":"ytingtan"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2022-10-17"},{"lineNumber":25,"author":{"gitId":"ytingtan"},"content":"                PREFIX_RATING);","lastModifiedDate":"2022-10-17"},{"lineNumber":26,"author":{"gitId":"ytingtan"},"content":"        Index index;","lastModifiedDate":"2022-10-17"},{"lineNumber":27,"author":{"gitId":"ytingtan"},"content":"        Rating rating;","lastModifiedDate":"2022-10-17"},{"lineNumber":28,"author":{"gitId":"ytingtan"},"content":"        try {","lastModifiedDate":"2022-10-17"},{"lineNumber":29,"author":{"gitId":"ytingtan"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-10-17"},{"lineNumber":30,"author":{"gitId":"ytingtan"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2022-10-17"},{"lineNumber":31,"author":{"gitId":"ytingtan"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-17"},{"lineNumber":32,"author":{"gitId":"ytingtan"},"content":"                    AddRateCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2022-10-28"},{"lineNumber":33,"author":{"gitId":"ytingtan"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":34,"author":{"gitId":"ytingtan"},"content":"        rating \u003d new Rating(argMultimap.getValue(PREFIX_RATING).orElse(\"0\"));","lastModifiedDate":"2022-10-18"},{"lineNumber":35,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":36,"author":{"gitId":"ytingtan"},"content":"        return new AddRateCommand(index, rating);","lastModifiedDate":"2022-10-28"},{"lineNumber":37,"author":{"gitId":"ytingtan"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":38,"author":{"gitId":"ytingtan"},"content":"}","lastModifiedDate":"2022-10-17"}],"authorContributionMap":{"ytingtan":38}},{"path":"src/main/java/seedu/clinkedin/logic/parser/AddTagCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.logic.parser;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":3,"author":{"gitId":"pratham31012002"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"pratham31012002"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"pratham31012002"},"content":"import java.util.List;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"pratham31012002"},"content":"import java.util.Map;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.commons.core.index.Index;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.logic.commands.AddTagCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.UniqueTagTypeMap;","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":15,"author":{"gitId":"agarwal-anjali"},"content":"/**","lastModifiedDate":"2022-10-07"},{"lineNumber":16,"author":{"gitId":"agarwal-anjali"},"content":" * Parses input arguments and creates a new AddTagCommand object","lastModifiedDate":"2022-10-07"},{"lineNumber":17,"author":{"gitId":"agarwal-anjali"},"content":" */","lastModifiedDate":"2022-10-07"},{"lineNumber":18,"author":{"gitId":"agarwal-anjali"},"content":"public class AddTagCommandParser implements Parser\u003cAddTagCommand\u003e {","lastModifiedDate":"2022-10-07"},{"lineNumber":19,"author":{"gitId":"agarwal-anjali"},"content":"    @Override","lastModifiedDate":"2022-10-07"},{"lineNumber":20,"author":{"gitId":"pratham31012002"},"content":"    public AddTagCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"pratham31012002"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"pratham31012002"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, CliSyntax.getPrefixes());","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"pratham31012002"},"content":"        Index index;","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"pratham31012002"},"content":"        try {","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"pratham31012002"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"pratham31012002"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"pratham31012002"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddTagCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"pratham31012002"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"pratham31012002"},"content":"        Map\u003cPrefix, List\u003cString\u003e\u003e prefToStrings \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"pratham31012002"},"content":"        CliSyntax.getPrefixTags().forEach(pref -\u003e prefToStrings.put(pref, argMultimap.getAllValues(pref)));","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"pratham31012002"},"content":"        UniqueTagTypeMap tagMap \u003d ParserUtil.parseTags(prefToStrings);","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"pratham31012002"},"content":"        return new AddTagCommand(index, tagMap);","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"agarwal-anjali"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":37,"author":{"gitId":"agarwal-anjali"},"content":"}","lastModifiedDate":"2022-10-07"}],"authorContributionMap":{"agarwal-anjali":9,"emptygx":6,"pratham31012002":22}},{"path":"src/main/java/seedu/clinkedin/logic/parser/AddToCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"agarwal-anjali"},"content":"package seedu.clinkedin.logic.parser;","lastModifiedDate":"2022-10-28"},{"lineNumber":2,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":3,"author":{"gitId":"agarwal-anjali"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-28"},{"lineNumber":4,"author":{"gitId":"agarwal-anjali"},"content":"import static seedu.clinkedin.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-28"},{"lineNumber":5,"author":{"gitId":"agarwal-anjali"},"content":"import static seedu.clinkedin.logic.parser.CliSyntax.PREFIX_LINK;","lastModifiedDate":"2022-10-28"},{"lineNumber":6,"author":{"gitId":"agarwal-anjali"},"content":"import static seedu.clinkedin.logic.parser.CliSyntax.PREFIX_NOTE;","lastModifiedDate":"2022-10-28"},{"lineNumber":7,"author":{"gitId":"agarwal-anjali"},"content":"import static seedu.clinkedin.logic.parser.CliSyntax.PREFIX_RATING;","lastModifiedDate":"2022-10-28"},{"lineNumber":8,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":9,"author":{"gitId":"agarwal-anjali"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-10-28"},{"lineNumber":10,"author":{"gitId":"agarwal-anjali"},"content":"import java.util.List;","lastModifiedDate":"2022-10-28"},{"lineNumber":11,"author":{"gitId":"agarwal-anjali"},"content":"import java.util.Map;","lastModifiedDate":"2022-10-28"},{"lineNumber":12,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":13,"author":{"gitId":"agarwal-anjali"},"content":"import seedu.clinkedin.commons.core.index.Index;","lastModifiedDate":"2022-10-28"},{"lineNumber":14,"author":{"gitId":"agarwal-anjali"},"content":"import seedu.clinkedin.logic.commands.AddToCommand;","lastModifiedDate":"2022-10-28"},{"lineNumber":15,"author":{"gitId":"agarwal-anjali"},"content":"import seedu.clinkedin.logic.commands.AddToCommand.UpdatePersonDescriptor;","lastModifiedDate":"2022-10-28"},{"lineNumber":16,"author":{"gitId":"agarwal-anjali"},"content":"import seedu.clinkedin.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"agarwal-anjali"},"content":"import seedu.clinkedin.model.person.UniqueTagTypeMap;","lastModifiedDate":"2022-10-28"},{"lineNumber":18,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":19,"author":{"gitId":"agarwal-anjali"},"content":"/**","lastModifiedDate":"2022-10-28"},{"lineNumber":20,"author":{"gitId":"agarwal-anjali"},"content":" * Parses input arguments and creates a new AddToCommand object","lastModifiedDate":"2022-10-28"},{"lineNumber":21,"author":{"gitId":"agarwal-anjali"},"content":" */","lastModifiedDate":"2022-10-28"},{"lineNumber":22,"author":{"gitId":"agarwal-anjali"},"content":"public class AddToCommandParser implements Parser\u003cAddToCommand\u003e {","lastModifiedDate":"2022-10-28"},{"lineNumber":23,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":24,"author":{"gitId":"agarwal-anjali"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":25,"author":{"gitId":"agarwal-anjali"},"content":"     * Parses the given {@code String} of arguments in the context of the AddToCommand","lastModifiedDate":"2022-10-28"},{"lineNumber":26,"author":{"gitId":"agarwal-anjali"},"content":"     * and returns an AddToCommand object for execution.","lastModifiedDate":"2022-10-28"},{"lineNumber":27,"author":{"gitId":"agarwal-anjali"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-28"},{"lineNumber":28,"author":{"gitId":"agarwal-anjali"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":29,"author":{"gitId":"agarwal-anjali"},"content":"    public AddToCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-28"},{"lineNumber":30,"author":{"gitId":"agarwal-anjali"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-10-28"},{"lineNumber":31,"author":{"gitId":"agarwal-anjali"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, CliSyntax.getPrefixes());","lastModifiedDate":"2022-10-28"},{"lineNumber":32,"author":{"gitId":"agarwal-anjali"},"content":"        Index index;","lastModifiedDate":"2022-10-28"},{"lineNumber":33,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":34,"author":{"gitId":"agarwal-anjali"},"content":"        try {","lastModifiedDate":"2022-10-28"},{"lineNumber":35,"author":{"gitId":"agarwal-anjali"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-10-28"},{"lineNumber":36,"author":{"gitId":"agarwal-anjali"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-28"},{"lineNumber":37,"author":{"gitId":"agarwal-anjali"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddToCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-28"},{"lineNumber":38,"author":{"gitId":"agarwal-anjali"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":39,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":40,"author":{"gitId":"agarwal-anjali"},"content":"        UpdatePersonDescriptor updatePersonDescriptor \u003d new UpdatePersonDescriptor();","lastModifiedDate":"2022-10-28"},{"lineNumber":41,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":42,"author":{"gitId":"agarwal-anjali"},"content":"        Map\u003cPrefix, List\u003cString\u003e\u003e prefToStrings \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-10-28"},{"lineNumber":43,"author":{"gitId":"agarwal-anjali"},"content":"        CliSyntax.getPrefixTags().forEach(pref -\u003e prefToStrings.put(pref, argMultimap.getAllValues(pref)));","lastModifiedDate":"2022-10-28"},{"lineNumber":44,"author":{"gitId":"agarwal-anjali"},"content":"        UniqueTagTypeMap tagMap \u003d ParserUtil.parseTags(prefToStrings);","lastModifiedDate":"2022-10-28"},{"lineNumber":45,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":46,"author":{"gitId":"agarwal-anjali"},"content":"        updatePersonDescriptor.setTagTypeMap(tagMap);","lastModifiedDate":"2022-10-28"},{"lineNumber":47,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":48,"author":{"gitId":"agarwal-anjali"},"content":"        if (argMultimap.getValue(PREFIX_NOTE).isPresent()) {","lastModifiedDate":"2022-10-28"},{"lineNumber":49,"author":{"gitId":"agarwal-anjali"},"content":"            updatePersonDescriptor.setNote(ParserUtil.parseNote(argMultimap.getValue(PREFIX_NOTE).get()));","lastModifiedDate":"2022-10-28"},{"lineNumber":50,"author":{"gitId":"agarwal-anjali"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":51,"author":{"gitId":"agarwal-anjali"},"content":"        if (argMultimap.getValue(PREFIX_RATING).isPresent()) {","lastModifiedDate":"2022-10-28"},{"lineNumber":52,"author":{"gitId":"agarwal-anjali"},"content":"            updatePersonDescriptor.setRating(ParserUtil.parseRating(argMultimap.getValue(PREFIX_RATING).get()));","lastModifiedDate":"2022-10-28"},{"lineNumber":53,"author":{"gitId":"agarwal-anjali"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":54,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":55,"author":{"gitId":"agarwal-anjali"},"content":"        ParserUtil.parseLinksForEdit(argMultimap.getAllValues(PREFIX_LINK)).ifPresent(updatePersonDescriptor::setLinks);","lastModifiedDate":"2022-10-28"},{"lineNumber":56,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":57,"author":{"gitId":"agarwal-anjali"},"content":"        if (!updatePersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2022-10-28"},{"lineNumber":58,"author":{"gitId":"agarwal-anjali"},"content":"            throw new ParseException(AddToCommand.MESSAGE_NO_ATTRIBUTE_TO_ADD);","lastModifiedDate":"2022-10-28"},{"lineNumber":59,"author":{"gitId":"agarwal-anjali"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":60,"author":{"gitId":"agarwal-anjali"},"content":"        return new AddToCommand(index, updatePersonDescriptor);","lastModifiedDate":"2022-10-28"},{"lineNumber":61,"author":{"gitId":"agarwal-anjali"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":62,"author":{"gitId":"agarwal-anjali"},"content":"}","lastModifiedDate":"2022-10-28"}],"authorContributionMap":{"agarwal-anjali":62}},{"path":"src/main/java/seedu/clinkedin/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.logic.parser;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":6,"author":{"gitId":"agarwal-anjali"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2022-10-07"},{"lineNumber":7,"author":{"gitId":"agarwal-anjali"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-10-07"},{"lineNumber":8,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":9,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.logic.commands.AddCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"agarwal-anjali"},"content":"import seedu.clinkedin.logic.commands.AddLinkCommand;","lastModifiedDate":"2022-10-28"},{"lineNumber":11,"author":{"gitId":"agarwal-anjali"},"content":"import seedu.clinkedin.logic.commands.AddNoteCommand;","lastModifiedDate":"2022-10-28"},{"lineNumber":12,"author":{"gitId":"ytingtan"},"content":"import seedu.clinkedin.logic.commands.AddRateCommand;","lastModifiedDate":"2022-10-28"},{"lineNumber":13,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.logic.commands.AddTagCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"agarwal-anjali"},"content":"import seedu.clinkedin.logic.commands.AddToCommand;","lastModifiedDate":"2022-10-28"},{"lineNumber":15,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.logic.commands.ClearCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.logic.commands.Command;","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.logic.commands.CreateTagTypeCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.logic.commands.DeleteCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"agarwal-anjali"},"content":"import seedu.clinkedin.logic.commands.DeleteLinkCommand;","lastModifiedDate":"2022-10-28"},{"lineNumber":20,"author":{"gitId":"agarwal-anjali"},"content":"import seedu.clinkedin.logic.commands.DeleteNoteCommand;","lastModifiedDate":"2022-10-28"},{"lineNumber":21,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.logic.commands.DeleteTagCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.logic.commands.DeleteTagTypeCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.logic.commands.EditCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":24,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.logic.commands.EditTagTypeCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.logic.commands.ExitCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":26,"author":{"gitId":"pratham31012002"},"content":"import seedu.clinkedin.logic.commands.ExportCommand;","lastModifiedDate":"2022-10-24"},{"lineNumber":27,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.logic.commands.FindCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":28,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.logic.commands.HelpCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":29,"author":{"gitId":"pratham31012002"},"content":"import seedu.clinkedin.logic.commands.ImportCommand;","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.logic.commands.ListCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":31,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.logic.commands.RedoCommand;","lastModifiedDate":"2022-10-24"},{"lineNumber":32,"author":{"gitId":"ytingtan"},"content":"import seedu.clinkedin.logic.commands.SortCommand;","lastModifiedDate":"2022-10-28"},{"lineNumber":33,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.logic.commands.StatsCommand;","lastModifiedDate":"2022-10-23"},{"lineNumber":34,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.logic.commands.UndoCommand;","lastModifiedDate":"2022-10-24"},{"lineNumber":35,"author":{"gitId":"josephaedan"},"content":"import seedu.clinkedin.logic.commands.ViewCommand;","lastModifiedDate":"2022-10-28"},{"lineNumber":36,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"emptygx"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\").toLowerCase();","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"agarwal-anjali"},"content":"        case AddNoteCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-28"},{"lineNumber":82,"author":{"gitId":"agarwal-anjali"},"content":"            return new AddNoteCommandParser().parse(arguments);","lastModifiedDate":"2022-10-28"},{"lineNumber":83,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":84,"author":{"gitId":"agarwal-anjali"},"content":"        case DeleteNoteCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-28"},{"lineNumber":85,"author":{"gitId":"agarwal-anjali"},"content":"            return new DeleteNoteCommandParser().parse(arguments);","lastModifiedDate":"2022-10-28"},{"lineNumber":86,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":87,"author":{"gitId":"agarwal-anjali"},"content":"        case AddLinkCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-28"},{"lineNumber":88,"author":{"gitId":"agarwal-anjali"},"content":"            return new AddLinkCommandParser().parse(arguments);","lastModifiedDate":"2022-10-28"},{"lineNumber":89,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":90,"author":{"gitId":"agarwal-anjali"},"content":"        case DeleteLinkCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-28"},{"lineNumber":91,"author":{"gitId":"agarwal-anjali"},"content":"            return new DeleteLinkCommandParser().parse(arguments);","lastModifiedDate":"2022-10-28"},{"lineNumber":92,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":93,"author":{"gitId":"agarwal-anjali"},"content":"        case AddToCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-28"},{"lineNumber":94,"author":{"gitId":"agarwal-anjali"},"content":"            return new AddToCommandParser().parse(arguments);","lastModifiedDate":"2022-10-28"},{"lineNumber":95,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":99,"author":{"gitId":"emptygx"},"content":"        case UndoCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-24"},{"lineNumber":100,"author":{"gitId":"emptygx"},"content":"            return new UndoCommand();","lastModifiedDate":"2022-10-24"},{"lineNumber":101,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":102,"author":{"gitId":"emptygx"},"content":"        case RedoCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-24"},{"lineNumber":103,"author":{"gitId":"emptygx"},"content":"            return new RedoCommand();","lastModifiedDate":"2022-10-24"},{"lineNumber":104,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":109,"author":{"gitId":"josephaedan"},"content":"            return new HelpCommandParser().parse(arguments);","lastModifiedDate":"2022-10-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":111,"author":{"gitId":"emptygx"},"content":"        case StatsCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-23"},{"lineNumber":112,"author":{"gitId":"emptygx"},"content":"            return new StatsCommand();","lastModifiedDate":"2022-10-23"},{"lineNumber":113,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":114,"author":{"gitId":"ytingtan"},"content":"        case SortCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-28"},{"lineNumber":115,"author":{"gitId":"ytingtan"},"content":"            return new SortCommand();","lastModifiedDate":"2022-10-28"},{"lineNumber":116,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":117,"author":{"gitId":"agarwal-anjali"},"content":"        case AddTagCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-07"},{"lineNumber":118,"author":{"gitId":"agarwal-anjali"},"content":"            return new AddTagCommandParser().parse(arguments);","lastModifiedDate":"2022-10-07"},{"lineNumber":119,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":120,"author":{"gitId":"agarwal-anjali"},"content":"        case DeleteTagCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-07"},{"lineNumber":121,"author":{"gitId":"agarwal-anjali"},"content":"            return new DeleteTagCommandParser().parse(arguments);","lastModifiedDate":"2022-10-07"},{"lineNumber":122,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":123,"author":{"gitId":"pratham31012002"},"content":"        case CreateTagTypeCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-08"},{"lineNumber":124,"author":{"gitId":"pratham31012002"},"content":"            return new CreateTagTypeCommandParser().parse(arguments);","lastModifiedDate":"2022-10-08"},{"lineNumber":125,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":126,"author":{"gitId":"pratham31012002"},"content":"        case DeleteTagTypeCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-08"},{"lineNumber":127,"author":{"gitId":"pratham31012002"},"content":"            return new DeleteTagTypeCommandParser().parse(arguments);","lastModifiedDate":"2022-10-08"},{"lineNumber":128,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":129,"author":{"gitId":"pratham31012002"},"content":"        case EditTagTypeCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-08"},{"lineNumber":130,"author":{"gitId":"pratham31012002"},"content":"            return new EditTagTypeCommandParser().parse(arguments);","lastModifiedDate":"2022-10-08"},{"lineNumber":131,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":132,"author":{"gitId":"pratham31012002"},"content":"        case ExportCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-24"},{"lineNumber":133,"author":{"gitId":"pratham31012002"},"content":"            return new ExportCommandParser().parse(arguments);","lastModifiedDate":"2022-10-24"},{"lineNumber":134,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":135,"author":{"gitId":"pratham31012002"},"content":"        case ImportCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-26"},{"lineNumber":136,"author":{"gitId":"pratham31012002"},"content":"            return new ImportCommandParser().parse(arguments);","lastModifiedDate":"2022-10-26"},{"lineNumber":137,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":138,"author":{"gitId":"ytingtan"},"content":"        case AddRateCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-28"},{"lineNumber":139,"author":{"gitId":"ytingtan"},"content":"            return new AddRateCommandParser().parse(arguments);","lastModifiedDate":"2022-10-28"},{"lineNumber":140,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":141,"author":{"gitId":"josephaedan"},"content":"        case ViewCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-28"},{"lineNumber":142,"author":{"gitId":"josephaedan"},"content":"            return new ViewCommandParser().parse(arguments);","lastModifiedDate":"2022-10-28"},{"lineNumber":143,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"agarwal-anjali":30,"ytingtan":8,"emptygx":31,"pratham31012002":15,"josephaedan":8,"-":56}},{"path":"src/main/java/seedu/clinkedin/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.logic.parser;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"emptygx":1,"-":59}},{"path":"src/main/java/seedu/clinkedin/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.logic.parser;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *    in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return           ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return           List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @return                ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                                        PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                                        PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private int startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"emptygx":1,"-":147}},{"path":"src/main/java/seedu/clinkedin/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.logic.parser;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"pratham31012002"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"josephaedan"},"content":"import java.lang.reflect.Field;","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"pratham31012002"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"pratham31012002"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"josephaedan"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"agarwal-anjali"},"content":"import java.util.List;","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"josephaedan"},"content":"import java.util.Map;","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"josephaedan"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"josephaedan"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"josephaedan"},"content":"import seedu.clinkedin.logic.commands.AddCommand;","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"agarwal-anjali"},"content":"import seedu.clinkedin.logic.commands.AddNoteCommand;","lastModifiedDate":"2022-10-28"},{"lineNumber":16,"author":{"gitId":"ytingtan"},"content":"import seedu.clinkedin.logic.commands.AddRateCommand;","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"josephaedan"},"content":"import seedu.clinkedin.logic.commands.AddTagCommand;","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"josephaedan"},"content":"import seedu.clinkedin.logic.commands.ClearCommand;","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"josephaedan"},"content":"import seedu.clinkedin.logic.commands.Command;","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"josephaedan"},"content":"import seedu.clinkedin.logic.commands.CreateTagTypeCommand;","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"josephaedan"},"content":"import seedu.clinkedin.logic.commands.DeleteCommand;","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"josephaedan"},"content":"import seedu.clinkedin.logic.commands.DeleteTagCommand;","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"josephaedan"},"content":"import seedu.clinkedin.logic.commands.EditCommand;","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"josephaedan"},"content":"import seedu.clinkedin.logic.commands.EditTagTypeCommand;","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"josephaedan"},"content":"import seedu.clinkedin.logic.commands.ExportCommand;","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"josephaedan"},"content":"import seedu.clinkedin.logic.commands.FindCommand;","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"josephaedan"},"content":"import seedu.clinkedin.logic.commands.HelpCommand;","lastModifiedDate":"2022-10-26"},{"lineNumber":28,"author":{"gitId":"josephaedan"},"content":"import seedu.clinkedin.logic.commands.ImportCommand;","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"josephaedan"},"content":"import seedu.clinkedin.logic.commands.ListCommand;","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"josephaedan"},"content":"import seedu.clinkedin.logic.commands.StatsCommand;","lastModifiedDate":"2022-10-26"},{"lineNumber":31,"author":{"gitId":"josephaedan"},"content":"import seedu.clinkedin.logic.commands.ViewCommand;","lastModifiedDate":"2022-10-28"},{"lineNumber":32,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.logic.parser.exceptions.DuplicatePrefixException;","lastModifiedDate":"2022-10-15"},{"lineNumber":33,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.logic.parser.exceptions.PrefixNotFoundException;","lastModifiedDate":"2022-10-15"},{"lineNumber":34,"author":{"gitId":"josephaedan"},"content":"import seedu.clinkedin.ui.utils.CommandRow;","lastModifiedDate":"2022-10-27"},{"lineNumber":35,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"josephaedan"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple","lastModifiedDate":"2022-10-26"},{"lineNumber":38,"author":{"gitId":"josephaedan"},"content":" * commands","lastModifiedDate":"2022-10-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":48,"author":{"gitId":"ytingtan"},"content":"    public static final Prefix PREFIX_STATUS \u003d new Prefix(\"s/\");","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"josephaedan"},"content":"    public static final Prefix PREFIX_NOTE \u003d new Prefix(\"note/\");","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"agarwal-anjali"},"content":"    public static final Prefix PREFIX_LINK \u003d new Prefix((\"l/\"));","lastModifiedDate":"2022-10-23"},{"lineNumber":51,"author":{"gitId":"agarwal-anjali"},"content":"    public static final Prefix PREFIX_SKILLTAG \u003d new Prefix((\"st/\"));","lastModifiedDate":"2022-10-07"},{"lineNumber":52,"author":{"gitId":"pratham31012002"},"content":"    public static final Prefix PREFIX_DEGREETAG \u003d new Prefix((\"dt/\"));","lastModifiedDate":"2022-10-07"},{"lineNumber":53,"author":{"gitId":"pratham31012002"},"content":"    public static final Prefix PREFIX_JOBTYPETAG \u003d new Prefix((\"jtt/\"));","lastModifiedDate":"2022-10-07"},{"lineNumber":54,"author":{"gitId":"pratham31012002"},"content":"    public static final Prefix PREFIX_PATH \u003d new Prefix(\"path/\");","lastModifiedDate":"2022-10-22"},{"lineNumber":55,"author":{"gitId":"ytingtan"},"content":"    public static final Prefix PREFIX_RATING \u003d new Prefix(\"rate/\");","lastModifiedDate":"2022-10-17"},{"lineNumber":56,"author":{"gitId":"pratham31012002"},"content":"    private static ArrayList\u003cPrefix\u003e prefixTags \u003d new ArrayList\u003c\u003e(Arrays.asList(PREFIX_SKILLTAG, PREFIX_DEGREETAG,","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"pratham31012002"},"content":"            PREFIX_JOBTYPETAG));","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"pratham31012002"},"content":"    private static ArrayList\u003cPrefix\u003e prefixes \u003d new ArrayList\u003c\u003e(Arrays.asList(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2022-10-09"},{"lineNumber":59,"author":{"gitId":"pratham31012002"},"content":"            PREFIX_ADDRESS, PREFIX_SKILLTAG, PREFIX_DEGREETAG, PREFIX_JOBTYPETAG, PREFIX_STATUS, PREFIX_NOTE,","lastModifiedDate":"2022-10-22"},{"lineNumber":60,"author":{"gitId":"pratham31012002"},"content":"            PREFIX_PATH, PREFIX_RATING, PREFIX_LINK));","lastModifiedDate":"2022-10-26"},{"lineNumber":61,"author":{"gitId":"pratham31012002"},"content":"    // Will there be PREFIX_NOTE in this?","lastModifiedDate":"2022-10-21"},{"lineNumber":62,"author":{"gitId":"pratham31012002"},"content":"    private static ArrayList\u003cPrefix\u003e uniquePrefixes \u003d new ArrayList\u003c\u003e(Arrays.asList(PREFIX_NAME, PREFIX_PHONE,","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"pratham31012002"},"content":"            PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_STATUS, PREFIX_RATING, PREFIX_NOTE));","lastModifiedDate":"2022-10-26"},{"lineNumber":64,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"josephaedan"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":66,"author":{"gitId":"josephaedan"},"content":"     * Contains all user-executable command classes that are used in Clinkedin.","lastModifiedDate":"2022-10-26"},{"lineNumber":67,"author":{"gitId":"josephaedan"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":68,"author":{"gitId":"josephaedan"},"content":"    private static final List\u003cClass\u003c? extends Command\u003e\u003e ALL_COMMAND_CLASSES \u003d Arrays.asList(","lastModifiedDate":"2022-10-26"},{"lineNumber":69,"author":{"gitId":"josephaedan"},"content":"            AddCommand.class,","lastModifiedDate":"2022-10-26"},{"lineNumber":70,"author":{"gitId":"josephaedan"},"content":"            AddTagCommand.class,","lastModifiedDate":"2022-10-26"},{"lineNumber":71,"author":{"gitId":"josephaedan"},"content":"            ClearCommand.class,","lastModifiedDate":"2022-10-26"},{"lineNumber":72,"author":{"gitId":"josephaedan"},"content":"            CreateTagTypeCommand.class,","lastModifiedDate":"2022-10-26"},{"lineNumber":73,"author":{"gitId":"josephaedan"},"content":"            DeleteCommand.class,","lastModifiedDate":"2022-10-26"},{"lineNumber":74,"author":{"gitId":"josephaedan"},"content":"            DeleteTagCommand.class,","lastModifiedDate":"2022-10-26"},{"lineNumber":75,"author":{"gitId":"josephaedan"},"content":"            EditCommand.class,","lastModifiedDate":"2022-10-26"},{"lineNumber":76,"author":{"gitId":"josephaedan"},"content":"            EditTagTypeCommand.class,","lastModifiedDate":"2022-10-26"},{"lineNumber":77,"author":{"gitId":"josephaedan"},"content":"            ExportCommand.class,","lastModifiedDate":"2022-10-26"},{"lineNumber":78,"author":{"gitId":"josephaedan"},"content":"            FindCommand.class,","lastModifiedDate":"2022-10-26"},{"lineNumber":79,"author":{"gitId":"josephaedan"},"content":"            HelpCommand.class,","lastModifiedDate":"2022-10-26"},{"lineNumber":80,"author":{"gitId":"josephaedan"},"content":"            ListCommand.class,","lastModifiedDate":"2022-10-26"},{"lineNumber":81,"author":{"gitId":"josephaedan"},"content":"            ImportCommand.class,","lastModifiedDate":"2022-10-26"},{"lineNumber":82,"author":{"gitId":"josephaedan"},"content":"            ListCommand.class,","lastModifiedDate":"2022-10-26"},{"lineNumber":83,"author":{"gitId":"ytingtan"},"content":"            AddRateCommand.class,","lastModifiedDate":"2022-10-28"},{"lineNumber":84,"author":{"gitId":"agarwal-anjali"},"content":"            AddNoteCommand.class,","lastModifiedDate":"2022-10-28"},{"lineNumber":85,"author":{"gitId":"ytingtan"},"content":"            StatsCommand.class,","lastModifiedDate":"2022-10-28"},{"lineNumber":86,"author":{"gitId":"pratham31012002"},"content":"            ExportCommand.class,","lastModifiedDate":"2022-10-27"},{"lineNumber":87,"author":{"gitId":"josephaedan"},"content":"            ImportCommand.class,","lastModifiedDate":"2022-10-28"},{"lineNumber":88,"author":{"gitId":"josephaedan"},"content":"            ViewCommand.class","lastModifiedDate":"2022-10-28"},{"lineNumber":89,"author":{"gitId":"josephaedan"},"content":"        );","lastModifiedDate":"2022-10-28"},{"lineNumber":90,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":91,"author":{"gitId":"pratham31012002"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":92,"author":{"gitId":"pratham31012002"},"content":"     * Adds a tag prefix to the list of prefixes.","lastModifiedDate":"2022-10-11"},{"lineNumber":93,"author":{"gitId":"pratham31012002"},"content":"     * @param pref Prefix to be added.","lastModifiedDate":"2022-10-11"},{"lineNumber":94,"author":{"gitId":"josephaedan"},"content":"     * @throws DuplicatePrefixException If the prefix is already present in the list","lastModifiedDate":"2022-10-26"},{"lineNumber":95,"author":{"gitId":"josephaedan"},"content":"     *                                  of prefixes.","lastModifiedDate":"2022-10-26"},{"lineNumber":96,"author":{"gitId":"pratham31012002"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":97,"author":{"gitId":"pratham31012002"},"content":"    public static void addTagPrefix(Prefix pref) throws DuplicatePrefixException {","lastModifiedDate":"2022-10-11"},{"lineNumber":98,"author":{"gitId":"pratham31012002"},"content":"        if (prefixTags.contains(pref) || prefixes.contains(pref)) {","lastModifiedDate":"2022-10-11"},{"lineNumber":99,"author":{"gitId":"pratham31012002"},"content":"            throw new DuplicatePrefixException();","lastModifiedDate":"2022-10-11"},{"lineNumber":100,"author":{"gitId":"pratham31012002"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":101,"author":{"gitId":"pratham31012002"},"content":"        prefixTags.add(pref);","lastModifiedDate":"2022-10-11"},{"lineNumber":102,"author":{"gitId":"pratham31012002"},"content":"        prefixes.add(pref);","lastModifiedDate":"2022-10-09"},{"lineNumber":103,"author":{"gitId":"pratham31012002"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":104,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":105,"author":{"gitId":"agarwal-anjali"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":106,"author":{"gitId":"agarwal-anjali"},"content":"     * Adds a tag prefix to the list of prefixes if it does not already exist in the prefixes list.","lastModifiedDate":"2022-10-26"},{"lineNumber":107,"author":{"gitId":"agarwal-anjali"},"content":"     * @param pref List of prefixes to be added.","lastModifiedDate":"2022-10-26"},{"lineNumber":108,"author":{"gitId":"agarwal-anjali"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":109,"author":{"gitId":"agarwal-anjali"},"content":"    public static void setTagPrefix(List\u003cPrefix\u003e pref) {","lastModifiedDate":"2022-10-26"},{"lineNumber":110,"author":{"gitId":"agarwal-anjali"},"content":"        prefixes.removeAll(prefixTags);","lastModifiedDate":"2022-10-26"},{"lineNumber":111,"author":{"gitId":"agarwal-anjali"},"content":"        prefixTags \u003d new ArrayList\u003c\u003e(pref);","lastModifiedDate":"2022-10-26"},{"lineNumber":112,"author":{"gitId":"agarwal-anjali"},"content":"        prefixes.addAll(prefixTags);","lastModifiedDate":"2022-10-26"},{"lineNumber":113,"author":{"gitId":"agarwal-anjali"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":114,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":115,"author":{"gitId":"pratham31012002"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":116,"author":{"gitId":"pratham31012002"},"content":"     * Removes a tag prefix from the list of prefixes.","lastModifiedDate":"2022-10-11"},{"lineNumber":117,"author":{"gitId":"pratham31012002"},"content":"     * @param pref Prefix to be removed.","lastModifiedDate":"2022-10-11"},{"lineNumber":118,"author":{"gitId":"josephaedan"},"content":"     * @throws PrefixNotFoundException If the prefix doesn\u0027t exist in the list of","lastModifiedDate":"2022-10-26"},{"lineNumber":119,"author":{"gitId":"josephaedan"},"content":"     *                                 prefixes.","lastModifiedDate":"2022-10-26"},{"lineNumber":120,"author":{"gitId":"pratham31012002"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":121,"author":{"gitId":"pratham31012002"},"content":"    public static void removeTagPrefix(Prefix pref) throws PrefixNotFoundException {","lastModifiedDate":"2022-10-11"},{"lineNumber":122,"author":{"gitId":"pratham31012002"},"content":"        if (!prefixTags.contains(pref) || !prefixes.contains(pref)) {","lastModifiedDate":"2022-10-11"},{"lineNumber":123,"author":{"gitId":"pratham31012002"},"content":"            throw new PrefixNotFoundException();","lastModifiedDate":"2022-10-11"},{"lineNumber":124,"author":{"gitId":"pratham31012002"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":125,"author":{"gitId":"pratham31012002"},"content":"        prefixTags.remove(pref);","lastModifiedDate":"2022-10-11"},{"lineNumber":126,"author":{"gitId":"pratham31012002"},"content":"        prefixes.remove(pref);","lastModifiedDate":"2022-10-11"},{"lineNumber":127,"author":{"gitId":"pratham31012002"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":128,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":129,"author":{"gitId":"josephaedan"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":130,"author":{"gitId":"josephaedan"},"content":"     * Returns a list of prefixes that are used in Clinkedin.","lastModifiedDate":"2022-10-26"},{"lineNumber":131,"author":{"gitId":"josephaedan"},"content":"     * @return List of prefixes.","lastModifiedDate":"2022-10-26"},{"lineNumber":132,"author":{"gitId":"josephaedan"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":133,"author":{"gitId":"pratham31012002"},"content":"    public static Prefix[] getPrefixes() {","lastModifiedDate":"2022-10-10"},{"lineNumber":134,"author":{"gitId":"pratham31012002"},"content":"        requireNonNull(prefixes);","lastModifiedDate":"2022-10-10"},{"lineNumber":135,"author":{"gitId":"pratham31012002"},"content":"        Prefix[] pref \u003d new Prefix[prefixes.size()];","lastModifiedDate":"2022-10-10"},{"lineNumber":136,"author":{"gitId":"pratham31012002"},"content":"        pref \u003d prefixes.toArray(pref);","lastModifiedDate":"2022-10-10"},{"lineNumber":137,"author":{"gitId":"pratham31012002"},"content":"        return pref;","lastModifiedDate":"2022-10-10"},{"lineNumber":138,"author":{"gitId":"pratham31012002"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":139,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":140,"author":{"gitId":"josephaedan"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":141,"author":{"gitId":"josephaedan"},"content":"     * Returns a list of prefixes for tags that are used in Clinkedin.","lastModifiedDate":"2022-10-26"},{"lineNumber":142,"author":{"gitId":"josephaedan"},"content":"     * @return List of prefixes for tags.","lastModifiedDate":"2022-10-26"},{"lineNumber":143,"author":{"gitId":"josephaedan"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":144,"author":{"gitId":"pratham31012002"},"content":"    public static ArrayList\u003cPrefix\u003e getPrefixTags() {","lastModifiedDate":"2022-10-10"},{"lineNumber":145,"author":{"gitId":"pratham31012002"},"content":"        requireNonNull(prefixTags);","lastModifiedDate":"2022-10-10"},{"lineNumber":146,"author":{"gitId":"pratham31012002"},"content":"        return prefixTags;","lastModifiedDate":"2022-10-10"},{"lineNumber":147,"author":{"gitId":"pratham31012002"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":148,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":149,"author":{"gitId":"josephaedan"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":150,"author":{"gitId":"josephaedan"},"content":"     * Returns a list of prefixes that are unique to a person.","lastModifiedDate":"2022-10-26"},{"lineNumber":151,"author":{"gitId":"josephaedan"},"content":"     * @return List of prefixes that are unique to a person.","lastModifiedDate":"2022-10-26"},{"lineNumber":152,"author":{"gitId":"josephaedan"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":153,"author":{"gitId":"pratham31012002"},"content":"    public static ArrayList\u003cPrefix\u003e getUniquePrefixes() {","lastModifiedDate":"2022-10-11"},{"lineNumber":154,"author":{"gitId":"pratham31012002"},"content":"        requireNonNull(uniquePrefixes);","lastModifiedDate":"2022-10-11"},{"lineNumber":155,"author":{"gitId":"pratham31012002"},"content":"        return uniquePrefixes;","lastModifiedDate":"2022-10-11"},{"lineNumber":156,"author":{"gitId":"pratham31012002"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":157,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":158,"author":{"gitId":"josephaedan"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":159,"author":{"gitId":"josephaedan"},"content":"     * Returns the list of all possible user command classes.","lastModifiedDate":"2022-10-26"},{"lineNumber":160,"author":{"gitId":"josephaedan"},"content":"     * @return List of all possible user command classes.","lastModifiedDate":"2022-10-26"},{"lineNumber":161,"author":{"gitId":"josephaedan"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":162,"author":{"gitId":"josephaedan"},"content":"    public static List\u003cClass\u003c? extends Command\u003e\u003e getAllCommandClasses() {","lastModifiedDate":"2022-10-26"},{"lineNumber":163,"author":{"gitId":"josephaedan"},"content":"        return ALL_COMMAND_CLASSES;","lastModifiedDate":"2022-10-26"},{"lineNumber":164,"author":{"gitId":"josephaedan"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":165,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":166,"author":{"gitId":"josephaedan"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":167,"author":{"gitId":"josephaedan"},"content":"     * Returns a map of all possible command words and their corresponding command","lastModifiedDate":"2022-10-26"},{"lineNumber":168,"author":{"gitId":"josephaedan"},"content":"     * message usage instructions.","lastModifiedDate":"2022-10-26"},{"lineNumber":169,"author":{"gitId":"josephaedan"},"content":"     * @return Map of all possible command words and their corresponding usage","lastModifiedDate":"2022-10-26"},{"lineNumber":170,"author":{"gitId":"josephaedan"},"content":"     * @throws NoSuchFieldException     If the command word field is not found in","lastModifiedDate":"2022-10-26"},{"lineNumber":171,"author":{"gitId":"josephaedan"},"content":"     *                                  the class","lastModifiedDate":"2022-10-26"},{"lineNumber":172,"author":{"gitId":"josephaedan"},"content":"     * @throws SecurityException        If the command word field is not accessible","lastModifiedDate":"2022-10-26"},{"lineNumber":173,"author":{"gitId":"josephaedan"},"content":"     * @throws IllegalArgumentException If the command word field is not a string","lastModifiedDate":"2022-10-26"},{"lineNumber":174,"author":{"gitId":"josephaedan"},"content":"     * @throws IllegalAccessException   If the command word field is not accessible","lastModifiedDate":"2022-10-26"},{"lineNumber":175,"author":{"gitId":"josephaedan"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":176,"author":{"gitId":"josephaedan"},"content":"    public static Map\u003cString, String\u003e getAllCommandMessages()","lastModifiedDate":"2022-10-26"},{"lineNumber":177,"author":{"gitId":"josephaedan"},"content":"            throws NoSuchFieldException, SecurityException, IllegalArgumentException, IllegalAccessException {","lastModifiedDate":"2022-10-26"},{"lineNumber":178,"author":{"gitId":"josephaedan"},"content":"        Map\u003cString, String\u003e allCommandMessages \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-10-26"},{"lineNumber":179,"author":{"gitId":"josephaedan"},"content":"        try {","lastModifiedDate":"2022-10-26"},{"lineNumber":180,"author":{"gitId":"josephaedan"},"content":"            for (Class\u003c? extends Command\u003e commandClass : ALL_COMMAND_CLASSES) {","lastModifiedDate":"2022-10-26"},{"lineNumber":181,"author":{"gitId":"josephaedan"},"content":"                Field commandWordField \u003d commandClass.getField(\"COMMAND_WORD\");","lastModifiedDate":"2022-10-26"},{"lineNumber":182,"author":{"gitId":"josephaedan"},"content":"                String commandWord \u003d commandWordField.get(null).toString();","lastModifiedDate":"2022-10-26"},{"lineNumber":183,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":184,"author":{"gitId":"josephaedan"},"content":"                Field commandUsageField \u003d commandClass.getField(\"MESSAGE_USAGE\");","lastModifiedDate":"2022-10-26"},{"lineNumber":185,"author":{"gitId":"josephaedan"},"content":"                String commandUsage \u003d commandUsageField.get(null).toString();","lastModifiedDate":"2022-10-26"},{"lineNumber":186,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":187,"author":{"gitId":"josephaedan"},"content":"                allCommandMessages.put(commandWord, commandUsage);","lastModifiedDate":"2022-10-26"},{"lineNumber":188,"author":{"gitId":"josephaedan"},"content":"            }","lastModifiedDate":"2022-10-26"},{"lineNumber":189,"author":{"gitId":"josephaedan"},"content":"            return allCommandMessages;","lastModifiedDate":"2022-10-26"},{"lineNumber":190,"author":{"gitId":"josephaedan"},"content":"        } catch (NoSuchFieldException exception) {","lastModifiedDate":"2022-10-26"},{"lineNumber":191,"author":{"gitId":"josephaedan"},"content":"            throw new NoSuchFieldException(\"No field named COMMAND_WORD found in supplied commands\");","lastModifiedDate":"2022-10-26"},{"lineNumber":192,"author":{"gitId":"josephaedan"},"content":"        } catch (SecurityException exception) {","lastModifiedDate":"2022-10-26"},{"lineNumber":193,"author":{"gitId":"josephaedan"},"content":"            throw new SecurityException(\"Security exception!\");","lastModifiedDate":"2022-10-26"},{"lineNumber":194,"author":{"gitId":"josephaedan"},"content":"        } catch (IllegalArgumentException exception) {","lastModifiedDate":"2022-10-26"},{"lineNumber":195,"author":{"gitId":"josephaedan"},"content":"            throw new IllegalArgumentException(\"Illegal argument exception!\");","lastModifiedDate":"2022-10-26"},{"lineNumber":196,"author":{"gitId":"josephaedan"},"content":"        } catch (IllegalAccessException exception) {","lastModifiedDate":"2022-10-26"},{"lineNumber":197,"author":{"gitId":"josephaedan"},"content":"            throw new IllegalAccessException(\"Illegal access exception!\");","lastModifiedDate":"2022-10-26"},{"lineNumber":198,"author":{"gitId":"josephaedan"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":199,"author":{"gitId":"josephaedan"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":200,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":201,"author":{"gitId":"josephaedan"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":202,"author":{"gitId":"josephaedan"},"content":"     * Returns an observableList of all possible command words.","lastModifiedDate":"2022-10-27"},{"lineNumber":203,"author":{"gitId":"josephaedan"},"content":"     * @throws NoSuchFieldException","lastModifiedDate":"2022-10-27"},{"lineNumber":204,"author":{"gitId":"josephaedan"},"content":"     * @throws IllegalAccessException","lastModifiedDate":"2022-10-27"},{"lineNumber":205,"author":{"gitId":"josephaedan"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":206,"author":{"gitId":"josephaedan"},"content":"    public static ObservableList\u003cCommandRow\u003e getAllCommandRows() throws NoSuchFieldException, IllegalAccessException {","lastModifiedDate":"2022-10-27"},{"lineNumber":207,"author":{"gitId":"josephaedan"},"content":"        ObservableList\u003cCommandRow\u003e allCommandRows \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-27"},{"lineNumber":208,"author":{"gitId":"josephaedan"},"content":"        try {","lastModifiedDate":"2022-10-27"},{"lineNumber":209,"author":{"gitId":"josephaedan"},"content":"            for (Class\u003c? extends Command\u003e commandClass : ALL_COMMAND_CLASSES) {","lastModifiedDate":"2022-10-27"},{"lineNumber":210,"author":{"gitId":"josephaedan"},"content":"                Field commandWordField \u003d commandClass.getField(\"COMMAND_WORD\");","lastModifiedDate":"2022-10-27"},{"lineNumber":211,"author":{"gitId":"josephaedan"},"content":"                String commandWord \u003d commandWordField.get(null).toString();","lastModifiedDate":"2022-10-27"},{"lineNumber":212,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":213,"author":{"gitId":"josephaedan"},"content":"                Field commandUsageField \u003d commandClass.getField(\"MESSAGE_USAGE\");","lastModifiedDate":"2022-10-27"},{"lineNumber":214,"author":{"gitId":"josephaedan"},"content":"                String commandUsage \u003d commandUsageField.get(null).toString();","lastModifiedDate":"2022-10-27"},{"lineNumber":215,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":216,"author":{"gitId":"josephaedan"},"content":"                allCommandRows.add(new CommandRow(commandWord, commandUsage));","lastModifiedDate":"2022-10-27"},{"lineNumber":217,"author":{"gitId":"josephaedan"},"content":"            }","lastModifiedDate":"2022-10-27"},{"lineNumber":218,"author":{"gitId":"josephaedan"},"content":"            return allCommandRows;","lastModifiedDate":"2022-10-27"},{"lineNumber":219,"author":{"gitId":"josephaedan"},"content":"        } catch (NoSuchFieldException exception) {","lastModifiedDate":"2022-10-27"},{"lineNumber":220,"author":{"gitId":"josephaedan"},"content":"            throw new NoSuchFieldException(\"No field named COMMAND_WORD found in supplied commands\");","lastModifiedDate":"2022-10-27"},{"lineNumber":221,"author":{"gitId":"josephaedan"},"content":"        } catch (SecurityException exception) {","lastModifiedDate":"2022-10-27"},{"lineNumber":222,"author":{"gitId":"josephaedan"},"content":"            throw new SecurityException(\"Security exception!\");","lastModifiedDate":"2022-10-27"},{"lineNumber":223,"author":{"gitId":"josephaedan"},"content":"        } catch (IllegalArgumentException exception) {","lastModifiedDate":"2022-10-27"},{"lineNumber":224,"author":{"gitId":"josephaedan"},"content":"            throw new IllegalArgumentException(\"Illegal argument exception!\");","lastModifiedDate":"2022-10-27"},{"lineNumber":225,"author":{"gitId":"josephaedan"},"content":"        } catch (IllegalAccessException exception) {","lastModifiedDate":"2022-10-27"},{"lineNumber":226,"author":{"gitId":"josephaedan"},"content":"            throw new IllegalAccessException(\"Illegal access exception!\");","lastModifiedDate":"2022-10-27"},{"lineNumber":227,"author":{"gitId":"josephaedan"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":228,"author":{"gitId":"josephaedan"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":229,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"agarwal-anjali":15,"ytingtan":8,"emptygx":3,"pratham31012002":56,"josephaedan":135,"-":12}},{"path":"src/main/java/seedu/clinkedin/logic/parser/CreateTagTypeCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.logic.parser;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":3,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.logic.commands.CreateTagTypeCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":8,"author":{"gitId":"pratham31012002"},"content":"/**","lastModifiedDate":"2022-10-07"},{"lineNumber":9,"author":{"gitId":"pratham31012002"},"content":" * Parses input arguments and creates a new CreateTagTypeCommand object","lastModifiedDate":"2022-10-07"},{"lineNumber":10,"author":{"gitId":"pratham31012002"},"content":" */","lastModifiedDate":"2022-10-07"},{"lineNumber":11,"author":{"gitId":"pratham31012002"},"content":"public class CreateTagTypeCommandParser implements Parser\u003cCreateTagTypeCommand\u003e {","lastModifiedDate":"2022-10-07"},{"lineNumber":12,"author":{"gitId":"pratham31012002"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":13,"author":{"gitId":"pratham31012002"},"content":"     * Parses the given {@code String} of arguments in the context of the CreateTagTypeCommand","lastModifiedDate":"2022-10-07"},{"lineNumber":14,"author":{"gitId":"pratham31012002"},"content":"     * and returns a CreateTagTypeCommand object for execution.","lastModifiedDate":"2022-10-07"},{"lineNumber":15,"author":{"gitId":"pratham31012002"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-07"},{"lineNumber":16,"author":{"gitId":"pratham31012002"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":17,"author":{"gitId":"pratham31012002"},"content":"    public CreateTagTypeCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-07"},{"lineNumber":18,"author":{"gitId":"pratham31012002"},"content":"        String[] tagTypeAndPrefix \u003d args.trim().split(\"\\\\s+\", 2);","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"pratham31012002"},"content":"        if (tagTypeAndPrefix.length !\u003d 2) {","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"pratham31012002"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, CreateTagTypeCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"pratham31012002"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"pratham31012002"},"content":"        return new CreateTagTypeCommand(ParserUtil.parseTagType(tagTypeAndPrefix[0], tagTypeAndPrefix[1]),","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"pratham31012002"},"content":"                ParserUtil.parsePrefix(tagTypeAndPrefix[1]));","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"pratham31012002"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":25,"author":{"gitId":"pratham31012002"},"content":"}","lastModifiedDate":"2022-10-07"},{"lineNumber":26,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-07"}],"authorContributionMap":{"emptygx":4,"pratham31012002":22}},{"path":"src/main/java/seedu/clinkedin/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.logic.parser;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.commons.core.index.Index;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.logic.commands.DeleteCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"emptygx":5,"-":24}},{"path":"src/main/java/seedu/clinkedin/logic/parser/DeleteLinkCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"agarwal-anjali"},"content":"package seedu.clinkedin.logic.parser;","lastModifiedDate":"2022-10-28"},{"lineNumber":2,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":3,"author":{"gitId":"agarwal-anjali"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-28"},{"lineNumber":4,"author":{"gitId":"agarwal-anjali"},"content":"import static seedu.clinkedin.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-28"},{"lineNumber":5,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":6,"author":{"gitId":"agarwal-anjali"},"content":"import seedu.clinkedin.commons.core.index.Index;","lastModifiedDate":"2022-10-28"},{"lineNumber":7,"author":{"gitId":"agarwal-anjali"},"content":"import seedu.clinkedin.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-28"},{"lineNumber":8,"author":{"gitId":"agarwal-anjali"},"content":"import seedu.clinkedin.logic.commands.DeleteLinkCommand;","lastModifiedDate":"2022-10-28"},{"lineNumber":9,"author":{"gitId":"agarwal-anjali"},"content":"import seedu.clinkedin.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-28"},{"lineNumber":10,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":11,"author":{"gitId":"agarwal-anjali"},"content":"/**","lastModifiedDate":"2022-10-28"},{"lineNumber":12,"author":{"gitId":"agarwal-anjali"},"content":" * Parses input arguments and creates a new DeleteLinkCommand object","lastModifiedDate":"2022-10-28"},{"lineNumber":13,"author":{"gitId":"agarwal-anjali"},"content":" */","lastModifiedDate":"2022-10-28"},{"lineNumber":14,"author":{"gitId":"agarwal-anjali"},"content":"public class DeleteLinkCommandParser implements Parser\u003cDeleteLinkCommand\u003e {","lastModifiedDate":"2022-10-28"},{"lineNumber":15,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":16,"author":{"gitId":"agarwal-anjali"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"agarwal-anjali"},"content":"     * Parses the given {@code String} of arguments in the context of the","lastModifiedDate":"2022-10-28"},{"lineNumber":18,"author":{"gitId":"agarwal-anjali"},"content":"     * DeleteLinkCommand","lastModifiedDate":"2022-10-28"},{"lineNumber":19,"author":{"gitId":"agarwal-anjali"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":20,"author":{"gitId":"agarwal-anjali"},"content":"    public DeleteLinkCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-28"},{"lineNumber":21,"author":{"gitId":"agarwal-anjali"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-10-28"},{"lineNumber":22,"author":{"gitId":"agarwal-anjali"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args);","lastModifiedDate":"2022-10-28"},{"lineNumber":23,"author":{"gitId":"agarwal-anjali"},"content":"        Index index;","lastModifiedDate":"2022-10-28"},{"lineNumber":24,"author":{"gitId":"agarwal-anjali"},"content":"        try {","lastModifiedDate":"2022-10-28"},{"lineNumber":25,"author":{"gitId":"agarwal-anjali"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-10-28"},{"lineNumber":26,"author":{"gitId":"agarwal-anjali"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2022-10-28"},{"lineNumber":27,"author":{"gitId":"agarwal-anjali"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-28"},{"lineNumber":28,"author":{"gitId":"agarwal-anjali"},"content":"                    DeleteLinkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2022-10-28"},{"lineNumber":29,"author":{"gitId":"agarwal-anjali"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":30,"author":{"gitId":"agarwal-anjali"},"content":"        return new DeleteLinkCommand(index);","lastModifiedDate":"2022-10-28"},{"lineNumber":31,"author":{"gitId":"agarwal-anjali"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":32,"author":{"gitId":"agarwal-anjali"},"content":"}","lastModifiedDate":"2022-10-28"}],"authorContributionMap":{"agarwal-anjali":32}},{"path":"src/main/java/seedu/clinkedin/logic/parser/DeleteNoteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"agarwal-anjali"},"content":"package seedu.clinkedin.logic.parser;","lastModifiedDate":"2022-10-28"},{"lineNumber":2,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":3,"author":{"gitId":"agarwal-anjali"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-28"},{"lineNumber":4,"author":{"gitId":"agarwal-anjali"},"content":"import static seedu.clinkedin.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-28"},{"lineNumber":5,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":6,"author":{"gitId":"agarwal-anjali"},"content":"import seedu.clinkedin.commons.core.index.Index;","lastModifiedDate":"2022-10-28"},{"lineNumber":7,"author":{"gitId":"agarwal-anjali"},"content":"import seedu.clinkedin.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-28"},{"lineNumber":8,"author":{"gitId":"agarwal-anjali"},"content":"import seedu.clinkedin.logic.commands.DeleteNoteCommand;","lastModifiedDate":"2022-10-28"},{"lineNumber":9,"author":{"gitId":"agarwal-anjali"},"content":"import seedu.clinkedin.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-28"},{"lineNumber":10,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":11,"author":{"gitId":"agarwal-anjali"},"content":"/**","lastModifiedDate":"2022-10-28"},{"lineNumber":12,"author":{"gitId":"agarwal-anjali"},"content":" * Parses input arguments and creates a new DeleteNoteCommand object","lastModifiedDate":"2022-10-28"},{"lineNumber":13,"author":{"gitId":"agarwal-anjali"},"content":" */","lastModifiedDate":"2022-10-28"},{"lineNumber":14,"author":{"gitId":"agarwal-anjali"},"content":"public class DeleteNoteCommandParser implements Parser\u003cDeleteNoteCommand\u003e {","lastModifiedDate":"2022-10-28"},{"lineNumber":15,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":16,"author":{"gitId":"agarwal-anjali"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"agarwal-anjali"},"content":"     * Parses the given {@code String} of arguments in the context of the","lastModifiedDate":"2022-10-28"},{"lineNumber":18,"author":{"gitId":"agarwal-anjali"},"content":"     * DeleteNoteCommand","lastModifiedDate":"2022-10-28"},{"lineNumber":19,"author":{"gitId":"agarwal-anjali"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":20,"author":{"gitId":"agarwal-anjali"},"content":"    public DeleteNoteCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-28"},{"lineNumber":21,"author":{"gitId":"agarwal-anjali"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-10-28"},{"lineNumber":22,"author":{"gitId":"agarwal-anjali"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args);","lastModifiedDate":"2022-10-28"},{"lineNumber":23,"author":{"gitId":"agarwal-anjali"},"content":"        Index index;","lastModifiedDate":"2022-10-28"},{"lineNumber":24,"author":{"gitId":"agarwal-anjali"},"content":"        try {","lastModifiedDate":"2022-10-28"},{"lineNumber":25,"author":{"gitId":"agarwal-anjali"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-10-28"},{"lineNumber":26,"author":{"gitId":"agarwal-anjali"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2022-10-28"},{"lineNumber":27,"author":{"gitId":"agarwal-anjali"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-28"},{"lineNumber":28,"author":{"gitId":"agarwal-anjali"},"content":"                    DeleteNoteCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2022-10-28"},{"lineNumber":29,"author":{"gitId":"agarwal-anjali"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":30,"author":{"gitId":"agarwal-anjali"},"content":"        return new DeleteNoteCommand(index);","lastModifiedDate":"2022-10-28"},{"lineNumber":31,"author":{"gitId":"agarwal-anjali"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":32,"author":{"gitId":"agarwal-anjali"},"content":"}","lastModifiedDate":"2022-10-28"}],"authorContributionMap":{"agarwal-anjali":32}},{"path":"src/main/java/seedu/clinkedin/logic/parser/DeleteRateCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.logic.parser;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"josephaedan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.commons.core.index.Index;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"ytingtan"},"content":"import seedu.clinkedin.logic.commands.DeleteRateCommand;","lastModifiedDate":"2022-10-28"},{"lineNumber":9,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"josephaedan"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"ytingtan"},"content":" * Parses input arguments and creates a new DeleteRateCommand object","lastModifiedDate":"2022-10-28"},{"lineNumber":13,"author":{"gitId":"josephaedan"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"ytingtan"},"content":"public class DeleteRateCommandParser implements Parser\u003cDeleteRateCommand\u003e {","lastModifiedDate":"2022-10-28"},{"lineNumber":15,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"josephaedan"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"josephaedan"},"content":"     * Parses the given {@code String} of arguments in the context of the","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"ytingtan"},"content":"     * DeleteRateCommand","lastModifiedDate":"2022-10-28"},{"lineNumber":19,"author":{"gitId":"josephaedan"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"ytingtan"},"content":"    public DeleteRateCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-28"},{"lineNumber":21,"author":{"gitId":"josephaedan"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"ytingtan"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args);","lastModifiedDate":"2022-10-28"},{"lineNumber":23,"author":{"gitId":"josephaedan"},"content":"        Index index;","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"josephaedan"},"content":"        try {","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"josephaedan"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"josephaedan"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"josephaedan"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"ytingtan"},"content":"                    DeleteRateCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2022-10-28"},{"lineNumber":29,"author":{"gitId":"josephaedan"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"ytingtan"},"content":"        return new DeleteRateCommand(index);","lastModifiedDate":"2022-10-28"},{"lineNumber":31,"author":{"gitId":"josephaedan"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"josephaedan"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"ytingtan":8,"emptygx":5,"josephaedan":19}},{"path":"src/main/java/seedu/clinkedin/logic/parser/DeleteTagCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.logic.parser;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":3,"author":{"gitId":"pratham31012002"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"pratham31012002"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"pratham31012002"},"content":"import java.util.List;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"pratham31012002"},"content":"import java.util.Map;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.commons.core.index.Index;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.logic.commands.DeleteTagCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.UniqueTagTypeMap;","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":17,"author":{"gitId":"agarwal-anjali"},"content":"/**","lastModifiedDate":"2022-10-07"},{"lineNumber":18,"author":{"gitId":"agarwal-anjali"},"content":" * Parses input arguments and creates a new DeleteTagCommand object","lastModifiedDate":"2022-10-07"},{"lineNumber":19,"author":{"gitId":"agarwal-anjali"},"content":" */","lastModifiedDate":"2022-10-07"},{"lineNumber":20,"author":{"gitId":"pratham31012002"},"content":"public class DeleteTagCommandParser implements Parser\u003cDeleteTagCommand\u003e {","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"agarwal-anjali"},"content":"    @Override","lastModifiedDate":"2022-10-07"},{"lineNumber":22,"author":{"gitId":"pratham31012002"},"content":"    public DeleteTagCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"pratham31012002"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"pratham31012002"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, CliSyntax.getPrefixes());","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"pratham31012002"},"content":"        Index index;","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"pratham31012002"},"content":"        try {","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"pratham31012002"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"pratham31012002"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"pratham31012002"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteTagCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"pratham31012002"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"pratham31012002"},"content":"        Map\u003cPrefix, List\u003cString\u003e\u003e prefToStrings \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"pratham31012002"},"content":"        CliSyntax.getPrefixTags().forEach(pref -\u003e prefToStrings.put(pref, argMultimap.getAllValues(pref)));","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"pratham31012002"},"content":"        UniqueTagTypeMap tagMap \u003d ParserUtil.parseTags(prefToStrings);","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"pratham31012002"},"content":"        return new DeleteTagCommand(index, tagMap);","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"agarwal-anjali"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":39,"author":{"gitId":"agarwal-anjali"},"content":"}","lastModifiedDate":"2022-10-07"}],"authorContributionMap":{"agarwal-anjali":8,"emptygx":6,"pratham31012002":25}},{"path":"src/main/java/seedu/clinkedin/logic/parser/DeleteTagTypeCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.logic.parser;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":3,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.logic.commands.DeleteTagTypeCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.UniqueTagTypeMap;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.exceptions.TagTypeNotFoundException;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.tag.TagType;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":9,"author":{"gitId":"pratham31012002"},"content":"/**","lastModifiedDate":"2022-10-07"},{"lineNumber":10,"author":{"gitId":"pratham31012002"},"content":" * Parses input arguments and creates a new DeleteTagTypeCommand object","lastModifiedDate":"2022-10-07"},{"lineNumber":11,"author":{"gitId":"pratham31012002"},"content":" */","lastModifiedDate":"2022-10-07"},{"lineNumber":12,"author":{"gitId":"pratham31012002"},"content":"public class DeleteTagTypeCommandParser implements Parser\u003cDeleteTagTypeCommand\u003e {","lastModifiedDate":"2022-10-07"},{"lineNumber":13,"author":{"gitId":"pratham31012002"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":14,"author":{"gitId":"pratham31012002"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteTagTypeCommand","lastModifiedDate":"2022-10-07"},{"lineNumber":15,"author":{"gitId":"pratham31012002"},"content":"     * and returns a DeleteTagTypeCommand object for execution.","lastModifiedDate":"2022-10-07"},{"lineNumber":16,"author":{"gitId":"pratham31012002"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-07"},{"lineNumber":17,"author":{"gitId":"pratham31012002"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":18,"author":{"gitId":"pratham31012002"},"content":"    public DeleteTagTypeCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-07"},{"lineNumber":19,"author":{"gitId":"pratham31012002"},"content":"        String trimmedTagType \u003d args.trim();","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"pratham31012002"},"content":"        Prefix pref;","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"pratham31012002"},"content":"        try {","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"pratham31012002"},"content":"            pref \u003d UniqueTagTypeMap.getPrefixFromTagType(trimmedTagType);","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"pratham31012002"},"content":"        } catch (TagTypeNotFoundException e) {","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"pratham31012002"},"content":"            throw new ParseException(\"Invalid TagType!\");","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"pratham31012002"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"pratham31012002"},"content":"        TagType tagType \u003d ParserUtil.parseTagType(trimmedTagType, pref);","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"pratham31012002"},"content":"        return new DeleteTagTypeCommand(tagType);","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"pratham31012002"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":29,"author":{"gitId":"pratham31012002"},"content":"}","lastModifiedDate":"2022-10-07"},{"lineNumber":30,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-07"}],"authorContributionMap":{"emptygx":6,"pratham31012002":24}},{"path":"src/main/java/seedu/clinkedin/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.logic.parser;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"agarwal-anjali"},"content":"import static seedu.clinkedin.logic.parser.CliSyntax.PREFIX_LINK;","lastModifiedDate":"2022-10-24"},{"lineNumber":8,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.parser.CliSyntax.PREFIX_NOTE;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"ytingtan"},"content":"import static seedu.clinkedin.logic.parser.CliSyntax.PREFIX_RATING;","lastModifiedDate":"2022-10-17"},{"lineNumber":12,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"pratham31012002"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"pratham31012002"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"agarwal-anjali"},"content":"import java.util.Collection;","lastModifiedDate":"2022-10-24"},{"lineNumber":17,"author":{"gitId":"agarwal-anjali"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-24"},{"lineNumber":18,"author":{"gitId":"pratham31012002"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"pratham31012002"},"content":"import java.util.List;","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"pratham31012002"},"content":"import java.util.Map;","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"agarwal-anjali"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-24"},{"lineNumber":22,"author":{"gitId":"agarwal-anjali"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.commons.core.index.Index;","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.logic.commands.EditCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":26,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-15"},{"lineNumber":28,"author":{"gitId":"agarwal-anjali"},"content":"import seedu.clinkedin.model.link.Link;","lastModifiedDate":"2022-10-23"},{"lineNumber":29,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.UniqueTagTypeMap;","lastModifiedDate":"2022-10-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"pratham31012002"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, CliSyntax.getPrefixes());","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":65,"author":{"gitId":"pratham31012002"},"content":"        Map\u003cPrefix, List\u003cString\u003e\u003e prefToStrings \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"pratham31012002"},"content":"        CliSyntax.getPrefixTags().stream().forEach(pref -\u003e prefToStrings.put(pref, argMultimap.getAllValues(pref)));","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"pratham31012002"},"content":"        Map\u003cPrefix, List\u003cString\u003e\u003e oldTagMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"pratham31012002"},"content":"        Map\u003cPrefix, List\u003cString\u003e\u003e newTagMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"pratham31012002"},"content":"        for (Prefix p : prefToStrings.keySet()) {","lastModifiedDate":"2022-10-11"},{"lineNumber":72,"author":{"gitId":"pratham31012002"},"content":"            for (String tagPair: prefToStrings.get(p)) {","lastModifiedDate":"2022-10-11"},{"lineNumber":73,"author":{"gitId":"pratham31012002"},"content":"                String[] oldNewPair;","lastModifiedDate":"2022-10-12"},{"lineNumber":74,"author":{"gitId":"pratham31012002"},"content":"                try {","lastModifiedDate":"2022-10-12"},{"lineNumber":75,"author":{"gitId":"pratham31012002"},"content":"                    oldNewPair \u003d ParserUtil.parseHyphen(tagPair);","lastModifiedDate":"2022-10-12"},{"lineNumber":76,"author":{"gitId":"pratham31012002"},"content":"                } catch (ParseException pe) {","lastModifiedDate":"2022-10-12"},{"lineNumber":77,"author":{"gitId":"pratham31012002"},"content":"                    throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-12"},{"lineNumber":78,"author":{"gitId":"pratham31012002"},"content":"                }","lastModifiedDate":"2022-10-12"},{"lineNumber":79,"author":{"gitId":"pratham31012002"},"content":"                if (oldTagMap.containsKey(p)) {","lastModifiedDate":"2022-10-11"},{"lineNumber":80,"author":{"gitId":"pratham31012002"},"content":"                    oldTagMap.get(p).add(oldNewPair[0]);","lastModifiedDate":"2022-10-11"},{"lineNumber":81,"author":{"gitId":"pratham31012002"},"content":"                    newTagMap.get(p).add(oldNewPair[1]);","lastModifiedDate":"2022-10-11"},{"lineNumber":82,"author":{"gitId":"agarwal-anjali"},"content":"                } else {","lastModifiedDate":"2022-10-12"},{"lineNumber":83,"author":{"gitId":"pratham31012002"},"content":"                    oldTagMap.put(p, new ArrayList\u003c\u003e(Arrays.asList(oldNewPair[0])));","lastModifiedDate":"2022-10-11"},{"lineNumber":84,"author":{"gitId":"pratham31012002"},"content":"                    newTagMap.put(p, new ArrayList\u003c\u003e(Arrays.asList(oldNewPair[1])));","lastModifiedDate":"2022-10-11"},{"lineNumber":85,"author":{"gitId":"pratham31012002"},"content":"                }","lastModifiedDate":"2022-10-11"},{"lineNumber":86,"author":{"gitId":"pratham31012002"},"content":"            }","lastModifiedDate":"2022-10-11"},{"lineNumber":87,"author":{"gitId":"pratham31012002"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":88,"author":{"gitId":"pratham31012002"},"content":"        UniqueTagTypeMap oldMap \u003d ParserUtil.parseTags(oldTagMap);","lastModifiedDate":"2022-10-11"},{"lineNumber":89,"author":{"gitId":"pratham31012002"},"content":"        UniqueTagTypeMap newMap \u003d ParserUtil.parseTags(newTagMap);","lastModifiedDate":"2022-10-11"},{"lineNumber":90,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":91,"author":{"gitId":"pratham31012002"},"content":"        if (oldMap.getCount() !\u003d 0) {","lastModifiedDate":"2022-10-11"},{"lineNumber":92,"author":{"gitId":"pratham31012002"},"content":"            editPersonDescriptor.setOldTagTypeMap(oldMap);","lastModifiedDate":"2022-10-11"},{"lineNumber":93,"author":{"gitId":"pratham31012002"},"content":"            editPersonDescriptor.setNewTagTypeMap(newMap);","lastModifiedDate":"2022-10-11"},{"lineNumber":94,"author":{"gitId":"pratham31012002"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":95,"author":{"gitId":"josephaedan"},"content":"        if (argMultimap.getValue(PREFIX_STATUS).isPresent()) {","lastModifiedDate":"2022-10-10"},{"lineNumber":96,"author":{"gitId":"josephaedan"},"content":"            editPersonDescriptor.setStatus(ParserUtil.parseStatus(argMultimap.getValue(PREFIX_STATUS).get()));","lastModifiedDate":"2022-10-10"},{"lineNumber":97,"author":{"gitId":"josephaedan"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":98,"author":{"gitId":"josephaedan"},"content":"        if (argMultimap.getValue(PREFIX_NOTE).isPresent()) {","lastModifiedDate":"2022-10-12"},{"lineNumber":99,"author":{"gitId":"josephaedan"},"content":"            editPersonDescriptor.setNote(ParserUtil.parseNote(argMultimap.getValue(PREFIX_NOTE).get()));","lastModifiedDate":"2022-10-12"},{"lineNumber":100,"author":{"gitId":"josephaedan"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":101,"author":{"gitId":"ytingtan"},"content":"        if (argMultimap.getValue(PREFIX_RATING).isPresent()) {","lastModifiedDate":"2022-10-17"},{"lineNumber":102,"author":{"gitId":"ytingtan"},"content":"            editPersonDescriptor.setRating(ParserUtil.parseRating(argMultimap.getValue(PREFIX_RATING).get()));","lastModifiedDate":"2022-10-17"},{"lineNumber":103,"author":{"gitId":"ytingtan"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":104,"author":{"gitId":"agarwal-anjali"},"content":"        parseLinksForEdit(argMultimap.getAllValues(PREFIX_LINK)).ifPresent(editPersonDescriptor::setLinks);","lastModifiedDate":"2022-10-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":111,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":112,"author":{"gitId":"agarwal-anjali"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":113,"author":{"gitId":"agarwal-anjali"},"content":"     * Parses {@code Collection\u003cString\u003e links} into a {@code Set\u003cLink\u003e} if {@code links} is non-empty.","lastModifiedDate":"2022-10-23"},{"lineNumber":114,"author":{"gitId":"agarwal-anjali"},"content":"     * If {@code links} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2022-10-23"},{"lineNumber":115,"author":{"gitId":"agarwal-anjali"},"content":"     * {@code Set\u003cLink\u003e} containing zero link.","lastModifiedDate":"2022-10-23"},{"lineNumber":116,"author":{"gitId":"agarwal-anjali"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":117,"author":{"gitId":"agarwal-anjali"},"content":"    private Optional\u003cSet\u003cLink\u003e\u003e parseLinksForEdit(Collection\u003cString\u003e links) throws ParseException {","lastModifiedDate":"2022-10-23"},{"lineNumber":118,"author":{"gitId":"agarwal-anjali"},"content":"        assert links !\u003d null;","lastModifiedDate":"2022-10-23"},{"lineNumber":119,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":120,"author":{"gitId":"agarwal-anjali"},"content":"        if (links.isEmpty()) {","lastModifiedDate":"2022-10-23"},{"lineNumber":121,"author":{"gitId":"agarwal-anjali"},"content":"            return Optional.empty();","lastModifiedDate":"2022-10-23"},{"lineNumber":122,"author":{"gitId":"agarwal-anjali"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":123,"author":{"gitId":"agarwal-anjali"},"content":"        Collection\u003cString\u003e linkSet \u003d links.size() \u003d\u003d 1 \u0026\u0026 links.contains(\"\") ? Collections.emptySet() : links;","lastModifiedDate":"2022-10-23"},{"lineNumber":124,"author":{"gitId":"agarwal-anjali"},"content":"        return Optional.of(ParserUtil.parseLinks(linkSet));","lastModifiedDate":"2022-10-23"},{"lineNumber":125,"author":{"gitId":"agarwal-anjali"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"agarwal-anjali":23,"ytingtan":4,"emptygx":13,"pratham31012002":35,"josephaedan":6,"-":45}},{"path":"src/main/java/seedu/clinkedin/logic/parser/EditTagTypeCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.logic.parser;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":3,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.logic.commands.EditTagTypeCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.tag.TagType;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":9,"author":{"gitId":"pratham31012002"},"content":"/**","lastModifiedDate":"2022-10-07"},{"lineNumber":10,"author":{"gitId":"pratham31012002"},"content":" * Parses input arguments and creates a new EditTagTypeCommand object","lastModifiedDate":"2022-10-07"},{"lineNumber":11,"author":{"gitId":"pratham31012002"},"content":" */","lastModifiedDate":"2022-10-07"},{"lineNumber":12,"author":{"gitId":"pratham31012002"},"content":"public class EditTagTypeCommandParser implements Parser\u003cEditTagTypeCommand\u003e {","lastModifiedDate":"2022-10-07"},{"lineNumber":13,"author":{"gitId":"pratham31012002"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":14,"author":{"gitId":"pratham31012002"},"content":"     * Parses the given {@code String} of arguments in the context of the EditTagTypeCommand","lastModifiedDate":"2022-10-07"},{"lineNumber":15,"author":{"gitId":"pratham31012002"},"content":"     * and returns a EditTagTypeCommand object for execution.","lastModifiedDate":"2022-10-07"},{"lineNumber":16,"author":{"gitId":"pratham31012002"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-07"},{"lineNumber":17,"author":{"gitId":"pratham31012002"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":18,"author":{"gitId":"pratham31012002"},"content":"    public EditTagTypeCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-07"},{"lineNumber":19,"author":{"gitId":"pratham31012002"},"content":"        String[] tagTypeAndPrefix \u003d args.trim().split(\"\\\\s+\", 2);","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"pratham31012002"},"content":"        if (tagTypeAndPrefix.length !\u003d 2) {","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"pratham31012002"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditTagTypeCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"pratham31012002"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"pratham31012002"},"content":"        String[] oldNewTagTypeStrings \u003d ParserUtil.parseHyphen(tagTypeAndPrefix[0]);","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"pratham31012002"},"content":"        String[] oldNewPrefixStrings \u003d ParserUtil.parseHyphen(tagTypeAndPrefix[1]);","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"pratham31012002"},"content":"        Prefix[] oldNewPrefixes \u003d new Prefix[2];","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"pratham31012002"},"content":"        oldNewPrefixes[0] \u003d ParserUtil.parsePrefix(oldNewPrefixStrings[0]);","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"pratham31012002"},"content":"        oldNewPrefixes[1] \u003d ParserUtil.parsePrefix(oldNewPrefixStrings[1]);","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"pratham31012002"},"content":"        TagType[] oldNewTagTypes \u003d new TagType[2];","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"pratham31012002"},"content":"        oldNewTagTypes[0] \u003d ParserUtil.parseTagType(oldNewTagTypeStrings[0], oldNewPrefixes[0]);","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"pratham31012002"},"content":"        oldNewTagTypes[1] \u003d ParserUtil.parseTagType(oldNewTagTypeStrings[1], oldNewPrefixes[1]);","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"pratham31012002"},"content":"        return new EditTagTypeCommand(oldNewPrefixes[0], oldNewTagTypes[0], oldNewPrefixes[1], oldNewTagTypes[1]);","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"pratham31012002"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":33,"author":{"gitId":"pratham31012002"},"content":"}","lastModifiedDate":"2022-10-07"}],"authorContributionMap":{"emptygx":5,"pratham31012002":28}},{"path":"src/main/java/seedu/clinkedin/logic/parser/ExportCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pratham31012002"},"content":"package seedu.clinkedin.logic.parser;","lastModifiedDate":"2022-10-22"},{"lineNumber":2,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":3,"author":{"gitId":"pratham31012002"},"content":"import static seedu.clinkedin.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-22"},{"lineNumber":4,"author":{"gitId":"pratham31012002"},"content":"import static seedu.clinkedin.logic.parser.CliSyntax.PREFIX_PATH;","lastModifiedDate":"2022-10-22"},{"lineNumber":5,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":6,"author":{"gitId":"pratham31012002"},"content":"import java.io.File;","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"pratham31012002"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-10-22"},{"lineNumber":8,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":9,"author":{"gitId":"pratham31012002"},"content":"import seedu.clinkedin.logic.commands.ExportCommand;","lastModifiedDate":"2022-10-22"},{"lineNumber":10,"author":{"gitId":"pratham31012002"},"content":"import seedu.clinkedin.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-22"},{"lineNumber":11,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":12,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":13,"author":{"gitId":"pratham31012002"},"content":"/**","lastModifiedDate":"2022-10-22"},{"lineNumber":14,"author":{"gitId":"pratham31012002"},"content":" * Parses input arguments and creates a new ExportCommand object.","lastModifiedDate":"2022-10-22"},{"lineNumber":15,"author":{"gitId":"pratham31012002"},"content":" */","lastModifiedDate":"2022-10-22"},{"lineNumber":16,"author":{"gitId":"pratham31012002"},"content":"public class ExportCommandParser implements Parser\u003cExportCommand\u003e {","lastModifiedDate":"2022-10-22"},{"lineNumber":17,"author":{"gitId":"pratham31012002"},"content":"    /**","lastModifiedDate":"2022-10-22"},{"lineNumber":18,"author":{"gitId":"pratham31012002"},"content":"     * Parses the given {@code String} of arguments in the context of ExportCommand and returns an ExportCommand object","lastModifiedDate":"2022-10-22"},{"lineNumber":19,"author":{"gitId":"pratham31012002"},"content":"     * for execution.","lastModifiedDate":"2022-10-22"},{"lineNumber":20,"author":{"gitId":"pratham31012002"},"content":"     * @throws ParseException If the user input does not conform the expected format.","lastModifiedDate":"2022-10-22"},{"lineNumber":21,"author":{"gitId":"pratham31012002"},"content":"     */","lastModifiedDate":"2022-10-22"},{"lineNumber":22,"author":{"gitId":"pratham31012002"},"content":"    public ExportCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-22"},{"lineNumber":23,"author":{"gitId":"pratham31012002"},"content":"        if (args.trim().length() \u003d\u003d 0) {","lastModifiedDate":"2022-10-24"},{"lineNumber":24,"author":{"gitId":"pratham31012002"},"content":"            return new ExportCommand();","lastModifiedDate":"2022-10-24"},{"lineNumber":25,"author":{"gitId":"pratham31012002"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":26,"author":{"gitId":"pratham31012002"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, CliSyntax.getPrefixes());","lastModifiedDate":"2022-10-22"},{"lineNumber":27,"author":{"gitId":"pratham31012002"},"content":"        if (!arePrefixesPresentAndUnique(argMultimap, PREFIX_PATH)","lastModifiedDate":"2022-10-22"},{"lineNumber":28,"author":{"gitId":"pratham31012002"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-10-22"},{"lineNumber":29,"author":{"gitId":"pratham31012002"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ExportCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-22"},{"lineNumber":30,"author":{"gitId":"pratham31012002"},"content":"        }","lastModifiedDate":"2022-10-22"},{"lineNumber":31,"author":{"gitId":"pratham31012002"},"content":"        String filePath \u003d argMultimap.getValue(PREFIX_PATH).get().trim();","lastModifiedDate":"2022-10-22"},{"lineNumber":32,"author":{"gitId":"pratham31012002"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2022-10-26"},{"lineNumber":33,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":34,"author":{"gitId":"pratham31012002"},"content":"        if (filePath.equals(\"\") || file.getName().trim().equals(\"\") || file.getName().trim().equals(\".csv\")) {","lastModifiedDate":"2022-10-26"},{"lineNumber":35,"author":{"gitId":"pratham31012002"},"content":"            throw new ParseException(\"File name cannot be empty!\");","lastModifiedDate":"2022-10-26"},{"lineNumber":36,"author":{"gitId":"pratham31012002"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":37,"author":{"gitId":"pratham31012002"},"content":"        if (file.getName().trim().startsWith(\".\")) {","lastModifiedDate":"2022-10-26"},{"lineNumber":38,"author":{"gitId":"pratham31012002"},"content":"            throw new ParseException(\"File name cannot begin with period(.)!\");","lastModifiedDate":"2022-10-26"},{"lineNumber":39,"author":{"gitId":"pratham31012002"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":40,"author":{"gitId":"pratham31012002"},"content":"        ParserUtil.FileType fileType \u003d ParserUtil.getFileType(argMultimap.getValue(PREFIX_PATH).get().trim());","lastModifiedDate":"2022-10-22"},{"lineNumber":41,"author":{"gitId":"pratham31012002"},"content":"        return new ExportCommand(filePath, fileType);","lastModifiedDate":"2022-10-22"},{"lineNumber":42,"author":{"gitId":"pratham31012002"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":43,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":44,"author":{"gitId":"pratham31012002"},"content":"    /**","lastModifiedDate":"2022-10-22"},{"lineNumber":45,"author":{"gitId":"pratham31012002"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} vslues in the given","lastModifiedDate":"2022-10-22"},{"lineNumber":46,"author":{"gitId":"pratham31012002"},"content":"     * {@code ArgumentMultimap} and all prefixes occur exactly once.","lastModifiedDate":"2022-10-22"},{"lineNumber":47,"author":{"gitId":"pratham31012002"},"content":"     */","lastModifiedDate":"2022-10-22"},{"lineNumber":48,"author":{"gitId":"pratham31012002"},"content":"    private static boolean arePrefixesPresentAndUnique(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-10-22"},{"lineNumber":49,"author":{"gitId":"pratham31012002"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent()","lastModifiedDate":"2022-10-22"},{"lineNumber":50,"author":{"gitId":"pratham31012002"},"content":"                \u0026\u0026 argumentMultimap.getAllValues(prefix).size() \u003d\u003d 1);","lastModifiedDate":"2022-10-22"},{"lineNumber":51,"author":{"gitId":"pratham31012002"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":52,"author":{"gitId":"pratham31012002"},"content":"}","lastModifiedDate":"2022-10-22"}],"authorContributionMap":{"pratham31012002":52}},{"path":"src/main/java/seedu/clinkedin/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.logic.parser;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.parser.CliSyntax.PREFIX_LINK;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.parser.CliSyntax.PREFIX_NOTE;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"ytingtan"},"content":"import static seedu.clinkedin.logic.parser.CliSyntax.PREFIX_RATING;","lastModifiedDate":"2022-10-17"},{"lineNumber":11,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"emptygx"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"emptygx"},"content":"import java.util.List;","lastModifiedDate":"2022-10-14"},{"lineNumber":16,"author":{"gitId":"emptygx"},"content":"import java.util.Map;","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"emptygx"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"emptygx"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.logic.commands.FindCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.link.Link;","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.Address;","lastModifiedDate":"2022-10-15"},{"lineNumber":24,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.DetailsContainKeywordsPredicate;","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.Email;","lastModifiedDate":"2022-10-15"},{"lineNumber":26,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.Name;","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.Note;","lastModifiedDate":"2022-10-15"},{"lineNumber":28,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.Phone;","lastModifiedDate":"2022-10-15"},{"lineNumber":29,"author":{"gitId":"ytingtan"},"content":"import seedu.clinkedin.model.person.Rating;","lastModifiedDate":"2022-10-17"},{"lineNumber":30,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.Status;","lastModifiedDate":"2022-10-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"emptygx"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"emptygx"},"content":"                ArgumentTokenizer.tokenize(args, CliSyntax.getPrefixes());","lastModifiedDate":"2022-10-14"},{"lineNumber":45,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"emptygx"},"content":"        if (arePrefixesPresent(argMultimap, CliSyntax.getPrefixes()) \u0026\u0026 argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-10-14"},{"lineNumber":47,"author":{"gitId":"emptygx"},"content":"            Set\u003cName\u003e nameList \u003d ParserUtil.parseNames(argMultimap.getAllValues(PREFIX_NAME));","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"emptygx"},"content":"            Set\u003cPhone\u003e phoneList \u003d ParserUtil.parsePhones(argMultimap.getAllValues(PREFIX_PHONE));","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"emptygx"},"content":"            Set\u003cEmail\u003e emailList \u003d ParserUtil.parseEmails(argMultimap.getAllValues(PREFIX_EMAIL));","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"emptygx"},"content":"            Set\u003cAddress\u003e addressList \u003d ParserUtil.parseAddresses(argMultimap.getAllValues(PREFIX_ADDRESS));","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"emptygx"},"content":"            Set\u003cStatus\u003e statusList \u003d ParserUtil.parseStatuses(argMultimap.getAllValues(PREFIX_STATUS));","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"emptygx"},"content":"            Set\u003cNote\u003e noteList \u003d ParserUtil.parseNotes(argMultimap.getAllValues(PREFIX_NOTE));","lastModifiedDate":"2022-10-13"},{"lineNumber":53,"author":{"gitId":"emptygx"},"content":"            Set\u003cRating\u003e ratingList \u003d ParserUtil.parseRatings(argMultimap.getAllValues(PREFIX_RATING));","lastModifiedDate":"2022-10-27"},{"lineNumber":54,"author":{"gitId":"emptygx"},"content":"            Set\u003cLink\u003e linkList \u003d ParserUtil.parseLinks(argMultimap.getAllValues(PREFIX_LINK));","lastModifiedDate":"2022-10-27"},{"lineNumber":55,"author":{"gitId":"emptygx"},"content":"            Map\u003cPrefix, List\u003cString\u003e\u003e prefToStrings \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-10-14"},{"lineNumber":56,"author":{"gitId":"emptygx"},"content":"            CliSyntax.getPrefixTags().stream().forEach(pref -\u003e prefToStrings.put(pref, argMultimap.getAllValues(pref)));","lastModifiedDate":"2022-10-14"},{"lineNumber":57,"author":{"gitId":"emptygx"},"content":"            return new FindCommand(new DetailsContainKeywordsPredicate(nameList,","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"emptygx"},"content":"                    phoneList, emailList, addressList, statusList, noteList, ratingList, linkList, prefToStrings));","lastModifiedDate":"2022-10-27"},{"lineNumber":59,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":60,"author":{"gitId":"emptygx"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-01-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"ytingtan"},"content":"        String[] detailsKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2022-10-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"ytingtan"},"content":"        return new FindCommand(new DetailsContainKeywordsPredicate(Arrays.asList(detailsKeywords)));","lastModifiedDate":"2022-10-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"emptygx"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"emptygx"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"emptygx"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"emptygx"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"emptygx"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"emptygx"},"content":"        return Stream.of(prefixes).anyMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"emptygx"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"ytingtan":4,"emptygx":51,"-":26}},{"path":"src/main/java/seedu/clinkedin/logic/parser/HelpCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"josephaedan"},"content":"package seedu.clinkedin.logic.parser;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":3,"author":{"gitId":"josephaedan"},"content":"import static seedu.clinkedin.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-26"},{"lineNumber":4,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"josephaedan"},"content":"import java.util.Map;","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"josephaedan"},"content":"import seedu.clinkedin.logic.commands.HelpCommand;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"josephaedan"},"content":"import seedu.clinkedin.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"josephaedan"},"content":"/**","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"josephaedan"},"content":" * Parses input arguments and creates a new HelpCommand object","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"josephaedan"},"content":" */","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"josephaedan"},"content":"public class HelpCommandParser implements Parser\u003cHelpCommand\u003e {","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"josephaedan"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"josephaedan"},"content":"     * Parses the given {@code String} of arguments in the context of the HelpCommand","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"josephaedan"},"content":"     * and returns a HelpCommand object for execution. If the user input is empty, the","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"josephaedan"},"content":"     * help message will be the general help message. If the user input is not empty,","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"josephaedan"},"content":"     * the help message will be the help message of the command that the user inputs.","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"josephaedan"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"josephaedan"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"josephaedan"},"content":"    public HelpCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"josephaedan"},"content":"        // If no arguments are provided, return the default help command","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"josephaedan"},"content":"        if (args.trim().length() \u003d\u003d 0) {","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"josephaedan"},"content":"            return new HelpCommand();","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"josephaedan"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"josephaedan"},"content":"        try {","lastModifiedDate":"2022-10-26"},{"lineNumber":28,"author":{"gitId":"josephaedan"},"content":"            // If arguments are provided, parse the arguments and return the help command","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"josephaedan"},"content":"            // associated with the command specified","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"josephaedan"},"content":"            Map\u003cString, String\u003e allCommandMessages \u003d CliSyntax.getAllCommandMessages();","lastModifiedDate":"2022-10-26"},{"lineNumber":31,"author":{"gitId":"josephaedan"},"content":"            if (allCommandMessages.containsKey(args.trim())) {","lastModifiedDate":"2022-10-26"},{"lineNumber":32,"author":{"gitId":"josephaedan"},"content":"                return new HelpCommand(allCommandMessages.get(args.trim()));","lastModifiedDate":"2022-10-26"},{"lineNumber":33,"author":{"gitId":"josephaedan"},"content":"            } else {","lastModifiedDate":"2022-10-26"},{"lineNumber":34,"author":{"gitId":"josephaedan"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-26"},{"lineNumber":35,"author":{"gitId":"josephaedan"},"content":"            }","lastModifiedDate":"2022-10-26"},{"lineNumber":36,"author":{"gitId":"josephaedan"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-10-26"},{"lineNumber":37,"author":{"gitId":"josephaedan"},"content":"            // If the argument provided is invalid, throw a parse exception to alert the","lastModifiedDate":"2022-10-26"},{"lineNumber":38,"author":{"gitId":"josephaedan"},"content":"            // user that they have entered an invalid command","lastModifiedDate":"2022-10-26"},{"lineNumber":39,"author":{"gitId":"josephaedan"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-26"},{"lineNumber":40,"author":{"gitId":"josephaedan"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":41,"author":{"gitId":"josephaedan"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":42,"author":{"gitId":"josephaedan"},"content":"}","lastModifiedDate":"2022-10-26"}],"authorContributionMap":{"josephaedan":42}},{"path":"src/main/java/seedu/clinkedin/logic/parser/ImportCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pratham31012002"},"content":"package seedu.clinkedin.logic.parser;","lastModifiedDate":"2022-10-22"},{"lineNumber":2,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":3,"author":{"gitId":"pratham31012002"},"content":"import static seedu.clinkedin.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-22"},{"lineNumber":4,"author":{"gitId":"pratham31012002"},"content":"import static seedu.clinkedin.logic.parser.CliSyntax.PREFIX_PATH;","lastModifiedDate":"2022-10-22"},{"lineNumber":5,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":6,"author":{"gitId":"pratham31012002"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-10-22"},{"lineNumber":7,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":8,"author":{"gitId":"pratham31012002"},"content":"import seedu.clinkedin.logic.commands.ImportCommand;","lastModifiedDate":"2022-10-22"},{"lineNumber":9,"author":{"gitId":"pratham31012002"},"content":"import seedu.clinkedin.logic.parser.exceptions.InvalidExtensionException;","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"pratham31012002"},"content":"import seedu.clinkedin.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-22"},{"lineNumber":11,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":12,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":13,"author":{"gitId":"pratham31012002"},"content":"/**","lastModifiedDate":"2022-10-22"},{"lineNumber":14,"author":{"gitId":"pratham31012002"},"content":" * Parses input arguments and creates a new ImportCommand object.","lastModifiedDate":"2022-10-22"},{"lineNumber":15,"author":{"gitId":"pratham31012002"},"content":" */","lastModifiedDate":"2022-10-22"},{"lineNumber":16,"author":{"gitId":"pratham31012002"},"content":"public class ImportCommandParser implements Parser\u003cImportCommand\u003e {","lastModifiedDate":"2022-10-22"},{"lineNumber":17,"author":{"gitId":"pratham31012002"},"content":"    /**","lastModifiedDate":"2022-10-22"},{"lineNumber":18,"author":{"gitId":"pratham31012002"},"content":"     * Parses the given {@code String} of arguments in the context of ImportCommand and returns an ImportCommand object","lastModifiedDate":"2022-10-22"},{"lineNumber":19,"author":{"gitId":"pratham31012002"},"content":"     * for execution.","lastModifiedDate":"2022-10-22"},{"lineNumber":20,"author":{"gitId":"pratham31012002"},"content":"     * @throws ParseException If the user input does not conform the expected format.","lastModifiedDate":"2022-10-22"},{"lineNumber":21,"author":{"gitId":"pratham31012002"},"content":"     */","lastModifiedDate":"2022-10-22"},{"lineNumber":22,"author":{"gitId":"pratham31012002"},"content":"    public ImportCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-22"},{"lineNumber":23,"author":{"gitId":"pratham31012002"},"content":"        if (args.trim().length() \u003d\u003d 0) {","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"pratham31012002"},"content":"            return new ImportCommand();","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"pratham31012002"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"pratham31012002"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, CliSyntax.getPrefixes());","lastModifiedDate":"2022-10-22"},{"lineNumber":27,"author":{"gitId":"pratham31012002"},"content":"        if (!arePrefixesPresentAndUnique(argMultimap, PREFIX_PATH)","lastModifiedDate":"2022-10-22"},{"lineNumber":28,"author":{"gitId":"pratham31012002"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-10-22"},{"lineNumber":29,"author":{"gitId":"pratham31012002"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ImportCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-22"},{"lineNumber":30,"author":{"gitId":"pratham31012002"},"content":"        }","lastModifiedDate":"2022-10-22"},{"lineNumber":31,"author":{"gitId":"pratham31012002"},"content":"        String filePath \u003d argMultimap.getValue(PREFIX_PATH).get().trim();","lastModifiedDate":"2022-10-22"},{"lineNumber":32,"author":{"gitId":"pratham31012002"},"content":"        ParserUtil.FileType fileType \u003d null;","lastModifiedDate":"2022-10-26"},{"lineNumber":33,"author":{"gitId":"pratham31012002"},"content":"        try {","lastModifiedDate":"2022-10-26"},{"lineNumber":34,"author":{"gitId":"pratham31012002"},"content":"            fileType \u003d ParserUtil.getFileType(argMultimap.getValue(PREFIX_PATH).get().trim());","lastModifiedDate":"2022-10-26"},{"lineNumber":35,"author":{"gitId":"pratham31012002"},"content":"        } catch (InvalidExtensionException iee) {","lastModifiedDate":"2022-10-26"},{"lineNumber":36,"author":{"gitId":"pratham31012002"},"content":"            throw new ParseException(iee.getMessage());","lastModifiedDate":"2022-10-26"},{"lineNumber":37,"author":{"gitId":"pratham31012002"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":38,"author":{"gitId":"pratham31012002"},"content":"        return new ImportCommand(filePath, fileType);","lastModifiedDate":"2022-10-22"},{"lineNumber":39,"author":{"gitId":"pratham31012002"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":40,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":41,"author":{"gitId":"pratham31012002"},"content":"    /**","lastModifiedDate":"2022-10-22"},{"lineNumber":42,"author":{"gitId":"pratham31012002"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} vslues in the given","lastModifiedDate":"2022-10-22"},{"lineNumber":43,"author":{"gitId":"pratham31012002"},"content":"     * {@code ArgumentMultimap} and all prefixes occur exactly once.","lastModifiedDate":"2022-10-22"},{"lineNumber":44,"author":{"gitId":"pratham31012002"},"content":"     */","lastModifiedDate":"2022-10-22"},{"lineNumber":45,"author":{"gitId":"pratham31012002"},"content":"    private static boolean arePrefixesPresentAndUnique(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-10-22"},{"lineNumber":46,"author":{"gitId":"pratham31012002"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent()","lastModifiedDate":"2022-10-22"},{"lineNumber":47,"author":{"gitId":"pratham31012002"},"content":"                \u0026\u0026 argumentMultimap.getAllValues(prefix).size() \u003d\u003d 1);","lastModifiedDate":"2022-10-22"},{"lineNumber":48,"author":{"gitId":"pratham31012002"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":49,"author":{"gitId":"pratham31012002"},"content":"}","lastModifiedDate":"2022-10-22"}],"authorContributionMap":{"pratham31012002":49}},{"path":"src/main/java/seedu/clinkedin/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.logic.parser;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.logic.commands.Command;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"emptygx":3,"-":13}},{"path":"src/main/java/seedu/clinkedin/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.logic.parser;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"agarwal-anjali"},"content":"import java.net.MalformedURLException;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"agarwal-anjali"},"content":"import java.net.URL;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"agarwal-anjali"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-28"},{"lineNumber":9,"author":{"gitId":"agarwal-anjali"},"content":"import java.util.Collection;","lastModifiedDate":"2022-10-28"},{"lineNumber":10,"author":{"gitId":"agarwal-anjali"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-28"},{"lineNumber":11,"author":{"gitId":"agarwal-anjali"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-10-28"},{"lineNumber":12,"author":{"gitId":"agarwal-anjali"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-28"},{"lineNumber":13,"author":{"gitId":"agarwal-anjali"},"content":"import java.util.List;","lastModifiedDate":"2022-10-28"},{"lineNumber":14,"author":{"gitId":"agarwal-anjali"},"content":"import java.util.Map;","lastModifiedDate":"2022-10-28"},{"lineNumber":15,"author":{"gitId":"agarwal-anjali"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-28"},{"lineNumber":16,"author":{"gitId":"agarwal-anjali"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.commons.core.index.Index;","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.commons.util.StringUtil;","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"pratham31012002"},"content":"import seedu.clinkedin.logic.parser.exceptions.InvalidExtensionException;","lastModifiedDate":"2022-10-22"},{"lineNumber":21,"author":{"gitId":"pratham31012002"},"content":"import seedu.clinkedin.logic.parser.exceptions.InvalidPersonException;","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"agarwal-anjali"},"content":"import seedu.clinkedin.model.link.Link;","lastModifiedDate":"2022-10-23"},{"lineNumber":24,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.Address;","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.Email;","lastModifiedDate":"2022-10-15"},{"lineNumber":26,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.Name;","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.Note;","lastModifiedDate":"2022-10-15"},{"lineNumber":28,"author":{"gitId":"pratham31012002"},"content":"import seedu.clinkedin.model.person.Person;","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.Phone;","lastModifiedDate":"2022-10-15"},{"lineNumber":30,"author":{"gitId":"ytingtan"},"content":"import seedu.clinkedin.model.person.Rating;","lastModifiedDate":"2022-10-17"},{"lineNumber":31,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.Status;","lastModifiedDate":"2022-10-15"},{"lineNumber":32,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.UniqueTagTypeMap;","lastModifiedDate":"2022-10-15"},{"lineNumber":33,"author":{"gitId":"pratham31012002"},"content":"import seedu.clinkedin.model.person.exceptions.TagTypeNotFoundException;","lastModifiedDate":"2022-10-28"},{"lineNumber":34,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.tag.Tag;","lastModifiedDate":"2022-10-15"},{"lineNumber":35,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.tag.TagType;","lastModifiedDate":"2022-10-15"},{"lineNumber":36,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.tag.UniqueTagList;","lastModifiedDate":"2022-10-15"},{"lineNumber":37,"author":{"gitId":"pratham31012002"},"content":"import seedu.clinkedin.model.tag.exceptions.DuplicateTagException;","lastModifiedDate":"2022-10-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"pratham31012002"},"content":"    /**","lastModifiedDate":"2022-10-22"},{"lineNumber":47,"author":{"gitId":"pratham31012002"},"content":"     * Types of file extensions supported for export and/or import.","lastModifiedDate":"2022-10-22"},{"lineNumber":48,"author":{"gitId":"pratham31012002"},"content":"     */","lastModifiedDate":"2022-10-22"},{"lineNumber":49,"author":{"gitId":"pratham31012002"},"content":"    public enum FileType {","lastModifiedDate":"2022-10-22"},{"lineNumber":50,"author":{"gitId":"pratham31012002"},"content":"        CSV,","lastModifiedDate":"2022-10-22"},{"lineNumber":51,"author":{"gitId":"pratham31012002"},"content":"        JSON","lastModifiedDate":"2022-10-22"},{"lineNumber":52,"author":{"gitId":"pratham31012002"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":53,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"pratham31012002"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2022-10-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"emptygx"},"content":"     * @throws ParseException if the given {@code clinkedin} is invalid.","lastModifiedDate":"2022-10-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"pratham31012002"},"content":"    public static UniqueTagList parseTagList(List\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2022-10-11"},{"lineNumber":134,"author":{"gitId":"pratham31012002"},"content":"        requireNonNull(tags);","lastModifiedDate":"2022-10-10"},{"lineNumber":135,"author":{"gitId":"pratham31012002"},"content":"        UniqueTagList tagList \u003d new UniqueTagList();","lastModifiedDate":"2022-10-10"},{"lineNumber":136,"author":{"gitId":"pratham31012002"},"content":"        for (String t : tags) {","lastModifiedDate":"2022-10-10"},{"lineNumber":137,"author":{"gitId":"pratham31012002"},"content":"            if (!Tag.isValidTagName(t.trim())) {","lastModifiedDate":"2022-10-10"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"pratham31012002"},"content":"            tagList.add(new Tag(t.trim()));","lastModifiedDate":"2022-10-10"},{"lineNumber":141,"author":{"gitId":"pratham31012002"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":142,"author":{"gitId":"pratham31012002"},"content":"        return tagList;","lastModifiedDate":"2022-10-10"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"emptygx"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":146,"author":{"gitId":"emptygx"},"content":"     * Parses a {@code String status} into a {@code Status}.","lastModifiedDate":"2022-10-10"},{"lineNumber":147,"author":{"gitId":"emptygx"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-10"},{"lineNumber":148,"author":{"gitId":"emptygx"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":149,"author":{"gitId":"emptygx"},"content":"     * @throws ParseException if the given {@code status} is invalid.","lastModifiedDate":"2022-10-10"},{"lineNumber":150,"author":{"gitId":"emptygx"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":151,"author":{"gitId":"emptygx"},"content":"    public static Status parseStatus(String status) throws ParseException {","lastModifiedDate":"2022-10-10"},{"lineNumber":152,"author":{"gitId":"emptygx"},"content":"        requireNonNull(status);","lastModifiedDate":"2022-10-10"},{"lineNumber":153,"author":{"gitId":"emptygx"},"content":"        String trimmedStatus \u003d status.trim();","lastModifiedDate":"2022-10-10"},{"lineNumber":154,"author":{"gitId":"emptygx"},"content":"        if (!Status.isValidStatus(trimmedStatus)) {","lastModifiedDate":"2022-10-10"},{"lineNumber":155,"author":{"gitId":"emptygx"},"content":"            throw new ParseException(Status.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-10"},{"lineNumber":156,"author":{"gitId":"emptygx"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":157,"author":{"gitId":"emptygx"},"content":"        return new Status(trimmedStatus);","lastModifiedDate":"2022-10-10"},{"lineNumber":158,"author":{"gitId":"emptygx"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":159,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":160,"author":{"gitId":"josephaedan"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":161,"author":{"gitId":"josephaedan"},"content":"     * Parses a {@code String note} into a {@code Note}.","lastModifiedDate":"2022-10-12"},{"lineNumber":162,"author":{"gitId":"josephaedan"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-12"},{"lineNumber":163,"author":{"gitId":"josephaedan"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":164,"author":{"gitId":"josephaedan"},"content":"     * @throws ParseException if the given {@code note} is invalid.","lastModifiedDate":"2022-10-12"},{"lineNumber":165,"author":{"gitId":"josephaedan"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":166,"author":{"gitId":"josephaedan"},"content":"    public static Note parseNote(String note) throws ParseException {","lastModifiedDate":"2022-10-12"},{"lineNumber":167,"author":{"gitId":"josephaedan"},"content":"        requireNonNull(note);","lastModifiedDate":"2022-10-12"},{"lineNumber":168,"author":{"gitId":"josephaedan"},"content":"        return new Note(note.trim());","lastModifiedDate":"2022-10-12"},{"lineNumber":169,"author":{"gitId":"josephaedan"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":170,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":171,"author":{"gitId":"ytingtan"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":172,"author":{"gitId":"ytingtan"},"content":"     * Parses a {@code String rating} into a {@code Rating}.","lastModifiedDate":"2022-10-17"},{"lineNumber":173,"author":{"gitId":"ytingtan"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-17"},{"lineNumber":174,"author":{"gitId":"ytingtan"},"content":"     *","lastModifiedDate":"2022-10-17"},{"lineNumber":175,"author":{"gitId":"ytingtan"},"content":"     * @throws ParseException if the given {@code rating} is invalid.","lastModifiedDate":"2022-10-17"},{"lineNumber":176,"author":{"gitId":"ytingtan"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":177,"author":{"gitId":"ytingtan"},"content":"    public static Rating parseRating(String rating) throws ParseException {","lastModifiedDate":"2022-10-17"},{"lineNumber":178,"author":{"gitId":"ytingtan"},"content":"        requireNonNull(rating);","lastModifiedDate":"2022-10-17"},{"lineNumber":179,"author":{"gitId":"ytingtan"},"content":"        String trimmedRating \u003d rating.trim();","lastModifiedDate":"2022-10-17"},{"lineNumber":180,"author":{"gitId":"ytingtan"},"content":"        if (!Rating.isValidRatingStr(trimmedRating)) {","lastModifiedDate":"2022-10-17"},{"lineNumber":181,"author":{"gitId":"ytingtan"},"content":"            throw new ParseException(Rating.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-17"},{"lineNumber":182,"author":{"gitId":"ytingtan"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":183,"author":{"gitId":"ytingtan"},"content":"        return new Rating(trimmedRating);","lastModifiedDate":"2022-10-17"},{"lineNumber":184,"author":{"gitId":"ytingtan"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":185,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":186,"author":{"gitId":"agarwal-anjali"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":187,"author":{"gitId":"agarwal-anjali"},"content":"     * Parses a {@code String link} into a {@code Link}.","lastModifiedDate":"2022-10-23"},{"lineNumber":188,"author":{"gitId":"agarwal-anjali"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-23"},{"lineNumber":189,"author":{"gitId":"agarwal-anjali"},"content":"     *","lastModifiedDate":"2022-10-23"},{"lineNumber":190,"author":{"gitId":"agarwal-anjali"},"content":"     * @throws ParseException if the given {@code link} is invalid.","lastModifiedDate":"2022-10-23"},{"lineNumber":191,"author":{"gitId":"agarwal-anjali"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":192,"author":{"gitId":"agarwal-anjali"},"content":"    public static Link parseLink(String link) throws ParseException {","lastModifiedDate":"2022-10-23"},{"lineNumber":193,"author":{"gitId":"agarwal-anjali"},"content":"        requireNonNull(link);","lastModifiedDate":"2022-10-23"},{"lineNumber":194,"author":{"gitId":"agarwal-anjali"},"content":"        String trimmedLink \u003d link.trim();","lastModifiedDate":"2022-10-23"},{"lineNumber":195,"author":{"gitId":"agarwal-anjali"},"content":"        try {","lastModifiedDate":"2022-10-27"},{"lineNumber":196,"author":{"gitId":"agarwal-anjali"},"content":"            URL url \u003d new URL(trimmedLink);","lastModifiedDate":"2022-10-27"},{"lineNumber":197,"author":{"gitId":"agarwal-anjali"},"content":"            return new Link(url);","lastModifiedDate":"2022-10-27"},{"lineNumber":198,"author":{"gitId":"agarwal-anjali"},"content":"        } catch (MalformedURLException m) {","lastModifiedDate":"2022-10-27"},{"lineNumber":199,"author":{"gitId":"agarwal-anjali"},"content":"            throw new ParseException(m.getMessage());","lastModifiedDate":"2022-10-27"},{"lineNumber":200,"author":{"gitId":"agarwal-anjali"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":201,"author":{"gitId":"agarwal-anjali"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":202,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":203,"author":{"gitId":"agarwal-anjali"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":204,"author":{"gitId":"agarwal-anjali"},"content":"     * Parses {@code Collection\u003cString\u003e links} into a {@code Set\u003cLink\u003e}.","lastModifiedDate":"2022-10-23"},{"lineNumber":205,"author":{"gitId":"agarwal-anjali"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":206,"author":{"gitId":"agarwal-anjali"},"content":"    public static Set\u003cLink\u003e parseLinks(Collection\u003cString\u003e links) throws ParseException {","lastModifiedDate":"2022-10-23"},{"lineNumber":207,"author":{"gitId":"agarwal-anjali"},"content":"        requireNonNull(links);","lastModifiedDate":"2022-10-23"},{"lineNumber":208,"author":{"gitId":"agarwal-anjali"},"content":"        final Set\u003cLink\u003e linkSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-23"},{"lineNumber":209,"author":{"gitId":"agarwal-anjali"},"content":"        for (String tagName : links) {","lastModifiedDate":"2022-10-23"},{"lineNumber":210,"author":{"gitId":"agarwal-anjali"},"content":"            linkSet.add(parseLink(tagName));","lastModifiedDate":"2022-10-23"},{"lineNumber":211,"author":{"gitId":"agarwal-anjali"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":212,"author":{"gitId":"agarwal-anjali"},"content":"        return linkSet;","lastModifiedDate":"2022-10-23"},{"lineNumber":213,"author":{"gitId":"ytingtan"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":214,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":215,"author":{"gitId":"agarwal-anjali"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":216,"author":{"gitId":"agarwal-anjali"},"content":"     * Parses {@code Collection\u003cString\u003e links} into a {@code Set\u003cLink\u003e} if {@code links} is non-empty.","lastModifiedDate":"2022-10-28"},{"lineNumber":217,"author":{"gitId":"agarwal-anjali"},"content":"     * If {@code links} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2022-10-28"},{"lineNumber":218,"author":{"gitId":"agarwal-anjali"},"content":"     * {@code Set\u003cLink\u003e} containing zero link.","lastModifiedDate":"2022-10-28"},{"lineNumber":219,"author":{"gitId":"agarwal-anjali"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":220,"author":{"gitId":"agarwal-anjali"},"content":"    public static Optional\u003cSet\u003cLink\u003e\u003e parseLinksForEdit(Collection\u003cString\u003e links) throws ParseException {","lastModifiedDate":"2022-10-28"},{"lineNumber":221,"author":{"gitId":"agarwal-anjali"},"content":"        assert links !\u003d null;","lastModifiedDate":"2022-10-28"},{"lineNumber":222,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":223,"author":{"gitId":"agarwal-anjali"},"content":"        if (links.isEmpty()) {","lastModifiedDate":"2022-10-28"},{"lineNumber":224,"author":{"gitId":"agarwal-anjali"},"content":"            return Optional.empty();","lastModifiedDate":"2022-10-28"},{"lineNumber":225,"author":{"gitId":"agarwal-anjali"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":226,"author":{"gitId":"agarwal-anjali"},"content":"        Collection\u003cString\u003e linkSet \u003d links.size() \u003d\u003d 1 \u0026\u0026 links.contains(\"\") ? Collections.emptySet() : links;","lastModifiedDate":"2022-10-28"},{"lineNumber":227,"author":{"gitId":"agarwal-anjali"},"content":"        return Optional.of(ParserUtil.parseLinks(linkSet));","lastModifiedDate":"2022-10-28"},{"lineNumber":228,"author":{"gitId":"agarwal-anjali"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":229,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":230,"author":{"gitId":"emptygx"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":231,"author":{"gitId":"emptygx"},"content":"     * Parses {@code Collection\u003cString\u003e names} into a {@code Set\u003cName\u003e}.","lastModifiedDate":"2022-10-10"},{"lineNumber":232,"author":{"gitId":"emptygx"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":233,"author":{"gitId":"emptygx"},"content":"    public static Set\u003cName\u003e parseNames(Collection\u003cString\u003e names) throws ParseException {","lastModifiedDate":"2022-10-10"},{"lineNumber":234,"author":{"gitId":"emptygx"},"content":"        requireNonNull(names);","lastModifiedDate":"2022-10-10"},{"lineNumber":235,"author":{"gitId":"emptygx"},"content":"        final Set\u003cName\u003e nameSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-10"},{"lineNumber":236,"author":{"gitId":"emptygx"},"content":"        for (String nameName : names) {","lastModifiedDate":"2022-10-10"},{"lineNumber":237,"author":{"gitId":"emptygx"},"content":"            nameSet.add(parseName(nameName));","lastModifiedDate":"2022-10-10"},{"lineNumber":238,"author":{"gitId":"emptygx"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":239,"author":{"gitId":"emptygx"},"content":"        return nameSet;","lastModifiedDate":"2022-10-10"},{"lineNumber":240,"author":{"gitId":"emptygx"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":241,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":242,"author":{"gitId":"emptygx"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":243,"author":{"gitId":"emptygx"},"content":"     * Parses {@code Collection\u003cString\u003e phones} into a {@code Set\u003cPhone\u003e}.","lastModifiedDate":"2022-10-10"},{"lineNumber":244,"author":{"gitId":"emptygx"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":245,"author":{"gitId":"emptygx"},"content":"    public static Set\u003cPhone\u003e parsePhones(Collection\u003cString\u003e phones) throws ParseException {","lastModifiedDate":"2022-10-10"},{"lineNumber":246,"author":{"gitId":"emptygx"},"content":"        requireNonNull(phones);","lastModifiedDate":"2022-10-10"},{"lineNumber":247,"author":{"gitId":"emptygx"},"content":"        final Set\u003cPhone\u003e phoneSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-10"},{"lineNumber":248,"author":{"gitId":"emptygx"},"content":"        for (String phoneName : phones) {","lastModifiedDate":"2022-10-10"},{"lineNumber":249,"author":{"gitId":"emptygx"},"content":"            phoneSet.add(parsePhone(phoneName));","lastModifiedDate":"2022-10-10"},{"lineNumber":250,"author":{"gitId":"emptygx"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":251,"author":{"gitId":"emptygx"},"content":"        return phoneSet;","lastModifiedDate":"2022-10-10"},{"lineNumber":252,"author":{"gitId":"emptygx"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":253,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":254,"author":{"gitId":"emptygx"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":255,"author":{"gitId":"emptygx"},"content":"     * Parses {@code Collection\u003cString\u003e emails} into a {@code Set\u003cEmail\u003e}.","lastModifiedDate":"2022-10-10"},{"lineNumber":256,"author":{"gitId":"emptygx"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":257,"author":{"gitId":"emptygx"},"content":"    public static Set\u003cEmail\u003e parseEmails(Collection\u003cString\u003e emails) throws ParseException {","lastModifiedDate":"2022-10-10"},{"lineNumber":258,"author":{"gitId":"emptygx"},"content":"        requireNonNull(emails);","lastModifiedDate":"2022-10-10"},{"lineNumber":259,"author":{"gitId":"emptygx"},"content":"        final Set\u003cEmail\u003e emailSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-10"},{"lineNumber":260,"author":{"gitId":"emptygx"},"content":"        for (String emailName : emails) {","lastModifiedDate":"2022-10-10"},{"lineNumber":261,"author":{"gitId":"emptygx"},"content":"            emailSet.add(parseEmail(emailName));","lastModifiedDate":"2022-10-10"},{"lineNumber":262,"author":{"gitId":"emptygx"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":263,"author":{"gitId":"emptygx"},"content":"        return emailSet;","lastModifiedDate":"2022-10-10"},{"lineNumber":264,"author":{"gitId":"emptygx"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":265,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":266,"author":{"gitId":"emptygx"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":267,"author":{"gitId":"emptygx"},"content":"     * Parses {@code Collection\u003cString\u003e addresss} into a {@code Set\u003cAddress\u003e}.","lastModifiedDate":"2022-10-10"},{"lineNumber":268,"author":{"gitId":"emptygx"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":269,"author":{"gitId":"emptygx"},"content":"    public static Set\u003cAddress\u003e parseAddresses(Collection\u003cString\u003e addresses) throws ParseException {","lastModifiedDate":"2022-10-10"},{"lineNumber":270,"author":{"gitId":"emptygx"},"content":"        requireNonNull(addresses);","lastModifiedDate":"2022-10-10"},{"lineNumber":271,"author":{"gitId":"emptygx"},"content":"        final Set\u003cAddress\u003e addressSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-10"},{"lineNumber":272,"author":{"gitId":"emptygx"},"content":"        for (String addressName : addresses) {","lastModifiedDate":"2022-10-10"},{"lineNumber":273,"author":{"gitId":"emptygx"},"content":"            addressSet.add(parseAddress(addressName));","lastModifiedDate":"2022-10-10"},{"lineNumber":274,"author":{"gitId":"emptygx"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":275,"author":{"gitId":"emptygx"},"content":"        return addressSet;","lastModifiedDate":"2022-10-10"},{"lineNumber":276,"author":{"gitId":"emptygx"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":277,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":280,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":281,"author":{"gitId":"pratham31012002"},"content":"    public static UniqueTagTypeMap parseTags(Map\u003cPrefix, List\u003cString\u003e\u003e tags) throws ParseException {","lastModifiedDate":"2022-10-10"},{"lineNumber":282,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":283,"author":{"gitId":"pratham31012002"},"content":"        final UniqueTagTypeMap tagMap \u003d new UniqueTagTypeMap();","lastModifiedDate":"2022-10-10"},{"lineNumber":284,"author":{"gitId":"pratham31012002"},"content":"        Map\u003cTagType, UniqueTagList\u003e tagTypeMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-10-10"},{"lineNumber":285,"author":{"gitId":"pratham31012002"},"content":"        for (Prefix tagName : tags.keySet()) {","lastModifiedDate":"2022-10-10"},{"lineNumber":286,"author":{"gitId":"pratham31012002"},"content":"            if (tags.get(tagName).size() !\u003d 0) {","lastModifiedDate":"2022-10-12"},{"lineNumber":287,"author":{"gitId":"pratham31012002"},"content":"                tagTypeMap.put(UniqueTagTypeMap.getTagType(tagName), parseTagList(tags.get(tagName)));","lastModifiedDate":"2022-10-11"},{"lineNumber":288,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-02-11"},{"lineNumber":289,"author":{"gitId":"pratham31012002"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":290,"author":{"gitId":"pratham31012002"},"content":"        tagMap.setTagTypeMap(tagTypeMap);","lastModifiedDate":"2022-10-12"},{"lineNumber":291,"author":{"gitId":"pratham31012002"},"content":"        return tagMap;","lastModifiedDate":"2022-10-10"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":293,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":294,"author":{"gitId":"pratham31012002"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":295,"author":{"gitId":"pratham31012002"},"content":"     * Parses a {@code String prefix} into a {@code Prefix}.","lastModifiedDate":"2022-10-11"},{"lineNumber":296,"author":{"gitId":"pratham31012002"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-11"},{"lineNumber":297,"author":{"gitId":"pratham31012002"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":298,"author":{"gitId":"pratham31012002"},"content":"     * @throws ParseException if the given {@code prefix} is invalid.","lastModifiedDate":"2022-10-11"},{"lineNumber":299,"author":{"gitId":"pratham31012002"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":300,"author":{"gitId":"pratham31012002"},"content":"    public static Prefix parsePrefix(String prefix) throws ParseException {","lastModifiedDate":"2022-10-11"},{"lineNumber":301,"author":{"gitId":"pratham31012002"},"content":"        requireNonNull(prefix);","lastModifiedDate":"2022-10-11"},{"lineNumber":302,"author":{"gitId":"pratham31012002"},"content":"        String trimmedPrefix \u003d prefix.trim();","lastModifiedDate":"2022-10-11"},{"lineNumber":303,"author":{"gitId":"pratham31012002"},"content":"        if (!Prefix.isValidPrefixName(trimmedPrefix + \"/\")) {","lastModifiedDate":"2022-10-28"},{"lineNumber":304,"author":{"gitId":"pratham31012002"},"content":"            throw new ParseException(Prefix.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-11"},{"lineNumber":305,"author":{"gitId":"pratham31012002"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":306,"author":{"gitId":"pratham31012002"},"content":"        Prefix p;","lastModifiedDate":"2022-10-28"},{"lineNumber":307,"author":{"gitId":"pratham31012002"},"content":"        try {","lastModifiedDate":"2022-10-28"},{"lineNumber":308,"author":{"gitId":"pratham31012002"},"content":"            p \u003d new Prefix(trimmedPrefix + \"/\");","lastModifiedDate":"2022-10-28"},{"lineNumber":309,"author":{"gitId":"pratham31012002"},"content":"        } catch (IllegalArgumentException iae) {","lastModifiedDate":"2022-10-28"},{"lineNumber":310,"author":{"gitId":"pratham31012002"},"content":"            throw new ParseException(iae.getMessage());","lastModifiedDate":"2022-10-28"},{"lineNumber":311,"author":{"gitId":"pratham31012002"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":312,"author":{"gitId":"pratham31012002"},"content":"        return p;","lastModifiedDate":"2022-10-28"},{"lineNumber":313,"author":{"gitId":"pratham31012002"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":314,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":315,"author":{"gitId":"pratham31012002"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":316,"author":{"gitId":"pratham31012002"},"content":"     * Parses a {@code String tagType} into a {@code TagType}.","lastModifiedDate":"2022-10-11"},{"lineNumber":317,"author":{"gitId":"pratham31012002"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-11"},{"lineNumber":318,"author":{"gitId":"pratham31012002"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":319,"author":{"gitId":"pratham31012002"},"content":"     * @throws ParseException if the given {@code tagType} is invalid.","lastModifiedDate":"2022-10-11"},{"lineNumber":320,"author":{"gitId":"pratham31012002"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":321,"author":{"gitId":"pratham31012002"},"content":"    public static TagType parseTagType(String tagType, String prefix) throws ParseException {","lastModifiedDate":"2022-10-11"},{"lineNumber":322,"author":{"gitId":"pratham31012002"},"content":"        requireAllNonNull(tagType, prefix);","lastModifiedDate":"2022-10-12"},{"lineNumber":323,"author":{"gitId":"pratham31012002"},"content":"        String trimmedTagType \u003d tagType.trim();","lastModifiedDate":"2022-10-11"},{"lineNumber":324,"author":{"gitId":"pratham31012002"},"content":"        if (!TagType.isValidTagType(trimmedTagType)) {","lastModifiedDate":"2022-10-11"},{"lineNumber":325,"author":{"gitId":"pratham31012002"},"content":"            throw new ParseException(TagType.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-11"},{"lineNumber":326,"author":{"gitId":"pratham31012002"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":327,"author":{"gitId":"pratham31012002"},"content":"        Prefix pref \u003d parsePrefix(prefix);","lastModifiedDate":"2022-10-11"},{"lineNumber":328,"author":{"gitId":"pratham31012002"},"content":"        return new TagType(trimmedTagType, pref);","lastModifiedDate":"2022-10-11"},{"lineNumber":329,"author":{"gitId":"pratham31012002"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":330,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":331,"author":{"gitId":"pratham31012002"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":332,"author":{"gitId":"pratham31012002"},"content":"     * Parses a {@code String tagType} into a {@code TagType}.","lastModifiedDate":"2022-10-11"},{"lineNumber":333,"author":{"gitId":"pratham31012002"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-11"},{"lineNumber":334,"author":{"gitId":"pratham31012002"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":335,"author":{"gitId":"pratham31012002"},"content":"     * @throws ParseException if the given {@code tagType} is invalid.","lastModifiedDate":"2022-10-11"},{"lineNumber":336,"author":{"gitId":"pratham31012002"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":337,"author":{"gitId":"pratham31012002"},"content":"    public static TagType parseTagType(String tagType, Prefix prefix) throws ParseException {","lastModifiedDate":"2022-10-11"},{"lineNumber":338,"author":{"gitId":"pratham31012002"},"content":"        requireNonNull(tagType);","lastModifiedDate":"2022-10-11"},{"lineNumber":339,"author":{"gitId":"pratham31012002"},"content":"        String trimmedTagType \u003d tagType.trim();","lastModifiedDate":"2022-10-11"},{"lineNumber":340,"author":{"gitId":"pratham31012002"},"content":"        if (!TagType.isValidTagType(trimmedTagType)) {","lastModifiedDate":"2022-10-11"},{"lineNumber":341,"author":{"gitId":"pratham31012002"},"content":"            throw new ParseException(TagType.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-11"},{"lineNumber":342,"author":{"gitId":"pratham31012002"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":343,"author":{"gitId":"pratham31012002"},"content":"        return new TagType(trimmedTagType, prefix);","lastModifiedDate":"2022-10-11"},{"lineNumber":344,"author":{"gitId":"pratham31012002"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":345,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":346,"author":{"gitId":"pratham31012002"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":347,"author":{"gitId":"pratham31012002"},"content":"     * Splits a hyphen.","lastModifiedDate":"2022-10-12"},{"lineNumber":348,"author":{"gitId":"pratham31012002"},"content":"     * @param oldNew Hyphenated String.","lastModifiedDate":"2022-10-12"},{"lineNumber":349,"author":{"gitId":"pratham31012002"},"content":"     * @return Array of Strings consisting of strings preceding and following the hyphen.","lastModifiedDate":"2022-10-12"},{"lineNumber":350,"author":{"gitId":"pratham31012002"},"content":"     * @throws ParseException If argument format incorrect.","lastModifiedDate":"2022-10-12"},{"lineNumber":351,"author":{"gitId":"pratham31012002"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":352,"author":{"gitId":"pratham31012002"},"content":"    public static String[] parseHyphen(String oldNew) throws ParseException {","lastModifiedDate":"2022-10-12"},{"lineNumber":353,"author":{"gitId":"pratham31012002"},"content":"        String[] oldNewPair \u003d oldNew.split(\"-\", 2);","lastModifiedDate":"2022-10-13"},{"lineNumber":354,"author":{"gitId":"pratham31012002"},"content":"        if (oldNewPair.length !\u003d 2) {","lastModifiedDate":"2022-10-12"},{"lineNumber":355,"author":{"gitId":"pratham31012002"},"content":"            throw new ParseException(\"Old and new tag types and tag prefixes must be separated by a hyphen!\");","lastModifiedDate":"2022-10-13"},{"lineNumber":356,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":357,"author":{"gitId":"pratham31012002"},"content":"        oldNewPair[0] \u003d oldNewPair[0].trim();","lastModifiedDate":"2022-10-13"},{"lineNumber":358,"author":{"gitId":"pratham31012002"},"content":"        oldNewPair[1] \u003d oldNewPair[1].trim();","lastModifiedDate":"2022-10-13"},{"lineNumber":359,"author":{"gitId":"pratham31012002"},"content":"        return oldNewPair;","lastModifiedDate":"2022-10-12"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":361,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":362,"author":{"gitId":"ytingtan"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":363,"author":{"gitId":"emptygx"},"content":"     * Parses {@code Collection\u003cString\u003e statuses} into a {@code Set\u003cStatus\u003e}.","lastModifiedDate":"2022-10-13"},{"lineNumber":364,"author":{"gitId":"ytingtan"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":365,"author":{"gitId":"emptygx"},"content":"    public static Set\u003cStatus\u003e parseStatuses(Collection\u003cString\u003e statuses) throws ParseException {","lastModifiedDate":"2022-10-10"},{"lineNumber":366,"author":{"gitId":"emptygx"},"content":"        requireNonNull(statuses);","lastModifiedDate":"2022-10-10"},{"lineNumber":367,"author":{"gitId":"emptygx"},"content":"        final Set\u003cStatus\u003e statusSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-10"},{"lineNumber":368,"author":{"gitId":"emptygx"},"content":"        for (String statusName : statuses) {","lastModifiedDate":"2022-10-10"},{"lineNumber":369,"author":{"gitId":"emptygx"},"content":"            statusSet.add(parseStatus(statusName));","lastModifiedDate":"2022-10-10"},{"lineNumber":370,"author":{"gitId":"ytingtan"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":371,"author":{"gitId":"emptygx"},"content":"        return statusSet;","lastModifiedDate":"2022-10-10"},{"lineNumber":372,"author":{"gitId":"ytingtan"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":373,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":374,"author":{"gitId":"emptygx"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":375,"author":{"gitId":"emptygx"},"content":"     * Parses {@code Collection\u003cString\u003e notes} into a {@code Set\u003cNote\u003e}.","lastModifiedDate":"2022-10-13"},{"lineNumber":376,"author":{"gitId":"emptygx"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":377,"author":{"gitId":"emptygx"},"content":"    public static Set\u003cNote\u003e parseNotes(Collection\u003cString\u003e notes) throws ParseException {","lastModifiedDate":"2022-10-13"},{"lineNumber":378,"author":{"gitId":"emptygx"},"content":"        requireNonNull(notes);","lastModifiedDate":"2022-10-13"},{"lineNumber":379,"author":{"gitId":"emptygx"},"content":"        final Set\u003cNote\u003e noteSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-13"},{"lineNumber":380,"author":{"gitId":"emptygx"},"content":"        for (String noteName : notes) {","lastModifiedDate":"2022-10-13"},{"lineNumber":381,"author":{"gitId":"emptygx"},"content":"            noteSet.add(parseNote(noteName));","lastModifiedDate":"2022-10-13"},{"lineNumber":382,"author":{"gitId":"emptygx"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":383,"author":{"gitId":"emptygx"},"content":"        return noteSet;","lastModifiedDate":"2022-10-13"},{"lineNumber":384,"author":{"gitId":"emptygx"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":385,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":386,"author":{"gitId":"pratham31012002"},"content":"    /**","lastModifiedDate":"2022-10-22"},{"lineNumber":387,"author":{"gitId":"pratham31012002"},"content":"     * Gets {@code FileType} from {@code String filePath}","lastModifiedDate":"2022-10-22"},{"lineNumber":388,"author":{"gitId":"pratham31012002"},"content":"     */","lastModifiedDate":"2022-10-22"},{"lineNumber":389,"author":{"gitId":"pratham31012002"},"content":"    public static FileType getFileType(String filePath) throws InvalidExtensionException {","lastModifiedDate":"2022-10-26"},{"lineNumber":390,"author":{"gitId":"pratham31012002"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2022-10-22"},{"lineNumber":391,"author":{"gitId":"pratham31012002"},"content":"        String trimmedFilePath \u003d filePath.trim();","lastModifiedDate":"2022-10-22"},{"lineNumber":392,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":393,"author":{"gitId":"pratham31012002"},"content":"        int periodIndex \u003d trimmedFilePath.lastIndexOf(\".\");","lastModifiedDate":"2022-10-22"},{"lineNumber":394,"author":{"gitId":"pratham31012002"},"content":"        if (periodIndex \u003d\u003d -1) {","lastModifiedDate":"2022-10-22"},{"lineNumber":395,"author":{"gitId":"pratham31012002"},"content":"            throw new InvalidExtensionException();","lastModifiedDate":"2022-10-22"},{"lineNumber":396,"author":{"gitId":"pratham31012002"},"content":"        }","lastModifiedDate":"2022-10-22"},{"lineNumber":397,"author":{"gitId":"pratham31012002"},"content":"        String extension \u003d trimmedFilePath.substring(periodIndex + 1).trim().toUpperCase();","lastModifiedDate":"2022-10-26"},{"lineNumber":398,"author":{"gitId":"pratham31012002"},"content":"        FileType fileType;","lastModifiedDate":"2022-10-22"},{"lineNumber":399,"author":{"gitId":"pratham31012002"},"content":"        try {","lastModifiedDate":"2022-10-22"},{"lineNumber":400,"author":{"gitId":"pratham31012002"},"content":"            fileType \u003d FileType.valueOf(extension);","lastModifiedDate":"2022-10-22"},{"lineNumber":401,"author":{"gitId":"pratham31012002"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2022-10-22"},{"lineNumber":402,"author":{"gitId":"pratham31012002"},"content":"            throw new InvalidExtensionException();","lastModifiedDate":"2022-10-22"},{"lineNumber":403,"author":{"gitId":"pratham31012002"},"content":"        }","lastModifiedDate":"2022-10-22"},{"lineNumber":404,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":405,"author":{"gitId":"pratham31012002"},"content":"        return fileType;","lastModifiedDate":"2022-10-22"},{"lineNumber":406,"author":{"gitId":"pratham31012002"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":407,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":408,"author":{"gitId":"pratham31012002"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":409,"author":{"gitId":"pratham31012002"},"content":"     * Parses a person.","lastModifiedDate":"2022-10-26"},{"lineNumber":410,"author":{"gitId":"pratham31012002"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":411,"author":{"gitId":"pratham31012002"},"content":"    public static Person parsePerson(ArrayList\u003cString[]\u003e person) throws InvalidPersonException {","lastModifiedDate":"2022-10-26"},{"lineNumber":412,"author":{"gitId":"pratham31012002"},"content":"        boolean atleastOne \u003d person.stream().allMatch(detail -\u003e detail.length \u003e\u003d 1);","lastModifiedDate":"2022-10-26"},{"lineNumber":413,"author":{"gitId":"pratham31012002"},"content":"        if (!atleastOne) {","lastModifiedDate":"2022-10-26"},{"lineNumber":414,"author":{"gitId":"pratham31012002"},"content":"            throw new InvalidPersonException();","lastModifiedDate":"2022-10-26"},{"lineNumber":415,"author":{"gitId":"pratham31012002"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":416,"author":{"gitId":"pratham31012002"},"content":"        Name name \u003d null;","lastModifiedDate":"2022-10-26"},{"lineNumber":417,"author":{"gitId":"pratham31012002"},"content":"        Phone phone \u003d null;","lastModifiedDate":"2022-10-26"},{"lineNumber":418,"author":{"gitId":"pratham31012002"},"content":"        Email email \u003d null;","lastModifiedDate":"2022-10-26"},{"lineNumber":419,"author":{"gitId":"pratham31012002"},"content":"        Address address \u003d null;","lastModifiedDate":"2022-10-26"},{"lineNumber":420,"author":{"gitId":"pratham31012002"},"content":"        Status status \u003d null;","lastModifiedDate":"2022-10-26"},{"lineNumber":421,"author":{"gitId":"pratham31012002"},"content":"        Note note \u003d null;","lastModifiedDate":"2022-10-26"},{"lineNumber":422,"author":{"gitId":"pratham31012002"},"content":"        UniqueTagTypeMap tagTypeMap \u003d new UniqueTagTypeMap();","lastModifiedDate":"2022-10-26"},{"lineNumber":423,"author":{"gitId":"pratham31012002"},"content":"        Rating rating \u003d null;","lastModifiedDate":"2022-10-26"},{"lineNumber":424,"author":{"gitId":"pratham31012002"},"content":"        Set\u003cLink\u003e links \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-26"},{"lineNumber":425,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":426,"author":{"gitId":"pratham31012002"},"content":"        for (String[] detail: person) {","lastModifiedDate":"2022-10-26"},{"lineNumber":427,"author":{"gitId":"pratham31012002"},"content":"            String check \u003d detail[0];","lastModifiedDate":"2022-10-26"},{"lineNumber":428,"author":{"gitId":"pratham31012002"},"content":"            String tagType \u003d null;","lastModifiedDate":"2022-10-26"},{"lineNumber":429,"author":{"gitId":"pratham31012002"},"content":"            if (check.startsWith(\"Tag:\")) {","lastModifiedDate":"2022-10-26"},{"lineNumber":430,"author":{"gitId":"pratham31012002"},"content":"                tagType \u003d check.substring(4);","lastModifiedDate":"2022-10-26"},{"lineNumber":431,"author":{"gitId":"pratham31012002"},"content":"                check \u003d \"Tag:\";","lastModifiedDate":"2022-10-26"},{"lineNumber":432,"author":{"gitId":"pratham31012002"},"content":"            } else if (!check.startsWith(\"Links\") \u0026\u0026 detail.length !\u003d 2) {","lastModifiedDate":"2022-10-26"},{"lineNumber":433,"author":{"gitId":"pratham31012002"},"content":"                throw new InvalidPersonException(\"More arguments found than possible!\");","lastModifiedDate":"2022-10-26"},{"lineNumber":434,"author":{"gitId":"pratham31012002"},"content":"            }","lastModifiedDate":"2022-10-26"},{"lineNumber":435,"author":{"gitId":"pratham31012002"},"content":"            try {","lastModifiedDate":"2022-10-28"},{"lineNumber":436,"author":{"gitId":"pratham31012002"},"content":"                switch (check) {","lastModifiedDate":"2022-10-26"},{"lineNumber":437,"author":{"gitId":"pratham31012002"},"content":"                case \"Name\":","lastModifiedDate":"2022-10-26"},{"lineNumber":438,"author":{"gitId":"pratham31012002"},"content":"                    name \u003d new Name(detail[1]);","lastModifiedDate":"2022-10-26"},{"lineNumber":439,"author":{"gitId":"pratham31012002"},"content":"                    break;","lastModifiedDate":"2022-10-26"},{"lineNumber":440,"author":{"gitId":"pratham31012002"},"content":"                case \"Phone\":","lastModifiedDate":"2022-10-26"},{"lineNumber":441,"author":{"gitId":"pratham31012002"},"content":"                    phone \u003d new Phone(detail[1]);","lastModifiedDate":"2022-10-26"},{"lineNumber":442,"author":{"gitId":"pratham31012002"},"content":"                    break;","lastModifiedDate":"2022-10-26"},{"lineNumber":443,"author":{"gitId":"pratham31012002"},"content":"                case \"Email\":","lastModifiedDate":"2022-10-26"},{"lineNumber":444,"author":{"gitId":"pratham31012002"},"content":"                    email \u003d new Email(detail[1]);","lastModifiedDate":"2022-10-26"},{"lineNumber":445,"author":{"gitId":"pratham31012002"},"content":"                    break;","lastModifiedDate":"2022-10-26"},{"lineNumber":446,"author":{"gitId":"pratham31012002"},"content":"                case \"Address\":","lastModifiedDate":"2022-10-26"},{"lineNumber":447,"author":{"gitId":"pratham31012002"},"content":"                    address \u003d new Address(detail[1]);","lastModifiedDate":"2022-10-26"},{"lineNumber":448,"author":{"gitId":"pratham31012002"},"content":"                    break;","lastModifiedDate":"2022-10-26"},{"lineNumber":449,"author":{"gitId":"pratham31012002"},"content":"                case \"Status\":","lastModifiedDate":"2022-10-26"},{"lineNumber":450,"author":{"gitId":"pratham31012002"},"content":"                    status \u003d new Status(detail[1]);","lastModifiedDate":"2022-10-26"},{"lineNumber":451,"author":{"gitId":"pratham31012002"},"content":"                    break;","lastModifiedDate":"2022-10-26"},{"lineNumber":452,"author":{"gitId":"pratham31012002"},"content":"                case \"Note\":","lastModifiedDate":"2022-10-26"},{"lineNumber":453,"author":{"gitId":"pratham31012002"},"content":"                    note \u003d new Note(detail[1]);","lastModifiedDate":"2022-10-26"},{"lineNumber":454,"author":{"gitId":"pratham31012002"},"content":"                    break;","lastModifiedDate":"2022-10-26"},{"lineNumber":455,"author":{"gitId":"pratham31012002"},"content":"                case \"Tag:\":","lastModifiedDate":"2022-10-26"},{"lineNumber":456,"author":{"gitId":"pratham31012002"},"content":"                    String[] prefixTagNamePair \u003d tagType.split(\"-\", 2);","lastModifiedDate":"2022-10-28"},{"lineNumber":457,"author":{"gitId":"pratham31012002"},"content":"                    if (prefixTagNamePair.length !\u003d 2) {","lastModifiedDate":"2022-10-28"},{"lineNumber":458,"author":{"gitId":"pratham31012002"},"content":"                        throw new InvalidPersonException();","lastModifiedDate":"2022-10-28"},{"lineNumber":459,"author":{"gitId":"pratham31012002"},"content":"                    }","lastModifiedDate":"2022-10-28"},{"lineNumber":460,"author":{"gitId":"pratham31012002"},"content":"                    Prefix p \u003d new Prefix(prefixTagNamePair[0]);","lastModifiedDate":"2022-10-28"},{"lineNumber":461,"author":{"gitId":"pratham31012002"},"content":"                    TagType tagTypeName \u003d new TagType(prefixTagNamePair[1], p);","lastModifiedDate":"2022-10-28"},{"lineNumber":462,"author":{"gitId":"pratham31012002"},"content":"                    ParserUtil.addTags(tagTypeMap, tagTypeName, detail);","lastModifiedDate":"2022-10-26"},{"lineNumber":463,"author":{"gitId":"pratham31012002"},"content":"                    break;","lastModifiedDate":"2022-10-26"},{"lineNumber":464,"author":{"gitId":"pratham31012002"},"content":"                case \"Rating\":","lastModifiedDate":"2022-10-26"},{"lineNumber":465,"author":{"gitId":"pratham31012002"},"content":"                    rating \u003d new Rating(detail[1]);","lastModifiedDate":"2022-10-26"},{"lineNumber":466,"author":{"gitId":"pratham31012002"},"content":"                    break;","lastModifiedDate":"2022-10-26"},{"lineNumber":467,"author":{"gitId":"pratham31012002"},"content":"                case \"Links\":","lastModifiedDate":"2022-10-26"},{"lineNumber":468,"author":{"gitId":"pratham31012002"},"content":"                    for (int i \u003d 1; i \u003c detail.length; i++) {","lastModifiedDate":"2022-10-26"},{"lineNumber":469,"author":{"gitId":"agarwal-anjali"},"content":"                        try {","lastModifiedDate":"2022-10-27"},{"lineNumber":470,"author":{"gitId":"agarwal-anjali"},"content":"                            URL url \u003d new URL(detail[i]);","lastModifiedDate":"2022-10-27"},{"lineNumber":471,"author":{"gitId":"agarwal-anjali"},"content":"                            links.add(new Link(url));","lastModifiedDate":"2022-10-27"},{"lineNumber":472,"author":{"gitId":"agarwal-anjali"},"content":"                        } catch (MalformedURLException m) {","lastModifiedDate":"2022-10-27"},{"lineNumber":473,"author":{"gitId":"agarwal-anjali"},"content":"                            throw new InvalidPersonException();","lastModifiedDate":"2022-10-28"},{"lineNumber":474,"author":{"gitId":"agarwal-anjali"},"content":"                        }","lastModifiedDate":"2022-10-27"},{"lineNumber":475,"author":{"gitId":"pratham31012002"},"content":"                    }","lastModifiedDate":"2022-10-26"},{"lineNumber":476,"author":{"gitId":"pratham31012002"},"content":"                    break;","lastModifiedDate":"2022-10-26"},{"lineNumber":477,"author":{"gitId":"pratham31012002"},"content":"                default:","lastModifiedDate":"2022-10-26"},{"lineNumber":478,"author":{"gitId":"pratham31012002"},"content":"                    throw new InvalidPersonException(\"Invalid attribute found!\");","lastModifiedDate":"2022-10-26"},{"lineNumber":479,"author":{"gitId":"pratham31012002"},"content":"                }","lastModifiedDate":"2022-10-26"},{"lineNumber":480,"author":{"gitId":"pratham31012002"},"content":"            } catch (IllegalArgumentException | DuplicateTagException | TagTypeNotFoundException e) {","lastModifiedDate":"2022-10-28"},{"lineNumber":481,"author":{"gitId":"pratham31012002"},"content":"                throw new InvalidPersonException();","lastModifiedDate":"2022-10-28"},{"lineNumber":482,"author":{"gitId":"pratham31012002"},"content":"            }","lastModifiedDate":"2022-10-28"},{"lineNumber":483,"author":{"gitId":"pratham31012002"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":484,"author":{"gitId":"pratham31012002"},"content":"        boolean foundAll \u003d checkAllNonNull(name, phone, email, address, tagTypeMap, status, note, rating, links);","lastModifiedDate":"2022-10-26"},{"lineNumber":485,"author":{"gitId":"pratham31012002"},"content":"        if (!foundAll) {","lastModifiedDate":"2022-10-26"},{"lineNumber":486,"author":{"gitId":"pratham31012002"},"content":"            throw new InvalidPersonException(\"All attributes not present!\");","lastModifiedDate":"2022-10-26"},{"lineNumber":487,"author":{"gitId":"pratham31012002"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":488,"author":{"gitId":"pratham31012002"},"content":"        return new Person(name, phone, email, address, tagTypeMap, status, note, rating, links);","lastModifiedDate":"2022-10-26"},{"lineNumber":489,"author":{"gitId":"pratham31012002"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":490,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":491,"author":{"gitId":"pratham31012002"},"content":"    private static void addTags(UniqueTagTypeMap tagTypeMap, TagType tagType, String[] tags) {","lastModifiedDate":"2022-10-26"},{"lineNumber":492,"author":{"gitId":"pratham31012002"},"content":"        for (int i \u003d 1; i \u003c tags.length; i++) {","lastModifiedDate":"2022-10-26"},{"lineNumber":493,"author":{"gitId":"pratham31012002"},"content":"            tagTypeMap.mergeTag(tagType, new Tag(tags[i]));","lastModifiedDate":"2022-10-26"},{"lineNumber":494,"author":{"gitId":"pratham31012002"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":495,"author":{"gitId":"pratham31012002"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":496,"author":{"gitId":"pratham31012002"},"content":"    private static boolean checkAllNonNull(Name name, Phone phone, Email email,","lastModifiedDate":"2022-10-26"},{"lineNumber":497,"author":{"gitId":"pratham31012002"},"content":"                                           Address address, UniqueTagTypeMap tagTypeMap, Status status,","lastModifiedDate":"2022-10-26"},{"lineNumber":498,"author":{"gitId":"pratham31012002"},"content":"                                           Note note, Rating rating, Set\u003cLink\u003e links) {","lastModifiedDate":"2022-10-26"},{"lineNumber":499,"author":{"gitId":"pratham31012002"},"content":"        if (name \u003d\u003d null || phone \u003d\u003d null || email \u003d\u003d null || address \u003d\u003d null || tagTypeMap \u003d\u003d null || status \u003d\u003d null","lastModifiedDate":"2022-10-26"},{"lineNumber":500,"author":{"gitId":"pratham31012002"},"content":"                || note \u003d\u003d null || rating \u003d\u003d null || links \u003d\u003d null) {","lastModifiedDate":"2022-10-26"},{"lineNumber":501,"author":{"gitId":"pratham31012002"},"content":"            return false;","lastModifiedDate":"2022-10-26"},{"lineNumber":502,"author":{"gitId":"pratham31012002"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":503,"author":{"gitId":"pratham31012002"},"content":"        return true;","lastModifiedDate":"2022-10-26"},{"lineNumber":504,"author":{"gitId":"pratham31012002"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":505,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":506,"author":{"gitId":"ytingtan"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":507,"author":{"gitId":"ytingtan"},"content":"     * Parses {@code Collection\u003cString\u003e ratings} into a {@code Set\u003cRating\u003e}.","lastModifiedDate":"2022-10-17"},{"lineNumber":508,"author":{"gitId":"ytingtan"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":509,"author":{"gitId":"ytingtan"},"content":"    public static Set\u003cRating\u003e parseRatings(List\u003cString\u003e ratings) throws ParseException {","lastModifiedDate":"2022-10-17"},{"lineNumber":510,"author":{"gitId":"ytingtan"},"content":"        requireNonNull(ratings);","lastModifiedDate":"2022-10-17"},{"lineNumber":511,"author":{"gitId":"ytingtan"},"content":"        final Set\u003cRating\u003e ratingSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-17"},{"lineNumber":512,"author":{"gitId":"ytingtan"},"content":"        for (String ratingName : ratings) {","lastModifiedDate":"2022-10-17"},{"lineNumber":513,"author":{"gitId":"ytingtan"},"content":"            ratingSet.add(parseRating(ratingName));","lastModifiedDate":"2022-10-17"},{"lineNumber":514,"author":{"gitId":"ytingtan"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":515,"author":{"gitId":"ytingtan"},"content":"        return ratingSet;","lastModifiedDate":"2022-10-17"},{"lineNumber":516,"author":{"gitId":"ytingtan"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":517,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"agarwal-anjali":60,"ytingtan":34,"emptygx":99,"pratham31012002":211,"josephaedan":11,"-":102}},{"path":"src/main/java/seedu/clinkedin/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.logic.parser;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"pratham31012002"},"content":"import static seedu.clinkedin.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-28"},{"lineNumber":4,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * E.g. \u0027t/\u0027 in \u0027add James t/ friend\u0027.","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"pratham31012002"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"pratham31012002"},"content":"            \"Prefix names should be alphanumeric and should contain atleast 1 character\";","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"pratham31012002"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\\\\/\";","lastModifiedDate":"2022-10-28"},{"lineNumber":13,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"pratham31012002"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"pratham31012002"},"content":"     * Constructs a {@code Prefix}.","lastModifiedDate":"2022-10-28"},{"lineNumber":18,"author":{"gitId":"pratham31012002"},"content":"     *","lastModifiedDate":"2022-10-28"},{"lineNumber":19,"author":{"gitId":"pratham31012002"},"content":"     * @param prefix A valid prefix name.","lastModifiedDate":"2022-10-28"},{"lineNumber":20,"author":{"gitId":"pratham31012002"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":21,"author":{"gitId":"pratham31012002"},"content":"    public Prefix(String prefix) throws IllegalArgumentException {","lastModifiedDate":"2022-10-28"},{"lineNumber":22,"author":{"gitId":"pratham31012002"},"content":"        checkArgument(isValidPrefixName(prefix) || prefix.trim().equals(\"\"), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return getPrefix();","lastModifiedDate":"2017-05-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Prefix)) {","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) obj;","lastModifiedDate":"2017-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return otherPrefix.getPrefix().equals(getPrefix());","lastModifiedDate":"2017-03-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":51,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"pratham31012002"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"pratham31012002"},"content":"     * Returns true if a given string is a valid prefix name.","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"pratham31012002"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"pratham31012002"},"content":"    public static boolean isValidPrefixName(String test) {","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"pratham31012002"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"pratham31012002"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"emptygx":1,"pratham31012002":20,"-":37}},{"path":"src/main/java/seedu/clinkedin/logic/parser/ViewCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"josephaedan"},"content":"package seedu.clinkedin.logic.parser;","lastModifiedDate":"2022-10-28"},{"lineNumber":2,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":3,"author":{"gitId":"josephaedan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-28"},{"lineNumber":4,"author":{"gitId":"josephaedan"},"content":"import static seedu.clinkedin.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-28"},{"lineNumber":5,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":6,"author":{"gitId":"josephaedan"},"content":"import seedu.clinkedin.commons.core.index.Index;","lastModifiedDate":"2022-10-28"},{"lineNumber":7,"author":{"gitId":"josephaedan"},"content":"import seedu.clinkedin.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-28"},{"lineNumber":8,"author":{"gitId":"josephaedan"},"content":"import seedu.clinkedin.logic.commands.ViewCommand;","lastModifiedDate":"2022-10-28"},{"lineNumber":9,"author":{"gitId":"josephaedan"},"content":"import seedu.clinkedin.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-28"},{"lineNumber":10,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":11,"author":{"gitId":"josephaedan"},"content":"/**","lastModifiedDate":"2022-10-28"},{"lineNumber":12,"author":{"gitId":"josephaedan"},"content":" * Parses input arguments and creates a new ViewCommand object","lastModifiedDate":"2022-10-28"},{"lineNumber":13,"author":{"gitId":"josephaedan"},"content":" */","lastModifiedDate":"2022-10-28"},{"lineNumber":14,"author":{"gitId":"josephaedan"},"content":"public class ViewCommandParser implements Parser\u003cViewCommand\u003e {","lastModifiedDate":"2022-10-28"},{"lineNumber":15,"author":{"gitId":"josephaedan"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":16,"author":{"gitId":"josephaedan"},"content":"     * Parses the given {@code String} of arguments in the context of the","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"josephaedan"},"content":"     * ViewCommand and returns a ViewCommand object for execution.","lastModifiedDate":"2022-10-28"},{"lineNumber":18,"author":{"gitId":"josephaedan"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":19,"author":{"gitId":"josephaedan"},"content":"    public ViewCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-28"},{"lineNumber":20,"author":{"gitId":"josephaedan"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-10-28"},{"lineNumber":21,"author":{"gitId":"josephaedan"},"content":"        Index index;","lastModifiedDate":"2022-10-28"},{"lineNumber":22,"author":{"gitId":"josephaedan"},"content":"        try {","lastModifiedDate":"2022-10-28"},{"lineNumber":23,"author":{"gitId":"josephaedan"},"content":"            index \u003d ParserUtil.parseIndex(args.trim());","lastModifiedDate":"2022-10-28"},{"lineNumber":24,"author":{"gitId":"josephaedan"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2022-10-28"},{"lineNumber":25,"author":{"gitId":"josephaedan"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-28"},{"lineNumber":26,"author":{"gitId":"josephaedan"},"content":"                    ViewCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2022-10-28"},{"lineNumber":27,"author":{"gitId":"josephaedan"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":28,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":29,"author":{"gitId":"josephaedan"},"content":"        return new ViewCommand(index);","lastModifiedDate":"2022-10-28"},{"lineNumber":30,"author":{"gitId":"josephaedan"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":31,"author":{"gitId":"josephaedan"},"content":"}","lastModifiedDate":"2022-10-28"}],"authorContributionMap":{"josephaedan":31}},{"path":"src/main/java/seedu/clinkedin/logic/parser/exceptions/DuplicatePrefixException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.logic.parser.exceptions;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"pratham31012002"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"pratham31012002"},"content":" * Signals that the operation will result in duplicate prefixes.","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"pratham31012002"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"pratham31012002"},"content":"public class DuplicatePrefixException extends RuntimeException {","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"pratham31012002"},"content":"    public DuplicatePrefixException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"pratham31012002"},"content":"        super(\"Operation would result in duplicate prefixes\");","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"pratham31012002"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"pratham31012002"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"emptygx":1,"pratham31012002":9}},{"path":"src/main/java/seedu/clinkedin/logic/parser/exceptions/InvalidExtensionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pratham31012002"},"content":"package seedu.clinkedin.logic.parser.exceptions;","lastModifiedDate":"2022-10-22"},{"lineNumber":2,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":3,"author":{"gitId":"pratham31012002"},"content":"/**","lastModifiedDate":"2022-10-22"},{"lineNumber":4,"author":{"gitId":"pratham31012002"},"content":" * Signals that an invalid file extension has been entered.","lastModifiedDate":"2022-10-22"},{"lineNumber":5,"author":{"gitId":"pratham31012002"},"content":" */","lastModifiedDate":"2022-10-22"},{"lineNumber":6,"author":{"gitId":"pratham31012002"},"content":"public class InvalidExtensionException extends RuntimeException {","lastModifiedDate":"2022-10-22"},{"lineNumber":7,"author":{"gitId":"pratham31012002"},"content":"    public InvalidExtensionException() {","lastModifiedDate":"2022-10-22"},{"lineNumber":8,"author":{"gitId":"pratham31012002"},"content":"        super(\"Invalid Extension! Only .csv and .json extensions allowed!\");","lastModifiedDate":"2022-10-28"},{"lineNumber":9,"author":{"gitId":"pratham31012002"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":10,"author":{"gitId":"pratham31012002"},"content":"}","lastModifiedDate":"2022-10-22"}],"authorContributionMap":{"pratham31012002":10}},{"path":"src/main/java/seedu/clinkedin/logic/parser/exceptions/InvalidPersonException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pratham31012002"},"content":"package seedu.clinkedin.logic.parser.exceptions;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":3,"author":{"gitId":"pratham31012002"},"content":"/**","lastModifiedDate":"2022-10-26"},{"lineNumber":4,"author":{"gitId":"pratham31012002"},"content":" * Signals that the person being created is invalid.","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"pratham31012002"},"content":" */","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"pratham31012002"},"content":"public class InvalidPersonException extends RuntimeException {","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"pratham31012002"},"content":"    public InvalidPersonException() {","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"pratham31012002"},"content":"        super(\"Person couldn\u0027t be parsed!\");","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"pratham31012002"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"pratham31012002"},"content":"    public InvalidPersonException(String message) {","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"pratham31012002"},"content":"        super(message);","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"pratham31012002"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"pratham31012002"},"content":"}","lastModifiedDate":"2022-10-26"}],"authorContributionMap":{"pratham31012002":13}},{"path":"src/main/java/seedu/clinkedin/logic/parser/exceptions/ParseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.logic.parser.exceptions;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a parse error encountered by a parser.","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ParseException extends IllegalValueException {","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public ParseException(String message) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public ParseException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"emptygx":2,"-":15}},{"path":"src/main/java/seedu/clinkedin/logic/parser/exceptions/PrefixNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.logic.parser.exceptions;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"pratham31012002"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"pratham31012002"},"content":" * Signals that the operation is unable to find the specified prefix.","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"pratham31012002"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"pratham31012002"},"content":"public class PrefixNotFoundException extends RuntimeException {","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"agarwal-anjali"},"content":"    public PrefixNotFoundException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"agarwal-anjali"},"content":"        super(\"Prefix to be edited does not exist\");","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"agarwal-anjali"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"pratham31012002"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"agarwal-anjali":3,"emptygx":1,"pratham31012002":6}},{"path":"src/main/java/seedu/clinkedin/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.model;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"agarwal-anjali"},"content":"import java.util.Map;","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"agarwal-anjali"},"content":"import seedu.clinkedin.logic.parser.Prefix;","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.Person;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.UniquePersonList;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"agarwal-anjali"},"content":"import seedu.clinkedin.model.person.UniqueTagTypeMap;","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"agarwal-anjali"},"content":"import seedu.clinkedin.model.tag.TagType;","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":22,"author":{"gitId":"agarwal-anjali"},"content":"    private Map\u003cPrefix, TagType\u003e prefixMap;","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"josephaedan"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block,","lastModifiedDate":"2022-10-07"},{"lineNumber":26,"author":{"gitId":"josephaedan"},"content":"     * sometimes used to avoid duplication","lastModifiedDate":"2022-10-07"},{"lineNumber":27,"author":{"gitId":"josephaedan"},"content":"     * between constructors. See","lastModifiedDate":"2022-10-07"},{"lineNumber":28,"author":{"gitId":"josephaedan"},"content":"     * https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2022-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"josephaedan"},"content":"     * Note that non-static init blocks are not recommended to use. There are other","lastModifiedDate":"2022-10-07"},{"lineNumber":31,"author":{"gitId":"josephaedan"},"content":"     * ways to avoid duplication","lastModifiedDate":"2022-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":36,"author":{"gitId":"agarwal-anjali"},"content":"        prefixMap \u003d UniqueTagTypeMap.getPrefixMap();","lastModifiedDate":"2022-10-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"josephaedan"},"content":"    public AddressBook() {","lastModifiedDate":"2022-10-07"},{"lineNumber":40,"author":{"gitId":"josephaedan"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"josephaedan"},"content":"     * Returns true if a person with the same identity as {@code person} exists in","lastModifiedDate":"2022-10-07"},{"lineNumber":73,"author":{"gitId":"emptygx"},"content":"     * the clinkedin book.","lastModifiedDate":"2022-10-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"emptygx"},"content":"     * Adds a person to the clinkedin book.","lastModifiedDate":"2022-10-15"},{"lineNumber":82,"author":{"gitId":"emptygx"},"content":"     * The person must not already exist in the clinkedin book.","lastModifiedDate":"2022-10-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":89,"author":{"gitId":"josephaedan"},"content":"     * Replaces the given person {@code target} in the list with","lastModifiedDate":"2022-10-07"},{"lineNumber":90,"author":{"gitId":"josephaedan"},"content":"     * {@code editedPerson}.","lastModifiedDate":"2022-10-07"},{"lineNumber":91,"author":{"gitId":"emptygx"},"content":"     * {@code target} must exist in the clinkedin book.","lastModifiedDate":"2022-10-15"},{"lineNumber":92,"author":{"gitId":"josephaedan"},"content":"     * The person identity of {@code editedPerson} must not be the same as another","lastModifiedDate":"2022-10-07"},{"lineNumber":93,"author":{"gitId":"emptygx"},"content":"     * existing person in the clinkedin book.","lastModifiedDate":"2022-10-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"emptygx"},"content":"     * {@code key} must exist in the clinkedin book.","lastModifiedDate":"2022-10-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList().size() + \" persons\";","lastModifiedDate":"2018-04-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":122,"author":{"gitId":"agarwal-anjali"},"content":"    @Override","lastModifiedDate":"2022-10-26"},{"lineNumber":123,"author":{"gitId":"agarwal-anjali"},"content":"    public Map\u003cPrefix, TagType\u003e getPrefixMap() {","lastModifiedDate":"2022-10-26"},{"lineNumber":124,"author":{"gitId":"agarwal-anjali"},"content":"        return UniqueTagTypeMap.getPrefixMap();","lastModifiedDate":"2022-10-26"},{"lineNumber":125,"author":{"gitId":"agarwal-anjali"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":126,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":127,"author":{"gitId":"agarwal-anjali"},"content":"    public void setPrefixMap(Map\u003cPrefix, TagType\u003e prefixMap) {","lastModifiedDate":"2022-10-26"},{"lineNumber":128,"author":{"gitId":"agarwal-anjali"},"content":"        UniqueTagTypeMap.setPrefixMap(prefixMap);","lastModifiedDate":"2022-10-26"},{"lineNumber":129,"author":{"gitId":"agarwal-anjali"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":130,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":131,"author":{"gitId":"josephaedan"},"content":"    @Override","lastModifiedDate":"2022-10-07"},{"lineNumber":132,"author":{"gitId":"josephaedan"},"content":"    public int getCount() {","lastModifiedDate":"2022-10-07"},{"lineNumber":133,"author":{"gitId":"josephaedan"},"content":"        return persons.getCount();","lastModifiedDate":"2022-10-07"},{"lineNumber":134,"author":{"gitId":"josephaedan"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":135,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                        \u0026\u0026 persons.equals(((AddressBook) other).persons));","lastModifiedDate":"2018-08-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"agarwal-anjali":15,"emptygx":9,"josephaedan":17,"-":106}},{"path":"src/main/java/seedu/clinkedin/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.model;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"ytingtan"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-10-28"},{"lineNumber":5,"author":{"gitId":"emptygx"},"content":"import java.util.DoubleSummaryStatistics;","lastModifiedDate":"2022-10-23"},{"lineNumber":6,"author":{"gitId":"emptygx"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-10-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":10,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.commons.core.GuiSettings;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.Person;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.tag.TagType;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"emptygx"},"content":"     * Returns the user prefs\u0027 clinkedin book file path.","lastModifiedDate":"2022-10-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"emptygx"},"content":"     * Sets the user prefs\u0027 clinkedin book file path.","lastModifiedDate":"2022-10-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"emptygx"},"content":"     * Replaces clinkedin book data with the data in {@code addressBook}.","lastModifiedDate":"2022-10-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":59,"author":{"gitId":"emptygx"},"content":"    /** Saves the current address book state for undo/redo. */","lastModifiedDate":"2022-10-24"},{"lineNumber":60,"author":{"gitId":"emptygx"},"content":"    void commitAddressBook();","lastModifiedDate":"2022-10-24"},{"lineNumber":61,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":62,"author":{"gitId":"emptygx"},"content":"    /** Restores the address book to its previous state. */","lastModifiedDate":"2022-10-24"},{"lineNumber":63,"author":{"gitId":"emptygx"},"content":"    void undoAddressBook();","lastModifiedDate":"2022-10-24"},{"lineNumber":64,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":65,"author":{"gitId":"emptygx"},"content":"    /** Restores the address book to its previously undone state. */","lastModifiedDate":"2022-10-24"},{"lineNumber":66,"author":{"gitId":"emptygx"},"content":"    void redoAddressBook();","lastModifiedDate":"2022-10-24"},{"lineNumber":67,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":68,"author":{"gitId":"ytingtan"},"content":"    /** Returns true if the model has previous address states to restore. */","lastModifiedDate":"2022-10-28"},{"lineNumber":69,"author":{"gitId":"emptygx"},"content":"    boolean canUndoAddressBook();","lastModifiedDate":"2022-10-24"},{"lineNumber":70,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":71,"author":{"gitId":"ytingtan"},"content":"    /** Returns true if the model has undone address states to restore. */","lastModifiedDate":"2022-10-28"},{"lineNumber":72,"author":{"gitId":"emptygx"},"content":"    boolean canRedoAddressBook();","lastModifiedDate":"2022-10-24"},{"lineNumber":73,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"josephaedan"},"content":"     * Returns true if a person with the same identity as {@code person} exists in","lastModifiedDate":"2022-10-07"},{"lineNumber":76,"author":{"gitId":"emptygx"},"content":"     * the clinkedin book.","lastModifiedDate":"2022-10-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"ytingtan"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2022-10-28"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"ytingtan"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2022-10-28"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":94,"author":{"gitId":"ytingtan"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2022-10-28"},{"lineNumber":95,"author":{"gitId":"josephaedan"},"content":"     * The person identity of {@code editedPerson} must not be the same as another","lastModifiedDate":"2022-10-07"},{"lineNumber":96,"author":{"gitId":"ytingtan"},"content":"     * existing person in the address book.","lastModifiedDate":"2022-10-28"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":100,"author":{"gitId":"emptygx"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":101,"author":{"gitId":"ytingtan"},"content":"     * Returns a summary of the statistics of the persons in the address book.","lastModifiedDate":"2022-10-28"},{"lineNumber":102,"author":{"gitId":"emptygx"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":103,"author":{"gitId":"emptygx"},"content":"    DoubleSummaryStatistics getStats();","lastModifiedDate":"2022-10-28"},{"lineNumber":104,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":105,"author":{"gitId":"emptygx"},"content":"    HashMap\u003cString, Integer\u003e getRatingCount();","lastModifiedDate":"2022-10-28"},{"lineNumber":106,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":111,"author":{"gitId":"ytingtan"},"content":"     * Returns the total number of persons in the address book.","lastModifiedDate":"2022-10-28"},{"lineNumber":112,"author":{"gitId":"josephaedan"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":113,"author":{"gitId":"josephaedan"},"content":"    int getTotalNumberOfPersons();","lastModifiedDate":"2022-10-07"},{"lineNumber":114,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":115,"author":{"gitId":"josephaedan"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":116,"author":{"gitId":"ytingtan"},"content":"     * Returns the total number of filtered persons in the address book.","lastModifiedDate":"2022-10-28"},{"lineNumber":117,"author":{"gitId":"josephaedan"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":118,"author":{"gitId":"josephaedan"},"content":"    int getFilteredNumberOfPersons();","lastModifiedDate":"2022-10-08"},{"lineNumber":119,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":120,"author":{"gitId":"josephaedan"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":121,"author":{"gitId":"josephaedan"},"content":"     * Updates the filter of the filtered person list to filter by the given","lastModifiedDate":"2022-10-07"},{"lineNumber":122,"author":{"gitId":"josephaedan"},"content":"     * {@code predicate}.","lastModifiedDate":"2022-10-07"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":126,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":127,"author":{"gitId":"ytingtan"},"content":"    ///**","lastModifiedDate":"2022-10-28"},{"lineNumber":128,"author":{"gitId":"ytingtan"},"content":"    // * Returns an unmodifiable view of the sorted persons list.","lastModifiedDate":"2022-10-28"},{"lineNumber":129,"author":{"gitId":"ytingtan"},"content":"    // */","lastModifiedDate":"2022-10-28"},{"lineNumber":130,"author":{"gitId":"ytingtan"},"content":"    // ObservableList\u003cPerson\u003e getSortedPersonList();","lastModifiedDate":"2022-10-28"},{"lineNumber":131,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":132,"author":{"gitId":"ytingtan"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":133,"author":{"gitId":"ytingtan"},"content":"     * Updates the comparator of the sorted person list to sort by the given","lastModifiedDate":"2022-10-28"},{"lineNumber":134,"author":{"gitId":"ytingtan"},"content":"     * {@code comparator}","lastModifiedDate":"2022-10-28"},{"lineNumber":135,"author":{"gitId":"ytingtan"},"content":"     * @param comparator comparator to update sorted persons list with.","lastModifiedDate":"2022-10-28"},{"lineNumber":136,"author":{"gitId":"ytingtan"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":137,"author":{"gitId":"ytingtan"},"content":"    void updateSort(Comparator\u003cPerson\u003e comparator);","lastModifiedDate":"2022-10-28"},{"lineNumber":138,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":139,"author":{"gitId":"agarwal-anjali"},"content":"    void deleteTagTypeForAllPerson(TagType toDelete);","lastModifiedDate":"2022-10-10"},{"lineNumber":140,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":141,"author":{"gitId":"agarwal-anjali"},"content":"    void editTagTypeForAllPerson(TagType toEdit, TagType editTo);","lastModifiedDate":"2022-10-10"},{"lineNumber":142,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"agarwal-anjali":4,"ytingtan":22,"emptygx":29,"josephaedan":12,"-":75}},{"path":"src/main/java/seedu/clinkedin/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.model;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"agarwal-anjali"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"ytingtan"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-10-28"},{"lineNumber":9,"author":{"gitId":"emptygx"},"content":"import java.util.DoubleSummaryStatistics;","lastModifiedDate":"2022-10-23"},{"lineNumber":10,"author":{"gitId":"emptygx"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-10-28"},{"lineNumber":11,"author":{"gitId":"agarwal-anjali"},"content":"import java.util.List;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":17,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.commons.core.GuiSettings;","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.commons.core.LogsCenter;","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.commons.exceptions.CannotRedoAddressBookException;","lastModifiedDate":"2022-10-24"},{"lineNumber":20,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.commons.exceptions.CannotUndoAddressBookException;","lastModifiedDate":"2022-10-24"},{"lineNumber":21,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.Person;","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.UniqueTagTypeMap;","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.tag.TagType;","lastModifiedDate":"2022-10-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"emptygx"},"content":" * Represents the in-memory model of the clinkedin book data.","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"emptygx"},"content":"    private final VersionedAddressBook addressBook;","lastModifiedDate":"2022-10-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"ytingtan"},"content":"    // private final SortedList\u003cPerson\u003e sortedPersons;","lastModifiedDate":"2022-10-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"pratham31012002"},"content":"        logger.fine(\"Initializing with CLInkedIn book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2022-10-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"emptygx"},"content":"        this.addressBook \u003d new VersionedAddressBook(addressBook);","lastModifiedDate":"2022-10-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":47,"author":{"gitId":"ytingtan"},"content":"        // sortedPersons \u003d new SortedList\u003c\u003e(filteredPersons);","lastModifiedDate":"2022-10-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"emptygx"},"content":"        this(new VersionedAddressBook(new AddressBook()), new UserPrefs());","lastModifiedDate":"2022-10-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"josephaedan"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs","lastModifiedDate":"2022-10-07"},{"lineNumber":55,"author":{"gitId":"josephaedan"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"josephaedan"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook","lastModifiedDate":"2022-10-07"},{"lineNumber":91,"author":{"gitId":"josephaedan"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":96,"author":{"gitId":"emptygx"},"content":"        commitAddressBook();","lastModifiedDate":"2022-10-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":104,"author":{"gitId":"emptygx"},"content":"    @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":105,"author":{"gitId":"emptygx"},"content":"    public void commitAddressBook() {","lastModifiedDate":"2022-10-24"},{"lineNumber":106,"author":{"gitId":"emptygx"},"content":"        addressBook.commit();","lastModifiedDate":"2022-10-24"},{"lineNumber":107,"author":{"gitId":"emptygx"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":108,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":109,"author":{"gitId":"emptygx"},"content":"    @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":110,"author":{"gitId":"emptygx"},"content":"    public void undoAddressBook() {","lastModifiedDate":"2022-10-24"},{"lineNumber":111,"author":{"gitId":"emptygx"},"content":"        try {","lastModifiedDate":"2022-10-24"},{"lineNumber":112,"author":{"gitId":"emptygx"},"content":"            addressBook.undo();","lastModifiedDate":"2022-10-24"},{"lineNumber":113,"author":{"gitId":"emptygx"},"content":"        } catch (CannotUndoAddressBookException e) {","lastModifiedDate":"2022-10-24"},{"lineNumber":114,"author":{"gitId":"emptygx"},"content":"            logger.warning(\"No undoable state found.\");","lastModifiedDate":"2022-10-24"},{"lineNumber":115,"author":{"gitId":"emptygx"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":116,"author":{"gitId":"emptygx"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":117,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":118,"author":{"gitId":"emptygx"},"content":"    @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":119,"author":{"gitId":"emptygx"},"content":"    public void redoAddressBook() {","lastModifiedDate":"2022-10-24"},{"lineNumber":120,"author":{"gitId":"emptygx"},"content":"        try {","lastModifiedDate":"2022-10-24"},{"lineNumber":121,"author":{"gitId":"emptygx"},"content":"            addressBook.redo();","lastModifiedDate":"2022-10-24"},{"lineNumber":122,"author":{"gitId":"emptygx"},"content":"        } catch (CannotRedoAddressBookException e) {","lastModifiedDate":"2022-10-24"},{"lineNumber":123,"author":{"gitId":"emptygx"},"content":"            logger.warning(\"No redoable state found.\");","lastModifiedDate":"2022-10-24"},{"lineNumber":124,"author":{"gitId":"emptygx"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":125,"author":{"gitId":"emptygx"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":126,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":127,"author":{"gitId":"emptygx"},"content":"    @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":128,"author":{"gitId":"emptygx"},"content":"    public boolean canUndoAddressBook() {","lastModifiedDate":"2022-10-24"},{"lineNumber":129,"author":{"gitId":"emptygx"},"content":"        return addressBook.canUndo();","lastModifiedDate":"2022-10-24"},{"lineNumber":130,"author":{"gitId":"emptygx"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":131,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":132,"author":{"gitId":"emptygx"},"content":"    @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":133,"author":{"gitId":"emptygx"},"content":"    public boolean canRedoAddressBook() {","lastModifiedDate":"2022-10-24"},{"lineNumber":134,"author":{"gitId":"emptygx"},"content":"        return addressBook.canRedo();","lastModifiedDate":"2022-10-24"},{"lineNumber":135,"author":{"gitId":"emptygx"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":136,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":146,"author":{"gitId":"emptygx"},"content":"        commitAddressBook();","lastModifiedDate":"2022-10-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":153,"author":{"gitId":"emptygx"},"content":"        commitAddressBook();","lastModifiedDate":"2022-10-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":161,"author":{"gitId":"emptygx"},"content":"        commitAddressBook();","lastModifiedDate":"2022-10-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":164,"author":{"gitId":"josephaedan"},"content":"    @Override","lastModifiedDate":"2022-10-07"},{"lineNumber":165,"author":{"gitId":"josephaedan"},"content":"    public int getTotalNumberOfPersons() {","lastModifiedDate":"2022-10-07"},{"lineNumber":166,"author":{"gitId":"josephaedan"},"content":"        return addressBook.getCount();","lastModifiedDate":"2022-10-07"},{"lineNumber":167,"author":{"gitId":"josephaedan"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":168,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":169,"author":{"gitId":"emptygx"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":170,"author":{"gitId":"emptygx"},"content":"     * Returns a summary of the statistics of the persons\u0027 tags in the user\u0027s ClInkedIn using the","lastModifiedDate":"2022-10-23"},{"lineNumber":171,"author":{"gitId":"emptygx"},"content":"     * DoubleSummaryStatistics class.","lastModifiedDate":"2022-10-23"},{"lineNumber":172,"author":{"gitId":"emptygx"},"content":"     * @return a DoubleSummaryStatistics object containing the tag statistics of the persons in the user\u0027s ClInkedIn.","lastModifiedDate":"2022-10-23"},{"lineNumber":173,"author":{"gitId":"emptygx"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":174,"author":{"gitId":"emptygx"},"content":"    @Override","lastModifiedDate":"2022-10-23"},{"lineNumber":175,"author":{"gitId":"emptygx"},"content":"    public DoubleSummaryStatistics getStats() {","lastModifiedDate":"2022-10-28"},{"lineNumber":176,"author":{"gitId":"emptygx"},"content":"        DoubleSummaryStatistics stats \u003d filteredPersons.stream().mapToDouble(Person::getTagCount).collect(","lastModifiedDate":"2022-10-23"},{"lineNumber":177,"author":{"gitId":"emptygx"},"content":"                DoubleSummaryStatistics::new, DoubleSummaryStatistics::accept, DoubleSummaryStatistics::combine);","lastModifiedDate":"2022-10-23"},{"lineNumber":178,"author":{"gitId":"emptygx"},"content":"        logger.fine(\"Stats: \" + stats);","lastModifiedDate":"2022-10-23"},{"lineNumber":179,"author":{"gitId":"emptygx"},"content":"        return stats;","lastModifiedDate":"2022-10-23"},{"lineNumber":180,"author":{"gitId":"emptygx"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":181,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":182,"author":{"gitId":"emptygx"},"content":"    @Override","lastModifiedDate":"2022-10-28"},{"lineNumber":183,"author":{"gitId":"emptygx"},"content":"    public HashMap\u003cString, Integer\u003e getRatingCount() {","lastModifiedDate":"2022-10-28"},{"lineNumber":184,"author":{"gitId":"emptygx"},"content":"        HashMap\u003cString, Integer\u003e ratingCount \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-10-28"},{"lineNumber":185,"author":{"gitId":"emptygx"},"content":"        for (Person person : filteredPersons) {","lastModifiedDate":"2022-10-28"},{"lineNumber":186,"author":{"gitId":"emptygx"},"content":"            assert person.getRating() !\u003d null : \"Person\u0027s rating should not be null\";","lastModifiedDate":"2022-10-28"},{"lineNumber":187,"author":{"gitId":"emptygx"},"content":"            String rating \u003d person.getRating().toString();","lastModifiedDate":"2022-10-28"},{"lineNumber":188,"author":{"gitId":"emptygx"},"content":"            if (ratingCount.containsKey(rating)) {","lastModifiedDate":"2022-10-28"},{"lineNumber":189,"author":{"gitId":"emptygx"},"content":"                ratingCount.put(rating, ratingCount.get(rating) + 1);","lastModifiedDate":"2022-10-28"},{"lineNumber":190,"author":{"gitId":"emptygx"},"content":"            } else {","lastModifiedDate":"2022-10-28"},{"lineNumber":191,"author":{"gitId":"emptygx"},"content":"                ratingCount.put(rating, 1);","lastModifiedDate":"2022-10-28"},{"lineNumber":192,"author":{"gitId":"emptygx"},"content":"            }","lastModifiedDate":"2022-10-28"},{"lineNumber":193,"author":{"gitId":"emptygx"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":194,"author":{"gitId":"emptygx"},"content":"        return ratingCount;","lastModifiedDate":"2022-10-28"},{"lineNumber":195,"author":{"gitId":"emptygx"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":196,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":197,"author":{"gitId":"josephaedan"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors","lastModifiedDate":"2022-10-07"},{"lineNumber":198,"author":{"gitId":"josephaedan"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-07"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":201,"author":{"gitId":"josephaedan"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the","lastModifiedDate":"2022-10-07"},{"lineNumber":202,"author":{"gitId":"josephaedan"},"content":"     * internal list of","lastModifiedDate":"2022-10-07"},{"lineNumber":203,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":204,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":216,"author":{"gitId":"ytingtan"},"content":"    // /**","lastModifiedDate":"2022-10-28"},{"lineNumber":217,"author":{"gitId":"ytingtan"},"content":"    // * Returns an unmodifiable view of the list of {@code Person} backed by the","lastModifiedDate":"2022-10-28"},{"lineNumber":218,"author":{"gitId":"ytingtan"},"content":"    // * internal list of","lastModifiedDate":"2022-10-28"},{"lineNumber":219,"author":{"gitId":"ytingtan"},"content":"    // * {@code versionedAddressBook}","lastModifiedDate":"2022-10-28"},{"lineNumber":220,"author":{"gitId":"ytingtan"},"content":"    // */","lastModifiedDate":"2022-10-28"},{"lineNumber":221,"author":{"gitId":"ytingtan"},"content":"    // @Override","lastModifiedDate":"2022-10-28"},{"lineNumber":222,"author":{"gitId":"ytingtan"},"content":"    // public ObservableList\u003cPerson\u003e getSortedPersonList() {","lastModifiedDate":"2022-10-28"},{"lineNumber":223,"author":{"gitId":"ytingtan"},"content":"    //    return sortedPersons;","lastModifiedDate":"2022-10-28"},{"lineNumber":224,"author":{"gitId":"ytingtan"},"content":"    //}","lastModifiedDate":"2022-10-28"},{"lineNumber":225,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":226,"author":{"gitId":"ytingtan"},"content":"    @Override","lastModifiedDate":"2022-10-28"},{"lineNumber":227,"author":{"gitId":"ytingtan"},"content":"    public void updateSort(Comparator\u003cPerson\u003e comparator) {","lastModifiedDate":"2022-10-28"},{"lineNumber":228,"author":{"gitId":"ytingtan"},"content":"        requireNonNull(comparator);","lastModifiedDate":"2022-10-28"},{"lineNumber":229,"author":{"gitId":"ytingtan"},"content":"        List\u003cPerson\u003e sortedList \u003d new ArrayList\u003c\u003e(addressBook.getPersonList());","lastModifiedDate":"2022-10-28"},{"lineNumber":230,"author":{"gitId":"ytingtan"},"content":"        sortedList.sort(comparator);","lastModifiedDate":"2022-10-28"},{"lineNumber":231,"author":{"gitId":"ytingtan"},"content":"        addressBook.setPersons(sortedList);","lastModifiedDate":"2022-10-28"},{"lineNumber":232,"author":{"gitId":"ytingtan"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":233,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":234,"author":{"gitId":"josephaedan"},"content":"    @Override","lastModifiedDate":"2022-10-08"},{"lineNumber":235,"author":{"gitId":"josephaedan"},"content":"    public int getFilteredNumberOfPersons() {","lastModifiedDate":"2022-10-08"},{"lineNumber":236,"author":{"gitId":"josephaedan"},"content":"        return filteredPersons.size();","lastModifiedDate":"2022-10-08"},{"lineNumber":237,"author":{"gitId":"josephaedan"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":238,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":239,"author":{"gitId":"agarwal-anjali"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":240,"author":{"gitId":"agarwal-anjali"},"content":"    public void deleteTagTypeForAllPerson(TagType toDelete) {","lastModifiedDate":"2022-10-10"},{"lineNumber":241,"author":{"gitId":"agarwal-anjali"},"content":"        List\u003cPerson\u003e personList \u003d addressBook.getPersonList();","lastModifiedDate":"2022-10-10"},{"lineNumber":242,"author":{"gitId":"pratham31012002"},"content":"        personList.stream().forEach(x -\u003e x.deleteTagType(toDelete));","lastModifiedDate":"2022-10-12"},{"lineNumber":243,"author":{"gitId":"agarwal-anjali"},"content":"        addressBook.setPersons(personList);","lastModifiedDate":"2022-10-10"},{"lineNumber":244,"author":{"gitId":"agarwal-anjali"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":245,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":246,"author":{"gitId":"pratham31012002"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":247,"author":{"gitId":"pratham31012002"},"content":"     * Edits an existing tag type for all person.","lastModifiedDate":"2022-10-11"},{"lineNumber":248,"author":{"gitId":"pratham31012002"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":249,"author":{"gitId":"agarwal-anjali"},"content":"    public void editTagTypeForAllPerson(TagType toEdit, TagType editTo) {","lastModifiedDate":"2022-10-10"},{"lineNumber":250,"author":{"gitId":"agarwal-anjali"},"content":"        List\u003cPerson\u003e personList \u003d addressBook.getPersonList();","lastModifiedDate":"2022-10-10"},{"lineNumber":251,"author":{"gitId":"agarwal-anjali"},"content":"        List\u003cPerson\u003e updatedPersonList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-13"},{"lineNumber":252,"author":{"gitId":"agarwal-anjali"},"content":"        for (Person p: personList) {","lastModifiedDate":"2022-10-10"},{"lineNumber":253,"author":{"gitId":"agarwal-anjali"},"content":"            UniqueTagTypeMap tagTypeMap \u003d new UniqueTagTypeMap();","lastModifiedDate":"2022-10-10"},{"lineNumber":254,"author":{"gitId":"agarwal-anjali"},"content":"            if (p.getTags().keySet().contains(toEdit)) {","lastModifiedDate":"2022-10-13"},{"lineNumber":255,"author":{"gitId":"agarwal-anjali"},"content":"                tagTypeMap.setTagTypeMap(p.getTags());","lastModifiedDate":"2022-10-10"},{"lineNumber":256,"author":{"gitId":"agarwal-anjali"},"content":"                tagTypeMap.setTagType(toEdit, editTo);","lastModifiedDate":"2022-10-10"},{"lineNumber":257,"author":{"gitId":"pratham31012002"},"content":"                p.setTagTypeMap(tagTypeMap);","lastModifiedDate":"2022-10-13"},{"lineNumber":258,"author":{"gitId":"pratham31012002"},"content":"            }","lastModifiedDate":"2022-10-13"},{"lineNumber":259,"author":{"gitId":"agarwal-anjali"},"content":"            updatedPersonList.add(p);","lastModifiedDate":"2022-10-13"},{"lineNumber":260,"author":{"gitId":"agarwal-anjali"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":261,"author":{"gitId":"agarwal-anjali"},"content":"        addressBook.setPersons(updatedPersonList);","lastModifiedDate":"2022-10-13"},{"lineNumber":262,"author":{"gitId":"agarwal-anjali"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":263,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":269,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":273,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":278,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":279,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":280,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons);","lastModifiedDate":"2019-01-25"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":283,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"agarwal-anjali":21,"ytingtan":21,"emptygx":80,"pratham31012002":7,"josephaedan":18,"-":136}},{"path":"src/main/java/seedu/clinkedin/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.model;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"agarwal-anjali"},"content":"import java.util.Map;","lastModifiedDate":"2022-10-26"},{"lineNumber":4,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"agarwal-anjali"},"content":"import seedu.clinkedin.logic.parser.Prefix;","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.Person;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"agarwal-anjali"},"content":"import seedu.clinkedin.model.tag.TagType;","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"ytingtan"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"agarwal-anjali"},"content":"    Map\u003cPrefix, TagType\u003e getPrefixMap();","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"josephaedan"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":24,"author":{"gitId":"emptygx"},"content":"     * Returns the number of persons in the clinkedin book.","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"josephaedan"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":26,"author":{"gitId":"josephaedan"},"content":"    int getCount();","lastModifiedDate":"2022-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"agarwal-anjali":7,"ytingtan":1,"emptygx":3,"josephaedan":3,"-":13}},{"path":"src/main/java/seedu/clinkedin/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.model;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.commons.core.GuiSettings;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"emptygx":2,"-":14}},{"path":"src/main/java/seedu/clinkedin/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.model;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.commons.core.GuiSettings;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path addressBookFilePath \u003d Paths.get(\"data\" , \"addressbook.json\");","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                \u0026\u0026 addressBookFilePath.equals(o.addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Objects.hash(guiSettings, addressBookFilePath);","lastModifiedDate":"2018-08-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        sb.append(\"\\nLocal data file location : \" + addressBookFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"emptygx":2,"-":85}},{"path":"src/main/java/seedu/clinkedin/model/VersionedAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.model;","lastModifiedDate":"2022-10-24"},{"lineNumber":2,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":3,"author":{"gitId":"emptygx"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-24"},{"lineNumber":4,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":5,"author":{"gitId":"emptygx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-24"},{"lineNumber":6,"author":{"gitId":"emptygx"},"content":"import java.util.List;","lastModifiedDate":"2022-10-24"},{"lineNumber":7,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":8,"author":{"gitId":"emptygx"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-24"},{"lineNumber":9,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.commons.exceptions.CannotRedoAddressBookException;","lastModifiedDate":"2022-10-24"},{"lineNumber":10,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.commons.exceptions.CannotUndoAddressBookException;","lastModifiedDate":"2022-10-24"},{"lineNumber":11,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.Person;","lastModifiedDate":"2022-10-24"},{"lineNumber":12,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.UniquePersonList;","lastModifiedDate":"2022-10-24"},{"lineNumber":13,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":14,"author":{"gitId":"emptygx"},"content":"/**","lastModifiedDate":"2022-10-24"},{"lineNumber":15,"author":{"gitId":"emptygx"},"content":" * Subclass of AddressBook that stores the state of the AddressBook at a particular point in time.","lastModifiedDate":"2022-10-24"},{"lineNumber":16,"author":{"gitId":"emptygx"},"content":" * This is used to implement the undo/redo feature.","lastModifiedDate":"2022-10-24"},{"lineNumber":17,"author":{"gitId":"emptygx"},"content":" * Has an undo/redo history of AddressBook states.","lastModifiedDate":"2022-10-24"},{"lineNumber":18,"author":{"gitId":"emptygx"},"content":" */","lastModifiedDate":"2022-10-24"},{"lineNumber":19,"author":{"gitId":"emptygx"},"content":"public class VersionedAddressBook extends AddressBook {","lastModifiedDate":"2022-10-24"},{"lineNumber":20,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":21,"author":{"gitId":"emptygx"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2022-10-24"},{"lineNumber":22,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":23,"author":{"gitId":"emptygx"},"content":"    private final List\u003cReadOnlyAddressBook\u003e addressBookStateList;","lastModifiedDate":"2022-10-24"},{"lineNumber":24,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":25,"author":{"gitId":"emptygx"},"content":"    private int currentStatePointer;","lastModifiedDate":"2022-10-24"},{"lineNumber":26,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":27,"author":{"gitId":"emptygx"},"content":"    /*","lastModifiedDate":"2022-10-24"},{"lineNumber":28,"author":{"gitId":"emptygx"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block,","lastModifiedDate":"2022-10-24"},{"lineNumber":29,"author":{"gitId":"emptygx"},"content":"     * sometimes used to avoid duplication","lastModifiedDate":"2022-10-24"},{"lineNumber":30,"author":{"gitId":"emptygx"},"content":"     * between constructors. See","lastModifiedDate":"2022-10-24"},{"lineNumber":31,"author":{"gitId":"emptygx"},"content":"     * https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2022-10-24"},{"lineNumber":32,"author":{"gitId":"emptygx"},"content":"     *","lastModifiedDate":"2022-10-24"},{"lineNumber":33,"author":{"gitId":"emptygx"},"content":"     * Note that non-static init blocks are not recommended to use. There are other","lastModifiedDate":"2022-10-24"},{"lineNumber":34,"author":{"gitId":"emptygx"},"content":"     * ways to avoid duplication","lastModifiedDate":"2022-10-24"},{"lineNumber":35,"author":{"gitId":"emptygx"},"content":"     * among constructors.","lastModifiedDate":"2022-10-24"},{"lineNumber":36,"author":{"gitId":"emptygx"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":37,"author":{"gitId":"emptygx"},"content":"    {","lastModifiedDate":"2022-10-24"},{"lineNumber":38,"author":{"gitId":"emptygx"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2022-10-24"},{"lineNumber":39,"author":{"gitId":"emptygx"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":40,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":41,"author":{"gitId":"emptygx"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":42,"author":{"gitId":"emptygx"},"content":"     * Creates a VersionedAddressBook using an AddressBookStateList.","lastModifiedDate":"2022-10-24"},{"lineNumber":43,"author":{"gitId":"emptygx"},"content":"     * @param addressBookStateList List of AddressBook states","lastModifiedDate":"2022-10-24"},{"lineNumber":44,"author":{"gitId":"emptygx"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":45,"author":{"gitId":"emptygx"},"content":"    public VersionedAddressBook(List\u003cReadOnlyAddressBook\u003e addressBookStateList) {","lastModifiedDate":"2022-10-24"},{"lineNumber":46,"author":{"gitId":"emptygx"},"content":"        super();","lastModifiedDate":"2022-10-24"},{"lineNumber":47,"author":{"gitId":"emptygx"},"content":"        this.addressBookStateList \u003d addressBookStateList;","lastModifiedDate":"2022-10-24"},{"lineNumber":48,"author":{"gitId":"emptygx"},"content":"        currentStatePointer \u003d addressBookStateList.size() - 1;","lastModifiedDate":"2022-10-24"},{"lineNumber":49,"author":{"gitId":"emptygx"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":50,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":51,"author":{"gitId":"emptygx"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":52,"author":{"gitId":"emptygx"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2022-10-24"},{"lineNumber":53,"author":{"gitId":"emptygx"},"content":"     * @param toBeCopied AddressBook to be copied","lastModifiedDate":"2022-10-24"},{"lineNumber":54,"author":{"gitId":"emptygx"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":55,"author":{"gitId":"emptygx"},"content":"    public VersionedAddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2022-10-24"},{"lineNumber":56,"author":{"gitId":"emptygx"},"content":"        super();","lastModifiedDate":"2022-10-24"},{"lineNumber":57,"author":{"gitId":"emptygx"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2022-10-24"},{"lineNumber":58,"author":{"gitId":"emptygx"},"content":"        this.addressBookStateList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-24"},{"lineNumber":59,"author":{"gitId":"emptygx"},"content":"        this.currentStatePointer \u003d -1;","lastModifiedDate":"2022-10-24"},{"lineNumber":60,"author":{"gitId":"emptygx"},"content":"        this.commit();","lastModifiedDate":"2022-10-24"},{"lineNumber":61,"author":{"gitId":"emptygx"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":62,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":63,"author":{"gitId":"emptygx"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":64,"author":{"gitId":"emptygx"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied} and an AddressBookStateList.","lastModifiedDate":"2022-10-24"},{"lineNumber":65,"author":{"gitId":"emptygx"},"content":"     * @param toBeCopied AddressBook to be copied","lastModifiedDate":"2022-10-24"},{"lineNumber":66,"author":{"gitId":"emptygx"},"content":"     * @param addressBookStateList List of AddressBook states","lastModifiedDate":"2022-10-24"},{"lineNumber":67,"author":{"gitId":"emptygx"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":68,"author":{"gitId":"emptygx"},"content":"    public VersionedAddressBook(ReadOnlyAddressBook toBeCopied, List\u003cReadOnlyAddressBook\u003e addressBookStateList) {","lastModifiedDate":"2022-10-24"},{"lineNumber":69,"author":{"gitId":"emptygx"},"content":"        this(addressBookStateList);","lastModifiedDate":"2022-10-24"},{"lineNumber":70,"author":{"gitId":"emptygx"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2022-10-24"},{"lineNumber":71,"author":{"gitId":"emptygx"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":72,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":73,"author":{"gitId":"emptygx"},"content":"    //// history operations","lastModifiedDate":"2022-10-24"},{"lineNumber":74,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":75,"author":{"gitId":"emptygx"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":76,"author":{"gitId":"emptygx"},"content":"     * Saves a copy of the current {@code AddressBook} state at the end of the state list.","lastModifiedDate":"2022-10-24"},{"lineNumber":77,"author":{"gitId":"emptygx"},"content":"     * Undone states are removed from the state list.","lastModifiedDate":"2022-10-24"},{"lineNumber":78,"author":{"gitId":"emptygx"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":79,"author":{"gitId":"emptygx"},"content":"    public void commit() {","lastModifiedDate":"2022-10-24"},{"lineNumber":80,"author":{"gitId":"emptygx"},"content":"        requireNonNull(addressBookStateList);","lastModifiedDate":"2022-10-24"},{"lineNumber":81,"author":{"gitId":"emptygx"},"content":"        removeStatesAfterCurrentPointer();","lastModifiedDate":"2022-10-24"},{"lineNumber":82,"author":{"gitId":"emptygx"},"content":"        addressBookStateList.add(new AddressBook(this));","lastModifiedDate":"2022-10-24"},{"lineNumber":83,"author":{"gitId":"emptygx"},"content":"        currentStatePointer \u003d addressBookStateList.size() - 1;","lastModifiedDate":"2022-10-24"},{"lineNumber":84,"author":{"gitId":"emptygx"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":85,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":86,"author":{"gitId":"emptygx"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":87,"author":{"gitId":"emptygx"},"content":"     * Restores the address book to its previous state.","lastModifiedDate":"2022-10-24"},{"lineNumber":88,"author":{"gitId":"emptygx"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":89,"author":{"gitId":"emptygx"},"content":"    public void undo() throws CannotUndoAddressBookException {","lastModifiedDate":"2022-10-24"},{"lineNumber":90,"author":{"gitId":"emptygx"},"content":"        if (!canUndo()) {","lastModifiedDate":"2022-10-24"},{"lineNumber":91,"author":{"gitId":"emptygx"},"content":"            throw new CannotUndoAddressBookException(\"AddressBook cannot be undone anymore!\");","lastModifiedDate":"2022-10-24"},{"lineNumber":92,"author":{"gitId":"emptygx"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":93,"author":{"gitId":"emptygx"},"content":"        currentStatePointer--;","lastModifiedDate":"2022-10-24"},{"lineNumber":94,"author":{"gitId":"emptygx"},"content":"        resetData(addressBookStateList.get(currentStatePointer));","lastModifiedDate":"2022-10-24"},{"lineNumber":95,"author":{"gitId":"emptygx"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":96,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":97,"author":{"gitId":"emptygx"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":98,"author":{"gitId":"emptygx"},"content":"     * Restores the address book to its previously undone state.","lastModifiedDate":"2022-10-24"},{"lineNumber":99,"author":{"gitId":"emptygx"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":100,"author":{"gitId":"emptygx"},"content":"    public void redo() throws CannotRedoAddressBookException {","lastModifiedDate":"2022-10-24"},{"lineNumber":101,"author":{"gitId":"emptygx"},"content":"        if (!canRedo()) {","lastModifiedDate":"2022-10-24"},{"lineNumber":102,"author":{"gitId":"emptygx"},"content":"            throw new CannotRedoAddressBookException(\"AddressBook cannot be redone anymore!\");","lastModifiedDate":"2022-10-24"},{"lineNumber":103,"author":{"gitId":"emptygx"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":104,"author":{"gitId":"emptygx"},"content":"        currentStatePointer++;","lastModifiedDate":"2022-10-24"},{"lineNumber":105,"author":{"gitId":"emptygx"},"content":"        resetData(addressBookStateList.get(currentStatePointer));","lastModifiedDate":"2022-10-24"},{"lineNumber":106,"author":{"gitId":"emptygx"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":107,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":108,"author":{"gitId":"emptygx"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":109,"author":{"gitId":"emptygx"},"content":"     * Removes all states after the current pointer.","lastModifiedDate":"2022-10-24"},{"lineNumber":110,"author":{"gitId":"emptygx"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":111,"author":{"gitId":"emptygx"},"content":"    private void removeStatesAfterCurrentPointer() {","lastModifiedDate":"2022-10-24"},{"lineNumber":112,"author":{"gitId":"emptygx"},"content":"        assert currentStatePointer \u003c addressBookStateList.size();","lastModifiedDate":"2022-10-24"},{"lineNumber":113,"author":{"gitId":"emptygx"},"content":"        addressBookStateList.subList(currentStatePointer + 1, addressBookStateList.size()).clear();","lastModifiedDate":"2022-10-24"},{"lineNumber":114,"author":{"gitId":"emptygx"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":115,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":116,"author":{"gitId":"emptygx"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":117,"author":{"gitId":"emptygx"},"content":"     * Returns true if {@code undo()} has address book states to undo.","lastModifiedDate":"2022-10-24"},{"lineNumber":118,"author":{"gitId":"emptygx"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":119,"author":{"gitId":"emptygx"},"content":"    public boolean canUndo() {","lastModifiedDate":"2022-10-24"},{"lineNumber":120,"author":{"gitId":"emptygx"},"content":"        return currentStatePointer \u003e 0;","lastModifiedDate":"2022-10-24"},{"lineNumber":121,"author":{"gitId":"emptygx"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":122,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":123,"author":{"gitId":"emptygx"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":124,"author":{"gitId":"emptygx"},"content":"     * Returns true if {@code redo()} has address book states to redo.","lastModifiedDate":"2022-10-24"},{"lineNumber":125,"author":{"gitId":"emptygx"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":126,"author":{"gitId":"emptygx"},"content":"    public boolean canRedo() {","lastModifiedDate":"2022-10-24"},{"lineNumber":127,"author":{"gitId":"emptygx"},"content":"        return currentStatePointer \u003c addressBookStateList.size() - 1;","lastModifiedDate":"2022-10-24"},{"lineNumber":128,"author":{"gitId":"emptygx"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":129,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":130,"author":{"gitId":"emptygx"},"content":"    //// list overwrite operations","lastModifiedDate":"2022-10-24"},{"lineNumber":131,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":132,"author":{"gitId":"emptygx"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":133,"author":{"gitId":"emptygx"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2022-10-24"},{"lineNumber":134,"author":{"gitId":"emptygx"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2022-10-24"},{"lineNumber":135,"author":{"gitId":"emptygx"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":136,"author":{"gitId":"emptygx"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2022-10-24"},{"lineNumber":137,"author":{"gitId":"emptygx"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2022-10-24"},{"lineNumber":138,"author":{"gitId":"emptygx"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":139,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":140,"author":{"gitId":"emptygx"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":141,"author":{"gitId":"emptygx"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2022-10-24"},{"lineNumber":142,"author":{"gitId":"emptygx"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":143,"author":{"gitId":"emptygx"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2022-10-24"},{"lineNumber":144,"author":{"gitId":"emptygx"},"content":"        requireNonNull(newData);","lastModifiedDate":"2022-10-24"},{"lineNumber":145,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":146,"author":{"gitId":"emptygx"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2022-10-24"},{"lineNumber":147,"author":{"gitId":"emptygx"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":148,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":149,"author":{"gitId":"emptygx"},"content":"    //// person-level operations","lastModifiedDate":"2022-10-24"},{"lineNumber":150,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":151,"author":{"gitId":"emptygx"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":152,"author":{"gitId":"emptygx"},"content":"     * Returns true if a person with the same identity as {@code person} exists in","lastModifiedDate":"2022-10-24"},{"lineNumber":153,"author":{"gitId":"emptygx"},"content":"     * the clinkedin book.","lastModifiedDate":"2022-10-24"},{"lineNumber":154,"author":{"gitId":"emptygx"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":155,"author":{"gitId":"emptygx"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2022-10-24"},{"lineNumber":156,"author":{"gitId":"emptygx"},"content":"        requireNonNull(person);","lastModifiedDate":"2022-10-24"},{"lineNumber":157,"author":{"gitId":"emptygx"},"content":"        return persons.contains(person);","lastModifiedDate":"2022-10-24"},{"lineNumber":158,"author":{"gitId":"emptygx"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":159,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":160,"author":{"gitId":"emptygx"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":161,"author":{"gitId":"emptygx"},"content":"     * Adds a person to the clinkedin book.","lastModifiedDate":"2022-10-24"},{"lineNumber":162,"author":{"gitId":"emptygx"},"content":"     * The person must not already exist in the clinkedin book.","lastModifiedDate":"2022-10-24"},{"lineNumber":163,"author":{"gitId":"emptygx"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":164,"author":{"gitId":"emptygx"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2022-10-24"},{"lineNumber":165,"author":{"gitId":"emptygx"},"content":"        persons.add(p);","lastModifiedDate":"2022-10-24"},{"lineNumber":166,"author":{"gitId":"emptygx"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":167,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":168,"author":{"gitId":"emptygx"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":169,"author":{"gitId":"emptygx"},"content":"     * Replaces the given person {@code target} in the list with","lastModifiedDate":"2022-10-24"},{"lineNumber":170,"author":{"gitId":"emptygx"},"content":"     * {@code editedPerson}.","lastModifiedDate":"2022-10-24"},{"lineNumber":171,"author":{"gitId":"emptygx"},"content":"     * {@code target} must exist in the clinkedin book.","lastModifiedDate":"2022-10-24"},{"lineNumber":172,"author":{"gitId":"emptygx"},"content":"     * The person identity of {@code editedPerson} must not be the same as another","lastModifiedDate":"2022-10-24"},{"lineNumber":173,"author":{"gitId":"emptygx"},"content":"     * existing person in the clinkedin book.","lastModifiedDate":"2022-10-24"},{"lineNumber":174,"author":{"gitId":"emptygx"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":175,"author":{"gitId":"emptygx"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2022-10-24"},{"lineNumber":176,"author":{"gitId":"emptygx"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2022-10-24"},{"lineNumber":177,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":178,"author":{"gitId":"emptygx"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2022-10-24"},{"lineNumber":179,"author":{"gitId":"emptygx"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":180,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":181,"author":{"gitId":"emptygx"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":182,"author":{"gitId":"emptygx"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2022-10-24"},{"lineNumber":183,"author":{"gitId":"emptygx"},"content":"     * {@code key} must exist in the clinkedin book.","lastModifiedDate":"2022-10-24"},{"lineNumber":184,"author":{"gitId":"emptygx"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":185,"author":{"gitId":"emptygx"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2022-10-24"},{"lineNumber":186,"author":{"gitId":"emptygx"},"content":"        persons.remove(key);","lastModifiedDate":"2022-10-24"},{"lineNumber":187,"author":{"gitId":"emptygx"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":188,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":189,"author":{"gitId":"emptygx"},"content":"    //// util methods","lastModifiedDate":"2022-10-24"},{"lineNumber":190,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":191,"author":{"gitId":"emptygx"},"content":"    @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":192,"author":{"gitId":"emptygx"},"content":"    public String toString() {","lastModifiedDate":"2022-10-24"},{"lineNumber":193,"author":{"gitId":"emptygx"},"content":"        return persons.asUnmodifiableObservableList().size() + \" persons\";","lastModifiedDate":"2022-10-24"},{"lineNumber":194,"author":{"gitId":"emptygx"},"content":"        // TODO: refine later","lastModifiedDate":"2022-10-24"},{"lineNumber":195,"author":{"gitId":"emptygx"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":196,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":197,"author":{"gitId":"emptygx"},"content":"    @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":198,"author":{"gitId":"emptygx"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2022-10-24"},{"lineNumber":199,"author":{"gitId":"emptygx"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2022-10-24"},{"lineNumber":200,"author":{"gitId":"emptygx"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":201,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":202,"author":{"gitId":"emptygx"},"content":"    public List\u003cReadOnlyAddressBook\u003e getAddressBookStateList() {","lastModifiedDate":"2022-10-24"},{"lineNumber":203,"author":{"gitId":"emptygx"},"content":"        return addressBookStateList;","lastModifiedDate":"2022-10-24"},{"lineNumber":204,"author":{"gitId":"emptygx"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":205,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":206,"author":{"gitId":"emptygx"},"content":"    @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":207,"author":{"gitId":"emptygx"},"content":"    public int getCount() {","lastModifiedDate":"2022-10-24"},{"lineNumber":208,"author":{"gitId":"emptygx"},"content":"        return persons.getCount();","lastModifiedDate":"2022-10-24"},{"lineNumber":209,"author":{"gitId":"emptygx"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":210,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":211,"author":{"gitId":"emptygx"},"content":"    @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":212,"author":{"gitId":"emptygx"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-24"},{"lineNumber":213,"author":{"gitId":"emptygx"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-24"},{"lineNumber":214,"author":{"gitId":"emptygx"},"content":"                || (other instanceof VersionedAddressBook // instanceof handles nulls","lastModifiedDate":"2022-10-24"},{"lineNumber":215,"author":{"gitId":"emptygx"},"content":"                \u0026\u0026 persons.equals(((VersionedAddressBook) other).persons));","lastModifiedDate":"2022-10-24"},{"lineNumber":216,"author":{"gitId":"emptygx"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":217,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":218,"author":{"gitId":"emptygx"},"content":"    @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":219,"author":{"gitId":"emptygx"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-24"},{"lineNumber":220,"author":{"gitId":"emptygx"},"content":"        return persons.hashCode();","lastModifiedDate":"2022-10-24"},{"lineNumber":221,"author":{"gitId":"emptygx"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":222,"author":{"gitId":"emptygx"},"content":"}","lastModifiedDate":"2022-10-24"}],"authorContributionMap":{"emptygx":222}},{"path":"src/main/java/seedu/clinkedin/model/link/Link.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"agarwal-anjali"},"content":"package seedu.clinkedin.model.link;","lastModifiedDate":"2022-10-23"},{"lineNumber":2,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":3,"author":{"gitId":"agarwal-anjali"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-23"},{"lineNumber":4,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":5,"author":{"gitId":"agarwal-anjali"},"content":"import java.net.URL;","lastModifiedDate":"2022-10-28"},{"lineNumber":6,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":7,"author":{"gitId":"agarwal-anjali"},"content":"/**","lastModifiedDate":"2022-10-23"},{"lineNumber":8,"author":{"gitId":"agarwal-anjali"},"content":" * Represents an optional note about a person in the clinkedin book.","lastModifiedDate":"2022-10-23"},{"lineNumber":9,"author":{"gitId":"agarwal-anjali"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidLink(String)}","lastModifiedDate":"2022-10-23"},{"lineNumber":10,"author":{"gitId":"agarwal-anjali"},"content":" */","lastModifiedDate":"2022-10-23"},{"lineNumber":11,"author":{"gitId":"agarwal-anjali"},"content":"public class Link {","lastModifiedDate":"2022-10-23"},{"lineNumber":12,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":13,"author":{"gitId":"agarwal-anjali"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Link should be valid links, \"","lastModifiedDate":"2022-10-23"},{"lineNumber":14,"author":{"gitId":"agarwal-anjali"},"content":"            + \"and it should not be blank. If you do not want to add a link, please leave the field blank. \"","lastModifiedDate":"2022-10-23"},{"lineNumber":15,"author":{"gitId":"agarwal-anjali"},"content":"            + \"Blank links will be ignored.\";","lastModifiedDate":"2022-10-23"},{"lineNumber":16,"author":{"gitId":"agarwal-anjali"},"content":"    public static final String VALIDATION_REGEX \u003d","lastModifiedDate":"2022-10-24"},{"lineNumber":17,"author":{"gitId":"agarwal-anjali"},"content":"            \"^(https?|ftp|file)://[-a-zA-Z0-9+\u0026@#/%?\u003d~_|!:,.;]*[-a-zA-Z0-9+\u0026@#/%\u003d~_|]\";","lastModifiedDate":"2022-10-24"},{"lineNumber":18,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":19,"author":{"gitId":"agarwal-anjali"},"content":"    public final URL link;","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":21,"author":{"gitId":"agarwal-anjali"},"content":"    public final String platform;","lastModifiedDate":"2022-10-24"},{"lineNumber":22,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":23,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":24,"author":{"gitId":"agarwal-anjali"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":25,"author":{"gitId":"agarwal-anjali"},"content":"     * Constructs a {@code link}.","lastModifiedDate":"2022-10-23"},{"lineNumber":26,"author":{"gitId":"agarwal-anjali"},"content":"     *","lastModifiedDate":"2022-10-23"},{"lineNumber":27,"author":{"gitId":"agarwal-anjali"},"content":"     * @param link A valid link.","lastModifiedDate":"2022-10-24"},{"lineNumber":28,"author":{"gitId":"agarwal-anjali"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":29,"author":{"gitId":"agarwal-anjali"},"content":"    public Link(URL link) {","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"agarwal-anjali"},"content":"        requireNonNull(link);","lastModifiedDate":"2022-10-24"},{"lineNumber":31,"author":{"gitId":"agarwal-anjali"},"content":"        this.link \u003d link;","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"agarwal-anjali"},"content":"        this.platform \u003d generatePlatform(link);","lastModifiedDate":"2022-10-24"},{"lineNumber":33,"author":{"gitId":"agarwal-anjali"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":34,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":35,"author":{"gitId":"agarwal-anjali"},"content":"    private String generatePlatform(URL url) {","lastModifiedDate":"2022-10-27"},{"lineNumber":36,"author":{"gitId":"agarwal-anjali"},"content":"        if (url.getHost().contains(\"instagram\")) {","lastModifiedDate":"2022-10-27"},{"lineNumber":37,"author":{"gitId":"agarwal-anjali"},"content":"            return \"instagram\";","lastModifiedDate":"2022-10-24"},{"lineNumber":38,"author":{"gitId":"agarwal-anjali"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":39,"author":{"gitId":"agarwal-anjali"},"content":"        if (url.getHost().contains(\"discord\")) {","lastModifiedDate":"2022-10-27"},{"lineNumber":40,"author":{"gitId":"agarwal-anjali"},"content":"            return \"discord\";","lastModifiedDate":"2022-10-24"},{"lineNumber":41,"author":{"gitId":"agarwal-anjali"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":42,"author":{"gitId":"agarwal-anjali"},"content":"        if (url.getHost().contains(\"facebook\")) {","lastModifiedDate":"2022-10-27"},{"lineNumber":43,"author":{"gitId":"agarwal-anjali"},"content":"            return \"facebook\";","lastModifiedDate":"2022-10-24"},{"lineNumber":44,"author":{"gitId":"agarwal-anjali"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":45,"author":{"gitId":"agarwal-anjali"},"content":"        if (url.getHost().contains(\"github\")) {","lastModifiedDate":"2022-10-27"},{"lineNumber":46,"author":{"gitId":"agarwal-anjali"},"content":"            return \"github\";","lastModifiedDate":"2022-10-24"},{"lineNumber":47,"author":{"gitId":"agarwal-anjali"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":48,"author":{"gitId":"agarwal-anjali"},"content":"        if (url.getHost().contains(\"telegram\")) {","lastModifiedDate":"2022-10-27"},{"lineNumber":49,"author":{"gitId":"agarwal-anjali"},"content":"            return \"telegram\";","lastModifiedDate":"2022-10-24"},{"lineNumber":50,"author":{"gitId":"agarwal-anjali"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":51,"author":{"gitId":"agarwal-anjali"},"content":"        if (url.getHost().contains(\"linkedin\")) {","lastModifiedDate":"2022-10-27"},{"lineNumber":52,"author":{"gitId":"agarwal-anjali"},"content":"            return \"linkedin\";","lastModifiedDate":"2022-10-24"},{"lineNumber":53,"author":{"gitId":"agarwal-anjali"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":54,"author":{"gitId":"agarwal-anjali"},"content":"        if (url.getHost().contains(\"snapchat\")) {","lastModifiedDate":"2022-10-27"},{"lineNumber":55,"author":{"gitId":"agarwal-anjali"},"content":"            return \"snapchat\";","lastModifiedDate":"2022-10-24"},{"lineNumber":56,"author":{"gitId":"agarwal-anjali"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":57,"author":{"gitId":"agarwal-anjali"},"content":"        if (url.getHost().contains(\"twitter\")) {","lastModifiedDate":"2022-10-27"},{"lineNumber":58,"author":{"gitId":"agarwal-anjali"},"content":"            return \"twitter\";","lastModifiedDate":"2022-10-24"},{"lineNumber":59,"author":{"gitId":"agarwal-anjali"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":60,"author":{"gitId":"agarwal-anjali"},"content":"        return \"general\";","lastModifiedDate":"2022-10-24"},{"lineNumber":61,"author":{"gitId":"agarwal-anjali"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":62,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":63,"author":{"gitId":"agarwal-anjali"},"content":"    @Override","lastModifiedDate":"2022-10-23"},{"lineNumber":64,"author":{"gitId":"agarwal-anjali"},"content":"    public String toString() {","lastModifiedDate":"2022-10-23"},{"lineNumber":65,"author":{"gitId":"agarwal-anjali"},"content":"        return link.toString();","lastModifiedDate":"2022-10-27"},{"lineNumber":66,"author":{"gitId":"agarwal-anjali"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":67,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":68,"author":{"gitId":"agarwal-anjali"},"content":"    @Override","lastModifiedDate":"2022-10-23"},{"lineNumber":69,"author":{"gitId":"agarwal-anjali"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-23"},{"lineNumber":70,"author":{"gitId":"agarwal-anjali"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-23"},{"lineNumber":71,"author":{"gitId":"agarwal-anjali"},"content":"                || (other instanceof Link // instanceof handles nulls","lastModifiedDate":"2022-10-23"},{"lineNumber":72,"author":{"gitId":"agarwal-anjali"},"content":"                \u0026\u0026 link.equals(((Link) other).link)); // state check","lastModifiedDate":"2022-10-23"},{"lineNumber":73,"author":{"gitId":"agarwal-anjali"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":74,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":75,"author":{"gitId":"agarwal-anjali"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":76,"author":{"gitId":"agarwal-anjali"},"content":"     * Returns true if a given string is a valid link.","lastModifiedDate":"2022-10-23"},{"lineNumber":77,"author":{"gitId":"agarwal-anjali"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":78,"author":{"gitId":"agarwal-anjali"},"content":"    public static boolean isValidLink(String test) {","lastModifiedDate":"2022-10-23"},{"lineNumber":79,"author":{"gitId":"agarwal-anjali"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-23"},{"lineNumber":80,"author":{"gitId":"agarwal-anjali"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":81,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":82,"author":{"gitId":"agarwal-anjali"},"content":"    @Override","lastModifiedDate":"2022-10-23"},{"lineNumber":83,"author":{"gitId":"agarwal-anjali"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-23"},{"lineNumber":84,"author":{"gitId":"agarwal-anjali"},"content":"        return link.hashCode();","lastModifiedDate":"2022-10-23"},{"lineNumber":85,"author":{"gitId":"agarwal-anjali"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":86,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":87,"author":{"gitId":"agarwal-anjali"},"content":"}","lastModifiedDate":"2022-10-23"}],"authorContributionMap":{"agarwal-anjali":87}},{"path":"src/main/java/seedu/clinkedin/model/person/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.model.person;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"emptygx"},"content":" * Represents a Person\u0027s clinkedin in the clinkedin book.","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"emptygx"},"content":"     * The first character of the clinkedin must not be a whitespace,","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"emptygx"},"content":"     * @param address A valid clinkedin.","lastModifiedDate":"2022-10-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"pratham31012002"},"content":"    public Address(String address) throws IllegalArgumentException {","lastModifiedDate":"2022-10-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                || (other instanceof Address // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Address) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"emptygx":5,"pratham31012002":1,"-":51}},{"path":"src/main/java/seedu/clinkedin/model/person/DetailsContainKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.model.person;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"emptygx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"emptygx"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"emptygx"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"emptygx"},"content":"import java.util.List;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"emptygx"},"content":"import java.util.Map;","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"emptygx"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"emptygx"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.commons.util.StringUtil;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.logic.parser.Prefix;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.link.Link;","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.tag.UniqueTagList;","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"emptygx"},"content":"/**","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"emptygx"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"emptygx"},"content":" */","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"emptygx"},"content":"public class DetailsContainKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"emptygx"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"emptygx"},"content":"    private final Set\u003cName\u003e nameKeywords;","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"emptygx"},"content":"    private final Set\u003cPhone\u003e phoneKeywords;","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"emptygx"},"content":"    private final Set\u003cEmail\u003e emailKeywords;","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"emptygx"},"content":"    private final Set\u003cAddress\u003e addressKeywords;","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"emptygx"},"content":"    private final Set\u003cStatus\u003e statusKeywords;","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"emptygx"},"content":"    private final Set\u003cNote\u003e noteKeywords;","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"ytingtan"},"content":"    private final Set\u003cRating\u003e ratingKeywords;","lastModifiedDate":"2022-10-17"},{"lineNumber":28,"author":{"gitId":"emptygx"},"content":"    private final Set\u003cLink\u003e linkKeywords;","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"emptygx"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e tagMap;","lastModifiedDate":"2022-10-14"},{"lineNumber":30,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"emptygx"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"emptygx"},"content":"     * Constructor for DetailsContainKeywordsPredicate.","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"emptygx"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"emptygx"},"content":"     * @param keywords List of keywords to search for.","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"emptygx"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"emptygx"},"content":"    public DetailsContainKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"emptygx"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"emptygx"},"content":"        this.nameKeywords \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"emptygx"},"content":"        this.phoneKeywords \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"emptygx"},"content":"        this.emailKeywords \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"emptygx"},"content":"        this.addressKeywords \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"emptygx"},"content":"        this.statusKeywords \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"emptygx"},"content":"        this.noteKeywords \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"emptygx"},"content":"        this.tagMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-10-14"},{"lineNumber":45,"author":{"gitId":"ytingtan"},"content":"        this.ratingKeywords \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-17"},{"lineNumber":46,"author":{"gitId":"emptygx"},"content":"        this.linkKeywords \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-27"},{"lineNumber":47,"author":{"gitId":"emptygx"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"emptygx"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"emptygx"},"content":"     * Constructor for DetailsContainKeywordsPredicate.","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"emptygx"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"emptygx"},"content":"     * @param nameKeywords    Set of Name keywords to search for.","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"emptygx"},"content":"     * @param phoneKeywords   Set of Phone keywords to search for.","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"emptygx"},"content":"     * @param emailKeywords   Set of Email keywords to search for.","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"emptygx"},"content":"     * @param addressKeywords Set of Address keywords to search for.","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"emptygx"},"content":"     * @param noteKeywords    Set of Note keywords to search for.","lastModifiedDate":"2022-10-13"},{"lineNumber":57,"author":{"gitId":"emptygx"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"emptygx"},"content":"    public DetailsContainKeywordsPredicate(Set\u003cName\u003e nameKeywords, Set\u003cPhone\u003e phoneKeywords, Set\u003cEmail\u003e emailKeywords,","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"emptygx"},"content":"                                           Set\u003cAddress\u003e addressKeywords, Set\u003cStatus\u003e statusKeywords,","lastModifiedDate":"2022-10-14"},{"lineNumber":60,"author":{"gitId":"emptygx"},"content":"                                           Set\u003cNote\u003e noteKeywords, Set\u003cRating\u003e ratingKeywords, Set\u003cLink\u003e linkKeywords,","lastModifiedDate":"2022-10-27"},{"lineNumber":61,"author":{"gitId":"ytingtan"},"content":"                                           Map\u003cPrefix, List\u003cString\u003e\u003e prefToStrings) {","lastModifiedDate":"2022-10-17"},{"lineNumber":62,"author":{"gitId":"emptygx"},"content":"        this.keywords \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"emptygx"},"content":"        this.nameKeywords \u003d nameKeywords;","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"emptygx"},"content":"        this.phoneKeywords \u003d phoneKeywords;","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"emptygx"},"content":"        this.emailKeywords \u003d emailKeywords;","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"emptygx"},"content":"        this.addressKeywords \u003d addressKeywords;","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"emptygx"},"content":"        this.statusKeywords \u003d statusKeywords;","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"emptygx"},"content":"        this.noteKeywords \u003d noteKeywords;","lastModifiedDate":"2022-10-13"},{"lineNumber":69,"author":{"gitId":"emptygx"},"content":"        this.tagMap \u003d prefToStrings;","lastModifiedDate":"2022-10-14"},{"lineNumber":70,"author":{"gitId":"ytingtan"},"content":"        this.ratingKeywords \u003d ratingKeywords;","lastModifiedDate":"2022-10-17"},{"lineNumber":71,"author":{"gitId":"emptygx"},"content":"        this.linkKeywords \u003d linkKeywords;","lastModifiedDate":"2022-10-27"},{"lineNumber":72,"author":{"gitId":"emptygx"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":73,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":74,"author":{"gitId":"emptygx"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":75,"author":{"gitId":"emptygx"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2022-10-06"},{"lineNumber":76,"author":{"gitId":"emptygx"},"content":"        if (!keywords.isEmpty()) {","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"emptygx"},"content":"            return keywords.stream()","lastModifiedDate":"2022-10-06"},{"lineNumber":78,"author":{"gitId":"emptygx"},"content":"                    .anyMatch(keyword -\u003e StringUtil.containsPartialWordIgnoreCase(person.getDetailsAsString(),","lastModifiedDate":"2022-10-13"},{"lineNumber":79,"author":{"gitId":"emptygx"},"content":"                            keyword));","lastModifiedDate":"2022-10-13"},{"lineNumber":80,"author":{"gitId":"emptygx"},"content":"        } else {","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"emptygx"},"content":"            for (Prefix p : tagMap.keySet()) {","lastModifiedDate":"2022-10-14"},{"lineNumber":82,"author":{"gitId":"emptygx"},"content":"                UniqueTagList uniqueTagList \u003d person.getTags().get(UniqueTagTypeMap.getTagTypeFromPrefix(p));","lastModifiedDate":"2022-10-14"},{"lineNumber":83,"author":{"gitId":"emptygx"},"content":"                for (String s : tagMap.get(p)) {","lastModifiedDate":"2022-10-14"},{"lineNumber":84,"author":{"gitId":"emptygx"},"content":"                    if (uniqueTagList \u003d\u003d null) {","lastModifiedDate":"2022-10-14"},{"lineNumber":85,"author":{"gitId":"emptygx"},"content":"                        break;","lastModifiedDate":"2022-10-14"},{"lineNumber":86,"author":{"gitId":"emptygx"},"content":"                    }","lastModifiedDate":"2022-10-14"},{"lineNumber":87,"author":{"gitId":"emptygx"},"content":"                    if (uniqueTagList.hasSequenceMatch(s)) {","lastModifiedDate":"2022-10-14"},{"lineNumber":88,"author":{"gitId":"emptygx"},"content":"                        return true;","lastModifiedDate":"2022-10-14"},{"lineNumber":89,"author":{"gitId":"emptygx"},"content":"                    }","lastModifiedDate":"2022-10-14"},{"lineNumber":90,"author":{"gitId":"emptygx"},"content":"                }","lastModifiedDate":"2022-10-14"},{"lineNumber":91,"author":{"gitId":"emptygx"},"content":"            }","lastModifiedDate":"2022-10-14"},{"lineNumber":92,"author":{"gitId":"emptygx"},"content":"            return nameKeywords.stream()","lastModifiedDate":"2022-10-10"},{"lineNumber":93,"author":{"gitId":"emptygx"},"content":"                    .anyMatch(keyword -\u003e StringUtil.containsSequenceIgnoreCase(person.getName().fullName,","lastModifiedDate":"2022-10-10"},{"lineNumber":94,"author":{"gitId":"emptygx"},"content":"                            keyword.fullName))","lastModifiedDate":"2022-10-10"},{"lineNumber":95,"author":{"gitId":"emptygx"},"content":"                    || phoneKeywords.stream()","lastModifiedDate":"2022-10-10"},{"lineNumber":96,"author":{"gitId":"emptygx"},"content":"                    .anyMatch(keyword -\u003e StringUtil.containsSequenceIgnoreCase(person.getPhone().value, keyword.value))","lastModifiedDate":"2022-10-10"},{"lineNumber":97,"author":{"gitId":"emptygx"},"content":"                    || emailKeywords.stream()","lastModifiedDate":"2022-10-10"},{"lineNumber":98,"author":{"gitId":"emptygx"},"content":"                    .anyMatch(keyword -\u003e StringUtil.containsSequenceIgnoreCase(person.getEmail().value, keyword.value))","lastModifiedDate":"2022-10-10"},{"lineNumber":99,"author":{"gitId":"emptygx"},"content":"                    || addressKeywords.stream()","lastModifiedDate":"2022-10-10"},{"lineNumber":100,"author":{"gitId":"emptygx"},"content":"                    .anyMatch(keyword -\u003e StringUtil.containsSequenceIgnoreCase(person.getAddress().value,","lastModifiedDate":"2022-10-10"},{"lineNumber":101,"author":{"gitId":"emptygx"},"content":"                            keyword.value))","lastModifiedDate":"2022-10-10"},{"lineNumber":102,"author":{"gitId":"emptygx"},"content":"                    || statusKeywords.stream()","lastModifiedDate":"2022-10-10"},{"lineNumber":103,"author":{"gitId":"emptygx"},"content":"                    .anyMatch(keyword -\u003e StringUtil.containsSequenceIgnoreCase(person.getStatus().toString(),","lastModifiedDate":"2022-10-10"},{"lineNumber":104,"author":{"gitId":"emptygx"},"content":"                            keyword.toString()))","lastModifiedDate":"2022-10-13"},{"lineNumber":105,"author":{"gitId":"emptygx"},"content":"                    || noteKeywords.stream()","lastModifiedDate":"2022-10-13"},{"lineNumber":106,"author":{"gitId":"emptygx"},"content":"                    .anyMatch(keyword -\u003e StringUtil.containsSequenceIgnoreCase(person.getNote().value,","lastModifiedDate":"2022-10-13"},{"lineNumber":107,"author":{"gitId":"ytingtan"},"content":"                            keyword.value))","lastModifiedDate":"2022-10-17"},{"lineNumber":108,"author":{"gitId":"ytingtan"},"content":"                    || ratingKeywords.stream()","lastModifiedDate":"2022-10-17"},{"lineNumber":109,"author":{"gitId":"ytingtan"},"content":"                    .anyMatch(keyword -\u003e StringUtil.containsSequenceIgnoreCase(person.getRating().toString(),","lastModifiedDate":"2022-10-17"},{"lineNumber":110,"author":{"gitId":"emptygx"},"content":"                            keyword.toString()))","lastModifiedDate":"2022-10-27"},{"lineNumber":111,"author":{"gitId":"emptygx"},"content":"                    || linkKeywords.stream()","lastModifiedDate":"2022-10-27"},{"lineNumber":112,"author":{"gitId":"emptygx"},"content":"                    .anyMatch(keyword -\u003e StringUtil.containsSequenceIgnoreCase(person.getLinks().toString(),","lastModifiedDate":"2022-10-27"},{"lineNumber":113,"author":{"gitId":"ytingtan"},"content":"                            keyword.toString()));","lastModifiedDate":"2022-10-17"},{"lineNumber":114,"author":{"gitId":"emptygx"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":115,"author":{"gitId":"emptygx"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":116,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":117,"author":{"gitId":"emptygx"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":118,"author":{"gitId":"emptygx"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-06"},{"lineNumber":119,"author":{"gitId":"emptygx"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-06"},{"lineNumber":120,"author":{"gitId":"emptygx"},"content":"                || (other instanceof DetailsContainKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-10-06"},{"lineNumber":121,"author":{"gitId":"emptygx"},"content":"                \u0026\u0026 keywords.equals(((DetailsContainKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2022-10-06"},{"lineNumber":122,"author":{"gitId":"emptygx"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":123,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":124,"author":{"gitId":"emptygx"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"ytingtan":8,"emptygx":116}},{"path":"src/main/java/seedu/clinkedin/model/person/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.model.person;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"emptygx"},"content":" * Represents a Person\u0027s email in the clinkedin book.","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"emptygx"},"content":"     * @param email A valid email clinkedin.","lastModifiedDate":"2022-10-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"pratham31012002"},"content":"    public Email(String email) throws IllegalArgumentException {","lastModifiedDate":"2022-10-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"emptygx":4,"pratham31012002":1,"-":66}},{"path":"src/main/java/seedu/clinkedin/model/person/EmailContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.model.person;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"ytingtan"},"content":"import java.util.List;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"ytingtan"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.commons.util.StringUtil;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"ytingtan"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"ytingtan"},"content":" * Tests that a {@code Person}\u0027s {@code Email} matches any of the keywords given.","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"ytingtan"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"ytingtan"},"content":"public class EmailContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"ytingtan"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"ytingtan"},"content":"    public EmailContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"ytingtan"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"ytingtan"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"ytingtan"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"ytingtan"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"ytingtan"},"content":"        return keywords.stream()","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"ytingtan"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsSequenceIgnoreCase(person.getEmail().toString(), keyword));","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"ytingtan"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"ytingtan"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"ytingtan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"ytingtan"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"ytingtan"},"content":"                || (other instanceof EmailContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"ytingtan"},"content":"                \u0026\u0026 keywords.equals(((EmailContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"ytingtan"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"ytingtan"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"ytingtan":29,"emptygx":2}},{"path":"src/main/java/seedu/clinkedin/model/person/LocationContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.model.person;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"ytingtan"},"content":"import java.util.List;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"ytingtan"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.commons.util.StringUtil;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"ytingtan"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"ytingtan"},"content":" * Tests that a {@code Person}\u0027s {@code Address} matches any of the keywords given.","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"ytingtan"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"ytingtan"},"content":"public class LocationContainsKeywordsPredicate","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"ytingtan"},"content":"        implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"ytingtan"},"content":"    final List\u003cString\u003e keywords;","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"ytingtan"},"content":"    public LocationContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"ytingtan"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"ytingtan"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"ytingtan"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"ytingtan"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"ytingtan"},"content":"        return keywords.stream()","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"emptygx"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsSequenceIgnoreCase(person.getAddress().toString(), keyword));","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"ytingtan"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"ytingtan"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"ytingtan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"ytingtan"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"ytingtan"},"content":"                || (other instanceof LocationContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"ytingtan"},"content":"                \u0026\u0026 keywords.equals(((LocationContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"ytingtan"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"ytingtan"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"ytingtan":29,"emptygx":3}},{"path":"src/main/java/seedu/clinkedin/model/person/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.model.person;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"emptygx"},"content":" * Represents a Person\u0027s name in the clinkedin book.","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"emptygx"},"content":"     * The first character of the clinkedin must not be a whitespace,","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"pratham31012002"},"content":"    public Name(String name) throws IllegalArgumentException {","lastModifiedDate":"2022-10-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"emptygx":4,"pratham31012002":1,"-":54}},{"path":"src/main/java/seedu/clinkedin/model/person/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.model.person;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.commons.util.StringUtil;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"emptygx"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsSequenceIgnoreCase(person.getName().fullName, keyword));","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"emptygx":3,"-":28}},{"path":"src/main/java/seedu/clinkedin/model/person/Note.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.model.person;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"josephaedan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"josephaedan"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"emptygx"},"content":" * Represents an optional note about a person in the clinkedin book.","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"agarwal-anjali"},"content":" * Guarantees: immutable;}","lastModifiedDate":"2022-10-28"},{"lineNumber":8,"author":{"gitId":"josephaedan"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"josephaedan"},"content":"public class Note {","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"josephaedan"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Notes should only contain alphanumeric characters and spaces, \"","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"josephaedan"},"content":"            + \"and it should not be blank. If you do not want to add a note, please leave the field blank. \"","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"josephaedan"},"content":"            + \"Blank notes will be ignored.\";","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"josephaedan"},"content":"    public final String value;","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"josephaedan"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"josephaedan"},"content":"     * Constructs a {@code note}.","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"josephaedan"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"josephaedan"},"content":"     * @param s A valid note.","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"josephaedan"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"josephaedan"},"content":"    public Note(String s) {","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"josephaedan"},"content":"        requireNonNull(s);","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"pratham31012002"},"content":"        this.value \u003d s.trim();","lastModifiedDate":"2022-10-28"},{"lineNumber":25,"author":{"gitId":"josephaedan"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"josephaedan"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"josephaedan"},"content":"    public String toString() {","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"josephaedan"},"content":"        return value;","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"josephaedan"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"josephaedan"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"josephaedan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"josephaedan"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"josephaedan"},"content":"                || (other instanceof Note // instanceof handles nulls","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"josephaedan"},"content":"                        \u0026\u0026 value.equals(((Note) other).value)); // state check","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"josephaedan"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"josephaedan"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"josephaedan"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"josephaedan"},"content":"        return value.hashCode();","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"josephaedan"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"josephaedan"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"agarwal-anjali":1,"emptygx":2,"josephaedan":40,"pratham31012002":1}},{"path":"src/main/java/seedu/clinkedin/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.model.person;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"pratham31012002"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-24"},{"lineNumber":6,"author":{"gitId":"agarwal-anjali"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-23"},{"lineNumber":7,"author":{"gitId":"agarwal-anjali"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-23"},{"lineNumber":8,"author":{"gitId":"pratham31012002"},"content":"import java.util.List;","lastModifiedDate":"2022-10-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"agarwal-anjali"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"agarwal-anjali"},"content":"import javafx.collections.ObservableMap;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"agarwal-anjali"},"content":"import seedu.clinkedin.model.link.Link;","lastModifiedDate":"2022-10-23"},{"lineNumber":14,"author":{"gitId":"agarwal-anjali"},"content":"import seedu.clinkedin.model.person.exceptions.DuplicateLinkException;","lastModifiedDate":"2022-10-28"},{"lineNumber":15,"author":{"gitId":"agarwal-anjali"},"content":"import seedu.clinkedin.model.person.exceptions.DuplicateNoteException;","lastModifiedDate":"2022-10-28"},{"lineNumber":16,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.exceptions.TagTypeNotFoundException;","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.tag.TagType;","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.tag.UniqueTagList;","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"ytingtan"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2022-10-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"agarwal-anjali"},"content":"    private UniqueTagTypeMap tagTypeMap;","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"ytingtan"},"content":"    private final Status status;","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"josephaedan"},"content":"    private final Note note;","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"ytingtan"},"content":"    private final Rating rating;","lastModifiedDate":"2022-10-17"},{"lineNumber":38,"author":{"gitId":"agarwal-anjali"},"content":"    private final Set\u003cLink\u003e links \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"pratham31012002"},"content":"    public Person(Name name, Phone phone, Email email, Address address, UniqueTagTypeMap tagTypeMap, Status status) {","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"pratham31012002"},"content":"        this(name, phone, email, address, tagTypeMap, status, new Note(\"\"), new Rating(\"0\"),","lastModifiedDate":"2022-10-26"},{"lineNumber":45,"author":{"gitId":"pratham31012002"},"content":"                new HashSet\u003cLink\u003e());","lastModifiedDate":"2022-10-26"},{"lineNumber":46,"author":{"gitId":"josephaedan"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"josephaedan"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"josephaedan"},"content":"     * Overloaded constructor for Person when note is provided.","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"josephaedan"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"pratham31012002"},"content":"    public Person(Name name, Phone phone, Email email, Address address, UniqueTagTypeMap tagTypeMap,","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"agarwal-anjali"},"content":"                  Status status, Note note, Set\u003cLink\u003e links) {","lastModifiedDate":"2022-10-23"},{"lineNumber":53,"author":{"gitId":"pratham31012002"},"content":"        this(name, phone, email, address, tagTypeMap, status, note, new Rating(\"0\"), links);","lastModifiedDate":"2022-10-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"ytingtan"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":57,"author":{"gitId":"ytingtan"},"content":"     * Overloaded constructor for Person when rating is provided.","lastModifiedDate":"2022-10-17"},{"lineNumber":58,"author":{"gitId":"ytingtan"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":59,"author":{"gitId":"ytingtan"},"content":"    public Person(Name name, Phone phone, Email email, Address address, UniqueTagTypeMap tagTypeMap,","lastModifiedDate":"2022-10-17"},{"lineNumber":60,"author":{"gitId":"ytingtan"},"content":"                  Status status, Rating rating) {","lastModifiedDate":"2022-10-17"},{"lineNumber":61,"author":{"gitId":"pratham31012002"},"content":"        this(name, phone, email, address, tagTypeMap, status, new Note(\"\"), rating, new HashSet\u003cLink\u003e());","lastModifiedDate":"2022-10-26"},{"lineNumber":62,"author":{"gitId":"ytingtan"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":63,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":64,"author":{"gitId":"ytingtan"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":65,"author":{"gitId":"ytingtan"},"content":"     * Overloaded constructor for Person when note and rating is provided.","lastModifiedDate":"2022-10-17"},{"lineNumber":66,"author":{"gitId":"ytingtan"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":67,"author":{"gitId":"ytingtan"},"content":"    public Person(Name name, Phone phone, Email email, Address address, UniqueTagTypeMap tagTypeMap,","lastModifiedDate":"2022-10-17"},{"lineNumber":68,"author":{"gitId":"ytingtan"},"content":"                  Status status, Note note, Rating rating, Set\u003cLink\u003e links) {","lastModifiedDate":"2022-10-25"},{"lineNumber":69,"author":{"gitId":"pratham31012002"},"content":"        requireAllNonNull(name, phone, email, address, tagTypeMap, status, note, rating, links);","lastModifiedDate":"2022-10-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":74,"author":{"gitId":"agarwal-anjali"},"content":"        this.tagTypeMap \u003d tagTypeMap;","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"josephaedan"},"content":"        this.status \u003d status;","lastModifiedDate":"2022-10-12"},{"lineNumber":76,"author":{"gitId":"josephaedan"},"content":"        this.note \u003d note;","lastModifiedDate":"2022-10-12"},{"lineNumber":77,"author":{"gitId":"ytingtan"},"content":"        this.rating \u003d rating;","lastModifiedDate":"2022-10-17"},{"lineNumber":78,"author":{"gitId":"ytingtan"},"content":"        this.links.addAll(links);","lastModifiedDate":"2022-10-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":95,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":96,"author":{"gitId":"josephaedan"},"content":"    public Note getNote() {","lastModifiedDate":"2022-10-12"},{"lineNumber":97,"author":{"gitId":"josephaedan"},"content":"        return note;","lastModifiedDate":"2022-10-12"},{"lineNumber":98,"author":{"gitId":"emptygx"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":99,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":104,"author":{"gitId":"agarwal-anjali"},"content":"    public ObservableMap\u003cTagType, UniqueTagList\u003e getTags() {","lastModifiedDate":"2022-10-10"},{"lineNumber":105,"author":{"gitId":"agarwal-anjali"},"content":"        return tagTypeMap.asUnmodifiableObservableMap();","lastModifiedDate":"2022-10-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"ytingtan"},"content":"    public Status getStatus() {","lastModifiedDate":"2022-10-09"},{"lineNumber":109,"author":{"gitId":"ytingtan"},"content":"        return status;","lastModifiedDate":"2022-10-09"},{"lineNumber":110,"author":{"gitId":"ytingtan"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":111,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":112,"author":{"gitId":"ytingtan"},"content":"    public Rating getRating() {","lastModifiedDate":"2022-10-17"},{"lineNumber":113,"author":{"gitId":"ytingtan"},"content":"        return rating;","lastModifiedDate":"2022-10-17"},{"lineNumber":114,"author":{"gitId":"ytingtan"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":115,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":116,"author":{"gitId":"emptygx"},"content":"    public int getTagCount() {","lastModifiedDate":"2022-10-23"},{"lineNumber":117,"author":{"gitId":"emptygx"},"content":"        return tagTypeMap.getTagCount();","lastModifiedDate":"2022-10-23"},{"lineNumber":118,"author":{"gitId":"emptygx"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":119,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":120,"author":{"gitId":"agarwal-anjali"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":121,"author":{"gitId":"agarwal-anjali"},"content":"     * Returns an immutable link set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2022-10-23"},{"lineNumber":122,"author":{"gitId":"agarwal-anjali"},"content":"     * if modification is attempted.","lastModifiedDate":"2022-10-23"},{"lineNumber":123,"author":{"gitId":"agarwal-anjali"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":124,"author":{"gitId":"agarwal-anjali"},"content":"    public Set\u003cLink\u003e getLinks() {","lastModifiedDate":"2022-10-23"},{"lineNumber":125,"author":{"gitId":"agarwal-anjali"},"content":"        return Collections.unmodifiableSet(links);","lastModifiedDate":"2022-10-23"},{"lineNumber":126,"author":{"gitId":"ytingtan"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":127,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2018-08-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getAddress().equals(getAddress())","lastModifiedDate":"2018-08-14"},{"lineNumber":160,"author":{"gitId":"ytingtan"},"content":"                \u0026\u0026 otherPerson.getTags().equals(getTags())","lastModifiedDate":"2022-10-09"},{"lineNumber":161,"author":{"gitId":"josephaedan"},"content":"                \u0026\u0026 otherPerson.getNote().equals(getNote())","lastModifiedDate":"2022-10-12"},{"lineNumber":162,"author":{"gitId":"ytingtan"},"content":"                \u0026\u0026 otherPerson.getStatus().equals(getStatus())","lastModifiedDate":"2022-10-17"},{"lineNumber":163,"author":{"gitId":"ytingtan"},"content":"                \u0026\u0026 otherPerson.getRating().equals(getRating())","lastModifiedDate":"2022-10-25"},{"lineNumber":164,"author":{"gitId":"agarwal-anjali"},"content":"                \u0026\u0026 otherPerson.getLinks().equals(getLinks());","lastModifiedDate":"2022-10-25"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":170,"author":{"gitId":"ytingtan"},"content":"        return Objects.hash(name, phone, email, address, tagTypeMap, status, note, rating,","lastModifiedDate":"2022-10-25"},{"lineNumber":171,"author":{"gitId":"ytingtan"},"content":"                           links);","lastModifiedDate":"2022-10-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":174,"author":{"gitId":"emptygx"},"content":"    public String getDetailsAsString() {","lastModifiedDate":"2022-10-10"},{"lineNumber":175,"author":{"gitId":"ytingtan"},"content":"        return String.format(\"%s %s %s %s %s %s %s %s %s\", name, phone, email, address, status,","lastModifiedDate":"2022-10-25"},{"lineNumber":176,"author":{"gitId":"ytingtan"},"content":"                tagTypeMap, note, rating, links);","lastModifiedDate":"2022-10-25"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":179,"author":{"gitId":"pratham31012002"},"content":"    public List\u003cString[]\u003e getDetailsAsArray() {","lastModifiedDate":"2022-10-24"},{"lineNumber":180,"author":{"gitId":"pratham31012002"},"content":"        List\u003cString[]\u003e personDetails \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-24"},{"lineNumber":181,"author":{"gitId":"pratham31012002"},"content":"        personDetails.add(new String[]{\"Name\", name.fullName});","lastModifiedDate":"2022-10-24"},{"lineNumber":182,"author":{"gitId":"pratham31012002"},"content":"        personDetails.add(new String[]{\"Phone\", phone.value});","lastModifiedDate":"2022-10-24"},{"lineNumber":183,"author":{"gitId":"pratham31012002"},"content":"        personDetails.add(new String[]{\"Email\", email.value});","lastModifiedDate":"2022-10-24"},{"lineNumber":184,"author":{"gitId":"pratham31012002"},"content":"        personDetails.add(new String[]{\"Address\", address.value});","lastModifiedDate":"2022-10-24"},{"lineNumber":185,"author":{"gitId":"pratham31012002"},"content":"        personDetails.add(new String[]{\"Status\", status.status});","lastModifiedDate":"2022-10-24"},{"lineNumber":186,"author":{"gitId":"pratham31012002"},"content":"        personDetails.add(new String[]{\"Note\", note.value});","lastModifiedDate":"2022-10-24"},{"lineNumber":187,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":188,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":189,"author":{"gitId":"pratham31012002"},"content":"        ObservableMap\u003cTagType, UniqueTagList\u003e tags \u003d getTags();","lastModifiedDate":"2022-10-24"},{"lineNumber":190,"author":{"gitId":"pratham31012002"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2022-10-24"},{"lineNumber":191,"author":{"gitId":"pratham31012002"},"content":"            tags.forEach((tagType, tagList) -\u003e {","lastModifiedDate":"2022-10-24"},{"lineNumber":192,"author":{"gitId":"pratham31012002"},"content":"                List\u003cString\u003e tagWithTagType \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-24"},{"lineNumber":193,"author":{"gitId":"pratham31012002"},"content":"                tagWithTagType.add(\"Tag:\" + tagType.getPrefix() + \"-\" + tagType.getTagTypeName());","lastModifiedDate":"2022-10-28"},{"lineNumber":194,"author":{"gitId":"pratham31012002"},"content":"                tagWithTagType.addAll(tagList.getAsList());","lastModifiedDate":"2022-10-24"},{"lineNumber":195,"author":{"gitId":"pratham31012002"},"content":"                String[] tagWithTagTypeArray \u003d tagWithTagType.toArray(new String[tagWithTagType.size()]);","lastModifiedDate":"2022-10-24"},{"lineNumber":196,"author":{"gitId":"pratham31012002"},"content":"                personDetails.add(tagWithTagTypeArray);","lastModifiedDate":"2022-10-24"},{"lineNumber":197,"author":{"gitId":"pratham31012002"},"content":"            });","lastModifiedDate":"2022-10-24"},{"lineNumber":198,"author":{"gitId":"pratham31012002"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":199,"author":{"gitId":"pratham31012002"},"content":"        personDetails.add(new String[]{\"Rating\", rating.toString()});","lastModifiedDate":"2022-10-26"},{"lineNumber":200,"author":{"gitId":"pratham31012002"},"content":"        String[] linklist \u003d new String[links.size() + 1];","lastModifiedDate":"2022-10-26"},{"lineNumber":201,"author":{"gitId":"pratham31012002"},"content":"        linklist[0] \u003d \"Links\";","lastModifiedDate":"2022-10-26"},{"lineNumber":202,"author":{"gitId":"pratham31012002"},"content":"        int i \u003d 1;","lastModifiedDate":"2022-10-26"},{"lineNumber":203,"author":{"gitId":"pratham31012002"},"content":"        for (Link l: links) {","lastModifiedDate":"2022-10-26"},{"lineNumber":204,"author":{"gitId":"pratham31012002"},"content":"            linklist[i] \u003d l.toString();","lastModifiedDate":"2022-10-26"},{"lineNumber":205,"author":{"gitId":"pratham31012002"},"content":"            i++;","lastModifiedDate":"2022-10-26"},{"lineNumber":206,"author":{"gitId":"pratham31012002"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":207,"author":{"gitId":"pratham31012002"},"content":"        personDetails.add(linklist);","lastModifiedDate":"2022-10-26"},{"lineNumber":208,"author":{"gitId":"pratham31012002"},"content":"        personDetails.add(new String[]{});","lastModifiedDate":"2022-10-24"},{"lineNumber":209,"author":{"gitId":"pratham31012002"},"content":"        return personDetails;","lastModifiedDate":"2022-10-24"},{"lineNumber":210,"author":{"gitId":"pratham31012002"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":211,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":216,"author":{"gitId":"josephaedan"},"content":"                .append(\"\\n\\nContact Information: \")","lastModifiedDate":"2022-10-28"},{"lineNumber":217,"author":{"gitId":"josephaedan"},"content":"                .append(\"\\n- Phone: \")","lastModifiedDate":"2022-10-28"},{"lineNumber":218,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":219,"author":{"gitId":"josephaedan"},"content":"                .append(\"\\n- Email: \")","lastModifiedDate":"2022-10-28"},{"lineNumber":220,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":221,"author":{"gitId":"josephaedan"},"content":"                .append(\"\\n- Address: \")","lastModifiedDate":"2022-10-28"},{"lineNumber":222,"author":{"gitId":"-"},"content":"                .append(getAddress());","lastModifiedDate":"2020-12-11"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":224,"author":{"gitId":"pratham31012002"},"content":"        ObservableMap\u003cTagType, UniqueTagList\u003e tags \u003d getTags();","lastModifiedDate":"2022-10-09"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":226,"author":{"gitId":"josephaedan"},"content":"            builder.append(\"\\n\\nTags:\\n\");","lastModifiedDate":"2022-10-28"},{"lineNumber":227,"author":{"gitId":"josephaedan"},"content":"            tags.forEach((tagType, tagList) -\u003e builder.append(String.format(\"- %s: %s\\n\", tagType.toString(),","lastModifiedDate":"2022-10-28"},{"lineNumber":228,"author":{"gitId":"pratham31012002"},"content":"                    tagList.toString())));","lastModifiedDate":"2022-10-12"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":230,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":231,"author":{"gitId":"agarwal-anjali"},"content":"        Set\u003cLink\u003e links \u003d getLinks();","lastModifiedDate":"2022-10-23"},{"lineNumber":232,"author":{"gitId":"agarwal-anjali"},"content":"        if (!links.isEmpty()) {","lastModifiedDate":"2022-10-23"},{"lineNumber":233,"author":{"gitId":"josephaedan"},"content":"            builder.append(\"\\nLinks: \");","lastModifiedDate":"2022-10-28"},{"lineNumber":234,"author":{"gitId":"agarwal-anjali"},"content":"            links.forEach(builder::append);","lastModifiedDate":"2022-10-23"},{"lineNumber":235,"author":{"gitId":"agarwal-anjali"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":236,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":237,"author":{"gitId":"josephaedan"},"content":"        builder.append(\"\\n\\nStatus: \")","lastModifiedDate":"2022-10-28"},{"lineNumber":238,"author":{"gitId":"josephaedan"},"content":"                .append(getStatus());","lastModifiedDate":"2022-10-28"},{"lineNumber":239,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":240,"author":{"gitId":"josephaedan"},"content":"        builder.append(\"\\n\\nRating: \")","lastModifiedDate":"2022-10-28"},{"lineNumber":241,"author":{"gitId":"josephaedan"},"content":"                .append(getRating().value \u003e 0 ? getRating() : \"No rating given\");","lastModifiedDate":"2022-10-28"},{"lineNumber":242,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":243,"author":{"gitId":"josephaedan"},"content":"        if (!getNote().value.equals(\"\")) {","lastModifiedDate":"2022-10-28"},{"lineNumber":244,"author":{"gitId":"josephaedan"},"content":"            builder.append(\"\\n\\nNote: \")","lastModifiedDate":"2022-10-28"},{"lineNumber":245,"author":{"gitId":"josephaedan"},"content":"                    .append(getNote());","lastModifiedDate":"2022-10-28"},{"lineNumber":246,"author":{"gitId":"josephaedan"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":247,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":251,"author":{"gitId":"pratham31012002"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":252,"author":{"gitId":"pratham31012002"},"content":"     * Deletes tagType for the person if present.","lastModifiedDate":"2022-10-12"},{"lineNumber":253,"author":{"gitId":"pratham31012002"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":254,"author":{"gitId":"pratham31012002"},"content":"    public void deleteTagType(TagType tagType) throws TagTypeNotFoundException {","lastModifiedDate":"2022-10-12"},{"lineNumber":255,"author":{"gitId":"pratham31012002"},"content":"        if (this.tagTypeMap.contains(tagType)) {","lastModifiedDate":"2022-10-12"},{"lineNumber":256,"author":{"gitId":"pratham31012002"},"content":"            this.tagTypeMap.removeTagType(tagType);","lastModifiedDate":"2022-10-12"},{"lineNumber":257,"author":{"gitId":"pratham31012002"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":258,"author":{"gitId":"pratham31012002"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":259,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":260,"author":{"gitId":"pratham31012002"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":261,"author":{"gitId":"pratham31012002"},"content":"     * Sets tagTypeMap for the person.","lastModifiedDate":"2022-10-13"},{"lineNumber":262,"author":{"gitId":"pratham31012002"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":263,"author":{"gitId":"pratham31012002"},"content":"    public void setTagTypeMap(UniqueTagTypeMap tagTypeMap) throws TagTypeNotFoundException {","lastModifiedDate":"2022-10-13"},{"lineNumber":264,"author":{"gitId":"pratham31012002"},"content":"        this.tagTypeMap.setTagTypeMap(tagTypeMap);","lastModifiedDate":"2022-10-13"},{"lineNumber":265,"author":{"gitId":"pratham31012002"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":266,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":267,"author":{"gitId":"ytingtan"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":268,"author":{"gitId":"ytingtan"},"content":"     * Compares the person and the input person to decide rating order.","lastModifiedDate":"2022-10-28"},{"lineNumber":269,"author":{"gitId":"ytingtan"},"content":"     * @param other input Person","lastModifiedDate":"2022-10-28"},{"lineNumber":270,"author":{"gitId":"ytingtan"},"content":"     * @return 1 if this person has a higher rating than other, -1 otherwise.","lastModifiedDate":"2022-10-28"},{"lineNumber":271,"author":{"gitId":"ytingtan"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":272,"author":{"gitId":"ytingtan"},"content":"    public int compareByRating(Person other) {","lastModifiedDate":"2022-10-28"},{"lineNumber":273,"author":{"gitId":"ytingtan"},"content":"        return this.rating.compare(other.rating);","lastModifiedDate":"2022-10-28"},{"lineNumber":274,"author":{"gitId":"ytingtan"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":275,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":276,"author":{"gitId":"ytingtan"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":277,"author":{"gitId":"agarwal-anjali"},"content":"     * Adds new links to existing links of a person.","lastModifiedDate":"2022-10-28"},{"lineNumber":278,"author":{"gitId":"agarwal-anjali"},"content":"     * @param linksToAdd Links to be added to the person.","lastModifiedDate":"2022-10-28"},{"lineNumber":279,"author":{"gitId":"agarwal-anjali"},"content":"     * @return Set of links after adding new links to existing links.","lastModifiedDate":"2022-10-28"},{"lineNumber":280,"author":{"gitId":"agarwal-anjali"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":281,"author":{"gitId":"agarwal-anjali"},"content":"    public Set\u003cLink\u003e mergeLinks(Set\u003cLink\u003e linksToAdd) {","lastModifiedDate":"2022-10-28"},{"lineNumber":282,"author":{"gitId":"agarwal-anjali"},"content":"        Set\u003cLink\u003e mergedLinks \u003d new HashSet\u003c\u003e(links);","lastModifiedDate":"2022-10-28"},{"lineNumber":283,"author":{"gitId":"agarwal-anjali"},"content":"        for (Link l: linksToAdd) {","lastModifiedDate":"2022-10-28"},{"lineNumber":284,"author":{"gitId":"agarwal-anjali"},"content":"            if (links.contains(l)) {","lastModifiedDate":"2022-10-28"},{"lineNumber":285,"author":{"gitId":"agarwal-anjali"},"content":"                throw new DuplicateLinkException(l.toString());","lastModifiedDate":"2022-10-28"},{"lineNumber":286,"author":{"gitId":"agarwal-anjali"},"content":"            } else {","lastModifiedDate":"2022-10-28"},{"lineNumber":287,"author":{"gitId":"agarwal-anjali"},"content":"                mergedLinks.add(l);","lastModifiedDate":"2022-10-28"},{"lineNumber":288,"author":{"gitId":"agarwal-anjali"},"content":"            }","lastModifiedDate":"2022-10-28"},{"lineNumber":289,"author":{"gitId":"agarwal-anjali"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":290,"author":{"gitId":"agarwal-anjali"},"content":"        return mergedLinks;","lastModifiedDate":"2022-10-28"},{"lineNumber":291,"author":{"gitId":"agarwal-anjali"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":292,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":293,"author":{"gitId":"agarwal-anjali"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":294,"author":{"gitId":"agarwal-anjali"},"content":"     * Adds new notes to existing notes of a person.","lastModifiedDate":"2022-10-28"},{"lineNumber":295,"author":{"gitId":"agarwal-anjali"},"content":"     * @param note Notes to be added.","lastModifiedDate":"2022-10-28"},{"lineNumber":296,"author":{"gitId":"agarwal-anjali"},"content":"     * @return Note after adding new note to the existing note.","lastModifiedDate":"2022-10-28"},{"lineNumber":297,"author":{"gitId":"agarwal-anjali"},"content":"     * @throws DuplicateNoteException","lastModifiedDate":"2022-10-28"},{"lineNumber":298,"author":{"gitId":"agarwal-anjali"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":299,"author":{"gitId":"agarwal-anjali"},"content":"    public Note mergeNote(Note note) throws DuplicateNoteException {","lastModifiedDate":"2022-10-28"},{"lineNumber":300,"author":{"gitId":"agarwal-anjali"},"content":"        if (this.note.value.equals(note.value)) {","lastModifiedDate":"2022-10-28"},{"lineNumber":301,"author":{"gitId":"agarwal-anjali"},"content":"            throw new DuplicateNoteException(note.value);","lastModifiedDate":"2022-10-28"},{"lineNumber":302,"author":{"gitId":"agarwal-anjali"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":303,"author":{"gitId":"agarwal-anjali"},"content":"        return new Note(this.note.value + \"\\n\" + note.value);","lastModifiedDate":"2022-10-28"},{"lineNumber":304,"author":{"gitId":"agarwal-anjali"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":305,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"agarwal-anjali":53,"ytingtan":47,"emptygx":12,"pratham31012002":59,"josephaedan":29,"-":105}},{"path":"src/main/java/seedu/clinkedin/model/person/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.model.person;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"emptygx"},"content":" * Represents a Person\u0027s phone number in the clinkedin book.","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"pratham31012002"},"content":"    public Phone(String phone) throws IllegalArgumentException {","lastModifiedDate":"2022-10-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"emptygx":3,"pratham31012002":1,"-":49}},{"path":"src/main/java/seedu/clinkedin/model/person/PhoneContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.model.person;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"emptygx"},"content":"import java.util.List;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"emptygx"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.commons.util.StringUtil;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"emptygx"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"emptygx"},"content":" * Tests that a {@code Person}\u0027s {@code Address} matches any of the keywords given.","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"emptygx"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"emptygx"},"content":"public class PhoneContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"emptygx"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"emptygx"},"content":"    public PhoneContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"emptygx"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"emptygx"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"emptygx"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"emptygx"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"emptygx"},"content":"        return keywords.stream()","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"emptygx"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsSequenceIgnoreCase(person.getPhone().toString(), keyword));","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"emptygx"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"emptygx"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"emptygx"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"emptygx"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"emptygx"},"content":"                || (other instanceof PhoneContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"emptygx"},"content":"                \u0026\u0026 keywords.equals(((PhoneContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"emptygx"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"emptygx"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"emptygx":31}},{"path":"src/main/java/seedu/clinkedin/model/person/Rating.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ytingtan"},"content":"package seedu.clinkedin.model.person;","lastModifiedDate":"2022-10-17"},{"lineNumber":2,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":3,"author":{"gitId":"ytingtan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-17"},{"lineNumber":4,"author":{"gitId":"ytingtan"},"content":"import static seedu.clinkedin.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-17"},{"lineNumber":5,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":6,"author":{"gitId":"ytingtan"},"content":"/**","lastModifiedDate":"2022-10-17"},{"lineNumber":7,"author":{"gitId":"ytingtan"},"content":" * Represents a Person\u0027s rating in the address book.","lastModifiedDate":"2022-10-17"},{"lineNumber":8,"author":{"gitId":"ytingtan"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidRatingStr(String)}","lastModifiedDate":"2022-10-17"},{"lineNumber":9,"author":{"gitId":"ytingtan"},"content":" */","lastModifiedDate":"2022-10-17"},{"lineNumber":10,"author":{"gitId":"ytingtan"},"content":"public class Rating {","lastModifiedDate":"2022-10-17"},{"lineNumber":11,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":12,"author":{"gitId":"ytingtan"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Rating should only be an integer between 1 to 10 inclusive.\";","lastModifiedDate":"2022-10-17"},{"lineNumber":13,"author":{"gitId":"ytingtan"},"content":"    public static final String VALIDATION_REGEX \u003d \"/^([0-9]|10)$/\";","lastModifiedDate":"2022-10-17"},{"lineNumber":14,"author":{"gitId":"ytingtan"},"content":"    public final int value;","lastModifiedDate":"2022-10-17"},{"lineNumber":15,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":16,"author":{"gitId":"ytingtan"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":17,"author":{"gitId":"ytingtan"},"content":"     * Constructs a {@code Rating}.","lastModifiedDate":"2022-10-17"},{"lineNumber":18,"author":{"gitId":"ytingtan"},"content":"     *","lastModifiedDate":"2022-10-17"},{"lineNumber":19,"author":{"gitId":"ytingtan"},"content":"     * @param ratingStr A valid rating number.","lastModifiedDate":"2022-10-17"},{"lineNumber":20,"author":{"gitId":"ytingtan"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":21,"author":{"gitId":"pratham31012002"},"content":"    public Rating(String ratingStr) throws IllegalArgumentException {","lastModifiedDate":"2022-10-28"},{"lineNumber":22,"author":{"gitId":"ytingtan"},"content":"        requireNonNull(ratingStr);","lastModifiedDate":"2022-10-17"},{"lineNumber":23,"author":{"gitId":"ytingtan"},"content":"        checkArgument(isValidRatingStr(ratingStr), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-17"},{"lineNumber":24,"author":{"gitId":"ytingtan"},"content":"        int rating \u003d Integer.parseInt(ratingStr);","lastModifiedDate":"2022-10-17"},{"lineNumber":25,"author":{"gitId":"ytingtan"},"content":"        value \u003d rating;","lastModifiedDate":"2022-10-17"},{"lineNumber":26,"author":{"gitId":"ytingtan"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":27,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":28,"author":{"gitId":"ytingtan"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":29,"author":{"gitId":"ytingtan"},"content":"     * Returns true if a given string can be parsed into an integer and is between 1 and 10 inclusive.","lastModifiedDate":"2022-10-17"},{"lineNumber":30,"author":{"gitId":"ytingtan"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":31,"author":{"gitId":"ytingtan"},"content":"    public static boolean isValidRatingStr(String test) {","lastModifiedDate":"2022-10-17"},{"lineNumber":32,"author":{"gitId":"ytingtan"},"content":"        return test.equals(\"0\") || test.equals(\"1\") || test.equals(\"2\") || test.equals(\"3\") || test.equals(\"4\")","lastModifiedDate":"2022-10-24"},{"lineNumber":33,"author":{"gitId":"ytingtan"},"content":"                || test.equals(\"5\") || test.equals(\"6\") || test.equals(\"7\") || test.equals(\"8\") || test.equals(\"9\")","lastModifiedDate":"2022-10-24"},{"lineNumber":34,"author":{"gitId":"ytingtan"},"content":"                || test.equals(\"10\");","lastModifiedDate":"2022-10-24"},{"lineNumber":35,"author":{"gitId":"ytingtan"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":36,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":37,"author":{"gitId":"ytingtan"},"content":"    @Override","lastModifiedDate":"2022-10-17"},{"lineNumber":38,"author":{"gitId":"ytingtan"},"content":"    public String toString() {","lastModifiedDate":"2022-10-17"},{"lineNumber":39,"author":{"gitId":"ytingtan"},"content":"        return Integer.toString(value);","lastModifiedDate":"2022-10-17"},{"lineNumber":40,"author":{"gitId":"ytingtan"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":41,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":42,"author":{"gitId":"ytingtan"},"content":"    @Override","lastModifiedDate":"2022-10-17"},{"lineNumber":43,"author":{"gitId":"ytingtan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-17"},{"lineNumber":44,"author":{"gitId":"ytingtan"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-17"},{"lineNumber":45,"author":{"gitId":"ytingtan"},"content":"                || (other instanceof Rating // instanceof handles nulls","lastModifiedDate":"2022-10-17"},{"lineNumber":46,"author":{"gitId":"ytingtan"},"content":"                \u0026\u0026 value \u003d\u003d (((Rating) other).value)); // state check","lastModifiedDate":"2022-10-17"},{"lineNumber":47,"author":{"gitId":"ytingtan"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":48,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":49,"author":{"gitId":"ytingtan"},"content":"    @Override","lastModifiedDate":"2022-10-17"},{"lineNumber":50,"author":{"gitId":"ytingtan"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-17"},{"lineNumber":51,"author":{"gitId":"ytingtan"},"content":"        return Integer.toString(value).hashCode();","lastModifiedDate":"2022-10-17"},{"lineNumber":52,"author":{"gitId":"ytingtan"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":53,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":54,"author":{"gitId":"ytingtan"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":55,"author":{"gitId":"ytingtan"},"content":"     * Compares value of rating.","lastModifiedDate":"2022-10-28"},{"lineNumber":56,"author":{"gitId":"ytingtan"},"content":"     * Makes use of java compareTo() method","lastModifiedDate":"2022-10-28"},{"lineNumber":57,"author":{"gitId":"ytingtan"},"content":"     * @param other","lastModifiedDate":"2022-10-28"},{"lineNumber":58,"author":{"gitId":"ytingtan"},"content":"     * @return 1 if this is more than other, 0 if equal and -1 if less","lastModifiedDate":"2022-10-28"},{"lineNumber":59,"author":{"gitId":"ytingtan"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":60,"author":{"gitId":"ytingtan"},"content":"    public int compare(Rating other) {","lastModifiedDate":"2022-10-28"},{"lineNumber":61,"author":{"gitId":"ytingtan"},"content":"        Integer rating1 \u003d this.value;","lastModifiedDate":"2022-10-28"},{"lineNumber":62,"author":{"gitId":"ytingtan"},"content":"        Integer rating2 \u003d other.value;","lastModifiedDate":"2022-10-28"},{"lineNumber":63,"author":{"gitId":"ytingtan"},"content":"        return rating1.compareTo(rating2);","lastModifiedDate":"2022-10-28"},{"lineNumber":64,"author":{"gitId":"ytingtan"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":65,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":66,"author":{"gitId":"ytingtan"},"content":"}","lastModifiedDate":"2022-10-17"}],"authorContributionMap":{"ytingtan":65,"pratham31012002":1}},{"path":"src/main/java/seedu/clinkedin/model/person/Status.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.model.person;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"ytingtan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"ytingtan"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"ytingtan"},"content":" * Represents a Person\u0027s status in the address book.","lastModifiedDate":"2022-10-17"},{"lineNumber":8,"author":{"gitId":"ytingtan"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidStatus(String)}","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"ytingtan"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"ytingtan"},"content":"public class Status {","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"ytingtan"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"ytingtan"},"content":"            \"Status should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"ytingtan"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":16,"author":{"gitId":"ytingtan"},"content":"     * The first character of the status must not be a whitespace,","lastModifiedDate":"2022-10-17"},{"lineNumber":17,"author":{"gitId":"ytingtan"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"ytingtan"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"ytingtan"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"ytingtan"},"content":"    public final String status;","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"ytingtan"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"ytingtan"},"content":"     * Constructs a {@code Status}.","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"ytingtan"},"content":"     *","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"ytingtan"},"content":"     * @param s A valid status.","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"ytingtan"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"pratham31012002"},"content":"    public Status(String s) throws IllegalArgumentException {","lastModifiedDate":"2022-10-28"},{"lineNumber":29,"author":{"gitId":"ytingtan"},"content":"        requireNonNull(s);","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"ytingtan"},"content":"        checkArgument(isValidStatus(s), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"ytingtan"},"content":"        status \u003d s;","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"ytingtan"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"ytingtan"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"ytingtan"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"ytingtan"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"ytingtan"},"content":"    public static boolean isValidStatus(String test) {","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"ytingtan"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"ytingtan"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"ytingtan"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"ytingtan"},"content":"    public String toString() {","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"ytingtan"},"content":"        return status;","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"ytingtan"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"ytingtan"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"ytingtan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"ytingtan"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"ytingtan"},"content":"                || (other instanceof Status // instanceof handles nulls","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"ytingtan"},"content":"                \u0026\u0026 status.equals(((Status) other).status)); // state check","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"ytingtan"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"ytingtan"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"ytingtan"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"ytingtan"},"content":"        return status.hashCode();","lastModifiedDate":"2022-10-09"},{"lineNumber":57,"author":{"gitId":"ytingtan"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":58,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":59,"author":{"gitId":"ytingtan"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"ytingtan":56,"emptygx":2,"pratham31012002":1}},{"path":"src/main/java/seedu/clinkedin/model/person/StatusContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.model.person;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"ytingtan"},"content":"import java.util.List;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"ytingtan"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.commons.util.StringUtil;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"ytingtan"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"ytingtan"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"ytingtan"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"ytingtan"},"content":"public class StatusContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"ytingtan"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"ytingtan"},"content":"    public StatusContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"ytingtan"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"ytingtan"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"ytingtan"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"ytingtan"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"ytingtan"},"content":"        return keywords.stream()","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"ytingtan"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getStatus().toString(), keyword));","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"ytingtan"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"ytingtan"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"ytingtan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"ytingtan"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"ytingtan"},"content":"                || (other instanceof StatusContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"ytingtan"},"content":"                \u0026\u0026 keywords.equals(((StatusContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"ytingtan"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"ytingtan"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"ytingtan":29,"emptygx":2}},{"path":"src/main/java/seedu/clinkedin/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.model.person;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"pratham31012002"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"josephaedan"},"content":" * A list of persons that enforces uniqueness between its elements and does not","lastModifiedDate":"2022-10-07"},{"lineNumber":17,"author":{"gitId":"josephaedan"},"content":" * allow nulls.","lastModifiedDate":"2022-10-07"},{"lineNumber":18,"author":{"gitId":"josephaedan"},"content":" * A person is considered unique by comparing using","lastModifiedDate":"2022-10-07"},{"lineNumber":19,"author":{"gitId":"josephaedan"},"content":" * {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2022-10-07"},{"lineNumber":20,"author":{"gitId":"josephaedan"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that","lastModifiedDate":"2022-10-07"},{"lineNumber":21,"author":{"gitId":"josephaedan"},"content":" * the person being added or updated is","lastModifiedDate":"2022-10-07"},{"lineNumber":22,"author":{"gitId":"josephaedan"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of","lastModifiedDate":"2022-10-07"},{"lineNumber":23,"author":{"gitId":"josephaedan"},"content":" * a person uses Person#equals(Object) so","lastModifiedDate":"2022-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":33,"author":{"gitId":"josephaedan"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d FXCollections","lastModifiedDate":"2022-10-07"},{"lineNumber":34,"author":{"gitId":"josephaedan"},"content":"            .unmodifiableObservableList(internalList);","lastModifiedDate":"2022-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"josephaedan"},"content":"     * The person identity of {@code editedPerson} must not be the same as another","lastModifiedDate":"2022-10-07"},{"lineNumber":60,"author":{"gitId":"josephaedan"},"content":"     * existing person in the list.","lastModifiedDate":"2022-10-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"pratham31012002"},"content":"        List\u003cPerson\u003e copy \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-13"},{"lineNumber":103,"author":{"gitId":"pratham31012002"},"content":"        for (Person p: persons) {","lastModifiedDate":"2022-10-13"},{"lineNumber":104,"author":{"gitId":"pratham31012002"},"content":"            copy.add(p);","lastModifiedDate":"2022-10-13"},{"lineNumber":105,"author":{"gitId":"pratham31012002"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":106,"author":{"gitId":"pratham31012002"},"content":"        internalList.setAll(copy);","lastModifiedDate":"2022-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":109,"author":{"gitId":"josephaedan"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":110,"author":{"gitId":"josephaedan"},"content":"     * Get the count of unique persons in the list. Used for displaying information","lastModifiedDate":"2022-10-07"},{"lineNumber":111,"author":{"gitId":"josephaedan"},"content":"     * on total count of candidates.","lastModifiedDate":"2022-10-07"},{"lineNumber":112,"author":{"gitId":"josephaedan"},"content":"     * @return the count of unique persons in the list.","lastModifiedDate":"2022-10-07"},{"lineNumber":113,"author":{"gitId":"josephaedan"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":114,"author":{"gitId":"josephaedan"},"content":"    public int getCount() {","lastModifiedDate":"2022-10-07"},{"lineNumber":115,"author":{"gitId":"josephaedan"},"content":"        return internalList.size();","lastModifiedDate":"2022-10-07"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                || (other instanceof UniquePersonList // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                        \u0026\u0026 internalList.equals(((UniquePersonList) other).internalList));","lastModifiedDate":"2018-08-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":155,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"emptygx":4,"pratham31012002":6,"josephaedan":19,"-":126}},{"path":"src/main/java/seedu/clinkedin/model/person/UniqueTagTypeMap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.model.person;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"pratham31012002"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"pratham31012002"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"pratham31012002"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"pratham31012002"},"content":"import java.util.Map;","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"agarwal-anjali"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"pratham31012002"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"pratham31012002"},"content":"import java.util.stream.StreamSupport;","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"pratham31012002"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"pratham31012002"},"content":"import javafx.collections.ObservableMap;","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.logic.parser.CliSyntax;","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.logic.parser.Prefix;","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.logic.parser.exceptions.DuplicatePrefixException;","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.logic.parser.exceptions.PrefixNotFoundException;","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.exceptions.DuplicateTagTypeException;","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.exceptions.TagTypeNotFoundException;","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.tag.Tag;","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.tag.TagType;","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.tag.UniqueTagList;","lastModifiedDate":"2022-10-15"},{"lineNumber":24,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.tag.exceptions.DuplicateTagException;","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.tag.exceptions.TagNotFoundException;","lastModifiedDate":"2022-10-15"},{"lineNumber":26,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"pratham31012002"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"pratham31012002"},"content":" * A list of tagtypes that enforces uniqueness between its elements and does not","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"pratham31012002"},"content":" * allow nulls.","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"pratham31012002"},"content":" * A tagtype is considered unique by comparing using","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"pratham31012002"},"content":" * {@code TagType#equals(Object)}. As such, adding and updating of","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"pratham31012002"},"content":" * tag types uses TagType#equals(Object) for equality so as to ensure that","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"pratham31012002"},"content":" * the tag type being added or updated is","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"pratham31012002"},"content":" * unique in terms of identity in the UniqueTagTypeList. The removal of","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"pratham31012002"},"content":" * a tag type also uses TagType#equals(Object) so","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"pratham31012002"},"content":" * as to ensure that the tag type with exactly the same fields will be removed.","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"pratham31012002"},"content":" *","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"pratham31012002"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"pratham31012002"},"content":" *","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"pratham31012002"},"content":" * @see TagType#equals(Object)","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"pratham31012002"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"pratham31012002"},"content":"public class UniqueTagTypeMap implements Iterable\u003cTagType\u003e {","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"pratham31012002"},"content":"    private static final Map\u003cPrefix, TagType\u003e initialTagTypeMap \u003d Map.of(","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"pratham31012002"},"content":"            CliSyntax.PREFIX_SKILLTAG, new TagType(\"Skills\", CliSyntax.PREFIX_SKILLTAG),","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"pratham31012002"},"content":"            CliSyntax.PREFIX_DEGREETAG, new TagType(\"Degree\", CliSyntax.PREFIX_DEGREETAG),","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"pratham31012002"},"content":"            CliSyntax.PREFIX_JOBTYPETAG, new TagType(\"Job Type\", CliSyntax.PREFIX_JOBTYPETAG)","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"pratham31012002"},"content":"    );","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"agarwal-anjali"},"content":"    private static Map\u003cPrefix, TagType\u003e prefixMap \u003d new HashMap\u003c\u003e(initialTagTypeMap);","lastModifiedDate":"2022-10-26"},{"lineNumber":49,"author":{"gitId":"pratham31012002"},"content":"    private final ObservableMap\u003cTagType, UniqueTagList\u003e internalMap \u003d FXCollections.observableMap(new HashMap\u003c\u003e());","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"pratham31012002"},"content":"    private final ObservableMap\u003cTagType, UniqueTagList\u003e internalUnmodifiableMap \u003d FXCollections","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"pratham31012002"},"content":"            .unmodifiableObservableMap(internalMap);","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"agarwal-anjali"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"agarwal-anjali"},"content":"     * Adds a new tag type to the existing TAG_TYPES.","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"agarwal-anjali"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"agarwal-anjali"},"content":"    public static void createTagType(Prefix prefix, TagType tagType) throws DuplicatePrefixException,","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"agarwal-anjali"},"content":"            DuplicateTagTypeException {","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"agarwal-anjali"},"content":"        if (prefixMap.keySet().contains(prefix)) {","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"agarwal-anjali"},"content":"            throw new DuplicatePrefixException();","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"agarwal-anjali"},"content":"        } else if (prefixMap.values().stream().anyMatch(val -\u003e val.getTagTypeName().equals(tagType.getTagTypeName()))) {","lastModifiedDate":"2022-10-13"},{"lineNumber":61,"author":{"gitId":"agarwal-anjali"},"content":"            throw new DuplicateTagTypeException();","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"agarwal-anjali"},"content":"        } else {","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"agarwal-anjali"},"content":"            prefixMap.put(prefix, tagType);","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"agarwal-anjali"},"content":"            CliSyntax.addTagPrefix(prefix);","lastModifiedDate":"2022-10-13"},{"lineNumber":65,"author":{"gitId":"agarwal-anjali"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"agarwal-anjali"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"pratham31012002"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":69,"author":{"gitId":"pratham31012002"},"content":"     * Removes tagType from list of tag types.","lastModifiedDate":"2022-10-13"},{"lineNumber":70,"author":{"gitId":"pratham31012002"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":71,"author":{"gitId":"agarwal-anjali"},"content":"    public static void removeExistingTagType(TagType tagType) throws TagTypeNotFoundException {","lastModifiedDate":"2022-10-12"},{"lineNumber":72,"author":{"gitId":"agarwal-anjali"},"content":"        if (prefixMap.values().contains(tagType)) {","lastModifiedDate":"2022-10-12"},{"lineNumber":73,"author":{"gitId":"agarwal-anjali"},"content":"            Prefix prefix \u003d prefixMap.keySet().stream().filter(key -\u003e prefixMap.get(key).equals(tagType))","lastModifiedDate":"2022-10-13"},{"lineNumber":74,"author":{"gitId":"agarwal-anjali"},"content":"                    .collect(Collectors.toList()).get(0);","lastModifiedDate":"2022-10-13"},{"lineNumber":75,"author":{"gitId":"agarwal-anjali"},"content":"            prefixMap.remove(prefix);","lastModifiedDate":"2022-10-13"},{"lineNumber":76,"author":{"gitId":"agarwal-anjali"},"content":"            CliSyntax.removeTagPrefix(prefix);","lastModifiedDate":"2022-10-13"},{"lineNumber":77,"author":{"gitId":"agarwal-anjali"},"content":"        } else {","lastModifiedDate":"2022-10-12"},{"lineNumber":78,"author":{"gitId":"agarwal-anjali"},"content":"            throw new TagTypeNotFoundException();","lastModifiedDate":"2022-10-12"},{"lineNumber":79,"author":{"gitId":"agarwal-anjali"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":80,"author":{"gitId":"agarwal-anjali"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"agarwal-anjali"},"content":"    public static void setExistingTagType(Prefix toRemovePrefix, Prefix prefix, TagType tagType)","lastModifiedDate":"2022-10-13"},{"lineNumber":83,"author":{"gitId":"agarwal-anjali"},"content":"            throws PrefixNotFoundException, TagTypeNotFoundException, DuplicatePrefixException {","lastModifiedDate":"2022-10-13"},{"lineNumber":84,"author":{"gitId":"agarwal-anjali"},"content":"        prefixMap.remove(toRemovePrefix);","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"agarwal-anjali"},"content":"        CliSyntax.removeTagPrefix(toRemovePrefix);","lastModifiedDate":"2022-10-13"},{"lineNumber":86,"author":{"gitId":"agarwal-anjali"},"content":"        UniqueTagTypeMap.createTagType(prefix, tagType);","lastModifiedDate":"2022-10-13"},{"lineNumber":87,"author":{"gitId":"agarwal-anjali"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":88,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"pratham31012002"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":90,"author":{"gitId":"pratham31012002"},"content":"     * Returns true if the list contains an equivalent tag type as the given argument.","lastModifiedDate":"2022-10-09"},{"lineNumber":91,"author":{"gitId":"pratham31012002"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":92,"author":{"gitId":"pratham31012002"},"content":"    public boolean contains(TagType toCheck) {","lastModifiedDate":"2022-10-09"},{"lineNumber":93,"author":{"gitId":"pratham31012002"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-10-09"},{"lineNumber":94,"author":{"gitId":"pratham31012002"},"content":"        return internalMap.containsKey(toCheck);","lastModifiedDate":"2022-10-09"},{"lineNumber":95,"author":{"gitId":"pratham31012002"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":96,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":97,"author":{"gitId":"pratham31012002"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":98,"author":{"gitId":"pratham31012002"},"content":"     * Merges another UniqueTagTypeMap.","lastModifiedDate":"2022-10-09"},{"lineNumber":99,"author":{"gitId":"pratham31012002"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":100,"author":{"gitId":"pratham31012002"},"content":"    public void mergeTagTypeMap(UniqueTagTypeMap tagTypeMap) throws DuplicateTagException {","lastModifiedDate":"2022-10-10"},{"lineNumber":101,"author":{"gitId":"pratham31012002"},"content":"        requireNonNull(tagTypeMap);","lastModifiedDate":"2022-10-09"},{"lineNumber":102,"author":{"gitId":"pratham31012002"},"content":"        boolean isValid \u003d tagTypeMap.toStream().filter(this::contains)","lastModifiedDate":"2022-10-09"},{"lineNumber":103,"author":{"gitId":"pratham31012002"},"content":"                .allMatch(tagType -\u003e !this.getTagList(tagType).containsAny(tagTypeMap.getTagList(tagType)));","lastModifiedDate":"2022-10-09"},{"lineNumber":104,"author":{"gitId":"pratham31012002"},"content":"        if (!isValid) {","lastModifiedDate":"2022-10-09"},{"lineNumber":105,"author":{"gitId":"pratham31012002"},"content":"            throw new DuplicateTagException();","lastModifiedDate":"2022-10-09"},{"lineNumber":106,"author":{"gitId":"pratham31012002"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":107,"author":{"gitId":"pratham31012002"},"content":"        for (TagType t: tagTypeMap) {","lastModifiedDate":"2022-10-09"},{"lineNumber":108,"author":{"gitId":"pratham31012002"},"content":"            if (this.contains(t)) {","lastModifiedDate":"2022-10-09"},{"lineNumber":109,"author":{"gitId":"pratham31012002"},"content":"                this.getTagList(t).merge(tagTypeMap.getTagList(t));","lastModifiedDate":"2022-10-09"},{"lineNumber":110,"author":{"gitId":"pratham31012002"},"content":"            } else {","lastModifiedDate":"2022-10-09"},{"lineNumber":111,"author":{"gitId":"pratham31012002"},"content":"                internalMap.put(t, tagTypeMap.getTagList(t));","lastModifiedDate":"2022-10-09"},{"lineNumber":112,"author":{"gitId":"pratham31012002"},"content":"            }","lastModifiedDate":"2022-10-09"},{"lineNumber":113,"author":{"gitId":"pratham31012002"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":114,"author":{"gitId":"pratham31012002"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":115,"author":{"gitId":"pratham31012002"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":116,"author":{"gitId":"pratham31012002"},"content":"     * Subtracts a UniqueTagTypeMap.","lastModifiedDate":"2022-10-09"},{"lineNumber":117,"author":{"gitId":"pratham31012002"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":118,"author":{"gitId":"pratham31012002"},"content":"    public void removeTags(UniqueTagTypeMap tagTypeMap) throws TagTypeNotFoundException, TagNotFoundException {","lastModifiedDate":"2022-10-09"},{"lineNumber":119,"author":{"gitId":"pratham31012002"},"content":"        requireNonNull(tagTypeMap);","lastModifiedDate":"2022-10-09"},{"lineNumber":120,"author":{"gitId":"pratham31012002"},"content":"        boolean allValidTagTypes \u003d tagTypeMap.toStream().allMatch(this::contains);","lastModifiedDate":"2022-10-09"},{"lineNumber":121,"author":{"gitId":"pratham31012002"},"content":"        if (!allValidTagTypes) {","lastModifiedDate":"2022-10-09"},{"lineNumber":122,"author":{"gitId":"pratham31012002"},"content":"            throw new TagTypeNotFoundException();","lastModifiedDate":"2022-10-09"},{"lineNumber":123,"author":{"gitId":"pratham31012002"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":124,"author":{"gitId":"pratham31012002"},"content":"        boolean allValidTags \u003d tagTypeMap.toStream().allMatch(tagType -\u003e this.getTagList(tagType)","lastModifiedDate":"2022-10-09"},{"lineNumber":125,"author":{"gitId":"pratham31012002"},"content":"                .containsAll(tagTypeMap.getTagList(tagType)));","lastModifiedDate":"2022-10-09"},{"lineNumber":126,"author":{"gitId":"pratham31012002"},"content":"        if (!allValidTags) {","lastModifiedDate":"2022-10-09"},{"lineNumber":127,"author":{"gitId":"pratham31012002"},"content":"            throw new TagNotFoundException();","lastModifiedDate":"2022-10-09"},{"lineNumber":128,"author":{"gitId":"pratham31012002"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":129,"author":{"gitId":"pratham31012002"},"content":"        for (TagType t: tagTypeMap) {","lastModifiedDate":"2022-10-09"},{"lineNumber":130,"author":{"gitId":"pratham31012002"},"content":"            if (!this.contains(t)) {","lastModifiedDate":"2022-10-09"},{"lineNumber":131,"author":{"gitId":"pratham31012002"},"content":"                throw new TagTypeNotFoundException();","lastModifiedDate":"2022-10-09"},{"lineNumber":132,"author":{"gitId":"pratham31012002"},"content":"            }","lastModifiedDate":"2022-10-09"},{"lineNumber":133,"author":{"gitId":"pratham31012002"},"content":"            this.getTagList(t).removeAll(tagTypeMap.getTagList(t));","lastModifiedDate":"2022-10-09"},{"lineNumber":134,"author":{"gitId":"pratham31012002"},"content":"            if (this.getTagList(t).getCount() \u003d\u003d 0) {","lastModifiedDate":"2022-10-13"},{"lineNumber":135,"author":{"gitId":"pratham31012002"},"content":"                this.removeTagType(t);","lastModifiedDate":"2022-10-13"},{"lineNumber":136,"author":{"gitId":"pratham31012002"},"content":"            }","lastModifiedDate":"2022-10-13"},{"lineNumber":137,"author":{"gitId":"pratham31012002"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":138,"author":{"gitId":"pratham31012002"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":139,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":140,"author":{"gitId":"pratham31012002"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":141,"author":{"gitId":"pratham31012002"},"content":"     * Adds a tag for the given tagType.","lastModifiedDate":"2022-10-12"},{"lineNumber":142,"author":{"gitId":"pratham31012002"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":143,"author":{"gitId":"agarwal-anjali"},"content":"    public void mergeTag(TagType tagType, Tag tagName) throws DuplicateTagException {","lastModifiedDate":"2022-10-12"},{"lineNumber":144,"author":{"gitId":"pratham31012002"},"content":"        requireAllNonNull(tagType, tagName);","lastModifiedDate":"2022-10-09"},{"lineNumber":145,"author":{"gitId":"agarwal-anjali"},"content":"        boolean isExisting \u003d this.contains(tagType);","lastModifiedDate":"2022-10-12"},{"lineNumber":146,"author":{"gitId":"agarwal-anjali"},"content":"        if (isExisting) {","lastModifiedDate":"2022-10-12"},{"lineNumber":147,"author":{"gitId":"pratham31012002"},"content":"            this.getTagList(tagType).add(tagName);","lastModifiedDate":"2022-10-09"},{"lineNumber":148,"author":{"gitId":"agarwal-anjali"},"content":"        } else {","lastModifiedDate":"2022-10-12"},{"lineNumber":149,"author":{"gitId":"agarwal-anjali"},"content":"            UniqueTagList tagList \u003d new UniqueTagList();","lastModifiedDate":"2022-10-12"},{"lineNumber":150,"author":{"gitId":"agarwal-anjali"},"content":"            tagList.add(tagName);","lastModifiedDate":"2022-10-12"},{"lineNumber":151,"author":{"gitId":"agarwal-anjali"},"content":"            this.internalMap.put(tagType, tagList);","lastModifiedDate":"2022-10-12"},{"lineNumber":152,"author":{"gitId":"agarwal-anjali"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":153,"author":{"gitId":"pratham31012002"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":154,"author":{"gitId":"pratham31012002"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":155,"author":{"gitId":"pratham31012002"},"content":"     * Replaces the tag type {@code target} in the list with {@code editedTagType}.","lastModifiedDate":"2022-10-09"},{"lineNumber":156,"author":{"gitId":"pratham31012002"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2022-10-09"},{"lineNumber":157,"author":{"gitId":"pratham31012002"},"content":"     * The tag type name of {@code editedTagType} must not be the same as another","lastModifiedDate":"2022-10-09"},{"lineNumber":158,"author":{"gitId":"pratham31012002"},"content":"     * existing tag type in the list.","lastModifiedDate":"2022-10-09"},{"lineNumber":159,"author":{"gitId":"pratham31012002"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":160,"author":{"gitId":"pratham31012002"},"content":"    public void setTagType(TagType target, TagType editedTagType) throws TagTypeNotFoundException,","lastModifiedDate":"2022-10-09"},{"lineNumber":161,"author":{"gitId":"pratham31012002"},"content":"            DuplicateTagTypeException {","lastModifiedDate":"2022-10-09"},{"lineNumber":162,"author":{"gitId":"pratham31012002"},"content":"        requireAllNonNull(target, editedTagType);","lastModifiedDate":"2022-10-09"},{"lineNumber":163,"author":{"gitId":"pratham31012002"},"content":"        if (!this.contains(target)) {","lastModifiedDate":"2022-10-09"},{"lineNumber":164,"author":{"gitId":"pratham31012002"},"content":"            throw new TagTypeNotFoundException();","lastModifiedDate":"2022-10-09"},{"lineNumber":165,"author":{"gitId":"pratham31012002"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":166,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":167,"author":{"gitId":"pratham31012002"},"content":"        if (!target.equals(editedTagType) \u0026\u0026 this.contains(editedTagType)) {","lastModifiedDate":"2022-10-09"},{"lineNumber":168,"author":{"gitId":"pratham31012002"},"content":"            throw new DuplicateTagTypeException();","lastModifiedDate":"2022-10-09"},{"lineNumber":169,"author":{"gitId":"pratham31012002"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":170,"author":{"gitId":"pratham31012002"},"content":"        UniqueTagList tagList \u003d internalMap.get(target);","lastModifiedDate":"2022-10-09"},{"lineNumber":171,"author":{"gitId":"pratham31012002"},"content":"        internalMap.put(editedTagType, tagList);","lastModifiedDate":"2022-10-09"},{"lineNumber":172,"author":{"gitId":"pratham31012002"},"content":"        this.removeTagType(target);","lastModifiedDate":"2022-10-09"},{"lineNumber":173,"author":{"gitId":"pratham31012002"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":174,"author":{"gitId":"pratham31012002"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":175,"author":{"gitId":"pratham31012002"},"content":"     * Removes the equivalent tag type from the list.","lastModifiedDate":"2022-10-09"},{"lineNumber":176,"author":{"gitId":"pratham31012002"},"content":"     * The tag type must exist in the list.","lastModifiedDate":"2022-10-09"},{"lineNumber":177,"author":{"gitId":"pratham31012002"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":178,"author":{"gitId":"pratham31012002"},"content":"    public void removeTagType(TagType toRemove) throws TagTypeNotFoundException {","lastModifiedDate":"2022-10-09"},{"lineNumber":179,"author":{"gitId":"pratham31012002"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2022-10-09"},{"lineNumber":180,"author":{"gitId":"pratham31012002"},"content":"        if (!this.contains(toRemove)) {","lastModifiedDate":"2022-10-09"},{"lineNumber":181,"author":{"gitId":"pratham31012002"},"content":"            throw new TagTypeNotFoundException();","lastModifiedDate":"2022-10-09"},{"lineNumber":182,"author":{"gitId":"pratham31012002"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":183,"author":{"gitId":"pratham31012002"},"content":"        internalMap.remove(toRemove);","lastModifiedDate":"2022-10-09"},{"lineNumber":184,"author":{"gitId":"pratham31012002"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":185,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":186,"author":{"gitId":"pratham31012002"},"content":"    public UniqueTagList getTagList(TagType toGet) throws TagTypeNotFoundException {","lastModifiedDate":"2022-10-09"},{"lineNumber":187,"author":{"gitId":"pratham31012002"},"content":"        requireNonNull(toGet);","lastModifiedDate":"2022-10-09"},{"lineNumber":188,"author":{"gitId":"pratham31012002"},"content":"        if (!this.contains(toGet)) {","lastModifiedDate":"2022-10-09"},{"lineNumber":189,"author":{"gitId":"pratham31012002"},"content":"            throw new TagTypeNotFoundException();","lastModifiedDate":"2022-10-09"},{"lineNumber":190,"author":{"gitId":"pratham31012002"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":191,"author":{"gitId":"pratham31012002"},"content":"        return internalMap.get(toGet);","lastModifiedDate":"2022-10-09"},{"lineNumber":192,"author":{"gitId":"pratham31012002"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":193,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":194,"author":{"gitId":"pratham31012002"},"content":"    public void setTagTypeMap(UniqueTagTypeMap replacement) {","lastModifiedDate":"2022-10-09"},{"lineNumber":195,"author":{"gitId":"pratham31012002"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2022-10-09"},{"lineNumber":196,"author":{"gitId":"pratham31012002"},"content":"        internalMap.clear();","lastModifiedDate":"2022-10-09"},{"lineNumber":197,"author":{"gitId":"pratham31012002"},"content":"        internalMap.putAll(replacement.internalMap);","lastModifiedDate":"2022-10-09"},{"lineNumber":198,"author":{"gitId":"pratham31012002"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":199,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":200,"author":{"gitId":"pratham31012002"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":201,"author":{"gitId":"pratham31012002"},"content":"     * Replaces the contents of this list with {@code tagTypes}.","lastModifiedDate":"2022-10-09"},{"lineNumber":202,"author":{"gitId":"pratham31012002"},"content":"     * {@code tagTypes} must not contain duplicate tags.","lastModifiedDate":"2022-10-09"},{"lineNumber":203,"author":{"gitId":"pratham31012002"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":204,"author":{"gitId":"pratham31012002"},"content":"    public void setTagTypeMap(Map\u003cTagType, UniqueTagList\u003e tagTypeMap) {","lastModifiedDate":"2022-10-09"},{"lineNumber":205,"author":{"gitId":"pratham31012002"},"content":"        requireAllNonNull(tagTypeMap);","lastModifiedDate":"2022-10-09"},{"lineNumber":206,"author":{"gitId":"pratham31012002"},"content":"        internalMap.putAll(tagTypeMap);","lastModifiedDate":"2022-10-09"},{"lineNumber":207,"author":{"gitId":"pratham31012002"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":208,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":209,"author":{"gitId":"pratham31012002"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":210,"author":{"gitId":"pratham31012002"},"content":"     * Get the count of unique tag types in the list. Used for displaying information","lastModifiedDate":"2022-10-09"},{"lineNumber":211,"author":{"gitId":"pratham31012002"},"content":"     * on total count of tag types.","lastModifiedDate":"2022-10-09"},{"lineNumber":212,"author":{"gitId":"pratham31012002"},"content":"     * @return the count of unique tag types in the list.","lastModifiedDate":"2022-10-09"},{"lineNumber":213,"author":{"gitId":"pratham31012002"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":214,"author":{"gitId":"pratham31012002"},"content":"    public int getCount() {","lastModifiedDate":"2022-10-09"},{"lineNumber":215,"author":{"gitId":"pratham31012002"},"content":"        return internalMap.size();","lastModifiedDate":"2022-10-09"},{"lineNumber":216,"author":{"gitId":"pratham31012002"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":217,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":218,"author":{"gitId":"emptygx"},"content":"    public int getTagCount() {","lastModifiedDate":"2022-10-23"},{"lineNumber":219,"author":{"gitId":"emptygx"},"content":"        int count \u003d 0;","lastModifiedDate":"2022-10-23"},{"lineNumber":220,"author":{"gitId":"emptygx"},"content":"        for (TagType t: this) {","lastModifiedDate":"2022-10-23"},{"lineNumber":221,"author":{"gitId":"emptygx"},"content":"            assert this.getTagList(t) !\u003d null;","lastModifiedDate":"2022-10-23"},{"lineNumber":222,"author":{"gitId":"emptygx"},"content":"            count +\u003d this.getTagList(t).getCount();","lastModifiedDate":"2022-10-23"},{"lineNumber":223,"author":{"gitId":"emptygx"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":224,"author":{"gitId":"emptygx"},"content":"        return count;","lastModifiedDate":"2022-10-23"},{"lineNumber":225,"author":{"gitId":"emptygx"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":226,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":227,"author":{"gitId":"pratham31012002"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":228,"author":{"gitId":"pratham31012002"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2022-10-09"},{"lineNumber":229,"author":{"gitId":"pratham31012002"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":230,"author":{"gitId":"pratham31012002"},"content":"    public ObservableMap\u003cTagType, UniqueTagList\u003e asUnmodifiableObservableMap() {","lastModifiedDate":"2022-10-09"},{"lineNumber":231,"author":{"gitId":"pratham31012002"},"content":"        return internalUnmodifiableMap;","lastModifiedDate":"2022-10-09"},{"lineNumber":232,"author":{"gitId":"pratham31012002"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":233,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":234,"author":{"gitId":"pratham31012002"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":235,"author":{"gitId":"pratham31012002"},"content":"    public Iterator\u003cTagType\u003e iterator() {","lastModifiedDate":"2022-10-09"},{"lineNumber":236,"author":{"gitId":"pratham31012002"},"content":"        return internalMap.keySet().iterator();","lastModifiedDate":"2022-10-09"},{"lineNumber":237,"author":{"gitId":"pratham31012002"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":238,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":239,"author":{"gitId":"agarwal-anjali"},"content":"    public static Map\u003cPrefix, TagType\u003e getPrefixMap() {","lastModifiedDate":"2022-10-26"},{"lineNumber":240,"author":{"gitId":"agarwal-anjali"},"content":"        return prefixMap;","lastModifiedDate":"2022-10-26"},{"lineNumber":241,"author":{"gitId":"agarwal-anjali"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":242,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":243,"author":{"gitId":"agarwal-anjali"},"content":"    public static void setPrefixMap(Map\u003cPrefix, TagType\u003e map) {","lastModifiedDate":"2022-10-26"},{"lineNumber":244,"author":{"gitId":"agarwal-anjali"},"content":"        prefixMap \u003d map;","lastModifiedDate":"2022-10-26"},{"lineNumber":245,"author":{"gitId":"agarwal-anjali"},"content":"        CliSyntax.setTagPrefix(map.keySet().stream().collect(Collectors.toList()));","lastModifiedDate":"2022-10-26"},{"lineNumber":246,"author":{"gitId":"agarwal-anjali"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":247,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":248,"author":{"gitId":"pratham31012002"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":249,"author":{"gitId":"pratham31012002"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-09"},{"lineNumber":250,"author":{"gitId":"pratham31012002"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-09"},{"lineNumber":251,"author":{"gitId":"pratham31012002"},"content":"                || (other instanceof UniqueTagTypeMap // instanceof handles nulls","lastModifiedDate":"2022-10-09"},{"lineNumber":252,"author":{"gitId":"pratham31012002"},"content":"                \u0026\u0026 internalMap.equals(((UniqueTagTypeMap) other).internalMap));","lastModifiedDate":"2022-10-09"},{"lineNumber":253,"author":{"gitId":"pratham31012002"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":254,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":255,"author":{"gitId":"pratham31012002"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":256,"author":{"gitId":"pratham31012002"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-09"},{"lineNumber":257,"author":{"gitId":"pratham31012002"},"content":"        return internalMap.hashCode();","lastModifiedDate":"2022-10-09"},{"lineNumber":258,"author":{"gitId":"pratham31012002"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":259,"author":{"gitId":"pratham31012002"},"content":"    public Stream\u003cTagType\u003e toStream() {","lastModifiedDate":"2022-10-09"},{"lineNumber":260,"author":{"gitId":"pratham31012002"},"content":"        return StreamSupport.stream(this.spliterator(), false);","lastModifiedDate":"2022-10-09"},{"lineNumber":261,"author":{"gitId":"pratham31012002"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":262,"author":{"gitId":"pratham31012002"},"content":"    public static TagType getTagType(Prefix pref) {","lastModifiedDate":"2022-10-10"},{"lineNumber":263,"author":{"gitId":"pratham31012002"},"content":"        return prefixMap.get(pref);","lastModifiedDate":"2022-10-10"},{"lineNumber":264,"author":{"gitId":"pratham31012002"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":265,"author":{"gitId":"pratham31012002"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":266,"author":{"gitId":"pratham31012002"},"content":"    public String toString() {","lastModifiedDate":"2022-10-11"},{"lineNumber":267,"author":{"gitId":"pratham31012002"},"content":"        StringBuilder res \u003d new StringBuilder();","lastModifiedDate":"2022-10-11"},{"lineNumber":268,"author":{"gitId":"pratham31012002"},"content":"        for (TagType t: internalMap.keySet()) {","lastModifiedDate":"2022-10-11"},{"lineNumber":269,"author":{"gitId":"pratham31012002"},"content":"            res.append(String.format(\"%s: %s\\n\", t.toString(), internalMap.get(t)));","lastModifiedDate":"2022-10-11"},{"lineNumber":270,"author":{"gitId":"pratham31012002"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":271,"author":{"gitId":"pratham31012002"},"content":"        return res.toString();","lastModifiedDate":"2022-10-11"},{"lineNumber":272,"author":{"gitId":"pratham31012002"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":273,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":274,"author":{"gitId":"pratham31012002"},"content":"    public static Prefix getPrefixFromTagType(String tagType) throws TagTypeNotFoundException {","lastModifiedDate":"2022-10-11"},{"lineNumber":275,"author":{"gitId":"pratham31012002"},"content":"        for (Prefix pref: prefixMap.keySet()) {","lastModifiedDate":"2022-10-11"},{"lineNumber":276,"author":{"gitId":"pratham31012002"},"content":"            if (prefixMap.get(pref).getTagTypeName().equals(tagType)) {","lastModifiedDate":"2022-10-11"},{"lineNumber":277,"author":{"gitId":"pratham31012002"},"content":"                return pref;","lastModifiedDate":"2022-10-11"},{"lineNumber":278,"author":{"gitId":"pratham31012002"},"content":"            }","lastModifiedDate":"2022-10-11"},{"lineNumber":279,"author":{"gitId":"pratham31012002"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":280,"author":{"gitId":"pratham31012002"},"content":"        throw new TagTypeNotFoundException();","lastModifiedDate":"2022-10-11"},{"lineNumber":281,"author":{"gitId":"pratham31012002"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":282,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":283,"author":{"gitId":"emptygx"},"content":"    public static TagType getTagTypeFromPrefix(Prefix prefix) throws TagTypeNotFoundException {","lastModifiedDate":"2022-10-14"},{"lineNumber":284,"author":{"gitId":"emptygx"},"content":"        for (TagType tagType: prefixMap.values()) {","lastModifiedDate":"2022-10-14"},{"lineNumber":285,"author":{"gitId":"emptygx"},"content":"            if (tagType.getPrefix().equals(prefix)) {","lastModifiedDate":"2022-10-14"},{"lineNumber":286,"author":{"gitId":"emptygx"},"content":"                return tagType;","lastModifiedDate":"2022-10-14"},{"lineNumber":287,"author":{"gitId":"emptygx"},"content":"            }","lastModifiedDate":"2022-10-14"},{"lineNumber":288,"author":{"gitId":"emptygx"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":289,"author":{"gitId":"emptygx"},"content":"        throw new TagTypeNotFoundException();","lastModifiedDate":"2022-10-14"},{"lineNumber":290,"author":{"gitId":"emptygx"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":291,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":292,"author":{"gitId":"pratham31012002"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2022-10-13"},{"lineNumber":293,"author":{"gitId":"pratham31012002"},"content":"        return internalMap.isEmpty();","lastModifiedDate":"2022-10-13"},{"lineNumber":294,"author":{"gitId":"pratham31012002"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":295,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":296,"author":{"gitId":"pratham31012002"},"content":"    public static boolean isExist(String otherTagType) {","lastModifiedDate":"2022-10-26"},{"lineNumber":297,"author":{"gitId":"pratham31012002"},"content":"        return prefixMap.values().stream().anyMatch(tagType -\u003e tagType.getTagTypeName().equals(otherTagType));","lastModifiedDate":"2022-10-26"},{"lineNumber":298,"author":{"gitId":"pratham31012002"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":299,"author":{"gitId":"pratham31012002"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"agarwal-anjali":52,"emptygx":32,"pratham31012002":215}},{"path":"src/main/java/seedu/clinkedin/model/person/exceptions/DuplicateLinkException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"agarwal-anjali"},"content":"package seedu.clinkedin.model.person.exceptions;","lastModifiedDate":"2022-10-28"},{"lineNumber":2,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":3,"author":{"gitId":"agarwal-anjali"},"content":"/**","lastModifiedDate":"2022-10-28"},{"lineNumber":4,"author":{"gitId":"agarwal-anjali"},"content":" * Signals that the operation will result in duplicate links for a person.","lastModifiedDate":"2022-10-28"},{"lineNumber":5,"author":{"gitId":"agarwal-anjali"},"content":" */","lastModifiedDate":"2022-10-28"},{"lineNumber":6,"author":{"gitId":"agarwal-anjali"},"content":"public class DuplicateLinkException extends RuntimeException {","lastModifiedDate":"2022-10-28"},{"lineNumber":7,"author":{"gitId":"agarwal-anjali"},"content":"    public DuplicateLinkException(String link) {","lastModifiedDate":"2022-10-28"},{"lineNumber":8,"author":{"gitId":"agarwal-anjali"},"content":"        super(\"This link already exists: \" + link);","lastModifiedDate":"2022-10-28"},{"lineNumber":9,"author":{"gitId":"agarwal-anjali"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":10,"author":{"gitId":"agarwal-anjali"},"content":"}","lastModifiedDate":"2022-10-28"}],"authorContributionMap":{"agarwal-anjali":10}},{"path":"src/main/java/seedu/clinkedin/model/person/exceptions/DuplicateNoteException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"agarwal-anjali"},"content":"package seedu.clinkedin.model.person.exceptions;","lastModifiedDate":"2022-10-28"},{"lineNumber":2,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":3,"author":{"gitId":"agarwal-anjali"},"content":"/**","lastModifiedDate":"2022-10-28"},{"lineNumber":4,"author":{"gitId":"agarwal-anjali"},"content":" * Signals that the operation will result in duplicate notes for a person.","lastModifiedDate":"2022-10-28"},{"lineNumber":5,"author":{"gitId":"agarwal-anjali"},"content":" */","lastModifiedDate":"2022-10-28"},{"lineNumber":6,"author":{"gitId":"agarwal-anjali"},"content":"public class DuplicateNoteException extends RuntimeException {","lastModifiedDate":"2022-10-28"},{"lineNumber":7,"author":{"gitId":"agarwal-anjali"},"content":"    public DuplicateNoteException(String note) {","lastModifiedDate":"2022-10-28"},{"lineNumber":8,"author":{"gitId":"agarwal-anjali"},"content":"        super(\"The following note already exixts: \" + note);","lastModifiedDate":"2022-10-28"},{"lineNumber":9,"author":{"gitId":"agarwal-anjali"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":10,"author":{"gitId":"agarwal-anjali"},"content":"}","lastModifiedDate":"2022-10-28"}],"authorContributionMap":{"agarwal-anjali":10}},{"path":"src/main/java/seedu/clinkedin/model/person/exceptions/DuplicatePersonException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.model.person.exceptions;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that the operation will result in duplicate Persons (Persons are considered duplicates if they have the same","lastModifiedDate":"2018-04-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * identity).","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class DuplicatePersonException extends RuntimeException {","lastModifiedDate":"2018-08-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public DuplicatePersonException() {","lastModifiedDate":"2017-06-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"        super(\"Operation would result in duplicate persons\");","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"emptygx":1,"-":10}},{"path":"src/main/java/seedu/clinkedin/model/person/exceptions/DuplicateTagTypeException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.model.person.exceptions;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":3,"author":{"gitId":"pratham31012002"},"content":"/**","lastModifiedDate":"2022-10-07"},{"lineNumber":4,"author":{"gitId":"pratham31012002"},"content":" * Signals that the operation will result in duplicate tag types.","lastModifiedDate":"2022-10-07"},{"lineNumber":5,"author":{"gitId":"pratham31012002"},"content":" */","lastModifiedDate":"2022-10-07"},{"lineNumber":6,"author":{"gitId":"pratham31012002"},"content":"public class DuplicateTagTypeException extends RuntimeException {","lastModifiedDate":"2022-10-07"},{"lineNumber":7,"author":{"gitId":"pratham31012002"},"content":"    public DuplicateTagTypeException() {","lastModifiedDate":"2022-10-07"},{"lineNumber":8,"author":{"gitId":"pratham31012002"},"content":"        super(\"Operation would result in duplicate tag types\");","lastModifiedDate":"2022-10-07"},{"lineNumber":9,"author":{"gitId":"pratham31012002"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":10,"author":{"gitId":"pratham31012002"},"content":"}","lastModifiedDate":"2022-10-07"},{"lineNumber":11,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-07"}],"authorContributionMap":{"emptygx":1,"pratham31012002":10}},{"path":"src/main/java/seedu/clinkedin/model/person/exceptions/PersonNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.model.person.exceptions;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that the operation is unable to find the specified person.","lastModifiedDate":"2017-06-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class PersonNotFoundException extends RuntimeException {}","lastModifiedDate":"2018-08-07"}],"authorContributionMap":{"emptygx":1,"-":5}},{"path":"src/main/java/seedu/clinkedin/model/person/exceptions/RatingAlreadyExistsException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"agarwal-anjali"},"content":"package seedu.clinkedin.model.person.exceptions;","lastModifiedDate":"2022-10-28"},{"lineNumber":2,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":3,"author":{"gitId":"agarwal-anjali"},"content":"/**","lastModifiedDate":"2022-10-28"},{"lineNumber":4,"author":{"gitId":"agarwal-anjali"},"content":" * Signals that the operation is trying to add multiple ratings for a person which is not allowed.","lastModifiedDate":"2022-10-28"},{"lineNumber":5,"author":{"gitId":"agarwal-anjali"},"content":" */","lastModifiedDate":"2022-10-28"},{"lineNumber":6,"author":{"gitId":"agarwal-anjali"},"content":"public class RatingAlreadyExistsException extends RuntimeException {","lastModifiedDate":"2022-10-28"},{"lineNumber":7,"author":{"gitId":"agarwal-anjali"},"content":"    public RatingAlreadyExistsException() {","lastModifiedDate":"2022-10-28"},{"lineNumber":8,"author":{"gitId":"agarwal-anjali"},"content":"        super(\"Rating for this person already exists\");","lastModifiedDate":"2022-10-28"},{"lineNumber":9,"author":{"gitId":"agarwal-anjali"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":10,"author":{"gitId":"agarwal-anjali"},"content":"}","lastModifiedDate":"2022-10-28"}],"authorContributionMap":{"agarwal-anjali":10}},{"path":"src/main/java/seedu/clinkedin/model/person/exceptions/TagTypeNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.model.person.exceptions;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":3,"author":{"gitId":"pratham31012002"},"content":"/**","lastModifiedDate":"2022-10-07"},{"lineNumber":4,"author":{"gitId":"pratham31012002"},"content":" * Signals that the operation is unable to find the specified tag type.","lastModifiedDate":"2022-10-07"},{"lineNumber":5,"author":{"gitId":"pratham31012002"},"content":" */","lastModifiedDate":"2022-10-07"},{"lineNumber":6,"author":{"gitId":"pratham31012002"},"content":"public class TagTypeNotFoundException extends RuntimeException {","lastModifiedDate":"2022-10-28"},{"lineNumber":7,"author":{"gitId":"pratham31012002"},"content":"    public TagTypeNotFoundException() {","lastModifiedDate":"2022-10-28"},{"lineNumber":8,"author":{"gitId":"pratham31012002"},"content":"        super(\"Tag type not found!\");","lastModifiedDate":"2022-10-28"},{"lineNumber":9,"author":{"gitId":"pratham31012002"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":10,"author":{"gitId":"pratham31012002"},"content":"}","lastModifiedDate":"2022-10-28"}],"authorContributionMap":{"emptygx":1,"pratham31012002":9}},{"path":"src/main/java/seedu/clinkedin/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.model.tag;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"emptygx"},"content":" * Represents a Tag in the clinkedin book.","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"pratham31012002"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-10-07"},{"lineNumber":13,"author":{"gitId":"pratham31012002"},"content":"            \"Tag names should contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2022-10-07"},{"lineNumber":14,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":15,"author":{"gitId":"pratham31012002"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2022-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":56,"author":{"gitId":"pratham31012002"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":57,"author":{"gitId":"pratham31012002"},"content":"     * Returns the tagName.","lastModifiedDate":"2022-10-24"},{"lineNumber":58,"author":{"gitId":"pratham31012002"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":59,"author":{"gitId":"pratham31012002"},"content":"    public String getTagName() {","lastModifiedDate":"2022-10-24"},{"lineNumber":60,"author":{"gitId":"pratham31012002"},"content":"        return tagName;","lastModifiedDate":"2022-10-24"},{"lineNumber":61,"author":{"gitId":"pratham31012002"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"emptygx":3,"pratham31012002":10,"-":49}},{"path":"src/main/java/seedu/clinkedin/model/tag/TagType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.model.tag;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":3,"author":{"gitId":"pratham31012002"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-07"},{"lineNumber":4,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":6,"author":{"gitId":"pratham31012002"},"content":"import java.util.Objects;","lastModifiedDate":"2022-10-07"},{"lineNumber":7,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":8,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.logic.parser.Prefix;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"pratham31012002"},"content":"import seedu.clinkedin.model.person.UniqueTagTypeMap;","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":11,"author":{"gitId":"pratham31012002"},"content":"/**","lastModifiedDate":"2022-10-07"},{"lineNumber":12,"author":{"gitId":"emptygx"},"content":" * Represents a TagType in the clinkedin book.","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"pratham31012002"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagType(String)}","lastModifiedDate":"2022-10-07"},{"lineNumber":14,"author":{"gitId":"pratham31012002"},"content":" */","lastModifiedDate":"2022-10-07"},{"lineNumber":15,"author":{"gitId":"pratham31012002"},"content":"public class TagType {","lastModifiedDate":"2022-10-07"},{"lineNumber":16,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":17,"author":{"gitId":"pratham31012002"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-10-07"},{"lineNumber":18,"author":{"gitId":"pratham31012002"},"content":"            \"Tag types should contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2022-10-07"},{"lineNumber":19,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":20,"author":{"gitId":"pratham31012002"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2022-10-07"},{"lineNumber":21,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":22,"author":{"gitId":"pratham31012002"},"content":"    public final String tagType;","lastModifiedDate":"2022-10-07"},{"lineNumber":23,"author":{"gitId":"pratham31012002"},"content":"    public final Prefix p;","lastModifiedDate":"2022-10-07"},{"lineNumber":24,"author":{"gitId":"pratham31012002"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":25,"author":{"gitId":"pratham31012002"},"content":"     * Constructs a {@code TagType}.","lastModifiedDate":"2022-10-07"},{"lineNumber":26,"author":{"gitId":"pratham31012002"},"content":"     * @param tagType A valid tag type.","lastModifiedDate":"2022-10-07"},{"lineNumber":27,"author":{"gitId":"pratham31012002"},"content":"     * @param p A valid prefix.","lastModifiedDate":"2022-10-26"},{"lineNumber":28,"author":{"gitId":"pratham31012002"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":29,"author":{"gitId":"pratham31012002"},"content":"    public TagType(String tagType, Prefix p) throws IllegalArgumentException {","lastModifiedDate":"2022-10-28"},{"lineNumber":30,"author":{"gitId":"pratham31012002"},"content":"        requireNonNull(tagType);","lastModifiedDate":"2022-10-07"},{"lineNumber":31,"author":{"gitId":"pratham31012002"},"content":"        checkArgument(isValidTagType(tagType), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-07"},{"lineNumber":32,"author":{"gitId":"pratham31012002"},"content":"        this.tagType \u003d tagType;","lastModifiedDate":"2022-10-07"},{"lineNumber":33,"author":{"gitId":"pratham31012002"},"content":"        this.p \u003d p;","lastModifiedDate":"2022-10-07"},{"lineNumber":34,"author":{"gitId":"pratham31012002"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":35,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":36,"author":{"gitId":"pratham31012002"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":37,"author":{"gitId":"pratham31012002"},"content":"     * Constructs a {@code TagType}.","lastModifiedDate":"2022-10-26"},{"lineNumber":38,"author":{"gitId":"pratham31012002"},"content":"     * @param tagType A valid tag type.","lastModifiedDate":"2022-10-26"},{"lineNumber":39,"author":{"gitId":"pratham31012002"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":40,"author":{"gitId":"pratham31012002"},"content":"    public TagType(String tagType) {","lastModifiedDate":"2022-10-26"},{"lineNumber":41,"author":{"gitId":"pratham31012002"},"content":"        requireNonNull(tagType);","lastModifiedDate":"2022-10-26"},{"lineNumber":42,"author":{"gitId":"pratham31012002"},"content":"        checkArgument(isValidTagType(tagType), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-26"},{"lineNumber":43,"author":{"gitId":"pratham31012002"},"content":"        this.tagType \u003d tagType;","lastModifiedDate":"2022-10-26"},{"lineNumber":44,"author":{"gitId":"pratham31012002"},"content":"        this.p \u003d UniqueTagTypeMap.getPrefixFromTagType(tagType);","lastModifiedDate":"2022-10-26"},{"lineNumber":45,"author":{"gitId":"pratham31012002"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":46,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":47,"author":{"gitId":"pratham31012002"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":48,"author":{"gitId":"pratham31012002"},"content":"     * Returns true if a given string is a valid tag type.","lastModifiedDate":"2022-10-07"},{"lineNumber":49,"author":{"gitId":"pratham31012002"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":50,"author":{"gitId":"pratham31012002"},"content":"    public static boolean isValidTagType(String test) {","lastModifiedDate":"2022-10-07"},{"lineNumber":51,"author":{"gitId":"pratham31012002"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-07"},{"lineNumber":52,"author":{"gitId":"pratham31012002"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":53,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":54,"author":{"gitId":"pratham31012002"},"content":"    @Override","lastModifiedDate":"2022-10-07"},{"lineNumber":55,"author":{"gitId":"pratham31012002"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-07"},{"lineNumber":56,"author":{"gitId":"pratham31012002"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-07"},{"lineNumber":57,"author":{"gitId":"agarwal-anjali"},"content":"                || ((other instanceof TagType // instanceof handles nulls","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"agarwal-anjali"},"content":"                \u0026\u0026 this.tagType.equals(((TagType) other).tagType)","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"agarwal-anjali"},"content":"                \u0026\u0026 p.equals(((TagType) other).p))); // state check","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"pratham31012002"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":61,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":62,"author":{"gitId":"pratham31012002"},"content":"    @Override","lastModifiedDate":"2022-10-07"},{"lineNumber":63,"author":{"gitId":"pratham31012002"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-07"},{"lineNumber":64,"author":{"gitId":"pratham31012002"},"content":"        return Objects.hash(tagType, p);","lastModifiedDate":"2022-10-07"},{"lineNumber":65,"author":{"gitId":"pratham31012002"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":66,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":67,"author":{"gitId":"pratham31012002"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":68,"author":{"gitId":"pratham31012002"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2022-10-07"},{"lineNumber":69,"author":{"gitId":"pratham31012002"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":70,"author":{"gitId":"pratham31012002"},"content":"    public String toString() {","lastModifiedDate":"2022-10-07"},{"lineNumber":71,"author":{"gitId":"pratham31012002"},"content":"        return tagType;","lastModifiedDate":"2022-10-12"},{"lineNumber":72,"author":{"gitId":"pratham31012002"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":73,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":74,"author":{"gitId":"pratham31012002"},"content":"    public String getTagTypeName() {","lastModifiedDate":"2022-10-11"},{"lineNumber":75,"author":{"gitId":"pratham31012002"},"content":"        return this.tagType;","lastModifiedDate":"2022-10-11"},{"lineNumber":76,"author":{"gitId":"pratham31012002"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":77,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":78,"author":{"gitId":"emptygx"},"content":"    public Prefix getPrefix() {","lastModifiedDate":"2022-10-14"},{"lineNumber":79,"author":{"gitId":"emptygx"},"content":"        return this.p;","lastModifiedDate":"2022-10-14"},{"lineNumber":80,"author":{"gitId":"emptygx"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":81,"author":{"gitId":"pratham31012002"},"content":"}","lastModifiedDate":"2022-10-07"}],"authorContributionMap":{"agarwal-anjali":3,"emptygx":9,"pratham31012002":69}},{"path":"src/main/java/seedu/clinkedin/model/tag/UniqueTagList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.model.tag;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":3,"author":{"gitId":"pratham31012002"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-07"},{"lineNumber":4,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":6,"author":{"gitId":"pratham31012002"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-10-07"},{"lineNumber":7,"author":{"gitId":"pratham31012002"},"content":"import java.util.List;","lastModifiedDate":"2022-10-07"},{"lineNumber":8,"author":{"gitId":"pratham31012002"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-24"},{"lineNumber":9,"author":{"gitId":"pratham31012002"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":11,"author":{"gitId":"pratham31012002"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-07"},{"lineNumber":12,"author":{"gitId":"pratham31012002"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-07"},{"lineNumber":13,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.commons.util.StringUtil;","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.tag.exceptions.DuplicateTagException;","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.tag.exceptions.TagNotFoundException;","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":17,"author":{"gitId":"pratham31012002"},"content":"/**","lastModifiedDate":"2022-10-07"},{"lineNumber":18,"author":{"gitId":"pratham31012002"},"content":" * A list of tags that enforces uniqueness between its elements and does not","lastModifiedDate":"2022-10-07"},{"lineNumber":19,"author":{"gitId":"pratham31012002"},"content":" * allow nulls.","lastModifiedDate":"2022-10-07"},{"lineNumber":20,"author":{"gitId":"pratham31012002"},"content":" * A tag is considered unique by comparing using","lastModifiedDate":"2022-10-07"},{"lineNumber":21,"author":{"gitId":"pratham31012002"},"content":" * {@code Tag#equals(Object)}. As such, adding and updating of","lastModifiedDate":"2022-10-07"},{"lineNumber":22,"author":{"gitId":"pratham31012002"},"content":" * tags uses Tag#equals(Object) for equality so as to ensure that","lastModifiedDate":"2022-10-07"},{"lineNumber":23,"author":{"gitId":"pratham31012002"},"content":" * the tag being added or updated is","lastModifiedDate":"2022-10-07"},{"lineNumber":24,"author":{"gitId":"pratham31012002"},"content":" * unique in terms of identity in the UniqueTagList. The removal of","lastModifiedDate":"2022-10-07"},{"lineNumber":25,"author":{"gitId":"pratham31012002"},"content":" * a tag also uses Tag#equals(Object) so","lastModifiedDate":"2022-10-07"},{"lineNumber":26,"author":{"gitId":"pratham31012002"},"content":" * as to ensure that the tag with exactly the same fields will be removed.","lastModifiedDate":"2022-10-07"},{"lineNumber":27,"author":{"gitId":"pratham31012002"},"content":" *","lastModifiedDate":"2022-10-07"},{"lineNumber":28,"author":{"gitId":"pratham31012002"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2022-10-07"},{"lineNumber":29,"author":{"gitId":"pratham31012002"},"content":" *","lastModifiedDate":"2022-10-07"},{"lineNumber":30,"author":{"gitId":"pratham31012002"},"content":" * @see Tag#equals(Object)","lastModifiedDate":"2022-10-07"},{"lineNumber":31,"author":{"gitId":"pratham31012002"},"content":" */","lastModifiedDate":"2022-10-07"},{"lineNumber":32,"author":{"gitId":"pratham31012002"},"content":"public class UniqueTagList implements Iterable\u003cTag\u003e {","lastModifiedDate":"2022-10-07"},{"lineNumber":33,"author":{"gitId":"pratham31012002"},"content":"    private final ObservableList\u003cTag\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-07"},{"lineNumber":34,"author":{"gitId":"pratham31012002"},"content":"    private final ObservableList\u003cTag\u003e internalUnmodifiableList \u003d FXCollections","lastModifiedDate":"2022-10-07"},{"lineNumber":35,"author":{"gitId":"pratham31012002"},"content":"            .unmodifiableObservableList(internalList);","lastModifiedDate":"2022-10-07"},{"lineNumber":36,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":37,"author":{"gitId":"pratham31012002"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":38,"author":{"gitId":"pratham31012002"},"content":"     * Returns true if the list contains an equivalent tag as the given argument.","lastModifiedDate":"2022-10-07"},{"lineNumber":39,"author":{"gitId":"pratham31012002"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":40,"author":{"gitId":"pratham31012002"},"content":"    public boolean contains(Tag toCheck) {","lastModifiedDate":"2022-10-07"},{"lineNumber":41,"author":{"gitId":"pratham31012002"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-10-07"},{"lineNumber":42,"author":{"gitId":"pratham31012002"},"content":"        return internalList.stream().anyMatch(toCheck::equals);","lastModifiedDate":"2022-10-07"},{"lineNumber":43,"author":{"gitId":"pratham31012002"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":44,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":45,"author":{"gitId":"emptygx"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":46,"author":{"gitId":"emptygx"},"content":"     * Returns true if the list contains an equivalent tag with a value containing the given argument as a sequence.","lastModifiedDate":"2022-10-14"},{"lineNumber":47,"author":{"gitId":"emptygx"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":48,"author":{"gitId":"emptygx"},"content":"    public boolean hasSequenceMatch(String toCheck) {","lastModifiedDate":"2022-10-14"},{"lineNumber":49,"author":{"gitId":"emptygx"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-10-14"},{"lineNumber":50,"author":{"gitId":"emptygx"},"content":"        return internalList.stream().anyMatch(tag -\u003e StringUtil.containsSequenceIgnoreCase(tag.tagName, toCheck));","lastModifiedDate":"2022-10-14"},{"lineNumber":51,"author":{"gitId":"emptygx"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":52,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":53,"author":{"gitId":"pratham31012002"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"pratham31012002"},"content":"     * Returns true if the list contains all the tags of the given argument.","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"pratham31012002"},"content":"     * @param toCheck List whose elements are being checked.","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"pratham31012002"},"content":"     * @return true if check passes, else false.","lastModifiedDate":"2022-10-09"},{"lineNumber":57,"author":{"gitId":"pratham31012002"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":58,"author":{"gitId":"pratham31012002"},"content":"    public boolean containsAll(UniqueTagList toCheck) {","lastModifiedDate":"2022-10-09"},{"lineNumber":59,"author":{"gitId":"pratham31012002"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-10-09"},{"lineNumber":60,"author":{"gitId":"pratham31012002"},"content":"        return toCheck.toStream().allMatch(this::contains);","lastModifiedDate":"2022-10-09"},{"lineNumber":61,"author":{"gitId":"pratham31012002"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":62,"author":{"gitId":"pratham31012002"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":63,"author":{"gitId":"pratham31012002"},"content":"     * Returns true if the list contains any of the tags of the given argument.","lastModifiedDate":"2022-10-09"},{"lineNumber":64,"author":{"gitId":"pratham31012002"},"content":"     * @param toCheck List whose elements are being checked.","lastModifiedDate":"2022-10-09"},{"lineNumber":65,"author":{"gitId":"pratham31012002"},"content":"     * @return true if check passes, else false.","lastModifiedDate":"2022-10-09"},{"lineNumber":66,"author":{"gitId":"pratham31012002"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":67,"author":{"gitId":"pratham31012002"},"content":"    public boolean containsAny(UniqueTagList toCheck) {","lastModifiedDate":"2022-10-09"},{"lineNumber":68,"author":{"gitId":"pratham31012002"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-10-09"},{"lineNumber":69,"author":{"gitId":"pratham31012002"},"content":"        return toCheck.toStream().anyMatch(this::contains);","lastModifiedDate":"2022-10-09"},{"lineNumber":70,"author":{"gitId":"pratham31012002"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":71,"author":{"gitId":"pratham31012002"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":72,"author":{"gitId":"pratham31012002"},"content":"     * Adds a tag to the list.","lastModifiedDate":"2022-10-07"},{"lineNumber":73,"author":{"gitId":"pratham31012002"},"content":"     * The tag must not already exist in the list.","lastModifiedDate":"2022-10-07"},{"lineNumber":74,"author":{"gitId":"pratham31012002"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":75,"author":{"gitId":"pratham31012002"},"content":"    public void add(Tag toAdd) throws DuplicateTagException {","lastModifiedDate":"2022-10-09"},{"lineNumber":76,"author":{"gitId":"pratham31012002"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2022-10-07"},{"lineNumber":77,"author":{"gitId":"pratham31012002"},"content":"        if (this.contains(toAdd)) {","lastModifiedDate":"2022-10-09"},{"lineNumber":78,"author":{"gitId":"pratham31012002"},"content":"            throw new DuplicateTagException();","lastModifiedDate":"2022-10-07"},{"lineNumber":79,"author":{"gitId":"pratham31012002"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":80,"author":{"gitId":"pratham31012002"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2022-10-07"},{"lineNumber":81,"author":{"gitId":"pratham31012002"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":82,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":83,"author":{"gitId":"pratham31012002"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":84,"author":{"gitId":"pratham31012002"},"content":"     * Adds a tag to the list.","lastModifiedDate":"2022-10-09"},{"lineNumber":85,"author":{"gitId":"pratham31012002"},"content":"     * The tag must not already exist in the list.","lastModifiedDate":"2022-10-09"},{"lineNumber":86,"author":{"gitId":"pratham31012002"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":87,"author":{"gitId":"pratham31012002"},"content":"    public void merge(UniqueTagList toAdd) throws DuplicateTagException {","lastModifiedDate":"2022-10-09"},{"lineNumber":88,"author":{"gitId":"pratham31012002"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2022-10-09"},{"lineNumber":89,"author":{"gitId":"pratham31012002"},"content":"        if (this.containsAny(toAdd)) {","lastModifiedDate":"2022-10-09"},{"lineNumber":90,"author":{"gitId":"pratham31012002"},"content":"            throw new DuplicateTagException();","lastModifiedDate":"2022-10-09"},{"lineNumber":91,"author":{"gitId":"pratham31012002"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":92,"author":{"gitId":"pratham31012002"},"content":"        for (Tag t: toAdd) {","lastModifiedDate":"2022-10-09"},{"lineNumber":93,"author":{"gitId":"pratham31012002"},"content":"            this.add(t);","lastModifiedDate":"2022-10-09"},{"lineNumber":94,"author":{"gitId":"pratham31012002"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":95,"author":{"gitId":"pratham31012002"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":96,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":97,"author":{"gitId":"pratham31012002"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":98,"author":{"gitId":"pratham31012002"},"content":"     * Replaces the tag {@code target} in the list with {@code editedTag}.","lastModifiedDate":"2022-10-07"},{"lineNumber":99,"author":{"gitId":"pratham31012002"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2022-10-07"},{"lineNumber":100,"author":{"gitId":"pratham31012002"},"content":"     * The tag name of {@code editedTag} must not be the same as another","lastModifiedDate":"2022-10-07"},{"lineNumber":101,"author":{"gitId":"pratham31012002"},"content":"     * existing tag in the list.","lastModifiedDate":"2022-10-07"},{"lineNumber":102,"author":{"gitId":"pratham31012002"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":103,"author":{"gitId":"pratham31012002"},"content":"    public void setTag(Tag target, Tag editedTag) throws TagNotFoundException, DuplicateTagException {","lastModifiedDate":"2022-10-09"},{"lineNumber":104,"author":{"gitId":"pratham31012002"},"content":"        requireAllNonNull(target, editedTag);","lastModifiedDate":"2022-10-07"},{"lineNumber":105,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":106,"author":{"gitId":"pratham31012002"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2022-10-07"},{"lineNumber":107,"author":{"gitId":"pratham31012002"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2022-10-07"},{"lineNumber":108,"author":{"gitId":"pratham31012002"},"content":"            throw new TagNotFoundException();","lastModifiedDate":"2022-10-07"},{"lineNumber":109,"author":{"gitId":"pratham31012002"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":110,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":111,"author":{"gitId":"pratham31012002"},"content":"        if (!target.equals(editedTag) \u0026\u0026 contains(editedTag)) {","lastModifiedDate":"2022-10-07"},{"lineNumber":112,"author":{"gitId":"pratham31012002"},"content":"            throw new DuplicateTagException();","lastModifiedDate":"2022-10-07"},{"lineNumber":113,"author":{"gitId":"pratham31012002"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":114,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":115,"author":{"gitId":"pratham31012002"},"content":"        internalList.set(index, editedTag);","lastModifiedDate":"2022-10-07"},{"lineNumber":116,"author":{"gitId":"pratham31012002"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":117,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":118,"author":{"gitId":"pratham31012002"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":119,"author":{"gitId":"pratham31012002"},"content":"     * Removes the equivalent tag from the list.","lastModifiedDate":"2022-10-07"},{"lineNumber":120,"author":{"gitId":"pratham31012002"},"content":"     * The tag must exist in the list.","lastModifiedDate":"2022-10-07"},{"lineNumber":121,"author":{"gitId":"pratham31012002"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":122,"author":{"gitId":"pratham31012002"},"content":"    public void remove(Tag toRemove) throws TagNotFoundException {","lastModifiedDate":"2022-10-09"},{"lineNumber":123,"author":{"gitId":"pratham31012002"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2022-10-07"},{"lineNumber":124,"author":{"gitId":"pratham31012002"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2022-10-07"},{"lineNumber":125,"author":{"gitId":"pratham31012002"},"content":"            throw new TagNotFoundException();","lastModifiedDate":"2022-10-07"},{"lineNumber":126,"author":{"gitId":"pratham31012002"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":127,"author":{"gitId":"pratham31012002"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":128,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":129,"author":{"gitId":"pratham31012002"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":130,"author":{"gitId":"pratham31012002"},"content":"     * Removes all the tags of the argument list from the list.","lastModifiedDate":"2022-10-09"},{"lineNumber":131,"author":{"gitId":"pratham31012002"},"content":"     * @param toRemove List whose tags need to be removed.","lastModifiedDate":"2022-10-09"},{"lineNumber":132,"author":{"gitId":"pratham31012002"},"content":"     * @throws TagNotFoundException If any of the tags in the argument list aren\u0027t present in the list.","lastModifiedDate":"2022-10-09"},{"lineNumber":133,"author":{"gitId":"pratham31012002"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":134,"author":{"gitId":"pratham31012002"},"content":"    public void removeAll(UniqueTagList toRemove) throws TagNotFoundException {","lastModifiedDate":"2022-10-09"},{"lineNumber":135,"author":{"gitId":"pratham31012002"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2022-10-09"},{"lineNumber":136,"author":{"gitId":"pratham31012002"},"content":"        if (!this.containsAll(toRemove)) {","lastModifiedDate":"2022-10-09"},{"lineNumber":137,"author":{"gitId":"pratham31012002"},"content":"            throw new TagNotFoundException();","lastModifiedDate":"2022-10-09"},{"lineNumber":138,"author":{"gitId":"pratham31012002"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":139,"author":{"gitId":"pratham31012002"},"content":"        for (Tag t: toRemove) {","lastModifiedDate":"2022-10-09"},{"lineNumber":140,"author":{"gitId":"pratham31012002"},"content":"            this.remove(t);","lastModifiedDate":"2022-10-09"},{"lineNumber":141,"author":{"gitId":"pratham31012002"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":142,"author":{"gitId":"pratham31012002"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":143,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":144,"author":{"gitId":"pratham31012002"},"content":"    public void setTags(UniqueTagList replacement) {","lastModifiedDate":"2022-10-07"},{"lineNumber":145,"author":{"gitId":"pratham31012002"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2022-10-07"},{"lineNumber":146,"author":{"gitId":"pratham31012002"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2022-10-07"},{"lineNumber":147,"author":{"gitId":"pratham31012002"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":148,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":149,"author":{"gitId":"pratham31012002"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":150,"author":{"gitId":"pratham31012002"},"content":"     * Replaces the contents of this list with {@code tags}.","lastModifiedDate":"2022-10-07"},{"lineNumber":151,"author":{"gitId":"pratham31012002"},"content":"     * {@code tags} must not contain duplicate tags.","lastModifiedDate":"2022-10-07"},{"lineNumber":152,"author":{"gitId":"pratham31012002"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":153,"author":{"gitId":"pratham31012002"},"content":"    public void setTags(List\u003cTag\u003e tags) throws DuplicateTagException {","lastModifiedDate":"2022-10-09"},{"lineNumber":154,"author":{"gitId":"pratham31012002"},"content":"        requireAllNonNull(tags);","lastModifiedDate":"2022-10-07"},{"lineNumber":155,"author":{"gitId":"pratham31012002"},"content":"        if (!tagsAreUnique(tags)) {","lastModifiedDate":"2022-10-07"},{"lineNumber":156,"author":{"gitId":"pratham31012002"},"content":"            throw new DuplicateTagException();","lastModifiedDate":"2022-10-07"},{"lineNumber":157,"author":{"gitId":"pratham31012002"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":158,"author":{"gitId":"pratham31012002"},"content":"        internalList.setAll(tags);","lastModifiedDate":"2022-10-07"},{"lineNumber":159,"author":{"gitId":"pratham31012002"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":160,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":161,"author":{"gitId":"pratham31012002"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":162,"author":{"gitId":"pratham31012002"},"content":"     * Get the count of unique tags in the list. Used for displaying information","lastModifiedDate":"2022-10-07"},{"lineNumber":163,"author":{"gitId":"pratham31012002"},"content":"     * on total count of tags of a particular type.","lastModifiedDate":"2022-10-07"},{"lineNumber":164,"author":{"gitId":"pratham31012002"},"content":"     * @return the count of unique tags in the list.","lastModifiedDate":"2022-10-07"},{"lineNumber":165,"author":{"gitId":"pratham31012002"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":166,"author":{"gitId":"pratham31012002"},"content":"    public int getCount() {","lastModifiedDate":"2022-10-07"},{"lineNumber":167,"author":{"gitId":"pratham31012002"},"content":"        return internalList.size();","lastModifiedDate":"2022-10-07"},{"lineNumber":168,"author":{"gitId":"pratham31012002"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":169,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":170,"author":{"gitId":"pratham31012002"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":171,"author":{"gitId":"pratham31012002"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2022-10-07"},{"lineNumber":172,"author":{"gitId":"pratham31012002"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":173,"author":{"gitId":"pratham31012002"},"content":"    public ObservableList\u003cTag\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-10-07"},{"lineNumber":174,"author":{"gitId":"pratham31012002"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2022-10-07"},{"lineNumber":175,"author":{"gitId":"pratham31012002"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":176,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":177,"author":{"gitId":"pratham31012002"},"content":"    @Override","lastModifiedDate":"2022-10-07"},{"lineNumber":178,"author":{"gitId":"pratham31012002"},"content":"    public Iterator\u003cTag\u003e iterator() {","lastModifiedDate":"2022-10-07"},{"lineNumber":179,"author":{"gitId":"pratham31012002"},"content":"        return internalList.iterator();","lastModifiedDate":"2022-10-07"},{"lineNumber":180,"author":{"gitId":"pratham31012002"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":181,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":182,"author":{"gitId":"pratham31012002"},"content":"    @Override","lastModifiedDate":"2022-10-07"},{"lineNumber":183,"author":{"gitId":"pratham31012002"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-07"},{"lineNumber":184,"author":{"gitId":"pratham31012002"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-07"},{"lineNumber":185,"author":{"gitId":"pratham31012002"},"content":"                || (other instanceof UniqueTagList // instanceof handles nulls","lastModifiedDate":"2022-10-07"},{"lineNumber":186,"author":{"gitId":"pratham31012002"},"content":"                \u0026\u0026 internalList.equals(((UniqueTagList) other).internalList));","lastModifiedDate":"2022-10-07"},{"lineNumber":187,"author":{"gitId":"pratham31012002"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":188,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":189,"author":{"gitId":"pratham31012002"},"content":"    @Override","lastModifiedDate":"2022-10-07"},{"lineNumber":190,"author":{"gitId":"pratham31012002"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-07"},{"lineNumber":191,"author":{"gitId":"pratham31012002"},"content":"        return internalList.hashCode();","lastModifiedDate":"2022-10-07"},{"lineNumber":192,"author":{"gitId":"pratham31012002"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":193,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":194,"author":{"gitId":"pratham31012002"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":195,"author":{"gitId":"pratham31012002"},"content":"     * Returns true if {@code tags} contains only unique tags.","lastModifiedDate":"2022-10-07"},{"lineNumber":196,"author":{"gitId":"pratham31012002"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":197,"author":{"gitId":"pratham31012002"},"content":"    private boolean tagsAreUnique(List\u003cTag\u003e tags) {","lastModifiedDate":"2022-10-07"},{"lineNumber":198,"author":{"gitId":"pratham31012002"},"content":"        for (int i \u003d 0; i \u003c tags.size() - 1; i++) {","lastModifiedDate":"2022-10-07"},{"lineNumber":199,"author":{"gitId":"pratham31012002"},"content":"            for (int j \u003d i + 1; j \u003c tags.size(); j++) {","lastModifiedDate":"2022-10-07"},{"lineNumber":200,"author":{"gitId":"pratham31012002"},"content":"                if (tags.get(i).equals(tags.get(j))) {","lastModifiedDate":"2022-10-07"},{"lineNumber":201,"author":{"gitId":"pratham31012002"},"content":"                    return false;","lastModifiedDate":"2022-10-07"},{"lineNumber":202,"author":{"gitId":"pratham31012002"},"content":"                }","lastModifiedDate":"2022-10-07"},{"lineNumber":203,"author":{"gitId":"pratham31012002"},"content":"            }","lastModifiedDate":"2022-10-07"},{"lineNumber":204,"author":{"gitId":"pratham31012002"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":205,"author":{"gitId":"pratham31012002"},"content":"        return true;","lastModifiedDate":"2022-10-07"},{"lineNumber":206,"author":{"gitId":"pratham31012002"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":207,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":208,"author":{"gitId":"pratham31012002"},"content":"    public Stream\u003cTag\u003e toStream() {","lastModifiedDate":"2022-10-09"},{"lineNumber":209,"author":{"gitId":"pratham31012002"},"content":"        return internalList.stream();","lastModifiedDate":"2022-10-09"},{"lineNumber":210,"author":{"gitId":"pratham31012002"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":211,"author":{"gitId":"pratham31012002"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":212,"author":{"gitId":"pratham31012002"},"content":"    public String toString() {","lastModifiedDate":"2022-10-09"},{"lineNumber":213,"author":{"gitId":"pratham31012002"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-10-09"},{"lineNumber":214,"author":{"gitId":"pratham31012002"},"content":"        internalList.forEach(tag -\u003e builder.append(\", \" + tag.toString()));","lastModifiedDate":"2022-10-09"},{"lineNumber":215,"author":{"gitId":"pratham31012002"},"content":"        if (builder.toString().length() \u003c 2) {","lastModifiedDate":"2022-10-13"},{"lineNumber":216,"author":{"gitId":"pratham31012002"},"content":"            return builder.toString();","lastModifiedDate":"2022-10-13"},{"lineNumber":217,"author":{"gitId":"pratham31012002"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":218,"author":{"gitId":"pratham31012002"},"content":"        return builder.substring(2);","lastModifiedDate":"2022-10-09"},{"lineNumber":219,"author":{"gitId":"pratham31012002"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":220,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":221,"author":{"gitId":"pratham31012002"},"content":"    public List\u003cString\u003e getAsList() {","lastModifiedDate":"2022-10-24"},{"lineNumber":222,"author":{"gitId":"pratham31012002"},"content":"        return internalList.stream().map(tag -\u003e tag.getTagName()).collect(Collectors.toList());","lastModifiedDate":"2022-10-24"},{"lineNumber":223,"author":{"gitId":"pratham31012002"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":224,"author":{"gitId":"pratham31012002"},"content":"}","lastModifiedDate":"2022-10-07"}],"authorContributionMap":{"emptygx":13,"pratham31012002":211}},{"path":"src/main/java/seedu/clinkedin/model/tag/exceptions/DuplicateTagException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.model.tag.exceptions;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":3,"author":{"gitId":"pratham31012002"},"content":"/**","lastModifiedDate":"2022-10-07"},{"lineNumber":4,"author":{"gitId":"pratham31012002"},"content":" * Signals that the operation will result in duplicate tags.","lastModifiedDate":"2022-10-07"},{"lineNumber":5,"author":{"gitId":"pratham31012002"},"content":" */","lastModifiedDate":"2022-10-07"},{"lineNumber":6,"author":{"gitId":"pratham31012002"},"content":"public class DuplicateTagException extends RuntimeException {","lastModifiedDate":"2022-10-07"},{"lineNumber":7,"author":{"gitId":"pratham31012002"},"content":"    public DuplicateTagException() {","lastModifiedDate":"2022-10-07"},{"lineNumber":8,"author":{"gitId":"pratham31012002"},"content":"        super(\"Operation would result in duplicate tag names\");","lastModifiedDate":"2022-10-07"},{"lineNumber":9,"author":{"gitId":"pratham31012002"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":10,"author":{"gitId":"pratham31012002"},"content":"}","lastModifiedDate":"2022-10-07"}],"authorContributionMap":{"emptygx":1,"pratham31012002":9}},{"path":"src/main/java/seedu/clinkedin/model/tag/exceptions/TagNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.model.tag.exceptions;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":3,"author":{"gitId":"pratham31012002"},"content":"/**","lastModifiedDate":"2022-10-07"},{"lineNumber":4,"author":{"gitId":"pratham31012002"},"content":" * Signals that the operation is unable to find the specified tag name.","lastModifiedDate":"2022-10-07"},{"lineNumber":5,"author":{"gitId":"pratham31012002"},"content":" */","lastModifiedDate":"2022-10-07"},{"lineNumber":6,"author":{"gitId":"pratham31012002"},"content":"public class TagNotFoundException extends RuntimeException {}","lastModifiedDate":"2022-10-07"}],"authorContributionMap":{"emptygx":1,"pratham31012002":5}},{"path":"src/main/java/seedu/clinkedin/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.model.util;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"agarwal-anjali"},"content":"import java.net.MalformedURLException;","lastModifiedDate":"2022-10-28"},{"lineNumber":4,"author":{"gitId":"agarwal-anjali"},"content":"import java.net.URL;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"agarwal-anjali"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-28"},{"lineNumber":6,"author":{"gitId":"agarwal-anjali"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-28"},{"lineNumber":7,"author":{"gitId":"agarwal-anjali"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-28"},{"lineNumber":8,"author":{"gitId":"agarwal-anjali"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-25"},{"lineNumber":9,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":10,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.logic.parser.Prefix;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.AddressBook;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"agarwal-anjali"},"content":"import seedu.clinkedin.model.link.Link;","lastModifiedDate":"2022-10-23"},{"lineNumber":14,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.Address;","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.Email;","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.Name;","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.Note;","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.Person;","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.Phone;","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"ytingtan"},"content":"import seedu.clinkedin.model.person.Rating;","lastModifiedDate":"2022-10-17"},{"lineNumber":21,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.Status;","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.UniqueTagTypeMap;","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.tag.Tag;","lastModifiedDate":"2022-10-15"},{"lineNumber":24,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.tag.TagType;","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":30,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"josephaedan"},"content":"    public static final Note EMPTY_NOTE \u003d new Note(\"\");","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"agarwal-anjali"},"content":"    public static final Set\u003cLink\u003e EMPTY_LINKS \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-23"},{"lineNumber":33,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":35,"author":{"gitId":"agarwal-anjali"},"content":"    public static Person[] getSamplePersons() throws MalformedURLException {","lastModifiedDate":"2022-10-28"},{"lineNumber":36,"author":{"gitId":"pratham31012002"},"content":"        //        return null;","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"pratham31012002"},"content":"        //    to be rewritten.","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"pratham31012002"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"), getTagTypeMap(\"friends\"),","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"ytingtan"},"content":"                    new Status(\"Application Received\"), new Note(\"Has a dog.\"), new Rating(\"9\"),","lastModifiedDate":"2022-10-25"},{"lineNumber":42,"author":{"gitId":"agarwal-anjali"},"content":"                    getLinkSet(generateUrls(\"https://instagram.com\", \"https://github.com\"))),","lastModifiedDate":"2022-10-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":45,"author":{"gitId":"pratham31012002"},"content":"                        getTagTypeMap(\"colleagues\", \"friends\"),","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"ytingtan"},"content":"                    new Status(\"Application Received\"), EMPTY_NOTE, new Rating(\"5\"), EMPTY_LINKS),","lastModifiedDate":"2022-10-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":49,"author":{"gitId":"ytingtan"},"content":"                        getTagTypeMap(\"neighbours\"), new Status(\"OA in Progress\"), EMPTY_NOTE,","lastModifiedDate":"2022-10-17"},{"lineNumber":50,"author":{"gitId":"agarwal-anjali"},"content":"                    new Rating(\"7\"), getLinkSet(generateUrls(\"https://google.com\"))),","lastModifiedDate":"2022-10-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":53,"author":{"gitId":"ytingtan"},"content":"                        getTagTypeMap(\"family\"), new Status(\"Application Withdrawn\"), EMPTY_NOTE,","lastModifiedDate":"2022-10-17"},{"lineNumber":54,"author":{"gitId":"agarwal-anjali"},"content":"                    new Rating(\"6\"), getLinkSet(generateUrls(\"https://telegram.org\"))),","lastModifiedDate":"2022-10-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":57,"author":{"gitId":"pratham31012002"},"content":"                        getTagTypeMap(\"classmates\"), new Status(\"Rejected\"),","lastModifiedDate":"2022-10-13"},{"lineNumber":58,"author":{"gitId":"ytingtan"},"content":"                    new Note(\"Proficient in Python.\"), new Rating(\"3\"), EMPTY_LINKS),","lastModifiedDate":"2022-10-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":61,"author":{"gitId":"ytingtan"},"content":"                        getTagTypeMap(\"colleagues\"), new Status(\"Interview in Progress\"), EMPTY_NOTE,","lastModifiedDate":"2022-10-18"},{"lineNumber":62,"author":{"gitId":"agarwal-anjali"},"content":"                    new Rating(\"3\"), getLinkSet(generateUrls(\"https://snapchat.com\")))","lastModifiedDate":"2022-10-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":66,"author":{"gitId":"agarwal-anjali"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() throws MalformedURLException {","lastModifiedDate":"2022-10-28"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":77,"author":{"gitId":"pratham31012002"},"content":"    public static UniqueTagTypeMap getTagTypeMap(String... strings) {","lastModifiedDate":"2022-10-09"},{"lineNumber":78,"author":{"gitId":"agarwal-anjali"},"content":"        UniqueTagTypeMap tags \u003d new UniqueTagTypeMap();","lastModifiedDate":"2022-10-12"},{"lineNumber":79,"author":{"gitId":"agarwal-anjali"},"content":"        for (String tag: strings) {","lastModifiedDate":"2022-10-12"},{"lineNumber":80,"author":{"gitId":"agarwal-anjali"},"content":"            tags.mergeTag(new TagType(\"Skills\", new Prefix(\"st/\")), new Tag(tag));","lastModifiedDate":"2022-10-12"},{"lineNumber":81,"author":{"gitId":"agarwal-anjali"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":82,"author":{"gitId":"agarwal-anjali"},"content":"        return tags;","lastModifiedDate":"2022-10-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":85,"author":{"gitId":"agarwal-anjali"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":86,"author":{"gitId":"agarwal-anjali"},"content":"     * Returns a set of links objects instantiated with the provided URLs.","lastModifiedDate":"2022-10-28"},{"lineNumber":87,"author":{"gitId":"agarwal-anjali"},"content":"     * @param strings URLs needed to instantiate Set of Links.","lastModifiedDate":"2022-10-28"},{"lineNumber":88,"author":{"gitId":"agarwal-anjali"},"content":"     * @return Set of links.","lastModifiedDate":"2022-10-28"},{"lineNumber":89,"author":{"gitId":"agarwal-anjali"},"content":"     * @throws MalformedURLException","lastModifiedDate":"2022-10-28"},{"lineNumber":90,"author":{"gitId":"agarwal-anjali"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":91,"author":{"gitId":"agarwal-anjali"},"content":"    public static URL[] generateUrls(String... strings) throws MalformedURLException {","lastModifiedDate":"2022-10-28"},{"lineNumber":92,"author":{"gitId":"agarwal-anjali"},"content":"        try {","lastModifiedDate":"2022-10-28"},{"lineNumber":93,"author":{"gitId":"agarwal-anjali"},"content":"            URL[] urls \u003d new URL[strings.length];","lastModifiedDate":"2022-10-28"},{"lineNumber":94,"author":{"gitId":"agarwal-anjali"},"content":"            int i \u003d 0;","lastModifiedDate":"2022-10-28"},{"lineNumber":95,"author":{"gitId":"agarwal-anjali"},"content":"            for (String url: strings) {","lastModifiedDate":"2022-10-28"},{"lineNumber":96,"author":{"gitId":"agarwal-anjali"},"content":"                urls[i] \u003d new URL(url);","lastModifiedDate":"2022-10-28"},{"lineNumber":97,"author":{"gitId":"agarwal-anjali"},"content":"                i++;","lastModifiedDate":"2022-10-28"},{"lineNumber":98,"author":{"gitId":"agarwal-anjali"},"content":"            }","lastModifiedDate":"2022-10-28"},{"lineNumber":99,"author":{"gitId":"agarwal-anjali"},"content":"            return urls;","lastModifiedDate":"2022-10-28"},{"lineNumber":100,"author":{"gitId":"agarwal-anjali"},"content":"        } catch (MalformedURLException e) {","lastModifiedDate":"2022-10-28"},{"lineNumber":101,"author":{"gitId":"agarwal-anjali"},"content":"            throw new MalformedURLException();","lastModifiedDate":"2022-10-28"},{"lineNumber":102,"author":{"gitId":"agarwal-anjali"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":103,"author":{"gitId":"agarwal-anjali"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":104,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":105,"author":{"gitId":"agarwal-anjali"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":106,"author":{"gitId":"agarwal-anjali"},"content":"     * Returns a link set containing the list of strings given.","lastModifiedDate":"2022-10-25"},{"lineNumber":107,"author":{"gitId":"agarwal-anjali"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":108,"author":{"gitId":"agarwal-anjali"},"content":"    public static Set\u003cLink\u003e getLinkSet(URL... urls) {","lastModifiedDate":"2022-10-27"},{"lineNumber":109,"author":{"gitId":"agarwal-anjali"},"content":"        return Arrays.stream(urls)","lastModifiedDate":"2022-10-27"},{"lineNumber":110,"author":{"gitId":"agarwal-anjali"},"content":"                    .map(Link::new)","lastModifiedDate":"2022-10-25"},{"lineNumber":111,"author":{"gitId":"agarwal-anjali"},"content":"                    .collect(Collectors.toSet());","lastModifiedDate":"2022-10-25"},{"lineNumber":112,"author":{"gitId":"agarwal-anjali"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"agarwal-anjali":48,"ytingtan":8,"emptygx":14,"josephaedan":3,"pratham31012002":6,"-":34}},{"path":"src/main/java/seedu/clinkedin/storage/AddressBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.storage;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"emptygx"},"content":" * Represents a storage for {@link seedu.clinkedin.model.AddressBook}.","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public interface AddressBookStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns AddressBook data as a {@link ReadOnlyAddressBook}.","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @see #getAddressBookFilePath()","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Saves the given {@link ReadOnlyAddressBook} to the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param addressBook cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @see #saveAddressBook(ReadOnlyAddressBook)","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException;","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"emptygx":4,"-":41}},{"path":"src/main/java/seedu/clinkedin/storage/JsonAdaptedLink.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"agarwal-anjali"},"content":"package seedu.clinkedin.storage;","lastModifiedDate":"2022-10-23"},{"lineNumber":2,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":3,"author":{"gitId":"agarwal-anjali"},"content":"import java.net.MalformedURLException;","lastModifiedDate":"2022-10-28"},{"lineNumber":4,"author":{"gitId":"agarwal-anjali"},"content":"import java.net.URL;","lastModifiedDate":"2022-10-28"},{"lineNumber":5,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":6,"author":{"gitId":"agarwal-anjali"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-10-23"},{"lineNumber":7,"author":{"gitId":"agarwal-anjali"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2022-10-23"},{"lineNumber":8,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":9,"author":{"gitId":"agarwal-anjali"},"content":"import seedu.clinkedin.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-23"},{"lineNumber":10,"author":{"gitId":"agarwal-anjali"},"content":"import seedu.clinkedin.model.link.Link;","lastModifiedDate":"2022-10-23"},{"lineNumber":11,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":12,"author":{"gitId":"agarwal-anjali"},"content":"/**","lastModifiedDate":"2022-10-23"},{"lineNumber":13,"author":{"gitId":"agarwal-anjali"},"content":" * Jackson-friendly version of {@link Link}.","lastModifiedDate":"2022-10-23"},{"lineNumber":14,"author":{"gitId":"agarwal-anjali"},"content":" */","lastModifiedDate":"2022-10-23"},{"lineNumber":15,"author":{"gitId":"agarwal-anjali"},"content":"class JsonAdaptedLink {","lastModifiedDate":"2022-10-23"},{"lineNumber":16,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":17,"author":{"gitId":"agarwal-anjali"},"content":"    private final String link;","lastModifiedDate":"2022-10-23"},{"lineNumber":18,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":19,"author":{"gitId":"agarwal-anjali"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":20,"author":{"gitId":"agarwal-anjali"},"content":"     * Constructs a {@code JsonAdaptedLink} with the given {@code link}.","lastModifiedDate":"2022-10-23"},{"lineNumber":21,"author":{"gitId":"agarwal-anjali"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":22,"author":{"gitId":"agarwal-anjali"},"content":"    @JsonCreator","lastModifiedDate":"2022-10-23"},{"lineNumber":23,"author":{"gitId":"agarwal-anjali"},"content":"    public JsonAdaptedLink(String link) {","lastModifiedDate":"2022-10-23"},{"lineNumber":24,"author":{"gitId":"agarwal-anjali"},"content":"        this.link \u003d link;","lastModifiedDate":"2022-10-23"},{"lineNumber":25,"author":{"gitId":"agarwal-anjali"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":26,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":27,"author":{"gitId":"agarwal-anjali"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":28,"author":{"gitId":"agarwal-anjali"},"content":"     * Converts a given {@code Link} into this class for Jackson use.","lastModifiedDate":"2022-10-23"},{"lineNumber":29,"author":{"gitId":"agarwal-anjali"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":30,"author":{"gitId":"agarwal-anjali"},"content":"    public JsonAdaptedLink(Link source) {","lastModifiedDate":"2022-10-23"},{"lineNumber":31,"author":{"gitId":"agarwal-anjali"},"content":"        link \u003d source.link.toString();","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"agarwal-anjali"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":33,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":34,"author":{"gitId":"agarwal-anjali"},"content":"    @JsonValue","lastModifiedDate":"2022-10-23"},{"lineNumber":35,"author":{"gitId":"agarwal-anjali"},"content":"    public String getLink() {","lastModifiedDate":"2022-10-23"},{"lineNumber":36,"author":{"gitId":"agarwal-anjali"},"content":"        return link;","lastModifiedDate":"2022-10-23"},{"lineNumber":37,"author":{"gitId":"agarwal-anjali"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":38,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":39,"author":{"gitId":"agarwal-anjali"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":40,"author":{"gitId":"agarwal-anjali"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2022-10-23"},{"lineNumber":41,"author":{"gitId":"agarwal-anjali"},"content":"     *","lastModifiedDate":"2022-10-23"},{"lineNumber":42,"author":{"gitId":"agarwal-anjali"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2022-10-23"},{"lineNumber":43,"author":{"gitId":"agarwal-anjali"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":44,"author":{"gitId":"agarwal-anjali"},"content":"    public Link toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-23"},{"lineNumber":45,"author":{"gitId":"agarwal-anjali"},"content":"        try {","lastModifiedDate":"2022-10-27"},{"lineNumber":46,"author":{"gitId":"agarwal-anjali"},"content":"            URL url \u003d new URL(link);","lastModifiedDate":"2022-10-27"},{"lineNumber":47,"author":{"gitId":"agarwal-anjali"},"content":"            return new Link(url);","lastModifiedDate":"2022-10-27"},{"lineNumber":48,"author":{"gitId":"agarwal-anjali"},"content":"        } catch (MalformedURLException m) {","lastModifiedDate":"2022-10-27"},{"lineNumber":49,"author":{"gitId":"agarwal-anjali"},"content":"            throw new IllegalValueException(m.getMessage());","lastModifiedDate":"2022-10-27"},{"lineNumber":50,"author":{"gitId":"agarwal-anjali"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":51,"author":{"gitId":"agarwal-anjali"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":52,"author":{"gitId":"agarwal-anjali"},"content":"}","lastModifiedDate":"2022-10-23"}],"authorContributionMap":{"agarwal-anjali":52}},{"path":"src/main/java/seedu/clinkedin/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.storage;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"agarwal-anjali"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"agarwal-anjali"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"agarwal-anjali"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-24"},{"lineNumber":6,"author":{"gitId":"agarwal-anjali"},"content":"import java.util.List;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"agarwal-anjali"},"content":"import java.util.Map;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"agarwal-anjali"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-24"},{"lineNumber":9,"author":{"gitId":"agarwal-anjali"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"agarwal-anjali"},"content":"import javafx.collections.ObservableMap;","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"agarwal-anjali"},"content":"import seedu.clinkedin.model.link.Link;","lastModifiedDate":"2022-10-23"},{"lineNumber":17,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.Address;","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.Email;","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.Name;","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.Note;","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.Person;","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.Phone;","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"ytingtan"},"content":"import seedu.clinkedin.model.person.Rating;","lastModifiedDate":"2022-10-17"},{"lineNumber":24,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.Status;","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.UniqueTagTypeMap;","lastModifiedDate":"2022-10-15"},{"lineNumber":26,"author":{"gitId":"pratham31012002"},"content":"import seedu.clinkedin.model.person.exceptions.TagTypeNotFoundException;","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.tag.Tag;","lastModifiedDate":"2022-10-15"},{"lineNumber":28,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.tag.TagType;","lastModifiedDate":"2022-10-15"},{"lineNumber":29,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.tag.UniqueTagList;","lastModifiedDate":"2022-10-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"pratham31012002"},"content":"    private final List\u003cList\u003cJsonAdaptedTag\u003e\u003e tags;","lastModifiedDate":"2022-10-27"},{"lineNumber":43,"author":{"gitId":"ytingtan"},"content":"    private final String status;","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"josephaedan"},"content":"    private final String note;","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"ytingtan"},"content":"    private final String rating;","lastModifiedDate":"2022-10-17"},{"lineNumber":46,"author":{"gitId":"pratham31012002"},"content":"    private final List\u003cJsonAdaptedLink\u003e links;","lastModifiedDate":"2022-10-27"},{"lineNumber":47,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"ytingtan"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2022-10-17"},{"lineNumber":54,"author":{"gitId":"pratham31012002"},"content":"            @JsonProperty(\"tags\") List\u003cList\u003cJsonAdaptedTag\u003e\u003e tags, @JsonProperty(\"status\") String status,","lastModifiedDate":"2022-10-13"},{"lineNumber":55,"author":{"gitId":"ytingtan"},"content":"            @JsonProperty(\"note\") String note, @JsonProperty(\"rating\") String rating,","lastModifiedDate":"2022-10-25"},{"lineNumber":56,"author":{"gitId":"ytingtan"},"content":"            @JsonProperty(\"links\") List\u003cJsonAdaptedLink\u003e links) {","lastModifiedDate":"2022-10-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"pratham31012002"},"content":"        this.tags \u003d new ArrayList\u003c\u003e(tags);","lastModifiedDate":"2022-10-27"},{"lineNumber":62,"author":{"gitId":"pratham31012002"},"content":"        this.note \u003d note;","lastModifiedDate":"2022-10-13"},{"lineNumber":63,"author":{"gitId":"ytingtan"},"content":"        this.status \u003d status;","lastModifiedDate":"2022-10-09"},{"lineNumber":64,"author":{"gitId":"ytingtan"},"content":"        this.rating \u003d rating;","lastModifiedDate":"2022-10-17"},{"lineNumber":65,"author":{"gitId":"pratham31012002"},"content":"        this.links \u003d new ArrayList\u003c\u003e(links);","lastModifiedDate":"2022-10-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"pratham31012002"},"content":"        tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-27"},{"lineNumber":77,"author":{"gitId":"agarwal-anjali"},"content":"        ObservableMap\u003cTagType, UniqueTagList\u003e map \u003d source.getTags();","lastModifiedDate":"2022-10-12"},{"lineNumber":78,"author":{"gitId":"agarwal-anjali"},"content":"        for (TagType t: map.keySet()) {","lastModifiedDate":"2022-10-12"},{"lineNumber":79,"author":{"gitId":"agarwal-anjali"},"content":"            Tag tagtype \u003d new Tag(t.getTagTypeName());","lastModifiedDate":"2022-10-12"},{"lineNumber":80,"author":{"gitId":"agarwal-anjali"},"content":"            JsonAdaptedTag jTagType \u003d new JsonAdaptedTag(tagtype);","lastModifiedDate":"2022-10-12"},{"lineNumber":81,"author":{"gitId":"agarwal-anjali"},"content":"            List\u003cJsonAdaptedTag\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-12"},{"lineNumber":82,"author":{"gitId":"agarwal-anjali"},"content":"            list.add(jTagType);","lastModifiedDate":"2022-10-12"},{"lineNumber":83,"author":{"gitId":"agarwal-anjali"},"content":"            list.addAll(map.get(t).toStream().map(JsonAdaptedTag::new).collect(Collectors.toList()));","lastModifiedDate":"2022-10-12"},{"lineNumber":84,"author":{"gitId":"agarwal-anjali"},"content":"            tags.add(list);","lastModifiedDate":"2022-10-12"},{"lineNumber":85,"author":{"gitId":"agarwal-anjali"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":86,"author":{"gitId":"ytingtan"},"content":"        status \u003d source.getStatus().status;","lastModifiedDate":"2022-10-09"},{"lineNumber":87,"author":{"gitId":"josephaedan"},"content":"        note \u003d source.getNote().value;","lastModifiedDate":"2022-10-12"},{"lineNumber":88,"author":{"gitId":"ytingtan"},"content":"        rating \u003d source.getRating().toString();","lastModifiedDate":"2022-10-17"},{"lineNumber":89,"author":{"gitId":"pratham31012002"},"content":"        links \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-27"},{"lineNumber":90,"author":{"gitId":"agarwal-anjali"},"content":"        links.addAll(source.getLinks().stream().map(JsonAdaptedLink::new).collect(Collectors.toList()));","lastModifiedDate":"2022-10-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"pratham31012002"},"content":"        if (tags \u003d\u003d null) {","lastModifiedDate":"2022-10-27"},{"lineNumber":100,"author":{"gitId":"pratham31012002"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"tags\"));","lastModifiedDate":"2022-10-27"},{"lineNumber":101,"author":{"gitId":"pratham31012002"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":102,"author":{"gitId":"agarwal-anjali"},"content":"        final Map\u003cTagType, UniqueTagList\u003e personTags \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-10-10"},{"lineNumber":103,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":104,"author":{"gitId":"agarwal-anjali"},"content":"        for (List\u003cJsonAdaptedTag\u003e tags : tags) {","lastModifiedDate":"2022-10-12"},{"lineNumber":105,"author":{"gitId":"agarwal-anjali"},"content":"            String tagType \u003d tags.get(0).toModelType().toString();","lastModifiedDate":"2022-10-12"},{"lineNumber":106,"author":{"gitId":"agarwal-anjali"},"content":"            tagType \u003d tagType.substring(1, tagType.length() - 1);","lastModifiedDate":"2022-10-12"},{"lineNumber":107,"author":{"gitId":"pratham31012002"},"content":"            TagType t;","lastModifiedDate":"2022-10-27"},{"lineNumber":108,"author":{"gitId":"pratham31012002"},"content":"            try {","lastModifiedDate":"2022-10-27"},{"lineNumber":109,"author":{"gitId":"pratham31012002"},"content":"                t \u003d new TagType(tagType, UniqueTagTypeMap.getPrefixFromTagType(tagType));","lastModifiedDate":"2022-10-27"},{"lineNumber":110,"author":{"gitId":"pratham31012002"},"content":"            } catch (TagTypeNotFoundException tte) {","lastModifiedDate":"2022-10-27"},{"lineNumber":111,"author":{"gitId":"pratham31012002"},"content":"                throw new IllegalValueException(tte.getMessage());","lastModifiedDate":"2022-10-27"},{"lineNumber":112,"author":{"gitId":"pratham31012002"},"content":"            }","lastModifiedDate":"2022-10-27"},{"lineNumber":113,"author":{"gitId":"agarwal-anjali"},"content":"            List\u003cTag\u003e tagList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-12"},{"lineNumber":114,"author":{"gitId":"agarwal-anjali"},"content":"            for (JsonAdaptedTag jsonAdaptedTag : tags.subList(1, tags.size())) {","lastModifiedDate":"2022-10-12"},{"lineNumber":115,"author":{"gitId":"agarwal-anjali"},"content":"                Tag toModelType \u003d jsonAdaptedTag.toModelType();","lastModifiedDate":"2022-10-12"},{"lineNumber":116,"author":{"gitId":"agarwal-anjali"},"content":"                tagList.add(toModelType);","lastModifiedDate":"2022-10-12"},{"lineNumber":117,"author":{"gitId":"agarwal-anjali"},"content":"            }","lastModifiedDate":"2022-10-12"},{"lineNumber":118,"author":{"gitId":"agarwal-anjali"},"content":"            UniqueTagList uniqueTagList \u003d new UniqueTagList();","lastModifiedDate":"2022-10-12"},{"lineNumber":119,"author":{"gitId":"agarwal-anjali"},"content":"            uniqueTagList.setTags(tagList);","lastModifiedDate":"2022-10-12"},{"lineNumber":120,"author":{"gitId":"agarwal-anjali"},"content":"            personTags.put(t, uniqueTagList);","lastModifiedDate":"2022-10-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"pratham31012002"},"content":"        if (links \u003d\u003d null) {","lastModifiedDate":"2022-10-27"},{"lineNumber":124,"author":{"gitId":"pratham31012002"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"links\"));","lastModifiedDate":"2022-10-27"},{"lineNumber":125,"author":{"gitId":"pratham31012002"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":126,"author":{"gitId":"agarwal-anjali"},"content":"        final List\u003cLink\u003e personLinks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-23"},{"lineNumber":127,"author":{"gitId":"agarwal-anjali"},"content":"        for (JsonAdaptedLink link : links) {","lastModifiedDate":"2022-10-23"},{"lineNumber":128,"author":{"gitId":"agarwal-anjali"},"content":"            personLinks.add(link.toModelType());","lastModifiedDate":"2022-10-23"},{"lineNumber":129,"author":{"gitId":"agarwal-anjali"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":130,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":163,"author":{"gitId":"agarwal-anjali"},"content":"        final UniqueTagTypeMap modelTags \u003d new UniqueTagTypeMap();","lastModifiedDate":"2022-10-10"},{"lineNumber":164,"author":{"gitId":"agarwal-anjali"},"content":"        modelTags.setTagTypeMap(personTags);","lastModifiedDate":"2022-10-10"},{"lineNumber":165,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":166,"author":{"gitId":"ytingtan"},"content":"        if (status \u003d\u003d null) {","lastModifiedDate":"2022-10-09"},{"lineNumber":167,"author":{"gitId":"ytingtan"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Status.class.getSimpleName()));","lastModifiedDate":"2022-10-09"},{"lineNumber":168,"author":{"gitId":"ytingtan"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":169,"author":{"gitId":"ytingtan"},"content":"        if (!Status.isValidStatus(status)) {","lastModifiedDate":"2022-10-09"},{"lineNumber":170,"author":{"gitId":"ytingtan"},"content":"            throw new IllegalValueException(Status.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-09"},{"lineNumber":171,"author":{"gitId":"ytingtan"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":172,"author":{"gitId":"ytingtan"},"content":"        final Status modelStatus \u003d new Status(status);","lastModifiedDate":"2022-10-09"},{"lineNumber":173,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":174,"author":{"gitId":"josephaedan"},"content":"        if (note \u003d\u003d null) {","lastModifiedDate":"2022-10-12"},{"lineNumber":175,"author":{"gitId":"josephaedan"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Note.class.getSimpleName()));","lastModifiedDate":"2022-10-12"},{"lineNumber":176,"author":{"gitId":"josephaedan"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":177,"author":{"gitId":"josephaedan"},"content":"        final Note modelNote \u003d new Note(note);","lastModifiedDate":"2022-10-12"},{"lineNumber":178,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":179,"author":{"gitId":"ytingtan"},"content":"        if (rating \u003d\u003d null) {","lastModifiedDate":"2022-10-17"},{"lineNumber":180,"author":{"gitId":"ytingtan"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Rating.class.getSimpleName()));","lastModifiedDate":"2022-10-17"},{"lineNumber":181,"author":{"gitId":"ytingtan"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":182,"author":{"gitId":"ytingtan"},"content":"        final Rating modelRating \u003d new Rating(rating);","lastModifiedDate":"2022-10-17"},{"lineNumber":183,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":184,"author":{"gitId":"agarwal-anjali"},"content":"        final Set\u003cLink\u003e modelLinks \u003d new HashSet\u003c\u003e(personLinks);","lastModifiedDate":"2022-10-23"},{"lineNumber":185,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":186,"author":{"gitId":"agarwal-anjali"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelAddress, modelTags, modelStatus, modelNote,","lastModifiedDate":"2022-10-23"},{"lineNumber":187,"author":{"gitId":"ytingtan"},"content":"                modelRating, modelLinks);","lastModifiedDate":"2022-10-25"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":190,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"},{"lineNumber":191,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":192,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"agarwal-anjali":44,"ytingtan":24,"emptygx":13,"pratham31012002":23,"josephaedan":7,"-":81}},{"path":"src/main/java/seedu/clinkedin/storage/JsonAdaptedPrefixMap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"agarwal-anjali"},"content":"package seedu.clinkedin.storage;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":3,"author":{"gitId":"agarwal-anjali"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"agarwal-anjali"},"content":"import java.util.Map;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"agarwal-anjali"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"agarwal-anjali"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"agarwal-anjali"},"content":"import javafx.collections.ObservableMap;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"agarwal-anjali"},"content":"import seedu.clinkedin.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"agarwal-anjali"},"content":"import seedu.clinkedin.logic.parser.Prefix;","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"agarwal-anjali"},"content":"import seedu.clinkedin.model.tag.Tag;","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"agarwal-anjali"},"content":"import seedu.clinkedin.model.tag.TagType;","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"agarwal-anjali"},"content":"/**","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"agarwal-anjali"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"agarwal-anjali"},"content":" */","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"agarwal-anjali"},"content":"class JsonAdaptedPrefixMap {","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"agarwal-anjali"},"content":"    private final Map\u003cString, JsonAdaptedTagType\u003e prefixMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"agarwal-anjali"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"agarwal-anjali"},"content":"     * Constructs a {@code JsonAdaptedTagTypeMap} with the given {@code tagTypeMap}.","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"agarwal-anjali"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"agarwal-anjali"},"content":"    @JsonCreator","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"agarwal-anjali"},"content":"    public JsonAdaptedPrefixMap(Map\u003cString, JsonAdaptedTagType\u003e prefixMap) {","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"agarwal-anjali"},"content":"        this.prefixMap.putAll(prefixMap);","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"agarwal-anjali"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"agarwal-anjali"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"agarwal-anjali"},"content":"     * Converts a given {@code TagTypeMap} into this class for Jackson use.","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"agarwal-anjali"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"agarwal-anjali"},"content":"    public JsonAdaptedPrefixMap(ObservableMap\u003cPrefix, TagType\u003e prefixMap) {","lastModifiedDate":"2022-10-27"},{"lineNumber":34,"author":{"gitId":"agarwal-anjali"},"content":"        for (Prefix prefix: prefixMap.keySet()) {","lastModifiedDate":"2022-10-27"},{"lineNumber":35,"author":{"gitId":"agarwal-anjali"},"content":"            this.prefixMap.put(prefix.getPrefix(),","lastModifiedDate":"2022-10-27"},{"lineNumber":36,"author":{"gitId":"agarwal-anjali"},"content":"                    new JsonAdaptedTagType(prefixMap.get(prefix)));","lastModifiedDate":"2022-10-27"},{"lineNumber":37,"author":{"gitId":"agarwal-anjali"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":38,"author":{"gitId":"agarwal-anjali"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":39,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":40,"author":{"gitId":"agarwal-anjali"},"content":"    @JsonValue","lastModifiedDate":"2022-10-27"},{"lineNumber":41,"author":{"gitId":"agarwal-anjali"},"content":"    public Map\u003cString, JsonAdaptedTagType\u003e getPrefixMap() {","lastModifiedDate":"2022-10-27"},{"lineNumber":42,"author":{"gitId":"agarwal-anjali"},"content":"        return prefixMap;","lastModifiedDate":"2022-10-27"},{"lineNumber":43,"author":{"gitId":"agarwal-anjali"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":44,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":45,"author":{"gitId":"agarwal-anjali"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":46,"author":{"gitId":"agarwal-anjali"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2022-10-27"},{"lineNumber":47,"author":{"gitId":"agarwal-anjali"},"content":"     *","lastModifiedDate":"2022-10-27"},{"lineNumber":48,"author":{"gitId":"agarwal-anjali"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2022-10-27"},{"lineNumber":49,"author":{"gitId":"agarwal-anjali"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":50,"author":{"gitId":"agarwal-anjali"},"content":"    public Map\u003cPrefix, TagType\u003e toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-27"},{"lineNumber":51,"author":{"gitId":"agarwal-anjali"},"content":"        Map\u003cPrefix, TagType\u003e map \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-10-27"},{"lineNumber":52,"author":{"gitId":"agarwal-anjali"},"content":"        for (String prefix: prefixMap.keySet()) {","lastModifiedDate":"2022-10-27"},{"lineNumber":53,"author":{"gitId":"agarwal-anjali"},"content":"            map.put(new Prefix(prefix), prefixMap.get(prefix).toModelType());","lastModifiedDate":"2022-10-27"},{"lineNumber":54,"author":{"gitId":"agarwal-anjali"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":55,"author":{"gitId":"agarwal-anjali"},"content":"        return map;","lastModifiedDate":"2022-10-27"},{"lineNumber":56,"author":{"gitId":"agarwal-anjali"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":57,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":58,"author":{"gitId":"agarwal-anjali"},"content":"}","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"agarwal-anjali":58}},{"path":"src/main/java/seedu/clinkedin/storage/JsonAdaptedTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.storage;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.tag.Tag;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"class JsonAdaptedTag {","lastModifiedDate":"2018-12-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(String tagName) {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(Tag source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        tagName \u003d source.tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public String getTagName() {","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Tag toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(tagName)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Tag(tagName);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"emptygx":3,"-":45}},{"path":"src/main/java/seedu/clinkedin/storage/JsonAdaptedTagList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.storage;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"pratham31012002"},"content":"import java.util.List;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"pratham31012002"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"agarwal-anjali"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"agarwal-anjali"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.tag.Tag;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.tag.UniqueTagList;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"agarwal-anjali"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"agarwal-anjali"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"agarwal-anjali"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"agarwal-anjali"},"content":"class JsonAdaptedTagList {","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"agarwal-anjali"},"content":"    private final List\u003cJsonAdaptedTag\u003e tags;","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"agarwal-anjali"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"agarwal-anjali"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"agarwal-anjali"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"agarwal-anjali"},"content":"    @JsonCreator","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"agarwal-anjali"},"content":"    public JsonAdaptedTagList(List\u003cJsonAdaptedTag\u003e tags) {","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"agarwal-anjali"},"content":"        this.tags \u003d tags;","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"agarwal-anjali"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"agarwal-anjali"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"agarwal-anjali"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"agarwal-anjali"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"agarwal-anjali"},"content":"    public JsonAdaptedTagList(UniqueTagList source) {","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"agarwal-anjali"},"content":"        this.tags \u003d source.toStream().map(JsonAdaptedTag::new).collect(Collectors.toList());","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"agarwal-anjali"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"agarwal-anjali"},"content":"    @JsonValue","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"agarwal-anjali"},"content":"    public List\u003cJsonAdaptedTag\u003e getTagList() {","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"agarwal-anjali"},"content":"        return tags;","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"agarwal-anjali"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"agarwal-anjali"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"agarwal-anjali"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"agarwal-anjali"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"agarwal-anjali"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"agarwal-anjali"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"agarwal-anjali"},"content":"    public UniqueTagList toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"agarwal-anjali"},"content":"        UniqueTagList list \u003d new UniqueTagList();","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"agarwal-anjali"},"content":"        for (JsonAdaptedTag tag : tags) {","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"agarwal-anjali"},"content":"            list.add(tag.toModelType());","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"agarwal-anjali"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"agarwal-anjali"},"content":"        return list;","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"agarwal-anjali"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"agarwal-anjali"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"agarwal-anjali":46,"emptygx":4,"pratham31012002":3}},{"path":"src/main/java/seedu/clinkedin/storage/JsonAdaptedTagType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.storage;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"agarwal-anjali"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"agarwal-anjali"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"agarwal-anjali"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.logic.parser.Prefix;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.tag.Tag;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.tag.TagType;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"agarwal-anjali"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"agarwal-anjali"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"agarwal-anjali"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"agarwal-anjali"},"content":"class JsonAdaptedTagType {","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"agarwal-anjali"},"content":"    private final String tagType;","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"agarwal-anjali"},"content":"    private final String prefix;","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"agarwal-anjali"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"agarwal-anjali"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"agarwal-anjali"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"agarwal-anjali"},"content":"    @JsonCreator","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"agarwal-anjali"},"content":"    public JsonAdaptedTagType(@JsonProperty(\"tagType\") String tagType, @JsonProperty(\"prefix\") String prefix) {","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"agarwal-anjali"},"content":"        this.tagType \u003d tagType;","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"agarwal-anjali"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"agarwal-anjali"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"agarwal-anjali"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"agarwal-anjali"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"agarwal-anjali"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"agarwal-anjali"},"content":"    public JsonAdaptedTagType(TagType source) {","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"agarwal-anjali"},"content":"        this.tagType \u003d source.tagType;","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"agarwal-anjali"},"content":"        this.prefix \u003d source.getPrefix().getPrefix();","lastModifiedDate":"2022-10-26"},{"lineNumber":35,"author":{"gitId":"agarwal-anjali"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"agarwal-anjali"},"content":"    @JsonValue","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"agarwal-anjali"},"content":"    public String getTagType() {","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"agarwal-anjali"},"content":"        return tagType;","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"agarwal-anjali"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"agarwal-anjali"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"agarwal-anjali"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"agarwal-anjali"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"agarwal-anjali"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"agarwal-anjali"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"agarwal-anjali"},"content":"    public TagType toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"agarwal-anjali"},"content":"        if (!TagType.isValidTagType(tagType)) {","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"agarwal-anjali"},"content":"            throw new IllegalValueException(TagType.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"agarwal-anjali"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"agarwal-anjali"},"content":"        return new TagType(tagType, new Prefix(prefix));","lastModifiedDate":"2022-10-26"},{"lineNumber":52,"author":{"gitId":"agarwal-anjali"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"agarwal-anjali"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"agarwal-anjali":48,"emptygx":5}},{"path":"src/main/java/seedu/clinkedin/storage/JsonAdaptedTagTypeMap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.storage;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"pratham31012002"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"pratham31012002"},"content":"import java.util.Map;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"agarwal-anjali"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"agarwal-anjali"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"agarwal-anjali"},"content":"import javafx.collections.ObservableMap;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.tag.Tag;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.tag.TagType;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.tag.UniqueTagList;","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"agarwal-anjali"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"agarwal-anjali"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"agarwal-anjali"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"agarwal-anjali"},"content":"class JsonAdaptedTagTypeMap {","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"agarwal-anjali"},"content":"    private final Map\u003cJsonAdaptedTagType, JsonAdaptedTagList\u003e tagTypeMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"agarwal-anjali"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"agarwal-anjali"},"content":"     * Constructs a {@code JsonAdaptedTagTypeMap} with the given {@code tagTypeMap}.","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"agarwal-anjali"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"agarwal-anjali"},"content":"    @JsonCreator","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"agarwal-anjali"},"content":"    public JsonAdaptedTagTypeMap(Map\u003cJsonAdaptedTagType, JsonAdaptedTagList\u003e tagTypeMap) {","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"agarwal-anjali"},"content":"        this.tagTypeMap.putAll(tagTypeMap);","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"agarwal-anjali"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"agarwal-anjali"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"agarwal-anjali"},"content":"     * Converts a given {@code TagTypeMap} into this class for Jackson use.","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"agarwal-anjali"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"agarwal-anjali"},"content":"    public JsonAdaptedTagTypeMap(ObservableMap\u003cTagType, UniqueTagList\u003e tagTypeMap) {","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"agarwal-anjali"},"content":"        for (TagType key: tagTypeMap.keySet()) {","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"agarwal-anjali"},"content":"            this.tagTypeMap.put(new JsonAdaptedTagType(key),","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"agarwal-anjali"},"content":"                    new JsonAdaptedTagList(tagTypeMap.get(key)));","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"agarwal-anjali"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"agarwal-anjali"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"agarwal-anjali"},"content":"    @JsonValue","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"agarwal-anjali"},"content":"    public Map\u003cJsonAdaptedTagType, JsonAdaptedTagList\u003e getTagTypeMap() {","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"agarwal-anjali"},"content":"        return tagTypeMap;","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"agarwal-anjali"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"agarwal-anjali"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"agarwal-anjali"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"agarwal-anjali"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"agarwal-anjali"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"agarwal-anjali"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"agarwal-anjali"},"content":"    public Map\u003cTagType, UniqueTagList\u003e toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"agarwal-anjali"},"content":"        Map\u003cTagType, UniqueTagList\u003e map \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"agarwal-anjali"},"content":"        for (JsonAdaptedTagType key: tagTypeMap.keySet()) {","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"agarwal-anjali"},"content":"            map.put(key.toModelType(), tagTypeMap.get(key).toModelType());","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"agarwal-anjali"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"agarwal-anjali"},"content":"        return map;","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"agarwal-anjali"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"agarwal-anjali"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"agarwal-anjali":50,"emptygx":5,"pratham31012002":3}},{"path":"src/main/java/seedu/clinkedin/storage/JsonAddressBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.storage;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.commons.core.LogsCenter;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.commons.util.FileUtil;","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.commons.util.JsonUtil;","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A class to access AddressBook data stored as a json file on the hard disk.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorage implements AddressBookStorage {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonAddressBookStorage.class);","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public JsonAddressBookStorage(Path filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException {","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return readAddressBook(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Similar to {@link #readAddressBook()}.","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Optional\u003cJsonSerializableAddressBook\u003e jsonAddressBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                filePath, JsonSerializableAddressBook.class);","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!jsonAddressBook.isPresent()) {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Optional.of(jsonAddressBook.get().toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"pratham31012002"},"content":"        } catch (IllegalValueException | IllegalArgumentException ie) {","lastModifiedDate":"2022-10-28"},{"lineNumber":57,"author":{"gitId":"pratham31012002"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ie.getMessage());","lastModifiedDate":"2022-10-28"},{"lineNumber":58,"author":{"gitId":"pratham31012002"},"content":"            throw new DataConversionException(ie);","lastModifiedDate":"2022-10-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Similar to {@link #saveAddressBook(ReadOnlyAddressBook)}.","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireNonNull(addressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableAddressBook(addressBook), filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"emptygx":7,"pratham31012002":3,"-":70}},{"path":"src/main/java/seedu/clinkedin/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.storage;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"agarwal-anjali"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"agarwal-anjali"},"content":"import java.util.Map;","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"agarwal-anjali"},"content":"import seedu.clinkedin.logic.parser.Prefix;","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.AddressBook;","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.Person;","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"agarwal-anjali"},"content":"import seedu.clinkedin.model.tag.TagType;","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"pratham31012002"},"content":"public class JsonSerializableAddressBook {","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"agarwal-anjali"},"content":"    private final List\u003cString\u003e prefixMap;","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons.","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"agarwal-anjali"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"prefixMap\") List\u003cString\u003e prefixMap,","lastModifiedDate":"2022-10-26"},{"lineNumber":37,"author":{"gitId":"agarwal-anjali"},"content":"                                       @JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons) {","lastModifiedDate":"2022-10-26"},{"lineNumber":38,"author":{"gitId":"agarwal-anjali"},"content":"        this.prefixMap \u003d prefixMap;","lastModifiedDate":"2022-10-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"agarwal-anjali"},"content":"        Map\u003cPrefix, TagType\u003e sourcePrefixMap \u003d source.getPrefixMap();","lastModifiedDate":"2022-10-26"},{"lineNumber":49,"author":{"gitId":"agarwal-anjali"},"content":"        List\u003cString\u003e prefixMapToList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-26"},{"lineNumber":50,"author":{"gitId":"agarwal-anjali"},"content":"        for (Prefix prefix: sourcePrefixMap.keySet()) {","lastModifiedDate":"2022-10-26"},{"lineNumber":51,"author":{"gitId":"agarwal-anjali"},"content":"            prefixMapToList.add(prefix.getPrefix());","lastModifiedDate":"2022-10-26"},{"lineNumber":52,"author":{"gitId":"agarwal-anjali"},"content":"            prefixMapToList.add(sourcePrefixMap.get(prefix).getTagTypeName());","lastModifiedDate":"2022-10-26"},{"lineNumber":53,"author":{"gitId":"agarwal-anjali"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":54,"author":{"gitId":"agarwal-anjali"},"content":"        prefixMap \u003d prefixMapToList;","lastModifiedDate":"2022-10-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"emptygx"},"content":"     * Converts this clinkedin book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2022-10-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"agarwal-anjali"},"content":"        Map\u003cPrefix, TagType\u003e map \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-10-26"},{"lineNumber":66,"author":{"gitId":"agarwal-anjali"},"content":"        for (int i \u003d 0; i \u003c prefixMap.size(); i \u003d i + 2) {","lastModifiedDate":"2022-10-26"},{"lineNumber":67,"author":{"gitId":"agarwal-anjali"},"content":"            map.put(new Prefix(prefixMap.get(i)), new TagType(prefixMap.get(i + 1), new Prefix(prefixMap.get(i))));","lastModifiedDate":"2022-10-26"},{"lineNumber":68,"author":{"gitId":"agarwal-anjali"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":69,"author":{"gitId":"agarwal-anjali"},"content":"        addressBook.setPrefixMap(map);","lastModifiedDate":"2022-10-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            if (addressBook.hasPerson(person)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            addressBook.addPerson(person);","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"agarwal-anjali":21,"emptygx":6,"pratham31012002":1,"-":52}},{"path":"src/main/java/seedu/clinkedin/storage/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.storage;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.commons.util.JsonUtil;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.UserPrefs;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2016-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2017-02-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException {","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"emptygx":5,"-":42}},{"path":"src/main/java/seedu/clinkedin/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.storage;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.UserPrefs;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public interface Storage extends AddressBookStorage, UserPrefsStorage {","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException;","lastModifiedDate":"2016-10-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"emptygx":5,"-":27}},{"path":"src/main/java/seedu/clinkedin/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.storage;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.commons.core.LogsCenter;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.UserPrefs;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Manages storage of AddressBook data in local storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private AddressBookStorage addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates a {@code StorageManager} with the given {@code AddressBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public StorageManager(AddressBookStorage addressBookStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2016-10-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.addressBookStorage \u003d addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return addressBookStorage.getAddressBookFilePath();","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException {","lastModifiedDate":"2016-10-01"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return readAddressBook(addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return addressBookStorage.readAddressBook(filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        addressBookStorage.saveAddressBook(addressBook, filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"emptygx":6,"-":72}},{"path":"src/main/java/seedu/clinkedin/storage/UserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.storage;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.UserPrefs;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"emptygx"},"content":" * Represents a storage for {@link seedu.clinkedin.model.UserPrefs}.","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface UserPrefsStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2017-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"emptygx"},"content":"     * Saves the given {@link seedu.clinkedin.model.ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2022-10-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"emptygx":6,"-":30}},{"path":"src/main/java/seedu/clinkedin/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.ui;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.logic.commands.CommandResult;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"emptygx"},"content":"         * @see seedu.clinkedin.logic.Logic#execute(String)","lastModifiedDate":"2022-10-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"emptygx":5,"-":80}},{"path":"src/main/java/seedu/clinkedin/ui/ExportWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pratham31012002"},"content":"package seedu.clinkedin.ui;","lastModifiedDate":"2022-10-24"},{"lineNumber":2,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":3,"author":{"gitId":"pratham31012002"},"content":"import java.io.File;","lastModifiedDate":"2022-10-24"},{"lineNumber":4,"author":{"gitId":"pratham31012002"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-10-24"},{"lineNumber":5,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":6,"author":{"gitId":"pratham31012002"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-24"},{"lineNumber":7,"author":{"gitId":"pratham31012002"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2022-10-24"},{"lineNumber":8,"author":{"gitId":"pratham31012002"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-10-24"},{"lineNumber":9,"author":{"gitId":"pratham31012002"},"content":"import javafx.scene.control.ComboBox;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"pratham31012002"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-10-24"},{"lineNumber":11,"author":{"gitId":"pratham31012002"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-10-24"},{"lineNumber":12,"author":{"gitId":"pratham31012002"},"content":"import javafx.stage.DirectoryChooser;","lastModifiedDate":"2022-10-24"},{"lineNumber":13,"author":{"gitId":"pratham31012002"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-10-24"},{"lineNumber":14,"author":{"gitId":"pratham31012002"},"content":"import seedu.clinkedin.commons.core.LogsCenter;","lastModifiedDate":"2022-10-24"},{"lineNumber":15,"author":{"gitId":"pratham31012002"},"content":"import seedu.clinkedin.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-24"},{"lineNumber":16,"author":{"gitId":"pratham31012002"},"content":"import seedu.clinkedin.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":18,"author":{"gitId":"pratham31012002"},"content":"/**","lastModifiedDate":"2022-10-24"},{"lineNumber":19,"author":{"gitId":"pratham31012002"},"content":" * Window for allowing export of addressbook.","lastModifiedDate":"2022-10-24"},{"lineNumber":20,"author":{"gitId":"pratham31012002"},"content":" */","lastModifiedDate":"2022-10-24"},{"lineNumber":21,"author":{"gitId":"pratham31012002"},"content":"public class ExportWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2022-10-24"},{"lineNumber":22,"author":{"gitId":"pratham31012002"},"content":"    public static final String CHOOSE_PATH \u003d \"Choose Location\";","lastModifiedDate":"2022-10-24"},{"lineNumber":23,"author":{"gitId":"pratham31012002"},"content":"    public static final String CHOOSE_NAME \u003d \"Name\";","lastModifiedDate":"2022-10-24"},{"lineNumber":24,"author":{"gitId":"pratham31012002"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ExportWindow.class);","lastModifiedDate":"2022-10-24"},{"lineNumber":25,"author":{"gitId":"pratham31012002"},"content":"    private static final String FXML \u003d \"ExportWindow.fxml\";","lastModifiedDate":"2022-10-24"},{"lineNumber":26,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":27,"author":{"gitId":"pratham31012002"},"content":"    private DirectoryChooser directoryChooser;","lastModifiedDate":"2022-10-24"},{"lineNumber":28,"author":{"gitId":"pratham31012002"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":30,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":31,"author":{"gitId":"pratham31012002"},"content":"    @FXML","lastModifiedDate":"2022-10-24"},{"lineNumber":32,"author":{"gitId":"pratham31012002"},"content":"    private Label chooseLocation;","lastModifiedDate":"2022-10-24"},{"lineNumber":33,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":34,"author":{"gitId":"pratham31012002"},"content":"    @FXML","lastModifiedDate":"2022-10-24"},{"lineNumber":35,"author":{"gitId":"pratham31012002"},"content":"    private Label chosenLocation;","lastModifiedDate":"2022-10-24"},{"lineNumber":36,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":37,"author":{"gitId":"pratham31012002"},"content":"    @FXML","lastModifiedDate":"2022-10-24"},{"lineNumber":38,"author":{"gitId":"pratham31012002"},"content":"    private Button selectButton;","lastModifiedDate":"2022-10-24"},{"lineNumber":39,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":40,"author":{"gitId":"pratham31012002"},"content":"    @FXML","lastModifiedDate":"2022-10-24"},{"lineNumber":41,"author":{"gitId":"pratham31012002"},"content":"    private Label fileName;","lastModifiedDate":"2022-10-24"},{"lineNumber":42,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":43,"author":{"gitId":"pratham31012002"},"content":"    @FXML","lastModifiedDate":"2022-10-24"},{"lineNumber":44,"author":{"gitId":"pratham31012002"},"content":"    private TextField userEnteredFileName;","lastModifiedDate":"2022-10-24"},{"lineNumber":45,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":46,"author":{"gitId":"pratham31012002"},"content":"    @FXML","lastModifiedDate":"2022-10-24"},{"lineNumber":47,"author":{"gitId":"pratham31012002"},"content":"    private Button exportButton;","lastModifiedDate":"2022-10-24"},{"lineNumber":48,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":49,"author":{"gitId":"pratham31012002"},"content":"    @FXML","lastModifiedDate":"2022-10-27"},{"lineNumber":50,"author":{"gitId":"pratham31012002"},"content":"    private ComboBox\u003cString\u003e fileFormat;","lastModifiedDate":"2022-10-27"},{"lineNumber":51,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":52,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":53,"author":{"gitId":"pratham31012002"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":54,"author":{"gitId":"pratham31012002"},"content":"     * Creates a new ExportWindow.","lastModifiedDate":"2022-10-24"},{"lineNumber":55,"author":{"gitId":"pratham31012002"},"content":"     *","lastModifiedDate":"2022-10-24"},{"lineNumber":56,"author":{"gitId":"pratham31012002"},"content":"     * @param root Stage to use as the root of the ExportWindow.","lastModifiedDate":"2022-10-24"},{"lineNumber":57,"author":{"gitId":"pratham31012002"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":58,"author":{"gitId":"pratham31012002"},"content":"    public ExportWindow(Stage root, MainWindow parent) {","lastModifiedDate":"2022-10-26"},{"lineNumber":59,"author":{"gitId":"pratham31012002"},"content":"        super(FXML, root);","lastModifiedDate":"2022-10-24"},{"lineNumber":60,"author":{"gitId":"pratham31012002"},"content":"        this.mainWindow \u003d parent;","lastModifiedDate":"2022-10-26"},{"lineNumber":61,"author":{"gitId":"pratham31012002"},"content":"        chooseLocation.setText(CHOOSE_PATH);","lastModifiedDate":"2022-10-24"},{"lineNumber":62,"author":{"gitId":"pratham31012002"},"content":"        directoryChooser \u003d new DirectoryChooser();","lastModifiedDate":"2022-10-24"},{"lineNumber":63,"author":{"gitId":"pratham31012002"},"content":"        directoryChooser.setTitle(\"Choose Location\");","lastModifiedDate":"2022-10-26"},{"lineNumber":64,"author":{"gitId":"pratham31012002"},"content":"        fileName.setText(CHOOSE_NAME);","lastModifiedDate":"2022-10-24"},{"lineNumber":65,"author":{"gitId":"pratham31012002"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":66,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":67,"author":{"gitId":"pratham31012002"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":68,"author":{"gitId":"pratham31012002"},"content":"     * Creates a new ExportWindow.","lastModifiedDate":"2022-10-24"},{"lineNumber":69,"author":{"gitId":"pratham31012002"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":70,"author":{"gitId":"pratham31012002"},"content":"    public ExportWindow(MainWindow parent) {","lastModifiedDate":"2022-10-26"},{"lineNumber":71,"author":{"gitId":"pratham31012002"},"content":"        this(new Stage(), parent);","lastModifiedDate":"2022-10-26"},{"lineNumber":72,"author":{"gitId":"pratham31012002"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":73,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":74,"author":{"gitId":"pratham31012002"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":75,"author":{"gitId":"pratham31012002"},"content":"     * Shows the Export Window.","lastModifiedDate":"2022-10-24"},{"lineNumber":76,"author":{"gitId":"pratham31012002"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":77,"author":{"gitId":"pratham31012002"},"content":"    public void show() {","lastModifiedDate":"2022-10-24"},{"lineNumber":78,"author":{"gitId":"pratham31012002"},"content":"        logger.info(\"Showing Export Window.\");","lastModifiedDate":"2022-10-24"},{"lineNumber":79,"author":{"gitId":"pratham31012002"},"content":"        chosenLocation.setText(\"\");","lastModifiedDate":"2022-10-28"},{"lineNumber":80,"author":{"gitId":"pratham31012002"},"content":"        userEnteredFileName.clear();","lastModifiedDate":"2022-10-28"},{"lineNumber":81,"author":{"gitId":"pratham31012002"},"content":"        getRoot().show();","lastModifiedDate":"2022-10-24"},{"lineNumber":82,"author":{"gitId":"pratham31012002"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2022-10-24"},{"lineNumber":83,"author":{"gitId":"pratham31012002"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":84,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":85,"author":{"gitId":"pratham31012002"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":86,"author":{"gitId":"pratham31012002"},"content":"     * Returns true if the export window is currently being shown.","lastModifiedDate":"2022-10-24"},{"lineNumber":87,"author":{"gitId":"pratham31012002"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":88,"author":{"gitId":"pratham31012002"},"content":"    public boolean isShowing() {","lastModifiedDate":"2022-10-24"},{"lineNumber":89,"author":{"gitId":"pratham31012002"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2022-10-24"},{"lineNumber":90,"author":{"gitId":"pratham31012002"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":91,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":92,"author":{"gitId":"pratham31012002"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":93,"author":{"gitId":"pratham31012002"},"content":"     * Hides the export window.","lastModifiedDate":"2022-10-24"},{"lineNumber":94,"author":{"gitId":"pratham31012002"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":95,"author":{"gitId":"pratham31012002"},"content":"    public void hide() {","lastModifiedDate":"2022-10-24"},{"lineNumber":96,"author":{"gitId":"pratham31012002"},"content":"        getRoot().hide();","lastModifiedDate":"2022-10-24"},{"lineNumber":97,"author":{"gitId":"pratham31012002"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":98,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":99,"author":{"gitId":"pratham31012002"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":100,"author":{"gitId":"pratham31012002"},"content":"     * Focuses on the export window.","lastModifiedDate":"2022-10-24"},{"lineNumber":101,"author":{"gitId":"pratham31012002"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":102,"author":{"gitId":"pratham31012002"},"content":"    public void focus() {","lastModifiedDate":"2022-10-24"},{"lineNumber":103,"author":{"gitId":"pratham31012002"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2022-10-24"},{"lineNumber":104,"author":{"gitId":"pratham31012002"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":105,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":106,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":107,"author":{"gitId":"pratham31012002"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":108,"author":{"gitId":"pratham31012002"},"content":"     * Opens Directory Chooser to select location of file to export.","lastModifiedDate":"2022-10-24"},{"lineNumber":109,"author":{"gitId":"pratham31012002"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":110,"author":{"gitId":"pratham31012002"},"content":"    @FXML","lastModifiedDate":"2022-10-24"},{"lineNumber":111,"author":{"gitId":"pratham31012002"},"content":"    public void handleSelect() {","lastModifiedDate":"2022-10-24"},{"lineNumber":112,"author":{"gitId":"pratham31012002"},"content":"        File selectedDirectory \u003d directoryChooser.showDialog(getRoot());","lastModifiedDate":"2022-10-24"},{"lineNumber":113,"author":{"gitId":"pratham31012002"},"content":"        if (selectedDirectory !\u003d null) {","lastModifiedDate":"2022-10-24"},{"lineNumber":114,"author":{"gitId":"pratham31012002"},"content":"            chosenLocation.setText(selectedDirectory.getAbsolutePath());","lastModifiedDate":"2022-10-24"},{"lineNumber":115,"author":{"gitId":"pratham31012002"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":116,"author":{"gitId":"pratham31012002"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":117,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":118,"author":{"gitId":"pratham31012002"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":119,"author":{"gitId":"pratham31012002"},"content":"     * Exports addressbook to specified location.","lastModifiedDate":"2022-10-24"},{"lineNumber":120,"author":{"gitId":"pratham31012002"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":121,"author":{"gitId":"pratham31012002"},"content":"    @FXML","lastModifiedDate":"2022-10-24"},{"lineNumber":122,"author":{"gitId":"pratham31012002"},"content":"    public void handleOnExport() {","lastModifiedDate":"2022-10-26"},{"lineNumber":123,"author":{"gitId":"pratham31012002"},"content":"        try {","lastModifiedDate":"2022-10-24"},{"lineNumber":124,"author":{"gitId":"pratham31012002"},"content":"            String filePath \u003d null;","lastModifiedDate":"2022-10-26"},{"lineNumber":125,"author":{"gitId":"pratham31012002"},"content":"            if (chosenLocation.getText().trim().equals(\"\")) {","lastModifiedDate":"2022-10-26"},{"lineNumber":126,"author":{"gitId":"pratham31012002"},"content":"                filePath \u003d userEnteredFileName.getText() + fileFormat.getValue();","lastModifiedDate":"2022-10-28"},{"lineNumber":127,"author":{"gitId":"pratham31012002"},"content":"            } else {","lastModifiedDate":"2022-10-26"},{"lineNumber":128,"author":{"gitId":"pratham31012002"},"content":"                filePath \u003d chosenLocation.getText() + \"/\" + userEnteredFileName.getText() + fileFormat.getValue();","lastModifiedDate":"2022-10-28"},{"lineNumber":129,"author":{"gitId":"pratham31012002"},"content":"            }","lastModifiedDate":"2022-10-26"},{"lineNumber":130,"author":{"gitId":"pratham31012002"},"content":"            if (userEnteredFileName.getText().trim().contains(\"/\")) {","lastModifiedDate":"2022-10-26"},{"lineNumber":131,"author":{"gitId":"pratham31012002"},"content":"                throw new ParseException(\"File name cannot contain \u0027/\u0027. Try again!\");","lastModifiedDate":"2022-10-26"},{"lineNumber":132,"author":{"gitId":"pratham31012002"},"content":"            }","lastModifiedDate":"2022-10-26"},{"lineNumber":133,"author":{"gitId":"pratham31012002"},"content":"            mainWindow.executeFromWindow(\"export path/\" + filePath);","lastModifiedDate":"2022-10-26"},{"lineNumber":134,"author":{"gitId":"pratham31012002"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2022-10-26"},{"lineNumber":135,"author":{"gitId":"pratham31012002"},"content":"            Alert a \u003d new Alert(Alert.AlertType.ERROR);","lastModifiedDate":"2022-10-24"},{"lineNumber":136,"author":{"gitId":"pratham31012002"},"content":"            a.setContentText(e.getMessage());","lastModifiedDate":"2022-10-26"},{"lineNumber":137,"author":{"gitId":"pratham31012002"},"content":"            chosenLocation.setText(\"\");","lastModifiedDate":"2022-10-24"},{"lineNumber":138,"author":{"gitId":"pratham31012002"},"content":"            userEnteredFileName.clear();","lastModifiedDate":"2022-10-24"},{"lineNumber":139,"author":{"gitId":"pratham31012002"},"content":"            a.show();","lastModifiedDate":"2022-10-24"},{"lineNumber":140,"author":{"gitId":"pratham31012002"},"content":"            return;","lastModifiedDate":"2022-10-24"},{"lineNumber":141,"author":{"gitId":"pratham31012002"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":142,"author":{"gitId":"pratham31012002"},"content":"        chosenLocation.setText(\"\");","lastModifiedDate":"2022-10-24"},{"lineNumber":143,"author":{"gitId":"pratham31012002"},"content":"        userEnteredFileName.clear();","lastModifiedDate":"2022-10-24"},{"lineNumber":144,"author":{"gitId":"pratham31012002"},"content":"        this.hide();","lastModifiedDate":"2022-10-24"},{"lineNumber":145,"author":{"gitId":"pratham31012002"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":146,"author":{"gitId":"pratham31012002"},"content":"}","lastModifiedDate":"2022-10-24"}],"authorContributionMap":{"pratham31012002":146}},{"path":"src/main/java/seedu/clinkedin/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.ui;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"josephaedan"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"josephaedan"},"content":"import javafx.scene.control.TableColumn;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"josephaedan"},"content":"import javafx.scene.control.TableView;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"josephaedan"},"content":"import javafx.scene.control.cell.PropertyValueFactory;","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.commons.core.LogsCenter;","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"josephaedan"},"content":"import seedu.clinkedin.logic.parser.CliSyntax;","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"josephaedan"},"content":"import seedu.clinkedin.ui.utils.CommandRow;","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"josephaedan"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2223s1-cs2103t-t13-3.github.io/tp/UserGuide.html\";","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"josephaedan"},"content":"    public static final String HELP_MESSAGE \u003d \"For more detailed instructions, please refer to the user guide: \"","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"josephaedan"},"content":"            + USERGUIDE_URL;","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":29,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":32,"author":{"gitId":"josephaedan"},"content":"    private ObservableList\u003cCommandRow\u003e commandList;","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":34,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"josephaedan"},"content":"    @FXML","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"josephaedan"},"content":"    private TableView\u003cCommandRow\u003e commandTable;","lastModifiedDate":"2022-10-27"},{"lineNumber":43,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":44,"author":{"gitId":"josephaedan"},"content":"    @FXML","lastModifiedDate":"2022-10-27"},{"lineNumber":45,"author":{"gitId":"josephaedan"},"content":"    private TableColumn\u003cCommandRow, String\u003e commandName;","lastModifiedDate":"2022-10-27"},{"lineNumber":46,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"josephaedan"},"content":"    @FXML","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"josephaedan"},"content":"    private TableColumn\u003cCommandRow, String\u003e commandUsage;","lastModifiedDate":"2022-10-27"},{"lineNumber":49,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":57,"author":{"gitId":"josephaedan"},"content":"        try {","lastModifiedDate":"2022-10-27"},{"lineNumber":58,"author":{"gitId":"josephaedan"},"content":"            // Obtains the lists of commands and their usages from CLI syntax","lastModifiedDate":"2022-10-27"},{"lineNumber":59,"author":{"gitId":"josephaedan"},"content":"            commandList \u003d CliSyntax.getAllCommandRows();","lastModifiedDate":"2022-10-27"},{"lineNumber":60,"author":{"gitId":"josephaedan"},"content":"            // Sets the table columns to display the command name and usage","lastModifiedDate":"2022-10-27"},{"lineNumber":61,"author":{"gitId":"josephaedan"},"content":"            // and populates the table with the command list","lastModifiedDate":"2022-10-27"},{"lineNumber":62,"author":{"gitId":"josephaedan"},"content":"            initialiseTableView();","lastModifiedDate":"2022-10-27"},{"lineNumber":63,"author":{"gitId":"josephaedan"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-10-27"},{"lineNumber":64,"author":{"gitId":"josephaedan"},"content":"            logger.warning(\"Error in getting command list\");","lastModifiedDate":"2022-10-27"},{"lineNumber":65,"author":{"gitId":"josephaedan"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":75,"author":{"gitId":"josephaedan"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":76,"author":{"gitId":"josephaedan"},"content":"     * Initialises the TableView help window with the command list.","lastModifiedDate":"2022-10-27"},{"lineNumber":77,"author":{"gitId":"josephaedan"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":78,"author":{"gitId":"josephaedan"},"content":"    public void initialiseTableView() {","lastModifiedDate":"2022-10-27"},{"lineNumber":79,"author":{"gitId":"josephaedan"},"content":"        commandName.setCellValueFactory(new PropertyValueFactory\u003cCommandRow, String\u003e(\"commandName\"));","lastModifiedDate":"2022-10-27"},{"lineNumber":80,"author":{"gitId":"josephaedan"},"content":"        commandUsage.setCellValueFactory(new PropertyValueFactory\u003cCommandRow, String\u003e(\"commandUsage\"));","lastModifiedDate":"2022-10-27"},{"lineNumber":81,"author":{"gitId":"josephaedan"},"content":"        commandTable.setItems(commandList);","lastModifiedDate":"2022-10-27"},{"lineNumber":82,"author":{"gitId":"josephaedan"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":83,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":103,"author":{"gitId":"pratham31012002"},"content":"        logger.info(\"Showing help page about the application.\");","lastModifiedDate":"2022-10-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"emptygx":2,"josephaedan":40,"pratham31012002":1,"-":96}},{"path":"src/main/java/seedu/clinkedin/ui/ImportWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pratham31012002"},"content":"package seedu.clinkedin.ui;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":3,"author":{"gitId":"pratham31012002"},"content":"import java.io.File;","lastModifiedDate":"2022-10-26"},{"lineNumber":4,"author":{"gitId":"pratham31012002"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"pratham31012002"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"pratham31012002"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"pratham31012002"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"pratham31012002"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"pratham31012002"},"content":"import javafx.stage.FileChooser;","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"pratham31012002"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"pratham31012002"},"content":"import seedu.clinkedin.commons.core.LogsCenter;","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"pratham31012002"},"content":"import seedu.clinkedin.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"pratham31012002"},"content":"import seedu.clinkedin.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"pratham31012002"},"content":"/**","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"pratham31012002"},"content":" * Window for allowing import of addressbook.","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"pratham31012002"},"content":" */","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"pratham31012002"},"content":"public class ImportWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"pratham31012002"},"content":"    public static final String CHOOSE_FILE \u003d \"Choose file\";","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"pratham31012002"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ImportWindow.class);","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"pratham31012002"},"content":"    private static final String FXML \u003d \"ImportWindow.fxml\";","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"pratham31012002"},"content":"    private FileChooser fileChooser;","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"pratham31012002"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"pratham31012002"},"content":"    @FXML","lastModifiedDate":"2022-10-26"},{"lineNumber":28,"author":{"gitId":"pratham31012002"},"content":"    private Label chooseFile;","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"pratham31012002"},"content":"    @FXML","lastModifiedDate":"2022-10-26"},{"lineNumber":31,"author":{"gitId":"pratham31012002"},"content":"    private Label chosenFile;","lastModifiedDate":"2022-10-26"},{"lineNumber":32,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":33,"author":{"gitId":"pratham31012002"},"content":"    @FXML","lastModifiedDate":"2022-10-26"},{"lineNumber":34,"author":{"gitId":"pratham31012002"},"content":"    private Button selectButton;","lastModifiedDate":"2022-10-26"},{"lineNumber":35,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":36,"author":{"gitId":"pratham31012002"},"content":"    @FXML","lastModifiedDate":"2022-10-26"},{"lineNumber":37,"author":{"gitId":"pratham31012002"},"content":"    private Button importButton;","lastModifiedDate":"2022-10-26"},{"lineNumber":38,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":39,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":40,"author":{"gitId":"pratham31012002"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":41,"author":{"gitId":"pratham31012002"},"content":"     * Creates a new ImportWindow.","lastModifiedDate":"2022-10-26"},{"lineNumber":42,"author":{"gitId":"pratham31012002"},"content":"     *","lastModifiedDate":"2022-10-26"},{"lineNumber":43,"author":{"gitId":"pratham31012002"},"content":"     * @param root Stage to use as the root of the ImportWindow.","lastModifiedDate":"2022-10-26"},{"lineNumber":44,"author":{"gitId":"pratham31012002"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":45,"author":{"gitId":"pratham31012002"},"content":"    public ImportWindow(Stage root, MainWindow mainWindow) {","lastModifiedDate":"2022-10-26"},{"lineNumber":46,"author":{"gitId":"pratham31012002"},"content":"        super(FXML, root);","lastModifiedDate":"2022-10-26"},{"lineNumber":47,"author":{"gitId":"pratham31012002"},"content":"        this.mainWindow \u003d mainWindow;","lastModifiedDate":"2022-10-26"},{"lineNumber":48,"author":{"gitId":"pratham31012002"},"content":"        chooseFile.setText(CHOOSE_FILE);","lastModifiedDate":"2022-10-26"},{"lineNumber":49,"author":{"gitId":"pratham31012002"},"content":"        fileChooser \u003d new FileChooser();","lastModifiedDate":"2022-10-26"},{"lineNumber":50,"author":{"gitId":"pratham31012002"},"content":"        fileChooser.setTitle(\"Choose File\");","lastModifiedDate":"2022-10-26"},{"lineNumber":51,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":52,"author":{"gitId":"pratham31012002"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":53,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":54,"author":{"gitId":"pratham31012002"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":55,"author":{"gitId":"pratham31012002"},"content":"     * Creates a new ImportWindow.","lastModifiedDate":"2022-10-26"},{"lineNumber":56,"author":{"gitId":"pratham31012002"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":57,"author":{"gitId":"pratham31012002"},"content":"    public ImportWindow(MainWindow mainWindow) {","lastModifiedDate":"2022-10-26"},{"lineNumber":58,"author":{"gitId":"pratham31012002"},"content":"        this(new Stage(), mainWindow);","lastModifiedDate":"2022-10-26"},{"lineNumber":59,"author":{"gitId":"pratham31012002"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":60,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":61,"author":{"gitId":"pratham31012002"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":62,"author":{"gitId":"pratham31012002"},"content":"     * Shows the Import Window.","lastModifiedDate":"2022-10-26"},{"lineNumber":63,"author":{"gitId":"pratham31012002"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":64,"author":{"gitId":"pratham31012002"},"content":"    public void show() {","lastModifiedDate":"2022-10-26"},{"lineNumber":65,"author":{"gitId":"pratham31012002"},"content":"        logger.info(\"Showing Import Window.\");","lastModifiedDate":"2022-10-26"},{"lineNumber":66,"author":{"gitId":"pratham31012002"},"content":"        chosenFile.setText(\"\");","lastModifiedDate":"2022-10-28"},{"lineNumber":67,"author":{"gitId":"pratham31012002"},"content":"        getRoot().show();","lastModifiedDate":"2022-10-26"},{"lineNumber":68,"author":{"gitId":"pratham31012002"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2022-10-26"},{"lineNumber":69,"author":{"gitId":"pratham31012002"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":70,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":71,"author":{"gitId":"pratham31012002"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":72,"author":{"gitId":"pratham31012002"},"content":"     * Returns true if the import window is currently being shown.","lastModifiedDate":"2022-10-26"},{"lineNumber":73,"author":{"gitId":"pratham31012002"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":74,"author":{"gitId":"pratham31012002"},"content":"    public boolean isShowing() {","lastModifiedDate":"2022-10-26"},{"lineNumber":75,"author":{"gitId":"pratham31012002"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2022-10-26"},{"lineNumber":76,"author":{"gitId":"pratham31012002"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":77,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":78,"author":{"gitId":"pratham31012002"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":79,"author":{"gitId":"pratham31012002"},"content":"     * Hides the import window.","lastModifiedDate":"2022-10-26"},{"lineNumber":80,"author":{"gitId":"pratham31012002"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":81,"author":{"gitId":"pratham31012002"},"content":"    public void hide() {","lastModifiedDate":"2022-10-26"},{"lineNumber":82,"author":{"gitId":"pratham31012002"},"content":"        getRoot().hide();","lastModifiedDate":"2022-10-26"},{"lineNumber":83,"author":{"gitId":"pratham31012002"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":84,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":85,"author":{"gitId":"pratham31012002"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":86,"author":{"gitId":"pratham31012002"},"content":"     * Focuses on the import window.","lastModifiedDate":"2022-10-26"},{"lineNumber":87,"author":{"gitId":"pratham31012002"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":88,"author":{"gitId":"pratham31012002"},"content":"    public void focus() {","lastModifiedDate":"2022-10-26"},{"lineNumber":89,"author":{"gitId":"pratham31012002"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2022-10-26"},{"lineNumber":90,"author":{"gitId":"pratham31012002"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":91,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":92,"author":{"gitId":"pratham31012002"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":93,"author":{"gitId":"pratham31012002"},"content":"     * Opens Directory Chooser to select file to import.","lastModifiedDate":"2022-10-26"},{"lineNumber":94,"author":{"gitId":"pratham31012002"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":95,"author":{"gitId":"pratham31012002"},"content":"    @FXML","lastModifiedDate":"2022-10-26"},{"lineNumber":96,"author":{"gitId":"pratham31012002"},"content":"    public void handleSelect() {","lastModifiedDate":"2022-10-26"},{"lineNumber":97,"author":{"gitId":"pratham31012002"},"content":"        File selectedFile \u003d fileChooser.showOpenDialog(getRoot());","lastModifiedDate":"2022-10-26"},{"lineNumber":98,"author":{"gitId":"pratham31012002"},"content":"        if (selectedFile !\u003d null) {","lastModifiedDate":"2022-10-26"},{"lineNumber":99,"author":{"gitId":"pratham31012002"},"content":"            chosenFile.setText(selectedFile.getAbsolutePath());","lastModifiedDate":"2022-10-26"},{"lineNumber":100,"author":{"gitId":"pratham31012002"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":101,"author":{"gitId":"pratham31012002"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":102,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":103,"author":{"gitId":"pratham31012002"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":104,"author":{"gitId":"pratham31012002"},"content":"     * Imports the addressbook from the specified file.","lastModifiedDate":"2022-10-26"},{"lineNumber":105,"author":{"gitId":"pratham31012002"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":106,"author":{"gitId":"pratham31012002"},"content":"    @FXML","lastModifiedDate":"2022-10-26"},{"lineNumber":107,"author":{"gitId":"pratham31012002"},"content":"    public void handleOnImport() {","lastModifiedDate":"2022-10-26"},{"lineNumber":108,"author":{"gitId":"pratham31012002"},"content":"        try {","lastModifiedDate":"2022-10-26"},{"lineNumber":109,"author":{"gitId":"pratham31012002"},"content":"            String filePath \u003d chosenFile.getText();","lastModifiedDate":"2022-10-26"},{"lineNumber":110,"author":{"gitId":"pratham31012002"},"content":"            mainWindow.executeFromWindow(\"import path/\" + filePath);","lastModifiedDate":"2022-10-26"},{"lineNumber":111,"author":{"gitId":"pratham31012002"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2022-10-26"},{"lineNumber":112,"author":{"gitId":"pratham31012002"},"content":"            Alert a \u003d new Alert(Alert.AlertType.ERROR);","lastModifiedDate":"2022-10-26"},{"lineNumber":113,"author":{"gitId":"pratham31012002"},"content":"            a.setContentText(e.getMessage());","lastModifiedDate":"2022-10-26"},{"lineNumber":114,"author":{"gitId":"pratham31012002"},"content":"            chosenFile.setText(\"\");","lastModifiedDate":"2022-10-26"},{"lineNumber":115,"author":{"gitId":"pratham31012002"},"content":"            a.show();","lastModifiedDate":"2022-10-26"},{"lineNumber":116,"author":{"gitId":"pratham31012002"},"content":"            return;","lastModifiedDate":"2022-10-26"},{"lineNumber":117,"author":{"gitId":"pratham31012002"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":118,"author":{"gitId":"pratham31012002"},"content":"        chosenFile.setText(\"\");","lastModifiedDate":"2022-10-26"},{"lineNumber":119,"author":{"gitId":"pratham31012002"},"content":"        this.hide();","lastModifiedDate":"2022-10-26"},{"lineNumber":120,"author":{"gitId":"pratham31012002"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":121,"author":{"gitId":"pratham31012002"},"content":"}","lastModifiedDate":"2022-10-26"}],"authorContributionMap":{"pratham31012002":121}},{"path":"src/main/java/seedu/clinkedin/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.ui;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.commons.core.GuiSettings;","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.commons.core.LogsCenter;","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.logic.Logic;","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"josephaedan"},"content":"import seedu.clinkedin.logic.commands.Command;","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.logic.commands.CommandResult;","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":38,"author":{"gitId":"pratham31012002"},"content":"    private ExportWindow exportWindow;","lastModifiedDate":"2022-10-24"},{"lineNumber":39,"author":{"gitId":"pratham31012002"},"content":"    private ImportWindow importWindow;","lastModifiedDate":"2022-10-26"},{"lineNumber":40,"author":{"gitId":"josephaedan"},"content":"    private PersonCountDisplay personCountDisplay;","lastModifiedDate":"2022-10-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"josephaedan"},"content":"    @FXML","lastModifiedDate":"2022-10-08"},{"lineNumber":58,"author":{"gitId":"josephaedan"},"content":"    private StackPane personCountDisplayPlaceholder;","lastModifiedDate":"2022-10-08"},{"lineNumber":59,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"emptygx"},"content":"     *","lastModifiedDate":"2022-10-28"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"josephaedan"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList(), this);","lastModifiedDate":"2022-10-28"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"josephaedan"},"content":"        personCountDisplay \u003d new PersonCountDisplay(logic.getFilteredPersonList(), logic.getAddressBook());","lastModifiedDate":"2022-10-08"},{"lineNumber":125,"author":{"gitId":"josephaedan"},"content":"        personCountDisplayPlaceholder.getChildren().add(personCountDisplay.getRoot());","lastModifiedDate":"2022-10-08"},{"lineNumber":126,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":128,"author":{"gitId":"pratham31012002"},"content":"        exportWindow \u003d new ExportWindow(this);","lastModifiedDate":"2022-10-26"},{"lineNumber":129,"author":{"gitId":"pratham31012002"},"content":"        importWindow \u003d new ImportWindow(this);","lastModifiedDate":"2022-10-26"},{"lineNumber":130,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"pratham31012002"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":165,"author":{"gitId":"pratham31012002"},"content":"     * Opens the export window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2022-10-24"},{"lineNumber":166,"author":{"gitId":"pratham31012002"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":167,"author":{"gitId":"pratham31012002"},"content":"    @FXML","lastModifiedDate":"2022-10-24"},{"lineNumber":168,"author":{"gitId":"pratham31012002"},"content":"    public void handleExport() {","lastModifiedDate":"2022-10-24"},{"lineNumber":169,"author":{"gitId":"pratham31012002"},"content":"        if (!exportWindow.isShowing()) {","lastModifiedDate":"2022-10-24"},{"lineNumber":170,"author":{"gitId":"pratham31012002"},"content":"            exportWindow.show();","lastModifiedDate":"2022-10-24"},{"lineNumber":171,"author":{"gitId":"pratham31012002"},"content":"        } else {","lastModifiedDate":"2022-10-24"},{"lineNumber":172,"author":{"gitId":"pratham31012002"},"content":"            exportWindow.focus();","lastModifiedDate":"2022-10-24"},{"lineNumber":173,"author":{"gitId":"pratham31012002"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":174,"author":{"gitId":"pratham31012002"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":175,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":176,"author":{"gitId":"pratham31012002"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":177,"author":{"gitId":"pratham31012002"},"content":"     * Opens the import window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2022-10-26"},{"lineNumber":178,"author":{"gitId":"pratham31012002"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":179,"author":{"gitId":"pratham31012002"},"content":"    @FXML","lastModifiedDate":"2022-10-26"},{"lineNumber":180,"author":{"gitId":"pratham31012002"},"content":"    public void handleImport() {","lastModifiedDate":"2022-10-26"},{"lineNumber":181,"author":{"gitId":"pratham31012002"},"content":"        if (!importWindow.isShowing()) {","lastModifiedDate":"2022-10-26"},{"lineNumber":182,"author":{"gitId":"pratham31012002"},"content":"            importWindow.show();","lastModifiedDate":"2022-10-26"},{"lineNumber":183,"author":{"gitId":"pratham31012002"},"content":"        } else {","lastModifiedDate":"2022-10-26"},{"lineNumber":184,"author":{"gitId":"pratham31012002"},"content":"            importWindow.focus();","lastModifiedDate":"2022-10-26"},{"lineNumber":185,"author":{"gitId":"pratham31012002"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":186,"author":{"gitId":"pratham31012002"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":187,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":193,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":194,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":209,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":210,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":211,"author":{"gitId":"emptygx"},"content":"     * @see seedu.clinkedin.logic.Logic#execute(String)","lastModifiedDate":"2022-10-15"},{"lineNumber":212,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":213,"author":{"gitId":"pratham31012002"},"content":"    private CommandResult executeCommand(String commandText, boolean isDisplay) throws CommandException,","lastModifiedDate":"2022-10-26"},{"lineNumber":214,"author":{"gitId":"pratham31012002"},"content":"            ParseException {","lastModifiedDate":"2022-10-26"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":218,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":219,"author":{"gitId":"emptygx"},"content":"            resultDisplay.clearCharts();","lastModifiedDate":"2022-10-28"},{"lineNumber":220,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":221,"author":{"gitId":"emptygx"},"content":"            if (commandResult.isShowFeedback()) {","lastModifiedDate":"2022-10-28"},{"lineNumber":222,"author":{"gitId":"-"},"content":"                resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":223,"author":{"gitId":"emptygx"},"content":"            } else if (commandResult.isShowStats()) {","lastModifiedDate":"2022-10-28"},{"lineNumber":224,"author":{"gitId":"emptygx"},"content":"                resultDisplay.setChartToUser(commandResult.getPieChartStats(), commandResult.getStatsTitles(),","lastModifiedDate":"2022-10-28"},{"lineNumber":225,"author":{"gitId":"emptygx"},"content":"                        commandResult.getFeedbackToUser());","lastModifiedDate":"2022-10-28"},{"lineNumber":226,"author":{"gitId":"emptygx"},"content":"            }","lastModifiedDate":"2022-10-28"},{"lineNumber":227,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":228,"author":{"gitId":"josephaedan"},"content":"            personCountDisplay.setPersonCountMessage(logic.getFilteredPersonList(), logic.getAddressBook());","lastModifiedDate":"2022-10-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":231,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":232,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":234,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":235,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":236,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":237,"author":{"gitId":"pratham31012002"},"content":"            if (commandResult.isExport()) {","lastModifiedDate":"2022-10-24"},{"lineNumber":238,"author":{"gitId":"pratham31012002"},"content":"                handleExport();","lastModifiedDate":"2022-10-24"},{"lineNumber":239,"author":{"gitId":"pratham31012002"},"content":"            }","lastModifiedDate":"2022-10-24"},{"lineNumber":240,"author":{"gitId":"pratham31012002"},"content":"            if (commandResult.isImport()) {","lastModifiedDate":"2022-10-26"},{"lineNumber":241,"author":{"gitId":"pratham31012002"},"content":"                handleImport();","lastModifiedDate":"2022-10-26"},{"lineNumber":242,"author":{"gitId":"pratham31012002"},"content":"            }","lastModifiedDate":"2022-10-26"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":244,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":246,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":247,"author":{"gitId":"pratham31012002"},"content":"            if (isDisplay) {","lastModifiedDate":"2022-10-26"},{"lineNumber":248,"author":{"gitId":"-"},"content":"                resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":249,"author":{"gitId":"pratham31012002"},"content":"            }","lastModifiedDate":"2022-10-26"},{"lineNumber":250,"author":{"gitId":"josephaedan"},"content":"            personCountDisplay.setPersonCountMessage(logic.getFilteredPersonList(), logic.getAddressBook());","lastModifiedDate":"2022-10-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":254,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":255,"author":{"gitId":"josephaedan"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":256,"author":{"gitId":"josephaedan"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2022-10-28"},{"lineNumber":257,"author":{"gitId":"emptygx"},"content":"     *","lastModifiedDate":"2022-10-28"},{"lineNumber":258,"author":{"gitId":"josephaedan"},"content":"     * @param command The command to be executed.","lastModifiedDate":"2022-10-28"},{"lineNumber":259,"author":{"gitId":"josephaedan"},"content":"     * @return The result of the command execution.","lastModifiedDate":"2022-10-28"},{"lineNumber":260,"author":{"gitId":"josephaedan"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2022-10-28"},{"lineNumber":261,"author":{"gitId":"josephaedan"},"content":"     * @throws ParseException   If an error occurs during parsing.","lastModifiedDate":"2022-10-28"},{"lineNumber":262,"author":{"gitId":"josephaedan"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":263,"author":{"gitId":"josephaedan"},"content":"    public CommandResult executeCommand(Command command) throws CommandException, ParseException {","lastModifiedDate":"2022-10-28"},{"lineNumber":264,"author":{"gitId":"josephaedan"},"content":"        try {","lastModifiedDate":"2022-10-28"},{"lineNumber":265,"author":{"gitId":"josephaedan"},"content":"            CommandResult commandResult \u003d logic.execute(command);","lastModifiedDate":"2022-10-28"},{"lineNumber":266,"author":{"gitId":"josephaedan"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2022-10-28"},{"lineNumber":267,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":268,"author":{"gitId":"emptygx"},"content":"            resultDisplay.clearCharts();","lastModifiedDate":"2022-10-28"},{"lineNumber":269,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":270,"author":{"gitId":"emptygx"},"content":"            if (commandResult.isShowFeedback()) {","lastModifiedDate":"2022-10-28"},{"lineNumber":271,"author":{"gitId":"josephaedan"},"content":"                resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2022-10-28"},{"lineNumber":272,"author":{"gitId":"emptygx"},"content":"            } else if (commandResult.isShowStats()) {","lastModifiedDate":"2022-10-28"},{"lineNumber":273,"author":{"gitId":"emptygx"},"content":"                resultDisplay.setChartToUser(commandResult.getPieChartStats(), commandResult.getStatsTitles(),","lastModifiedDate":"2022-10-28"},{"lineNumber":274,"author":{"gitId":"emptygx"},"content":"                        commandResult.getFeedbackToUser());","lastModifiedDate":"2022-10-28"},{"lineNumber":275,"author":{"gitId":"emptygx"},"content":"            }","lastModifiedDate":"2022-10-28"},{"lineNumber":276,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":277,"author":{"gitId":"josephaedan"},"content":"            personCountDisplay.setPersonCountMessage(logic.getFilteredPersonList(), logic.getAddressBook());","lastModifiedDate":"2022-10-28"},{"lineNumber":278,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":279,"author":{"gitId":"josephaedan"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2022-10-28"},{"lineNumber":280,"author":{"gitId":"josephaedan"},"content":"                handleHelp();","lastModifiedDate":"2022-10-28"},{"lineNumber":281,"author":{"gitId":"josephaedan"},"content":"            }","lastModifiedDate":"2022-10-28"},{"lineNumber":282,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":283,"author":{"gitId":"josephaedan"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2022-10-28"},{"lineNumber":284,"author":{"gitId":"josephaedan"},"content":"                handleExit();","lastModifiedDate":"2022-10-28"},{"lineNumber":285,"author":{"gitId":"josephaedan"},"content":"            }","lastModifiedDate":"2022-10-28"},{"lineNumber":286,"author":{"gitId":"josephaedan"},"content":"            if (commandResult.isExport()) {","lastModifiedDate":"2022-10-28"},{"lineNumber":287,"author":{"gitId":"josephaedan"},"content":"                handleExport();","lastModifiedDate":"2022-10-28"},{"lineNumber":288,"author":{"gitId":"josephaedan"},"content":"            }","lastModifiedDate":"2022-10-28"},{"lineNumber":289,"author":{"gitId":"josephaedan"},"content":"            if (commandResult.isImport()) {","lastModifiedDate":"2022-10-28"},{"lineNumber":290,"author":{"gitId":"josephaedan"},"content":"                handleImport();","lastModifiedDate":"2022-10-28"},{"lineNumber":291,"author":{"gitId":"josephaedan"},"content":"            }","lastModifiedDate":"2022-10-28"},{"lineNumber":292,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":293,"author":{"gitId":"josephaedan"},"content":"            return commandResult;","lastModifiedDate":"2022-10-28"},{"lineNumber":294,"author":{"gitId":"josephaedan"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2022-10-28"},{"lineNumber":295,"author":{"gitId":"josephaedan"},"content":"            logger.info(\"Invalid command: \" + command);","lastModifiedDate":"2022-10-28"},{"lineNumber":296,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2022-10-28"},{"lineNumber":297,"author":{"gitId":"josephaedan"},"content":"            personCountDisplay.setPersonCountMessage(logic.getFilteredPersonList(), logic.getAddressBook());","lastModifiedDate":"2022-10-28"},{"lineNumber":298,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2022-10-28"},{"lineNumber":299,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":300,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":301,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":302,"author":{"gitId":"pratham31012002"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2022-10-26"},{"lineNumber":303,"author":{"gitId":"pratham31012002"},"content":"        return executeCommand(commandText, true);","lastModifiedDate":"2022-10-26"},{"lineNumber":304,"author":{"gitId":"pratham31012002"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":305,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":306,"author":{"gitId":"pratham31012002"},"content":"    public CommandResult executeFromWindow(String command) throws CommandException, ParseException {","lastModifiedDate":"2022-10-26"},{"lineNumber":307,"author":{"gitId":"pratham31012002"},"content":"        return this.executeCommand(command, false);","lastModifiedDate":"2022-10-26"},{"lineNumber":308,"author":{"gitId":"pratham31012002"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":309,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"emptygx":28,"josephaedan":45,"pratham31012002":46,"-":190}},{"path":"src/main/java/seedu/clinkedin/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.ui;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"ytingtan"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"ytingtan"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"agarwal-anjali"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"pratham31012002"},"content":"import java.util.List;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"pratham31012002"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":9,"author":{"gitId":"agarwal-anjali"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-10-24"},{"lineNumber":10,"author":{"gitId":"agarwal-anjali"},"content":"import javafx.application.HostServices;","lastModifiedDate":"2022-10-24"},{"lineNumber":11,"author":{"gitId":"pratham31012002"},"content":"import javafx.collections.ObservableMap;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"agarwal-anjali"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2022-10-24"},{"lineNumber":13,"author":{"gitId":"agarwal-anjali"},"content":"import javafx.event.EventHandler;","lastModifiedDate":"2022-10-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"ytingtan"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"agarwal-anjali"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-10-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"agarwal-anjali"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-10-24"},{"lineNumber":19,"author":{"gitId":"agarwal-anjali"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-10-24"},{"lineNumber":20,"author":{"gitId":"josephaedan"},"content":"import javafx.scene.input.MouseEvent;","lastModifiedDate":"2022-10-28"},{"lineNumber":21,"author":{"gitId":"ytingtan"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"ytingtan"},"content":"import javafx.scene.layout.BackgroundFill;","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"ytingtan"},"content":"import javafx.scene.layout.CornerRadii;","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"agarwal-anjali"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2022-10-23"},{"lineNumber":25,"author":{"gitId":"pratham31012002"},"content":"import javafx.scene.layout.GridPane;","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"ytingtan"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"ytingtan"},"content":"import javafx.scene.text.Font;","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"agarwal-anjali"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-10-24"},{"lineNumber":31,"author":{"gitId":"josephaedan"},"content":"import seedu.clinkedin.commons.core.index.Index;","lastModifiedDate":"2022-10-28"},{"lineNumber":32,"author":{"gitId":"agarwal-anjali"},"content":"import seedu.clinkedin.commons.util.ImageUtil;","lastModifiedDate":"2022-10-24"},{"lineNumber":33,"author":{"gitId":"josephaedan"},"content":"import seedu.clinkedin.logic.commands.ViewCommand;","lastModifiedDate":"2022-10-28"},{"lineNumber":34,"author":{"gitId":"josephaedan"},"content":"import seedu.clinkedin.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-28"},{"lineNumber":35,"author":{"gitId":"josephaedan"},"content":"import seedu.clinkedin.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-28"},{"lineNumber":36,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.Person;","lastModifiedDate":"2022-10-15"},{"lineNumber":37,"author":{"gitId":"ytingtan"},"content":"import seedu.clinkedin.model.person.Rating;","lastModifiedDate":"2022-10-24"},{"lineNumber":38,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.tag.Tag;","lastModifiedDate":"2022-10-15"},{"lineNumber":39,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.tag.TagType;","lastModifiedDate":"2022-10-15"},{"lineNumber":40,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.tag.UniqueTagList;","lastModifiedDate":"2022-10-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":59,"author":{"gitId":"josephaedan"},"content":"    public final MainWindow mainWindow;","lastModifiedDate":"2022-10-28"},{"lineNumber":60,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":61,"author":{"gitId":"josephaedan"},"content":"    public final Index index;","lastModifiedDate":"2022-10-28"},{"lineNumber":62,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"pratham31012002"},"content":"    private GridPane tagPane;","lastModifiedDate":"2022-10-13"},{"lineNumber":77,"author":{"gitId":"emptygx"},"content":"    @FXML","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"josephaedan"},"content":"    private Label note;","lastModifiedDate":"2022-10-12"},{"lineNumber":79,"author":{"gitId":"josephaedan"},"content":"    @FXML","lastModifiedDate":"2022-10-12"},{"lineNumber":80,"author":{"gitId":"emptygx"},"content":"    private Label status;","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"ytingtan"},"content":"    @FXML","lastModifiedDate":"2022-10-17"},{"lineNumber":82,"author":{"gitId":"ytingtan"},"content":"    private Label rating;","lastModifiedDate":"2022-10-17"},{"lineNumber":83,"author":{"gitId":"ytingtan"},"content":"    @FXML","lastModifiedDate":"2022-10-27"},{"lineNumber":84,"author":{"gitId":"ytingtan"},"content":"    private HBox ratingBox;","lastModifiedDate":"2022-10-27"},{"lineNumber":85,"author":{"gitId":"agarwal-anjali"},"content":"    @FXML","lastModifiedDate":"2022-10-23"},{"lineNumber":86,"author":{"gitId":"agarwal-anjali"},"content":"    private FlowPane links;","lastModifiedDate":"2022-10-23"},{"lineNumber":87,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":91,"author":{"gitId":"josephaedan"},"content":"    public PersonCard(Person person, int displayedIndex, MainWindow mainWindow) {","lastModifiedDate":"2022-10-28"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":94,"author":{"gitId":"josephaedan"},"content":"        this.index \u003d Index.fromOneBased(displayedIndex);","lastModifiedDate":"2022-10-28"},{"lineNumber":95,"author":{"gitId":"josephaedan"},"content":"        this.mainWindow \u003d mainWindow;","lastModifiedDate":"2022-10-28"},{"lineNumber":96,"author":{"gitId":"josephaedan"},"content":"        cardPane.addEventHandler(MouseEvent.MOUSE_PRESSED, viewPerson());","lastModifiedDate":"2022-10-28"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":99,"author":{"gitId":"pratham31012002"},"content":"        ObservableMap\u003cTagType, UniqueTagList\u003e tagTypeMap \u003d person.getTags();","lastModifiedDate":"2022-10-13"},{"lineNumber":100,"author":{"gitId":"pratham31012002"},"content":"        List\u003cTagType\u003e tagTypeList \u003d tagTypeMap.keySet().stream()","lastModifiedDate":"2022-10-13"},{"lineNumber":101,"author":{"gitId":"pratham31012002"},"content":"                .sorted(Comparator.comparing(tagType -\u003e tagType.getTagTypeName())).collect(Collectors.toList());","lastModifiedDate":"2022-10-13"},{"lineNumber":102,"author":{"gitId":"pratham31012002"},"content":"        for (int i \u003d 0; i \u003c tagTypeList.size(); i++) {","lastModifiedDate":"2022-10-13"},{"lineNumber":103,"author":{"gitId":"pratham31012002"},"content":"            Label title \u003d new Label(tagTypeList.get(i).getTagTypeName());","lastModifiedDate":"2022-10-13"},{"lineNumber":104,"author":{"gitId":"pratham31012002"},"content":"            title.setStyle(\"-fx-background-color: #004999; -fx-text-fill: white;\");","lastModifiedDate":"2022-10-13"},{"lineNumber":105,"author":{"gitId":"pratham31012002"},"content":"            tagPane.add((title), 0, i);","lastModifiedDate":"2022-10-13"},{"lineNumber":106,"author":{"gitId":"pratham31012002"},"content":"            int idx \u003d 1;","lastModifiedDate":"2022-10-13"},{"lineNumber":107,"author":{"gitId":"pratham31012002"},"content":"            for (Tag tag: tagTypeMap.get(tagTypeList.get(i))) {","lastModifiedDate":"2022-10-13"},{"lineNumber":108,"author":{"gitId":"pratham31012002"},"content":"                tagPane.add(new Label(tag.tagName), idx, i);","lastModifiedDate":"2022-10-13"},{"lineNumber":109,"author":{"gitId":"pratham31012002"},"content":"                idx +\u003d 1;","lastModifiedDate":"2022-10-13"},{"lineNumber":110,"author":{"gitId":"pratham31012002"},"content":"            }","lastModifiedDate":"2022-10-13"},{"lineNumber":111,"author":{"gitId":"pratham31012002"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":112,"author":{"gitId":"pratham31012002"},"content":"        tagPane.setHgap(5);","lastModifiedDate":"2022-10-13"},{"lineNumber":113,"author":{"gitId":"pratham31012002"},"content":"        tagPane.setVgap(5);","lastModifiedDate":"2022-10-13"},{"lineNumber":114,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":115,"author":{"gitId":"emptygx"},"content":"        status.setText(person.getStatus().status);","lastModifiedDate":"2022-10-10"},{"lineNumber":116,"author":{"gitId":"josephaedan"},"content":"        note.setText(person.getNote().value.length() \u003e 0 ? \"Notes: \" + person.getNote().value : \"\");","lastModifiedDate":"2022-10-12"},{"lineNumber":117,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":118,"author":{"gitId":"ytingtan"},"content":"        // pure text \"Rating: \" with color","lastModifiedDate":"2022-10-27"},{"lineNumber":119,"author":{"gitId":"ytingtan"},"content":"        int ratingNumber \u003d person.getRating().value;","lastModifiedDate":"2022-10-27"},{"lineNumber":120,"author":{"gitId":"ytingtan"},"content":"        rating.setText(person.getRating().equals(new Rating(\"0\")) ? \"\" : \"Rating: \" + person.getRating()","lastModifiedDate":"2022-10-27"},{"lineNumber":121,"author":{"gitId":"ytingtan"},"content":"                .toString());","lastModifiedDate":"2022-10-27"},{"lineNumber":122,"author":{"gitId":"ytingtan"},"content":"        rating.setFont(new Font(4));","lastModifiedDate":"2022-10-27"},{"lineNumber":123,"author":{"gitId":"ytingtan"},"content":"        rating.setPadding(new Insets(1));","lastModifiedDate":"2022-10-27"},{"lineNumber":124,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":125,"author":{"gitId":"ytingtan"},"content":"        CornerRadii corn \u003d new CornerRadii(2.5);","lastModifiedDate":"2022-10-27"},{"lineNumber":126,"author":{"gitId":"ytingtan"},"content":"        if (ratingNumber \u003c\u003d 3 \u0026\u0026 ratingNumber \u003e\u003d 1) {","lastModifiedDate":"2022-10-27"},{"lineNumber":127,"author":{"gitId":"ytingtan"},"content":"            Color red \u003d Color.rgb(235, 50, 50);","lastModifiedDate":"2022-10-27"},{"lineNumber":128,"author":{"gitId":"ytingtan"},"content":"            Background redBg \u003d new Background(new BackgroundFill(red, corn, Insets.EMPTY));","lastModifiedDate":"2022-10-27"},{"lineNumber":129,"author":{"gitId":"ytingtan"},"content":"            rating.setBackground(redBg);","lastModifiedDate":"2022-10-27"},{"lineNumber":130,"author":{"gitId":"ytingtan"},"content":"        } else if (ratingNumber \u003c\u003d 6) {","lastModifiedDate":"2022-10-27"},{"lineNumber":131,"author":{"gitId":"ytingtan"},"content":"            Color yellow \u003d Color.rgb(236, 180, 16);","lastModifiedDate":"2022-10-27"},{"lineNumber":132,"author":{"gitId":"ytingtan"},"content":"            Background yellowBg \u003d new Background(new BackgroundFill(yellow, corn, Insets.EMPTY));","lastModifiedDate":"2022-10-27"},{"lineNumber":133,"author":{"gitId":"ytingtan"},"content":"            rating.setBackground(yellowBg);","lastModifiedDate":"2022-10-27"},{"lineNumber":134,"author":{"gitId":"ytingtan"},"content":"        } else {","lastModifiedDate":"2022-10-27"},{"lineNumber":135,"author":{"gitId":"ytingtan"},"content":"            Color green \u003d Color.rgb(16, 185, 67);","lastModifiedDate":"2022-10-27"},{"lineNumber":136,"author":{"gitId":"ytingtan"},"content":"            Background greenBg \u003d new Background(new BackgroundFill(green, corn, Insets.EMPTY));","lastModifiedDate":"2022-10-27"},{"lineNumber":137,"author":{"gitId":"ytingtan"},"content":"            rating.setBackground(greenBg);","lastModifiedDate":"2022-10-27"},{"lineNumber":138,"author":{"gitId":"ytingtan"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":139,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":140,"author":{"gitId":"ytingtan"},"content":"        try {","lastModifiedDate":"2022-10-27"},{"lineNumber":141,"author":{"gitId":"ytingtan"},"content":"            // stars as rating","lastModifiedDate":"2022-10-27"},{"lineNumber":142,"author":{"gitId":"ytingtan"},"content":"            int displayRating \u003d person.getRating().value;","lastModifiedDate":"2022-10-27"},{"lineNumber":143,"author":{"gitId":"ytingtan"},"content":"            // Image fullStar \u003d ImageUtil.getStar(\"fullstar\");","lastModifiedDate":"2022-10-27"},{"lineNumber":144,"author":{"gitId":"ytingtan"},"content":"            Image fullStar \u003d new Image(new FileInputStream(\"/images/rating/fullstar.png\"));","lastModifiedDate":"2022-10-27"},{"lineNumber":145,"author":{"gitId":"ytingtan"},"content":"            ImageView fullStarView \u003d new ImageView();","lastModifiedDate":"2022-10-27"},{"lineNumber":146,"author":{"gitId":"ytingtan"},"content":"            fullStarView.setImage(fullStar);","lastModifiedDate":"2022-10-27"},{"lineNumber":147,"author":{"gitId":"ytingtan"},"content":"            fullStarView.setFitWidth(15);","lastModifiedDate":"2022-10-27"},{"lineNumber":148,"author":{"gitId":"ytingtan"},"content":"            // Image halfStar \u003d ImageUtil.getStar(\"halfstar\");","lastModifiedDate":"2022-10-27"},{"lineNumber":149,"author":{"gitId":"ytingtan"},"content":"            Image halfStar \u003d new Image(new FileInputStream(\"/images/rating/halfstar.png\"));","lastModifiedDate":"2022-10-27"},{"lineNumber":150,"author":{"gitId":"ytingtan"},"content":"            ImageView halfStarView \u003d new ImageView();","lastModifiedDate":"2022-10-27"},{"lineNumber":151,"author":{"gitId":"ytingtan"},"content":"            halfStarView.setImage(halfStar);","lastModifiedDate":"2022-10-27"},{"lineNumber":152,"author":{"gitId":"ytingtan"},"content":"            halfStarView.setFitWidth(15);","lastModifiedDate":"2022-10-27"},{"lineNumber":153,"author":{"gitId":"ytingtan"},"content":"            // Image emptyStar \u003d ImageUtil.getStar(\"emptystar\");","lastModifiedDate":"2022-10-27"},{"lineNumber":154,"author":{"gitId":"ytingtan"},"content":"            Image emptyStar \u003d new Image(new FileInputStream(\"/images/rating/emptystar.png\"));","lastModifiedDate":"2022-10-27"},{"lineNumber":155,"author":{"gitId":"ytingtan"},"content":"            ImageView emptyStarView \u003d new ImageView();","lastModifiedDate":"2022-10-27"},{"lineNumber":156,"author":{"gitId":"ytingtan"},"content":"            emptyStarView.setImage(emptyStar);","lastModifiedDate":"2022-10-27"},{"lineNumber":157,"author":{"gitId":"ytingtan"},"content":"            emptyStarView.setFitWidth(15);","lastModifiedDate":"2022-10-27"},{"lineNumber":158,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":159,"author":{"gitId":"ytingtan"},"content":"            int stars \u003d 5;","lastModifiedDate":"2022-10-27"},{"lineNumber":160,"author":{"gitId":"ytingtan"},"content":"            while (stars !\u003d 0) {","lastModifiedDate":"2022-10-27"},{"lineNumber":161,"author":{"gitId":"ytingtan"},"content":"                stars--;","lastModifiedDate":"2022-10-27"},{"lineNumber":162,"author":{"gitId":"ytingtan"},"content":"                if (displayRating \u003d\u003d 0) {","lastModifiedDate":"2022-10-27"},{"lineNumber":163,"author":{"gitId":"ytingtan"},"content":"                    ratingBox.getChildren().add(emptyStarView);","lastModifiedDate":"2022-10-27"},{"lineNumber":164,"author":{"gitId":"ytingtan"},"content":"                } else if (displayRating \u003d\u003d 1) {","lastModifiedDate":"2022-10-27"},{"lineNumber":165,"author":{"gitId":"ytingtan"},"content":"                    ratingBox.getChildren().add(halfStarView);","lastModifiedDate":"2022-10-27"},{"lineNumber":166,"author":{"gitId":"ytingtan"},"content":"                    displayRating \u003d 0;","lastModifiedDate":"2022-10-27"},{"lineNumber":167,"author":{"gitId":"ytingtan"},"content":"                } else {","lastModifiedDate":"2022-10-27"},{"lineNumber":168,"author":{"gitId":"ytingtan"},"content":"                    ratingBox.getChildren().add(fullStarView);","lastModifiedDate":"2022-10-27"},{"lineNumber":169,"author":{"gitId":"ytingtan"},"content":"                    displayRating -\u003d 2;","lastModifiedDate":"2022-10-27"},{"lineNumber":170,"author":{"gitId":"ytingtan"},"content":"                }","lastModifiedDate":"2022-10-27"},{"lineNumber":171,"author":{"gitId":"ytingtan"},"content":"                System.out.println(displayRating);","lastModifiedDate":"2022-10-27"},{"lineNumber":172,"author":{"gitId":"ytingtan"},"content":"            }","lastModifiedDate":"2022-10-27"},{"lineNumber":173,"author":{"gitId":"ytingtan"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-10-27"},{"lineNumber":174,"author":{"gitId":"ytingtan"},"content":"            e.toString();","lastModifiedDate":"2022-10-27"},{"lineNumber":175,"author":{"gitId":"ytingtan"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":176,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":177,"author":{"gitId":"agarwal-anjali"},"content":"        person.getLinks().stream().sorted(Comparator.comparing(link -\u003e link.platform))","lastModifiedDate":"2022-10-24"},{"lineNumber":178,"author":{"gitId":"agarwal-anjali"},"content":"                .forEach(link -\u003e {","lastModifiedDate":"2022-10-24"},{"lineNumber":179,"author":{"gitId":"agarwal-anjali"},"content":"                    Button button \u003d new Button();","lastModifiedDate":"2022-10-24"},{"lineNumber":180,"author":{"gitId":"agarwal-anjali"},"content":"                    button.setOnAction(openBrowser(link.link.toString()));","lastModifiedDate":"2022-10-27"},{"lineNumber":181,"author":{"gitId":"agarwal-anjali"},"content":"                    Image image \u003d ImageUtil.getSocialIcon(link.platform);","lastModifiedDate":"2022-10-24"},{"lineNumber":182,"author":{"gitId":"agarwal-anjali"},"content":"                    if (image \u003d\u003d null) {","lastModifiedDate":"2022-10-24"},{"lineNumber":183,"author":{"gitId":"agarwal-anjali"},"content":"                        button.setText(link.platform + \" : \" + link.link);","lastModifiedDate":"2022-10-24"},{"lineNumber":184,"author":{"gitId":"agarwal-anjali"},"content":"                    } else {","lastModifiedDate":"2022-10-24"},{"lineNumber":185,"author":{"gitId":"agarwal-anjali"},"content":"                        ImageView platformIcon \u003d new ImageView(image);","lastModifiedDate":"2022-10-24"},{"lineNumber":186,"author":{"gitId":"agarwal-anjali"},"content":"                        platformIcon.setFitHeight(20);","lastModifiedDate":"2022-10-24"},{"lineNumber":187,"author":{"gitId":"agarwal-anjali"},"content":"                        platformIcon.setFitWidth(20);","lastModifiedDate":"2022-10-24"},{"lineNumber":188,"author":{"gitId":"agarwal-anjali"},"content":"                        button.setGraphic(platformIcon);","lastModifiedDate":"2022-10-24"},{"lineNumber":189,"author":{"gitId":"agarwal-anjali"},"content":"                    }","lastModifiedDate":"2022-10-24"},{"lineNumber":190,"author":{"gitId":"agarwal-anjali"},"content":"                    links.getChildren().add(button);","lastModifiedDate":"2022-10-24"},{"lineNumber":191,"author":{"gitId":"agarwal-anjali"},"content":"                });","lastModifiedDate":"2022-10-24"},{"lineNumber":192,"author":{"gitId":"agarwal-anjali"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":193,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":194,"author":{"gitId":"agarwal-anjali"},"content":"    private EventHandler\u003cActionEvent\u003e openBrowser(final String url) {","lastModifiedDate":"2022-10-24"},{"lineNumber":195,"author":{"gitId":"agarwal-anjali"},"content":"        Application a \u003d new Application() {","lastModifiedDate":"2022-10-24"},{"lineNumber":196,"author":{"gitId":"agarwal-anjali"},"content":"            @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":197,"author":{"gitId":"agarwal-anjali"},"content":"            public void start(Stage primaryStage) {","lastModifiedDate":"2022-10-24"},{"lineNumber":198,"author":{"gitId":"agarwal-anjali"},"content":"            }","lastModifiedDate":"2022-10-24"},{"lineNumber":199,"author":{"gitId":"agarwal-anjali"},"content":"        };","lastModifiedDate":"2022-10-24"},{"lineNumber":200,"author":{"gitId":"agarwal-anjali"},"content":"        EventHandler\u003cActionEvent\u003e e \u003d new EventHandler\u003cActionEvent\u003e() {","lastModifiedDate":"2022-10-24"},{"lineNumber":201,"author":{"gitId":"agarwal-anjali"},"content":"            @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":202,"author":{"gitId":"agarwal-anjali"},"content":"            public void handle(ActionEvent event) {","lastModifiedDate":"2022-10-24"},{"lineNumber":203,"author":{"gitId":"agarwal-anjali"},"content":"                HostServices services \u003d a.getHostServices();","lastModifiedDate":"2022-10-24"},{"lineNumber":204,"author":{"gitId":"agarwal-anjali"},"content":"                services.showDocument(url);","lastModifiedDate":"2022-10-24"},{"lineNumber":205,"author":{"gitId":"agarwal-anjali"},"content":"            }","lastModifiedDate":"2022-10-24"},{"lineNumber":206,"author":{"gitId":"agarwal-anjali"},"content":"        };","lastModifiedDate":"2022-10-24"},{"lineNumber":207,"author":{"gitId":"agarwal-anjali"},"content":"        return e;","lastModifiedDate":"2022-10-24"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":210,"author":{"gitId":"josephaedan"},"content":"    private EventHandler\u003cMouseEvent\u003e viewPerson() {","lastModifiedDate":"2022-10-28"},{"lineNumber":211,"author":{"gitId":"josephaedan"},"content":"        return new EventHandler\u003cMouseEvent\u003e() {","lastModifiedDate":"2022-10-28"},{"lineNumber":212,"author":{"gitId":"josephaedan"},"content":"            @Override","lastModifiedDate":"2022-10-28"},{"lineNumber":213,"author":{"gitId":"josephaedan"},"content":"            public void handle(MouseEvent clickEvent) {","lastModifiedDate":"2022-10-28"},{"lineNumber":214,"author":{"gitId":"josephaedan"},"content":"                try {","lastModifiedDate":"2022-10-28"},{"lineNumber":215,"author":{"gitId":"josephaedan"},"content":"                    mainWindow.executeCommand(new ViewCommand(index));","lastModifiedDate":"2022-10-28"},{"lineNumber":216,"author":{"gitId":"josephaedan"},"content":"                } catch (ParseException | CommandException e) {","lastModifiedDate":"2022-10-28"},{"lineNumber":217,"author":{"gitId":"josephaedan"},"content":"                    e.printStackTrace();","lastModifiedDate":"2022-10-28"},{"lineNumber":218,"author":{"gitId":"josephaedan"},"content":"                }","lastModifiedDate":"2022-10-28"},{"lineNumber":219,"author":{"gitId":"josephaedan"},"content":"            };","lastModifiedDate":"2022-10-28"},{"lineNumber":220,"author":{"gitId":"josephaedan"},"content":"        };","lastModifiedDate":"2022-10-28"},{"lineNumber":221,"author":{"gitId":"josephaedan"},"content":"    };","lastModifiedDate":"2022-10-28"},{"lineNumber":222,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":227,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":232,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":237,"author":{"gitId":"josephaedan"},"content":"        return index.equals(card.index)","lastModifiedDate":"2022-10-28"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":240,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"agarwal-anjali":45,"ytingtan":73,"emptygx":8,"pratham31012002":21,"josephaedan":30,"-":63}},{"path":"src/main/java/seedu/clinkedin/ui/PersonCountDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.ui;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":3,"author":{"gitId":"josephaedan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-08"},{"lineNumber":4,"author":{"gitId":"josephaedan"},"content":"import java.util.List;","lastModifiedDate":"2022-10-08"},{"lineNumber":5,"author":{"gitId":"josephaedan"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-10-08"},{"lineNumber":6,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":7,"author":{"gitId":"josephaedan"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-08"},{"lineNumber":8,"author":{"gitId":"josephaedan"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-08"},{"lineNumber":9,"author":{"gitId":"josephaedan"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-10-08"},{"lineNumber":10,"author":{"gitId":"josephaedan"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-10-08"},{"lineNumber":11,"author":{"gitId":"josephaedan"},"content":"import javafx.scene.text.TextFlow;","lastModifiedDate":"2022-10-08"},{"lineNumber":12,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.commons.core.LogsCenter;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.Person;","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":16,"author":{"gitId":"josephaedan"},"content":"/**","lastModifiedDate":"2022-10-08"},{"lineNumber":17,"author":{"gitId":"emptygx"},"content":" * A UI component that displays the number of persons in the clinkedin book.","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"josephaedan"},"content":" * @author A0214632N","lastModifiedDate":"2022-10-08"},{"lineNumber":19,"author":{"gitId":"josephaedan"},"content":" */","lastModifiedDate":"2022-10-08"},{"lineNumber":20,"author":{"gitId":"josephaedan"},"content":"public class PersonCountDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-08"},{"lineNumber":21,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":22,"author":{"gitId":"josephaedan"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":23,"author":{"gitId":"josephaedan"},"content":"     * FXMl file to be loaded","lastModifiedDate":"2022-10-08"},{"lineNumber":24,"author":{"gitId":"josephaedan"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":25,"author":{"gitId":"josephaedan"},"content":"    private static final String FXML \u003d \"PersonCountDisplay.fxml\";","lastModifiedDate":"2022-10-08"},{"lineNumber":26,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":27,"author":{"gitId":"josephaedan"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":28,"author":{"gitId":"emptygx"},"content":"     * Standard message to be displayed when there are no persons in the clinkedin","lastModifiedDate":"2022-10-15"},{"lineNumber":29,"author":{"gitId":"josephaedan"},"content":"     * book","lastModifiedDate":"2022-10-08"},{"lineNumber":30,"author":{"gitId":"josephaedan"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":31,"author":{"gitId":"emptygx"},"content":"    private static final String MESSAGE_PERSON_COUNT_ZERO \u003d \"No candidates in clinkedin book\";","lastModifiedDate":"2022-10-15"},{"lineNumber":32,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":33,"author":{"gitId":"josephaedan"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":34,"author":{"gitId":"josephaedan"},"content":"     * The logger for this class.","lastModifiedDate":"2022-10-08"},{"lineNumber":35,"author":{"gitId":"josephaedan"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":36,"author":{"gitId":"josephaedan"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PersonCountDisplay.class);","lastModifiedDate":"2022-10-08"},{"lineNumber":37,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":38,"author":{"gitId":"josephaedan"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":39,"author":{"gitId":"emptygx"},"content":"     * The text flow to display the total count of persons in the clinkedin book","lastModifiedDate":"2022-10-15"},{"lineNumber":40,"author":{"gitId":"josephaedan"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":41,"author":{"gitId":"josephaedan"},"content":"    @FXML","lastModifiedDate":"2022-10-08"},{"lineNumber":42,"author":{"gitId":"josephaedan"},"content":"    private TextFlow personCountDisplay;","lastModifiedDate":"2022-10-08"},{"lineNumber":43,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":44,"author":{"gitId":"josephaedan"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":45,"author":{"gitId":"josephaedan"},"content":"     * Constructor for PersonCountDisplay","lastModifiedDate":"2022-10-08"},{"lineNumber":46,"author":{"gitId":"emptygx"},"content":"     * @param filteredList The filtered list of persons in the clinkedin book","lastModifiedDate":"2022-10-15"},{"lineNumber":47,"author":{"gitId":"emptygx"},"content":"     * @param totalList    The list of all persons in the clinkedin book","lastModifiedDate":"2022-10-15"},{"lineNumber":48,"author":{"gitId":"josephaedan"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":49,"author":{"gitId":"josephaedan"},"content":"    public PersonCountDisplay(ObservableList\u003cPerson\u003e filteredList, ReadOnlyAddressBook totalList) {","lastModifiedDate":"2022-10-08"},{"lineNumber":50,"author":{"gitId":"josephaedan"},"content":"        super(FXML);","lastModifiedDate":"2022-10-08"},{"lineNumber":51,"author":{"gitId":"josephaedan"},"content":"        setPersonCountMessage(filteredList, totalList);","lastModifiedDate":"2022-10-08"},{"lineNumber":52,"author":{"gitId":"josephaedan"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":53,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":54,"author":{"gitId":"josephaedan"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":55,"author":{"gitId":"josephaedan"},"content":"     * Returns the message to be displayed in the person count label.","lastModifiedDate":"2022-10-08"},{"lineNumber":56,"author":{"gitId":"josephaedan"},"content":"     * This function runs during the initialisation of the PersonCountDisplay","lastModifiedDate":"2022-10-08"},{"lineNumber":57,"author":{"gitId":"josephaedan"},"content":"     * and dynamically when the addressbook changes from each command.","lastModifiedDate":"2022-10-08"},{"lineNumber":58,"author":{"gitId":"emptygx"},"content":"     * @param filteredList The filtered list of persons in the clinkedin book","lastModifiedDate":"2022-10-15"},{"lineNumber":59,"author":{"gitId":"emptygx"},"content":"     * @param totalList    The list of all persons in the clinkedin book","lastModifiedDate":"2022-10-15"},{"lineNumber":60,"author":{"gitId":"josephaedan"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":61,"author":{"gitId":"josephaedan"},"content":"    public void setPersonCountMessage(ObservableList\u003cPerson\u003e filteredList, ReadOnlyAddressBook totalList) {","lastModifiedDate":"2022-10-08"},{"lineNumber":62,"author":{"gitId":"josephaedan"},"content":"        int filteredCount \u003d filteredList.size();","lastModifiedDate":"2022-10-08"},{"lineNumber":63,"author":{"gitId":"josephaedan"},"content":"        int totalCount \u003d totalList.getCount();","lastModifiedDate":"2022-10-08"},{"lineNumber":64,"author":{"gitId":"josephaedan"},"content":"        List\u003cLabel\u003e personCountMessage \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-08"},{"lineNumber":65,"author":{"gitId":"josephaedan"},"content":"        if (totalCount \u003d\u003d 0) {","lastModifiedDate":"2022-10-08"},{"lineNumber":66,"author":{"gitId":"josephaedan"},"content":"            personCountMessage.add(new Label(MESSAGE_PERSON_COUNT_ZERO));","lastModifiedDate":"2022-10-08"},{"lineNumber":67,"author":{"gitId":"josephaedan"},"content":"        } else {","lastModifiedDate":"2022-10-08"},{"lineNumber":68,"author":{"gitId":"josephaedan"},"content":"            Label filteredCountText \u003d new Label(String.format(\"%d\", filteredCount));","lastModifiedDate":"2022-10-08"},{"lineNumber":69,"author":{"gitId":"josephaedan"},"content":"            Label totalCountText \u003d new Label(String.format(\"%d\", totalCount));","lastModifiedDate":"2022-10-08"},{"lineNumber":70,"author":{"gitId":"josephaedan"},"content":"            filteredCountText.setStyle(\"-fx-font-weight: bold\");","lastModifiedDate":"2022-10-08"},{"lineNumber":71,"author":{"gitId":"josephaedan"},"content":"            totalCountText.setStyle(\"-fx-font-weight: bold\");","lastModifiedDate":"2022-10-08"},{"lineNumber":72,"author":{"gitId":"josephaedan"},"content":"            personCountMessage","lastModifiedDate":"2022-10-08"},{"lineNumber":73,"author":{"gitId":"josephaedan"},"content":"                    .addAll(List.of(new Label(\"Showing\"), filteredCountText, new Label(\"Candidates out of\"),","lastModifiedDate":"2022-10-08"},{"lineNumber":74,"author":{"gitId":"josephaedan"},"content":"                            totalCountText, new Label(\"total Candidates\")));","lastModifiedDate":"2022-10-08"},{"lineNumber":75,"author":{"gitId":"josephaedan"},"content":"        }","lastModifiedDate":"2022-10-08"},{"lineNumber":76,"author":{"gitId":"josephaedan"},"content":"        personCountDisplay.getChildren().setAll(personCountMessage);","lastModifiedDate":"2022-10-08"},{"lineNumber":77,"author":{"gitId":"josephaedan"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":78,"author":{"gitId":"josephaedan"},"content":"}","lastModifiedDate":"2022-10-08"}],"authorContributionMap":{"emptygx":12,"josephaedan":66}},{"path":"src/main/java/seedu/clinkedin/ui/PersonListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.ui;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.commons.core.LogsCenter;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.Person;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class PersonListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListPanel.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PersonListPanel.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"josephaedan"},"content":"    private final MainWindow mainWindow;","lastModifiedDate":"2022-10-28"},{"lineNumber":21,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ListView\u003cPerson\u003e personListView;","lastModifiedDate":"2018-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"josephaedan"},"content":"    public PersonListPanel(ObservableList\u003cPerson\u003e personList, MainWindow mainWindow) {","lastModifiedDate":"2022-10-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        personListView.setItems(personList);","lastModifiedDate":"2018-02-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        personListView.setCellFactory(listView -\u003e new PersonListViewCell());","lastModifiedDate":"2016-08-18"},{"lineNumber":32,"author":{"gitId":"josephaedan"},"content":"        this.mainWindow \u003d mainWindow;","lastModifiedDate":"2022-10-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2018-02-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    class PersonListViewCell extends ListCell\u003cPerson\u003e {","lastModifiedDate":"2018-02-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        protected void updateItem(Person person, boolean empty) {","lastModifiedDate":"2018-02-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            super.updateItem(person, empty);","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            if (empty || person \u003d\u003d null) {","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"josephaedan"},"content":"                setGraphic(new PersonCard(person, getIndex() + 1, mainWindow).getRoot());","lastModifiedDate":"2022-10-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"emptygx":3,"josephaedan":5,"-":44}},{"path":"src/main/java/seedu/clinkedin/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.ui;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"emptygx"},"content":"import java.util.List;","lastModifiedDate":"2022-10-28"},{"lineNumber":6,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":7,"author":{"gitId":"emptygx"},"content":"import javafx.beans.binding.Bindings;","lastModifiedDate":"2022-10-28"},{"lineNumber":8,"author":{"gitId":"emptygx"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"emptygx"},"content":"import javafx.scene.chart.PieChart;","lastModifiedDate":"2022-10-28"},{"lineNumber":11,"author":{"gitId":"emptygx"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-10-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2016-09-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"emptygx"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2022-10-28"},{"lineNumber":15,"author":{"gitId":"emptygx"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-10-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"josephaedan"},"content":"    private static final String DEFAULT_INIT_DISPLAY \u003d \"Welcome to CLInkedIn!\\n\\n\"","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"josephaedan"},"content":"            + \"CLInkedIn is a desktop contact management application for Recruiters to \"","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"josephaedan"},"content":"            + \"manage their contact list of candidates.\\n\"","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"josephaedan"},"content":"            + \"1. Keep track of the candidates/contacts you have met through events or recruitment applications.\\n\"","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"josephaedan"},"content":"            + \"2. Tag candidates by their skills, experience and stage in the recruitment process.\\n\"","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"josephaedan"},"content":"            + \"3. Filter candidates according to a specific skill, experience or stage in the recruitment process.\\n\"","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"josephaedan"},"content":"            + \"4. Edit/remove details of the candidates/contacts.\\n\\n\"","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"josephaedan"},"content":"            + \"To get started:\\n\"","lastModifiedDate":"2022-10-16"},{"lineNumber":32,"author":{"gitId":"josephaedan"},"content":"            + \"- Type \u0027help\u0027 to see the list of commands available.\\n\"","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"josephaedan"},"content":"            + \"- Type \u0027help COMMAND\u0027 to see the usage of a specific command.\\n\"","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"josephaedan"},"content":"            + \"- Type \u0027exit\u0027 to exit the application.\\n\";","lastModifiedDate":"2022-10-16"},{"lineNumber":35,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"emptygx"},"content":"    @FXML","lastModifiedDate":"2022-10-28"},{"lineNumber":37,"author":{"gitId":"emptygx"},"content":"    private StackPane placeHolder;","lastModifiedDate":"2022-10-28"},{"lineNumber":38,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2016-10-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":42,"author":{"gitId":"josephaedan"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":43,"author":{"gitId":"josephaedan"},"content":"     * Creates a {@code ResultDisplay} to display the result of a command execution.","lastModifiedDate":"2022-10-16"},{"lineNumber":44,"author":{"gitId":"josephaedan"},"content":"     * We initialize the result display with a welcome message for users.","lastModifiedDate":"2022-10-16"},{"lineNumber":45,"author":{"gitId":"josephaedan"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"josephaedan"},"content":"        resultDisplay.setText(DEFAULT_INIT_DISPLAY);","lastModifiedDate":"2022-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"emptygx"},"content":"    public void setChartToUser(List\u003cObservableList\u003cPieChart.Data\u003e\u003e datas, List\u003cString\u003e titles,","lastModifiedDate":"2022-10-28"},{"lineNumber":57,"author":{"gitId":"emptygx"},"content":"                               String feedbackToUser) {","lastModifiedDate":"2022-10-28"},{"lineNumber":58,"author":{"gitId":"emptygx"},"content":"        ScrollPane scroll \u003d new ScrollPane();","lastModifiedDate":"2022-10-28"},{"lineNumber":59,"author":{"gitId":"emptygx"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2022-10-28"},{"lineNumber":60,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":61,"author":{"gitId":"emptygx"},"content":"        for (int i \u003d 0; i \u003c 1; i++) {","lastModifiedDate":"2022-10-28"},{"lineNumber":62,"author":{"gitId":"emptygx"},"content":"            ObservableList\u003cPieChart.Data\u003e pieChartData \u003d datas.get(i);","lastModifiedDate":"2022-10-28"},{"lineNumber":63,"author":{"gitId":"emptygx"},"content":"            double total \u003d pieChartData.stream().map(PieChart.Data::getPieValue).reduce(0.0, Double::sum);","lastModifiedDate":"2022-10-28"},{"lineNumber":64,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":65,"author":{"gitId":"emptygx"},"content":"            pieChartData.forEach(data -\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":66,"author":{"gitId":"emptygx"},"content":"                    data.nameProperty().bind(","lastModifiedDate":"2022-10-28"},{"lineNumber":67,"author":{"gitId":"emptygx"},"content":"                            Bindings.concat(","lastModifiedDate":"2022-10-28"},{"lineNumber":68,"author":{"gitId":"emptygx"},"content":"                                    String.format(\"%s (%.2f%%)\", data.getName(), data.getPieValue() / total * 100)","lastModifiedDate":"2022-10-28"},{"lineNumber":69,"author":{"gitId":"emptygx"},"content":"                            )","lastModifiedDate":"2022-10-28"},{"lineNumber":70,"author":{"gitId":"emptygx"},"content":"                    )","lastModifiedDate":"2022-10-28"},{"lineNumber":71,"author":{"gitId":"emptygx"},"content":"            );","lastModifiedDate":"2022-10-28"},{"lineNumber":72,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":73,"author":{"gitId":"emptygx"},"content":"            PieChart pieChart \u003d new PieChart(pieChartData);","lastModifiedDate":"2022-10-28"},{"lineNumber":74,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":75,"author":{"gitId":"emptygx"},"content":"            pieChart.setTitle(titles.get(i));","lastModifiedDate":"2022-10-28"},{"lineNumber":76,"author":{"gitId":"emptygx"},"content":"            pieChart.setLabelsVisible(true);","lastModifiedDate":"2022-10-28"},{"lineNumber":77,"author":{"gitId":"emptygx"},"content":"            pieChart.setStartAngle(180);","lastModifiedDate":"2022-10-28"},{"lineNumber":78,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":79,"author":{"gitId":"emptygx"},"content":"            placeHolder.getChildren().add(pieChart);","lastModifiedDate":"2022-10-28"},{"lineNumber":80,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":81,"author":{"gitId":"emptygx"},"content":"            VBox spacing \u003d new VBox(500);","lastModifiedDate":"2022-10-28"},{"lineNumber":82,"author":{"gitId":"emptygx"},"content":"            spacing.setSpacing(150);","lastModifiedDate":"2022-10-28"},{"lineNumber":83,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":84,"author":{"gitId":"emptygx"},"content":"            placeHolder.getChildren().add(spacing);","lastModifiedDate":"2022-10-28"},{"lineNumber":85,"author":{"gitId":"emptygx"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":86,"author":{"gitId":"emptygx"},"content":"        scroll.setFitToWidth(true);","lastModifiedDate":"2022-10-28"},{"lineNumber":87,"author":{"gitId":"emptygx"},"content":"        scroll.setFitToHeight(true);","lastModifiedDate":"2022-10-28"},{"lineNumber":88,"author":{"gitId":"emptygx"},"content":"        scroll.setContent(placeHolder);","lastModifiedDate":"2022-10-28"},{"lineNumber":89,"author":{"gitId":"emptygx"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":90,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":91,"author":{"gitId":"emptygx"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":92,"author":{"gitId":"emptygx"},"content":"     * Clear chart from previous commands.","lastModifiedDate":"2022-10-28"},{"lineNumber":93,"author":{"gitId":"emptygx"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":94,"author":{"gitId":"emptygx"},"content":"    public void clearCharts() {","lastModifiedDate":"2022-10-28"},{"lineNumber":95,"author":{"gitId":"emptygx"},"content":"        placeHolder.getChildren().clear();","lastModifiedDate":"2022-10-28"},{"lineNumber":96,"author":{"gitId":"emptygx"},"content":"        resultDisplay.clear();","lastModifiedDate":"2022-10-28"},{"lineNumber":97,"author":{"gitId":"emptygx"},"content":"        placeHolder.getChildren().add(resultDisplay);","lastModifiedDate":"2022-10-28"},{"lineNumber":98,"author":{"gitId":"emptygx"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":99,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"emptygx":55,"josephaedan":17,"-":27}},{"path":"src/main/java/seedu/clinkedin/ui/StatusBarFooter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.ui;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2018-12-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the footer of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StatusBarFooter extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Label saveLocationStatus;","lastModifiedDate":"2018-12-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code StatusBarFooter} with the given {@code Path}.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public StatusBarFooter(Path saveLocation) {","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        saveLocationStatus.setText(Paths.get(\".\").resolve(saveLocation).toString());","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"emptygx":1,"-":27}},{"path":"src/main/java/seedu/clinkedin/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.ui;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * API of UI component","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public interface Ui {","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /** Starts the UI (and the App).  */","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    void start(Stage primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"emptygx":1,"-":12}},{"path":"src/main/java/seedu/clinkedin/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.ui;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.MainApp;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.commons.core.LogsCenter;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.commons.util.StringUtil;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.logic.Logic;","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/address_book_32.png\";","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"emptygx":5,"-":83}},{"path":"src/main/java/seedu/clinkedin/ui/UiPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.ui;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.MainApp;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc.","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * It contains a scene graph with a root node of type {@code T}.","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** Resource folder where FXML files are stored. */","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2017-11-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2017-11-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL, T)","lastModifiedDate":"2017-11-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2017-11-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public T getRoot() {","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return fxmlLoader.getRoot();","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @param location Location of the FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param root Specifies the root of the object hierarchy.","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private void loadFxmlFile(URL location, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        fxmlLoader.setLocation(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        fxmlLoader.setRoot(root);","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"emptygx":2,"-":86}},{"path":"src/main/java/seedu/clinkedin/ui/utils/CommandRow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"josephaedan"},"content":"package seedu.clinkedin.ui.utils;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":3,"author":{"gitId":"josephaedan"},"content":"/**","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"josephaedan"},"content":" * Represents a table row containing the information about a command","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"josephaedan"},"content":" * in the command list.","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"josephaedan"},"content":" */","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"josephaedan"},"content":"public class CommandRow {","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"josephaedan"},"content":"    private String commandName;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"josephaedan"},"content":"    private String commandUsage;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"josephaedan"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"josephaedan"},"content":"     * Creates a new CommandRow.","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"josephaedan"},"content":"     * @param commandName Name of the command.","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"josephaedan"},"content":"     * @param commandUsage Usage of the command.","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"josephaedan"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"josephaedan"},"content":"    public CommandRow(String commandName, String commandUsage) {","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"josephaedan"},"content":"        this.commandName \u003d commandName;","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"josephaedan"},"content":"        this.commandUsage \u003d commandUsage;","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"josephaedan"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"josephaedan"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"josephaedan"},"content":"     * Returns the name of the command.","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"josephaedan"},"content":"     * @return Name of the command.","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"josephaedan"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"josephaedan"},"content":"    public String getCommandName() {","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"josephaedan"},"content":"        return commandName;","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"josephaedan"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"josephaedan"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"josephaedan"},"content":"     * Returns the usage of the command.","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"josephaedan"},"content":"     * @return Usage of the command.","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"josephaedan"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"josephaedan"},"content":"    public String getCommandUsage() {","lastModifiedDate":"2022-10-27"},{"lineNumber":34,"author":{"gitId":"josephaedan"},"content":"        return commandUsage;","lastModifiedDate":"2022-10-27"},{"lineNumber":35,"author":{"gitId":"josephaedan"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":36,"author":{"gitId":"josephaedan"},"content":"}","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"josephaedan":36}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"emptygx"},"content":"    -fx-background-color: derive(#171923, 20%);","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"emptygx"},"content":"    -fx-base: #171923;","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"emptygx"},"content":"    -fx-control-inner-background: #171923;","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"emptygx"},"content":"    -fx-background-color: #171923;","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"emptygx"},"content":"    -fx-background-color: derive(#171923, 20%);","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"emptygx"},"content":"    -fx-background-color: derive(#171923, 20%);","lastModifiedDate":"2022-10-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"emptygx"},"content":"    -fx-background-color: derive(#171923, 20%);","lastModifiedDate":"2022-10-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"emptygx"},"content":"    -fx-background-color: #252838;","lastModifiedDate":"2022-10-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"emptygx"},"content":"    -fx-background-color: #32374d;","lastModifiedDate":"2022-10-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":136,"author":{"gitId":"emptygx"},"content":"     -fx-background-color: derive(#171923, 20%);","lastModifiedDate":"2022-10-10"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"emptygx"},"content":"     -fx-background-color: #171923;","lastModifiedDate":"2022-10-10"},{"lineNumber":141,"author":{"gitId":"emptygx"},"content":"     -fx-border-color: derive(#171923, 20%);","lastModifiedDate":"2022-10-10"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"emptygx"},"content":"    -fx-background-color: derive(#171923, 30%);","lastModifiedDate":"2022-10-10"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":160,"author":{"gitId":"josephaedan"},"content":".person-count-display {","lastModifiedDate":"2022-10-08"},{"lineNumber":161,"author":{"gitId":"emptygx"},"content":"    -fx-background-color: derive(#171923, 20%);","lastModifiedDate":"2022-10-10"},{"lineNumber":162,"author":{"gitId":"josephaedan"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-10-08"},{"lineNumber":163,"author":{"gitId":"josephaedan"},"content":"    -fx-font-size: 9pt;","lastModifiedDate":"2022-10-08"},{"lineNumber":164,"author":{"gitId":"josephaedan"},"content":"    -fx-margin: 5px;","lastModifiedDate":"2022-10-08"},{"lineNumber":165,"author":{"gitId":"josephaedan"},"content":"}","lastModifiedDate":"2022-10-08"},{"lineNumber":166,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":167,"author":{"gitId":"josephaedan"},"content":".person-count-display \u003e .label {","lastModifiedDate":"2022-10-08"},{"lineNumber":168,"author":{"gitId":"josephaedan"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-10-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"emptygx"},"content":"    -fx-background-color: derive(#171923, 30%);","lastModifiedDate":"2022-10-10"},{"lineNumber":180,"author":{"gitId":"emptygx"},"content":"    -fx-border-color: derive(#171923, 25%);","lastModifiedDate":"2022-10-10"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"emptygx"},"content":"    -fx-background-color: derive(#171923, 30%);","lastModifiedDate":"2022-10-10"},{"lineNumber":190,"author":{"gitId":"emptygx"},"content":"    -fx-border-color: derive(#171923, 30%);","lastModifiedDate":"2022-10-10"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":195,"author":{"gitId":"emptygx"},"content":"    -fx-background-color: derive(#171923, 30%);","lastModifiedDate":"2022-10-10"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"emptygx"},"content":"    -fx-background-color: derive(#171923, 50%);","lastModifiedDate":"2022-10-10"},{"lineNumber":200,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"emptygx"},"content":"    -fx-background-color: derive(#171923, 20%);","lastModifiedDate":"2022-10-10"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"emptygx"},"content":"    -fx-background-color: #171923;","lastModifiedDate":"2022-10-10"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"emptygx"},"content":"  -fx-text-fill: #171923;","lastModifiedDate":"2022-10-10"},{"lineNumber":245,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"emptygx"},"content":"    -fx-background-color: #171923;","lastModifiedDate":"2022-10-10"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"emptygx"},"content":"    -fx-background-color: #171923;","lastModifiedDate":"2022-10-10"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"emptygx"},"content":"    -fx-background-color: #171923;","lastModifiedDate":"2022-10-10"},{"lineNumber":276,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"emptygx"},"content":"    -fx-background-color: derive(#171923, 25%);","lastModifiedDate":"2022-10-10"},{"lineNumber":286,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":295,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":296,"author":{"gitId":"emptygx"},"content":"    -fx-background-color: derive(#171923, 5%);","lastModifiedDate":"2022-10-10"},{"lineNumber":297,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":299,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"emptygx"},"content":"    -fx-background-color: derive(#171923, 50%);","lastModifiedDate":"2022-10-10"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":302,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":307,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":309,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":310,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":311,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":313,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":314,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":315,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":317,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":319,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":321,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":324,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":326,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":329,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":331,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":332,"author":{"gitId":"emptygx"},"content":"    -fx-background-color: #171923 #383838 transparent #383838;","lastModifiedDate":"2022-10-10"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":340,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":342,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":343,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":344,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":346,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":347,"author":{"gitId":"emptygx"},"content":"    -fx-background-color: #171923, #171923, transparent, #171923;","lastModifiedDate":"2022-10-10"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":349,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":351,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":352,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":354,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":356,"author":{"gitId":"pratham31012002"},"content":"#tagPane .label {","lastModifiedDate":"2022-10-13"},{"lineNumber":357,"author":{"gitId":"emptygx"},"content":"    -fx-text-fill: #171923;","lastModifiedDate":"2022-10-10"},{"lineNumber":358,"author":{"gitId":"emptygx"},"content":"    -fx-background-color: #90ccf4;","lastModifiedDate":"2022-10-10"},{"lineNumber":359,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":361,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":363,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":364,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":365,"author":{"gitId":"emptygx"},"content":"#status {","lastModifiedDate":"2022-10-10"},{"lineNumber":366,"author":{"gitId":"agarwal-anjali"},"content":"    -fx-background-color: #90ccf4;","lastModifiedDate":"2022-10-23"},{"lineNumber":367,"author":{"gitId":"emptygx"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2022-10-10"},{"lineNumber":368,"author":{"gitId":"emptygx"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2022-10-10"},{"lineNumber":369,"author":{"gitId":"emptygx"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2022-10-10"},{"lineNumber":370,"author":{"gitId":"agarwal-anjali"},"content":"    -fx-text-fill: #171923;","lastModifiedDate":"2022-10-23"},{"lineNumber":371,"author":{"gitId":"agarwal-anjali"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2022-10-23"},{"lineNumber":372,"author":{"gitId":"agarwal-anjali"},"content":"}","lastModifiedDate":"2022-10-23"},{"lineNumber":373,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":374,"author":{"gitId":"agarwal-anjali"},"content":"#links {","lastModifiedDate":"2022-10-23"},{"lineNumber":375,"author":{"gitId":"agarwal-anjali"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2022-10-23"},{"lineNumber":376,"author":{"gitId":"agarwal-anjali"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2022-10-23"},{"lineNumber":377,"author":{"gitId":"agarwal-anjali"},"content":"}","lastModifiedDate":"2022-10-23"},{"lineNumber":378,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":379,"author":{"gitId":"agarwal-anjali"},"content":"#links .button {","lastModifiedDate":"2022-10-24"},{"lineNumber":380,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-10-10"},{"lineNumber":381,"author":{"gitId":"agarwal-anjali"},"content":"    -fx-background-color: #90ccf4;","lastModifiedDate":"2022-10-24"},{"lineNumber":382,"author":{"gitId":"agarwal-anjali"},"content":"    -fx-border-color: #90ccf4;","lastModifiedDate":"2022-10-24"},{"lineNumber":383,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2022-10-23"},{"lineNumber":384,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2022-10-23"},{"lineNumber":385,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2022-10-23"},{"lineNumber":386,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2022-10-10"},{"lineNumber":387,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-10"},{"lineNumber":388,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":389,"author":{"gitId":"agarwal-anjali"},"content":"#links .button:hover {","lastModifiedDate":"2022-10-24"},{"lineNumber":390,"author":{"gitId":"agarwal-anjali"},"content":"    -fx-background-color: white;","lastModifiedDate":"2022-10-24"},{"lineNumber":391,"author":{"gitId":"agarwal-anjali"},"content":"}","lastModifiedDate":"2022-10-24"},{"lineNumber":392,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":393,"author":{"gitId":"emptygx"},"content":".chart {","lastModifiedDate":"2022-10-28"},{"lineNumber":394,"author":{"gitId":"emptygx"},"content":"    -fx-pref-width: 450;","lastModifiedDate":"2022-10-28"},{"lineNumber":395,"author":{"gitId":"emptygx"},"content":"    -fx-pref-height: 450;","lastModifiedDate":"2022-10-28"},{"lineNumber":396,"author":{"gitId":"emptygx"},"content":"    -fx-min-width: 450;","lastModifiedDate":"2022-10-28"},{"lineNumber":397,"author":{"gitId":"emptygx"},"content":"    -fx-min-height: 450;","lastModifiedDate":"2022-10-28"},{"lineNumber":398,"author":{"gitId":"emptygx"},"content":"    -fx-max-width: 450;","lastModifiedDate":"2022-10-28"},{"lineNumber":399,"author":{"gitId":"emptygx"},"content":"    -fx-max-height: 450;","lastModifiedDate":"2022-10-28"},{"lineNumber":400,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":401,"author":{"gitId":"emptygx"},"content":"    -fx-padding: 25px 0px 25px 0px;","lastModifiedDate":"2022-10-28"},{"lineNumber":402,"author":{"gitId":"emptygx"},"content":"    -fx-border-insets: 25px 0px 25px 0px;","lastModifiedDate":"2022-10-28"},{"lineNumber":403,"author":{"gitId":"emptygx"},"content":"    -fx-background-insets: 25px 0px 25px 0px;","lastModifiedDate":"2022-10-28"},{"lineNumber":404,"author":{"gitId":"emptygx"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":405,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":406,"author":{"gitId":"emptygx"},"content":".chart-content {","lastModifiedDate":"2022-10-28"},{"lineNumber":407,"author":{"gitId":"emptygx"},"content":"    -fx-padding: 0px;","lastModifiedDate":"2022-10-28"},{"lineNumber":408,"author":{"gitId":"emptygx"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":409,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":410,"author":{"gitId":"emptygx"},"content":".chart-title {","lastModifiedDate":"2022-10-28"},{"lineNumber":411,"author":{"gitId":"emptygx"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2022-10-28"},{"lineNumber":412,"author":{"gitId":"emptygx"},"content":"    -fx-font-size: 1.4em;","lastModifiedDate":"2022-10-28"},{"lineNumber":413,"author":{"gitId":"emptygx"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":414,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":415,"author":{"gitId":"emptygx"},"content":".chart-pie-label-line {","lastModifiedDate":"2022-10-28"},{"lineNumber":416,"author":{"gitId":"emptygx"},"content":"    -fx-stroke: #ffffff;","lastModifiedDate":"2022-10-28"},{"lineNumber":417,"author":{"gitId":"emptygx"},"content":"    -fx-fill: #ffffff;","lastModifiedDate":"2022-10-28"},{"lineNumber":418,"author":{"gitId":"emptygx"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":419,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":420,"author":{"gitId":"emptygx"},"content":".chart-pie-label {","lastModifiedDate":"2022-10-28"},{"lineNumber":421,"author":{"gitId":"emptygx"},"content":"    -fx-fill: #ffffff;","lastModifiedDate":"2022-10-28"},{"lineNumber":422,"author":{"gitId":"emptygx"},"content":"    -fx-font-size: 1.2em;","lastModifiedDate":"2022-10-28"},{"lineNumber":423,"author":{"gitId":"emptygx"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":424,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":425,"author":{"gitId":"emptygx"},"content":".chart-legend {","lastModifiedDate":"2022-10-28"},{"lineNumber":426,"author":{"gitId":"emptygx"},"content":"    -fx-background-color:  transparent;","lastModifiedDate":"2022-10-28"},{"lineNumber":427,"author":{"gitId":"emptygx"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":428,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":429,"author":{"gitId":"emptygx"},"content":".chart-legend-item{","lastModifiedDate":"2022-10-28"},{"lineNumber":430,"author":{"gitId":"emptygx"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2022-10-28"},{"lineNumber":431,"author":{"gitId":"emptygx"},"content":"}","lastModifiedDate":"2022-10-28"}],"authorContributionMap":{"agarwal-anjali":17,"emptygx":78,"josephaedan":8,"pratham31012002":1,"-":327}},{"path":"src/main/resources/view/ExportWindow.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pratham31012002"},"content":"#pathSelectorContainer {","lastModifiedDate":"2022-10-24"},{"lineNumber":2,"author":{"gitId":"pratham31012002"},"content":"    -fx-background-color: derive(#171923, 20%);","lastModifiedDate":"2022-10-24"},{"lineNumber":3,"author":{"gitId":"pratham31012002"},"content":"}","lastModifiedDate":"2022-10-24"},{"lineNumber":4,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":5,"author":{"gitId":"pratham31012002"},"content":"#exportWindowContainerVBox {","lastModifiedDate":"2022-10-24"},{"lineNumber":6,"author":{"gitId":"pratham31012002"},"content":"    -fx-background-color: derive(#171923, 20%);","lastModifiedDate":"2022-10-24"},{"lineNumber":7,"author":{"gitId":"pratham31012002"},"content":"    -fx-padding: 15px;","lastModifiedDate":"2022-10-24"},{"lineNumber":8,"author":{"gitId":"pratham31012002"},"content":"}","lastModifiedDate":"2022-10-24"},{"lineNumber":9,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":10,"author":{"gitId":"pratham31012002"},"content":"#chooseLocation, #chosenLocation, #fileName {","lastModifiedDate":"2022-10-24"},{"lineNumber":11,"author":{"gitId":"pratham31012002"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-10-24"},{"lineNumber":12,"author":{"gitId":"pratham31012002"},"content":"    -fx-font-size: 12px;","lastModifiedDate":"2022-10-24"},{"lineNumber":13,"author":{"gitId":"pratham31012002"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-10-24"},{"lineNumber":14,"author":{"gitId":"pratham31012002"},"content":"    -fx-padding: 5px 5px 5px 5px;","lastModifiedDate":"2022-10-24"},{"lineNumber":15,"author":{"gitId":"pratham31012002"},"content":"}","lastModifiedDate":"2022-10-24"},{"lineNumber":16,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":17,"author":{"gitId":"pratham31012002"},"content":"#selectButton {","lastModifiedDate":"2022-10-24"},{"lineNumber":18,"author":{"gitId":"pratham31012002"},"content":"    -fx-font-size: 12px;","lastModifiedDate":"2022-10-24"},{"lineNumber":19,"author":{"gitId":"pratham31012002"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-10-24"},{"lineNumber":20,"author":{"gitId":"pratham31012002"},"content":"    -fx-padding: 5px 5px 5px 5px;","lastModifiedDate":"2022-10-24"},{"lineNumber":21,"author":{"gitId":"pratham31012002"},"content":"}","lastModifiedDate":"2022-10-24"},{"lineNumber":22,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"pratham31012002"},"content":"#fileFormat {","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"pratham31012002"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"pratham31012002"},"content":"}","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"pratham31012002":25}},{"path":"src/main/resources/view/ExportWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pratham31012002"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":2,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":3,"author":{"gitId":"pratham31012002"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":4,"author":{"gitId":"pratham31012002"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":5,"author":{"gitId":"pratham31012002"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":6,"author":{"gitId":"pratham31012002"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":7,"author":{"gitId":"pratham31012002"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":8,"author":{"gitId":"pratham31012002"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":9,"author":{"gitId":"pratham31012002"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":10,"author":{"gitId":"pratham31012002"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":11,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":12,"author":{"gitId":"pratham31012002"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":13,"author":{"gitId":"pratham31012002"},"content":"\u003c?import javafx.scene.control.ComboBox?\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"pratham31012002"},"content":"\u003c?import java.lang.String?\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"pratham31012002"},"content":"\u003c?import javafx.collections.FXCollections?\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"pratham31012002"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Export\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/18\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":17,"author":{"gitId":"pratham31012002"},"content":"    \u003cscene\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":18,"author":{"gitId":"pratham31012002"},"content":"        \u003cScene\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":19,"author":{"gitId":"pratham31012002"},"content":"            \u003cstylesheets\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":20,"author":{"gitId":"pratham31012002"},"content":"                \u003cURL value\u003d\"@ExportWindow.css\" /\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":21,"author":{"gitId":"pratham31012002"},"content":"            \u003c/stylesheets\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":22,"author":{"gitId":"pratham31012002"},"content":"            \u003cVBox id\u003d\"exportWindowContainerVBox\"\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":23,"author":{"gitId":"pratham31012002"},"content":"                \u003cHBox id\u003d\"pathSelectorContainer\"\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":24,"author":{"gitId":"pratham31012002"},"content":"                    \u003cchildren\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":25,"author":{"gitId":"pratham31012002"},"content":"                        \u003cLabel fx:id\u003d\"chooseLocation\" minWidth\u003d\"10.0\"\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":26,"author":{"gitId":"pratham31012002"},"content":"                        \u003c/Label\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":27,"author":{"gitId":"pratham31012002"},"content":"                        \u003cButton fx:id\u003d\"selectButton\" onAction\u003d\"#handleSelect\" text\u003d\"Select\"\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":28,"author":{"gitId":"pratham31012002"},"content":"                        \u003c/Button\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":29,"author":{"gitId":"pratham31012002"},"content":"                        \u003cLabel fx:id\u003d\"chosenLocation\" prefWidth\u003d\"250.0\"\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":30,"author":{"gitId":"pratham31012002"},"content":"                            \u003cHBox.margin\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":31,"author":{"gitId":"pratham31012002"},"content":"                                \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":32,"author":{"gitId":"pratham31012002"},"content":"                            \u003c/HBox.margin\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":33,"author":{"gitId":"pratham31012002"},"content":"                        \u003c/Label\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":34,"author":{"gitId":"pratham31012002"},"content":"                    \u003c/children\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":35,"author":{"gitId":"pratham31012002"},"content":"                \u003c/HBox\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":36,"author":{"gitId":"pratham31012002"},"content":"                \u003cHBox id\u003d\"fileNameContainer\"\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":37,"author":{"gitId":"pratham31012002"},"content":"                    \u003cchildren\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":38,"author":{"gitId":"pratham31012002"},"content":"                        \u003cLabel fx:id\u003d\"fileName\" minWidth\u003d\"10.0\"\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":39,"author":{"gitId":"pratham31012002"},"content":"                            \u003cHBox.margin\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":40,"author":{"gitId":"pratham31012002"},"content":"                                \u003cInsets top\u003d\"10.0\" /\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":41,"author":{"gitId":"pratham31012002"},"content":"                            \u003c/HBox.margin\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":42,"author":{"gitId":"pratham31012002"},"content":"                        \u003c/Label\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":43,"author":{"gitId":"pratham31012002"},"content":"                        \u003cTextField fx:id\u003d\"userEnteredFileName\" prefWidth\u003d\"150.0\"\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":44,"author":{"gitId":"pratham31012002"},"content":"                            \u003cHBox.margin\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":45,"author":{"gitId":"pratham31012002"},"content":"                                \u003cInsets top\u003d\"10.0\" /\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":46,"author":{"gitId":"pratham31012002"},"content":"                            \u003c/HBox.margin\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":47,"author":{"gitId":"pratham31012002"},"content":"                        \u003c/TextField\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":48,"author":{"gitId":"pratham31012002"},"content":"                        \u003cComboBox fx:id\u003d\"fileFormat\"\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":49,"author":{"gitId":"pratham31012002"},"content":"                            \u003cHBox.margin\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":50,"author":{"gitId":"pratham31012002"},"content":"                                \u003cInsets top\u003d\"10.0\" /\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":51,"author":{"gitId":"pratham31012002"},"content":"                            \u003c/HBox.margin\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":52,"author":{"gitId":"pratham31012002"},"content":"                            \u003citems\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":53,"author":{"gitId":"pratham31012002"},"content":"                                \u003cFXCollections fx:factory\u003d\"observableArrayList\"\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":54,"author":{"gitId":"pratham31012002"},"content":"                                    \u003cString fx:value\u003d\".csv\" /\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":55,"author":{"gitId":"pratham31012002"},"content":"                                    \u003cString fx:value\u003d\".json\" /\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":56,"author":{"gitId":"pratham31012002"},"content":"                                \u003c/FXCollections\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":57,"author":{"gitId":"pratham31012002"},"content":"                            \u003c/items\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":58,"author":{"gitId":"pratham31012002"},"content":"                            \u003cvalue\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":59,"author":{"gitId":"pratham31012002"},"content":"                                \u003cString fx:value\u003d\".csv\"/\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":60,"author":{"gitId":"pratham31012002"},"content":"                            \u003c/value\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":61,"author":{"gitId":"pratham31012002"},"content":"                        \u003c/ComboBox\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":62,"author":{"gitId":"pratham31012002"},"content":"                        \u003cButton fx:id\u003d\"exportButton\" onAction\u003d\"#handleOnExport\" text\u003d\"Export\"\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":63,"author":{"gitId":"pratham31012002"},"content":"                            \u003cHBox.margin\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":64,"author":{"gitId":"pratham31012002"},"content":"                                \u003cInsets top\u003d\"10.0\" /\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":65,"author":{"gitId":"pratham31012002"},"content":"                            \u003c/HBox.margin\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":66,"author":{"gitId":"pratham31012002"},"content":"                        \u003c/Button\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":67,"author":{"gitId":"pratham31012002"},"content":"                    \u003c/children\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":68,"author":{"gitId":"pratham31012002"},"content":"                \u003c/HBox\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":69,"author":{"gitId":"pratham31012002"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":70,"author":{"gitId":"pratham31012002"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":71,"author":{"gitId":"pratham31012002"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":72,"author":{"gitId":"pratham31012002"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-10-24"}],"authorContributionMap":{"pratham31012002":72}},{"path":"src/main/resources/view/Extensions.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":".error {","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d06651 !important; /* The error class should always override the default text-fill style */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".list-cell:empty {","lastModifiedDate":"2017-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /* Empty cells will not have alternating colours */","lastModifiedDate":"2017-02-23"},{"lineNumber":8,"author":{"gitId":"emptygx"},"content":"    -fx-background: derive(#171923, 20%);","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":".tag-selector {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    -fx-border-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-border-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-background-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":".tooltip-text {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"emptygx":1,"-":19}},{"path":"src/main/resources/view/HelpWindow.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#copyButton, #helpMessage {","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-01-02"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"#copyButton {","lastModifiedDate":"2022-01-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    -fx-background-color: dimgray;","lastModifiedDate":"2022-01-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"#copyButton:hover {","lastModifiedDate":"2022-01-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-background-color: gray;","lastModifiedDate":"2022-01-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"#copyButton:armed {","lastModifiedDate":"2022-01-02"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-background-color: darkgray;","lastModifiedDate":"2022-01-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"#helpMessageContainer {","lastModifiedDate":"2022-01-02"},{"lineNumber":18,"author":{"gitId":"emptygx"},"content":"    -fx-background-color: derive(#171923, 20%);","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"josephaedan"},"content":"#helpMessageContainerVBox {","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"emptygx"},"content":"    -fx-background-color: derive(#171923, 20%);","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"josephaedan"},"content":"}","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"josephaedan"},"content":"#commandTable {","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"emptygx"},"content":"    -fx-background-color: derive(#171923, 20%);","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"josephaedan"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"josephaedan"},"content":"    -fx-font-size: 12px;","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"josephaedan"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"josephaedan"},"content":"    -fx-margin: 2px;","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"josephaedan"},"content":"    -fx-padding: 5px;","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"josephaedan"},"content":"}","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":34,"author":{"gitId":"josephaedan"},"content":"***************************************************************************************/","lastModifiedDate":"2022-10-27"},{"lineNumber":35,"author":{"gitId":"josephaedan"},"content":"*    CSS Adapted from:","lastModifiedDate":"2022-10-27"},{"lineNumber":36,"author":{"gitId":"josephaedan"},"content":"*    Title: Styling a TableView in CSS (JavaFX)","lastModifiedDate":"2022-10-27"},{"lineNumber":37,"author":{"gitId":"josephaedan"},"content":"*    Author: Chris","lastModifiedDate":"2022-10-27"},{"lineNumber":38,"author":{"gitId":"josephaedan"},"content":"*    Date: 2015","lastModifiedDate":"2022-10-27"},{"lineNumber":39,"author":{"gitId":"josephaedan"},"content":"*    Availability: https://stackoverflow.com/questions/33938811/styling-a-tableview-in-css-javafx","lastModifiedDate":"2022-10-27"},{"lineNumber":40,"author":{"gitId":"josephaedan"},"content":"***************************************************************************************/","lastModifiedDate":"2022-10-27"},{"lineNumber":41,"author":{"gitId":"josephaedan"},"content":".table-view {","lastModifiedDate":"2022-10-27"},{"lineNumber":42,"author":{"gitId":"josephaedan"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2022-10-27"},{"lineNumber":43,"author":{"gitId":"josephaedan"},"content":"}","lastModifiedDate":"2022-10-27"},{"lineNumber":44,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":45,"author":{"gitId":"josephaedan"},"content":".table-view .column-header-background{","lastModifiedDate":"2022-10-27"},{"lineNumber":46,"author":{"gitId":"josephaedan"},"content":"    -fx-background-color: linear-gradient(transparent 0%, derive(#171923, 20%) 100%);","lastModifiedDate":"2022-10-27"},{"lineNumber":47,"author":{"gitId":"josephaedan"},"content":"}","lastModifiedDate":"2022-10-27"},{"lineNumber":48,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":49,"author":{"gitId":"josephaedan"},"content":".table-view .column-header-background .label{","lastModifiedDate":"2022-10-27"},{"lineNumber":50,"author":{"gitId":"josephaedan"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2022-10-27"},{"lineNumber":51,"author":{"gitId":"josephaedan"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-10-27"},{"lineNumber":52,"author":{"gitId":"josephaedan"},"content":"}","lastModifiedDate":"2022-10-27"},{"lineNumber":53,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":54,"author":{"gitId":"josephaedan"},"content":".table-view .column-header {","lastModifiedDate":"2022-10-27"},{"lineNumber":55,"author":{"gitId":"josephaedan"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2022-10-27"},{"lineNumber":56,"author":{"gitId":"josephaedan"},"content":"}","lastModifiedDate":"2022-10-27"},{"lineNumber":57,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":58,"author":{"gitId":"josephaedan"},"content":".table-view .corner {","lastModifiedDate":"2022-10-27"},{"lineNumber":59,"author":{"gitId":"josephaedan"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2022-10-27"},{"lineNumber":60,"author":{"gitId":"josephaedan"},"content":"}","lastModifiedDate":"2022-10-27"},{"lineNumber":61,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":62,"author":{"gitId":"josephaedan"},"content":".table-view .table-cell{","lastModifiedDate":"2022-10-27"},{"lineNumber":63,"author":{"gitId":"josephaedan"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-10-27"},{"lineNumber":64,"author":{"gitId":"josephaedan"},"content":"}","lastModifiedDate":"2022-10-27"},{"lineNumber":65,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":66,"author":{"gitId":"josephaedan"},"content":".table-row-cell{","lastModifiedDate":"2022-10-27"},{"lineNumber":67,"author":{"gitId":"josephaedan"},"content":"    -fx-background-color: -fx-table-cell-border-color, derive(#171923, 30%);","lastModifiedDate":"2022-10-27"},{"lineNumber":68,"author":{"gitId":"josephaedan"},"content":"    -fx-background-insets: 1;","lastModifiedDate":"2022-10-27"},{"lineNumber":69,"author":{"gitId":"josephaedan"},"content":"    -fx-margin: 5px;","lastModifiedDate":"2022-10-27"},{"lineNumber":70,"author":{"gitId":"josephaedan"},"content":"}","lastModifiedDate":"2022-10-27"},{"lineNumber":71,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":72,"author":{"gitId":"josephaedan"},"content":".table-row-cell:odd{","lastModifiedDate":"2022-10-27"},{"lineNumber":73,"author":{"gitId":"josephaedan"},"content":"    -fx-background-color: -fx-table-cell-border-color, derive(#171923, 40%);","lastModifiedDate":"2022-10-27"},{"lineNumber":74,"author":{"gitId":"josephaedan"},"content":"    -fx-background-insets: 1;","lastModifiedDate":"2022-10-27"},{"lineNumber":75,"author":{"gitId":"josephaedan"},"content":"    -fx-margin: 5px;","lastModifiedDate":"2022-10-27"},{"lineNumber":76,"author":{"gitId":"josephaedan"},"content":"}","lastModifiedDate":"2022-10-27"},{"lineNumber":77,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":78,"author":{"gitId":"josephaedan"},"content":".table-row-cell:selected {","lastModifiedDate":"2022-10-27"},{"lineNumber":79,"author":{"gitId":"josephaedan"},"content":"    -fx-background-color: #005797;","lastModifiedDate":"2022-10-27"},{"lineNumber":80,"author":{"gitId":"josephaedan"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2022-10-27"},{"lineNumber":81,"author":{"gitId":"josephaedan"},"content":"    -fx-background-radius: 1;","lastModifiedDate":"2022-10-27"},{"lineNumber":82,"author":{"gitId":"josephaedan"},"content":"}","lastModifiedDate":"2022-10-27"},{"lineNumber":83,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":84,"author":{"gitId":"josephaedan"},"content":".table-view \u003e .virtual-flow \u003e .scroll-bar:vertical,","lastModifiedDate":"2022-10-27"},{"lineNumber":85,"author":{"gitId":"josephaedan"},"content":".table-view \u003e .virtual-flow \u003e .scroll-bar:vertical \u003e .track,","lastModifiedDate":"2022-10-27"},{"lineNumber":86,"author":{"gitId":"josephaedan"},"content":".table-view \u003e .virtual-flow \u003e .scroll-bar:vertical \u003e .track-background,","lastModifiedDate":"2022-10-27"},{"lineNumber":87,"author":{"gitId":"josephaedan"},"content":".table-view \u003e .virtual-flow \u003e .scroll-bar:horizontal,","lastModifiedDate":"2022-10-27"},{"lineNumber":88,"author":{"gitId":"josephaedan"},"content":".table-view \u003e .virtual-flow \u003e .scroll-bar:horizontal \u003e .track,","lastModifiedDate":"2022-10-27"},{"lineNumber":89,"author":{"gitId":"josephaedan"},"content":".table-view \u003e .virtual-flow \u003e .scroll-bar:horizontal \u003e .track-background {","lastModifiedDate":"2022-10-27"},{"lineNumber":90,"author":{"gitId":"josephaedan"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2022-10-27"},{"lineNumber":91,"author":{"gitId":"josephaedan"},"content":"}","lastModifiedDate":"2022-10-27"},{"lineNumber":92,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":93,"author":{"gitId":"josephaedan"},"content":".table-view .filler {","lastModifiedDate":"2022-10-27"},{"lineNumber":94,"author":{"gitId":"josephaedan"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2022-10-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"emptygx":3,"josephaedan":73,"-":19}},{"path":"src/main/resources/view/HelpWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"josephaedan"},"content":"\u003c?import javafx.scene.control.TableColumn?\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"josephaedan"},"content":"\u003c?import javafx.scene.control.TableView?\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":13,"author":{"gitId":"josephaedan"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":16,"author":{"gitId":"josephaedan"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Help\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/18\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/help_icon.png\" /\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@HelpWindow.css\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"josephaedan"},"content":"      \u003cVBox id\u003d\"helpMessageContainerVBox\"\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"josephaedan"},"content":"        \u003cTableView id\u003d\"commandTable\" fx:id\u003d\"commandTable\"\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"josephaedan"},"content":"          \u003ccolumns\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"josephaedan"},"content":"            \u003cTableColumn fx:id\u003d\"commandName\" editable\u003d\"false\" text\u003d\"Name\" /\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"josephaedan"},"content":"            \u003cTableColumn fx:id\u003d\"commandUsage\" editable\u003d\"false\" text\u003d\"Usage\" /\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"josephaedan"},"content":"          \u003c/columns\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"josephaedan"},"content":"        \u003c/TableView\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"josephaedan"},"content":"        \u003cHBox id\u003d\"helpMessageContainer\" alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003cchildren\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            \u003cLabel fx:id\u003d\"helpMessage\" text\u003d\"Label\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"              \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"              \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            \u003c/Label\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            \u003cButton fx:id\u003d\"copyButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#copyUrl\" text\u003d\"Copy URL\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"              \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"              \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            \u003c/Button\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"          \u003c/children\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"          \u003copaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"          \u003c/opaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":52,"author":{"gitId":"josephaedan"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":55,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-12-01"}],"authorContributionMap":{"josephaedan":14,"-":41}},{"path":"src/main/resources/view/ImportWindow.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pratham31012002"},"content":"#pathSelectorContainer {","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"pratham31012002"},"content":"    -fx-background-color: derive(#171923, 20%);","lastModifiedDate":"2022-10-26"},{"lineNumber":3,"author":{"gitId":"pratham31012002"},"content":"}","lastModifiedDate":"2022-10-26"},{"lineNumber":4,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"pratham31012002"},"content":"#importWindowContainerVBox {","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"pratham31012002"},"content":"    -fx-background-color: derive(#171923, 20%);","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"pratham31012002"},"content":"    -fx-padding: 15px;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"pratham31012002"},"content":"}","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"pratham31012002"},"content":"#chooseFile, #chosenFile {","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"pratham31012002"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"pratham31012002"},"content":"    -fx-font-size: 12px;","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"pratham31012002"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"pratham31012002"},"content":"    -fx-padding: 5px 5px 5px 5px;","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"pratham31012002"},"content":"}","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"pratham31012002"},"content":"#selectButton {","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"pratham31012002"},"content":"    -fx-font-size: 12px;","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"pratham31012002"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"pratham31012002"},"content":"    -fx-padding: 5px 5px 5px 5px;","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"pratham31012002"},"content":"}","lastModifiedDate":"2022-10-26"}],"authorContributionMap":{"pratham31012002":21}},{"path":"src/main/resources/view/ImportWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pratham31012002"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":3,"author":{"gitId":"pratham31012002"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":4,"author":{"gitId":"pratham31012002"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"pratham31012002"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"pratham31012002"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"pratham31012002"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"pratham31012002"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"pratham31012002"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"pratham31012002"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"pratham31012002"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Import\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/18\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"pratham31012002"},"content":"    \u003cscene\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"pratham31012002"},"content":"        \u003cScene\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"pratham31012002"},"content":"            \u003cstylesheets\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"pratham31012002"},"content":"                \u003cURL value\u003d\"@ImportWindow.css\" /\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"pratham31012002"},"content":"            \u003c/stylesheets\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"pratham31012002"},"content":"            \u003cVBox id\u003d\"importWindowContainerVBox\"\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"pratham31012002"},"content":"                \u003cHBox id\u003d\"pathSelectorContainer\"\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"pratham31012002"},"content":"                    \u003cchildren\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"pratham31012002"},"content":"                        \u003cLabel fx:id\u003d\"chooseFile\" minWidth\u003d\"10.0\"\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"pratham31012002"},"content":"                        \u003c/Label\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"pratham31012002"},"content":"                        \u003cButton fx:id\u003d\"selectButton\" onAction\u003d\"#handleSelect\" text\u003d\"Select\"\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"pratham31012002"},"content":"                        \u003c/Button\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"pratham31012002"},"content":"                        \u003cLabel fx:id\u003d\"chosenFile\" prefWidth\u003d\"250.0\"\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"pratham31012002"},"content":"                            \u003cHBox.margin\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"pratham31012002"},"content":"                                \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":28,"author":{"gitId":"pratham31012002"},"content":"                            \u003c/HBox.margin\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"pratham31012002"},"content":"                        \u003c/Label\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"pratham31012002"},"content":"                    \u003c/children\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":31,"author":{"gitId":"pratham31012002"},"content":"                \u003c/HBox\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":32,"author":{"gitId":"pratham31012002"},"content":"                \u003cHBox id\u003d\"fileNameContainer\"\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":33,"author":{"gitId":"pratham31012002"},"content":"                    \u003cchildren\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":34,"author":{"gitId":"pratham31012002"},"content":"                        \u003cButton fx:id\u003d\"importButton\" onAction\u003d\"#handleOnImport\" text\u003d\"Import\"\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":35,"author":{"gitId":"pratham31012002"},"content":"                            \u003cHBox.margin\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":36,"author":{"gitId":"pratham31012002"},"content":"                                \u003cInsets top\u003d\"10.0\" /\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":37,"author":{"gitId":"pratham31012002"},"content":"                            \u003c/HBox.margin\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":38,"author":{"gitId":"pratham31012002"},"content":"                        \u003c/Button\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":39,"author":{"gitId":"pratham31012002"},"content":"                    \u003c/children\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":40,"author":{"gitId":"pratham31012002"},"content":"                \u003c/HBox\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":41,"author":{"gitId":"pratham31012002"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":42,"author":{"gitId":"pratham31012002"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":43,"author":{"gitId":"pratham31012002"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":44,"author":{"gitId":"pratham31012002"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-10-26"}],"authorContributionMap":{"pratham31012002":44}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2017-11-29"},{"lineNumber":15,"author":{"gitId":"josephaedan"},"content":"  title\u003d\"CLInkedIn\" minWidth\u003d\"1000\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"pratham31012002"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Export\"\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":35,"author":{"gitId":"pratham31012002"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExport\" text\u003d\"Export\" /\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":36,"author":{"gitId":"pratham31012002"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":37,"author":{"gitId":"pratham31012002"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Import\"\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":38,"author":{"gitId":"pratham31012002"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleImport\" text\u003d\"Import\" /\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":39,"author":{"gitId":"pratham31012002"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":48,"author":{"gitId":"josephaedan"},"content":"        \u003cVBox fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"400\" prefWidth\u003d\"400\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":52,"author":{"gitId":"josephaedan"},"content":"          \u003cSplitPane VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":53,"author":{"gitId":"josephaedan"},"content":"            \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" minWidth\u003d\"350\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":54,"author":{"gitId":"josephaedan"},"content":"            \u003cStackPane VBox.vgrow\u003d\"ALWAYS\" fx:id\u003d\"resultDisplayPlaceholder\" minWidth\u003d\"500\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":55,"author":{"gitId":"josephaedan"},"content":"            \u003c/StackPane\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":56,"author":{"gitId":"josephaedan"},"content":"          \u003c/SplitPane\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":59,"author":{"gitId":"josephaedan"},"content":"        \u003cStackPane fx:id\u003d\"personCountDisplayPlaceholder\" VBox.vgrow\u003d\"NEVER\"/\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":60,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"josephaedan":9,"pratham31012002":6,"-":50}},{"path":"src/main/resources/view/PersonCountDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"josephaedan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":2,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":3,"author":{"gitId":"josephaedan"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":4,"author":{"gitId":"josephaedan"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":5,"author":{"gitId":"josephaedan"},"content":"\u003c?import javafx.scene.text.TextFlow?\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":6,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":7,"author":{"gitId":"josephaedan"},"content":"\u003cGridPane styleClass\u003d\"status-bar\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":8,"author":{"gitId":"josephaedan"},"content":"  \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":9,"author":{"gitId":"josephaedan"},"content":"    \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" /\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":10,"author":{"gitId":"josephaedan"},"content":"  \u003c/columnConstraints\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":11,"author":{"gitId":"josephaedan"},"content":"  \u003cTextFlow fx:id\u003d\"personCountDisplay\" styleClass\u003d\"person-count-display\"/\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":12,"author":{"gitId":"josephaedan"},"content":"\u003c/GridPane\u003e","lastModifiedDate":"2022-10-08"}],"authorContributionMap":{"josephaedan":12}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"ytingtan"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":13,"author":{"gitId":"ytingtan"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/18\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"ytingtan"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" spacing\u003d\"3\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"ytingtan"},"content":"        \u003cInsets bottom\u003d\"13\" left\u003d\"15\" right\u003d\"5\" top\u003d\"10\" /\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"ytingtan"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":29,"author":{"gitId":"ytingtan"},"content":"        \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\" /\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":31,"author":{"gitId":"agarwal-anjali"},"content":"      \u003cFlowPane fx:id\u003d\"links\" /\u003e","lastModifiedDate":"2022-10-23"},{"lineNumber":32,"author":{"gitId":"pratham31012002"},"content":"      \u003cGridPane fx:id\u003d\"tagPane\" /\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"ytingtan"},"content":"      \u003cLabel fx:id\u003d\"rating\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$rating\" /\u003e","lastModifiedDate":"2022-10-17"},{"lineNumber":34,"author":{"gitId":"ytingtan"},"content":"      \u003cHBox fx:id\u003d\"ratingBox\" /\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":35,"author":{"gitId":"josephaedan"},"content":"      \u003cLabel fx:id\u003d\"note\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$note\" /\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"josephaedan"},"content":"      \u003cLabel fx:id\u003d\"status\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$status\" /\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"ytingtan"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":39,"author":{"gitId":"ytingtan"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":40,"author":{"gitId":"ytingtan"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"agarwal-anjali":1,"ytingtan":11,"pratham31012002":1,"josephaedan":2,"-":27}},{"path":"src/main/resources/view/ResultDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2016-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"josephaedan"},"content":"\u003cStackPane fx:id\u003d\"placeHolder\" styleClass\u003d\"pane-with-border\" xmlns\u003d\"http://javafx.com/javafx/18\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"josephaedan"},"content":"  \u003cTextArea fx:id\u003d\"resultDisplay\" editable\u003d\"false\" styleClass\u003d\"result-display\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"josephaedan":2,"-":6}},{"path":"src/test/java/seedu/clinkedin/AppParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AppParametersTest {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final ParametersStub parametersStub \u003d new ParametersStub();","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final AppParameters expected \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void parse_validConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        expected.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void parse_nullConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", null);","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void parse_invalidConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"a\\0\");","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        expected.setConfigPath(null);","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static class ParametersStub extends Application.Parameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        private Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getRaw() {","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getUnnamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        public Map\u003cString, String\u003e getNamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Collections.unmodifiableMap(namedParameters);","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"emptygx":1,"-":57}},{"path":"src/test/java/seedu/clinkedin/commons/core/ConfigTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.commons.core;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class ConfigTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void toString_defaultObject_stringReturned() {","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        String defaultConfigAsString \u003d \"Current log level : INFO\\n\"","lastModifiedDate":"2018-12-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"                + \"Preference file Location : preferences.json\";","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertEquals(defaultConfigAsString, new Config().toString());","lastModifiedDate":"2016-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2016-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNotNull(defaultConfig);","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(defaultConfig.equals(defaultConfig));","lastModifiedDate":"2016-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"emptygx":1,"-":26}},{"path":"src/test/java/seedu/clinkedin/commons/core/VersionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.commons.core;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class VersionTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void versionParsing_acceptableVersionString_parsedVersionCorrectly() {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V0.0.0ea\", 0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V3.10.2\", 3, 10, 2, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V100.100.100ea\", 100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void versionParsing_wrongVersionString_throwIllegalArgumentException() {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Version.fromString(\"This is not a version string\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void versionConstructor_correctParameter_valueAsExpected() {","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(19, 10, 20, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(19, version.getMajor());","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(10, version.getMinor());","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(20, version.getPatch());","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(true, version.isEarlyAccess());","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // boundary at 0","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(\"V0.0.0ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // normal values","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        version \u003d new Version(4, 10, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(\"V4.10.5\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // big numbers","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(\"V100.100.100ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_compareToIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2017-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2017-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Tests equality","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        one \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        another \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Tests different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Tests different minor","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 5, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Tests different major","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Tests high major vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Tests high patch vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // Tests same major minor different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Tests early access vs not early access on same version number","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // Tests early access lower version vs not early access higher version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Tests early access higher version vs not early access lower version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_hashCodeIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(100100100, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        version \u003d new Version(10, 10, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(1010010010, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_equalIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        one \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        another \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void verifyVersionParsedCorrectly(String versionString,","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertEquals(new Version(major, minor, patch, isEarlyAccess), Version.fromString(versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"emptygx":2,"-":133}},{"path":"src/test/java/seedu/clinkedin/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.commons.core.index;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        final Index fifthPersonIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(fifthPersonIndex));","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(null));","lastModifiedDate":"2017-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(5.0f));","lastModifiedDate":"2017-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2017-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"emptygx":2,"-":58}},{"path":"src/test/java/seedu/clinkedin/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.commons.util;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertNotNull(AppUtil.getImage(\"/images/address_book_32.png\"));","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"emptygx":2,"-":34}},{"path":"src/test/java/seedu/clinkedin/commons/util/CollectionUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.commons.util;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CollectionUtilTest {","lastModifiedDate":"2016-12-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void requireAllNonNullVarargs() {","lastModifiedDate":"2017-05-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // no arguments","lastModifiedDate":"2017-01-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown();","lastModifiedDate":"2017-05-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // any non-empty argument list","lastModifiedDate":"2017-01-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"\");","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // argument lists with just one null at the beginning","lastModifiedDate":"2017-01-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, \"\", new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // argument lists with nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), null, null, \"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", null, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // argument lists with one null as the last argument","lastModifiedDate":"2017-01-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object[]) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // confirms nulls inside lists in the argument list are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(containingNull, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void requireAllNonNullCollection() {","lastModifiedDate":"2017-05-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // lists containing nulls in the front","lastModifiedDate":"2017-01-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList((Object) null));","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(null, new Object(), \"\"));","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // lists containing nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, \"eggs\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // lists containing nulls at the end","lastModifiedDate":"2017-01-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Collection\u003cObject\u003e) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // empty list","lastModifiedDate":"2017-01-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Collections.emptyList());","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // list with all non-null elements","lastModifiedDate":"2017-01-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object(), \"ham\", Integer.valueOf(1)));","lastModifiedDate":"2018-04-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // confirms nulls inside nested lists are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(containingNull, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void isAnyNonNull() {","lastModifiedDate":"2017-06-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull());","lastModifiedDate":"2017-06-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object[]) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object()));","lastModifiedDate":"2017-06-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object(), null));","lastModifiedDate":"2017-06-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Object...)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * if {@code objects} or any element of {@code objects} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(objects));","lastModifiedDate":"2019-03-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Collection\u003c?\u003e)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * if {@code collection} or any element of {@code collection} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(collection));","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        requireAllNonNull(objects);","lastModifiedDate":"2017-05-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireAllNonNull(collection);","lastModifiedDate":"2017-05-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-22"}],"authorContributionMap":{"emptygx":3,"-":105}},{"path":"src/test/java/seedu/clinkedin/commons/util/ConfigUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.commons.util;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":16,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.commons.core.Config;","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ConfigUtilTest {","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ConfigUtilTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path tempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void read_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e read(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(read(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e read(\"NotJsonFormatConfig.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void read_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"TypicalConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void read_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"EmptyConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new Config(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void read_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"ExtraValuesConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private Config getTypicalConfig() {","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        config.setLogLevel(Level.INFO);","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        config.setUserPrefsFilePath(Paths.get(\"preferences.json\"));","lastModifiedDate":"2018-04-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return config;","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private Optional\u003cConfig\u003e read(String configFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return ConfigUtil.readConfig(configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void save_nullConfig_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void save_nullFile_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(new Config(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void saveConfig_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Config original \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d tempDir.resolve(\"TempConfig.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Config readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        original.setLogLevel(Level.FINE);","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void save(Config config, String configFileInTestDataFolder) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(config, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String configFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return configFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                                  ? TEST_DATA_FOLDER.resolve(configFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                                  : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"emptygx":4,"-":112}},{"path":"src/test/java/seedu/clinkedin/commons/util/FileUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.commons.util;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class FileUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void isValidPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        // valid path","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertTrue(FileUtil.isValidPath(\"valid/file/path\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        // invalid path","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertFalse(FileUtil.isValidPath(\"a\\0\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // null path -\u003e throws NullPointerException","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e FileUtil.isValidPath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"emptygx":2,"-":21}},{"path":"src/test/java/seedu/clinkedin/commons/util/JsonUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.commons.util;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.testutil.SerializableTestClass;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.testutil.TestUtil;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Tests JSON Read and Write","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path SERIALIZATION_FILE \u003d TestUtil.getFilePathInSandboxFolder(\"serialize.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void serializeObjectToJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d new SerializableTestClass();","lastModifiedDate":"2016-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        serializableTestClass.setTestValues();","lastModifiedDate":"2016-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonUtil.serializeObjectToJsonFile(SERIALIZATION_FILE, serializableTestClass);","lastModifiedDate":"2016-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(FileUtil.readFromFile(SERIALIZATION_FILE), SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void deserializeObjectFromJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(SERIALIZATION_FILE, SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d JsonUtil","lastModifiedDate":"2016-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                .deserializeObjectFromJsonFile(SERIALIZATION_FILE, SerializableTestClass.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getName(), SerializableTestClass.getNameTestValue());","lastModifiedDate":"2016-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getListOfLocalDateTimes(), SerializableTestClass.getListTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getMapOfIntegerToString(), SerializableTestClass.getHashMapTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_readJsonStringToObjectInstance_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_writeThenReadObjectToJson_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"emptygx":3,"-":42}},{"path":"src/test/java/seedu/clinkedin/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.commons.util;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"emptygx":2,"-":141}},{"path":"src/test/java/seedu/clinkedin/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.logic;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"ytingtan"},"content":"import static seedu.clinkedin.logic.commands.CommandTestUtil.NOTE_DESC_AMY;","lastModifiedDate":"2022-10-17"},{"lineNumber":10,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"ytingtan"},"content":"import static seedu.clinkedin.logic.commands.CommandTestUtil.RATING_DESC_AMY;","lastModifiedDate":"2022-10-17"},{"lineNumber":12,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.commands.CommandTestUtil.STATUS_DESC_AMY;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.testutil.TypicalPersons.AMY;","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.logic.commands.AddCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":24,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.logic.commands.CommandResult;","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.logic.commands.ListCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":26,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-15"},{"lineNumber":28,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.Model;","lastModifiedDate":"2022-10-15"},{"lineNumber":29,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.ModelManager;","lastModifiedDate":"2022-10-15"},{"lineNumber":30,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-10-15"},{"lineNumber":31,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.UserPrefs;","lastModifiedDate":"2022-10-15"},{"lineNumber":32,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.Person;","lastModifiedDate":"2022-10-15"},{"lineNumber":33,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.storage.JsonAddressBookStorage;","lastModifiedDate":"2022-10-15"},{"lineNumber":34,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.storage.JsonUserPrefsStorage;","lastModifiedDate":"2022-10-15"},{"lineNumber":35,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.storage.StorageManager;","lastModifiedDate":"2022-10-15"},{"lineNumber":36,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.testutil.PersonBuilder;","lastModifiedDate":"2022-10-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"ytingtan"},"content":"                + ADDRESS_DESC_AMY + STATUS_DESC_AMY + NOTE_DESC_AMY + RATING_DESC_AMY;","lastModifiedDate":"2022-10-17"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"ytingtan":3,"emptygx":24,"-":138}},{"path":"src/test/java/seedu/clinkedin/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.logic.commands;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.Model;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.ModelManager;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.UserPrefs;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.Person;","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.testutil.PersonBuilder;","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new AddCommand(validPerson), model,","lastModifiedDate":"2019-01-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validPerson), expectedModel);","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2018-01-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertCommandFailure(new AddCommand(personInList), model, AddCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"emptygx":9,"-":36}},{"path":"src/test/java/seedu/clinkedin/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.logic.commands;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"ytingtan"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-10-28"},{"lineNumber":13,"author":{"gitId":"emptygx"},"content":"import java.util.DoubleSummaryStatistics;","lastModifiedDate":"2022-10-23"},{"lineNumber":14,"author":{"gitId":"emptygx"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-10-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.commons.core.GuiSettings;","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.AddressBook;","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.Model;","lastModifiedDate":"2022-10-15"},{"lineNumber":24,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-15"},{"lineNumber":26,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.Person;","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.tag.TagType;","lastModifiedDate":"2022-10-15"},{"lineNumber":28,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.testutil.PersonBuilder;","lastModifiedDate":"2022-10-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":130,"author":{"gitId":"emptygx"},"content":"        @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":131,"author":{"gitId":"emptygx"},"content":"        public void commitAddressBook() {","lastModifiedDate":"2022-10-24"},{"lineNumber":132,"author":{"gitId":"emptygx"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-24"},{"lineNumber":133,"author":{"gitId":"emptygx"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":134,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":135,"author":{"gitId":"emptygx"},"content":"        @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":136,"author":{"gitId":"emptygx"},"content":"        public void undoAddressBook() {","lastModifiedDate":"2022-10-24"},{"lineNumber":137,"author":{"gitId":"emptygx"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-24"},{"lineNumber":138,"author":{"gitId":"emptygx"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":139,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":140,"author":{"gitId":"emptygx"},"content":"        @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":141,"author":{"gitId":"emptygx"},"content":"        public void redoAddressBook() {","lastModifiedDate":"2022-10-24"},{"lineNumber":142,"author":{"gitId":"emptygx"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-24"},{"lineNumber":143,"author":{"gitId":"emptygx"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":144,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":145,"author":{"gitId":"emptygx"},"content":"        @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":146,"author":{"gitId":"emptygx"},"content":"        public boolean canUndoAddressBook() {","lastModifiedDate":"2022-10-24"},{"lineNumber":147,"author":{"gitId":"emptygx"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-24"},{"lineNumber":148,"author":{"gitId":"emptygx"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":149,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":150,"author":{"gitId":"emptygx"},"content":"        @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":151,"author":{"gitId":"emptygx"},"content":"        public boolean canRedoAddressBook() {","lastModifiedDate":"2022-10-24"},{"lineNumber":152,"author":{"gitId":"emptygx"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-24"},{"lineNumber":153,"author":{"gitId":"emptygx"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":154,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":170,"author":{"gitId":"josephaedan"},"content":"        @Override","lastModifiedDate":"2022-10-07"},{"lineNumber":171,"author":{"gitId":"josephaedan"},"content":"        public int getTotalNumberOfPersons() {","lastModifiedDate":"2022-10-07"},{"lineNumber":172,"author":{"gitId":"josephaedan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-07"},{"lineNumber":173,"author":{"gitId":"josephaedan"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":174,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":184,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":185,"author":{"gitId":"ytingtan"},"content":"        /**","lastModifiedDate":"2022-10-28"},{"lineNumber":186,"author":{"gitId":"ytingtan"},"content":"         * Updates the comparator of the sorted person list to sort by the given","lastModifiedDate":"2022-10-28"},{"lineNumber":187,"author":{"gitId":"ytingtan"},"content":"         * {@code comparator}","lastModifiedDate":"2022-10-28"},{"lineNumber":188,"author":{"gitId":"ytingtan"},"content":"         *","lastModifiedDate":"2022-10-28"},{"lineNumber":189,"author":{"gitId":"ytingtan"},"content":"         * @param comparator comparator to update sorted persons list with.","lastModifiedDate":"2022-10-28"},{"lineNumber":190,"author":{"gitId":"ytingtan"},"content":"         */","lastModifiedDate":"2022-10-28"},{"lineNumber":191,"author":{"gitId":"ytingtan"},"content":"        @Override","lastModifiedDate":"2022-10-28"},{"lineNumber":192,"author":{"gitId":"ytingtan"},"content":"        public void updateSort(Comparator\u003cPerson\u003e comparator) {","lastModifiedDate":"2022-10-28"},{"lineNumber":193,"author":{"gitId":"ytingtan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-28"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":195,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":196,"author":{"gitId":"pratham31012002"},"content":"        @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":197,"author":{"gitId":"pratham31012002"},"content":"        public void deleteTagTypeForAllPerson(TagType toDelete) {","lastModifiedDate":"2022-10-13"},{"lineNumber":198,"author":{"gitId":"pratham31012002"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-13"},{"lineNumber":199,"author":{"gitId":"pratham31012002"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":200,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":201,"author":{"gitId":"pratham31012002"},"content":"        @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":202,"author":{"gitId":"pratham31012002"},"content":"        public void editTagTypeForAllPerson(TagType toEdit, TagType editTo) {","lastModifiedDate":"2022-10-13"},{"lineNumber":203,"author":{"gitId":"pratham31012002"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-13"},{"lineNumber":204,"author":{"gitId":"pratham31012002"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":205,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":206,"author":{"gitId":"josephaedan"},"content":"        @Override","lastModifiedDate":"2022-10-08"},{"lineNumber":207,"author":{"gitId":"josephaedan"},"content":"        public int getFilteredNumberOfPersons() {","lastModifiedDate":"2022-10-08"},{"lineNumber":208,"author":{"gitId":"josephaedan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-08"},{"lineNumber":209,"author":{"gitId":"josephaedan"},"content":"        }","lastModifiedDate":"2022-10-08"},{"lineNumber":210,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":211,"author":{"gitId":"emptygx"},"content":"        @Override","lastModifiedDate":"2022-10-23"},{"lineNumber":212,"author":{"gitId":"emptygx"},"content":"        public DoubleSummaryStatistics getStats() {","lastModifiedDate":"2022-10-28"},{"lineNumber":213,"author":{"gitId":"emptygx"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-28"},{"lineNumber":214,"author":{"gitId":"emptygx"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":215,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":216,"author":{"gitId":"emptygx"},"content":"        @Override","lastModifiedDate":"2022-10-28"},{"lineNumber":217,"author":{"gitId":"emptygx"},"content":"        public HashMap\u003cString, Integer\u003e getRatingCount() {","lastModifiedDate":"2022-10-28"},{"lineNumber":218,"author":{"gitId":"emptygx"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-23"},{"lineNumber":219,"author":{"gitId":"emptygx"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":223,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":224,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":229,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":236,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":241,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":242,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":255,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":260,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":264,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"ytingtan":10,"emptygx":48,"josephaedan":11,"pratham31012002":10,"-":185}},{"path":"src/test/java/seedu/clinkedin/logic/commands/AddNoteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.logic.commands;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"josephaedan"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"josephaedan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.commons.core.index.Index;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.Model;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.ModelManager;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.UserPrefs;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.Note;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.Person;","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"agarwal-anjali"},"content":"import seedu.clinkedin.model.person.exceptions.DuplicateNoteException;","lastModifiedDate":"2022-10-28"},{"lineNumber":15,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"agarwal-anjali"},"content":"public class AddNoteCommandTest {","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"josephaedan"},"content":"    private final Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"josephaedan"},"content":"    private final Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"josephaedan"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"josephaedan"},"content":"    public void constructor_nullNote_throwsNullPointerException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"agarwal-anjali"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddNoteCommand(Index.fromZeroBased(0), null));","lastModifiedDate":"2022-10-28"},{"lineNumber":23,"author":{"gitId":"josephaedan"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"josephaedan"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"josephaedan"},"content":"    public void constructor_nullIndex_throwsNullPointerException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"agarwal-anjali"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddNoteCommand(null, new Note(\"\")));","lastModifiedDate":"2022-10-28"},{"lineNumber":28,"author":{"gitId":"josephaedan"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"josephaedan"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"agarwal-anjali"},"content":"    public void execute_validIndexUnfilteredList_throwsDuplicateNoteException() {","lastModifiedDate":"2022-10-28"},{"lineNumber":32,"author":{"gitId":"ytingtan"},"content":"        Note note \u003d new Note(\"She is strong at Java.\");","lastModifiedDate":"2022-10-17"},{"lineNumber":33,"author":{"gitId":"agarwal-anjali"},"content":"        AddNoteCommand addNoteCommand \u003d new AddNoteCommand(Index.fromOneBased(1), note);","lastModifiedDate":"2022-10-28"},{"lineNumber":34,"author":{"gitId":"agarwal-anjali"},"content":"        assertThrows(DuplicateNoteException.class, () -\u003e addNoteCommand.execute(model));","lastModifiedDate":"2022-10-28"},{"lineNumber":35,"author":{"gitId":"josephaedan"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"josephaedan"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"agarwal-anjali"},"content":"    public void execute_noChangeInValue_throwsDuplicateNoteException() {","lastModifiedDate":"2022-10-28"},{"lineNumber":39,"author":{"gitId":"josephaedan"},"content":"        Person personToEdit \u003d model.getFilteredPersonList().get(0);","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"agarwal-anjali"},"content":"        AddNoteCommand addNoteCommand \u003d new AddNoteCommand(Index.fromOneBased(1), personToEdit.getNote());","lastModifiedDate":"2022-10-28"},{"lineNumber":41,"author":{"gitId":"agarwal-anjali"},"content":"        assertThrows(DuplicateNoteException.class, () -\u003e addNoteCommand.execute(model));","lastModifiedDate":"2022-10-28"},{"lineNumber":42,"author":{"gitId":"josephaedan"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"josephaedan"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"agarwal-anjali":10,"ytingtan":1,"emptygx":8,"josephaedan":24}},{"path":"src/test/java/seedu/clinkedin/logic/commands/AddRateCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ytingtan"},"content":"package seedu.clinkedin.logic.commands;","lastModifiedDate":"2022-10-17"},{"lineNumber":2,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":3,"author":{"gitId":"ytingtan"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-10-17"},{"lineNumber":4,"author":{"gitId":"ytingtan"},"content":"import static seedu.clinkedin.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-10-17"},{"lineNumber":5,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":6,"author":{"gitId":"ytingtan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-17"},{"lineNumber":7,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":8,"author":{"gitId":"ytingtan"},"content":"import seedu.clinkedin.commons.core.index.Index;","lastModifiedDate":"2022-10-17"},{"lineNumber":9,"author":{"gitId":"agarwal-anjali"},"content":"import seedu.clinkedin.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-28"},{"lineNumber":10,"author":{"gitId":"ytingtan"},"content":"import seedu.clinkedin.model.Model;","lastModifiedDate":"2022-10-17"},{"lineNumber":11,"author":{"gitId":"ytingtan"},"content":"import seedu.clinkedin.model.ModelManager;","lastModifiedDate":"2022-10-17"},{"lineNumber":12,"author":{"gitId":"ytingtan"},"content":"import seedu.clinkedin.model.UserPrefs;","lastModifiedDate":"2022-10-17"},{"lineNumber":13,"author":{"gitId":"ytingtan"},"content":"import seedu.clinkedin.model.person.Person;","lastModifiedDate":"2022-10-17"},{"lineNumber":14,"author":{"gitId":"ytingtan"},"content":"import seedu.clinkedin.model.person.Rating;","lastModifiedDate":"2022-10-17"},{"lineNumber":15,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":16,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":17,"author":{"gitId":"ytingtan"},"content":"public class AddRateCommandTest {","lastModifiedDate":"2022-10-28"},{"lineNumber":18,"author":{"gitId":"ytingtan"},"content":"    private final Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-17"},{"lineNumber":19,"author":{"gitId":"ytingtan"},"content":"    private final Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-17"},{"lineNumber":20,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":21,"author":{"gitId":"ytingtan"},"content":"    @Test","lastModifiedDate":"2022-10-17"},{"lineNumber":22,"author":{"gitId":"ytingtan"},"content":"    public void constructor_nullNote_throwsNullPointerException() {","lastModifiedDate":"2022-10-17"},{"lineNumber":23,"author":{"gitId":"ytingtan"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddRateCommand(Index.fromZeroBased(0), null));","lastModifiedDate":"2022-10-28"},{"lineNumber":24,"author":{"gitId":"ytingtan"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":25,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":26,"author":{"gitId":"ytingtan"},"content":"    @Test","lastModifiedDate":"2022-10-17"},{"lineNumber":27,"author":{"gitId":"ytingtan"},"content":"    public void constructor_nullIndex_throwsNullPointerException() {","lastModifiedDate":"2022-10-17"},{"lineNumber":28,"author":{"gitId":"ytingtan"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddRateCommand(null, new Rating(\"5\")));","lastModifiedDate":"2022-10-28"},{"lineNumber":29,"author":{"gitId":"ytingtan"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":30,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":31,"author":{"gitId":"ytingtan"},"content":"    @Test","lastModifiedDate":"2022-10-17"},{"lineNumber":32,"author":{"gitId":"pratham31012002"},"content":"    public void execute_validIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2022-10-28"},{"lineNumber":33,"author":{"gitId":"ytingtan"},"content":"        Rating rating \u003d new Rating(\"6\");","lastModifiedDate":"2022-10-17"},{"lineNumber":34,"author":{"gitId":"ytingtan"},"content":"        AddRateCommand rateCommand \u003d new AddRateCommand(Index.fromOneBased(1), rating);","lastModifiedDate":"2022-10-28"},{"lineNumber":35,"author":{"gitId":"agarwal-anjali"},"content":"        assertThrows(CommandException.class, () -\u003e rateCommand.execute(model));","lastModifiedDate":"2022-10-28"},{"lineNumber":36,"author":{"gitId":"ytingtan"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":37,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":38,"author":{"gitId":"ytingtan"},"content":"    @Test","lastModifiedDate":"2022-10-17"},{"lineNumber":39,"author":{"gitId":"pratham31012002"},"content":"    public void execute_noChangeInValue_throwsCommandException() {","lastModifiedDate":"2022-10-28"},{"lineNumber":40,"author":{"gitId":"ytingtan"},"content":"        Person personToEdit \u003d model.getFilteredPersonList().get(0);","lastModifiedDate":"2022-10-17"},{"lineNumber":41,"author":{"gitId":"ytingtan"},"content":"        AddRateCommand rateCommand \u003d new AddRateCommand(Index.fromOneBased(1), personToEdit.getRating());","lastModifiedDate":"2022-10-28"},{"lineNumber":42,"author":{"gitId":"agarwal-anjali"},"content":"        assertThrows(CommandException.class, () -\u003e rateCommand.execute(model));","lastModifiedDate":"2022-10-28"},{"lineNumber":43,"author":{"gitId":"ytingtan"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":44,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":45,"author":{"gitId":"ytingtan"},"content":"}","lastModifiedDate":"2022-10-17"}],"authorContributionMap":{"agarwal-anjali":3,"ytingtan":40,"pratham31012002":2}},{"path":"src/test/java/seedu/clinkedin/logic/commands/AddTagCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ytingtan"},"content":"package seedu.clinkedin.logic.commands;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"ytingtan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"ytingtan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"ytingtan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"ytingtan"},"content":"import static seedu.clinkedin.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"ytingtan"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"ytingtan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"ytingtan"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-10-28"},{"lineNumber":11,"author":{"gitId":"emptygx"},"content":"import java.util.DoubleSummaryStatistics;","lastModifiedDate":"2022-10-23"},{"lineNumber":12,"author":{"gitId":"emptygx"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-10-28"},{"lineNumber":13,"author":{"gitId":"ytingtan"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"ytingtan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"ytingtan"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"ytingtan"},"content":"import seedu.clinkedin.commons.core.GuiSettings;","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"ytingtan"},"content":"import seedu.clinkedin.commons.core.index.Index;","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"ytingtan"},"content":"import seedu.clinkedin.model.AddressBook;","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"ytingtan"},"content":"import seedu.clinkedin.model.Model;","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"ytingtan"},"content":"import seedu.clinkedin.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"ytingtan"},"content":"import seedu.clinkedin.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"ytingtan"},"content":"import seedu.clinkedin.model.person.Person;","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"ytingtan"},"content":"import seedu.clinkedin.model.person.UniqueTagTypeMap;","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"ytingtan"},"content":"import seedu.clinkedin.model.tag.TagType;","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"ytingtan"},"content":"public class AddTagCommandTest {","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"ytingtan"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"ytingtan"},"content":"    public void constructor_nullIndexNullTag_throwsNullPointerException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":32,"author":{"gitId":"ytingtan"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddTagCommand(null, null));","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"ytingtan"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":35,"author":{"gitId":"ytingtan"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"ytingtan"},"content":"    public void constructor_nullIndex_throwsNullPointerException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"ytingtan"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddTagCommand(null, new UniqueTagTypeMap()));","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"ytingtan"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":39,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"ytingtan"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":41,"author":{"gitId":"ytingtan"},"content":"    public void constructor_nullTag_throwsNullPointerException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":42,"author":{"gitId":"ytingtan"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddTagCommand(Index.fromZeroBased(0), null));","lastModifiedDate":"2022-10-16"},{"lineNumber":43,"author":{"gitId":"ytingtan"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":44,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":45,"author":{"gitId":"ytingtan"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":46,"author":{"gitId":"ytingtan"},"content":"    public void equals() {","lastModifiedDate":"2022-10-16"},{"lineNumber":47,"author":{"gitId":"ytingtan"},"content":"        Index firstIndex \u003d Index.fromZeroBased(0);","lastModifiedDate":"2022-10-16"},{"lineNumber":48,"author":{"gitId":"ytingtan"},"content":"        Index secondIndex \u003d Index.fromZeroBased(1);","lastModifiedDate":"2022-10-16"},{"lineNumber":49,"author":{"gitId":"ytingtan"},"content":"        UniqueTagTypeMap firstTag \u003d new UniqueTagTypeMap();","lastModifiedDate":"2022-10-16"},{"lineNumber":50,"author":{"gitId":"ytingtan"},"content":"        UniqueTagTypeMap secondTag \u003d new UniqueTagTypeMap();","lastModifiedDate":"2022-10-16"},{"lineNumber":51,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":52,"author":{"gitId":"ytingtan"},"content":"        AddTagCommand addFirstTagCommand \u003d new AddTagCommand(firstIndex, firstTag);","lastModifiedDate":"2022-10-16"},{"lineNumber":53,"author":{"gitId":"ytingtan"},"content":"        AddTagCommand addSecondTagCommand \u003d new AddTagCommand(secondIndex, secondTag);","lastModifiedDate":"2022-10-16"},{"lineNumber":54,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":55,"author":{"gitId":"ytingtan"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-16"},{"lineNumber":56,"author":{"gitId":"ytingtan"},"content":"        assertTrue(addFirstTagCommand.equals(addFirstTagCommand));","lastModifiedDate":"2022-10-16"},{"lineNumber":57,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":58,"author":{"gitId":"ytingtan"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-16"},{"lineNumber":59,"author":{"gitId":"ytingtan"},"content":"        AddTagCommand addFirstTagCommandCopy \u003d new AddTagCommand(firstIndex, firstTag);","lastModifiedDate":"2022-10-16"},{"lineNumber":60,"author":{"gitId":"ytingtan"},"content":"        assertTrue(addFirstTagCommand.equals(addFirstTagCommandCopy));","lastModifiedDate":"2022-10-16"},{"lineNumber":61,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":62,"author":{"gitId":"ytingtan"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-16"},{"lineNumber":63,"author":{"gitId":"ytingtan"},"content":"        assertFalse(addFirstTagCommand.equals(1));","lastModifiedDate":"2022-10-16"},{"lineNumber":64,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":65,"author":{"gitId":"ytingtan"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-16"},{"lineNumber":66,"author":{"gitId":"ytingtan"},"content":"        assertFalse(addFirstTagCommand.equals(null));","lastModifiedDate":"2022-10-16"},{"lineNumber":67,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":68,"author":{"gitId":"ytingtan"},"content":"        // different add tag -\u003e returns false","lastModifiedDate":"2022-10-16"},{"lineNumber":69,"author":{"gitId":"ytingtan"},"content":"        assertFalse(addFirstTagCommand.equals(addSecondTagCommand));","lastModifiedDate":"2022-10-16"},{"lineNumber":70,"author":{"gitId":"ytingtan"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":71,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":72,"author":{"gitId":"ytingtan"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":73,"author":{"gitId":"ytingtan"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2022-10-16"},{"lineNumber":74,"author":{"gitId":"ytingtan"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":75,"author":{"gitId":"ytingtan"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2022-10-16"},{"lineNumber":76,"author":{"gitId":"ytingtan"},"content":"        @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":77,"author":{"gitId":"ytingtan"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2022-10-16"},{"lineNumber":78,"author":{"gitId":"ytingtan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-16"},{"lineNumber":79,"author":{"gitId":"ytingtan"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":80,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":81,"author":{"gitId":"ytingtan"},"content":"        @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":82,"author":{"gitId":"ytingtan"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2022-10-16"},{"lineNumber":83,"author":{"gitId":"ytingtan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-16"},{"lineNumber":84,"author":{"gitId":"ytingtan"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":85,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":86,"author":{"gitId":"ytingtan"},"content":"        @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":87,"author":{"gitId":"ytingtan"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2022-10-16"},{"lineNumber":88,"author":{"gitId":"ytingtan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-16"},{"lineNumber":89,"author":{"gitId":"ytingtan"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":90,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":91,"author":{"gitId":"ytingtan"},"content":"        @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":92,"author":{"gitId":"ytingtan"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2022-10-16"},{"lineNumber":93,"author":{"gitId":"ytingtan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-16"},{"lineNumber":94,"author":{"gitId":"ytingtan"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":95,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":96,"author":{"gitId":"ytingtan"},"content":"        @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":97,"author":{"gitId":"ytingtan"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2022-10-16"},{"lineNumber":98,"author":{"gitId":"ytingtan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-16"},{"lineNumber":99,"author":{"gitId":"ytingtan"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":100,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":101,"author":{"gitId":"ytingtan"},"content":"        @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":102,"author":{"gitId":"ytingtan"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2022-10-16"},{"lineNumber":103,"author":{"gitId":"ytingtan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-16"},{"lineNumber":104,"author":{"gitId":"ytingtan"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":105,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":106,"author":{"gitId":"ytingtan"},"content":"        @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":107,"author":{"gitId":"ytingtan"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2022-10-16"},{"lineNumber":108,"author":{"gitId":"ytingtan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-16"},{"lineNumber":109,"author":{"gitId":"ytingtan"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":110,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":111,"author":{"gitId":"ytingtan"},"content":"        @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":112,"author":{"gitId":"ytingtan"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2022-10-16"},{"lineNumber":113,"author":{"gitId":"ytingtan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-16"},{"lineNumber":114,"author":{"gitId":"ytingtan"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":115,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":116,"author":{"gitId":"ytingtan"},"content":"        @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":117,"author":{"gitId":"ytingtan"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2022-10-16"},{"lineNumber":118,"author":{"gitId":"ytingtan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-16"},{"lineNumber":119,"author":{"gitId":"ytingtan"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":120,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":121,"author":{"gitId":"emptygx"},"content":"        @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":122,"author":{"gitId":"emptygx"},"content":"        public void commitAddressBook() {","lastModifiedDate":"2022-10-24"},{"lineNumber":123,"author":{"gitId":"emptygx"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-24"},{"lineNumber":124,"author":{"gitId":"emptygx"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":125,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":126,"author":{"gitId":"emptygx"},"content":"        @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":127,"author":{"gitId":"emptygx"},"content":"        public void undoAddressBook() {","lastModifiedDate":"2022-10-24"},{"lineNumber":128,"author":{"gitId":"emptygx"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-24"},{"lineNumber":129,"author":{"gitId":"emptygx"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":130,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":131,"author":{"gitId":"emptygx"},"content":"        @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":132,"author":{"gitId":"emptygx"},"content":"        public void redoAddressBook() {","lastModifiedDate":"2022-10-24"},{"lineNumber":133,"author":{"gitId":"emptygx"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-24"},{"lineNumber":134,"author":{"gitId":"emptygx"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":135,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":136,"author":{"gitId":"emptygx"},"content":"        @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":137,"author":{"gitId":"emptygx"},"content":"        public boolean canUndoAddressBook() {","lastModifiedDate":"2022-10-24"},{"lineNumber":138,"author":{"gitId":"emptygx"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-24"},{"lineNumber":139,"author":{"gitId":"emptygx"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":140,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":141,"author":{"gitId":"emptygx"},"content":"        @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":142,"author":{"gitId":"emptygx"},"content":"        public boolean canRedoAddressBook() {","lastModifiedDate":"2022-10-24"},{"lineNumber":143,"author":{"gitId":"emptygx"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-24"},{"lineNumber":144,"author":{"gitId":"emptygx"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":145,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":146,"author":{"gitId":"ytingtan"},"content":"        @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":147,"author":{"gitId":"ytingtan"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2022-10-16"},{"lineNumber":148,"author":{"gitId":"ytingtan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-16"},{"lineNumber":149,"author":{"gitId":"ytingtan"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":150,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":151,"author":{"gitId":"ytingtan"},"content":"        @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":152,"author":{"gitId":"ytingtan"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2022-10-16"},{"lineNumber":153,"author":{"gitId":"ytingtan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-16"},{"lineNumber":154,"author":{"gitId":"ytingtan"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":155,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":156,"author":{"gitId":"ytingtan"},"content":"        @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":157,"author":{"gitId":"ytingtan"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2022-10-16"},{"lineNumber":158,"author":{"gitId":"ytingtan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-16"},{"lineNumber":159,"author":{"gitId":"ytingtan"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":160,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":161,"author":{"gitId":"ytingtan"},"content":"        @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":162,"author":{"gitId":"ytingtan"},"content":"        public int getTotalNumberOfPersons() {","lastModifiedDate":"2022-10-16"},{"lineNumber":163,"author":{"gitId":"ytingtan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-16"},{"lineNumber":164,"author":{"gitId":"ytingtan"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":165,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":166,"author":{"gitId":"ytingtan"},"content":"        @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":167,"author":{"gitId":"ytingtan"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2022-10-16"},{"lineNumber":168,"author":{"gitId":"ytingtan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-16"},{"lineNumber":169,"author":{"gitId":"ytingtan"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":170,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":171,"author":{"gitId":"ytingtan"},"content":"        @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":172,"author":{"gitId":"ytingtan"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2022-10-16"},{"lineNumber":173,"author":{"gitId":"ytingtan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-16"},{"lineNumber":174,"author":{"gitId":"ytingtan"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":175,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":176,"author":{"gitId":"ytingtan"},"content":"        /**","lastModifiedDate":"2022-10-28"},{"lineNumber":177,"author":{"gitId":"ytingtan"},"content":"         * Updates the comparator of the sorted person list to sort by the given","lastModifiedDate":"2022-10-28"},{"lineNumber":178,"author":{"gitId":"ytingtan"},"content":"         * {@code comparator}","lastModifiedDate":"2022-10-28"},{"lineNumber":179,"author":{"gitId":"ytingtan"},"content":"         *","lastModifiedDate":"2022-10-28"},{"lineNumber":180,"author":{"gitId":"ytingtan"},"content":"         * @param comparator comparator to update sorted persons list with.","lastModifiedDate":"2022-10-28"},{"lineNumber":181,"author":{"gitId":"ytingtan"},"content":"         */","lastModifiedDate":"2022-10-28"},{"lineNumber":182,"author":{"gitId":"ytingtan"},"content":"        @Override","lastModifiedDate":"2022-10-28"},{"lineNumber":183,"author":{"gitId":"ytingtan"},"content":"        public void updateSort(Comparator\u003cPerson\u003e comparator) {","lastModifiedDate":"2022-10-28"},{"lineNumber":184,"author":{"gitId":"ytingtan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-28"},{"lineNumber":185,"author":{"gitId":"ytingtan"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":186,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":187,"author":{"gitId":"ytingtan"},"content":"        @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":188,"author":{"gitId":"ytingtan"},"content":"        public void deleteTagTypeForAllPerson(TagType toDelete) {","lastModifiedDate":"2022-10-16"},{"lineNumber":189,"author":{"gitId":"ytingtan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-16"},{"lineNumber":190,"author":{"gitId":"ytingtan"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":191,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":192,"author":{"gitId":"ytingtan"},"content":"        @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":193,"author":{"gitId":"ytingtan"},"content":"        public void editTagTypeForAllPerson(TagType toEdit, TagType editTo) {","lastModifiedDate":"2022-10-16"},{"lineNumber":194,"author":{"gitId":"ytingtan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-16"},{"lineNumber":195,"author":{"gitId":"ytingtan"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":196,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":197,"author":{"gitId":"ytingtan"},"content":"        @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":198,"author":{"gitId":"ytingtan"},"content":"        public int getFilteredNumberOfPersons() {","lastModifiedDate":"2022-10-16"},{"lineNumber":199,"author":{"gitId":"ytingtan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-16"},{"lineNumber":200,"author":{"gitId":"ytingtan"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":201,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":202,"author":{"gitId":"emptygx"},"content":"        @Override","lastModifiedDate":"2022-10-23"},{"lineNumber":203,"author":{"gitId":"emptygx"},"content":"        public DoubleSummaryStatistics getStats() {","lastModifiedDate":"2022-10-28"},{"lineNumber":204,"author":{"gitId":"emptygx"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-28"},{"lineNumber":205,"author":{"gitId":"emptygx"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":206,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":207,"author":{"gitId":"emptygx"},"content":"        @Override","lastModifiedDate":"2022-10-28"},{"lineNumber":208,"author":{"gitId":"emptygx"},"content":"        public HashMap\u003cString, Integer\u003e getRatingCount() {","lastModifiedDate":"2022-10-28"},{"lineNumber":209,"author":{"gitId":"emptygx"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-23"},{"lineNumber":210,"author":{"gitId":"emptygx"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":211,"author":{"gitId":"ytingtan"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":212,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":213,"author":{"gitId":"ytingtan"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":214,"author":{"gitId":"ytingtan"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2022-10-16"},{"lineNumber":215,"author":{"gitId":"ytingtan"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":216,"author":{"gitId":"ytingtan"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2022-10-16"},{"lineNumber":217,"author":{"gitId":"ytingtan"},"content":"        private final Person person;","lastModifiedDate":"2022-10-16"},{"lineNumber":218,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":219,"author":{"gitId":"ytingtan"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2022-10-16"},{"lineNumber":220,"author":{"gitId":"ytingtan"},"content":"            requireNonNull(person);","lastModifiedDate":"2022-10-16"},{"lineNumber":221,"author":{"gitId":"ytingtan"},"content":"            this.person \u003d person;","lastModifiedDate":"2022-10-16"},{"lineNumber":222,"author":{"gitId":"ytingtan"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":223,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":224,"author":{"gitId":"ytingtan"},"content":"        @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":225,"author":{"gitId":"ytingtan"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2022-10-16"},{"lineNumber":226,"author":{"gitId":"ytingtan"},"content":"            requireNonNull(person);","lastModifiedDate":"2022-10-16"},{"lineNumber":227,"author":{"gitId":"ytingtan"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2022-10-16"},{"lineNumber":228,"author":{"gitId":"ytingtan"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":229,"author":{"gitId":"ytingtan"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":230,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":231,"author":{"gitId":"ytingtan"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":232,"author":{"gitId":"ytingtan"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2022-10-16"},{"lineNumber":233,"author":{"gitId":"ytingtan"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":234,"author":{"gitId":"ytingtan"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2022-10-16"},{"lineNumber":235,"author":{"gitId":"ytingtan"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-16"},{"lineNumber":236,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":237,"author":{"gitId":"ytingtan"},"content":"        @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":238,"author":{"gitId":"ytingtan"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2022-10-16"},{"lineNumber":239,"author":{"gitId":"ytingtan"},"content":"            requireNonNull(person);","lastModifiedDate":"2022-10-16"},{"lineNumber":240,"author":{"gitId":"ytingtan"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2022-10-16"},{"lineNumber":241,"author":{"gitId":"ytingtan"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":242,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":243,"author":{"gitId":"ytingtan"},"content":"        @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":244,"author":{"gitId":"ytingtan"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2022-10-16"},{"lineNumber":245,"author":{"gitId":"ytingtan"},"content":"            requireNonNull(person);","lastModifiedDate":"2022-10-16"},{"lineNumber":246,"author":{"gitId":"ytingtan"},"content":"            personsAdded.add(person);","lastModifiedDate":"2022-10-16"},{"lineNumber":247,"author":{"gitId":"ytingtan"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":248,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":249,"author":{"gitId":"ytingtan"},"content":"        @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":250,"author":{"gitId":"ytingtan"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2022-10-16"},{"lineNumber":251,"author":{"gitId":"ytingtan"},"content":"            return new AddressBook();","lastModifiedDate":"2022-10-16"},{"lineNumber":252,"author":{"gitId":"ytingtan"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":253,"author":{"gitId":"ytingtan"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":254,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":255,"author":{"gitId":"ytingtan"},"content":"}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"ytingtan":218,"emptygx":37}},{"path":"src/test/java/seedu/clinkedin/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.logic.commands;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.AddressBook;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.Model;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.ModelManager;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.UserPrefs;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"emptygx":7,"-":25}},{"path":"src/test/java/seedu/clinkedin/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.logic.commands;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true)));","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"emptygx":1,"-":53}},{"path":"src/test/java/seedu/clinkedin/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.logic.commands;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.parser.CliSyntax.PREFIX_NOTE;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"ytingtan"},"content":"import static seedu.clinkedin.logic.parser.CliSyntax.PREFIX_RATING;","lastModifiedDate":"2022-10-17"},{"lineNumber":11,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.parser.CliSyntax.PREFIX_SKILLTAG;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.commons.core.index.Index;","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.AddressBook;","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.Model;","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.VersionedAddressBook;","lastModifiedDate":"2022-10-24"},{"lineNumber":24,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.Person;","lastModifiedDate":"2022-10-15"},{"lineNumber":26,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"ytingtan"},"content":"    public static final String VALID_STATUS_AMY \u003d \"Application Received\";","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"ytingtan"},"content":"    public static final String VALID_STATUS_BOB \u003d \"Rejected\";","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"josephaedan"},"content":"    public static final String VALID_NOTE_AMY \u003d \"She is strong at Python.\";","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"ytingtan"},"content":"    public static final String VALID_NOTE_BOB \u003d \"He is not strong at Python.\";","lastModifiedDate":"2022-10-16"},{"lineNumber":47,"author":{"gitId":"ytingtan"},"content":"    public static final String VALID_RATING_AMY \u003d \"6\";","lastModifiedDate":"2022-10-17"},{"lineNumber":48,"author":{"gitId":"ytingtan"},"content":"    public static final String VALID_RATING_BOB \u003d \"4\";","lastModifiedDate":"2022-10-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"pratham31012002"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_SKILLTAG + VALID_TAG_FRIEND;","lastModifiedDate":"2022-10-13"},{"lineNumber":59,"author":{"gitId":"pratham31012002"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_SKILLTAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-13"},{"lineNumber":60,"author":{"gitId":"ytingtan"},"content":"    public static final String STATUS_DESC_AMY \u003d \" \" + PREFIX_STATUS + VALID_STATUS_AMY;","lastModifiedDate":"2022-10-09"},{"lineNumber":61,"author":{"gitId":"ytingtan"},"content":"    public static final String STATUS_DESC_BOB \u003d \" \" + PREFIX_STATUS + VALID_STATUS_BOB;","lastModifiedDate":"2022-10-09"},{"lineNumber":62,"author":{"gitId":"josephaedan"},"content":"    public static final String NOTE_DESC_AMY \u003d \" \" + PREFIX_NOTE + VALID_NOTE_AMY;","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"ytingtan"},"content":"    public static final String NOTE_DESC_BOB \u003d \" \" + PREFIX_NOTE + VALID_NOTE_BOB;","lastModifiedDate":"2022-10-16"},{"lineNumber":64,"author":{"gitId":"ytingtan"},"content":"    public static final String RATING_DESC_AMY \u003d \" \" + PREFIX_RATING + VALID_RATING_AMY;","lastModifiedDate":"2022-10-17"},{"lineNumber":65,"author":{"gitId":"ytingtan"},"content":"    public static final String RATING_DESC_BOB \u003d \" \" + PREFIX_RATING + VALID_RATING_BOB;","lastModifiedDate":"2022-10-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"pratham31012002"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_SKILLTAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2022-10-13"},{"lineNumber":72,"author":{"gitId":"ytingtan"},"content":"    public static final String INVALID_STATUS_DESC \u003d \" \" + PREFIX_STATUS + \"\"; // \u0027@\u0027 not allowed in status","lastModifiedDate":"2022-10-16"},{"lineNumber":73,"author":{"gitId":"ytingtan"},"content":"    public static final String INVALID_RATING_DESC \u003d \" \" + PREFIX_RATING + \"4.9\";","lastModifiedDate":"2022-10-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":84,"author":{"gitId":"ytingtan"},"content":"                .withTags(VALID_TAG_FRIEND).withStatus(VALID_STATUS_AMY).withRating(VALID_RATING_AMY).build();","lastModifiedDate":"2022-10-17"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":87,"author":{"gitId":"ytingtan"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).withStatus(VALID_STATUS_BOB).withRating(VALID_RATING_BOB)","lastModifiedDate":"2022-10-17"},{"lineNumber":88,"author":{"gitId":"ytingtan"},"content":"                .build();","lastModifiedDate":"2022-10-17"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2022-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":126,"author":{"gitId":"emptygx"},"content":"        AddressBook expectedAddressBook \u003d new VersionedAddressBook(actualModel.getAddressBook());","lastModifiedDate":"2022-10-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2022-10-16"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"ytingtan":16,"emptygx":18,"josephaedan":2,"pratham31012002":3,"-":107}},{"path":"src/test/java/seedu/clinkedin/logic/commands/CreateTagTypeCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ytingtan"},"content":"package seedu.clinkedin.logic.commands;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"ytingtan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-17"},{"lineNumber":4,"author":{"gitId":"ytingtan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-17"},{"lineNumber":5,"author":{"gitId":"ytingtan"},"content":"import static seedu.clinkedin.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-17"},{"lineNumber":6,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":7,"author":{"gitId":"ytingtan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-17"},{"lineNumber":8,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":9,"author":{"gitId":"ytingtan"},"content":"import seedu.clinkedin.logic.parser.Prefix;","lastModifiedDate":"2022-10-17"},{"lineNumber":10,"author":{"gitId":"ytingtan"},"content":"import seedu.clinkedin.model.tag.TagType;","lastModifiedDate":"2022-10-17"},{"lineNumber":11,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":12,"author":{"gitId":"ytingtan"},"content":"public class CreateTagTypeCommandTest {","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":14,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":15,"author":{"gitId":"ytingtan"},"content":"    @Test","lastModifiedDate":"2022-10-17"},{"lineNumber":16,"author":{"gitId":"ytingtan"},"content":"    public void constructor_nullPrefixNullTagType_throwsNullPointerException() {","lastModifiedDate":"2022-10-17"},{"lineNumber":17,"author":{"gitId":"ytingtan"},"content":"        assertThrows(NullPointerException.class, () -\u003e new CreateTagTypeCommand(null, null));","lastModifiedDate":"2022-10-17"},{"lineNumber":18,"author":{"gitId":"ytingtan"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":19,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":20,"author":{"gitId":"ytingtan"},"content":"    @Test","lastModifiedDate":"2022-10-17"},{"lineNumber":21,"author":{"gitId":"ytingtan"},"content":"    public void constructor_nullPrefix_throwsNullPointerException() {","lastModifiedDate":"2022-10-17"},{"lineNumber":22,"author":{"gitId":"ytingtan"},"content":"        assertThrows(NullPointerException.class, () -\u003e new CreateTagTypeCommand(new TagType(\"abc\", null),","lastModifiedDate":"2022-10-17"},{"lineNumber":23,"author":{"gitId":"ytingtan"},"content":"                null));","lastModifiedDate":"2022-10-17"},{"lineNumber":24,"author":{"gitId":"ytingtan"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":25,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":26,"author":{"gitId":"ytingtan"},"content":"    @Test","lastModifiedDate":"2022-10-17"},{"lineNumber":27,"author":{"gitId":"ytingtan"},"content":"    public void constructor_nullTagType_throwsNullPointerException() {","lastModifiedDate":"2022-10-17"},{"lineNumber":28,"author":{"gitId":"ytingtan"},"content":"        assertThrows(NullPointerException.class, () -\u003e new CreateTagTypeCommand(null, new Prefix(\"\")));","lastModifiedDate":"2022-10-17"},{"lineNumber":29,"author":{"gitId":"ytingtan"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":30,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":31,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":32,"author":{"gitId":"ytingtan"},"content":"    @Test","lastModifiedDate":"2022-10-17"},{"lineNumber":33,"author":{"gitId":"ytingtan"},"content":"    public void constructor_tagTypeIsEmptyString_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-17"},{"lineNumber":34,"author":{"gitId":"ytingtan"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new CreateTagTypeCommand(new TagType(\"\",","lastModifiedDate":"2022-10-17"},{"lineNumber":35,"author":{"gitId":"ytingtan"},"content":"                new Prefix(\"\")), null));","lastModifiedDate":"2022-10-17"},{"lineNumber":36,"author":{"gitId":"ytingtan"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":38,"author":{"gitId":"ytingtan"},"content":"    @Test","lastModifiedDate":"2022-10-17"},{"lineNumber":39,"author":{"gitId":"ytingtan"},"content":"    public void equals() {","lastModifiedDate":"2022-10-17"},{"lineNumber":40,"author":{"gitId":"pratham31012002"},"content":"        Prefix firstPrefix \u003d new Prefix(\"abc/\");","lastModifiedDate":"2022-10-28"},{"lineNumber":41,"author":{"gitId":"pratham31012002"},"content":"        Prefix secondPrefix \u003d new Prefix(\"def/\");","lastModifiedDate":"2022-10-28"},{"lineNumber":42,"author":{"gitId":"ytingtan"},"content":"        TagType firstTagType \u003d new TagType(\"abc\", firstPrefix);","lastModifiedDate":"2022-10-17"},{"lineNumber":43,"author":{"gitId":"ytingtan"},"content":"        TagType secondTagType \u003d new TagType(\"def\", secondPrefix);","lastModifiedDate":"2022-10-17"},{"lineNumber":44,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":45,"author":{"gitId":"ytingtan"},"content":"        CreateTagTypeCommand createFirstTagTypeCommand \u003d new CreateTagTypeCommand(firstTagType, firstPrefix);","lastModifiedDate":"2022-10-17"},{"lineNumber":46,"author":{"gitId":"ytingtan"},"content":"        CreateTagTypeCommand createSecondTagTypeCommand \u003d new CreateTagTypeCommand(secondTagType, secondPrefix);","lastModifiedDate":"2022-10-17"},{"lineNumber":47,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":48,"author":{"gitId":"ytingtan"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-17"},{"lineNumber":49,"author":{"gitId":"ytingtan"},"content":"        assertTrue(createFirstTagTypeCommand.equals(createFirstTagTypeCommand));","lastModifiedDate":"2022-10-17"},{"lineNumber":50,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":51,"author":{"gitId":"ytingtan"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-17"},{"lineNumber":52,"author":{"gitId":"ytingtan"},"content":"        CreateTagTypeCommand createFirstTagTypeCommandCopy \u003d new CreateTagTypeCommand(firstTagType, firstPrefix);","lastModifiedDate":"2022-10-17"},{"lineNumber":53,"author":{"gitId":"ytingtan"},"content":"        assertTrue(createFirstTagTypeCommand.equals(createFirstTagTypeCommandCopy));","lastModifiedDate":"2022-10-17"},{"lineNumber":54,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":55,"author":{"gitId":"ytingtan"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-17"},{"lineNumber":56,"author":{"gitId":"ytingtan"},"content":"        assertFalse(createFirstTagTypeCommand.equals(1));","lastModifiedDate":"2022-10-17"},{"lineNumber":57,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":58,"author":{"gitId":"ytingtan"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-17"},{"lineNumber":59,"author":{"gitId":"ytingtan"},"content":"        assertFalse(createFirstTagTypeCommand.equals(null));","lastModifiedDate":"2022-10-17"},{"lineNumber":60,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":61,"author":{"gitId":"ytingtan"},"content":"        // different add tag -\u003e returns false","lastModifiedDate":"2022-10-17"},{"lineNumber":62,"author":{"gitId":"ytingtan"},"content":"        assertFalse(createFirstTagTypeCommand.equals(createSecondTagTypeCommand));","lastModifiedDate":"2022-10-17"},{"lineNumber":63,"author":{"gitId":"ytingtan"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":64,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":65,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":66,"author":{"gitId":"ytingtan"},"content":"}","lastModifiedDate":"2022-10-17"},{"lineNumber":67,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"}],"authorContributionMap":{"ytingtan":65,"pratham31012002":2}},{"path":"src/test/java/seedu/clinkedin/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.logic.commands;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.commons.core.Messages;","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.commons.core.index.Index;","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.Model;","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.ModelManager;","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.UserPrefs;","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.Person;","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"emptygx"},"content":"        // ensures that outOfBoundIndex is still in bounds of clinkedin book list","lastModifiedDate":"2022-10-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"emptygx":14,"-":95}},{"path":"src/test/java/seedu/clinkedin/logic/commands/DeleteRateCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.logic.commands;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"josephaedan"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"josephaedan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.commons.core.index.Index;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.Model;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.ModelManager;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.UserPrefs;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.Person;","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"ytingtan"},"content":"import seedu.clinkedin.model.person.Rating;","lastModifiedDate":"2022-10-17"},{"lineNumber":15,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.testutil.PersonBuilder;","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":18,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":19,"author":{"gitId":"ytingtan"},"content":"public class DeleteRateCommandTest {","lastModifiedDate":"2022-10-28"},{"lineNumber":20,"author":{"gitId":"josephaedan"},"content":"    private final Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"josephaedan"},"content":"    private final Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"josephaedan"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"josephaedan"},"content":"    public void constructor_nullIndex_throwsNullPointerException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"ytingtan"},"content":"        assertThrows(NullPointerException.class, () -\u003e new DeleteRateCommand(null));","lastModifiedDate":"2022-10-28"},{"lineNumber":26,"author":{"gitId":"josephaedan"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"josephaedan"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"josephaedan"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"ytingtan"},"content":"        Rating rating \u003d new Rating(\"6\");","lastModifiedDate":"2022-10-17"},{"lineNumber":31,"author":{"gitId":"ytingtan"},"content":"        DeleteRateCommand rateCommand \u003d new DeleteRateCommand(Index.fromOneBased(1));","lastModifiedDate":"2022-10-28"},{"lineNumber":32,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"josephaedan"},"content":"        Person personToEdit \u003d model.getFilteredPersonList().get(0);","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"ytingtan"},"content":"        Person editedPerson \u003d new PersonBuilder(personToEdit).withRating(\"0\").build();","lastModifiedDate":"2022-10-28"},{"lineNumber":35,"author":{"gitId":"ytingtan"},"content":"        String expectedMessage \u003d String.format(DeleteRateCommand.MESSAGE_DELETE_RATE_SUCCESS, editedPerson);","lastModifiedDate":"2022-10-28"},{"lineNumber":36,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"josephaedan"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"ytingtan"},"content":"        assertCommandSuccess(rateCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-17"},{"lineNumber":39,"author":{"gitId":"josephaedan"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"josephaedan"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"josephaedan"},"content":"    public void execute_noChangeInValue_success() {","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"josephaedan"},"content":"        Person personToEdit \u003d model.getFilteredPersonList().get(0);","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"ytingtan"},"content":"        DeleteRateCommand rateCommand \u003d new DeleteRateCommand(Index.fromOneBased(1));","lastModifiedDate":"2022-10-28"},{"lineNumber":45,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"ytingtan"},"content":"        Person editedPerson \u003d new PersonBuilder(personToEdit).withRating(\"0\").build();","lastModifiedDate":"2022-10-28"},{"lineNumber":47,"author":{"gitId":"ytingtan"},"content":"        String expectedMessage \u003d String.format(DeleteRateCommand.MESSAGE_DELETE_RATE_SUCCESS, editedPerson);","lastModifiedDate":"2022-10-28"},{"lineNumber":48,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"josephaedan"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"ytingtan"},"content":"        assertCommandSuccess(rateCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-17"},{"lineNumber":51,"author":{"gitId":"josephaedan"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"josephaedan"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"ytingtan":14,"emptygx":9,"josephaedan":30}},{"path":"src/test/java/seedu/clinkedin/logic/commands/DeleteTagCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ytingtan"},"content":"package seedu.clinkedin.logic.commands;","lastModifiedDate":"2022-10-17"},{"lineNumber":2,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":3,"author":{"gitId":"ytingtan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-17"},{"lineNumber":4,"author":{"gitId":"ytingtan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-17"},{"lineNumber":5,"author":{"gitId":"ytingtan"},"content":"import static seedu.clinkedin.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-17"},{"lineNumber":6,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":7,"author":{"gitId":"ytingtan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-17"},{"lineNumber":8,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":9,"author":{"gitId":"ytingtan"},"content":"import seedu.clinkedin.commons.core.index.Index;","lastModifiedDate":"2022-10-17"},{"lineNumber":10,"author":{"gitId":"ytingtan"},"content":"import seedu.clinkedin.model.person.UniqueTagTypeMap;","lastModifiedDate":"2022-10-17"},{"lineNumber":11,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":12,"author":{"gitId":"ytingtan"},"content":"public class DeleteTagCommandTest {","lastModifiedDate":"2022-10-17"},{"lineNumber":13,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":14,"author":{"gitId":"ytingtan"},"content":"    @Test","lastModifiedDate":"2022-10-17"},{"lineNumber":15,"author":{"gitId":"ytingtan"},"content":"    public void constructor_nullIndexNullTag_throwsNullPointerException() {","lastModifiedDate":"2022-10-17"},{"lineNumber":16,"author":{"gitId":"ytingtan"},"content":"        assertThrows(NullPointerException.class, () -\u003e new DeleteTagCommand(null, null));","lastModifiedDate":"2022-10-17"},{"lineNumber":17,"author":{"gitId":"ytingtan"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":18,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":19,"author":{"gitId":"ytingtan"},"content":"    @Test","lastModifiedDate":"2022-10-17"},{"lineNumber":20,"author":{"gitId":"ytingtan"},"content":"    public void constructor_nullIndex_throwsNullPointerException() {","lastModifiedDate":"2022-10-17"},{"lineNumber":21,"author":{"gitId":"ytingtan"},"content":"        assertThrows(NullPointerException.class, () -\u003e new DeleteTagCommand(null, new UniqueTagTypeMap()));","lastModifiedDate":"2022-10-17"},{"lineNumber":22,"author":{"gitId":"ytingtan"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":23,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":24,"author":{"gitId":"ytingtan"},"content":"    @Test","lastModifiedDate":"2022-10-17"},{"lineNumber":25,"author":{"gitId":"ytingtan"},"content":"    public void constructor_nullTag_throwsNullPointerException() {","lastModifiedDate":"2022-10-17"},{"lineNumber":26,"author":{"gitId":"ytingtan"},"content":"        assertThrows(NullPointerException.class, () -\u003e new DeleteTagCommand(Index.fromZeroBased(0), null));","lastModifiedDate":"2022-10-17"},{"lineNumber":27,"author":{"gitId":"ytingtan"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":28,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":29,"author":{"gitId":"ytingtan"},"content":"    @Test","lastModifiedDate":"2022-10-17"},{"lineNumber":30,"author":{"gitId":"ytingtan"},"content":"    public void equals() {","lastModifiedDate":"2022-10-17"},{"lineNumber":31,"author":{"gitId":"ytingtan"},"content":"        Index firstIndex \u003d Index.fromZeroBased(0);","lastModifiedDate":"2022-10-17"},{"lineNumber":32,"author":{"gitId":"ytingtan"},"content":"        Index secondIndex \u003d Index.fromZeroBased(1);","lastModifiedDate":"2022-10-17"},{"lineNumber":33,"author":{"gitId":"ytingtan"},"content":"        UniqueTagTypeMap firstTag \u003d new UniqueTagTypeMap();","lastModifiedDate":"2022-10-17"},{"lineNumber":34,"author":{"gitId":"ytingtan"},"content":"        UniqueTagTypeMap secondTag \u003d new UniqueTagTypeMap();","lastModifiedDate":"2022-10-17"},{"lineNumber":35,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":36,"author":{"gitId":"ytingtan"},"content":"        DeleteTagCommand deleteFirstTagCommand \u003d new DeleteTagCommand(firstIndex, firstTag);","lastModifiedDate":"2022-10-17"},{"lineNumber":37,"author":{"gitId":"ytingtan"},"content":"        DeleteTagCommand deleteSecondTagCommand \u003d new DeleteTagCommand(secondIndex, secondTag);","lastModifiedDate":"2022-10-17"},{"lineNumber":38,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":39,"author":{"gitId":"ytingtan"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-17"},{"lineNumber":40,"author":{"gitId":"ytingtan"},"content":"        assertTrue(deleteFirstTagCommand.equals(deleteFirstTagCommand));","lastModifiedDate":"2022-10-17"},{"lineNumber":41,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":42,"author":{"gitId":"ytingtan"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-17"},{"lineNumber":43,"author":{"gitId":"ytingtan"},"content":"        DeleteTagCommand deleteFirstTagCommandCopy \u003d new DeleteTagCommand(firstIndex, firstTag);","lastModifiedDate":"2022-10-17"},{"lineNumber":44,"author":{"gitId":"ytingtan"},"content":"        assertTrue(deleteFirstTagCommand.equals(deleteFirstTagCommandCopy));","lastModifiedDate":"2022-10-17"},{"lineNumber":45,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":46,"author":{"gitId":"ytingtan"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-17"},{"lineNumber":47,"author":{"gitId":"ytingtan"},"content":"        assertFalse(deleteFirstTagCommand.equals(1));","lastModifiedDate":"2022-10-17"},{"lineNumber":48,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":49,"author":{"gitId":"ytingtan"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-17"},{"lineNumber":50,"author":{"gitId":"ytingtan"},"content":"        assertFalse(deleteFirstTagCommand.equals(null));","lastModifiedDate":"2022-10-17"},{"lineNumber":51,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":52,"author":{"gitId":"ytingtan"},"content":"        // different add tag -\u003e returns false","lastModifiedDate":"2022-10-17"},{"lineNumber":53,"author":{"gitId":"ytingtan"},"content":"        assertFalse(deleteFirstTagCommand.equals(deleteSecondTagCommand));","lastModifiedDate":"2022-10-17"},{"lineNumber":54,"author":{"gitId":"ytingtan"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":55,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":56,"author":{"gitId":"ytingtan"},"content":"}","lastModifiedDate":"2022-10-17"}],"authorContributionMap":{"ytingtan":56}},{"path":"src/test/java/seedu/clinkedin/logic/commands/DeleteTagTypeCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ytingtan"},"content":"package seedu.clinkedin.logic.commands;","lastModifiedDate":"2022-10-17"},{"lineNumber":2,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":3,"author":{"gitId":"ytingtan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-17"},{"lineNumber":4,"author":{"gitId":"ytingtan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-17"},{"lineNumber":5,"author":{"gitId":"ytingtan"},"content":"import static seedu.clinkedin.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-17"},{"lineNumber":6,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":7,"author":{"gitId":"ytingtan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-17"},{"lineNumber":8,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":9,"author":{"gitId":"ytingtan"},"content":"import seedu.clinkedin.logic.parser.Prefix;","lastModifiedDate":"2022-10-17"},{"lineNumber":10,"author":{"gitId":"ytingtan"},"content":"import seedu.clinkedin.model.tag.TagType;","lastModifiedDate":"2022-10-17"},{"lineNumber":11,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":12,"author":{"gitId":"ytingtan"},"content":"public class DeleteTagTypeCommandTest {","lastModifiedDate":"2022-10-17"},{"lineNumber":13,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":14,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":15,"author":{"gitId":"ytingtan"},"content":"    @Test","lastModifiedDate":"2022-10-17"},{"lineNumber":16,"author":{"gitId":"ytingtan"},"content":"    public void constructor_nullPrefixNullTagType_throwsNullPointerException() {","lastModifiedDate":"2022-10-17"},{"lineNumber":17,"author":{"gitId":"ytingtan"},"content":"        assertThrows(NullPointerException.class, () -\u003e new DeleteTagTypeCommand(null));","lastModifiedDate":"2022-10-17"},{"lineNumber":18,"author":{"gitId":"ytingtan"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":19,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":20,"author":{"gitId":"ytingtan"},"content":"    @Test","lastModifiedDate":"2022-10-17"},{"lineNumber":21,"author":{"gitId":"ytingtan"},"content":"    public void equals() {","lastModifiedDate":"2022-10-17"},{"lineNumber":22,"author":{"gitId":"pratham31012002"},"content":"        Prefix firstPrefix \u003d new Prefix(\"abc/\");","lastModifiedDate":"2022-10-28"},{"lineNumber":23,"author":{"gitId":"pratham31012002"},"content":"        Prefix secondPrefix \u003d new Prefix(\"def/\");","lastModifiedDate":"2022-10-28"},{"lineNumber":24,"author":{"gitId":"ytingtan"},"content":"        TagType firstTagType \u003d new TagType(\"abc\", firstPrefix);","lastModifiedDate":"2022-10-17"},{"lineNumber":25,"author":{"gitId":"ytingtan"},"content":"        TagType secondTagType \u003d new TagType(\"def\", secondPrefix);","lastModifiedDate":"2022-10-17"},{"lineNumber":26,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":27,"author":{"gitId":"ytingtan"},"content":"        DeleteTagTypeCommand deleteFirstTagTypeCommand \u003d new DeleteTagTypeCommand(firstTagType);","lastModifiedDate":"2022-10-17"},{"lineNumber":28,"author":{"gitId":"ytingtan"},"content":"        DeleteTagTypeCommand deleteSecondTagTypeCommand \u003d new DeleteTagTypeCommand(secondTagType);","lastModifiedDate":"2022-10-17"},{"lineNumber":29,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":30,"author":{"gitId":"ytingtan"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-17"},{"lineNumber":31,"author":{"gitId":"ytingtan"},"content":"        assertTrue(deleteFirstTagTypeCommand.equals(deleteFirstTagTypeCommand));","lastModifiedDate":"2022-10-17"},{"lineNumber":32,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":33,"author":{"gitId":"ytingtan"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-17"},{"lineNumber":34,"author":{"gitId":"ytingtan"},"content":"        DeleteTagTypeCommand deleteFirstTagTypeCommandCopy \u003d new DeleteTagTypeCommand(firstTagType);","lastModifiedDate":"2022-10-17"},{"lineNumber":35,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":36,"author":{"gitId":"ytingtan"},"content":"        assertTrue(deleteFirstTagTypeCommand.equals(deleteFirstTagTypeCommandCopy));","lastModifiedDate":"2022-10-17"},{"lineNumber":37,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":38,"author":{"gitId":"ytingtan"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-17"},{"lineNumber":39,"author":{"gitId":"ytingtan"},"content":"        assertFalse(deleteFirstTagTypeCommand.equals(1));","lastModifiedDate":"2022-10-17"},{"lineNumber":40,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":41,"author":{"gitId":"ytingtan"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-17"},{"lineNumber":42,"author":{"gitId":"ytingtan"},"content":"        assertFalse(deleteFirstTagTypeCommand.equals(null));","lastModifiedDate":"2022-10-17"},{"lineNumber":43,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":44,"author":{"gitId":"ytingtan"},"content":"        // different add tag -\u003e returns false","lastModifiedDate":"2022-10-17"},{"lineNumber":45,"author":{"gitId":"ytingtan"},"content":"        assertFalse(deleteFirstTagTypeCommand.equals(deleteSecondTagTypeCommand));","lastModifiedDate":"2022-10-17"},{"lineNumber":46,"author":{"gitId":"ytingtan"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":47,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":48,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":49,"author":{"gitId":"ytingtan"},"content":"}","lastModifiedDate":"2022-10-17"}],"authorContributionMap":{"ytingtan":47,"pratham31012002":2}},{"path":"src/test/java/seedu/clinkedin/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.logic.commands;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.commons.core.Messages;","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.commons.core.index.Index;","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"ytingtan"},"content":"import seedu.clinkedin.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-17"},{"lineNumber":23,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.AddressBook;","lastModifiedDate":"2022-10-15"},{"lineNumber":24,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.Model;","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.ModelManager;","lastModifiedDate":"2022-10-15"},{"lineNumber":26,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.UserPrefs;","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.Person;","lastModifiedDate":"2022-10-15"},{"lineNumber":28,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2022-10-15"},{"lineNumber":29,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.testutil.PersonBuilder;","lastModifiedDate":"2022-10-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"ytingtan"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() throws CommandException {","lastModifiedDate":"2022-10-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"pratham31012002"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_THIRD_PERSON, descriptor);","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"ytingtan"},"content":"        Model actualModel \u003d model;","lastModifiedDate":"2022-10-17"},{"lineNumber":47,"author":{"gitId":"pratham31012002"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(2), editedPerson);","lastModifiedDate":"2022-10-13"},{"lineNumber":48,"author":{"gitId":"ytingtan"},"content":"        CommandResult expectedRes \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2022-10-17"},{"lineNumber":49,"author":{"gitId":"ytingtan"},"content":"        CommandResult actualRes \u003d editCommand.execute(model);","lastModifiedDate":"2022-10-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"pratham31012002"},"content":"        // Tags to be added.","lastModifiedDate":"2022-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"pratham31012002"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2022-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":63,"author":{"gitId":"pratham31012002"},"content":"                .withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2022-10-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2022-10-17"},{"lineNumber":117,"author":{"gitId":"pratham31012002"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_THIRD_PERSON.getZeroBased());","lastModifiedDate":"2022-10-13"},{"lineNumber":118,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"emptygx"},"content":"     * but smaller than size of clinkedin book","lastModifiedDate":"2022-10-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2022-10-17"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"ytingtan":5,"emptygx":23,"pratham31012002":7,"-":141}},{"path":"src/test/java/seedu/clinkedin/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.logic.commands;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"ytingtan"},"content":"import static seedu.clinkedin.logic.commands.CommandTestUtil.VALID_NOTE_BOB;","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"ytingtan"},"content":"import static seedu.clinkedin.logic.commands.CommandTestUtil.VALID_STATUS_BOB;","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2022-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"ytingtan"},"content":"        // different status -\u003e returns false","lastModifiedDate":"2022-10-16"},{"lineNumber":56,"author":{"gitId":"ytingtan"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withStatus(VALID_STATUS_BOB).build();","lastModifiedDate":"2022-10-16"},{"lineNumber":57,"author":{"gitId":"ytingtan"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2022-10-16"},{"lineNumber":58,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":59,"author":{"gitId":"ytingtan"},"content":"        // different note -\u003e returns false","lastModifiedDate":"2022-10-16"},{"lineNumber":60,"author":{"gitId":"ytingtan"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withNote(VALID_NOTE_BOB).build();","lastModifiedDate":"2022-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2022-10-16"},{"lineNumber":62,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":64,"author":{"gitId":"pratham31012002"},"content":"        // To be implemented for tags","lastModifiedDate":"2022-10-13"},{"lineNumber":65,"author":{"gitId":"pratham31012002"},"content":"        //        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-10-13"},{"lineNumber":66,"author":{"gitId":"pratham31012002"},"content":"        //        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2022-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"ytingtan":9,"emptygx":9,"pratham31012002":3,"-":47}},{"path":"src/test/java/seedu/clinkedin/logic/commands/EditTagTypeCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ytingtan"},"content":"package seedu.clinkedin.logic.commands;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"ytingtan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-17"},{"lineNumber":4,"author":{"gitId":"ytingtan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-17"},{"lineNumber":5,"author":{"gitId":"ytingtan"},"content":"import static seedu.clinkedin.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-17"},{"lineNumber":6,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":7,"author":{"gitId":"ytingtan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"ytingtan"},"content":"import seedu.clinkedin.logic.parser.Prefix;","lastModifiedDate":"2022-10-17"},{"lineNumber":10,"author":{"gitId":"ytingtan"},"content":"import seedu.clinkedin.model.tag.TagType;","lastModifiedDate":"2022-10-17"},{"lineNumber":11,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"ytingtan"},"content":"public class EditTagTypeCommandTest {","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"ytingtan"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"ytingtan"},"content":"    public void constructor_nullPrefixNullTagType_throwsNullPointerException() {","lastModifiedDate":"2022-10-17"},{"lineNumber":17,"author":{"gitId":"ytingtan"},"content":"        assertThrows(NullPointerException.class, () -\u003e new EditTagTypeCommand(null, null,","lastModifiedDate":"2022-10-17"},{"lineNumber":18,"author":{"gitId":"ytingtan"},"content":"                null, null));","lastModifiedDate":"2022-10-17"},{"lineNumber":19,"author":{"gitId":"ytingtan"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":20,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":21,"author":{"gitId":"ytingtan"},"content":"    @Test","lastModifiedDate":"2022-10-17"},{"lineNumber":22,"author":{"gitId":"ytingtan"},"content":"    public void constructor_nullPrefix_throwsNullPointerException() {","lastModifiedDate":"2022-10-17"},{"lineNumber":23,"author":{"gitId":"ytingtan"},"content":"        assertThrows(NullPointerException.class, () -\u003e new EditTagTypeCommand(null, new TagType(\"abc\",","lastModifiedDate":"2022-10-17"},{"lineNumber":24,"author":{"gitId":"ytingtan"},"content":"                new Prefix(\"\")), null, new TagType(\"def\", new Prefix(\"\"))));","lastModifiedDate":"2022-10-17"},{"lineNumber":25,"author":{"gitId":"ytingtan"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":26,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":27,"author":{"gitId":"ytingtan"},"content":"    @Test","lastModifiedDate":"2022-10-17"},{"lineNumber":28,"author":{"gitId":"ytingtan"},"content":"    public void constructor_nullTagType_throwsNullPointerException() {","lastModifiedDate":"2022-10-17"},{"lineNumber":29,"author":{"gitId":"ytingtan"},"content":"        assertThrows(NullPointerException.class, () -\u003e new EditTagTypeCommand(new Prefix(\"\"), null,","lastModifiedDate":"2022-10-17"},{"lineNumber":30,"author":{"gitId":"ytingtan"},"content":"                new Prefix(\"\"), null));","lastModifiedDate":"2022-10-17"},{"lineNumber":31,"author":{"gitId":"ytingtan"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":32,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":33,"author":{"gitId":"ytingtan"},"content":"    @Test","lastModifiedDate":"2022-10-17"},{"lineNumber":34,"author":{"gitId":"ytingtan"},"content":"    public void constructor_nullToEdit_throwsNullPointerException() {","lastModifiedDate":"2022-10-17"},{"lineNumber":35,"author":{"gitId":"ytingtan"},"content":"        assertThrows(NullPointerException.class, () -\u003e new EditTagTypeCommand(null, null,","lastModifiedDate":"2022-10-17"},{"lineNumber":36,"author":{"gitId":"ytingtan"},"content":"                new Prefix(\"\"), new TagType(\"abc\", new Prefix(\"\"))));","lastModifiedDate":"2022-10-17"},{"lineNumber":37,"author":{"gitId":"ytingtan"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":38,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":39,"author":{"gitId":"ytingtan"},"content":"    @Test","lastModifiedDate":"2022-10-17"},{"lineNumber":40,"author":{"gitId":"ytingtan"},"content":"    public void constructor_nullEditTo_throwsNullPointerException() {","lastModifiedDate":"2022-10-17"},{"lineNumber":41,"author":{"gitId":"ytingtan"},"content":"        assertThrows(NullPointerException.class, () -\u003e new EditTagTypeCommand(new Prefix(\"\"),","lastModifiedDate":"2022-10-17"},{"lineNumber":42,"author":{"gitId":"ytingtan"},"content":"                new TagType(\"abc\", new Prefix(\"\")), null, null));","lastModifiedDate":"2022-10-17"},{"lineNumber":43,"author":{"gitId":"ytingtan"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":44,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":45,"author":{"gitId":"ytingtan"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":46,"author":{"gitId":"ytingtan"},"content":"    public void constructor_tagTypeIsEmptyString_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-17"},{"lineNumber":47,"author":{"gitId":"ytingtan"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new EditTagTypeCommand(new Prefix(\"\"), new TagType(\"\",","lastModifiedDate":"2022-10-17"},{"lineNumber":48,"author":{"gitId":"ytingtan"},"content":"                new Prefix(\"\")), null, null));","lastModifiedDate":"2022-10-17"},{"lineNumber":49,"author":{"gitId":"ytingtan"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":50,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":51,"author":{"gitId":"ytingtan"},"content":"    @Test","lastModifiedDate":"2022-10-17"},{"lineNumber":52,"author":{"gitId":"ytingtan"},"content":"    public void equals() {","lastModifiedDate":"2022-10-17"},{"lineNumber":53,"author":{"gitId":"pratham31012002"},"content":"        Prefix firstPrefix \u003d new Prefix(\"abc/\");","lastModifiedDate":"2022-10-28"},{"lineNumber":54,"author":{"gitId":"pratham31012002"},"content":"        Prefix secondPrefix \u003d new Prefix(\"def/\");","lastModifiedDate":"2022-10-28"},{"lineNumber":55,"author":{"gitId":"ytingtan"},"content":"        TagType firstTagType \u003d new TagType(\"abc\", firstPrefix);","lastModifiedDate":"2022-10-17"},{"lineNumber":56,"author":{"gitId":"ytingtan"},"content":"        TagType secondTagType \u003d new TagType(\"def\", secondPrefix);","lastModifiedDate":"2022-10-17"},{"lineNumber":57,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":58,"author":{"gitId":"ytingtan"},"content":"        EditTagTypeCommand editFirstTagCommand \u003d new EditTagTypeCommand(firstPrefix, firstTagType, firstPrefix,","lastModifiedDate":"2022-10-17"},{"lineNumber":59,"author":{"gitId":"ytingtan"},"content":"                firstTagType);","lastModifiedDate":"2022-10-17"},{"lineNumber":60,"author":{"gitId":"ytingtan"},"content":"        EditTagTypeCommand editSecondTagCommand \u003d new EditTagTypeCommand(secondPrefix, secondTagType, secondPrefix,","lastModifiedDate":"2022-10-17"},{"lineNumber":61,"author":{"gitId":"ytingtan"},"content":"                secondTagType);","lastModifiedDate":"2022-10-17"},{"lineNumber":62,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":63,"author":{"gitId":"ytingtan"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-17"},{"lineNumber":64,"author":{"gitId":"ytingtan"},"content":"        assertTrue(editFirstTagCommand.equals(editFirstTagCommand));","lastModifiedDate":"2022-10-17"},{"lineNumber":65,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":66,"author":{"gitId":"ytingtan"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-17"},{"lineNumber":67,"author":{"gitId":"ytingtan"},"content":"        EditTagTypeCommand editFirstTagCommandCopy \u003d new EditTagTypeCommand(firstPrefix, firstTagType, firstPrefix,","lastModifiedDate":"2022-10-17"},{"lineNumber":68,"author":{"gitId":"ytingtan"},"content":"                firstTagType);","lastModifiedDate":"2022-10-17"},{"lineNumber":69,"author":{"gitId":"ytingtan"},"content":"        assertTrue(editFirstTagCommand.equals(editFirstTagCommandCopy));","lastModifiedDate":"2022-10-17"},{"lineNumber":70,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":71,"author":{"gitId":"ytingtan"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-17"},{"lineNumber":72,"author":{"gitId":"ytingtan"},"content":"        assertFalse(editFirstTagCommand.equals(1));","lastModifiedDate":"2022-10-17"},{"lineNumber":73,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":74,"author":{"gitId":"ytingtan"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-17"},{"lineNumber":75,"author":{"gitId":"ytingtan"},"content":"        assertFalse(editFirstTagCommand.equals(null));","lastModifiedDate":"2022-10-17"},{"lineNumber":76,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":77,"author":{"gitId":"ytingtan"},"content":"        // different add tag -\u003e returns false","lastModifiedDate":"2022-10-17"},{"lineNumber":78,"author":{"gitId":"ytingtan"},"content":"        assertFalse(editFirstTagCommand.equals(editSecondTagCommand));","lastModifiedDate":"2022-10-17"},{"lineNumber":79,"author":{"gitId":"ytingtan"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":80,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":81,"author":{"gitId":"ytingtan"},"content":"}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"ytingtan":79,"pratham31012002":2}},{"path":"src/test/java/seedu/clinkedin/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.logic.commands;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.Model;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.ModelManager;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"emptygx":5,"-":15}},{"path":"src/test/java/seedu/clinkedin/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.logic.commands;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.testutil.TypicalPersons.CARL;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.Model;","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.ModelManager;","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.UserPrefs;","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.DetailsContainKeywordsPredicate;","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"emptygx"},"content":"        DetailsContainKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"emptygx"},"content":"                new DetailsContainKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"emptygx"},"content":"        DetailsContainKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"emptygx"},"content":"                new DetailsContainKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"emptygx"},"content":"        DetailsContainKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2022-10-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"emptygx"},"content":"        DetailsContainKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2022-10-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"emptygx"},"content":"     * Parses {@code userInput} into a {@code DetailsContainKeywordsPredicate}.","lastModifiedDate":"2022-10-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"emptygx"},"content":"    private DetailsContainKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2022-10-06"},{"lineNumber":81,"author":{"gitId":"emptygx"},"content":"        return new DetailsContainKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2022-10-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"emptygx":20,"-":63}},{"path":"src/test/java/seedu/clinkedin/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.logic.commands;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":7,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.Model;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.ModelManager;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"josephaedan"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(\"Opened help window.\", true, false);","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":19,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"josephaedan"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"josephaedan"},"content":"    public void execute_helpWithValidInput_success() {","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"josephaedan"},"content":"        ListCommand testListCommand \u003d new ListCommand();","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"josephaedan"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(testListCommand.MESSAGE_USAGE, false, false);","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"josephaedan"},"content":"        assertCommandSuccess(new HelpCommand(testListCommand.MESSAGE_USAGE), model, expectedCommandResult,","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"josephaedan"},"content":"                expectedModel);","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"josephaedan"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"emptygx":4,"josephaedan":9,"-":14}},{"path":"src/test/java/seedu/clinkedin/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.logic.commands;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.Model;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.ModelManager;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.UserPrefs;","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"emptygx":8,"-":31}},{"path":"src/test/java/seedu/clinkedin/logic/commands/RedoCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.logic.commands;","lastModifiedDate":"2022-10-24"},{"lineNumber":2,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":3,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.commons.core.Messages.MESSAGE_CANNOT_REDO;","lastModifiedDate":"2022-10-24"},{"lineNumber":4,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-24"},{"lineNumber":5,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-24"},{"lineNumber":6,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-10-24"},{"lineNumber":7,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":8,"author":{"gitId":"emptygx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-24"},{"lineNumber":9,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":10,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-24"},{"lineNumber":11,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.AddressBook;","lastModifiedDate":"2022-10-24"},{"lineNumber":12,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.Model;","lastModifiedDate":"2022-10-24"},{"lineNumber":13,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.ModelManager;","lastModifiedDate":"2022-10-24"},{"lineNumber":14,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.UserPrefs;","lastModifiedDate":"2022-10-24"},{"lineNumber":15,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.Person;","lastModifiedDate":"2022-10-24"},{"lineNumber":16,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.testutil.PersonBuilder;","lastModifiedDate":"2022-10-24"},{"lineNumber":17,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":18,"author":{"gitId":"emptygx"},"content":"class RedoCommandTest {","lastModifiedDate":"2022-10-24"},{"lineNumber":19,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":20,"author":{"gitId":"emptygx"},"content":"    private static final String NAME_STUB \u003d \"nameStub\";","lastModifiedDate":"2022-10-24"},{"lineNumber":21,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":22,"author":{"gitId":"emptygx"},"content":"    private final Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-24"},{"lineNumber":23,"author":{"gitId":"emptygx"},"content":"    private final Person personStub \u003d new PersonBuilder().build();","lastModifiedDate":"2022-10-24"},{"lineNumber":24,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":25,"author":{"gitId":"emptygx"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":26,"author":{"gitId":"emptygx"},"content":"    void execute_initialState_failure() {","lastModifiedDate":"2022-10-24"},{"lineNumber":27,"author":{"gitId":"emptygx"},"content":"        RedoCommand redoCommand \u003d new RedoCommand();","lastModifiedDate":"2022-10-24"},{"lineNumber":28,"author":{"gitId":"emptygx"},"content":"        assertCommandFailure(redoCommand, model, MESSAGE_CANNOT_REDO);","lastModifiedDate":"2022-10-24"},{"lineNumber":29,"author":{"gitId":"emptygx"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":30,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":31,"author":{"gitId":"emptygx"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":32,"author":{"gitId":"emptygx"},"content":"    void execute_redoAddCommand_success() {","lastModifiedDate":"2022-10-24"},{"lineNumber":33,"author":{"gitId":"emptygx"},"content":"        model.addPerson(personStub);","lastModifiedDate":"2022-10-24"},{"lineNumber":34,"author":{"gitId":"emptygx"},"content":"        model.undoAddressBook();","lastModifiedDate":"2022-10-24"},{"lineNumber":35,"author":{"gitId":"emptygx"},"content":"        RedoCommand redoCommand \u003d new RedoCommand();","lastModifiedDate":"2022-10-24"},{"lineNumber":36,"author":{"gitId":"emptygx"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-24"},{"lineNumber":37,"author":{"gitId":"emptygx"},"content":"        expectedModel.addPerson(personStub);","lastModifiedDate":"2022-10-24"},{"lineNumber":38,"author":{"gitId":"emptygx"},"content":"        assertCommandSuccess(redoCommand, model, RedoCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-10-24"},{"lineNumber":39,"author":{"gitId":"emptygx"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":40,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":41,"author":{"gitId":"emptygx"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":42,"author":{"gitId":"emptygx"},"content":"    void execute_noNewState_failure() {","lastModifiedDate":"2022-10-24"},{"lineNumber":43,"author":{"gitId":"emptygx"},"content":"        model.addPerson(personStub);","lastModifiedDate":"2022-10-24"},{"lineNumber":44,"author":{"gitId":"emptygx"},"content":"        RedoCommand redoCommand \u003d new RedoCommand();","lastModifiedDate":"2022-10-24"},{"lineNumber":45,"author":{"gitId":"emptygx"},"content":"        assertCommandFailure(redoCommand, model, MESSAGE_CANNOT_REDO);","lastModifiedDate":"2022-10-24"},{"lineNumber":46,"author":{"gitId":"emptygx"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":47,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":48,"author":{"gitId":"emptygx"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":49,"author":{"gitId":"emptygx"},"content":"    void execute_redoDeleteCommand_success() {","lastModifiedDate":"2022-10-24"},{"lineNumber":50,"author":{"gitId":"emptygx"},"content":"        model.addPerson(personStub);","lastModifiedDate":"2022-10-24"},{"lineNumber":51,"author":{"gitId":"emptygx"},"content":"        model.deletePerson(personStub);","lastModifiedDate":"2022-10-24"},{"lineNumber":52,"author":{"gitId":"emptygx"},"content":"        model.undoAddressBook();","lastModifiedDate":"2022-10-24"},{"lineNumber":53,"author":{"gitId":"emptygx"},"content":"        RedoCommand redoCommand \u003d new RedoCommand();","lastModifiedDate":"2022-10-24"},{"lineNumber":54,"author":{"gitId":"emptygx"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-24"},{"lineNumber":55,"author":{"gitId":"emptygx"},"content":"        assertCommandSuccess(redoCommand, model, RedoCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-10-24"},{"lineNumber":56,"author":{"gitId":"emptygx"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":57,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":58,"author":{"gitId":"emptygx"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":59,"author":{"gitId":"emptygx"},"content":"    void execute_redoEditCommand_success() {","lastModifiedDate":"2022-10-24"},{"lineNumber":60,"author":{"gitId":"emptygx"},"content":"        model.addPerson(personStub);","lastModifiedDate":"2022-10-24"},{"lineNumber":61,"author":{"gitId":"emptygx"},"content":"        Person editedPersonStub \u003d new PersonBuilder(personStub).withName(NAME_STUB).build();","lastModifiedDate":"2022-10-24"},{"lineNumber":62,"author":{"gitId":"emptygx"},"content":"        model.setPerson(personStub, editedPersonStub);","lastModifiedDate":"2022-10-24"},{"lineNumber":63,"author":{"gitId":"emptygx"},"content":"        model.undoAddressBook();","lastModifiedDate":"2022-10-24"},{"lineNumber":64,"author":{"gitId":"emptygx"},"content":"        RedoCommand redoCommand \u003d new RedoCommand();","lastModifiedDate":"2022-10-24"},{"lineNumber":65,"author":{"gitId":"emptygx"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-24"},{"lineNumber":66,"author":{"gitId":"emptygx"},"content":"        expectedModel.addPerson(personStub);","lastModifiedDate":"2022-10-24"},{"lineNumber":67,"author":{"gitId":"emptygx"},"content":"        expectedModel.setPerson(personStub, editedPersonStub);","lastModifiedDate":"2022-10-24"},{"lineNumber":68,"author":{"gitId":"emptygx"},"content":"        assertCommandSuccess(redoCommand, model, RedoCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-10-24"},{"lineNumber":69,"author":{"gitId":"emptygx"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":70,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":71,"author":{"gitId":"emptygx"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":72,"author":{"gitId":"emptygx"},"content":"    void execute_redoClearCommand_success() {","lastModifiedDate":"2022-10-24"},{"lineNumber":73,"author":{"gitId":"emptygx"},"content":"        model.addPerson(personStub);","lastModifiedDate":"2022-10-24"},{"lineNumber":74,"author":{"gitId":"emptygx"},"content":"        model.setAddressBook(new AddressBook());","lastModifiedDate":"2022-10-24"},{"lineNumber":75,"author":{"gitId":"emptygx"},"content":"        model.undoAddressBook();","lastModifiedDate":"2022-10-24"},{"lineNumber":76,"author":{"gitId":"emptygx"},"content":"        RedoCommand redoCommand \u003d new RedoCommand();","lastModifiedDate":"2022-10-24"},{"lineNumber":77,"author":{"gitId":"emptygx"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2022-10-24"},{"lineNumber":78,"author":{"gitId":"emptygx"},"content":"        assertCommandSuccess(redoCommand, model, RedoCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-10-24"},{"lineNumber":79,"author":{"gitId":"emptygx"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":80,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":81,"author":{"gitId":"emptygx"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":82,"author":{"gitId":"emptygx"},"content":"    void execute_redundantStatesPurged_failure() {","lastModifiedDate":"2022-10-24"},{"lineNumber":83,"author":{"gitId":"emptygx"},"content":"        model.addPerson(personStub);","lastModifiedDate":"2022-10-24"},{"lineNumber":84,"author":{"gitId":"emptygx"},"content":"        model.deletePerson(personStub);","lastModifiedDate":"2022-10-24"},{"lineNumber":85,"author":{"gitId":"emptygx"},"content":"        model.undoAddressBook();","lastModifiedDate":"2022-10-24"},{"lineNumber":86,"author":{"gitId":"emptygx"},"content":"        model.undoAddressBook();","lastModifiedDate":"2022-10-24"},{"lineNumber":87,"author":{"gitId":"emptygx"},"content":"        model.addPerson(personStub);","lastModifiedDate":"2022-10-24"},{"lineNumber":88,"author":{"gitId":"emptygx"},"content":"        RedoCommand redoCommand \u003d new RedoCommand();","lastModifiedDate":"2022-10-24"},{"lineNumber":89,"author":{"gitId":"emptygx"},"content":"        assertCommandFailure(redoCommand, model, MESSAGE_CANNOT_REDO);","lastModifiedDate":"2022-10-24"},{"lineNumber":90,"author":{"gitId":"emptygx"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":91,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":92,"author":{"gitId":"emptygx"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":93,"author":{"gitId":"emptygx"},"content":"    void execute_redoMultipleCommands_success() {","lastModifiedDate":"2022-10-24"},{"lineNumber":94,"author":{"gitId":"emptygx"},"content":"        model.addPerson(personStub);","lastModifiedDate":"2022-10-24"},{"lineNumber":95,"author":{"gitId":"emptygx"},"content":"        model.deletePerson(personStub);","lastModifiedDate":"2022-10-24"},{"lineNumber":96,"author":{"gitId":"emptygx"},"content":"        model.undoAddressBook();","lastModifiedDate":"2022-10-24"},{"lineNumber":97,"author":{"gitId":"emptygx"},"content":"        model.undoAddressBook();","lastModifiedDate":"2022-10-24"},{"lineNumber":98,"author":{"gitId":"emptygx"},"content":"        RedoCommand redoCommand \u003d new RedoCommand();","lastModifiedDate":"2022-10-24"},{"lineNumber":99,"author":{"gitId":"emptygx"},"content":"        try {","lastModifiedDate":"2022-10-24"},{"lineNumber":100,"author":{"gitId":"emptygx"},"content":"            redoCommand.execute(model);","lastModifiedDate":"2022-10-24"},{"lineNumber":101,"author":{"gitId":"emptygx"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2022-10-24"},{"lineNumber":102,"author":{"gitId":"emptygx"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", e);","lastModifiedDate":"2022-10-24"},{"lineNumber":103,"author":{"gitId":"emptygx"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":104,"author":{"gitId":"emptygx"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-24"},{"lineNumber":105,"author":{"gitId":"emptygx"},"content":"        assertCommandSuccess(redoCommand, model, RedoCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-10-24"},{"lineNumber":106,"author":{"gitId":"emptygx"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":107,"author":{"gitId":"emptygx"},"content":"}","lastModifiedDate":"2022-10-24"}],"authorContributionMap":{"emptygx":107}},{"path":"src/test/java/seedu/clinkedin/logic/commands/SortCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ytingtan"},"content":"package seedu.clinkedin.logic.commands;","lastModifiedDate":"2022-10-28"},{"lineNumber":2,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":3,"author":{"gitId":"ytingtan"},"content":"import static seedu.clinkedin.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-28"},{"lineNumber":4,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":5,"author":{"gitId":"ytingtan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-28"},{"lineNumber":6,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":7,"author":{"gitId":"ytingtan"},"content":"import seedu.clinkedin.model.Model;","lastModifiedDate":"2022-10-28"},{"lineNumber":8,"author":{"gitId":"ytingtan"},"content":"import seedu.clinkedin.model.ModelManager;","lastModifiedDate":"2022-10-28"},{"lineNumber":9,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":10,"author":{"gitId":"ytingtan"},"content":"public class SortCommandTest {","lastModifiedDate":"2022-10-28"},{"lineNumber":11,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":12,"author":{"gitId":"ytingtan"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2022-10-28"},{"lineNumber":13,"author":{"gitId":"ytingtan"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2022-10-28"},{"lineNumber":14,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":15,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":16,"author":{"gitId":"ytingtan"},"content":"    @Test","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"ytingtan"},"content":"    public void execute_sort_success() {","lastModifiedDate":"2022-10-28"},{"lineNumber":18,"author":{"gitId":"ytingtan"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(\"Sorted by rating!\");","lastModifiedDate":"2022-10-28"},{"lineNumber":19,"author":{"gitId":"ytingtan"},"content":"        assertCommandSuccess(new SortCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2022-10-28"},{"lineNumber":20,"author":{"gitId":"ytingtan"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":21,"author":{"gitId":"ytingtan"},"content":"}","lastModifiedDate":"2022-10-28"}],"authorContributionMap":{"ytingtan":21}},{"path":"src/test/java/seedu/clinkedin/logic/commands/StatsCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.logic.commands;","lastModifiedDate":"2022-10-24"},{"lineNumber":2,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":3,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-24"},{"lineNumber":4,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-10-24"},{"lineNumber":5,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":6,"author":{"gitId":"emptygx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-24"},{"lineNumber":7,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":8,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.Model;","lastModifiedDate":"2022-10-24"},{"lineNumber":9,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.ModelManager;","lastModifiedDate":"2022-10-24"},{"lineNumber":10,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.UserPrefs;","lastModifiedDate":"2022-10-24"},{"lineNumber":11,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":12,"author":{"gitId":"emptygx"},"content":"class StatsCommandTest {","lastModifiedDate":"2022-10-24"},{"lineNumber":13,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":14,"author":{"gitId":"emptygx"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-24"},{"lineNumber":15,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":16,"author":{"gitId":"emptygx"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":17,"author":{"gitId":"emptygx"},"content":"    void execute_unfilteredList_success() {","lastModifiedDate":"2022-10-24"},{"lineNumber":18,"author":{"gitId":"emptygx"},"content":"        StatsCommand statsCommand \u003d new StatsCommand();","lastModifiedDate":"2022-10-24"},{"lineNumber":19,"author":{"gitId":"emptygx"},"content":"        String expectedMessage \u003d \"Statistics displayed!\\n\"","lastModifiedDate":"2022-10-24"},{"lineNumber":20,"author":{"gitId":"emptygx"},"content":"                + \"Number of candidates used to calculate statistics: 7\\n\";","lastModifiedDate":"2022-10-28"},{"lineNumber":21,"author":{"gitId":"emptygx"},"content":"        assertCommandSuccess(statsCommand, model, expectedMessage, model);","lastModifiedDate":"2022-10-24"},{"lineNumber":22,"author":{"gitId":"emptygx"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":23,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":24,"author":{"gitId":"emptygx"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":25,"author":{"gitId":"emptygx"},"content":"void execute_filteredList_success() {","lastModifiedDate":"2022-10-24"},{"lineNumber":26,"author":{"gitId":"emptygx"},"content":"        Model filteredModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-24"},{"lineNumber":27,"author":{"gitId":"emptygx"},"content":"        filteredModel.updateFilteredPersonList(p -\u003e p.getName().fullName.equals(\"Alice Pauline\"));","lastModifiedDate":"2022-10-24"},{"lineNumber":28,"author":{"gitId":"emptygx"},"content":"        StatsCommand statsCommand \u003d new StatsCommand();","lastModifiedDate":"2022-10-24"},{"lineNumber":29,"author":{"gitId":"emptygx"},"content":"        String expectedMessage \u003d \"Statistics displayed!\\n\"","lastModifiedDate":"2022-10-24"},{"lineNumber":30,"author":{"gitId":"emptygx"},"content":"                + \"Number of candidates used to calculate statistics: 1\\n\";","lastModifiedDate":"2022-10-28"},{"lineNumber":31,"author":{"gitId":"emptygx"},"content":"        assertCommandSuccess(statsCommand, filteredModel, expectedMessage, filteredModel);","lastModifiedDate":"2022-10-24"},{"lineNumber":32,"author":{"gitId":"emptygx"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":33,"author":{"gitId":"emptygx"},"content":"}","lastModifiedDate":"2022-10-24"}],"authorContributionMap":{"emptygx":33}},{"path":"src/test/java/seedu/clinkedin/logic/commands/UndoCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.logic.commands;","lastModifiedDate":"2022-10-24"},{"lineNumber":2,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":3,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.commons.core.Messages.MESSAGE_CANNOT_UNDO;","lastModifiedDate":"2022-10-24"},{"lineNumber":4,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-24"},{"lineNumber":5,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-24"},{"lineNumber":6,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-10-24"},{"lineNumber":7,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":8,"author":{"gitId":"emptygx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-24"},{"lineNumber":9,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":10,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-24"},{"lineNumber":11,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.AddressBook;","lastModifiedDate":"2022-10-24"},{"lineNumber":12,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.Model;","lastModifiedDate":"2022-10-24"},{"lineNumber":13,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.ModelManager;","lastModifiedDate":"2022-10-24"},{"lineNumber":14,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.UserPrefs;","lastModifiedDate":"2022-10-24"},{"lineNumber":15,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.Person;","lastModifiedDate":"2022-10-24"},{"lineNumber":16,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.testutil.PersonBuilder;","lastModifiedDate":"2022-10-24"},{"lineNumber":17,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":18,"author":{"gitId":"emptygx"},"content":"class UndoCommandTest {","lastModifiedDate":"2022-10-24"},{"lineNumber":19,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":20,"author":{"gitId":"emptygx"},"content":"    private static final String NAME_STUB \u003d \"nameStub\";","lastModifiedDate":"2022-10-24"},{"lineNumber":21,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":22,"author":{"gitId":"emptygx"},"content":"    private final Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-24"},{"lineNumber":23,"author":{"gitId":"emptygx"},"content":"    private final Person personStub \u003d new PersonBuilder().build();","lastModifiedDate":"2022-10-24"},{"lineNumber":24,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":25,"author":{"gitId":"emptygx"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":26,"author":{"gitId":"emptygx"},"content":"    void execute_initialState_failure() {","lastModifiedDate":"2022-10-24"},{"lineNumber":27,"author":{"gitId":"emptygx"},"content":"        UndoCommand undoCommand \u003d new UndoCommand();","lastModifiedDate":"2022-10-24"},{"lineNumber":28,"author":{"gitId":"emptygx"},"content":"        assertCommandFailure(undoCommand, model, MESSAGE_CANNOT_UNDO);","lastModifiedDate":"2022-10-24"},{"lineNumber":29,"author":{"gitId":"emptygx"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":30,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":31,"author":{"gitId":"emptygx"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":32,"author":{"gitId":"emptygx"},"content":"    void execute_undoAddCommand_success() {","lastModifiedDate":"2022-10-24"},{"lineNumber":33,"author":{"gitId":"emptygx"},"content":"        model.addPerson(personStub);","lastModifiedDate":"2022-10-24"},{"lineNumber":34,"author":{"gitId":"emptygx"},"content":"        UndoCommand undoCommand \u003d new UndoCommand();","lastModifiedDate":"2022-10-24"},{"lineNumber":35,"author":{"gitId":"emptygx"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-24"},{"lineNumber":36,"author":{"gitId":"emptygx"},"content":"        assertCommandSuccess(undoCommand, model, UndoCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-10-24"},{"lineNumber":37,"author":{"gitId":"emptygx"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":38,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":39,"author":{"gitId":"emptygx"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":40,"author":{"gitId":"emptygx"},"content":"    void execute_noNewState_failure() {","lastModifiedDate":"2022-10-24"},{"lineNumber":41,"author":{"gitId":"emptygx"},"content":"        model.addPerson(personStub);","lastModifiedDate":"2022-10-24"},{"lineNumber":42,"author":{"gitId":"emptygx"},"content":"        UndoCommand undoCommand \u003d new UndoCommand();","lastModifiedDate":"2022-10-24"},{"lineNumber":43,"author":{"gitId":"emptygx"},"content":"        model.undoAddressBook();","lastModifiedDate":"2022-10-24"},{"lineNumber":44,"author":{"gitId":"emptygx"},"content":"        assertCommandFailure(undoCommand, model, MESSAGE_CANNOT_UNDO);","lastModifiedDate":"2022-10-24"},{"lineNumber":45,"author":{"gitId":"emptygx"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":46,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":47,"author":{"gitId":"emptygx"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":48,"author":{"gitId":"emptygx"},"content":"    void execute_undoDeleteCommand_success() {","lastModifiedDate":"2022-10-24"},{"lineNumber":49,"author":{"gitId":"emptygx"},"content":"        model.addPerson(personStub);","lastModifiedDate":"2022-10-24"},{"lineNumber":50,"author":{"gitId":"emptygx"},"content":"        model.deletePerson(personStub);","lastModifiedDate":"2022-10-24"},{"lineNumber":51,"author":{"gitId":"emptygx"},"content":"        UndoCommand undoCommand \u003d new UndoCommand();","lastModifiedDate":"2022-10-24"},{"lineNumber":52,"author":{"gitId":"emptygx"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-24"},{"lineNumber":53,"author":{"gitId":"emptygx"},"content":"        expectedModel.addPerson(personStub);","lastModifiedDate":"2022-10-24"},{"lineNumber":54,"author":{"gitId":"emptygx"},"content":"        assertCommandSuccess(undoCommand, model, UndoCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-10-24"},{"lineNumber":55,"author":{"gitId":"emptygx"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":56,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":57,"author":{"gitId":"emptygx"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":58,"author":{"gitId":"emptygx"},"content":"    void execute_undoEditCommand_success() {","lastModifiedDate":"2022-10-24"},{"lineNumber":59,"author":{"gitId":"emptygx"},"content":"        model.addPerson(personStub);","lastModifiedDate":"2022-10-24"},{"lineNumber":60,"author":{"gitId":"emptygx"},"content":"        Person editedPersonStub \u003d new PersonBuilder(personStub).withName(NAME_STUB).build();","lastModifiedDate":"2022-10-24"},{"lineNumber":61,"author":{"gitId":"emptygx"},"content":"        model.setPerson(personStub, editedPersonStub);","lastModifiedDate":"2022-10-24"},{"lineNumber":62,"author":{"gitId":"emptygx"},"content":"        UndoCommand undoCommand \u003d new UndoCommand();","lastModifiedDate":"2022-10-24"},{"lineNumber":63,"author":{"gitId":"emptygx"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-24"},{"lineNumber":64,"author":{"gitId":"emptygx"},"content":"        expectedModel.addPerson(personStub);","lastModifiedDate":"2022-10-24"},{"lineNumber":65,"author":{"gitId":"emptygx"},"content":"        assertCommandSuccess(undoCommand, model, UndoCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-10-24"},{"lineNumber":66,"author":{"gitId":"emptygx"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":67,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":68,"author":{"gitId":"emptygx"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":69,"author":{"gitId":"emptygx"},"content":"    void execute_undoClearCommand_success() {","lastModifiedDate":"2022-10-24"},{"lineNumber":70,"author":{"gitId":"emptygx"},"content":"        model.addPerson(personStub);","lastModifiedDate":"2022-10-24"},{"lineNumber":71,"author":{"gitId":"emptygx"},"content":"        model.setAddressBook(new AddressBook());","lastModifiedDate":"2022-10-24"},{"lineNumber":72,"author":{"gitId":"emptygx"},"content":"        UndoCommand undoCommand \u003d new UndoCommand();","lastModifiedDate":"2022-10-24"},{"lineNumber":73,"author":{"gitId":"emptygx"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-24"},{"lineNumber":74,"author":{"gitId":"emptygx"},"content":"        expectedModel.addPerson(personStub);","lastModifiedDate":"2022-10-24"},{"lineNumber":75,"author":{"gitId":"emptygx"},"content":"        assertCommandSuccess(undoCommand, model, UndoCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-10-24"},{"lineNumber":76,"author":{"gitId":"emptygx"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":77,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":78,"author":{"gitId":"emptygx"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":79,"author":{"gitId":"emptygx"},"content":"    void execute_undoTwice_success() {","lastModifiedDate":"2022-10-24"},{"lineNumber":80,"author":{"gitId":"emptygx"},"content":"        model.addPerson(personStub);","lastModifiedDate":"2022-10-24"},{"lineNumber":81,"author":{"gitId":"emptygx"},"content":"        model.deletePerson(personStub);","lastModifiedDate":"2022-10-24"},{"lineNumber":82,"author":{"gitId":"emptygx"},"content":"        UndoCommand undoCommand \u003d new UndoCommand();","lastModifiedDate":"2022-10-24"},{"lineNumber":83,"author":{"gitId":"emptygx"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-24"},{"lineNumber":84,"author":{"gitId":"emptygx"},"content":"        try {","lastModifiedDate":"2022-10-24"},{"lineNumber":85,"author":{"gitId":"emptygx"},"content":"            undoCommand.execute(model);","lastModifiedDate":"2022-10-24"},{"lineNumber":86,"author":{"gitId":"emptygx"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2022-10-24"},{"lineNumber":87,"author":{"gitId":"emptygx"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", e);","lastModifiedDate":"2022-10-24"},{"lineNumber":88,"author":{"gitId":"emptygx"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":89,"author":{"gitId":"emptygx"},"content":"        assertCommandSuccess(undoCommand, model, UndoCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-10-24"},{"lineNumber":90,"author":{"gitId":"emptygx"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":91,"author":{"gitId":"emptygx"},"content":"}","lastModifiedDate":"2022-10-24"}],"authorContributionMap":{"emptygx":91}},{"path":"src/test/java/seedu/clinkedin/logic/commands/ViewCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"josephaedan"},"content":"package seedu.clinkedin.logic.commands;","lastModifiedDate":"2022-10-28"},{"lineNumber":2,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":3,"author":{"gitId":"josephaedan"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2022-10-28"},{"lineNumber":4,"author":{"gitId":"josephaedan"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-10-28"},{"lineNumber":5,"author":{"gitId":"josephaedan"},"content":"import static seedu.clinkedin.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-28"},{"lineNumber":6,"author":{"gitId":"josephaedan"},"content":"import static seedu.clinkedin.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-10-28"},{"lineNumber":7,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":8,"author":{"gitId":"josephaedan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-28"},{"lineNumber":9,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":10,"author":{"gitId":"josephaedan"},"content":"import seedu.clinkedin.commons.core.index.Index;","lastModifiedDate":"2022-10-28"},{"lineNumber":11,"author":{"gitId":"josephaedan"},"content":"import seedu.clinkedin.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-28"},{"lineNumber":12,"author":{"gitId":"josephaedan"},"content":"import seedu.clinkedin.model.Model;","lastModifiedDate":"2022-10-28"},{"lineNumber":13,"author":{"gitId":"josephaedan"},"content":"import seedu.clinkedin.model.ModelManager;","lastModifiedDate":"2022-10-28"},{"lineNumber":14,"author":{"gitId":"josephaedan"},"content":"import seedu.clinkedin.model.UserPrefs;","lastModifiedDate":"2022-10-28"},{"lineNumber":15,"author":{"gitId":"josephaedan"},"content":"import seedu.clinkedin.model.person.Person;","lastModifiedDate":"2022-10-28"},{"lineNumber":16,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"josephaedan"},"content":"public class ViewCommandTest {","lastModifiedDate":"2022-10-28"},{"lineNumber":18,"author":{"gitId":"josephaedan"},"content":"    private final Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-28"},{"lineNumber":19,"author":{"gitId":"josephaedan"},"content":"    private final Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-28"},{"lineNumber":20,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":21,"author":{"gitId":"josephaedan"},"content":"    @Test","lastModifiedDate":"2022-10-28"},{"lineNumber":22,"author":{"gitId":"josephaedan"},"content":"    public void constructor_nullIndex_throwsNullPointerException() {","lastModifiedDate":"2022-10-28"},{"lineNumber":23,"author":{"gitId":"josephaedan"},"content":"        assertThrows(NullPointerException.class, () -\u003e new ViewCommand(null));","lastModifiedDate":"2022-10-28"},{"lineNumber":24,"author":{"gitId":"josephaedan"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":25,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":26,"author":{"gitId":"josephaedan"},"content":"    @Test","lastModifiedDate":"2022-10-28"},{"lineNumber":27,"author":{"gitId":"josephaedan"},"content":"    public void constructor_validIndex_success() {","lastModifiedDate":"2022-10-28"},{"lineNumber":28,"author":{"gitId":"josephaedan"},"content":"        assertDoesNotThrow(() -\u003e new ViewCommand(Index.fromOneBased(1)));","lastModifiedDate":"2022-10-28"},{"lineNumber":29,"author":{"gitId":"josephaedan"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":30,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":31,"author":{"gitId":"josephaedan"},"content":"    @Test","lastModifiedDate":"2022-10-28"},{"lineNumber":32,"author":{"gitId":"josephaedan"},"content":"    public void execute_validIndex_success() {","lastModifiedDate":"2022-10-28"},{"lineNumber":33,"author":{"gitId":"josephaedan"},"content":"        ViewCommand viewCommand \u003d new ViewCommand(Index.fromOneBased(1));","lastModifiedDate":"2022-10-28"},{"lineNumber":34,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":35,"author":{"gitId":"josephaedan"},"content":"        Person personToView \u003d model.getFilteredPersonList().get(0);","lastModifiedDate":"2022-10-28"},{"lineNumber":36,"author":{"gitId":"josephaedan"},"content":"        String expectedMessage \u003d personToView.toString();","lastModifiedDate":"2022-10-28"},{"lineNumber":37,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":38,"author":{"gitId":"josephaedan"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), personToView);","lastModifiedDate":"2022-10-28"},{"lineNumber":39,"author":{"gitId":"josephaedan"},"content":"        assertCommandSuccess(viewCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-28"},{"lineNumber":40,"author":{"gitId":"josephaedan"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":41,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":42,"author":{"gitId":"josephaedan"},"content":"    @Test","lastModifiedDate":"2022-10-28"},{"lineNumber":43,"author":{"gitId":"josephaedan"},"content":"    public void execute_invalidIndex_throwsCommandException() {","lastModifiedDate":"2022-10-28"},{"lineNumber":44,"author":{"gitId":"josephaedan"},"content":"        ViewCommand viewCommand \u003d new ViewCommand(Index.fromOneBased(Integer.MAX_VALUE));","lastModifiedDate":"2022-10-28"},{"lineNumber":45,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":46,"author":{"gitId":"josephaedan"},"content":"        assertThrows(CommandException.class, () -\u003e viewCommand.execute(model));","lastModifiedDate":"2022-10-28"},{"lineNumber":47,"author":{"gitId":"josephaedan"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":48,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":49,"author":{"gitId":"josephaedan"},"content":"    @Test","lastModifiedDate":"2022-10-28"},{"lineNumber":50,"author":{"gitId":"josephaedan"},"content":"    public void equals_sameObject_returnsTrue() {","lastModifiedDate":"2022-10-28"},{"lineNumber":51,"author":{"gitId":"josephaedan"},"content":"        ViewCommand viewCommand \u003d new ViewCommand(Index.fromOneBased(1));","lastModifiedDate":"2022-10-28"},{"lineNumber":52,"author":{"gitId":"josephaedan"},"content":"        assert viewCommand.equals(viewCommand);","lastModifiedDate":"2022-10-28"},{"lineNumber":53,"author":{"gitId":"josephaedan"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":54,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":55,"author":{"gitId":"josephaedan"},"content":"    @Test","lastModifiedDate":"2022-10-28"},{"lineNumber":56,"author":{"gitId":"josephaedan"},"content":"    public void equals_sameIndex_returnsTrue() {","lastModifiedDate":"2022-10-28"},{"lineNumber":57,"author":{"gitId":"josephaedan"},"content":"        ViewCommand viewCommand \u003d new ViewCommand(Index.fromOneBased(1));","lastModifiedDate":"2022-10-28"},{"lineNumber":58,"author":{"gitId":"josephaedan"},"content":"        ViewCommand viewCommand2 \u003d new ViewCommand(Index.fromOneBased(1));","lastModifiedDate":"2022-10-28"},{"lineNumber":59,"author":{"gitId":"josephaedan"},"content":"        assert viewCommand.equals(viewCommand2);","lastModifiedDate":"2022-10-28"},{"lineNumber":60,"author":{"gitId":"josephaedan"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":61,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":62,"author":{"gitId":"josephaedan"},"content":"    @Test","lastModifiedDate":"2022-10-28"},{"lineNumber":63,"author":{"gitId":"josephaedan"},"content":"    public void equals_differentIndex_returnsFalse() {","lastModifiedDate":"2022-10-28"},{"lineNumber":64,"author":{"gitId":"josephaedan"},"content":"        ViewCommand viewCommand \u003d new ViewCommand(Index.fromOneBased(1));","lastModifiedDate":"2022-10-28"},{"lineNumber":65,"author":{"gitId":"josephaedan"},"content":"        ViewCommand viewCommand2 \u003d new ViewCommand(Index.fromOneBased(2));","lastModifiedDate":"2022-10-28"},{"lineNumber":66,"author":{"gitId":"josephaedan"},"content":"        assert !viewCommand.equals(viewCommand2);","lastModifiedDate":"2022-10-28"},{"lineNumber":67,"author":{"gitId":"josephaedan"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":68,"author":{"gitId":"josephaedan"},"content":"}","lastModifiedDate":"2022-10-28"}],"authorContributionMap":{"josephaedan":68}},{"path":"src/test/java/seedu/clinkedin/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.logic.parser;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":3,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"ytingtan"},"content":"import static seedu.clinkedin.logic.commands.CommandTestUtil.NOTE_DESC_AMY;","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"ytingtan"},"content":"import static seedu.clinkedin.logic.commands.CommandTestUtil.NOTE_DESC_BOB;","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"ytingtan"},"content":"import static seedu.clinkedin.logic.commands.CommandTestUtil.RATING_DESC_AMY;","lastModifiedDate":"2022-10-17"},{"lineNumber":22,"author":{"gitId":"ytingtan"},"content":"import static seedu.clinkedin.logic.commands.CommandTestUtil.RATING_DESC_BOB;","lastModifiedDate":"2022-10-17"},{"lineNumber":23,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.commands.CommandTestUtil.STATUS_DESC_AMY;","lastModifiedDate":"2022-10-15"},{"lineNumber":24,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.commands.CommandTestUtil.STATUS_DESC_BOB;","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2022-10-15"},{"lineNumber":26,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-10-15"},{"lineNumber":28,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-10-15"},{"lineNumber":29,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-10-15"},{"lineNumber":30,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-10-15"},{"lineNumber":31,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2022-10-15"},{"lineNumber":32,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-15"},{"lineNumber":33,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-15"},{"lineNumber":34,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.testutil.TypicalPersons.AMY;","lastModifiedDate":"2022-10-15"},{"lineNumber":35,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.testutil.TypicalPersons.BOB;","lastModifiedDate":"2022-10-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.logic.commands.AddCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":40,"author":{"gitId":"ytingtan"},"content":"import seedu.clinkedin.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-17"},{"lineNumber":41,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.Address;","lastModifiedDate":"2022-10-15"},{"lineNumber":42,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.Email;","lastModifiedDate":"2022-10-15"},{"lineNumber":43,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.Name;","lastModifiedDate":"2022-10-15"},{"lineNumber":44,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.Person;","lastModifiedDate":"2022-10-15"},{"lineNumber":45,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.Phone;","lastModifiedDate":"2022-10-15"},{"lineNumber":46,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.tag.Tag;","lastModifiedDate":"2022-10-15"},{"lineNumber":47,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.testutil.PersonBuilder;","lastModifiedDate":"2022-10-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":53,"author":{"gitId":"ytingtan"},"content":"    public void parse_allFieldsPresent_success() throws ParseException {","lastModifiedDate":"2022-10-17"},{"lineNumber":54,"author":{"gitId":"pratham31012002"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).build();","lastModifiedDate":"2022-10-13"},{"lineNumber":55,"author":{"gitId":"ytingtan"},"content":"        AddCommand expectedCommand \u003d new AddCommand(expectedPerson);","lastModifiedDate":"2022-10-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":57,"author":{"gitId":"ytingtan"},"content":"        AddCommand actualCommand \u003d new AddCommandParser().parse(PREAMBLE_WHITESPACE + NAME_DESC_BOB","lastModifiedDate":"2022-10-17"},{"lineNumber":58,"author":{"gitId":"ytingtan"},"content":"                + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-10-17"},{"lineNumber":59,"author":{"gitId":"ytingtan"},"content":"                + ADDRESS_DESC_BOB + STATUS_DESC_BOB + NOTE_DESC_BOB + RATING_DESC_BOB);","lastModifiedDate":"2022-10-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":62,"author":{"gitId":"ytingtan"},"content":"                + ADDRESS_DESC_BOB + STATUS_DESC_BOB + NOTE_DESC_BOB + RATING_DESC_BOB, new AddCommand(expectedPerson));","lastModifiedDate":"2022-10-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":64,"author":{"gitId":"pratham31012002"},"content":"        // to be decided - allow multiple or not","lastModifiedDate":"2022-10-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":66,"author":{"gitId":"pratham31012002"},"content":"        //        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-10-13"},{"lineNumber":67,"author":{"gitId":"pratham31012002"},"content":"        //                + ADDRESS_DESC_BOB + STATUS_DESC_BOB, new AddCommand(expectedPerson));","lastModifiedDate":"2022-10-13"},{"lineNumber":68,"author":{"gitId":"pratham31012002"},"content":"        //","lastModifiedDate":"2022-10-13"},{"lineNumber":69,"author":{"gitId":"pratham31012002"},"content":"        //        // multiple phones - last phone accepted","lastModifiedDate":"2022-10-13"},{"lineNumber":70,"author":{"gitId":"pratham31012002"},"content":"        //        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-10-13"},{"lineNumber":71,"author":{"gitId":"pratham31012002"},"content":"        //                + ADDRESS_DESC_BOB + STATUS_DESC_BOB, new AddCommand(expectedPerson));","lastModifiedDate":"2022-10-13"},{"lineNumber":72,"author":{"gitId":"pratham31012002"},"content":"        //","lastModifiedDate":"2022-10-13"},{"lineNumber":73,"author":{"gitId":"pratham31012002"},"content":"        //","lastModifiedDate":"2022-10-13"},{"lineNumber":74,"author":{"gitId":"pratham31012002"},"content":"        //        // multiple emails - last email accepted","lastModifiedDate":"2022-10-13"},{"lineNumber":75,"author":{"gitId":"pratham31012002"},"content":"        //        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2022-10-13"},{"lineNumber":76,"author":{"gitId":"pratham31012002"},"content":"        //                + ADDRESS_DESC_BOB + STATUS_DESC_BOB, new AddCommand(expectedPerson));","lastModifiedDate":"2022-10-13"},{"lineNumber":77,"author":{"gitId":"pratham31012002"},"content":"        //","lastModifiedDate":"2022-10-13"},{"lineNumber":78,"author":{"gitId":"ytingtan"},"content":"        //        // multiple addresses - last address accepted","lastModifiedDate":"2022-10-16"},{"lineNumber":79,"author":{"gitId":"pratham31012002"},"content":"        //        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2022-10-13"},{"lineNumber":80,"author":{"gitId":"pratham31012002"},"content":"        //                + ADDRESS_DESC_BOB + STATUS_DESC_BOB, new AddCommand(expectedPerson));","lastModifiedDate":"2022-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":83,"author":{"gitId":"pratham31012002"},"content":"        //        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).build();","lastModifiedDate":"2022-10-13"},{"lineNumber":84,"author":{"gitId":"pratham31012002"},"content":"        //        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2022-10-13"},{"lineNumber":85,"author":{"gitId":"pratham31012002"},"content":"        //                + STATUS_DESC_BOB, new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2022-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-07-25"},{"lineNumber":92,"author":{"gitId":"ytingtan"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2022-10-09"},{"lineNumber":93,"author":{"gitId":"ytingtan"},"content":"                        + STATUS_DESC_AMY + NOTE_DESC_AMY + RATING_DESC_AMY,","lastModifiedDate":"2022-10-17"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":109,"author":{"gitId":"ytingtan"},"content":"        // missing email prefix","lastModifiedDate":"2022-10-09"},{"lineNumber":110,"author":{"gitId":"josephaedan"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2022-10-10"},{"lineNumber":111,"author":{"gitId":"josephaedan"},"content":"                        expectedMessage);","lastModifiedDate":"2022-10-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":113,"author":{"gitId":"emptygx"},"content":"        // missing clinkedin prefix","lastModifiedDate":"2022-10-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":117,"author":{"gitId":"josephaedan"},"content":"        // missing status prefix","lastModifiedDate":"2022-10-10"},{"lineNumber":118,"author":{"gitId":"josephaedan"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2022-10-10"},{"lineNumber":119,"author":{"gitId":"josephaedan"},"content":"                expectedMessage);","lastModifiedDate":"2022-10-10"},{"lineNumber":120,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":130,"author":{"gitId":"josephaedan"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + STATUS_DESC_BOB, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-10"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":133,"author":{"gitId":"josephaedan"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + STATUS_DESC_BOB, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-10"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":136,"author":{"gitId":"josephaedan"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + STATUS_DESC_BOB, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-10"},{"lineNumber":137,"author":{"gitId":"emptygx"},"content":"        // invalid clinkedin","lastModifiedDate":"2022-10-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2017-12-23"},{"lineNumber":139,"author":{"gitId":"josephaedan"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + STATUS_DESC_BOB, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-10"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":142,"author":{"gitId":"josephaedan"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND + STATUS_DESC_BOB, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-10"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":144,"author":{"gitId":"josephaedan"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2022-10-10"},{"lineNumber":145,"author":{"gitId":"josephaedan"},"content":"                + STATUS_DESC_BOB, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-10"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":148,"author":{"gitId":"josephaedan"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + STATUS_DESC_BOB,","lastModifiedDate":"2022-10-10"},{"lineNumber":149,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"ytingtan":15,"emptygx":41,"pratham31012002":19,"josephaedan":14,"-":62}},{"path":"src/test/java/seedu/clinkedin/logic/parser/AddNoteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.logic.parser;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"josephaedan"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"josephaedan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.commons.core.index.Index;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"agarwal-anjali"},"content":"import seedu.clinkedin.logic.commands.AddNoteCommand;","lastModifiedDate":"2022-10-28"},{"lineNumber":12,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.Note;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"agarwal-anjali"},"content":"public class AddNoteCommandParserTest {","lastModifiedDate":"2022-10-28"},{"lineNumber":15,"author":{"gitId":"agarwal-anjali"},"content":"    private final AddNoteCommandParser parser \u003d new AddNoteCommandParser();","lastModifiedDate":"2022-10-28"},{"lineNumber":16,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"josephaedan"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"josephaedan"},"content":"    public void parse_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"josephaedan"},"content":"        assertThrows(NullPointerException.class, () -\u003e parser.parse(null));","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"josephaedan"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"josephaedan"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"josephaedan"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"agarwal-anjali"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2022-10-28"},{"lineNumber":25,"author":{"gitId":"agarwal-anjali"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddNoteCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-28"},{"lineNumber":26,"author":{"gitId":"josephaedan"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"josephaedan"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"josephaedan"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"josephaedan"},"content":"        // No index given","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"josephaedan"},"content":"        assertParseFailure(parser, \"note/Test\",","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"agarwal-anjali"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddNoteCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-28"},{"lineNumber":33,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"josephaedan"},"content":"        // No valid prefix given","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"agarwal-anjali"},"content":"        assertParseFailure(parser, \"1 Test\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-28"},{"lineNumber":36,"author":{"gitId":"agarwal-anjali"},"content":"                AddNoteCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-28"},{"lineNumber":37,"author":{"gitId":"josephaedan"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"josephaedan"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"josephaedan"},"content":"    public void parse_validArgs_returnsNoteCommand() {","lastModifiedDate":"2022-10-28"},{"lineNumber":41,"author":{"gitId":"josephaedan"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"agarwal-anjali"},"content":"        AddNoteCommand expectedNoteCommand \u003d new AddNoteCommand(Index.fromOneBased(1), new Note(\"Test\"));","lastModifiedDate":"2022-10-28"},{"lineNumber":43,"author":{"gitId":"agarwal-anjali"},"content":"        assertParseSuccess(parser, \"1 note/Test\", expectedNoteCommand);","lastModifiedDate":"2022-10-28"},{"lineNumber":44,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"josephaedan"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"josephaedan"},"content":"        assertParseSuccess(parser, \" \\n \\t1 note/Test\\t\", expectedNoteCommand);","lastModifiedDate":"2022-10-28"},{"lineNumber":47,"author":{"gitId":"josephaedan"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"josephaedan"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"agarwal-anjali":10,"emptygx":6,"josephaedan":32}},{"path":"src/test/java/seedu/clinkedin/logic/parser/AddRateCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ytingtan"},"content":"package seedu.clinkedin.logic.parser;","lastModifiedDate":"2022-10-17"},{"lineNumber":2,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":3,"author":{"gitId":"ytingtan"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-10-18"},{"lineNumber":4,"author":{"gitId":"ytingtan"},"content":"import static seedu.clinkedin.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-18"},{"lineNumber":5,"author":{"gitId":"ytingtan"},"content":"import static seedu.clinkedin.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-18"},{"lineNumber":6,"author":{"gitId":"ytingtan"},"content":"import static seedu.clinkedin.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-18"},{"lineNumber":7,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":8,"author":{"gitId":"ytingtan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-18"},{"lineNumber":9,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":10,"author":{"gitId":"ytingtan"},"content":"import seedu.clinkedin.commons.core.index.Index;","lastModifiedDate":"2022-10-18"},{"lineNumber":11,"author":{"gitId":"ytingtan"},"content":"import seedu.clinkedin.logic.commands.AddRateCommand;","lastModifiedDate":"2022-10-28"},{"lineNumber":12,"author":{"gitId":"ytingtan"},"content":"import seedu.clinkedin.model.person.Rating;","lastModifiedDate":"2022-10-18"},{"lineNumber":13,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":14,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":15,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":16,"author":{"gitId":"ytingtan"},"content":"public class AddRateCommandParserTest {","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"ytingtan"},"content":"    private final AddRateCommandParser parser \u003d new AddRateCommandParser();","lastModifiedDate":"2022-10-28"},{"lineNumber":18,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":19,"author":{"gitId":"ytingtan"},"content":"    @Test","lastModifiedDate":"2022-10-18"},{"lineNumber":20,"author":{"gitId":"ytingtan"},"content":"    public void parse_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-18"},{"lineNumber":21,"author":{"gitId":"ytingtan"},"content":"        assertThrows(NullPointerException.class, () -\u003e parser.parse(null));","lastModifiedDate":"2022-10-18"},{"lineNumber":22,"author":{"gitId":"ytingtan"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":23,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":24,"author":{"gitId":"ytingtan"},"content":"    @Test","lastModifiedDate":"2022-10-18"},{"lineNumber":25,"author":{"gitId":"ytingtan"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2022-10-18"},{"lineNumber":26,"author":{"gitId":"ytingtan"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-18"},{"lineNumber":27,"author":{"gitId":"ytingtan"},"content":"                AddRateCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-28"},{"lineNumber":28,"author":{"gitId":"ytingtan"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":29,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":30,"author":{"gitId":"ytingtan"},"content":"    @Test","lastModifiedDate":"2022-10-18"},{"lineNumber":31,"author":{"gitId":"ytingtan"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2022-10-18"},{"lineNumber":32,"author":{"gitId":"ytingtan"},"content":"        // No index given","lastModifiedDate":"2022-10-18"},{"lineNumber":33,"author":{"gitId":"ytingtan"},"content":"        assertParseFailure(parser, \"rate/4\",","lastModifiedDate":"2022-10-18"},{"lineNumber":34,"author":{"gitId":"ytingtan"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddRateCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-28"},{"lineNumber":35,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":36,"author":{"gitId":"ytingtan"},"content":"        // No valid prefix given","lastModifiedDate":"2022-10-18"},{"lineNumber":37,"author":{"gitId":"ytingtan"},"content":"        assertParseFailure(parser, \"1 Test\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-18"},{"lineNumber":38,"author":{"gitId":"ytingtan"},"content":"                AddRateCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-28"},{"lineNumber":39,"author":{"gitId":"ytingtan"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":40,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":41,"author":{"gitId":"ytingtan"},"content":"    @Test","lastModifiedDate":"2022-10-18"},{"lineNumber":42,"author":{"gitId":"ytingtan"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2022-10-18"},{"lineNumber":43,"author":{"gitId":"ytingtan"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2022-10-18"},{"lineNumber":44,"author":{"gitId":"ytingtan"},"content":"        AddRateCommand expectedFindCommand \u003d new AddRateCommand(Index.fromOneBased(1), new Rating(\"4\"));","lastModifiedDate":"2022-10-28"},{"lineNumber":45,"author":{"gitId":"ytingtan"},"content":"        assertParseSuccess(parser, \"1 rate/4\", expectedFindCommand);","lastModifiedDate":"2022-10-18"},{"lineNumber":46,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":47,"author":{"gitId":"ytingtan"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2022-10-18"},{"lineNumber":48,"author":{"gitId":"ytingtan"},"content":"        assertParseSuccess(parser, \" \\n \\t1 rate/4\\t\", expectedFindCommand);","lastModifiedDate":"2022-10-18"},{"lineNumber":49,"author":{"gitId":"ytingtan"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":50,"author":{"gitId":"ytingtan"},"content":"}","lastModifiedDate":"2022-10-17"}],"authorContributionMap":{"ytingtan":50}},{"path":"src/test/java/seedu/clinkedin/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.logic.parser;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.logic.commands.AddCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.logic.commands.ClearCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.logic.commands.DeleteCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.logic.commands.EditCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.logic.commands.ExitCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.logic.commands.FindCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.logic.commands.HelpCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":24,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.logic.commands.ListCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.logic.commands.RedoCommand;","lastModifiedDate":"2022-10-24"},{"lineNumber":26,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.logic.commands.UndoCommand;","lastModifiedDate":"2022-10-24"},{"lineNumber":27,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-15"},{"lineNumber":28,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.DetailsContainKeywordsPredicate;","lastModifiedDate":"2022-10-15"},{"lineNumber":29,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.Person;","lastModifiedDate":"2022-10-15"},{"lineNumber":30,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2022-10-15"},{"lineNumber":31,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.testutil.PersonBuilder;","lastModifiedDate":"2022-10-15"},{"lineNumber":32,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.testutil.PersonUtil;","lastModifiedDate":"2022-10-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"emptygx"},"content":"        assertEquals(new FindCommand(new DetailsContainKeywordsPredicate(keywords)), command);","lastModifiedDate":"2022-10-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"josephaedan"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-26"},{"lineNumber":86,"author":{"gitId":"josephaedan"},"content":"                + ListCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2022-10-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"emptygx"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":90,"author":{"gitId":"emptygx"},"content":"    public void parseCommand_undo() throws Exception {","lastModifiedDate":"2022-10-24"},{"lineNumber":91,"author":{"gitId":"emptygx"},"content":"        assertTrue(parser.parseCommand(UndoCommand.COMMAND_WORD) instanceof UndoCommand);","lastModifiedDate":"2022-10-24"},{"lineNumber":92,"author":{"gitId":"emptygx"},"content":"        assertTrue(parser.parseCommand(UndoCommand.COMMAND_WORD + \" 3\") instanceof UndoCommand);","lastModifiedDate":"2022-10-24"},{"lineNumber":93,"author":{"gitId":"emptygx"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":94,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":95,"author":{"gitId":"emptygx"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":96,"author":{"gitId":"emptygx"},"content":"    public void parseCommand_redo() throws Exception {","lastModifiedDate":"2022-10-24"},{"lineNumber":97,"author":{"gitId":"emptygx"},"content":"        assertTrue(parser.parseCommand(RedoCommand.COMMAND_WORD) instanceof RedoCommand);","lastModifiedDate":"2022-10-24"},{"lineNumber":98,"author":{"gitId":"emptygx"},"content":"        assertTrue(parser.parseCommand(RedoCommand.COMMAND_WORD + \" 3\") instanceof RedoCommand);","lastModifiedDate":"2022-10-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":109,"author":{"gitId":"josephaedan"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-26"},{"lineNumber":110,"author":{"gitId":"josephaedan"},"content":"                HelpCommand.MESSAGE_USAGE), () -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2022-10-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"emptygx":33,"josephaedan":5,"-":79}},{"path":"src/test/java/seedu/clinkedin/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.logic.parser;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"pratham31012002"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"u/\");","lastModifiedDate":"2022-10-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"pratham31012002"},"content":"    private final Prefix dashT \u003d new Prefix(\"t/\");","lastModifiedDate":"2022-10-28"},{"lineNumber":15,"author":{"gitId":"pratham31012002"},"content":"    private final Prefix hatQ \u003d new Prefix(\"Q/\");","lastModifiedDate":"2022-10-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  some random string /t tag with leading and trailing spaces \";","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2017-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2016-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":85,"author":{"gitId":"pratham31012002"},"content":"        String argsString \u003d \"SomePreambleString t/ dashT/Value p/pSlash value\";","lastModifiedDate":"2022-10-28"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"pratham31012002"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT/Value\");","lastModifiedDate":"2022-10-28"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"pratham31012002"},"content":"        argsString \u003d \"Different Preamble String Q/111 t/ dashT/Value p/pSlash value\";","lastModifiedDate":"2022-10-28"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"pratham31012002"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT/Value\");","lastModifiedDate":"2022-10-28"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2017-05-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"pratham31012002"},"content":"        String argsString \u003d \"SomePreambleString t/ dashT-Value Q/ Q/ t/ another dashT value p/ pSlash value t/\";","lastModifiedDate":"2022-10-28"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"pratham31012002"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joinedt/joined t/ not joinedQ/joined\";","lastModifiedDate":"2022-10-28"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":133,"author":{"gitId":"pratham31012002"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joinedt/joined\");","lastModifiedDate":"2022-10-28"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"pratham31012002"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joinedQ/joined\");","lastModifiedDate":"2022-10-28"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":141,"author":{"gitId":"pratham31012002"},"content":"        Prefix aaa \u003d new Prefix(\"aaa/\");","lastModifiedDate":"2022-10-28"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2016-10-16"},{"lineNumber":144,"author":{"gitId":"pratham31012002"},"content":"        assertEquals(aaa, new Prefix(\"aaa/\"));","lastModifiedDate":"2022-10-28"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":146,"author":{"gitId":"pratham31012002"},"content":"        assertNotEquals(aaa, \"aaa/\");","lastModifiedDate":"2022-10-28"},{"lineNumber":147,"author":{"gitId":"pratham31012002"},"content":"        assertNotEquals(aaa, new Prefix(\"aab/\"));","lastModifiedDate":"2022-10-28"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"emptygx":1,"pratham31012002":15,"-":134}},{"path":"src/test/java/seedu/clinkedin/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.logic.parser;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.logic.commands.Command;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static void assertParseSuccess(Parser\u003c? extends Command\u003e parser, String userInput,","lastModifiedDate":"2022-02-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            Command expectedCommand) {","lastModifiedDate":"2022-02-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static void assertParseFailure(Parser\u003c? extends Command\u003e parser, String userInput, String expectedMessage) {","lastModifiedDate":"2022-02-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"emptygx":3,"-":36}},{"path":"src/test/java/seedu/clinkedin/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.logic.parser;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.logic.commands.DeleteCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"emptygx":6,"-":26}},{"path":"src/test/java/seedu/clinkedin/logic/parser/DeleteLinkCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ytingtan"},"content":"package seedu.clinkedin.logic.parser;","lastModifiedDate":"2022-10-28"},{"lineNumber":2,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":3,"author":{"gitId":"ytingtan"},"content":"import static seedu.clinkedin.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-28"},{"lineNumber":4,"author":{"gitId":"ytingtan"},"content":"import static seedu.clinkedin.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-28"},{"lineNumber":5,"author":{"gitId":"ytingtan"},"content":"import static seedu.clinkedin.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-28"},{"lineNumber":6,"author":{"gitId":"ytingtan"},"content":"import static seedu.clinkedin.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-28"},{"lineNumber":7,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":8,"author":{"gitId":"ytingtan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-28"},{"lineNumber":9,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":10,"author":{"gitId":"ytingtan"},"content":"import seedu.clinkedin.logic.commands.DeleteLinkCommand;","lastModifiedDate":"2022-10-28"},{"lineNumber":11,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":12,"author":{"gitId":"ytingtan"},"content":"/**","lastModifiedDate":"2022-10-28"},{"lineNumber":13,"author":{"gitId":"ytingtan"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2022-10-28"},{"lineNumber":14,"author":{"gitId":"ytingtan"},"content":" * outside of the DeleteLinkCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2022-10-28"},{"lineNumber":15,"author":{"gitId":"ytingtan"},"content":" * same path through the DeleteLinkCommand, and therefore we test only one of them.","lastModifiedDate":"2022-10-28"},{"lineNumber":16,"author":{"gitId":"ytingtan"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"ytingtan"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2022-10-28"},{"lineNumber":18,"author":{"gitId":"ytingtan"},"content":" */","lastModifiedDate":"2022-10-28"},{"lineNumber":19,"author":{"gitId":"ytingtan"},"content":"public class DeleteLinkCommandParserTest {","lastModifiedDate":"2022-10-28"},{"lineNumber":20,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":21,"author":{"gitId":"ytingtan"},"content":"    private DeleteLinkCommandParser parser \u003d new DeleteLinkCommandParser();","lastModifiedDate":"2022-10-28"},{"lineNumber":22,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":23,"author":{"gitId":"ytingtan"},"content":"    @Test","lastModifiedDate":"2022-10-28"},{"lineNumber":24,"author":{"gitId":"ytingtan"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2022-10-28"},{"lineNumber":25,"author":{"gitId":"ytingtan"},"content":"        assertParseSuccess(parser, \"1\", new DeleteLinkCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2022-10-28"},{"lineNumber":26,"author":{"gitId":"ytingtan"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":27,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":28,"author":{"gitId":"ytingtan"},"content":"    @Test","lastModifiedDate":"2022-10-28"},{"lineNumber":29,"author":{"gitId":"ytingtan"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2022-10-28"},{"lineNumber":30,"author":{"gitId":"ytingtan"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-28"},{"lineNumber":31,"author":{"gitId":"ytingtan"},"content":"                DeleteLinkCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-28"},{"lineNumber":32,"author":{"gitId":"ytingtan"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":33,"author":{"gitId":"ytingtan"},"content":"}","lastModifiedDate":"2022-10-28"}],"authorContributionMap":{"ytingtan":33}},{"path":"src/test/java/seedu/clinkedin/logic/parser/DeleteNoteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ytingtan"},"content":"package seedu.clinkedin.logic.parser;","lastModifiedDate":"2022-10-28"},{"lineNumber":2,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":3,"author":{"gitId":"ytingtan"},"content":"import static seedu.clinkedin.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-28"},{"lineNumber":4,"author":{"gitId":"ytingtan"},"content":"import static seedu.clinkedin.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-28"},{"lineNumber":5,"author":{"gitId":"ytingtan"},"content":"import static seedu.clinkedin.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-28"},{"lineNumber":6,"author":{"gitId":"ytingtan"},"content":"import static seedu.clinkedin.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-28"},{"lineNumber":7,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":8,"author":{"gitId":"ytingtan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-28"},{"lineNumber":9,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":10,"author":{"gitId":"ytingtan"},"content":"import seedu.clinkedin.logic.commands.DeleteNoteCommand;","lastModifiedDate":"2022-10-28"},{"lineNumber":11,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":12,"author":{"gitId":"ytingtan"},"content":"/**","lastModifiedDate":"2022-10-28"},{"lineNumber":13,"author":{"gitId":"ytingtan"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2022-10-28"},{"lineNumber":14,"author":{"gitId":"ytingtan"},"content":" * outside of the DeleteNoteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2022-10-28"},{"lineNumber":15,"author":{"gitId":"ytingtan"},"content":" * same path through the DeleteNoteCommand, and therefore we test only one of them.","lastModifiedDate":"2022-10-28"},{"lineNumber":16,"author":{"gitId":"ytingtan"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"ytingtan"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2022-10-28"},{"lineNumber":18,"author":{"gitId":"ytingtan"},"content":" */","lastModifiedDate":"2022-10-28"},{"lineNumber":19,"author":{"gitId":"ytingtan"},"content":"public class DeleteNoteCommandParserTest {","lastModifiedDate":"2022-10-28"},{"lineNumber":20,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":21,"author":{"gitId":"ytingtan"},"content":"    private DeleteNoteCommandParser parser \u003d new DeleteNoteCommandParser();","lastModifiedDate":"2022-10-28"},{"lineNumber":22,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":23,"author":{"gitId":"ytingtan"},"content":"    @Test","lastModifiedDate":"2022-10-28"},{"lineNumber":24,"author":{"gitId":"ytingtan"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2022-10-28"},{"lineNumber":25,"author":{"gitId":"ytingtan"},"content":"        assertParseSuccess(parser, \"1\", new DeleteNoteCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2022-10-28"},{"lineNumber":26,"author":{"gitId":"ytingtan"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":27,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":28,"author":{"gitId":"ytingtan"},"content":"    @Test","lastModifiedDate":"2022-10-28"},{"lineNumber":29,"author":{"gitId":"ytingtan"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2022-10-28"},{"lineNumber":30,"author":{"gitId":"ytingtan"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-28"},{"lineNumber":31,"author":{"gitId":"ytingtan"},"content":"                DeleteNoteCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-28"},{"lineNumber":32,"author":{"gitId":"ytingtan"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":33,"author":{"gitId":"ytingtan"},"content":"}","lastModifiedDate":"2022-10-28"}],"authorContributionMap":{"ytingtan":33}},{"path":"src/test/java/seedu/clinkedin/logic/parser/DeleteRateCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ytingtan"},"content":"package seedu.clinkedin.logic.parser;","lastModifiedDate":"2022-10-28"},{"lineNumber":2,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":3,"author":{"gitId":"ytingtan"},"content":"import static seedu.clinkedin.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-28"},{"lineNumber":4,"author":{"gitId":"ytingtan"},"content":"import static seedu.clinkedin.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-28"},{"lineNumber":5,"author":{"gitId":"ytingtan"},"content":"import static seedu.clinkedin.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-28"},{"lineNumber":6,"author":{"gitId":"ytingtan"},"content":"import static seedu.clinkedin.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-28"},{"lineNumber":7,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":8,"author":{"gitId":"ytingtan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-28"},{"lineNumber":9,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":10,"author":{"gitId":"ytingtan"},"content":"import seedu.clinkedin.logic.commands.DeleteRateCommand;","lastModifiedDate":"2022-10-28"},{"lineNumber":11,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":12,"author":{"gitId":"ytingtan"},"content":"/**","lastModifiedDate":"2022-10-28"},{"lineNumber":13,"author":{"gitId":"ytingtan"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2022-10-28"},{"lineNumber":14,"author":{"gitId":"ytingtan"},"content":" * outside of the DeleteRateCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2022-10-28"},{"lineNumber":15,"author":{"gitId":"ytingtan"},"content":" * same path through the DeleteRateCommand, and therefore we test only one of them.","lastModifiedDate":"2022-10-28"},{"lineNumber":16,"author":{"gitId":"ytingtan"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"ytingtan"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2022-10-28"},{"lineNumber":18,"author":{"gitId":"ytingtan"},"content":" */","lastModifiedDate":"2022-10-28"},{"lineNumber":19,"author":{"gitId":"ytingtan"},"content":"public class DeleteRateCommandParserTest {","lastModifiedDate":"2022-10-28"},{"lineNumber":20,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":21,"author":{"gitId":"ytingtan"},"content":"    private DeleteRateCommandParser parser \u003d new DeleteRateCommandParser();","lastModifiedDate":"2022-10-28"},{"lineNumber":22,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":23,"author":{"gitId":"ytingtan"},"content":"    @Test","lastModifiedDate":"2022-10-28"},{"lineNumber":24,"author":{"gitId":"ytingtan"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2022-10-28"},{"lineNumber":25,"author":{"gitId":"ytingtan"},"content":"        assertParseSuccess(parser, \"1\", new DeleteRateCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2022-10-28"},{"lineNumber":26,"author":{"gitId":"ytingtan"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":27,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":28,"author":{"gitId":"ytingtan"},"content":"    @Test","lastModifiedDate":"2022-10-28"},{"lineNumber":29,"author":{"gitId":"ytingtan"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2022-10-28"},{"lineNumber":30,"author":{"gitId":"ytingtan"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-28"},{"lineNumber":31,"author":{"gitId":"ytingtan"},"content":"                DeleteRateCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-28"},{"lineNumber":32,"author":{"gitId":"ytingtan"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":33,"author":{"gitId":"ytingtan"},"content":"}","lastModifiedDate":"2022-10-28"}],"authorContributionMap":{"ytingtan":33}},{"path":"src/test/java/seedu/clinkedin/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.logic.parser;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":3,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"ytingtan"},"content":"import static seedu.clinkedin.logic.commands.CommandTestUtil.INVALID_STATUS_DESC;","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.commands.CommandTestUtil.NOTE_DESC_AMY;","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"ytingtan"},"content":"import static seedu.clinkedin.logic.commands.CommandTestUtil.RATING_DESC_AMY;","lastModifiedDate":"2022-10-17"},{"lineNumber":18,"author":{"gitId":"ytingtan"},"content":"import static seedu.clinkedin.logic.commands.CommandTestUtil.STATUS_DESC_AMY;","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2022-10-15"},{"lineNumber":24,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.commands.CommandTestUtil.VALID_NOTE_AMY;","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2022-10-15"},{"lineNumber":26,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"ytingtan"},"content":"import static seedu.clinkedin.logic.commands.CommandTestUtil.VALID_RATING_AMY;","lastModifiedDate":"2022-10-17"},{"lineNumber":28,"author":{"gitId":"ytingtan"},"content":"import static seedu.clinkedin.logic.commands.CommandTestUtil.VALID_STATUS_AMY;","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-15"},{"lineNumber":30,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-15"},{"lineNumber":31,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-15"},{"lineNumber":32,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-15"},{"lineNumber":33,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2022-10-15"},{"lineNumber":34,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2022-10-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.commons.core.index.Index;","lastModifiedDate":"2022-10-15"},{"lineNumber":39,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.logic.commands.EditCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":40,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2022-10-15"},{"lineNumber":41,"author":{"gitId":"ytingtan"},"content":"import seedu.clinkedin.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-17"},{"lineNumber":42,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.Address;","lastModifiedDate":"2022-10-15"},{"lineNumber":43,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.Email;","lastModifiedDate":"2022-10-15"},{"lineNumber":44,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.Name;","lastModifiedDate":"2022-10-15"},{"lineNumber":45,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.Phone;","lastModifiedDate":"2022-10-15"},{"lineNumber":46,"author":{"gitId":"ytingtan"},"content":"import seedu.clinkedin.model.person.Status;","lastModifiedDate":"2022-10-16"},{"lineNumber":47,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2022-10-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":87,"author":{"gitId":"pratham31012002"},"content":"        // to check for tags","lastModifiedDate":"2022-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2022-10-16"},{"lineNumber":92,"author":{"gitId":"pratham31012002"},"content":"        //        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2022-10-13"},{"lineNumber":93,"author":{"gitId":"ytingtan"},"content":"        assertParseFailure(parser, \"1\" + INVALID_STATUS_DESC, Status.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"pratham31012002"},"content":"        // assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-13"},{"lineNumber":105,"author":{"gitId":"pratham31012002"},"content":"        // assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-13"},{"lineNumber":106,"author":{"gitId":"pratham31012002"},"content":"        // assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"pratham31012002"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY","lastModifiedDate":"2022-10-13"},{"lineNumber":110,"author":{"gitId":"pratham31012002"},"content":"                        + VALID_PHONE_AMY,","lastModifiedDate":"2022-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"ytingtan"},"content":"    public void parse_allFieldsSpecified_success() throws ParseException {","lastModifiedDate":"2022-10-17"},{"lineNumber":116,"author":{"gitId":"pratham31012002"},"content":"        // test for tags to be added.","lastModifiedDate":"2022-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":118,"author":{"gitId":"pratham31012002"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB","lastModifiedDate":"2022-10-13"},{"lineNumber":119,"author":{"gitId":"ytingtan"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + NOTE_DESC_AMY + RATING_DESC_AMY;","lastModifiedDate":"2022-10-17"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"ytingtan"},"content":"                .withNote(VALID_NOTE_AMY).withRating(VALID_RATING_AMY).build();","lastModifiedDate":"2022-10-17"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":125,"author":{"gitId":"ytingtan"},"content":"        EditCommand actualCommand \u003d new EditCommandParser().parse(userInput);","lastModifiedDate":"2022-10-17"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2022-10-16"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"ytingtan"},"content":"        // status","lastModifiedDate":"2022-10-16"},{"lineNumber":169,"author":{"gitId":"ytingtan"},"content":"        userInput \u003d targetIndex.getOneBased() + STATUS_DESC_AMY;","lastModifiedDate":"2022-10-16"},{"lineNumber":170,"author":{"gitId":"ytingtan"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withStatus(VALID_STATUS_AMY).build();","lastModifiedDate":"2022-10-16"},{"lineNumber":171,"author":{"gitId":"ytingtan"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-16"},{"lineNumber":172,"author":{"gitId":"ytingtan"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-16"},{"lineNumber":173,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":174,"author":{"gitId":"ytingtan"},"content":"        // note","lastModifiedDate":"2022-10-16"},{"lineNumber":175,"author":{"gitId":"ytingtan"},"content":"        userInput \u003d targetIndex.getOneBased() + NOTE_DESC_AMY;","lastModifiedDate":"2022-10-16"},{"lineNumber":176,"author":{"gitId":"ytingtan"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withNote(VALID_NOTE_AMY).build();","lastModifiedDate":"2022-10-16"},{"lineNumber":177,"author":{"gitId":"ytingtan"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-16"},{"lineNumber":178,"author":{"gitId":"ytingtan"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-16"},{"lineNumber":179,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":180,"author":{"gitId":"ytingtan"},"content":"        // rating","lastModifiedDate":"2022-10-18"},{"lineNumber":181,"author":{"gitId":"ytingtan"},"content":"        userInput \u003d targetIndex.getOneBased() + RATING_DESC_AMY;","lastModifiedDate":"2022-10-18"},{"lineNumber":182,"author":{"gitId":"ytingtan"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withRating(VALID_RATING_AMY).build();","lastModifiedDate":"2022-10-18"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-18"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-18"},{"lineNumber":185,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":186,"author":{"gitId":"pratham31012002"},"content":"        // to be added.","lastModifiedDate":"2022-10-13"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":188,"author":{"gitId":"pratham31012002"},"content":"        //        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2022-10-13"},{"lineNumber":189,"author":{"gitId":"pratham31012002"},"content":"        //        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-10-13"},{"lineNumber":190,"author":{"gitId":"pratham31012002"},"content":"        //        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-13"},{"lineNumber":191,"author":{"gitId":"pratham31012002"},"content":"        //        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-13"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":196,"author":{"gitId":"pratham31012002"},"content":"        // to check for tags","lastModifiedDate":"2022-10-13"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2017-05-25"},{"lineNumber":199,"author":{"gitId":"pratham31012002"},"content":"                + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2022-10-13"},{"lineNumber":200,"author":{"gitId":"pratham31012002"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":203,"author":{"gitId":"pratham31012002"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2022-10-13"},{"lineNumber":204,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-05-25"},{"lineNumber":221,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":223,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":230,"author":{"gitId":"pratham31012002"},"content":"        // to be done.","lastModifiedDate":"2022-10-13"},{"lineNumber":231,"author":{"gitId":"pratham31012002"},"content":"        //        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2022-10-13"},{"lineNumber":232,"author":{"gitId":"pratham31012002"},"content":"        //        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2022-10-13"},{"lineNumber":233,"author":{"gitId":"pratham31012002"},"content":"        //","lastModifiedDate":"2022-10-13"},{"lineNumber":234,"author":{"gitId":"pratham31012002"},"content":"        //        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2022-10-13"},{"lineNumber":235,"author":{"gitId":"pratham31012002"},"content":"        //        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-13"},{"lineNumber":236,"author":{"gitId":"pratham31012002"},"content":"        //","lastModifiedDate":"2022-10-13"},{"lineNumber":237,"author":{"gitId":"pratham31012002"},"content":"        //        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-13"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":239,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"ytingtan":28,"emptygx":37,"pratham31012002":26,"-":148}},{"path":"src/test/java/seedu/clinkedin/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.logic.parser;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.logic.commands.FindCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.DetailsContainKeywordsPredicate;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"emptygx"},"content":"                new FindCommand(new DetailsContainKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"emptygx":7,"-":27}},{"path":"src/test/java/seedu/clinkedin/logic/parser/HelpCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"josephaedan"},"content":"package seedu.clinkedin.logic.parser;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":3,"author":{"gitId":"josephaedan"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-10-26"},{"lineNumber":4,"author":{"gitId":"josephaedan"},"content":"import static seedu.clinkedin.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"josephaedan"},"content":"import static seedu.clinkedin.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"josephaedan"},"content":"import static seedu.clinkedin.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"josephaedan"},"content":"import java.util.Map;","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"josephaedan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"josephaedan"},"content":"import seedu.clinkedin.logic.commands.HelpCommand;","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"josephaedan"},"content":"import seedu.clinkedin.logic.commands.ListCommand;","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"josephaedan"},"content":"public class HelpCommandParserTest {","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"josephaedan"},"content":"    private final HelpCommandParser parser \u003d new HelpCommandParser();","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"josephaedan"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"josephaedan"},"content":"    public void parse_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"josephaedan"},"content":"        assertThrows(NullPointerException.class, () -\u003e parser.parse(null));","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"josephaedan"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"josephaedan"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"josephaedan"},"content":"    public void parse_emptyArg_returnsDefaultHelpCommand() {","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"josephaedan"},"content":"        HelpCommand expectedHelpCommand \u003d new HelpCommand();","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"josephaedan"},"content":"        assertParseSuccess(parser, \"\", expectedHelpCommand);","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"josephaedan"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":28,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"josephaedan"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"josephaedan"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2022-10-26"},{"lineNumber":31,"author":{"gitId":"josephaedan"},"content":"        // No valid command word given","lastModifiedDate":"2022-10-26"},{"lineNumber":32,"author":{"gitId":"josephaedan"},"content":"        assertParseFailure(parser, \"This will fail\",","lastModifiedDate":"2022-10-26"},{"lineNumber":33,"author":{"gitId":"josephaedan"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-26"},{"lineNumber":34,"author":{"gitId":"josephaedan"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":35,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":36,"author":{"gitId":"josephaedan"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":37,"author":{"gitId":"josephaedan"},"content":"    public void parse_validArgs_returnsHelpCommand() {","lastModifiedDate":"2022-10-26"},{"lineNumber":38,"author":{"gitId":"josephaedan"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2022-10-26"},{"lineNumber":39,"author":{"gitId":"josephaedan"},"content":"        HelpCommand expectedHelpCommand \u003d new HelpCommand(ListCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-26"},{"lineNumber":40,"author":{"gitId":"josephaedan"},"content":"        assertParseSuccess(parser, \"list\", expectedHelpCommand);","lastModifiedDate":"2022-10-26"},{"lineNumber":41,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":42,"author":{"gitId":"josephaedan"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2022-10-26"},{"lineNumber":43,"author":{"gitId":"josephaedan"},"content":"        assertParseSuccess(parser, \" \\n \\tlist\\t\", expectedHelpCommand);","lastModifiedDate":"2022-10-26"},{"lineNumber":44,"author":{"gitId":"josephaedan"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":45,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":46,"author":{"gitId":"josephaedan"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":47,"author":{"gitId":"josephaedan"},"content":"    public void parse_everyValidCommand_returnsHelpCommand() {","lastModifiedDate":"2022-10-26"},{"lineNumber":48,"author":{"gitId":"josephaedan"},"content":"        try {","lastModifiedDate":"2022-10-26"},{"lineNumber":49,"author":{"gitId":"josephaedan"},"content":"            // Get list of all possible command words","lastModifiedDate":"2022-10-26"},{"lineNumber":50,"author":{"gitId":"josephaedan"},"content":"            Map\u003cString, String\u003e allCommandMessages \u003d CliSyntax.getAllCommandMessages();","lastModifiedDate":"2022-10-26"},{"lineNumber":51,"author":{"gitId":"josephaedan"},"content":"            // Create a help command for every possible command word","lastModifiedDate":"2022-10-26"},{"lineNumber":52,"author":{"gitId":"josephaedan"},"content":"            for (String commandWord : allCommandMessages.keySet()) {","lastModifiedDate":"2022-10-26"},{"lineNumber":53,"author":{"gitId":"josephaedan"},"content":"                // Assert that help command matches command\u0027s message usage","lastModifiedDate":"2022-10-26"},{"lineNumber":54,"author":{"gitId":"josephaedan"},"content":"                HelpCommand expectedHelpCommand \u003d new HelpCommand(allCommandMessages.get(commandWord));","lastModifiedDate":"2022-10-26"},{"lineNumber":55,"author":{"gitId":"josephaedan"},"content":"                assertParseSuccess(parser, commandWord, expectedHelpCommand);","lastModifiedDate":"2022-10-26"},{"lineNumber":56,"author":{"gitId":"josephaedan"},"content":"            }","lastModifiedDate":"2022-10-26"},{"lineNumber":57,"author":{"gitId":"josephaedan"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-10-26"},{"lineNumber":58,"author":{"gitId":"josephaedan"},"content":"            assert false;","lastModifiedDate":"2022-10-26"},{"lineNumber":59,"author":{"gitId":"josephaedan"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":60,"author":{"gitId":"josephaedan"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":61,"author":{"gitId":"josephaedan"},"content":"}","lastModifiedDate":"2022-10-26"}],"authorContributionMap":{"josephaedan":61}},{"path":"src/test/java/seedu/clinkedin/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.logic.parser;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.Address;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.Email;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.Name;","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.Phone;","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.tag.Tag;","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":147,"author":{"gitId":"pratham31012002"},"content":"        //        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":152,"author":{"gitId":"pratham31012002"},"content":"        //        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2022-10-10"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":158,"author":{"gitId":"pratham31012002"},"content":"        //        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2022-10-10"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"pratham31012002"},"content":"        //        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2022-10-10"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":175,"author":{"gitId":"pratham31012002"},"content":"        // assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2022-10-10"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":180,"author":{"gitId":"pratham31012002"},"content":"        // assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2022-10-10"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":185,"author":{"gitId":"pratham31012002"},"content":"        // Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2022-10-10"},{"lineNumber":186,"author":{"gitId":"pratham31012002"},"content":"        // Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2022-10-10"},{"lineNumber":187,"author":{"gitId":"pratham31012002"},"content":"        //","lastModifiedDate":"2022-10-10"},{"lineNumber":188,"author":{"gitId":"pratham31012002"},"content":"        // assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2022-10-10"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"emptygx":10,"pratham31012002":10,"-":170}},{"path":"src/test/java/seedu/clinkedin/logic/parser/ViewCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"josephaedan"},"content":"package seedu.clinkedin.logic.parser;","lastModifiedDate":"2022-10-28"},{"lineNumber":2,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":3,"author":{"gitId":"josephaedan"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-10-28"},{"lineNumber":4,"author":{"gitId":"josephaedan"},"content":"import static seedu.clinkedin.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-28"},{"lineNumber":5,"author":{"gitId":"josephaedan"},"content":"import static seedu.clinkedin.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-28"},{"lineNumber":6,"author":{"gitId":"josephaedan"},"content":"import static seedu.clinkedin.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-28"},{"lineNumber":7,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":8,"author":{"gitId":"josephaedan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-28"},{"lineNumber":9,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":10,"author":{"gitId":"josephaedan"},"content":"import seedu.clinkedin.commons.core.index.Index;","lastModifiedDate":"2022-10-28"},{"lineNumber":11,"author":{"gitId":"josephaedan"},"content":"import seedu.clinkedin.logic.commands.ViewCommand;","lastModifiedDate":"2022-10-28"},{"lineNumber":12,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":13,"author":{"gitId":"josephaedan"},"content":"public class ViewCommandParserTest {","lastModifiedDate":"2022-10-28"},{"lineNumber":14,"author":{"gitId":"josephaedan"},"content":"    private final ViewCommandParser parser \u003d new ViewCommandParser();","lastModifiedDate":"2022-10-28"},{"lineNumber":15,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":16,"author":{"gitId":"josephaedan"},"content":"    @Test","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"josephaedan"},"content":"    public void parse_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-28"},{"lineNumber":18,"author":{"gitId":"josephaedan"},"content":"        assertThrows(NullPointerException.class, () -\u003e parser.parse(null));","lastModifiedDate":"2022-10-28"},{"lineNumber":19,"author":{"gitId":"josephaedan"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":20,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":21,"author":{"gitId":"josephaedan"},"content":"    @Test","lastModifiedDate":"2022-10-28"},{"lineNumber":22,"author":{"gitId":"josephaedan"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2022-10-28"},{"lineNumber":23,"author":{"gitId":"josephaedan"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-28"},{"lineNumber":24,"author":{"gitId":"josephaedan"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":25,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":26,"author":{"gitId":"josephaedan"},"content":"    @Test","lastModifiedDate":"2022-10-28"},{"lineNumber":27,"author":{"gitId":"josephaedan"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2022-10-28"},{"lineNumber":28,"author":{"gitId":"josephaedan"},"content":"        // Additional information given","lastModifiedDate":"2022-10-28"},{"lineNumber":29,"author":{"gitId":"josephaedan"},"content":"        assertParseFailure(parser, \"1 Test\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-28"},{"lineNumber":30,"author":{"gitId":"josephaedan"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":31,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":32,"author":{"gitId":"josephaedan"},"content":"    @Test","lastModifiedDate":"2022-10-28"},{"lineNumber":33,"author":{"gitId":"josephaedan"},"content":"    public void parse_validArgs_returnsViewCommand() {","lastModifiedDate":"2022-10-28"},{"lineNumber":34,"author":{"gitId":"josephaedan"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2022-10-28"},{"lineNumber":35,"author":{"gitId":"josephaedan"},"content":"        ViewCommand expectedCommand \u003d new ViewCommand(Index.fromOneBased(1));","lastModifiedDate":"2022-10-28"},{"lineNumber":36,"author":{"gitId":"josephaedan"},"content":"        assertParseSuccess(parser, \"1\", expectedCommand);","lastModifiedDate":"2022-10-28"},{"lineNumber":37,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":38,"author":{"gitId":"josephaedan"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2022-10-28"},{"lineNumber":39,"author":{"gitId":"josephaedan"},"content":"        assertParseSuccess(parser, \" \\n \\t1 \", expectedCommand);","lastModifiedDate":"2022-10-28"},{"lineNumber":40,"author":{"gitId":"josephaedan"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":41,"author":{"gitId":"josephaedan"},"content":"}","lastModifiedDate":"2022-10-28"}],"authorContributionMap":{"josephaedan":41}},{"path":"src/test/java/seedu/clinkedin/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.model;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"agarwal-anjali"},"content":"import java.util.Map;","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"agarwal-anjali"},"content":"import seedu.clinkedin.logic.parser.Prefix;","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.Person;","lastModifiedDate":"2022-10-15"},{"lineNumber":24,"author":{"gitId":"agarwal-anjali"},"content":"import seedu.clinkedin.model.person.UniqueTagTypeMap;","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2022-10-15"},{"lineNumber":26,"author":{"gitId":"agarwal-anjali"},"content":"import seedu.clinkedin.model.tag.TagType;","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.testutil.PersonBuilder;","lastModifiedDate":"2022-10-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":91,"author":{"gitId":"josephaedan"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface","lastModifiedDate":"2022-10-07"},{"lineNumber":92,"author":{"gitId":"josephaedan"},"content":"     * constraints.","lastModifiedDate":"2022-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":105,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":106,"author":{"gitId":"agarwal-anjali"},"content":"        @Override","lastModifiedDate":"2022-10-26"},{"lineNumber":107,"author":{"gitId":"agarwal-anjali"},"content":"        public Map\u003cPrefix, TagType\u003e getPrefixMap() {","lastModifiedDate":"2022-10-26"},{"lineNumber":108,"author":{"gitId":"agarwal-anjali"},"content":"            return UniqueTagTypeMap.getPrefixMap();","lastModifiedDate":"2022-10-26"},{"lineNumber":109,"author":{"gitId":"agarwal-anjali"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":110,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":111,"author":{"gitId":"josephaedan"},"content":"        @Override","lastModifiedDate":"2022-10-07"},{"lineNumber":112,"author":{"gitId":"josephaedan"},"content":"        public int getCount() {","lastModifiedDate":"2022-10-07"},{"lineNumber":113,"author":{"gitId":"josephaedan"},"content":"            return persons.size();","lastModifiedDate":"2022-10-07"},{"lineNumber":114,"author":{"gitId":"josephaedan"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"agarwal-anjali":9,"emptygx":9,"josephaedan":7,"-":92}},{"path":"src/test/java/seedu/clinkedin/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.model;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.commons.core.GuiSettings;","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.testutil.AddressBookBuilder;","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"emptygx"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"clinkedin/book/file/path\"));","lastModifiedDate":"2022-10-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"emptygx"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/clinkedin/book/file/path\"));","lastModifiedDate":"2022-10-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"emptygx"},"content":"        Path path \u003d Paths.get(\"clinkedin/book/file/path\");","lastModifiedDate":"2022-10-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"emptygx"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":76,"author":{"gitId":"emptygx"},"content":"    public void commitAddressBook_addPerson_returnsTrue() {","lastModifiedDate":"2022-10-24"},{"lineNumber":77,"author":{"gitId":"emptygx"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).build();","lastModifiedDate":"2022-10-24"},{"lineNumber":78,"author":{"gitId":"emptygx"},"content":"        ModelManager editableModelManager \u003d new ModelManager(addressBook, new UserPrefs());","lastModifiedDate":"2022-10-24"},{"lineNumber":79,"author":{"gitId":"emptygx"},"content":"        editableModelManager.commitAddressBook();","lastModifiedDate":"2022-10-24"},{"lineNumber":80,"author":{"gitId":"emptygx"},"content":"        assertTrue(editableModelManager.canUndoAddressBook());","lastModifiedDate":"2022-10-24"},{"lineNumber":81,"author":{"gitId":"emptygx"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":82,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":83,"author":{"gitId":"emptygx"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":84,"author":{"gitId":"emptygx"},"content":"    public void undoAddressBook_addPerson_returnsFalse() {","lastModifiedDate":"2022-10-24"},{"lineNumber":85,"author":{"gitId":"emptygx"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).build();","lastModifiedDate":"2022-10-24"},{"lineNumber":86,"author":{"gitId":"emptygx"},"content":"        ModelManager editableModelManager \u003d new ModelManager(addressBook, new UserPrefs());","lastModifiedDate":"2022-10-24"},{"lineNumber":87,"author":{"gitId":"emptygx"},"content":"        editableModelManager.commitAddressBook();","lastModifiedDate":"2022-10-24"},{"lineNumber":88,"author":{"gitId":"emptygx"},"content":"        editableModelManager.undoAddressBook();","lastModifiedDate":"2022-10-24"},{"lineNumber":89,"author":{"gitId":"emptygx"},"content":"        assertFalse(editableModelManager.canUndoAddressBook());","lastModifiedDate":"2022-10-24"},{"lineNumber":90,"author":{"gitId":"emptygx"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":91,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":92,"author":{"gitId":"emptygx"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":93,"author":{"gitId":"emptygx"},"content":"    public void undoAddressBook_initialAddressBook_noChange() {","lastModifiedDate":"2022-10-24"},{"lineNumber":94,"author":{"gitId":"emptygx"},"content":"        ModelManager actualModelManager \u003d new ModelManager();","lastModifiedDate":"2022-10-24"},{"lineNumber":95,"author":{"gitId":"emptygx"},"content":"        actualModelManager.undoAddressBook();","lastModifiedDate":"2022-10-24"},{"lineNumber":96,"author":{"gitId":"emptygx"},"content":"        assertEquals(new AddressBook(), actualModelManager.getAddressBook());","lastModifiedDate":"2022-10-24"},{"lineNumber":97,"author":{"gitId":"emptygx"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":98,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":99,"author":{"gitId":"emptygx"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":100,"author":{"gitId":"emptygx"},"content":"    public void redoAddressBook_addPerson_returnsFalse() {","lastModifiedDate":"2022-10-24"},{"lineNumber":101,"author":{"gitId":"emptygx"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).build();","lastModifiedDate":"2022-10-24"},{"lineNumber":102,"author":{"gitId":"emptygx"},"content":"        ModelManager editableModelManager \u003d new ModelManager(addressBook, new UserPrefs());","lastModifiedDate":"2022-10-24"},{"lineNumber":103,"author":{"gitId":"emptygx"},"content":"        editableModelManager.commitAddressBook();","lastModifiedDate":"2022-10-24"},{"lineNumber":104,"author":{"gitId":"emptygx"},"content":"        editableModelManager.undoAddressBook();","lastModifiedDate":"2022-10-24"},{"lineNumber":105,"author":{"gitId":"emptygx"},"content":"        editableModelManager.redoAddressBook();","lastModifiedDate":"2022-10-24"},{"lineNumber":106,"author":{"gitId":"emptygx"},"content":"        assertFalse(editableModelManager.canRedoAddressBook());","lastModifiedDate":"2022-10-24"},{"lineNumber":107,"author":{"gitId":"emptygx"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":108,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":109,"author":{"gitId":"emptygx"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":110,"author":{"gitId":"emptygx"},"content":"    public void redoAddressBook_initialAddressBook_noChange() {","lastModifiedDate":"2022-10-24"},{"lineNumber":111,"author":{"gitId":"emptygx"},"content":"        ModelManager actualModelManager \u003d new ModelManager();","lastModifiedDate":"2022-10-24"},{"lineNumber":112,"author":{"gitId":"emptygx"},"content":"        actualModelManager.redoAddressBook();","lastModifiedDate":"2022-10-24"},{"lineNumber":113,"author":{"gitId":"emptygx"},"content":"        assertEquals(new AddressBook(), actualModelManager.getAddressBook());","lastModifiedDate":"2022-10-24"},{"lineNumber":114,"author":{"gitId":"emptygx"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":115,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"emptygx":52,"-":121}},{"path":"src/test/java/seedu/clinkedin/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.model;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"emptygx":2,"-":19}},{"path":"src/test/java/seedu/clinkedin/model/VersionedAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.model;","lastModifiedDate":"2022-10-24"},{"lineNumber":2,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":3,"author":{"gitId":"emptygx"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-24"},{"lineNumber":4,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-24"},{"lineNumber":5,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-10-24"},{"lineNumber":6,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":7,"author":{"gitId":"emptygx"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-24"},{"lineNumber":8,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":9,"author":{"gitId":"emptygx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-24"},{"lineNumber":10,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":11,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.commons.exceptions.CannotRedoAddressBookException;","lastModifiedDate":"2022-10-24"},{"lineNumber":12,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.commons.exceptions.CannotUndoAddressBookException;","lastModifiedDate":"2022-10-24"},{"lineNumber":13,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":14,"author":{"gitId":"emptygx"},"content":"class VersionedAddressBookTest {","lastModifiedDate":"2022-10-24"},{"lineNumber":15,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":16,"author":{"gitId":"emptygx"},"content":"    private final VersionedAddressBook addressBook \u003d new VersionedAddressBook(new AddressBook());","lastModifiedDate":"2022-10-24"},{"lineNumber":17,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":18,"author":{"gitId":"emptygx"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":19,"author":{"gitId":"emptygx"},"content":"    public void constructor() {","lastModifiedDate":"2022-10-24"},{"lineNumber":20,"author":{"gitId":"emptygx"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2022-10-24"},{"lineNumber":21,"author":{"gitId":"emptygx"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":22,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":23,"author":{"gitId":"emptygx"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":24,"author":{"gitId":"emptygx"},"content":"    public void constructor_withNonEmptyAddressBookAndEmptyStateList() {","lastModifiedDate":"2022-10-24"},{"lineNumber":25,"author":{"gitId":"emptygx"},"content":"        VersionedAddressBook versionedAddressBook \u003d new VersionedAddressBook(getTypicalAddressBook(),","lastModifiedDate":"2022-10-24"},{"lineNumber":26,"author":{"gitId":"emptygx"},"content":"                Collections.emptyList());","lastModifiedDate":"2022-10-24"},{"lineNumber":27,"author":{"gitId":"emptygx"},"content":"        assertEquals(versionedAddressBook.getPersonList(), getTypicalAddressBook().getPersonList());","lastModifiedDate":"2022-10-24"},{"lineNumber":28,"author":{"gitId":"emptygx"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":29,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":30,"author":{"gitId":"emptygx"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":31,"author":{"gitId":"emptygx"},"content":"    public void constructor_withEmptyStateList() {","lastModifiedDate":"2022-10-24"},{"lineNumber":32,"author":{"gitId":"emptygx"},"content":"        VersionedAddressBook versionedAddressBook \u003d new VersionedAddressBook(Collections.emptyList());","lastModifiedDate":"2022-10-24"},{"lineNumber":33,"author":{"gitId":"emptygx"},"content":"        assertEquals(Collections.emptyList(), versionedAddressBook.getPersonList());","lastModifiedDate":"2022-10-24"},{"lineNumber":34,"author":{"gitId":"emptygx"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":35,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":36,"author":{"gitId":"emptygx"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":37,"author":{"gitId":"emptygx"},"content":"    void commit_newAddressBook_noStatesRemovedCurrentStateSaved() {","lastModifiedDate":"2022-10-24"},{"lineNumber":38,"author":{"gitId":"emptygx"},"content":"        addressBook.commit();","lastModifiedDate":"2022-10-24"},{"lineNumber":39,"author":{"gitId":"emptygx"},"content":"        assertEquals(addressBook.getAddressBookStateList().size(), 2);","lastModifiedDate":"2022-10-24"},{"lineNumber":40,"author":{"gitId":"emptygx"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":41,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":42,"author":{"gitId":"emptygx"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":43,"author":{"gitId":"emptygx"},"content":"    void undo_initialState_throwsCannotUndoAddressBookException() {","lastModifiedDate":"2022-10-24"},{"lineNumber":44,"author":{"gitId":"emptygx"},"content":"        assertThrows(CannotUndoAddressBookException.class, () -\u003e addressBook.undo());","lastModifiedDate":"2022-10-24"},{"lineNumber":45,"author":{"gitId":"emptygx"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":46,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":47,"author":{"gitId":"emptygx"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":48,"author":{"gitId":"emptygx"},"content":"    void redo_initialState_throwsCannotRedoAddressBookException() {","lastModifiedDate":"2022-10-24"},{"lineNumber":49,"author":{"gitId":"emptygx"},"content":"        assertThrows(CannotRedoAddressBookException.class, () -\u003e addressBook.redo());","lastModifiedDate":"2022-10-24"},{"lineNumber":50,"author":{"gitId":"emptygx"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":51,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":52,"author":{"gitId":"emptygx"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":53,"author":{"gitId":"emptygx"},"content":"    void canUndo_initialState_returnsFalse() {","lastModifiedDate":"2022-10-24"},{"lineNumber":54,"author":{"gitId":"emptygx"},"content":"        assertEquals(addressBook.canUndo(), false);","lastModifiedDate":"2022-10-24"},{"lineNumber":55,"author":{"gitId":"emptygx"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":56,"author":{"gitId":"emptygx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":57,"author":{"gitId":"emptygx"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":58,"author":{"gitId":"emptygx"},"content":"    void canRedo_initialState_returnsFalse() {","lastModifiedDate":"2022-10-24"},{"lineNumber":59,"author":{"gitId":"emptygx"},"content":"        assertEquals(addressBook.canRedo(), false);","lastModifiedDate":"2022-10-24"},{"lineNumber":60,"author":{"gitId":"emptygx"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":61,"author":{"gitId":"emptygx"},"content":"}","lastModifiedDate":"2022-10-24"}],"authorContributionMap":{"emptygx":61}},{"path":"src/test/java/seedu/clinkedin/model/person/AddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.model.person;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class AddressTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Address(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidAddress \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Address(invalidAddress));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidAddress() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"emptygx"},"content":"        // null clinkedin","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Address.isValidAddress(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // valid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"-\")); // one character","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"emptygx"},"content":"        assertTrue(Address.isValidAddress(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\")); // long clinkedin","lastModifiedDate":"2022-10-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"emptygx":4,"-":32}},{"path":"src/test/java/seedu/clinkedin/model/person/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.model.person;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"emptygx":2,"-":66}},{"path":"src/test/java/seedu/clinkedin/model/person/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.model.person;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.testutil.PersonBuilder;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"emptygx"},"content":"        // Keywords match phone, email and clinkedin, but does not match name","lastModifiedDate":"2022-10-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"emptygx":3,"-":72}},{"path":"src/test/java/seedu/clinkedin/model/person/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.model.person;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"emptygx":2,"-":38}},{"path":"src/test/java/seedu/clinkedin/model/person/NoteTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.model.person;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"josephaedan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"josephaedan"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"josephaedan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"josephaedan"},"content":"public class NoteTest {","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"josephaedan"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"josephaedan"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"josephaedan"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Note(null));","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"josephaedan"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"josephaedan"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"josephaedan"},"content":"    public void constructor_validNote_success() {","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"josephaedan"},"content":"        String validNote \u003d \"This is a valid note\";","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"josephaedan"},"content":"        assertEquals(new Note(validNote).getClass(), Note.class);","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"josephaedan"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"josephaedan"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"josephaedan"},"content":"    public void equals_sameNote_success() {","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"josephaedan"},"content":"        String note \u003d \"This is a note\";","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"josephaedan"},"content":"        assertEquals(new Note(note), new Note(note));","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"josephaedan"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"josephaedan"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"josephaedan"},"content":"    public void equals_differentNote_success() {","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"josephaedan"},"content":"        String note1 \u003d \"This is a note\";","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"josephaedan"},"content":"        String note2 \u003d \"This is another note\";","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"josephaedan"},"content":"        assertEquals(new Note(note1).equals(new Note(note2)), false);","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"josephaedan"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"josephaedan"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"josephaedan"},"content":"    public void equals_differentNotesSameValues_success() {","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"josephaedan"},"content":"        String note1 \u003d \"This is a note\";","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"josephaedan"},"content":"        String note2 \u003d \"This is a note\";","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"josephaedan"},"content":"        assertEquals(new Note(note1).equals(new Note(note2)), true);","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"josephaedan"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"josephaedan"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"josephaedan"},"content":"    public void value_success() {","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"josephaedan"},"content":"        String note \u003d \"This is a note\";","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"josephaedan"},"content":"        assertEquals(new Note(note).value, note);","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"josephaedan"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"josephaedan"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"emptygx":1,"josephaedan":44}},{"path":"src/test/java/seedu/clinkedin/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.model.person;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"ytingtan"},"content":"import static seedu.clinkedin.logic.commands.CommandTestUtil.VALID_NOTE_BOB;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"ytingtan"},"content":"import static seedu.clinkedin.logic.commands.CommandTestUtil.VALID_STATUS_BOB;","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.testutil.TypicalPersons.BOB;","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.testutil.PersonBuilder;","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"pratham31012002"},"content":"        // might want to change","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":26,"author":{"gitId":"pratham31012002"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().clear());","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2020-12-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2022-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":93,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":94,"author":{"gitId":"ytingtan"},"content":"        // different status -\u003e returns false","lastModifiedDate":"2022-10-16"},{"lineNumber":95,"author":{"gitId":"ytingtan"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withStatus(VALID_STATUS_BOB).build();","lastModifiedDate":"2022-10-16"},{"lineNumber":96,"author":{"gitId":"ytingtan"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2022-10-16"},{"lineNumber":97,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":98,"author":{"gitId":"ytingtan"},"content":"        // different note -\u003e returns false","lastModifiedDate":"2022-10-16"},{"lineNumber":99,"author":{"gitId":"ytingtan"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withNote(VALID_NOTE_BOB).build();","lastModifiedDate":"2022-10-16"},{"lineNumber":100,"author":{"gitId":"ytingtan"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2022-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"ytingtan":10,"emptygx":10,"pratham31012002":2,"-":80}},{"path":"src/test/java/seedu/clinkedin/model/person/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.model.person;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"emptygx":2,"-":38}},{"path":"src/test/java/seedu/clinkedin/model/person/RatingTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ytingtan"},"content":"package seedu.clinkedin.model.person;","lastModifiedDate":"2022-10-18"},{"lineNumber":2,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":3,"author":{"gitId":"ytingtan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-18"},{"lineNumber":4,"author":{"gitId":"ytingtan"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-10-18"},{"lineNumber":5,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":6,"author":{"gitId":"ytingtan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-18"},{"lineNumber":7,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":8,"author":{"gitId":"ytingtan"},"content":"public class RatingTest {","lastModifiedDate":"2022-10-18"},{"lineNumber":9,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":10,"author":{"gitId":"ytingtan"},"content":"    @Test","lastModifiedDate":"2022-10-18"},{"lineNumber":11,"author":{"gitId":"ytingtan"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-18"},{"lineNumber":12,"author":{"gitId":"ytingtan"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Rating(null));","lastModifiedDate":"2022-10-18"},{"lineNumber":13,"author":{"gitId":"ytingtan"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":14,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":15,"author":{"gitId":"ytingtan"},"content":"    @Test","lastModifiedDate":"2022-10-18"},{"lineNumber":16,"author":{"gitId":"ytingtan"},"content":"    public void constructor_validNote_success() {","lastModifiedDate":"2022-10-18"},{"lineNumber":17,"author":{"gitId":"ytingtan"},"content":"        String validRating \u003d \"4\";","lastModifiedDate":"2022-10-18"},{"lineNumber":18,"author":{"gitId":"ytingtan"},"content":"        assertEquals(new Rating(validRating).getClass(), Rating.class);","lastModifiedDate":"2022-10-18"},{"lineNumber":19,"author":{"gitId":"ytingtan"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":20,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":21,"author":{"gitId":"ytingtan"},"content":"    @Test","lastModifiedDate":"2022-10-18"},{"lineNumber":22,"author":{"gitId":"ytingtan"},"content":"    public void equals_sameNote_success() {","lastModifiedDate":"2022-10-18"},{"lineNumber":23,"author":{"gitId":"ytingtan"},"content":"        String rating \u003d \"4\";","lastModifiedDate":"2022-10-18"},{"lineNumber":24,"author":{"gitId":"ytingtan"},"content":"        assertEquals(new Rating(rating), new Rating(rating));","lastModifiedDate":"2022-10-18"},{"lineNumber":25,"author":{"gitId":"ytingtan"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":26,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":27,"author":{"gitId":"ytingtan"},"content":"    @Test","lastModifiedDate":"2022-10-18"},{"lineNumber":28,"author":{"gitId":"ytingtan"},"content":"    public void equals_differentNote_success() {","lastModifiedDate":"2022-10-18"},{"lineNumber":29,"author":{"gitId":"ytingtan"},"content":"        String rating1 \u003d \"3\";","lastModifiedDate":"2022-10-18"},{"lineNumber":30,"author":{"gitId":"ytingtan"},"content":"        String rating2 \u003d \"5\";","lastModifiedDate":"2022-10-18"},{"lineNumber":31,"author":{"gitId":"ytingtan"},"content":"        assertEquals(new Rating(rating1).equals(new Rating(rating2)), false);","lastModifiedDate":"2022-10-18"},{"lineNumber":32,"author":{"gitId":"ytingtan"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":33,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":34,"author":{"gitId":"ytingtan"},"content":"    @Test","lastModifiedDate":"2022-10-18"},{"lineNumber":35,"author":{"gitId":"ytingtan"},"content":"    public void equals_differentNotesSameValues_success() {","lastModifiedDate":"2022-10-18"},{"lineNumber":36,"author":{"gitId":"ytingtan"},"content":"        String rating1 \u003d \"6\";","lastModifiedDate":"2022-10-18"},{"lineNumber":37,"author":{"gitId":"ytingtan"},"content":"        String rating2 \u003d \"6\";","lastModifiedDate":"2022-10-18"},{"lineNumber":38,"author":{"gitId":"ytingtan"},"content":"        assertEquals(new Rating(rating1).equals(new Rating(rating2)), true);","lastModifiedDate":"2022-10-18"},{"lineNumber":39,"author":{"gitId":"ytingtan"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":40,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":41,"author":{"gitId":"ytingtan"},"content":"    @Test","lastModifiedDate":"2022-10-18"},{"lineNumber":42,"author":{"gitId":"ytingtan"},"content":"    public void value_success() {","lastModifiedDate":"2022-10-18"},{"lineNumber":43,"author":{"gitId":"ytingtan"},"content":"        String rating \u003d \"1\";","lastModifiedDate":"2022-10-18"},{"lineNumber":44,"author":{"gitId":"ytingtan"},"content":"        assertEquals(new Rating(rating).toString(), rating);","lastModifiedDate":"2022-10-18"},{"lineNumber":45,"author":{"gitId":"ytingtan"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":46,"author":{"gitId":"ytingtan"},"content":"}","lastModifiedDate":"2022-10-18"}],"authorContributionMap":{"ytingtan":46}},{"path":"src/test/java/seedu/clinkedin/model/person/StatusTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ytingtan"},"content":"package seedu.clinkedin.model.person;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"ytingtan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"ytingtan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"ytingtan"},"content":"import static seedu.clinkedin.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"ytingtan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"ytingtan"},"content":"public class StatusTest {","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"ytingtan"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"ytingtan"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"ytingtan"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Status(null));","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"ytingtan"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"ytingtan"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"ytingtan"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"ytingtan"},"content":"        String invalidStatus \u003d \"\";","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"ytingtan"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Status(invalidStatus));","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"ytingtan"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"ytingtan"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"ytingtan"},"content":"    public void isValidStatus() {","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"ytingtan"},"content":"        // null name","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"ytingtan"},"content":"        assertThrows(NullPointerException.class, () -\u003e Status.isValidStatus(null));","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"ytingtan"},"content":"        // invalid name","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"ytingtan"},"content":"        assertFalse(Status.isValidStatus(\"\")); // empty string","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"ytingtan"},"content":"        assertFalse(Status.isValidStatus(\" \")); // spaces only","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"ytingtan"},"content":"        assertFalse(Status.isValidStatus(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"ytingtan"},"content":"        assertFalse(Status.isValidStatus(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2022-10-16"},{"lineNumber":32,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"ytingtan"},"content":"        // valid name","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"ytingtan"},"content":"        assertTrue(Status.isValidStatus(\"application received\")); // alphabets only","lastModifiedDate":"2022-10-16"},{"lineNumber":35,"author":{"gitId":"ytingtan"},"content":"        assertTrue(Status.isValidStatus(\"12345\")); // numbers only","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"ytingtan"},"content":"        assertTrue(Status.isValidStatus(\"2nd round oa\")); // alphanumeric characters","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"ytingtan"},"content":"        assertTrue(Status.isValidStatus(\"Application Received\")); // with capital letters","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"ytingtan"},"content":"        assertTrue(Status.isValidStatus(\"Accepted but applicant wants to negotiate compensation package\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":39,"author":{"gitId":"ytingtan"},"content":"        // long names","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"ytingtan"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":41,"author":{"gitId":"ytingtan"},"content":"}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"ytingtan":41}},{"path":"src/test/java/seedu/clinkedin/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.model.person;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.testutil.TypicalPersons.BOB;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.testutil.PersonBuilder;","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":170,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"emptygx":9,"-":161}},{"path":"src/test/java/seedu/clinkedin/model/tag/TagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.model.tag;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":3,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class TagTest {","lastModifiedDate":"2017-12-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Tag(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        String invalidTagName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidTagName));","lastModifiedDate":"2019-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void isValidTagName() {","lastModifiedDate":"2017-12-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null tag name","lastModifiedDate":"2017-12-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Tag.isValidTagName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-12-04"}],"authorContributionMap":{"emptygx":2,"-":24}},{"path":"src/test/java/seedu/clinkedin/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.storage;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"pratham31012002"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"pratham31012002"},"content":"import java.util.List;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"agarwal-anjali"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-23"},{"lineNumber":11,"author":{"gitId":"pratham31012002"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.Address;","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.Email;","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.Name;","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.Phone;","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.Status;","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"pratham31012002"},"content":"    // to be done","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"pratham31012002"},"content":"    //    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"ytingtan"},"content":"    private static final String INVALID_STATUS \u003d \"App!@\";","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"pratham31012002"},"content":"    //    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"pratham31012002"},"content":"    //            .map(JsonAdaptedTag::new)","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"pratham31012002"},"content":"    //            .collect(Collectors.toList());","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"pratham31012002"},"content":"    //    to be changed.","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"pratham31012002"},"content":"    // to be changed","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"pratham31012002"},"content":"    private static final List\u003cList\u003cJsonAdaptedTag\u003e\u003e VALID_TAGS \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"josephaedan"},"content":"    private static final String VALID_NOTE \u003d BENSON.getNote().toString();","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"ytingtan"},"content":"    private static final String VALID_STATUS \u003d BENSON.getStatus().toString();","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"ytingtan"},"content":"    private static final String VALID_RATING \u003d BENSON.getRating().toString();","lastModifiedDate":"2022-10-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"agarwal-anjali"},"content":"    private static final List\u003cJsonAdaptedLink\u003e VALID_LINKS \u003d BENSON.getLinks().stream()","lastModifiedDate":"2022-10-23"},{"lineNumber":44,"author":{"gitId":"agarwal-anjali"},"content":"            .map(JsonAdaptedLink::new).collect(Collectors.toList());","lastModifiedDate":"2022-10-23"},{"lineNumber":45,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"pratham31012002"},"content":"        // to be implemented.","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"pratham31012002"},"content":"        //        JsonAdaptedPerson person \u003d","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"pratham31012002"},"content":"        //                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2022-10-09"},{"lineNumber":57,"author":{"gitId":"pratham31012002"},"content":"        //        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-10-09"},{"lineNumber":58,"author":{"gitId":"pratham31012002"},"content":"        //        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-10-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"josephaedan"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS, VALID_STATUS,","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"ytingtan"},"content":"                        VALID_NOTE, VALID_RATING, VALID_LINKS);","lastModifiedDate":"2022-10-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"pratham31012002"},"content":"        // to be implemented.","lastModifiedDate":"2022-10-09"},{"lineNumber":69,"author":{"gitId":"pratham31012002"},"content":"        // JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2022-10-09"},{"lineNumber":70,"author":{"gitId":"pratham31012002"},"content":"        // String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2022-10-09"},{"lineNumber":71,"author":{"gitId":"pratham31012002"},"content":"        // assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-10-09"},{"lineNumber":72,"author":{"gitId":"ytingtan"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2022-10-09"},{"lineNumber":73,"author":{"gitId":"ytingtan"},"content":"                VALID_TAGS, VALID_STATUS, VALID_NOTE, VALID_RATING, VALID_LINKS);","lastModifiedDate":"2022-10-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"pratham31012002"},"content":"        // to be implemented.","lastModifiedDate":"2022-10-09"},{"lineNumber":81,"author":{"gitId":"pratham31012002"},"content":"        // JsonAdaptedPerson person \u003d","lastModifiedDate":"2022-10-09"},{"lineNumber":82,"author":{"gitId":"pratham31012002"},"content":"        //         new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2022-10-09"},{"lineNumber":83,"author":{"gitId":"pratham31012002"},"content":"        // String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-10-09"},{"lineNumber":84,"author":{"gitId":"pratham31012002"},"content":"        // assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-10-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"josephaedan"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS, VALID_STATUS,","lastModifiedDate":"2022-10-12"},{"lineNumber":87,"author":{"gitId":"ytingtan"},"content":"                        VALID_NOTE, VALID_RATING, VALID_LINKS);","lastModifiedDate":"2022-10-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"pratham31012002"},"content":"        // to be implemented.","lastModifiedDate":"2022-10-09"},{"lineNumber":95,"author":{"gitId":"pratham31012002"},"content":"        // JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2022-10-09"},{"lineNumber":96,"author":{"gitId":"pratham31012002"},"content":"        // String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2022-10-09"},{"lineNumber":97,"author":{"gitId":"pratham31012002"},"content":"        // assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-10-09"},{"lineNumber":98,"author":{"gitId":"ytingtan"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2022-10-09"},{"lineNumber":99,"author":{"gitId":"ytingtan"},"content":"                VALID_TAGS, VALID_STATUS, VALID_NOTE, VALID_RATING, VALID_LINKS);","lastModifiedDate":"2022-10-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"pratham31012002"},"content":"        // to be implemented.","lastModifiedDate":"2022-10-09"},{"lineNumber":107,"author":{"gitId":"pratham31012002"},"content":"        // JsonAdaptedPerson person \u003d","lastModifiedDate":"2022-10-09"},{"lineNumber":108,"author":{"gitId":"pratham31012002"},"content":"        //         new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2022-10-09"},{"lineNumber":109,"author":{"gitId":"pratham31012002"},"content":"        // String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-10-09"},{"lineNumber":110,"author":{"gitId":"pratham31012002"},"content":"        // assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-10-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"josephaedan"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS, VALID_TAGS, VALID_STATUS,","lastModifiedDate":"2022-10-12"},{"lineNumber":113,"author":{"gitId":"ytingtan"},"content":"                        VALID_NOTE, VALID_RATING, VALID_LINKS);","lastModifiedDate":"2022-10-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"pratham31012002"},"content":"        // to be implemented.","lastModifiedDate":"2022-10-09"},{"lineNumber":121,"author":{"gitId":"pratham31012002"},"content":"        // JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2022-10-09"},{"lineNumber":122,"author":{"gitId":"pratham31012002"},"content":"        // String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2022-10-09"},{"lineNumber":123,"author":{"gitId":"pratham31012002"},"content":"        // assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-10-09"},{"lineNumber":124,"author":{"gitId":"ytingtan"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS,","lastModifiedDate":"2022-10-09"},{"lineNumber":125,"author":{"gitId":"ytingtan"},"content":"                VALID_TAGS, VALID_STATUS, VALID_NOTE, VALID_RATING, VALID_LINKS);","lastModifiedDate":"2022-10-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":132,"author":{"gitId":"pratham31012002"},"content":"        // to be implemented.","lastModifiedDate":"2022-10-09"},{"lineNumber":133,"author":{"gitId":"pratham31012002"},"content":"        // JsonAdaptedPerson person \u003d","lastModifiedDate":"2022-10-09"},{"lineNumber":134,"author":{"gitId":"pratham31012002"},"content":"        //         new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2022-10-09"},{"lineNumber":135,"author":{"gitId":"pratham31012002"},"content":"        // String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-10-09"},{"lineNumber":136,"author":{"gitId":"pratham31012002"},"content":"        // assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-10-09"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":138,"author":{"gitId":"josephaedan"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS, VALID_TAGS, VALID_STATUS,","lastModifiedDate":"2022-10-12"},{"lineNumber":139,"author":{"gitId":"ytingtan"},"content":"                        VALID_NOTE, VALID_RATING, VALID_LINKS);","lastModifiedDate":"2022-10-25"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":146,"author":{"gitId":"pratham31012002"},"content":"        // to be implemented.","lastModifiedDate":"2022-10-09"},{"lineNumber":147,"author":{"gitId":"pratham31012002"},"content":"        // JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null, VALID_TAGS);","lastModifiedDate":"2022-10-09"},{"lineNumber":148,"author":{"gitId":"pratham31012002"},"content":"        // String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2022-10-09"},{"lineNumber":149,"author":{"gitId":"pratham31012002"},"content":"        // assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-10-09"},{"lineNumber":150,"author":{"gitId":"ytingtan"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null,","lastModifiedDate":"2022-10-09"},{"lineNumber":151,"author":{"gitId":"ytingtan"},"content":"                VALID_TAGS, VALID_STATUS, VALID_NOTE, VALID_RATING, VALID_LINKS);","lastModifiedDate":"2022-10-25"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":158,"author":{"gitId":"pratham31012002"},"content":"        // to be implemented.","lastModifiedDate":"2022-10-09"},{"lineNumber":159,"author":{"gitId":"pratham31012002"},"content":"        // List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2022-10-09"},{"lineNumber":160,"author":{"gitId":"pratham31012002"},"content":"        // invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2022-10-09"},{"lineNumber":161,"author":{"gitId":"pratham31012002"},"content":"        // JsonAdaptedPerson person \u003d","lastModifiedDate":"2022-10-09"},{"lineNumber":162,"author":{"gitId":"pratham31012002"},"content":"        //         new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, invalidTags);","lastModifiedDate":"2022-10-09"},{"lineNumber":163,"author":{"gitId":"pratham31012002"},"content":"        // assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2022-10-09"},{"lineNumber":164,"author":{"gitId":"pratham31012002"},"content":"        // List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2022-10-13"},{"lineNumber":165,"author":{"gitId":"pratham31012002"},"content":"        // invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2022-10-13"},{"lineNumber":166,"author":{"gitId":"pratham31012002"},"content":"        // JsonAdaptedPerson person \u003d","lastModifiedDate":"2022-10-13"},{"lineNumber":167,"author":{"gitId":"pratham31012002"},"content":"        //         new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, invalidTags, VALID_STATUS,","lastModifiedDate":"2022-10-13"},{"lineNumber":168,"author":{"gitId":"pratham31012002"},"content":"        //                 VALID_NOTE);","lastModifiedDate":"2022-10-13"},{"lineNumber":169,"author":{"gitId":"pratham31012002"},"content":"        // assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2022-10-13"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":172,"author":{"gitId":"ytingtan"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":173,"author":{"gitId":"ytingtan"},"content":"    public void toModelType_invalidStatus_throwsIllegalValueException() {","lastModifiedDate":"2022-10-09"},{"lineNumber":174,"author":{"gitId":"ytingtan"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2022-10-09"},{"lineNumber":175,"author":{"gitId":"josephaedan"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS, INVALID_STATUS,","lastModifiedDate":"2022-10-12"},{"lineNumber":176,"author":{"gitId":"ytingtan"},"content":"                        VALID_NOTE, VALID_RATING, VALID_LINKS);","lastModifiedDate":"2022-10-25"},{"lineNumber":177,"author":{"gitId":"ytingtan"},"content":"        String expectedMessage \u003d Status.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-10-09"},{"lineNumber":178,"author":{"gitId":"ytingtan"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-10-09"},{"lineNumber":179,"author":{"gitId":"ytingtan"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"agarwal-anjali":4,"ytingtan":22,"emptygx":10,"pratham31012002":59,"josephaedan":6,"-":79}},{"path":"src/test/java/seedu/clinkedin/storage/JsonAddressBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.storage;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.testutil.TypicalPersons.HOON;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.testutil.TypicalPersons.IDA;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.AddressBook;","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorageTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonAddressBookStorageTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readAddressBook(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private java.util.Optional\u003cReadOnlyAddressBook\u003e readAddressBook(String filePath) throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return new JsonAddressBookStorage(Paths.get(filePath)).readAddressBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(readAddressBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"notJsonFormatAddressBook.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidPersonAddressBook_throwDataConversionException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidPersonAddressBook.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidAndValidPersonAddressBook_throwDataConversionException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidAndValidPersonAddressBook.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage jsonAddressBookStorage \u003d new JsonAddressBookStorage(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        original.addPerson(HOON);","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        original.removePerson(ALICE);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        original.addPerson(IDA);","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook().get(); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void saveAddressBook(ReadOnlyAddressBook addressBook, String filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            new JsonAddressBookStorage(Paths.get(filePath))","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                    .saveAddressBook(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(new AddressBook(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"emptygx":9,"-":101}},{"path":"src/test/java/seedu/clinkedin/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.storage;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.commons.util.JsonUtil;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.AddressBook;","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.testutil.TypicalPersons;","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        AddressBook typicalPersonsAddressBook \u003d TypicalPersons.getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(addressBookFromFile, typicalPersonsAddressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"emptygx":6,"-":41}},{"path":"src/test/java/seedu/clinkedin/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.storage;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.commons.core.GuiSettings;","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.UserPrefs;","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"addressbook.json\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"emptygx":5,"-":118}},{"path":"src/test/java/seedu/clinkedin/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.storage;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.commons.core.GuiSettings;","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.AddressBook;","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.UserPrefs;","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"emptygx":6,"-":62}},{"path":"src/test/java/seedu/clinkedin/testutil/AddressBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.testutil;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.AddressBook;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.Person;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A utility class to help with building Addressbook objects.","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" *     {@code AddressBook ab \u003d new AddressBookBuilder().withPerson(\"John\", \"Doe\").build();}","lastModifiedDate":"2018-03-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AddressBookBuilder {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private AddressBook addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public AddressBookBuilder() {","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        addressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public AddressBookBuilder(AddressBook addressBook) {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.addressBook \u003d addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Adds a new {@code Person} to the {@code AddressBook} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public AddressBookBuilder withPerson(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2016-09-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public AddressBook build() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"emptygx":3,"-":31}},{"path":"src/test/java/seedu/clinkedin/testutil/Assert.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.testutil;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2019-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.function.Executable;","lastModifiedDate":"2019-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A set of assertion methods useful for writing tests.","lastModifiedDate":"2017-07-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Assert {","lastModifiedDate":"2017-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception.","lastModifiedDate":"2019-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This is a wrapper method that invokes {@link Assertions#assertThrows(Class, Executable)}, to maintain consistency","lastModifiedDate":"2019-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * with our custom {@link #assertThrows(Class, String, Executable)} method.","lastModifiedDate":"2019-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * To standardize API calls in this project, users should use this method instead of","lastModifiedDate":"2019-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Assertions#assertThrows(Class, Executable)}.","lastModifiedDate":"2019-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception with the {@code expectedMessage}.","lastModifiedDate":"2019-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * If there\u0027s no need for the verification of the exception\u0027s error message, call","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * {@link #assertThrows(Class, Executable)} instead.","lastModifiedDate":"2019-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @see #assertThrows(Class, Executable)","lastModifiedDate":"2019-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, String expectedMessage,","lastModifiedDate":"2019-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Throwable thrownException \u003d Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedMessage, thrownException.getMessage());","lastModifiedDate":"2019-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-17"}],"authorContributionMap":{"emptygx":1,"-":33}},{"path":"src/test/java/seedu/clinkedin/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.testutil;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.Address;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.Email;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.Name;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.Note;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.Person;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.Phone;","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"ytingtan"},"content":"import seedu.clinkedin.model.person.Rating;","lastModifiedDate":"2022-10-17"},{"lineNumber":15,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.Status;","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.UniqueTagTypeMap;","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.tag.Tag;","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":43,"author":{"gitId":"pratham31012002"},"content":"        //        descriptor.setTags(person.getTags());","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"pratham31012002"},"content":"        //        to be changed.","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"pratham31012002"},"content":"        UniqueTagTypeMap tagTypeMap \u003d new UniqueTagTypeMap();","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"pratham31012002"},"content":"        tagTypeMap.setTagTypeMap(person.getTags());","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"pratham31012002"},"content":"        descriptor.setOldTagTypeMap(tagTypeMap);","lastModifiedDate":"2022-10-13"},{"lineNumber":48,"author":{"gitId":"pratham31012002"},"content":"        descriptor.setNewTagTypeMap(tagTypeMap);","lastModifiedDate":"2022-10-13"},{"lineNumber":49,"author":{"gitId":"ytingtan"},"content":"        descriptor.setStatus(person.getStatus());","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"josephaedan"},"content":"        descriptor.setNote(person.getNote());","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"ytingtan"},"content":"        descriptor.setRating(person.getRating());","lastModifiedDate":"2022-10-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":92,"author":{"gitId":"pratham31012002"},"content":"        //        descriptor.setTags(tagSet);","lastModifiedDate":"2022-10-11"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":96,"author":{"gitId":"ytingtan"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":97,"author":{"gitId":"ytingtan"},"content":"     * Sets the {@code Status} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2022-10-17"},{"lineNumber":98,"author":{"gitId":"ytingtan"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":99,"author":{"gitId":"ytingtan"},"content":"    public EditPersonDescriptorBuilder withStatus(String status) {","lastModifiedDate":"2022-10-09"},{"lineNumber":100,"author":{"gitId":"ytingtan"},"content":"        descriptor.setStatus(new Status(status));","lastModifiedDate":"2022-10-09"},{"lineNumber":101,"author":{"gitId":"ytingtan"},"content":"        return this;","lastModifiedDate":"2022-10-09"},{"lineNumber":102,"author":{"gitId":"ytingtan"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":103,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":104,"author":{"gitId":"josephaedan"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":105,"author":{"gitId":"ytingtan"},"content":"     * Sets the {@code Note} of the {@code EditPersonDescriptor} that we are","lastModifiedDate":"2022-10-17"},{"lineNumber":106,"author":{"gitId":"josephaedan"},"content":"     * building.","lastModifiedDate":"2022-10-12"},{"lineNumber":107,"author":{"gitId":"josephaedan"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":108,"author":{"gitId":"josephaedan"},"content":"    public EditPersonDescriptorBuilder withNote(String note) {","lastModifiedDate":"2022-10-12"},{"lineNumber":109,"author":{"gitId":"josephaedan"},"content":"        descriptor.setNote(new Note(note));","lastModifiedDate":"2022-10-12"},{"lineNumber":110,"author":{"gitId":"josephaedan"},"content":"        return this;","lastModifiedDate":"2022-10-12"},{"lineNumber":111,"author":{"gitId":"josephaedan"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":112,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":113,"author":{"gitId":"ytingtan"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":114,"author":{"gitId":"ytingtan"},"content":"     * Sets the {@code Rating} of the {@code EditPersonDescriptor} that we are","lastModifiedDate":"2022-10-17"},{"lineNumber":115,"author":{"gitId":"ytingtan"},"content":"     * building.","lastModifiedDate":"2022-10-17"},{"lineNumber":116,"author":{"gitId":"ytingtan"},"content":"     * @param rating","lastModifiedDate":"2022-10-17"},{"lineNumber":117,"author":{"gitId":"ytingtan"},"content":"     * @return","lastModifiedDate":"2022-10-17"},{"lineNumber":118,"author":{"gitId":"ytingtan"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":119,"author":{"gitId":"ytingtan"},"content":"    public EditPersonDescriptorBuilder withRating(String rating) {","lastModifiedDate":"2022-10-17"},{"lineNumber":120,"author":{"gitId":"ytingtan"},"content":"        descriptor.setRating(new Rating(rating));","lastModifiedDate":"2022-10-17"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2022-10-17"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"ytingtan":20,"emptygx":11,"pratham31012002":7,"josephaedan":9,"-":80}},{"path":"src/test/java/seedu/clinkedin/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.testutil;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"agarwal-anjali"},"content":"import java.net.URL;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"agarwal-anjali"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-25"},{"lineNumber":5,"author":{"gitId":"agarwal-anjali"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-25"},{"lineNumber":6,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"agarwal-anjali"},"content":"import seedu.clinkedin.model.link.Link;","lastModifiedDate":"2022-10-25"},{"lineNumber":8,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.Address;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.Email;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.Name;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.Note;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.Person;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.Phone;","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"ytingtan"},"content":"import seedu.clinkedin.model.person.Rating;","lastModifiedDate":"2022-10-17"},{"lineNumber":15,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.Status;","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.UniqueTagTypeMap;","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.util.SampleDataUtil;","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"ytingtan"},"content":"    public static final String DEFAULT_STATUS \u003d \"Application Received\";","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"ytingtan"},"content":"    public static final String DEFAULT_RATING \u003d \"6\";","lastModifiedDate":"2022-10-17"},{"lineNumber":30,"author":{"gitId":"ytingtan"},"content":"    public static final String DEFAULT_NOTE \u003d \"\";","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"pratham31012002"},"content":"    private UniqueTagTypeMap tags;","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"ytingtan"},"content":"    private Status status;","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"josephaedan"},"content":"    private Note note;","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"ytingtan"},"content":"    private Rating rating;","lastModifiedDate":"2022-10-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":41,"author":{"gitId":"agarwal-anjali"},"content":"    private Set\u003cLink\u003e links;","lastModifiedDate":"2022-10-25"},{"lineNumber":42,"author":{"gitId":"agarwal-anjali"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":51,"author":{"gitId":"pratham31012002"},"content":"        tags \u003d new UniqueTagTypeMap();","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"ytingtan"},"content":"        status \u003d new Status(DEFAULT_STATUS);","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"ytingtan"},"content":"        note \u003d new Note(DEFAULT_NOTE);","lastModifiedDate":"2022-10-16"},{"lineNumber":54,"author":{"gitId":"ytingtan"},"content":"        rating \u003d new Rating(DEFAULT_RATING);","lastModifiedDate":"2022-10-17"},{"lineNumber":55,"author":{"gitId":"agarwal-anjali"},"content":"        links \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":66,"author":{"gitId":"pratham31012002"},"content":"        UniqueTagTypeMap tagTypeMap \u003d new UniqueTagTypeMap();","lastModifiedDate":"2022-10-09"},{"lineNumber":67,"author":{"gitId":"pratham31012002"},"content":"        tagTypeMap.setTagTypeMap(personToCopy.getTags());","lastModifiedDate":"2022-10-09"},{"lineNumber":68,"author":{"gitId":"pratham31012002"},"content":"        tags \u003d tagTypeMap;","lastModifiedDate":"2022-10-09"},{"lineNumber":69,"author":{"gitId":"ytingtan"},"content":"        status \u003d personToCopy.getStatus();","lastModifiedDate":"2022-10-09"},{"lineNumber":70,"author":{"gitId":"josephaedan"},"content":"        note \u003d personToCopy.getNote();","lastModifiedDate":"2022-10-12"},{"lineNumber":71,"author":{"gitId":"ytingtan"},"content":"        rating \u003d personToCopy.getRating();","lastModifiedDate":"2022-10-17"},{"lineNumber":72,"author":{"gitId":"agarwal-anjali"},"content":"        links \u003d new HashSet\u003c\u003e(personToCopy.getLinks());","lastModifiedDate":"2022-10-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"pratham31012002"},"content":"        this.tags \u003d SampleDataUtil.getTagTypeMap(tags);","lastModifiedDate":"2022-10-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":115,"author":{"gitId":"pratham31012002"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":116,"author":{"gitId":"ytingtan"},"content":"     * Sets the {@code Status} of the {@code Person} that we are building.","lastModifiedDate":"2022-10-09"},{"lineNumber":117,"author":{"gitId":"ytingtan"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":118,"author":{"gitId":"ytingtan"},"content":"    public PersonBuilder withStatus(String status) {","lastModifiedDate":"2022-10-09"},{"lineNumber":119,"author":{"gitId":"ytingtan"},"content":"        this.status \u003d new Status(status);","lastModifiedDate":"2022-10-09"},{"lineNumber":120,"author":{"gitId":"ytingtan"},"content":"        return this;","lastModifiedDate":"2022-10-09"},{"lineNumber":121,"author":{"gitId":"ytingtan"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":122,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":123,"author":{"gitId":"josephaedan"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":124,"author":{"gitId":"josephaedan"},"content":"     * Sets the {@code Note} of the {@code Person} that we are building.","lastModifiedDate":"2022-10-12"},{"lineNumber":125,"author":{"gitId":"josephaedan"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":126,"author":{"gitId":"josephaedan"},"content":"    public PersonBuilder withNote(String note) {","lastModifiedDate":"2022-10-12"},{"lineNumber":127,"author":{"gitId":"josephaedan"},"content":"        this.note \u003d new Note(note);","lastModifiedDate":"2022-10-12"},{"lineNumber":128,"author":{"gitId":"josephaedan"},"content":"        return this;","lastModifiedDate":"2022-10-12"},{"lineNumber":129,"author":{"gitId":"josephaedan"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":130,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":131,"author":{"gitId":"ytingtan"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":132,"author":{"gitId":"ytingtan"},"content":"     * Sets the {@code Rating} of the {@code Person} that we are building.","lastModifiedDate":"2022-10-25"},{"lineNumber":133,"author":{"gitId":"ytingtan"},"content":"     * @param rating","lastModifiedDate":"2022-10-17"},{"lineNumber":134,"author":{"gitId":"ytingtan"},"content":"     * @return","lastModifiedDate":"2022-10-17"},{"lineNumber":135,"author":{"gitId":"ytingtan"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":136,"author":{"gitId":"ytingtan"},"content":"    public PersonBuilder withRating(String rating) {","lastModifiedDate":"2022-10-17"},{"lineNumber":137,"author":{"gitId":"ytingtan"},"content":"        this.rating \u003d new Rating(rating);","lastModifiedDate":"2022-10-17"},{"lineNumber":138,"author":{"gitId":"ytingtan"},"content":"        return this;","lastModifiedDate":"2022-10-25"},{"lineNumber":139,"author":{"gitId":"ytingtan"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":140,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":141,"author":{"gitId":"agarwal-anjali"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":142,"author":{"gitId":"agarwal-anjali"},"content":"     * Parses the {@code links} into a {@code Set\u003cLink\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2022-10-25"},{"lineNumber":143,"author":{"gitId":"agarwal-anjali"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":144,"author":{"gitId":"agarwal-anjali"},"content":"    public PersonBuilder withLinks(URL... links) {","lastModifiedDate":"2022-10-27"},{"lineNumber":145,"author":{"gitId":"agarwal-anjali"},"content":"        this.links \u003d SampleDataUtil.getLinkSet(links);","lastModifiedDate":"2022-10-25"},{"lineNumber":146,"author":{"gitId":"ytingtan"},"content":"        return this;","lastModifiedDate":"2022-10-17"},{"lineNumber":147,"author":{"gitId":"ytingtan"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":148,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":150,"author":{"gitId":"ytingtan"},"content":"        return new Person(name, phone, email, address, tags, status, note, rating, links);","lastModifiedDate":"2022-10-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":153,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"agarwal-anjali":14,"ytingtan":33,"emptygx":10,"pratham31012002":7,"josephaedan":10,"-":80}},{"path":"src/test/java/seedu/clinkedin/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.testutil;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.parser.CliSyntax.PREFIX_NOTE;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"ytingtan"},"content":"import static seedu.clinkedin.logic.parser.CliSyntax.PREFIX_RATING;","lastModifiedDate":"2022-10-17"},{"lineNumber":9,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.logic.commands.AddCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.Person;","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.UniqueTagTypeMap;","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"josephaedan"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"pratham31012002"},"content":"        // to be added.","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"pratham31012002"},"content":"        //        person.getTags().stream().forEach(","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"pratham31012002"},"content":"        //            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"pratham31012002"},"content":"        //        );","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"pratham31012002"},"content":"        //        to be implemented later.","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"pratham31012002"},"content":"        //        person.getTags().stream().forEach(","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"pratham31012002"},"content":"        //            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"pratham31012002"},"content":"        //        );","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"ytingtan"},"content":"        sb.append(PREFIX_STATUS + person.getStatus().status + \" \");","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"ytingtan"},"content":"        sb.append(PREFIX_NOTE + person.getNote().value + \" \");","lastModifiedDate":"2022-10-17"},{"lineNumber":48,"author":{"gitId":"ytingtan"},"content":"        sb.append(PREFIX_RATING + person.getRating().toString());","lastModifiedDate":"2022-10-17"},{"lineNumber":49,"author":{"gitId":"ytingtan"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"pratham31012002"},"content":"        if (descriptor.getNewTagTypeMap().get() !\u003d null \u0026\u0026 !descriptor.getNewTagTypeMap().get().isEmpty()) {","lastModifiedDate":"2022-10-13"},{"lineNumber":63,"author":{"gitId":"pratham31012002"},"content":"            UniqueTagTypeMap tags \u003d descriptor.getNewTagTypeMap().get();","lastModifiedDate":"2022-10-13"},{"lineNumber":64,"author":{"gitId":"pratham31012002"},"content":"            sb.append(tags);","lastModifiedDate":"2022-10-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":66,"author":{"gitId":"ytingtan"},"content":"        descriptor.getStatus().ifPresent(status -\u003e sb.append(PREFIX_STATUS).append(status.status).append(\" \"));","lastModifiedDate":"2022-10-09"},{"lineNumber":67,"author":{"gitId":"josephaedan"},"content":"        descriptor.getNote().ifPresent(note -\u003e sb.append(PREFIX_NOTE).append(note.value).append(\" \"));","lastModifiedDate":"2022-10-12"},{"lineNumber":68,"author":{"gitId":"ytingtan"},"content":"        descriptor.getRating().ifPresent(rating -\u003e sb.append(PREFIX_RATING).append(rating.toString()).append(\" \"));","lastModifiedDate":"2022-10-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"ytingtan":7,"emptygx":11,"josephaedan":2,"pratham31012002":11,"-":40}},{"path":"src/test/java/seedu/clinkedin/testutil/SerializableTestClass.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.testutil;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A class used to test serialization and deserialization","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class SerializableTestClass {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String JSON_STRING_REPRESENTATION \u003d String.format(\"{%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"  \\\"name\\\" : \\\"This is a test class\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"  \\\"listOfLocalDateTimes\\\" : \"","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"[ \\\"-999999999-01-01T00:00:00\\\", \\\"+999999999-12-31T23:59:59.999999999\\\", \"","lastModifiedDate":"2016-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"\\\"0001-01-01T01:01:00\\\" ],%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"  \\\"mapOfIntegerToString\\\" : {%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"    \\\"1\\\" : \\\"One\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"    \\\"2\\\" : \\\"Two\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    \\\"3\\\" : \\\"Three\\\"%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"  }%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"}\");","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String NAME_TEST_VALUE \u003d \"This is a test class\";","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private String name;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private List\u003cLocalDateTime\u003e listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private HashMap\u003cInteger, String\u003e mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getNameTestValue() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return NAME_TEST_VALUE;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static List\u003cLocalDateTime\u003e getListTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cLocalDateTime\u003e listOfLocalDateTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MIN);","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MAX);","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.of(1, 1, 1, 1, 1));","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static HashMap\u003cInteger, String\u003e getHashMapTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        HashMap\u003cInteger, String\u003e mapOfIntegerToString \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(1, \"One\");","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(2, \"Two\");","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(3, \"Three\");","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d getNameTestValue();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes \u003d getListTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        mapOfIntegerToString \u003d getHashMapTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getName() {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public List\u003cLocalDateTime\u003e getListOfLocalDateTimes() {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public HashMap\u003cInteger, String\u003e getMapOfIntegerToString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"emptygx":1,"-":71}},{"path":"src/test/java/seedu/clinkedin/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.testutil;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.commons.core.index.Index;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.Model;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.Person;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns the middle index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2017-07-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(model.getFilteredPersonList().size() / 2);","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns the last index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2017-07-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns the person in the {@code model}\u0027s person list at {@code index}.","lastModifiedDate":"2017-07-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static Person getPerson(Model model, Index index) {","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList().get(index.getZeroBased());","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"emptygx":4,"-":51}},{"path":"src/test/java/seedu/clinkedin/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.testutil;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.commons.core.index.Index;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Index INDEX_FIRST_PERSON \u003d Index.fromOneBased(1);","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Index INDEX_SECOND_PERSON \u003d Index.fromOneBased(2);","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Index INDEX_THIRD_PERSON \u003d Index.fromOneBased(3);","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"emptygx":2,"-":10}},{"path":"src/test/java/seedu/clinkedin/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.testutil;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"ytingtan"},"content":"import static seedu.clinkedin.logic.commands.CommandTestUtil.VALID_NOTE_AMY;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"ytingtan"},"content":"import static seedu.clinkedin.logic.commands.CommandTestUtil.VALID_NOTE_BOB;","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"ytingtan"},"content":"import static seedu.clinkedin.logic.commands.CommandTestUtil.VALID_RATING_AMY;","lastModifiedDate":"2022-10-17"},{"lineNumber":14,"author":{"gitId":"ytingtan"},"content":"import static seedu.clinkedin.logic.commands.CommandTestUtil.VALID_RATING_BOB;","lastModifiedDate":"2022-10-17"},{"lineNumber":15,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.commands.CommandTestUtil.VALID_STATUS_AMY;","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.commands.CommandTestUtil.VALID_STATUS_BOB;","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.AddressBook;","lastModifiedDate":"2022-10-15"},{"lineNumber":24,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.model.person.Person;","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"ytingtan"},"content":"            .withPhone(\"94351253\").withTags(\"friends\").withStatus(\"Accepted\").withNote(\"She is strong at Java.\")","lastModifiedDate":"2022-10-17"},{"lineNumber":34,"author":{"gitId":"ytingtan"},"content":"            .withRating(\"6\").build();","lastModifiedDate":"2022-10-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"josephaedan"},"content":"                    .withAddress(\"311, Clementi Ave 2, #02-25\").withNote(\"He has a good sense of humour.\")","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":38,"author":{"gitId":"ytingtan"},"content":"            .withTags(\"owesMoney\", \"friends\").withStatus(\"Rejected\").withRating(\"1\").build();","lastModifiedDate":"2022-10-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":40,"author":{"gitId":"ytingtan"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").withStatus(\"OA Received\")","lastModifiedDate":"2022-10-17"},{"lineNumber":41,"author":{"gitId":"ytingtan"},"content":"            .withRating(\"4\").build();","lastModifiedDate":"2022-10-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":43,"author":{"gitId":"ytingtan"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"friends\")","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"ytingtan"},"content":"            .withStatus(\"Application Received\").withRating(\"6\").build();","lastModifiedDate":"2022-10-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":46,"author":{"gitId":"ytingtan"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").withStatus(\"Application Received\")","lastModifiedDate":"2022-10-17"},{"lineNumber":47,"author":{"gitId":"ytingtan"},"content":"            .withRating(\"8\").build();","lastModifiedDate":"2022-10-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"ytingtan"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").withStatus(\"Application Received\")","lastModifiedDate":"2022-10-17"},{"lineNumber":50,"author":{"gitId":"ytingtan"},"content":"            .withRating(\"1\").build();","lastModifiedDate":"2022-10-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":52,"author":{"gitId":"ytingtan"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").withStatus(\"Application Received\")","lastModifiedDate":"2022-10-17"},{"lineNumber":53,"author":{"gitId":"ytingtan"},"content":"            .withRating(\"9\").build();","lastModifiedDate":"2022-10-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"ytingtan"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").withStatus(\"Application Received\").build();","lastModifiedDate":"2022-10-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":59,"author":{"gitId":"ytingtan"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").withStatus(\"Application Received\").build();","lastModifiedDate":"2022-10-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":63,"author":{"gitId":"ytingtan"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND)","lastModifiedDate":"2022-10-09"},{"lineNumber":64,"author":{"gitId":"ytingtan"},"content":"            .withStatus(VALID_STATUS_AMY).withNote(VALID_NOTE_AMY).withRating(VALID_RATING_AMY).build();","lastModifiedDate":"2022-10-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":66,"author":{"gitId":"pratham31012002"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2022-10-13"},{"lineNumber":67,"author":{"gitId":"ytingtan"},"content":"            .withStatus(VALID_STATUS_BOB).withNote(VALID_NOTE_BOB).withRating(VALID_RATING_BOB).build();","lastModifiedDate":"2022-10-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"ytingtan":22,"emptygx":14,"josephaedan":1,"pratham31012002":1,"-":49}},{"path":"src/test/java/seedu/clinkedin/ui/TestFxmlObject.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.ui;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.beans.DefaultProperty;","lastModifiedDate":"2016-12-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A test object which can be constructed via an FXML file.","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unlike other JavaFX classes, this class can be constructed without the JavaFX toolkit being initialized.","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"@DefaultProperty(\"text\")","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class TestFxmlObject {","lastModifiedDate":"2016-12-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private String text;","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public TestFxmlObject() {}","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public TestFxmlObject(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        setText(text);","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public String getText() {","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return text;","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setText(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.text \u003d text;","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-04-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                || (other instanceof TestFxmlObject // instanceof handles nulls","lastModifiedDate":"2017-04-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                        \u0026\u0026 text.equals(((TestFxmlObject) other).getText()));","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"emptygx":1,"-":34}},{"path":"src/test/java/seedu/clinkedin/ui/UiPartTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"emptygx"},"content":"package seedu.clinkedin.ui;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"emptygx"},"content":"import static seedu.clinkedin.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2019-04-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"emptygx"},"content":"import seedu.clinkedin.MainApp;","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class UiPartTest {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String MISSING_FILE_PATH \u003d \"UiPartTest/missingFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_FILE_PATH \u003d \"UiPartTest/invalidFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_PATH \u003d \"UiPartTest/validFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_WITH_FX_ROOT_PATH \u003d \"UiPartTest/validFileWithFxRoot.fxml\";","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final TestFxmlObject VALID_FILE_ROOT \u003d new TestFxmlObject(\"Hello World!\");","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor_nullFileUrl_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_missingFileUrl_throwsAssertionError() throws Exception {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        URL missingFileUrl \u003d new URL(testFolder.toUri().toURL(), MISSING_FILE_PATH);","lastModifiedDate":"2019-04-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileUrl_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        URL invalidFileUrl \u003d getTestFileUrl(INVALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void constructor_validFileUrl_loadsFile() {","lastModifiedDate":"2016-12-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl).getRoot());","lastModifiedDate":"2016-12-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-11-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void constructor_validFileWithFxRootUrl_loadsFile() {","lastModifiedDate":"2017-11-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_WITH_FX_ROOT_PATH);","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        TestFxmlObject root \u003d new TestFxmlObject();","lastModifiedDate":"2017-11-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl, root).getRoot());","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void constructor_nullFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void constructor_missingFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileName_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private URL getTestFileUrl(String testFilePath) {","lastModifiedDate":"2016-12-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String testFilePathInView \u003d \"/view/\" + testFilePath;","lastModifiedDate":"2016-12-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        URL testFileUrl \u003d MainApp.class.getResource(testFilePathInView);","lastModifiedDate":"2016-12-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertNotNull(testFileUrl, testFilePathInView + \" does not exist.\");","lastModifiedDate":"2019-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return testFileUrl;","lastModifiedDate":"2016-12-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * UiPart used for testing.","lastModifiedDate":"2016-12-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * It should only be used with invalid FXML files or the valid file located at {@link VALID_FILE_PATH}.","lastModifiedDate":"2016-12-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class TestUiPart\u003cT\u003e extends UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @FXML","lastModifiedDate":"2016-12-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        private TestFxmlObject validFileRoot; // Check that @FXML annotations work","lastModifiedDate":"2016-12-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            super(fxmlFileName, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl);","lastModifiedDate":"2016-12-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            super(fxmlFileName);","lastModifiedDate":"2016-12-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"emptygx":3,"-":111}},{"path":"src/test/resources/view/UiPartTest/validFile.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-12-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"emptygx"},"content":"\u003c?import seedu.clinkedin.ui.TestFxmlObject?\u003e","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003eHello World!\u003c/TestFxmlObject\u003e","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"emptygx":1,"-":3}},{"path":"src/test/resources/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":3,"author":{"gitId":"emptygx"},"content":"\u003cfx:root type\u003d\"seedu.clinkedin.ui.TestFxmlObject\" xmlns\u003d\"http://javafx.com/javafx\"","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"emptygx":1,"-":5}}]
