[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jasonqiu212"},"content":"# Swift+","lastModifiedDate":"2022-10-21"},{"lineNumber":2,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":3,"author":{"gitId":"ShenyiCui"},"content":"[![codecov](https://codecov.io/gh/AY2223S1-CS2103T-T12-2/tp/branch/master/graph/badge.svg?token\u003dA2FU6P932B)](https://app.codecov.io/gh/AY2223S1-CS2103T-T12-2/tp)","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"ShenyiCui"},"content":"[![CI Status](https://github.com/AY2223S1-CS2103T-T12-2/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S1-CS2103T-T12-2/tp/actions)","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"ShenyiCui"},"content":"### Manage your Team like never before","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"ShenyiCui"},"content":"#### Team: Swift+ (CS2103-T12-02)","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"ShenyiCui"},"content":"- Swift+ is a seamless contact management system to keep track of their interactions and meetings with clients and colleagues using swift text-based commands.","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"ShenyiCui"},"content":"- Swift+ allows you to plan your schedules looking at their daily/weekly overview.","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"ShenyiCui"},"content":"## Getting Started","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"ShenyiCui"},"content":"1. Download and install `jenv`","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"ShenyiCui"},"content":"2. Install `Java 11`","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"ShenyiCui"},"content":"3. Clone the project","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"ShenyiCui"},"content":"## Site Map","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"ShenyiCui"},"content":"- [User Guide](docs/UserGuide.md)","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"ShenyiCui"},"content":"- [Developer Guide](docs/DeveloperGuide.md)","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"ShenyiCui"},"content":"- [About Us](docs/AboutUs.md)","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"ShenyiCui"},"content":"## Acknowledgements","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"ShenyiCui"},"content":"- This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"jasonqiu212"},"content":"- Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2022-10-21"},{"lineNumber":31,"author":{"gitId":"ShenyiCui"},"content":"- UI color scheme inspired by [TailwindUI](https://tailwindui.com/)","lastModifiedDate":"2022-10-28"}],"authorContributionMap":{"jasonqiu212":3,"ShenyiCui":25,"-":3}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"peppapighs"},"content":"mainClassName \u003d \u0027swift.Main\u0027","lastModifiedDate":"2022-10-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"jasonqiu212"},"content":"run {","lastModifiedDate":"2022-10-21"},{"lineNumber":29,"author":{"gitId":"jasonqiu212"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-10-21"},{"lineNumber":30,"author":{"gitId":"jasonqiu212"},"content":"}","lastModifiedDate":"2022-10-21"},{"lineNumber":31,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":73,"author":{"gitId":"jasonqiu212"},"content":"    archiveFileName \u003d \u0027swift+.jar\u0027","lastModifiedDate":"2022-10-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"jasonqiu212":5,"-":70,"peppapighs":1}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"jasonqiu212"},"content":"You can reach us at the email `jason.qiu@u.nus.edu`","lastModifiedDate":"2022-09-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"jasonqiu212"},"content":"## **Project team**","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"jasonqiu212"},"content":"### Jason Qiu","lastModifiedDate":"2022-09-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"jasonqiu212"},"content":"\u003cimg src\u003d\"images/jasonqiu212.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"jasonqiu212"},"content":"[[github](https://github.com/jasonqiu212)]","lastModifiedDate":"2022-09-26"},{"lineNumber":17,"author":{"gitId":"jasonqiu212"},"content":"[[portfolio](team/jasonqiu212.md)]","lastModifiedDate":"2022-09-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"jasonqiu212"},"content":"- Role: Team lead","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"jasonqiu212"},"content":"- Responsibilities: UI","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"peppapighs"},"content":"### Pontakorn Prasertsuk","lastModifiedDate":"2022-09-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"peppapighs"},"content":"\u003cimg src\u003d\"images/peppapighs.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"peppapighs"},"content":"[[github](http://github.com/peppapighs)]","lastModifiedDate":"2022-09-26"},{"lineNumber":27,"author":{"gitId":"peppapighs"},"content":"[[portfolio](team/peppapighs.md)]","lastModifiedDate":"2022-09-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"jasonqiu212"},"content":"- Role: Code Quality","lastModifiedDate":"2022-10-21"},{"lineNumber":30,"author":{"gitId":"jasonqiu212"},"content":"- Responsibilities: UI","lastModifiedDate":"2022-10-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"ShenyiCui"},"content":"### Shenyi Cui","lastModifiedDate":"2022-09-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"ShenyiCui"},"content":"\u003cimg src\u003d\"images/shenyicui.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"ShenyiCui"},"content":"[[github](http://github.com/shenyicui)] [[portfolio](team/shenyicui.md)]","lastModifiedDate":"2022-09-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"jasonqiu212"},"content":"- Role: Deliverables","lastModifiedDate":"2022-10-21"},{"lineNumber":39,"author":{"gitId":"jasonqiu212"},"content":"- Responsibilities: Issues","lastModifiedDate":"2022-10-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"santosh3007"},"content":"### Muthukrishnan Santosh","lastModifiedDate":"2022-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"santosh3007"},"content":"\u003cimg src\u003d\"images/santosh3007.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"santosh3007"},"content":"[[github](http://github.com/santosh3007)]","lastModifiedDate":"2022-09-28"},{"lineNumber":46,"author":{"gitId":"santosh3007"},"content":"[[portfolio](team/santosh3007.md)]","lastModifiedDate":"2022-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"jasonqiu212"},"content":"- Role: Documentation","lastModifiedDate":"2022-10-21"},{"lineNumber":49,"author":{"gitId":"jasonqiu212"},"content":"- Responsibilities: Manage Non-Functional Requirements","lastModifiedDate":"2022-10-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"yunruu"},"content":"### Chin Yun Ru","lastModifiedDate":"2022-09-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"yunruu"},"content":"\u003cimg src\u003d\"images/yunruu.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"yunruu"},"content":"[[github](http://github.com/yunruu)]","lastModifiedDate":"2022-09-28"},{"lineNumber":56,"author":{"gitId":"yunruu"},"content":"[[portfolio](team/yunruu.md)]","lastModifiedDate":"2022-09-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"jasonqiu212"},"content":"- Role: Integration","lastModifiedDate":"2022-10-21"},{"lineNumber":59,"author":{"gitId":"jasonqiu212"},"content":"- Responsibilities: Glossary","lastModifiedDate":"2022-10-21"}],"authorContributionMap":{"jasonqiu212":16,"ShenyiCui":3,"santosh3007":4,"-":28,"peppapighs":4,"yunruu":4}},{"path":"docs/Configuration.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-06-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-06-07"},{"lineNumber":3,"author":{"gitId":"jasonqiu212"},"content":"title: Configuration Guide","lastModifiedDate":"2022-11-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-06-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":6,"author":{"gitId":"jasonqiu212"},"content":"Certain properties of the application can be controlled (e.g. user preferences file location, logging level) through the configuration file (default: `config.json`).","lastModifiedDate":"2022-11-07"}],"authorContributionMap":{"jasonqiu212":2,"-":4}},{"path":"docs/DevOps.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"jasonqiu212"},"content":"title: DevOps Guide","lastModifiedDate":"2022-11-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"jasonqiu212"},"content":"## Table of Contents","lastModifiedDate":"2022-11-07"},{"lineNumber":7,"author":{"gitId":"jasonqiu212"},"content":"{:.no_toc}","lastModifiedDate":"2022-11-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":9,"author":{"gitId":"jasonqiu212"},"content":"1. Table of Contents","lastModifiedDate":"2022-11-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"jasonqiu212"},"content":"---","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"jasonqiu212"},"content":"## **Build Automation**","lastModifiedDate":"2022-11-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"jasonqiu212"},"content":"This project uses Gradle for **build automation and dependency management**. **You are recommended to read this [Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html)**.","lastModifiedDate":"2022-11-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Given below are how to use Gradle for some important project tasks.","lastModifiedDate":"2020-05-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":20,"author":{"gitId":"jasonqiu212"},"content":"- **`clean`**: Deletes the files created during the previous build tasks (e.g. files in the `build` folder).\u003cbr\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  e.g. `./gradlew clean`","lastModifiedDate":"2020-05-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":23,"author":{"gitId":"jasonqiu212"},"content":"- **`shadowJar`**: Uses the ShadowJar plugin to creat a fat JAR file in the `build/lib` folder, _if the current file is outdated_.\u003cbr\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  e.g. `./gradlew shadowJar`.","lastModifiedDate":"2020-05-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":26,"author":{"gitId":"jasonqiu212"},"content":"- **`run`**: Builds and runs the application.\u003cbr\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  **`runShadow`**: Builds the application as a fat JAR, and then runs it.","lastModifiedDate":"2020-05-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":29,"author":{"gitId":"jasonqiu212"},"content":"- **`checkstyleMain`**: Runs the code style check for the main code base.\u003cbr\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  **`checkstyleTest`**: Runs the code style check for the test code base.","lastModifiedDate":"2020-05-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":32,"author":{"gitId":"jasonqiu212"},"content":"- **`test`**: Runs all tests.\u003c","lastModifiedDate":"2022-10-21"},{"lineNumber":33,"author":{"gitId":"jasonqiu212"},"content":"  - `./gradlew test` — Runs all tests","lastModifiedDate":"2022-10-21"},{"lineNumber":34,"author":{"gitId":"jasonqiu212"},"content":"  - `./gradlew clean test` — Cleans the project and runs tests","lastModifiedDate":"2022-10-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"jasonqiu212"},"content":"---","lastModifiedDate":"2022-10-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"jasonqiu212"},"content":"## **Continuous Integration (CI)**","lastModifiedDate":"2022-11-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"This project uses GitHub Actions for CI. The project comes with the necessary GitHub Actions configurations files (in the `.github/workflows` folder). No further setting up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"jasonqiu212"},"content":"### Code Coverage","lastModifiedDate":"2022-11-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"As part of CI, this project uses Codecov to generate coverage reports. When CI runs, it will generate code coverage data (based on the tests run by CI) and upload that data to the CodeCov website, which in turn can provide you more info about the coverage of your testes. Here are the steps to set up CodeCov for a fork of this repository.","lastModifiedDate":"2022-02-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Sign up with Codecov using your GitHub account [here](https://codecov.io/signup).","lastModifiedDate":"2020-08-07"},{"lineNumber":47,"author":{"gitId":"jasonqiu212"},"content":"2. Once you are inside Codecov web app, add your org (that contains the fork) to CodeCov.","lastModifiedDate":"2022-10-21"},{"lineNumber":48,"author":{"gitId":"jasonqiu212"},"content":"3. Wait for the next run of CI in your fork (or push a dummy commit to it to trigger CI) to confirm CI is able to upload generated coverage data to CodeCov. If CodeCov is not set up correctly, the CI run will fail with an error message that mentions CodeCov.","lastModifiedDate":"2022-10-21"},{"lineNumber":49,"author":{"gitId":"jasonqiu212"},"content":"4. Get the Markdown code for the Codecov badge provided in `Settings \u003e Badges` and update the `docs/index.md` of your repo with it so that the badge [![codecov](https://codecov.io/gh/AY2223S1-CS2103T-T12-2/tp/branch/master/graph/badge.svg?token\u003dA2FU6P932B)](https://app.codecov.io/gh/AY2223S1-CS2103T-T12-2/tp) in that page reflects the coverage of your project.","lastModifiedDate":"2022-10-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":51,"author":{"gitId":"jasonqiu212"},"content":"### Repository-wide Checks","lastModifiedDate":"2022-11-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"In addition to running Gradle checks, CI includes some repository-wide checks. Unlike the Gradle checks which only cover files used in the build process, these repository-wide checks cover all files in the repository. They check for repository rules which are hard to enforce on development machines such as line ending requirements.","lastModifiedDate":"2020-07-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"These checks are implemented as POSIX shell scripts, and thus can only be run on POSIX-compliant operating systems such as macOS and Linux. To run all checks locally on these operating systems, execute the following in the repository root directory:","lastModifiedDate":"2020-07-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"`./config/travis/run-checks.sh`","lastModifiedDate":"2020-07-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Any warnings or errors will be printed out to the console.","lastModifiedDate":"2020-07-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"**If adding new checks:**","lastModifiedDate":"2020-07-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":63,"author":{"gitId":"jasonqiu212"},"content":"- Checks are implemented as executable `check-*` scripts within the `.github` directory. The `run-checks.sh` script will automatically pick up and run files named as such. That is, you can add more such files if you need and the CI will do the rest.","lastModifiedDate":"2022-10-21"},{"lineNumber":64,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":65,"author":{"gitId":"jasonqiu212"},"content":"- Check scripts should print out errors in the format `SEVERITY:FILENAME:LINE: MESSAGE`","lastModifiedDate":"2022-10-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":67,"author":{"gitId":"jasonqiu212"},"content":"  - SEVERITY is either ERROR or WARN.","lastModifiedDate":"2022-10-21"},{"lineNumber":68,"author":{"gitId":"jasonqiu212"},"content":"  - FILENAME is the path to the file relative to the current directory.","lastModifiedDate":"2022-10-21"},{"lineNumber":69,"author":{"gitId":"jasonqiu212"},"content":"  - LINE is the line of the file where the error occurred and MESSAGE is the message explaining the error.","lastModifiedDate":"2022-10-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":71,"author":{"gitId":"jasonqiu212"},"content":"- Check scripts must exit with a non-zero exit code if any errors occur.","lastModifiedDate":"2022-10-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":73,"author":{"gitId":"jasonqiu212"},"content":"---","lastModifiedDate":"2022-10-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"jasonqiu212"},"content":"## **Making a release**","lastModifiedDate":"2022-11-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"Here are the steps to create a new release.","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"jasonqiu212"},"content":"1. Update the version number in [`MainApp.java`](https://github.com/AY2223S1-CS2103T-T12-2/tp/blob/master/src/main/java/swift/MainApp.java).","lastModifiedDate":"2022-10-26"},{"lineNumber":80,"author":{"gitId":"jasonqiu212"},"content":"2. Generate a fat JAR file using Gradle (i.e., `gradlew shadowJar`).","lastModifiedDate":"2022-10-21"},{"lineNumber":81,"author":{"gitId":"jasonqiu212"},"content":"3. Tag the repo with the version number. e.g. `v0.1`","lastModifiedDate":"2022-10-21"},{"lineNumber":82,"author":{"gitId":"jasonqiu212"},"content":"4. [Create a new release using GitHub](https://help.github.com/articles/creating-releases/). Upload the JAR file you created.","lastModifiedDate":"2022-10-21"}],"authorContributionMap":{"jasonqiu212":34,"-":48}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":6,"author":{"gitId":"jasonqiu212"},"content":"## **Table of Contents**","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":8,"author":{"gitId":"jasonqiu212"},"content":"{:.no_toc}","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"jasonqiu212"},"content":"1. Table of Contents","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"ShenyiCui"},"content":"---","lastModifiedDate":"2022-10-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"jasonqiu212"},"content":"## **Setting up and getting started**","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"jasonqiu212"},"content":"Refer to the guide [Setting up and getting started](SettingUp.md).","lastModifiedDate":"2022-11-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"ShenyiCui"},"content":"---","lastModifiedDate":"2022-10-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"jasonqiu212"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip** \u003cbr\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"jasonqiu212"},"content":"The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/AY2223S1-CS2103T-T12-2/tp/tree/master/docs/diagrams) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"jasonqiu212"},"content":"The architecture diagram given above explains the high-level design of the App.","lastModifiedDate":"2022-11-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"jasonqiu212"},"content":"#### Main Components of the Architecture","lastModifiedDate":"2022-11-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"jasonqiu212"},"content":"**`Main`** has two classes called [`Main`](https://github.com/AY2223S1-CS2103T-T12-2/tp/blob/master/src/main/java/swift/Main.java) and [`MainApp`](https://github.com/AY2223S1-CS2103T-T12-2/tp/blob/master/src/main/java/swift/MainApp.java). It is responsible for,","lastModifiedDate":"2022-10-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":39,"author":{"gitId":"jasonqiu212"},"content":"- initializing the components in the correct sequence and connecting them up with each other during the app\u0027s launch.","lastModifiedDate":"2022-11-07"},{"lineNumber":40,"author":{"gitId":"jasonqiu212"},"content":"- shutting down the components and invoking cleanup methods where necessary when closing the app.","lastModifiedDate":"2022-11-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"jasonqiu212"},"content":"The rest of the app consists of four components.","lastModifiedDate":"2022-11-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"jasonqiu212"},"content":"- [**`UI`**](#ui-component): Displays the user interface of the app.","lastModifiedDate":"2022-11-07"},{"lineNumber":45,"author":{"gitId":"jasonqiu212"},"content":"- [**`Logic`**](#logic-component): Parses and executes the commands.","lastModifiedDate":"2022-11-07"},{"lineNumber":46,"author":{"gitId":"jasonqiu212"},"content":"- [**`Model`**](#model-component): Holds the data of the app in memory.","lastModifiedDate":"2022-11-07"},{"lineNumber":47,"author":{"gitId":"ShenyiCui"},"content":"- [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2022-10-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"jasonqiu212"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple components.","lastModifiedDate":"2022-11-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":51,"author":{"gitId":"jasonqiu212"},"content":"#### How the architecture components interact with each other","lastModifiedDate":"2022-11-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"jasonqiu212"},"content":"The sequence diagram below shows how the components interact with each other for the scenario where the user issues the command `delete_contact 1`.","lastModifiedDate":"2022-11-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"jasonqiu212"},"content":"- defines its API in an `interface` with the same name as the component.","lastModifiedDate":"2022-11-07"},{"lineNumber":60,"author":{"gitId":"jasonqiu212"},"content":"- implements its functionality using a concrete `{Component Name}Manager` class.","lastModifiedDate":"2022-11-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"jasonqiu212"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class. Other components interact with a given component through its interface, rather than the concrete class. The reasoning is to prevent outside component\u0027s from being coupled to the implementation of a component, which is illustrated by the diagram below.","lastModifiedDate":"2022-11-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"jasonqiu212"},"content":"### UI Component","lastModifiedDate":"2022-11-07"},{"lineNumber":69,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":70,"author":{"gitId":"jasonqiu212"},"content":"The API of this component is specified in [`Ui.java`](https://github.com/AY2223S1-CS2103T-T12-2/tp/blob/master/src/main/java/swift/ui/Ui.java).","lastModifiedDate":"2022-11-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"santosh3007"},"content":"Here\u0027s a partial class diagram of the `UI` component without any of the task/contact management panels.","lastModifiedDate":"2022-11-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"santosh3007"},"content":"![Structure of the UI Component without Panels](images/UiClassDiagram.png)","lastModifiedDate":"2022-11-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"jasonqiu212"},"content":"The UI consists of a `MainWindow` that is made up of parts, e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter`, and etc. All these parts, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2022-11-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"santosh3007"},"content":"Here\u0027s another partial class diagram of the `UI` component with the task and contact management panels.","lastModifiedDate":"2022-11-07"},{"lineNumber":79,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":80,"author":{"gitId":"santosh3007"},"content":"![Structure of the UI Component with Panels](images/UiPanelsClassDiagram.png)","lastModifiedDate":"2022-11-07"},{"lineNumber":81,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":82,"author":{"gitId":"santosh3007"},"content":"The UI keeps track of which tab the user is currently viewing with the `isContactTabShown` boolean. If the contacts tab is currently in view, `MainWindow` contains `PersonListPanel` and `PersonTaskListPanel`, and it contains `TaskListPanel` and `TaskPersonListPanel` if otherwise.","lastModifiedDate":"2022-11-07"},{"lineNumber":83,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":84,"author":{"gitId":"jasonqiu212"},"content":"The `UI` component uses the [JavaFx](https://openjfx.io/) UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/AY2223S1-CS2103T-T12-2/tp/blob/master/src/main/java/swift/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/AY2223S1-CS2103T-T12-2/tp/blob/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2022-11-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"ShenyiCui"},"content":"- executes user commands using the `Logic` component.","lastModifiedDate":"2022-10-22"},{"lineNumber":89,"author":{"gitId":"santosh3007"},"content":"- prompts users with command suggestions and allows them to auto-complete them using the `Logic` component.","lastModifiedDate":"2022-10-21"},{"lineNumber":90,"author":{"gitId":"ShenyiCui"},"content":"- listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2022-10-22"},{"lineNumber":91,"author":{"gitId":"ShenyiCui"},"content":"- keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2022-10-22"},{"lineNumber":92,"author":{"gitId":"jasonqiu212"},"content":"- depends on some classes in the `Model` component, as it displays `Person` and `Task` objects located in the `Model`.","lastModifiedDate":"2022-11-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"jasonqiu212"},"content":"### Logic Component","lastModifiedDate":"2022-11-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"jasonqiu212"},"content":"The API of this component is specified in [`Logic.java`](https://github.com/AY2223S1-CS2103T-T12-2/tp/blob/master/src/main/java/swift/logic/Logic.java).","lastModifiedDate":"2022-11-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"jasonqiu212"},"content":"Here\u0027s a partial class diagram of the `Logic` component:","lastModifiedDate":"2022-11-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"jasonqiu212"},"content":"2. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddContactCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2022-11-07"},{"lineNumber":106,"author":{"gitId":"jasonqiu212"},"content":"3. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2022-09-27"},{"lineNumber":107,"author":{"gitId":"jasonqiu212"},"content":"4. The result of the command execution is encapsulated as a `CommandResult` object which is returned from `Logic`.","lastModifiedDate":"2022-09-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"jasonqiu212"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete_contact 1\")` API call.","lastModifiedDate":"2022-11-07"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"jasonqiu212"},"content":"![Interactions Inside the Logic Component for the `delete_contact 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2022-11-07"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"jasonqiu212"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note** \u003cbr\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":114,"author":{"gitId":"jasonqiu212"},"content":"The lifeline for `DeleteContactCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2022-11-07"},{"lineNumber":115,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":123,"author":{"gitId":"jasonqiu212"},"content":"- When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddContactCommandParser`)","lastModifiedDate":"2022-11-07"},{"lineNumber":124,"author":{"gitId":"jasonqiu212"},"content":"- The `XYZCommandParser` class then uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddContactCommand`), which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2022-11-07"},{"lineNumber":125,"author":{"gitId":"jasonqiu212"},"content":"- All `XYZCommandParser` classes (e.g., `AddContactCommandParser`, `DeleteTaskCommandParser`, ...) inherit from the `Parser` interface, so that they can be treated similarly where possible, e.g. during testing.","lastModifiedDate":"2022-11-07"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"jasonqiu212"},"content":"### Model Component","lastModifiedDate":"2022-11-07"},{"lineNumber":128,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":129,"author":{"gitId":"jasonqiu212"},"content":"The API of this component is specified in [`Model.java`](https://github.com/AY2223S1-CS2103T-T12-2/tp/blob/master/src/main/java/swift/model/Model.java).","lastModifiedDate":"2022-11-07"},{"lineNumber":130,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":131,"author":{"gitId":"jasonqiu212"},"content":"Here\u0027s a partial class diagram of the `Model` component:","lastModifiedDate":"2022-11-07"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"jasonqiu212"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note** \u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":136,"author":{"gitId":"jasonqiu212"},"content":"The `Task` and `PersonTaskBridge` classes are left out of the above diagram for simplicity. Compared to the `Person` class, they follow a similar structure of attribute composition.","lastModifiedDate":"2022-11-07"},{"lineNumber":137,"author":{"gitId":"jasonqiu212"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":139,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"jasonqiu212"},"content":"- stores the address book data, i.e. all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2022-11-07"},{"lineNumber":142,"author":{"gitId":"ShenyiCui"},"content":"- stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2022-10-22"},{"lineNumber":143,"author":{"gitId":"jasonqiu212"},"content":"- stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` object.","lastModifiedDate":"2022-11-07"},{"lineNumber":144,"author":{"gitId":"jasonqiu212"},"content":"- does not depend on any of the other three components, because the `Model` represents data entities of the domain, and they should make sense on their own without depending on other components.","lastModifiedDate":"2022-11-07"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":146,"author":{"gitId":"jasonqiu212"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note** \u003cbr\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":147,"author":{"gitId":"jasonqiu212"},"content":"An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"jasonqiu212"},"content":"### Storage Component","lastModifiedDate":"2022-11-07"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"jasonqiu212"},"content":"The API of this component is specified in [`Storage.java`](https://github.com/AY2223S1-CS2103T-T12-2/tp/blob/master/src/main/java/swift/storage/Storage.java).","lastModifiedDate":"2022-11-07"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":157,"author":{"gitId":"jasonqiu212"},"content":"Here\u0027s a partial class diagram of the `Storage` component:","lastModifiedDate":"2022-11-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":163,"author":{"gitId":"jasonqiu212"},"content":"- can save both address book data and user preference data in `.json` format, and read them back into corresponding objects.","lastModifiedDate":"2022-11-07"},{"lineNumber":164,"author":{"gitId":"ShenyiCui"},"content":"- inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2022-10-22"},{"lineNumber":165,"author":{"gitId":"jasonqiu212"},"content":"- depends on some classes in the `Model` component, because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`.","lastModifiedDate":"2022-11-07"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"jasonqiu212"},"content":"Classes used by multiple components are in the `swift.commons` package.","lastModifiedDate":"2022-10-21"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"ShenyiCui"},"content":"---","lastModifiedDate":"2022-10-22"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"peppapighs"},"content":"### Many-to-many relationship between `Person` and `Task`","lastModifiedDate":"2022-10-19"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"peppapighs"},"content":"The implementation of the contact-task relation is facilitated by `PersonTaskBridge` and `PersonTaskBridgeList`.","lastModifiedDate":"2022-10-19"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":181,"author":{"gitId":"peppapighs"},"content":"`PersonTaskBridge` is a class containing a `Person` UUID and a `Task` UUID, representing a relation between a `Person` and a `Task`.","lastModifiedDate":"2022-11-06"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":183,"author":{"gitId":"peppapighs"},"content":"`PersonTaskBridgeList` is a class containing a list of `PersonTaskBridge` objects, representing all the relations between `Person` and `Task` objects in the `AddressBook`. Additionally, it implements the following operations:","lastModifiedDate":"2022-10-19"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":185,"author":{"gitId":"jasonqiu212"},"content":"- `PersonTaskBridgeList#add(PersonTaskBridge)` - Saves a new relation between a `Person` and a `Task` in the list.","lastModifiedDate":"2022-10-21"},{"lineNumber":186,"author":{"gitId":"jasonqiu212"},"content":"- `PersonTaskBridgeList#remove(PersonTaskBridge)` - Removes an existing relation between a `Person` and a `Task` from the list.","lastModifiedDate":"2022-10-21"},{"lineNumber":187,"author":{"gitId":"jasonqiu212"},"content":"- `PersonTaskBridgeList#removePerson(Person)` and `PersonTaskBridgeList#removeTask(Task)` - Removes all existing relations between a `Person` and `Task` objects from the list.","lastModifiedDate":"2022-10-21"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":189,"author":{"gitId":"peppapighs"},"content":"These operations will be exposed in the `Model` interface.","lastModifiedDate":"2022-10-19"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":191,"author":{"gitId":"peppapighs"},"content":"The following class diagram summarizes the relationship between `PersonTaskBridge` and other classes:","lastModifiedDate":"2022-11-06"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":193,"author":{"gitId":"peppapighs"},"content":"\u003cimg src\u003d\"images/PersonTaskBridgeDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"jasonqiu212"},"content":"#### Design Considerations","lastModifiedDate":"2022-11-07"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":197,"author":{"gitId":"jasonqiu212"},"content":"**Aspect: How `Person` and `Task` are associated with `PersonTaskBridge`**","lastModifiedDate":"2022-11-07"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":199,"author":{"gitId":"peppapighs"},"content":"- **Alternative 1 (current choice):** Stores `Person` and `Task` UUID in `PersonTaskBridge`.","lastModifiedDate":"2022-11-06"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":201,"author":{"gitId":"peppapighs"},"content":"  - Pros: No need to handle the case of changing index when `Person` or `Task` are filtered. Easier to maintain data integrity.","lastModifiedDate":"2022-11-06"},{"lineNumber":202,"author":{"gitId":"peppapighs"},"content":"  - Cons: Requires changes in `Person` and `Task` schema and storage.","lastModifiedDate":"2022-11-06"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":204,"author":{"gitId":"peppapighs"},"content":"- **Alternative 2:** Stores `Person` and `Task` index in `PersonTaskBridge`.","lastModifiedDate":"2022-11-06"},{"lineNumber":205,"author":{"gitId":"peppapighs"},"content":"  - Pros: No change is needed for `Person` and `Task` schema.","lastModifiedDate":"2022-11-06"},{"lineNumber":206,"author":{"gitId":"peppapighs"},"content":"  - Cons: Requires changes to `PersonTaskBridge` objects every time a command changes `Person` or `Task` object index.","lastModifiedDate":"2022-11-06"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":208,"author":{"gitId":"jasonqiu212"},"content":"### Optional `Description` and `Deadline` Fields","lastModifiedDate":"2022-11-07"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":210,"author":{"gitId":"jasonqiu212"},"content":"The `Description` and `Deadline` fields for tasks are optional for the users fill in. The implementation of this optionality is ","lastModifiedDate":"2022-11-07"},{"lineNumber":211,"author":{"gitId":"jasonqiu212"},"content":"facilitated by wrapping the values using the [`java.util.Optional\u003cT\u003e`](https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Optional.html) class. ","lastModifiedDate":"2022-11-07"},{"lineNumber":212,"author":{"gitId":"jasonqiu212"},"content":"By doing so, we took advantage of the provided methods, e.g. `orElse`, `or`, and etc. This `Optional` class thus helps to encapsulate","lastModifiedDate":"2022-11-07"},{"lineNumber":213,"author":{"gitId":"jasonqiu212"},"content":"the logic of methods that depend on the presence or absence of the contained value.","lastModifiedDate":"2022-11-07"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":215,"author":{"gitId":"jasonqiu212"},"content":"#### Difference from Optional `Tag`","lastModifiedDate":"2022-11-07"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":217,"author":{"gitId":"jasonqiu212"},"content":"It is also optional for a `Person` to have tags. To achieve this, a `Person` stores the tags in a `HashSet`.","lastModifiedDate":"2022-11-07"},{"lineNumber":218,"author":{"gitId":"jasonqiu212"},"content":"If no tags are assigned to a `Person`, the `HashSet` will be empty. By doing so, a `Person` can have any number of tags.","lastModifiedDate":"2022-11-07"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":220,"author":{"gitId":"jasonqiu212"},"content":"This differs from the implementation of optionality for `Description` and `Deadline`. For `Description` and `Deadline`,","lastModifiedDate":"2022-11-07"},{"lineNumber":221,"author":{"gitId":"jasonqiu212"},"content":"a `Task` can either contain the value or no value at all. Thus, due to the differing multiplicities, we could not use the ","lastModifiedDate":"2022-11-07"},{"lineNumber":222,"author":{"gitId":"jasonqiu212"},"content":"same implementation as tags.","lastModifiedDate":"2022-11-07"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":224,"author":{"gitId":"jasonqiu212"},"content":"### View Task Details","lastModifiedDate":"2022-11-07"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":226,"author":{"gitId":"yunruu"},"content":"The implementation of the task tab UI is facilitated by `TaskCard` and `TaskListPanel`.","lastModifiedDate":"2022-10-21"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":228,"author":{"gitId":"yunruu"},"content":"`TaskCard` and `TaskListPanel` extends the superclass `UiPart\u003cRegion\u003e` and fills the UI container with a panel that displays the list of tasks, along with their assigned contacts and deadlines.","lastModifiedDate":"2022-10-21"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":230,"author":{"gitId":"yunruu"},"content":"`TaskListPanel` in is responsible for displaying the graphics of a task using a `TaskCard`.","lastModifiedDate":"2022-10-21"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":232,"author":{"gitId":"santosh3007"},"content":"### Command Suggestions and Command Auto-Completion","lastModifiedDate":"2022-10-21"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":234,"author":{"gitId":"santosh3007"},"content":"The implementation of Command Suggestions and Command Auto-Completion is facilitated by `CommandSuggestor` in the `Logic` Component. The `CommandBox` UI component listens for changes in the command box textField and calls methods from `CommandSuggestor` to reflect command suggestions and allow autocompletion.","lastModifiedDate":"2022-10-21"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":236,"author":{"gitId":"santosh3007"},"content":"`CommandSuggestor` mainly implements the following operations:","lastModifiedDate":"2022-10-21"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":238,"author":{"gitId":"santosh3007"},"content":"- `CommandSuggestor#suggestCommand` - Suggests a command with the corresponding syntax based on the user\u0027s current input","lastModifiedDate":"2022-10-21"},{"lineNumber":239,"author":{"gitId":"santosh3007"},"content":"- `CommandSuggestor#autocompleteCommand` - Completes the current user input according to the shown command suggestion","lastModifiedDate":"2022-10-21"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"jasonqiu212"},"content":"#### Design Considerations","lastModifiedDate":"2022-11-07"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":243,"author":{"gitId":"jasonqiu212"},"content":"**Aspect: How to provide command suggestions to users**","lastModifiedDate":"2022-11-07"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":245,"author":{"gitId":"santosh3007"},"content":"- **Alternative 1 (current choice):** Provide command suggestion over the command box.","lastModifiedDate":"2022-11-07"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":247,"author":{"gitId":"santosh3007"},"content":"  - Pros: Uses less screen real estate","lastModifiedDate":"2022-11-07"},{"lineNumber":248,"author":{"gitId":"santosh3007"},"content":"  - Cons: Only able to view one possible command","lastModifiedDate":"2022-11-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":250,"author":{"gitId":"santosh3007"},"content":"- **Alternative 2:** Provide command suggestions in a separate display box","lastModifiedDate":"2022-11-07"},{"lineNumber":251,"author":{"gitId":"santosh3007"},"content":"  itself.","lastModifiedDate":"2022-11-07"},{"lineNumber":252,"author":{"gitId":"jasonqiu212"},"content":"  - Pros: Able to display all possible commands","lastModifiedDate":"2022-11-07"},{"lineNumber":253,"author":{"gitId":"santosh3007"},"content":"  - Cons: Uses more screen real estate","lastModifiedDate":"2022-11-07"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":255,"author":{"gitId":"santosh3007"},"content":"**Aspect: How to autocomplete commands for users**","lastModifiedDate":"2022-11-07"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":257,"author":{"gitId":"santosh3007"},"content":"- **Alternative 1:** Autocomplete up to next prefix according displayed command suggestion.","lastModifiedDate":"2022-11-07"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":259,"author":{"gitId":"santosh3007"},"content":"  - Pros: Users can easily autocomplete the command shown with just one tab","lastModifiedDate":"2022-11-07"},{"lineNumber":260,"author":{"gitId":"santosh3007"},"content":"  - Cons: Users might have to backspace and complete the command again for commands with common prefixes. Eg. `add_contact`, `add_task`","lastModifiedDate":"2022-11-07"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":262,"author":{"gitId":"santosh3007"},"content":"- **Alternative 2 (current choice):** Autocomplete up to the longest matching prefix of all possible commands.","lastModifiedDate":"2022-11-07"},{"lineNumber":263,"author":{"gitId":"santosh3007"},"content":"  - Pros: Easy to autocomplete commands with common prefixes","lastModifiedDate":"2022-11-07"},{"lineNumber":264,"author":{"gitId":"santosh3007"},"content":"  - Cons: Users might have to type a few characters more","lastModifiedDate":"2022-11-07"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":266,"author":{"gitId":"jasonqiu212"},"content":"---","lastModifiedDate":"2022-11-07"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":268,"author":{"gitId":"jasonqiu212"},"content":"## **Documentation, Logging, Dev-ops, Testing, and Configuration**","lastModifiedDate":"2022-11-07"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":270,"author":{"gitId":"jasonqiu212"},"content":"To understand how to set up and maintain this project website, head over to the [Documentation Guide](Documentation.md).","lastModifiedDate":"2022-11-07"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"jasonqiu212"},"content":"You can learn how to run tests on Swift+ by going to the [Testing Guide](Testing.md) page.","lastModifiedDate":"2022-11-07"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":274,"author":{"gitId":"jasonqiu212"},"content":"To learn how to run and release Swift+ using Gradle, please visit the [DevOps Guide](DevOps.md) page.","lastModifiedDate":"2022-11-07"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":276,"author":{"gitId":"jasonqiu212"},"content":"Please visit the [Logging Guide](Logging.md) to learn how we implement logging.","lastModifiedDate":"2022-11-07"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":278,"author":{"gitId":"jasonqiu212"},"content":"We also have files to configure properties of the app, which are detailed in the [Configuration Guide](Configuration.md).","lastModifiedDate":"2022-11-07"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"ShenyiCui"},"content":"---","lastModifiedDate":"2022-10-22"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"jasonqiu212"},"content":"This section covers the user requirements we attempt to meet in Swift+.","lastModifiedDate":"2022-11-07"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"jasonqiu212"},"content":"### Target User Profile","lastModifiedDate":"2022-11-07"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"jasonqiu212"},"content":"Swift+ is designed for **software engineering project leads** who,","lastModifiedDate":"2022-11-07"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":290,"author":{"gitId":"jasonqiu212"},"content":"- need to keep track of many tasks with clients and colleagues.","lastModifiedDate":"2022-11-07"},{"lineNumber":291,"author":{"gitId":"jasonqiu212"},"content":"- can type fast.","lastModifiedDate":"2022-11-07"},{"lineNumber":292,"author":{"gitId":"jasonqiu212"},"content":"- prefer typing to mouse interactions.","lastModifiedDate":"2022-11-07"},{"lineNumber":293,"author":{"gitId":"jasonqiu212"},"content":"- prefer desktop apps over other types.","lastModifiedDate":"2022-11-07"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":295,"author":{"gitId":"jasonqiu212"},"content":"### Value proposition","lastModifiedDate":"2022-11-07"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"jasonqiu212"},"content":"Swift+ allows users to manage tasks with clients and colleagues **faster** than a typical GUI-driven app.","lastModifiedDate":"2022-11-07"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"jasonqiu212"},"content":"Priority levels:","lastModifiedDate":"2022-11-07"},{"lineNumber":302,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":303,"author":{"gitId":"jasonqiu212"},"content":"- High (must have) - `* * *`","lastModifiedDate":"2022-10-21"},{"lineNumber":304,"author":{"gitId":"jasonqiu212"},"content":"- Medium (nice to have) - `* *`","lastModifiedDate":"2022-10-21"},{"lineNumber":305,"author":{"gitId":"jasonqiu212"},"content":"- Low (unlikely to have) - `*`","lastModifiedDate":"2022-10-21"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"| Priority | As a …​        | I want to …​             | So that I can…​                                                            |","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"ShenyiCui"},"content":"| -------- | -------------- | ------------------------ | -------------------------------------------------------------------------- |","lastModifiedDate":"2022-11-07"},{"lineNumber":309,"author":{"gitId":"jasonqiu212"},"content":"| `* * *`  | new user       | see usage instructions   | refer to instructions when I forget how to use the app                     |","lastModifiedDate":"2022-09-27"},{"lineNumber":310,"author":{"gitId":"jasonqiu212"},"content":"| `* * *`  | user           | add a new contact        | add a new contact to keep track of                                         |","lastModifiedDate":"2022-09-27"},{"lineNumber":311,"author":{"gitId":"jasonqiu212"},"content":"| `* * *`  | user           | view all contacts        | get an overview of all contacts in my app                                  |","lastModifiedDate":"2022-09-27"},{"lineNumber":312,"author":{"gitId":"jasonqiu212"},"content":"| `* * *`  | user           | update a contact         | update the particulars of a contact                                        |","lastModifiedDate":"2022-09-27"},{"lineNumber":313,"author":{"gitId":"jasonqiu212"},"content":"| `* * *`  | user           | delete a contact         | remove contacts that I no longer need                                      |","lastModifiedDate":"2022-09-27"},{"lineNumber":314,"author":{"gitId":"jasonqiu212"},"content":"| `* * *`  | user           | find contacts by name    | locate details of contacts without having to go through the entire list    |","lastModifiedDate":"2022-09-27"},{"lineNumber":315,"author":{"gitId":"jasonqiu212"},"content":"| `* * *`  | user           | add task for contact     | add a task to a contact to keep track of                                   |","lastModifiedDate":"2022-09-27"},{"lineNumber":316,"author":{"gitId":"jasonqiu212"},"content":"| `* * *`  | user           | view tasks by contact    | view tasks belonging to a contact                                          |","lastModifiedDate":"2022-09-27"},{"lineNumber":317,"author":{"gitId":"jasonqiu212"},"content":"| `* * *`  | user           | delete a task            | remove tasks that I no longer need                                         |","lastModifiedDate":"2022-09-27"},{"lineNumber":318,"author":{"gitId":"jasonqiu212"},"content":"| `* *`    | user           | update a task            | update the particulars of a task                                           |","lastModifiedDate":"2022-11-07"},{"lineNumber":319,"author":{"gitId":"jasonqiu212"},"content":"| `* *`    | user           | list all tasks           | get an overview of all tasks in my app                                     |","lastModifiedDate":"2022-11-07"},{"lineNumber":320,"author":{"gitId":"jasonqiu212"},"content":"| `* *`    | user           | find tasks by name       | locate details of tasks without having to go through the entire list       |","lastModifiedDate":"2022-09-27"},{"lineNumber":321,"author":{"gitId":"jasonqiu212"},"content":"| `* *`    | forgetful user | autocomplete my commands | conveniently type commands without referring to the user guide excessively |","lastModifiedDate":"2022-10-21"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"jasonqiu212"},"content":"For all use cases below, the system is `Swift+` and the actor is the `user`, unless specified otherwise.","lastModifiedDate":"2022-11-07"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"jasonqiu212"},"content":"**Use case: UC1 - Create a contact**","lastModifiedDate":"2022-11-07"},{"lineNumber":328,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":329,"author":{"gitId":"jasonqiu212"},"content":"MSS:","lastModifiedDate":"2022-11-07"},{"lineNumber":330,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":331,"author":{"gitId":"jasonqiu212"},"content":"1. User requests to add a contact.","lastModifiedDate":"2022-11-07"},{"lineNumber":332,"author":{"gitId":"jasonqiu212"},"content":"2. Swift+ creates the contact. ","lastModifiedDate":"2022-11-07"},{"lineNumber":333,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":334,"author":{"gitId":"peppapighs"},"content":"Use case ends.","lastModifiedDate":"2022-09-27"},{"lineNumber":335,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":336,"author":{"gitId":"jasonqiu212"},"content":"Extensions:","lastModifiedDate":"2022-11-07"},{"lineNumber":337,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":338,"author":{"gitId":"jasonqiu212"},"content":"- 1a. Swift+ detects an error in the entered data.","lastModifiedDate":"2022-11-07"},{"lineNumber":339,"author":{"gitId":"jasonqiu212"},"content":"    - 1a1. Swift+ requests for the correct data.","lastModifiedDate":"2022-11-07"},{"lineNumber":340,"author":{"gitId":"jasonqiu212"},"content":"    - Use case resumes from step 1.","lastModifiedDate":"2022-11-07"},{"lineNumber":341,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":342,"author":{"gitId":"jasonqiu212"},"content":"**Use case: UC2 - Update a contact**","lastModifiedDate":"2022-11-07"},{"lineNumber":343,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":344,"author":{"gitId":"jasonqiu212"},"content":"MSS:","lastModifiedDate":"2022-11-07"},{"lineNumber":345,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":346,"author":{"gitId":"jasonqiu212"},"content":"1.  User requests to view all contacts.","lastModifiedDate":"2022-11-07"},{"lineNumber":347,"author":{"gitId":"jasonqiu212"},"content":"2.  Swift+ returns a list of all contacts.","lastModifiedDate":"2022-11-07"},{"lineNumber":348,"author":{"gitId":"jasonqiu212"},"content":"3.  User requests to edit a specific contact in the list.","lastModifiedDate":"2022-11-07"},{"lineNumber":349,"author":{"gitId":"jasonqiu212"},"content":"4.  Swift+ edits the details of the specified contact.","lastModifiedDate":"2022-11-07"},{"lineNumber":350,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":351,"author":{"gitId":"jasonqiu212"},"content":"Use case ends.","lastModifiedDate":"2022-11-07"},{"lineNumber":352,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":353,"author":{"gitId":"jasonqiu212"},"content":"Extensions:","lastModifiedDate":"2022-11-07"},{"lineNumber":354,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":355,"author":{"gitId":"jasonqiu212"},"content":"- 2a. Swift+ returns an empty list.","lastModifiedDate":"2022-11-07"},{"lineNumber":356,"author":{"gitId":"jasonqiu212"},"content":"    - Use case ends.","lastModifiedDate":"2022-11-07"},{"lineNumber":357,"author":{"gitId":"jasonqiu212"},"content":"- 3a. Swift+ detects the given index to be invalid.","lastModifiedDate":"2022-11-07"},{"lineNumber":358,"author":{"gitId":"jasonqiu212"},"content":"    - 3a1. Swift+ requests for a valid index.","lastModifiedDate":"2022-11-07"},{"lineNumber":359,"author":{"gitId":"jasonqiu212"},"content":"    - Use case resumes from step 3.","lastModifiedDate":"2022-11-07"},{"lineNumber":360,"author":{"gitId":"jasonqiu212"},"content":"- 3b. Swift+ detects an error in the entered data.","lastModifiedDate":"2022-11-07"},{"lineNumber":361,"author":{"gitId":"jasonqiu212"},"content":"    - 3b1. Swift+ requests for the correct data.","lastModifiedDate":"2022-11-07"},{"lineNumber":362,"author":{"gitId":"jasonqiu212"},"content":"    - Use case resumes from step 3.","lastModifiedDate":"2022-11-07"},{"lineNumber":363,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":364,"author":{"gitId":"jasonqiu212"},"content":"**Use case: UC3 - Delete a person**","lastModifiedDate":"2022-11-07"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":366,"author":{"gitId":"jasonqiu212"},"content":"MSS:","lastModifiedDate":"2022-11-07"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":368,"author":{"gitId":"jasonqiu212"},"content":"1.  User requests to view all contacts.","lastModifiedDate":"2022-11-07"},{"lineNumber":369,"author":{"gitId":"jasonqiu212"},"content":"2.  Swift+ returns a list of all contacts.","lastModifiedDate":"2022-11-07"},{"lineNumber":370,"author":{"gitId":"jasonqiu212"},"content":"3.  User requests to delete a specific contact in the list.","lastModifiedDate":"2022-11-07"},{"lineNumber":371,"author":{"gitId":"jasonqiu212"},"content":"4.  Swift+ deletes the specified contact.","lastModifiedDate":"2022-11-07"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"-"},"content":"Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"jasonqiu212"},"content":"Extensions:","lastModifiedDate":"2022-11-07"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"jasonqiu212"},"content":"- 2a. Swift+ returns an empty list.","lastModifiedDate":"2022-11-07"},{"lineNumber":378,"author":{"gitId":"jasonqiu212"},"content":"    - Use case ends.","lastModifiedDate":"2022-11-07"},{"lineNumber":379,"author":{"gitId":"jasonqiu212"},"content":"- 3a. Swift+ detects the given index to be invalid.","lastModifiedDate":"2022-11-07"},{"lineNumber":380,"author":{"gitId":"jasonqiu212"},"content":"    - 3a1. Swift+ requests for a valid index.","lastModifiedDate":"2022-11-07"},{"lineNumber":381,"author":{"gitId":"jasonqiu212"},"content":"    - Use case resumes from step 3.","lastModifiedDate":"2022-11-07"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"jasonqiu212"},"content":"**Use case: UC4 - Create a task**","lastModifiedDate":"2022-11-07"},{"lineNumber":384,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":385,"author":{"gitId":"jasonqiu212"},"content":"MSS:","lastModifiedDate":"2022-11-07"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":387,"author":{"gitId":"jasonqiu212"},"content":"1. User requests to add a task.","lastModifiedDate":"2022-11-07"},{"lineNumber":388,"author":{"gitId":"jasonqiu212"},"content":"2. Swift+ creates the task.","lastModifiedDate":"2022-11-07"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"jasonqiu212"},"content":"Use case ends.","lastModifiedDate":"2022-11-07"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"jasonqiu212"},"content":"Extensions:","lastModifiedDate":"2022-11-07"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":394,"author":{"gitId":"jasonqiu212"},"content":"- 1a. Swift+ detects an error in the entered data.","lastModifiedDate":"2022-11-07"},{"lineNumber":395,"author":{"gitId":"jasonqiu212"},"content":"    - 1a1. Swift+ requests for the correct data.","lastModifiedDate":"2022-11-07"},{"lineNumber":396,"author":{"gitId":"jasonqiu212"},"content":"    - Use case resumes from step 1.","lastModifiedDate":"2022-11-07"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":398,"author":{"gitId":"jasonqiu212"},"content":"**Use case: UC5 - Update a task**","lastModifiedDate":"2022-11-07"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":400,"author":{"gitId":"jasonqiu212"},"content":"MSS:","lastModifiedDate":"2022-11-07"},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":402,"author":{"gitId":"jasonqiu212"},"content":"1.  User requests to view all tasks.","lastModifiedDate":"2022-11-07"},{"lineNumber":403,"author":{"gitId":"jasonqiu212"},"content":"2.  Swift+ returns a list of all tasks.","lastModifiedDate":"2022-11-07"},{"lineNumber":404,"author":{"gitId":"jasonqiu212"},"content":"3.  User requests to edit a specific task in the list.","lastModifiedDate":"2022-11-07"},{"lineNumber":405,"author":{"gitId":"jasonqiu212"},"content":"4.  Swift+ edits the details of the specified task.","lastModifiedDate":"2022-11-07"},{"lineNumber":406,"author":{"gitId":"peppapighs"},"content":" ","lastModifiedDate":"2022-09-27"},{"lineNumber":407,"author":{"gitId":"peppapighs"},"content":"Use case ends.","lastModifiedDate":"2022-09-27"},{"lineNumber":408,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":409,"author":{"gitId":"jasonqiu212"},"content":"Extensions:","lastModifiedDate":"2022-11-07"},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":411,"author":{"gitId":"jasonqiu212"},"content":"- 2a. Swift+ returns an empty list.","lastModifiedDate":"2022-11-07"},{"lineNumber":412,"author":{"gitId":"jasonqiu212"},"content":"    - Use case ends.","lastModifiedDate":"2022-11-07"},{"lineNumber":413,"author":{"gitId":"jasonqiu212"},"content":"- 3a. Swift+ detects the given index to be invalid.","lastModifiedDate":"2022-11-07"},{"lineNumber":414,"author":{"gitId":"jasonqiu212"},"content":"    - 3a1. Swift+ requests for a valid index.","lastModifiedDate":"2022-11-07"},{"lineNumber":415,"author":{"gitId":"jasonqiu212"},"content":"    - Use case resumes from step 3.","lastModifiedDate":"2022-11-07"},{"lineNumber":416,"author":{"gitId":"jasonqiu212"},"content":"- 3b. Swift+ detects an error in the entered data.","lastModifiedDate":"2022-11-07"},{"lineNumber":417,"author":{"gitId":"jasonqiu212"},"content":"    - 3b1. Swift+ requests for the correct data.","lastModifiedDate":"2022-11-07"},{"lineNumber":418,"author":{"gitId":"jasonqiu212"},"content":"    - Use case resumes from step 3.","lastModifiedDate":"2022-11-07"},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":420,"author":{"gitId":"jasonqiu212"},"content":"**Use case: UC6 - Delete a task**","lastModifiedDate":"2022-11-07"},{"lineNumber":421,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":422,"author":{"gitId":"jasonqiu212"},"content":"MSS:","lastModifiedDate":"2022-11-07"},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":424,"author":{"gitId":"jasonqiu212"},"content":"1.  User requests to view all tasks.","lastModifiedDate":"2022-11-07"},{"lineNumber":425,"author":{"gitId":"jasonqiu212"},"content":"2.  Swift+ returns a list of all tasks.","lastModifiedDate":"2022-11-07"},{"lineNumber":426,"author":{"gitId":"jasonqiu212"},"content":"3.  User requests to delete a specific task in the list.","lastModifiedDate":"2022-11-07"},{"lineNumber":427,"author":{"gitId":"jasonqiu212"},"content":"4.  Swift+ deletes the specified task.","lastModifiedDate":"2022-11-07"},{"lineNumber":428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":429,"author":{"gitId":"peppapighs"},"content":"Use case ends.","lastModifiedDate":"2022-09-27"},{"lineNumber":430,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":431,"author":{"gitId":"jasonqiu212"},"content":"Extensions:","lastModifiedDate":"2022-11-07"},{"lineNumber":432,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":433,"author":{"gitId":"jasonqiu212"},"content":"- 2a. Swift+ returns an empty list.","lastModifiedDate":"2022-11-07"},{"lineNumber":434,"author":{"gitId":"jasonqiu212"},"content":"    - Use case ends.","lastModifiedDate":"2022-11-07"},{"lineNumber":435,"author":{"gitId":"jasonqiu212"},"content":"- 3a. Swift+ detects the given index to be invalid.","lastModifiedDate":"2022-11-07"},{"lineNumber":436,"author":{"gitId":"jasonqiu212"},"content":"    - 3a1. Swift+ requests for a valid index.","lastModifiedDate":"2022-11-07"},{"lineNumber":437,"author":{"gitId":"jasonqiu212"},"content":"    - Use case resumes from step 3.","lastModifiedDate":"2022-11-07"},{"lineNumber":438,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":439,"author":{"gitId":"jasonqiu212"},"content":"**Use case: UC7 - View tasks associated with a contact**","lastModifiedDate":"2022-11-07"},{"lineNumber":440,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":441,"author":{"gitId":"jasonqiu212"},"content":"MSS:","lastModifiedDate":"2022-11-07"},{"lineNumber":442,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":443,"author":{"gitId":"jasonqiu212"},"content":"1. User requests to view all contacts.","lastModifiedDate":"2022-11-07"},{"lineNumber":444,"author":{"gitId":"jasonqiu212"},"content":"2. Swift+ returns a list of all contacts.","lastModifiedDate":"2022-11-07"},{"lineNumber":445,"author":{"gitId":"jasonqiu212"},"content":"3. User requests to view tasks associated with a specified contact.","lastModifiedDate":"2022-11-07"},{"lineNumber":446,"author":{"gitId":"jasonqiu212"},"content":"4. Swift+ returns the contact and all associated tasks.","lastModifiedDate":"2022-11-07"},{"lineNumber":447,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":448,"author":{"gitId":"jasonqiu212"},"content":"Extensions:","lastModifiedDate":"2022-11-07"},{"lineNumber":449,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":450,"author":{"gitId":"jasonqiu212"},"content":"- 2a. Swift+ returns an empty list.","lastModifiedDate":"2022-11-07"},{"lineNumber":451,"author":{"gitId":"jasonqiu212"},"content":"    - Use case ends.","lastModifiedDate":"2022-11-07"},{"lineNumber":452,"author":{"gitId":"jasonqiu212"},"content":"- 3a. Swift+ detects the given index to be invalid.","lastModifiedDate":"2022-11-07"},{"lineNumber":453,"author":{"gitId":"jasonqiu212"},"content":"    - 3a1. Swift+ requests for a valid index.","lastModifiedDate":"2022-11-07"},{"lineNumber":454,"author":{"gitId":"jasonqiu212"},"content":"    - Use case resumes from step 3.","lastModifiedDate":"2022-11-07"},{"lineNumber":455,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":456,"author":{"gitId":"jasonqiu212"},"content":"**Use case: UC8 - Mark a task as completed**","lastModifiedDate":"2022-11-07"},{"lineNumber":457,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":458,"author":{"gitId":"jasonqiu212"},"content":"MSS:","lastModifiedDate":"2022-11-07"},{"lineNumber":459,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":460,"author":{"gitId":"jasonqiu212"},"content":"1. User requests to view all tasks.","lastModifiedDate":"2022-11-07"},{"lineNumber":461,"author":{"gitId":"jasonqiu212"},"content":"2. Swift+ returns a list of all tasks.","lastModifiedDate":"2022-11-07"},{"lineNumber":462,"author":{"gitId":"jasonqiu212"},"content":"3. User requests to mark a task as completed.","lastModifiedDate":"2022-11-07"},{"lineNumber":463,"author":{"gitId":"jasonqiu212"},"content":"4. Swift+ marks the specified task as completed.","lastModifiedDate":"2022-11-07"},{"lineNumber":464,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":465,"author":{"gitId":"jasonqiu212"},"content":"Extensions:","lastModifiedDate":"2022-11-07"},{"lineNumber":466,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":467,"author":{"gitId":"jasonqiu212"},"content":"- 2a. Swift+ returns an empty list.","lastModifiedDate":"2022-11-07"},{"lineNumber":468,"author":{"gitId":"jasonqiu212"},"content":"    - Use case ends.","lastModifiedDate":"2022-11-07"},{"lineNumber":469,"author":{"gitId":"jasonqiu212"},"content":"- 3a. Swift+ detects the given index to be invalid.","lastModifiedDate":"2022-11-07"},{"lineNumber":470,"author":{"gitId":"jasonqiu212"},"content":"    - 3a1. Swift+ requests for a valid index.","lastModifiedDate":"2022-11-07"},{"lineNumber":471,"author":{"gitId":"jasonqiu212"},"content":"    - Use case resumes from step 3.","lastModifiedDate":"2022-11-07"},{"lineNumber":472,"author":{"gitId":"jasonqiu212"},"content":"- 3b. Swift+ detects that the specified task is already completed.","lastModifiedDate":"2022-11-07"},{"lineNumber":473,"author":{"gitId":"jasonqiu212"},"content":"    - Swift+ indicates that task is already completed.","lastModifiedDate":"2022-11-07"},{"lineNumber":474,"author":{"gitId":"jasonqiu212"},"content":"    - Use case ends.","lastModifiedDate":"2022-11-07"},{"lineNumber":475,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":476,"author":{"gitId":"jasonqiu212"},"content":"**Use case: UC9 - Assign a task to a contact**","lastModifiedDate":"2022-11-07"},{"lineNumber":477,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":478,"author":{"gitId":"jasonqiu212"},"content":"MSS:","lastModifiedDate":"2022-11-07"},{"lineNumber":479,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":480,"author":{"gitId":"jasonqiu212"},"content":"1. User requests to view all tasks and contacts.","lastModifiedDate":"2022-11-07"},{"lineNumber":481,"author":{"gitId":"jasonqiu212"},"content":"2. Swift+ returns all tasks and contacts.","lastModifiedDate":"2022-11-07"},{"lineNumber":482,"author":{"gitId":"jasonqiu212"},"content":"3. User requests to assign a task to a contact.","lastModifiedDate":"2022-11-07"},{"lineNumber":483,"author":{"gitId":"jasonqiu212"},"content":"4. Swift+ assigns the specified task to the specified contact.","lastModifiedDate":"2022-11-07"},{"lineNumber":484,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":485,"author":{"gitId":"jasonqiu212"},"content":"Extensions:","lastModifiedDate":"2022-11-07"},{"lineNumber":486,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":487,"author":{"gitId":"jasonqiu212"},"content":"- 2a. Swift+ returns an empty list of contacts.","lastModifiedDate":"2022-11-07"},{"lineNumber":488,"author":{"gitId":"jasonqiu212"},"content":"    - Use case ends.","lastModifiedDate":"2022-11-07"},{"lineNumber":489,"author":{"gitId":"jasonqiu212"},"content":"- 2b. Swift+ returns an empty list of tasks.","lastModifiedDate":"2022-11-07"},{"lineNumber":490,"author":{"gitId":"jasonqiu212"},"content":"    - Use case ends.","lastModifiedDate":"2022-11-07"},{"lineNumber":491,"author":{"gitId":"jasonqiu212"},"content":"- 3a. Swift+ detects given contact or task index to be invalid.","lastModifiedDate":"2022-11-07"},{"lineNumber":492,"author":{"gitId":"jasonqiu212"},"content":"    - Swift+ requests for a valid index.","lastModifiedDate":"2022-11-07"},{"lineNumber":493,"author":{"gitId":"jasonqiu212"},"content":"    - Use case resumes from step 3.","lastModifiedDate":"2022-11-07"},{"lineNumber":494,"author":{"gitId":"jasonqiu212"},"content":"- 3b. Swift+ detects that the specified task is already assigned to the specified contact.","lastModifiedDate":"2022-11-07"},{"lineNumber":495,"author":{"gitId":"jasonqiu212"},"content":"    - Swift+ indicates that task is already assigned to the contact.","lastModifiedDate":"2022-11-07"},{"lineNumber":496,"author":{"gitId":"jasonqiu212"},"content":"    - Use case ends.","lastModifiedDate":"2022-11-07"},{"lineNumber":497,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":498,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":499,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":500,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":501,"author":{"gitId":"santosh3007"},"content":"2.  Should be able to hold up to 1000 tasks and contacts without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2022-09-28"},{"lineNumber":502,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":503,"author":{"gitId":"santosh3007"},"content":"4.  Data should be persistent and stored in the local machine\u0027s storage.","lastModifiedDate":"2022-09-28"},{"lineNumber":504,"author":{"gitId":"santosh3007"},"content":"5.  Product is designed for single user and is not required to handle collaboration between multiple users.","lastModifiedDate":"2022-09-28"},{"lineNumber":505,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":506,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":507,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":508,"author":{"gitId":"jasonqiu212"},"content":"- **API**: Stands for application programming interface, which is a set of definitions and protocols for building and integrating application software.","lastModifiedDate":"2022-11-07"},{"lineNumber":509,"author":{"gitId":"jasonqiu212"},"content":"- **Bridge**: Maps a relationship between a contact and a task.","lastModifiedDate":"2022-11-07"},{"lineNumber":510,"author":{"gitId":"jasonqiu212"},"content":"- **GUI**: Stands for graphical user interface, which is a system interface that uses visual icons, menus, and a mouse to manage interactions with the system.","lastModifiedDate":"2022-11-07"},{"lineNumber":511,"author":{"gitId":"jasonqiu212"},"content":"- **Mainstream OS**: Stands for mainstream operating systems, which includes Windows, Linux, Unix, and OS-X.","lastModifiedDate":"2022-11-07"},{"lineNumber":512,"author":{"gitId":"jasonqiu212"},"content":"- **UUID**: Stands for universally unique identifier, which is used for identifying information that needs to be unique within a system.","lastModifiedDate":"2022-11-07"},{"lineNumber":513,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":514,"author":{"gitId":"ShenyiCui"},"content":"---","lastModifiedDate":"2022-10-22"},{"lineNumber":515,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":516,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":517,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":518,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":519,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":520,"author":{"gitId":"jasonqiu212"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note** \u003cbr\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":521,"author":{"gitId":"jasonqiu212"},"content":"These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2022-10-26"},{"lineNumber":522,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":523,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":524,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":525,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":526,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":527,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":528,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":529,"author":{"gitId":"ShenyiCui"},"content":"   1. Download the jar file and copy into an empty folder.","lastModifiedDate":"2022-11-07"},{"lineNumber":530,"author":{"gitId":"jasonqiu212"},"content":"   2. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2022-09-27"},{"lineNumber":531,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":532,"author":{"gitId":"jasonqiu212"},"content":"2. Saving window preferences","lastModifiedDate":"2022-09-27"},{"lineNumber":533,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":534,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":535,"author":{"gitId":"jasonqiu212"},"content":"   2. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2022-09-27"},{"lineNumber":536,"author":{"gitId":"-"},"content":"      Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":537,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":538,"author":{"gitId":"santosh3007"},"content":"### Adding a Task","lastModifiedDate":"2022-11-07"},{"lineNumber":539,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":540,"author":{"gitId":"ShenyiCui"},"content":"1. Adding a Task","lastModifiedDate":"2022-11-07"},{"lineNumber":541,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":542,"author":{"gitId":"ShenyiCui"},"content":"   1. Prerequisites: task \"Foo\" isn\u0027t already added. If added, delete it first.","lastModifiedDate":"2022-11-07"},{"lineNumber":543,"author":{"gitId":"ShenyiCui"},"content":"   2. Test case: `add_task n/Foo d/Foo`\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":544,"author":{"gitId":"ShenyiCui"},"content":"      Expected: Task \"Foo\" is added to the task list. Details of the added task shown in the status message.","lastModifiedDate":"2022-11-07"},{"lineNumber":545,"author":{"gitId":"ShenyiCui"},"content":"   3. Test case: `add_task n/Foo d/Foo`\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":546,"author":{"gitId":"ShenyiCui"},"content":"      Expected: No task is added. Error details shown in the status message.","lastModifiedDate":"2022-11-07"},{"lineNumber":547,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":548,"author":{"gitId":"santosh3007"},"content":"2. Adding a Task with deadline","lastModifiedDate":"2022-11-07"},{"lineNumber":549,"author":{"gitId":"ShenyiCui"},"content":"   1. Prerequisites: deadline \"Bar\" isn\u0027t already added. If added, delete it first.","lastModifiedDate":"2022-11-07"},{"lineNumber":550,"author":{"gitId":"ShenyiCui"},"content":"   2. Test case: `add_task n/Bar d/Bar dl/02-02-2022 2200`\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":551,"author":{"gitId":"ShenyiCui"},"content":"      Expected: Deadline \"Bar\" is added to the task list. Details of the added deadline shown in the status message.","lastModifiedDate":"2022-11-07"},{"lineNumber":552,"author":{"gitId":"ShenyiCui"},"content":"   3. Test case: `add_task n/Bar d/Bar dl/02-02-2022 2200`\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":553,"author":{"gitId":"ShenyiCui"},"content":"      Expected: No deadline is added. Error details shown in the status message.","lastModifiedDate":"2022-11-07"},{"lineNumber":554,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":555,"author":{"gitId":"santosh3007"},"content":"### Mark / Unmark a Task","lastModifiedDate":"2022-11-07"},{"lineNumber":556,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":557,"author":{"gitId":"santosh3007"},"content":"1. Marking a Task as completed","lastModifiedDate":"2022-11-07"},{"lineNumber":558,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":559,"author":{"gitId":"ShenyiCui"},"content":"   1. Prerequisites: task \"Foo\" is already added. If not added, add it first. Foo should be the first index in the task list.","lastModifiedDate":"2022-11-07"},{"lineNumber":560,"author":{"gitId":"ShenyiCui"},"content":"   2. Test case: `mark 1`\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":561,"author":{"gitId":"ShenyiCui"},"content":"      Expected: Task \"Foo\" is marked as completed. Details of the completed task shown in the status message.","lastModifiedDate":"2022-11-07"},{"lineNumber":562,"author":{"gitId":"ShenyiCui"},"content":"   3. Test case: `mark 1`\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":563,"author":{"gitId":"ShenyiCui"},"content":"      Expected: No task is marked as completed. Error details shown in the status message.","lastModifiedDate":"2022-11-07"},{"lineNumber":564,"author":{"gitId":"ShenyiCui"},"content":"   4. Test case: `mark 0`\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":565,"author":{"gitId":"ShenyiCui"},"content":"      Expected: No task is marked as completed. Error details shown in the status message.","lastModifiedDate":"2022-11-07"},{"lineNumber":566,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":567,"author":{"gitId":"santosh3007"},"content":"2. Unmarking a Task as incomplete","lastModifiedDate":"2022-11-07"},{"lineNumber":568,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":569,"author":{"gitId":"ShenyiCui"},"content":"   1. Prerequisites: task \"Bar\" is already added. If not added, add it first. Foo should be the first index in the task list and already marked as complete.","lastModifiedDate":"2022-11-07"},{"lineNumber":570,"author":{"gitId":"ShenyiCui"},"content":"   2. Test case: `unmark 1`\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":571,"author":{"gitId":"ShenyiCui"},"content":"      Expected: Task \"Bar\" is marked as uncompleted. Details of the uncompleted task shown in the status message.","lastModifiedDate":"2022-11-07"},{"lineNumber":572,"author":{"gitId":"ShenyiCui"},"content":"   3. Test case: `unmark 1`\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":573,"author":{"gitId":"ShenyiCui"},"content":"      Expected: No task is marked as uncompleted. Error details shown in the status message.","lastModifiedDate":"2022-11-07"},{"lineNumber":574,"author":{"gitId":"ShenyiCui"},"content":"   4. Test case: `unmark 0`\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":575,"author":{"gitId":"ShenyiCui"},"content":"      Expected: No task is marked as uncompleted. Error details shown in the status message.","lastModifiedDate":"2022-11-07"},{"lineNumber":576,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":577,"author":{"gitId":"ShenyiCui"},"content":"### Switching Lists","lastModifiedDate":"2022-11-07"},{"lineNumber":578,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":579,"author":{"gitId":"ShenyiCui"},"content":"1. List all tasks","lastModifiedDate":"2022-11-07"},{"lineNumber":580,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":581,"author":{"gitId":"ShenyiCui"},"content":"   1. Test case: `list_task`\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":582,"author":{"gitId":"ShenyiCui"},"content":"      Expected: All tasks are listed in the task list and, if not already on the \"Task List\" view it\u0027s swapped to it. Details of the listed tasks shown in the status message.","lastModifiedDate":"2022-11-07"},{"lineNumber":583,"author":{"gitId":"ShenyiCui"},"content":"   2. Test case: `list_contact`\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":584,"author":{"gitId":"ShenyiCui"},"content":"      Expected: All contacts are listed in the contact list and, if not already on the \"Contact List\" view it\u0027s swapped to it. Details of the listed contacts shown in the status message.","lastModifiedDate":"2022-11-07"},{"lineNumber":585,"author":{"gitId":"ShenyiCui"},"content":"   3. Test case: type `ctrl + tab`\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":586,"author":{"gitId":"ShenyiCui"},"content":"      Expected: The current list is switched to the other list.","lastModifiedDate":"2022-11-07"},{"lineNumber":587,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":588,"author":{"gitId":"santosh3007"},"content":"### Viewing Task and Contact Assocation","lastModifiedDate":"2022-11-07"},{"lineNumber":589,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":590,"author":{"gitId":"santosh3007"},"content":"1. Select Task to view Contact Assocation","lastModifiedDate":"2022-11-07"},{"lineNumber":591,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":592,"author":{"gitId":"ShenyiCui"},"content":"   1. Prerequisites: task \"Foo\" is already added and assigned to contact \"Alex\". If not added, add it first. Foo should be the first index in the task list.","lastModifiedDate":"2022-11-07"},{"lineNumber":593,"author":{"gitId":"ShenyiCui"},"content":"   2. Test case: `select_task 1`\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":594,"author":{"gitId":"ShenyiCui"},"content":"      Expected: Task \"Foo\" is selected, the view is swapped to the \"Task List\" and the contact list is updated to show all contacts associated with the task. Details of the selected task shown in the status message.","lastModifiedDate":"2022-11-07"},{"lineNumber":595,"author":{"gitId":"ShenyiCui"},"content":"   3. Test case: `select_task 0`\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":596,"author":{"gitId":"ShenyiCui"},"content":"      Expected: No task is selected. Error details shown in the status message.","lastModifiedDate":"2022-11-07"},{"lineNumber":597,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":598,"author":{"gitId":"santosh3007"},"content":"2. Select Contact to view Task Association","lastModifiedDate":"2022-11-07"},{"lineNumber":599,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":600,"author":{"gitId":"ShenyiCui"},"content":"   1. Prerequisites: contact \"Alex\" is already added and assigned to task \"Foo\". If not added, add it first. Alex should be the first index in the contact list.","lastModifiedDate":"2022-11-07"},{"lineNumber":601,"author":{"gitId":"ShenyiCui"},"content":"   2. Test case: `select_contact 1`\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":602,"author":{"gitId":"ShenyiCui"},"content":"      Expected: Contact \"Alex\" is selected, the view is swapped to the \"Contact List\" and the task list is updated to show all tasks associated with the contact. Details of the selected contact shown in the status message.","lastModifiedDate":"2022-11-07"},{"lineNumber":603,"author":{"gitId":"ShenyiCui"},"content":"   3. Test case: `select_contact 0`\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":604,"author":{"gitId":"ShenyiCui"},"content":"      Expected: No contact is selected. Error details shown in the status message.","lastModifiedDate":"2022-11-07"},{"lineNumber":605,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":606,"author":{"gitId":"santosh3007"},"content":"### Finding Task or Contact","lastModifiedDate":"2022-11-07"},{"lineNumber":607,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":608,"author":{"gitId":"santosh3007"},"content":"1. Find Task","lastModifiedDate":"2022-11-07"},{"lineNumber":609,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":610,"author":{"gitId":"ShenyiCui"},"content":"   1. Prerequisites: task \"Foo\" is already added and \"Bar\" is not added. If not added, add it first.","lastModifiedDate":"2022-11-07"},{"lineNumber":611,"author":{"gitId":"ShenyiCui"},"content":"   2. Test case: `find_task Foo`\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":612,"author":{"gitId":"ShenyiCui"},"content":"      Expected: All tasks containing \"Foo\" are listed in the task list. Details of the listed tasks shown in the status message.","lastModifiedDate":"2022-11-07"},{"lineNumber":613,"author":{"gitId":"ShenyiCui"},"content":"   3. Test case: `find_task Bar`\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":614,"author":{"gitId":"ShenyiCui"},"content":"      Expected: No tasks are listed in the task list. Details of the listed tasks shown in the status message.","lastModifiedDate":"2022-11-07"},{"lineNumber":615,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":616,"author":{"gitId":"ShenyiCui"},"content":"2. Find Contact","lastModifiedDate":"2022-11-07"},{"lineNumber":617,"author":{"gitId":"ShenyiCui"},"content":"   1. Prerequisites: contact \"Alex\" is already added and \"Bob is not added\". If not added, add it first.","lastModifiedDate":"2022-11-07"},{"lineNumber":618,"author":{"gitId":"ShenyiCui"},"content":"   2. Test case: `find_contact Alex`\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":619,"author":{"gitId":"ShenyiCui"},"content":"      Expected: All contacts containing \"Alex\" are listed in the contact list. Details of the listed contacts shown in the status message.","lastModifiedDate":"2022-11-07"},{"lineNumber":620,"author":{"gitId":"ShenyiCui"},"content":"   3. Test case: `find_contact Bob`\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":621,"author":{"gitId":"ShenyiCui"},"content":"      Expected: No contacts are listed in the contact list. Details of the listed contacts shown in the status message.","lastModifiedDate":"2022-11-07"},{"lineNumber":622,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":623,"author":{"gitId":"santosh3007"},"content":"### Deleting a Task or Contact","lastModifiedDate":"2022-11-07"},{"lineNumber":624,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":625,"author":{"gitId":"ShenyiCui"},"content":"1. Deleting a Contact or Task while all Contact or Task are being shown","lastModifiedDate":"2022-11-07"},{"lineNumber":626,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":627,"author":{"gitId":"santosh3007"},"content":"   1. Prerequisites: List all Contacts or Tasks using the `list_contact` or `list_task` command.","lastModifiedDate":"2022-11-07"},{"lineNumber":628,"author":{"gitId":"ShenyiCui"},"content":"   2. Test case: `delete_contact 1` or `delete_task 1`\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":629,"author":{"gitId":"ShenyiCui"},"content":"      Expected: First Contact or Task is deleted from the list. Details of the deleted Contact or Task shown in the status message.","lastModifiedDate":"2022-11-07"},{"lineNumber":630,"author":{"gitId":"ShenyiCui"},"content":"   3. Test case: `delete_contact 0` or `delete_task 0`\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":631,"author":{"gitId":"ShenyiCui"},"content":"      Expected: No Contact, Task is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2022-11-07"},{"lineNumber":632,"author":{"gitId":"ShenyiCui"},"content":"   4. Other incorrect delete commands to try: `delete_contact` / `delete_task`, `delete_contact x` / `delete_task x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":633,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":634,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":635,"author":{"gitId":"santosh3007"},"content":"### Editing a Task or Contact","lastModifiedDate":"2022-11-07"},{"lineNumber":636,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":637,"author":{"gitId":"ShenyiCui"},"content":"1. Editing a Contact or Task while all Contact or Task are being shown","lastModifiedDate":"2022-11-07"},{"lineNumber":638,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":639,"author":{"gitId":"ShenyiCui"},"content":"   1. Prerequisites: List all Contacts or Tasks using the `list_contact` or `list_task` command. There should be at least one contact or task.","lastModifiedDate":"2022-11-07"},{"lineNumber":640,"author":{"gitId":"santosh3007"},"content":"   2. Test case: `edit_contact 1 n/Alex Yeoh p/98765432`","lastModifiedDate":"2022-11-07"},{"lineNumber":641,"author":{"gitId":"ShenyiCui"},"content":"      Expected: First Contact is edited to have the name \"Alex Yeoh\" and phone number \"98765432\". Details of the edited Contact shown in the status message.","lastModifiedDate":"2022-11-07"},{"lineNumber":642,"author":{"gitId":"ShenyiCui"},"content":"   3. Test case: `edit_contact 0 n/Alex Yeoh p/98765432`\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":643,"author":{"gitId":"ShenyiCui"},"content":"      Expected: No Contact is edited. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2022-11-07"},{"lineNumber":644,"author":{"gitId":"ShenyiCui"},"content":"   4. Test case: `edit_task 1 n/Bar d/Foo dl/02-02-2022 2200`\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":645,"author":{"gitId":"ShenyiCui"},"content":"      Expected: First Task is edited to have the name \"Bar\", description \"Foo\" and deadline \"02-02-2022 2200\". Details of the edited Task shown in the status message.","lastModifiedDate":"2022-11-07"},{"lineNumber":646,"author":{"gitId":"ShenyiCui"},"content":"   5. Test case: `edit_task 0 n/Bar d/Foo dl/02-02-2022 2200`\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":647,"author":{"gitId":"ShenyiCui"},"content":"      Expected: No Task is edited. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2022-11-07"},{"lineNumber":648,"author":{"gitId":"ShenyiCui"},"content":"   6. Other incorrect edit commands to try: `edit_contact` / `edit_task`, `edit_contact x ...` / `edit_task x ...`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":649,"author":{"gitId":"ShenyiCui"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2022-11-07"},{"lineNumber":650,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":651,"author":{"gitId":"ShenyiCui"},"content":"### Autocomplete","lastModifiedDate":"2022-11-07"},{"lineNumber":652,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":653,"author":{"gitId":"ShenyiCui"},"content":"1. type `li` then press `tab`\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":654,"author":{"gitId":"ShenyiCui"},"content":"   Expected: Autocomplete the command based on the current command text, autocompleting it to `list\\_`.","lastModifiedDate":"2022-11-07"},{"lineNumber":655,"author":{"gitId":"ShenyiCui"},"content":"2. type `list_t` then press `tab`\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":656,"author":{"gitId":"ShenyiCui"},"content":"   Expected: Autocomplete the command based on the current command text, autocompleting it to `list_task`.","lastModifiedDate":"2022-11-07"},{"lineNumber":657,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":658,"author":{"gitId":"ShenyiCui"},"content":"### Clearing all entries","lastModifiedDate":"2022-11-07"},{"lineNumber":659,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":660,"author":{"gitId":"ShenyiCui"},"content":"1. Clear all exisiting data in the application","lastModifiedDate":"2022-11-07"},{"lineNumber":661,"author":{"gitId":"ShenyiCui"},"content":"   1. Test case: `clear`\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":662,"author":{"gitId":"ShenyiCui"},"content":"      Expected: All data is cleared from the application. Status message shows the number of contacts and tasks cleared.","lastModifiedDate":"2022-11-07"},{"lineNumber":663,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":664,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":665,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":666,"author":{"gitId":"ShenyiCui"},"content":"1.  Shutdown the app by typing `exit` into the command box.","lastModifiedDate":"2022-11-07"},{"lineNumber":667,"author":{"gitId":"ShenyiCui"},"content":"2.  Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":668,"author":{"gitId":"ShenyiCui"},"content":"    Expected: The most recent state is saved.","lastModifiedDate":"2022-11-07"},{"lineNumber":669,"author":{"gitId":"ShenyiCui"},"content":"3.  Dealing with missing/corrupted data files","lastModifiedDate":"2022-11-07"},{"lineNumber":670,"author":{"gitId":"ShenyiCui"},"content":"    1.  Corrupt the data file in `data/addressbook.json` by adding random characters to make the JSON file unreadable or by simply deleting it.","lastModifiedDate":"2022-11-07"},{"lineNumber":671,"author":{"gitId":"ShenyiCui"},"content":"    2.  Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":672,"author":{"gitId":"ShenyiCui"},"content":"        Expected: The app will start with an empty address book.","lastModifiedDate":"2022-11-07"},{"lineNumber":673,"author":{"gitId":"ShenyiCui"},"content":"    3.  After new data is added, the corrupted data file will be overwritten by the app. Any missing file will be replaced by the app.","lastModifiedDate":"2022-11-07"},{"lineNumber":674,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":675,"author":{"gitId":"ShenyiCui"},"content":"### Viewing Help","lastModifiedDate":"2022-11-07"},{"lineNumber":676,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":677,"author":{"gitId":"ShenyiCui"},"content":"1. View Help","lastModifiedDate":"2022-11-07"},{"lineNumber":678,"author":{"gitId":"ShenyiCui"},"content":"   1. Test case: `help`\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":679,"author":{"gitId":"ShenyiCui"},"content":"      Expected: Help window opens.","lastModifiedDate":"2022-11-07"},{"lineNumber":680,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":681,"author":{"gitId":"jasonqiu212"},"content":"---","lastModifiedDate":"2022-10-21"},{"lineNumber":682,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":683,"author":{"gitId":"jasonqiu212"},"content":"## **Acknowledgements**","lastModifiedDate":"2022-10-21"},{"lineNumber":684,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":685,"author":{"gitId":"jasonqiu212"},"content":"- This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2022-10-21"},{"lineNumber":686,"author":{"gitId":"jasonqiu212"},"content":"- Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2022-10-21"},{"lineNumber":687,"author":{"gitId":"jasonqiu212"},"content":"- UI color scheme inspired by [TailwindUI](https://tailwindui.com/)","lastModifiedDate":"2022-10-28"}],"authorContributionMap":{"jasonqiu212":247,"ShenyiCui":127,"santosh3007":44,"-":226,"peppapighs":40,"yunruu":3}},{"path":"docs/Documentation.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"jasonqiu212"},"content":"title: Documentation Guide","lastModifiedDate":"2022-11-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"**Setting up and maintaining the project website:**","lastModifiedDate":"2020-06-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"jasonqiu212"},"content":"- We use [**Jekyll**](https://jekyllrb.com/) to manage documentation.","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"jasonqiu212"},"content":"- The `docs/` folder is used for documentation.","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"jasonqiu212"},"content":"- To learn how set it up and maintain the project website, follow the guide [_[se-edu/guides] **Using Jekyll for project documentation**_](https://se-education.org/guides/tutorials/jekyll.html).","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"jasonqiu212"},"content":"- Note these points when adapting the documentation to a different project/product:","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"jasonqiu212"},"content":"  - The \u0027Site-wide settings\u0027 section of the page linked above has information on how to update site-wide elements such as the top navigation bar.","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"jasonqiu212"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip** \u003cbr\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"jasonqiu212"},"content":"In addition to updating content files, you might have to update the config files `docs\\_config.yml` and `docs\\_sass\\minima\\_base.scss` (which contains a reference to `AB-3` that comes into play when converting documentation pages to PDF format).","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"jasonqiu212"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"jasonqiu212"},"content":"- If you are using Intellij for editing documentation files, you can consider enabling \u0027soft wrapping\u0027 for `*.md` files, as explained in [_[se-edu/guides] **Intellij IDEA: Useful settings**_](https://se-education.org/guides/tutorials/intellijUsefulSettings.html#enabling-soft-wrapping)","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"jasonqiu212"},"content":"**Style Guidance:**","lastModifiedDate":"2022-11-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"jasonqiu212"},"content":"- Follow the [**_Google developer documentation style guide_**](https://developers.google.com/style).","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"jasonqiu212"},"content":"- Also relevant is the [_[se-edu/guides] **Markdown coding standard**_](https://se-education.org/guides/conventions/markdown.html)","lastModifiedDate":"2022-10-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"**Diagrams:**","lastModifiedDate":"2020-06-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"jasonqiu212"},"content":"- See the [_[se-edu/guides] **Using PlantUML**_](https://se-education.org/guides/tutorials/plantUml.html)","lastModifiedDate":"2022-10-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"**Converting a document to the PDF format:**","lastModifiedDate":"2020-06-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"jasonqiu212"},"content":"- See the guide [_[se-edu/guides] **Saving web documents as PDF files**_](https://se-education.org/guides/tutorials/savingPdf.html)","lastModifiedDate":"2022-10-21"}],"authorContributionMap":{"jasonqiu212":15,"-":18}},{"path":"docs/Logging.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-06-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-06-07"},{"lineNumber":3,"author":{"gitId":"jasonqiu212"},"content":"title: Logging Guide","lastModifiedDate":"2022-11-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-06-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":6,"author":{"gitId":"jasonqiu212"},"content":"- We are using `java.util.logging` package for logging.","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"jasonqiu212"},"content":"- The `LogsCenter` class is used to manage the logging levels and logging destinations.","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"jasonqiu212"},"content":"- The `Logger` for a class can be obtained using `LogsCenter.getLogger(Class)` which will log messages according to the specified logging level.","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"jasonqiu212"},"content":"- Log messages are output through the console and to a `.log` file.","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"jasonqiu212"},"content":"- The output logging level can be controlled using the `logLevel` setting in the configuration file (See the [Configuration guide](Configuration.md) section).","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"jasonqiu212"},"content":"- **When choosing a level for a log message**, follow the conventions given in [_[se-edu/guides] Java: Logging conventions_](https://se-education.org/guides/conventions/java/logging.html).","lastModifiedDate":"2022-10-21"}],"authorContributionMap":{"jasonqiu212":7,"-":4}},{"path":"docs/SettingUp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Setting up and getting started","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"jasonqiu212"},"content":"## **Tables of Contents**","lastModifiedDate":"2022-11-07"},{"lineNumber":7,"author":{"gitId":"jasonqiu212"},"content":"{:.no_toc}","lastModifiedDate":"2022-11-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":9,"author":{"gitId":"jasonqiu212"},"content":"1. Table of Contents","lastModifiedDate":"2022-11-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"jasonqiu212"},"content":"---","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"jasonqiu212"},"content":"## **Setting up the project in your computer**","lastModifiedDate":"2022-11-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"jasonqiu212"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:warning: **Caution** \u003cbr\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps.","lastModifiedDate":"2020-06-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"First, **fork** this repo, and **clone** the fork into your computer.","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK 11**.","lastModifiedDate":"2020-06-07"},{"lineNumber":25,"author":{"gitId":"jasonqiu212"},"content":"2. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.\u003cbr\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   :exclamation: Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2020-06-07"},{"lineNumber":27,"author":{"gitId":"jasonqiu212"},"content":"3. **Verify the setup**:","lastModifiedDate":"2022-10-21"},{"lineNumber":28,"author":{"gitId":"peppapighs"},"content":"   1. Run the `swift.Main` and try a few commands.","lastModifiedDate":"2022-10-01"},{"lineNumber":29,"author":{"gitId":"jasonqiu212"},"content":"   2. [Run the tests](Testing.md) to ensure they all pass.","lastModifiedDate":"2022-10-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":31,"author":{"gitId":"jasonqiu212"},"content":"---","lastModifiedDate":"2022-10-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"jasonqiu212"},"content":"## **Before writing code**","lastModifiedDate":"2022-11-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"1. **Configure the coding style**","lastModifiedDate":"2020-06-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours.","lastModifiedDate":"2020-09-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"jasonqiu212"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip** \u003cbr\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code.","lastModifiedDate":"2020-06-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"jasonqiu212"},"content":"2. **Set up CI**","lastModifiedDate":"2022-10-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"jasonqiu212"},"content":"3. **Learn the design**","lastModifiedDate":"2022-10-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [AddressBook’s architecture](DeveloperGuide.md#architecture).","lastModifiedDate":"2020-06-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"jasonqiu212"},"content":"4. **Do the tutorials**","lastModifiedDate":"2022-10-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   These tutorials will help you get acquainted with the codebase.","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"jasonqiu212"},"content":"   - [Tracing code](tutorials/TracingCode.md)","lastModifiedDate":"2022-10-21"},{"lineNumber":56,"author":{"gitId":"jasonqiu212"},"content":"   - [Adding a new command](tutorials/AddRemark.md)","lastModifiedDate":"2022-10-21"},{"lineNumber":57,"author":{"gitId":"jasonqiu212"},"content":"   - [Removing fields](tutorials/RemovingFields.md)","lastModifiedDate":"2022-10-21"}],"authorContributionMap":{"jasonqiu212":19,"-":37,"peppapighs":1}},{"path":"docs/Testing.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"jasonqiu212"},"content":"title: Testing Guide","lastModifiedDate":"2022-11-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"jasonqiu212"},"content":"## Table of Contents","lastModifiedDate":"2022-11-07"},{"lineNumber":7,"author":{"gitId":"jasonqiu212"},"content":"{:.no_toc}","lastModifiedDate":"2022-11-07"},{"lineNumber":8,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":9,"author":{"gitId":"jasonqiu212"},"content":"1. Table of Contents","lastModifiedDate":"2022-11-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"jasonqiu212"},"content":"---","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"jasonqiu212"},"content":"## **Running Tests**","lastModifiedDate":"2022-11-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"There are two ways to run tests.","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"jasonqiu212"},"content":"- **Method 1: Using IntelliJ JUnit test runner**","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"jasonqiu212"},"content":"  - To run all tests, right-click on the `src/test/java` folder and choose `Run \u0027All Tests\u0027`","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"jasonqiu212"},"content":"  - To run a subset of tests, you can right-click on a test package,","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    test class, or a test and choose `Run \u0027ABC\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"jasonqiu212"},"content":"- **Method 2: Using Gradle**","lastModifiedDate":"2022-10-21"},{"lineNumber":23,"author":{"gitId":"jasonqiu212"},"content":"  - Open a console and run the command `gradlew clean test` (Mac/Linux: `./gradlew clean test`)","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"jasonqiu212"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip** \u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":26,"author":{"gitId":"jasonqiu212"},"content":"Read this [Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html) to learn more about using Gradle.","lastModifiedDate":"2022-11-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"jasonqiu212"},"content":"---","lastModifiedDate":"2022-10-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"jasonqiu212"},"content":"## **Types of Tests**","lastModifiedDate":"2022-11-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"This project has three types of tests:","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"jasonqiu212"},"content":"1. _Unit tests_ targeting the lowest level methods/classes.\u003cbr\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":36,"author":{"gitId":"peppapighs"},"content":"   e.g. `swift.commons.StringUtilTest`","lastModifiedDate":"2022-10-01"},{"lineNumber":37,"author":{"gitId":"jasonqiu212"},"content":"2. _Integration tests_ that are checking the integration of multiple code units (those code units are assumed to be working).\u003cbr\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":38,"author":{"gitId":"peppapighs"},"content":"   e.g. `swift.storage.StorageManagerTest`","lastModifiedDate":"2022-10-01"},{"lineNumber":39,"author":{"gitId":"jasonqiu212"},"content":"3. Hybrids of unit and integration tests. These test are checking multiple code units as well as how the are connected together.\u003cbr\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":40,"author":{"gitId":"peppapighs"},"content":"   e.g. `swift.logic.LogicManagerTest`","lastModifiedDate":"2022-10-01"}],"authorContributionMap":{"jasonqiu212":19,"-":18,"peppapighs":3}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"jasonqiu212"},"content":"\u003c!---","lastModifiedDate":"2022-11-04"},{"lineNumber":7,"author":{"gitId":"jasonqiu212"},"content":"Overall structure of this user guide is adapted from https://ay2223s1-cs2103t-w16-2.github.io/tp/UserGuide.html","lastModifiedDate":"2022-11-04"},{"lineNumber":8,"author":{"gitId":"jasonqiu212"},"content":"---\u003e","lastModifiedDate":"2022-11-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":10,"author":{"gitId":"jasonqiu212"},"content":"## **About Swift+**","lastModifiedDate":"2022-10-30"},{"lineNumber":11,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":12,"author":{"gitId":"jasonqiu212"},"content":"Swift+ is a **project management app** designed to help software engineering (SWE) project leads in tracking their daily","lastModifiedDate":"2022-10-30"},{"lineNumber":13,"author":{"gitId":"jasonqiu212"},"content":"interactions with contacts. As a project lead, you can easily **record down your clients and teammates** by creating and editing ","lastModifiedDate":"2022-11-10"},{"lineNumber":14,"author":{"gitId":"jasonqiu212"},"content":"contacts using Swift+. Using Swift+’s **task management system**, you can assign tasks to contacts and mark tasks as completed.","lastModifiedDate":"2022-11-10"},{"lineNumber":15,"author":{"gitId":"jasonqiu212"},"content":"Finally, you can gain an overview of your project with our intuitive side-by-side user interface.","lastModifiedDate":"2022-10-30"},{"lineNumber":16,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":17,"author":{"gitId":"jasonqiu212"},"content":"Perfect for SWE professionals, Swift+ is built around a **command line interface**, complete with an **autocomplete** feature.","lastModifiedDate":"2022-10-30"},{"lineNumber":18,"author":{"gitId":"jasonqiu212"},"content":"If you have fast fingers, Swift+ can help you manage contacts and tasks more quickly than a traditional point-and-click interface.","lastModifiedDate":"2022-10-30"},{"lineNumber":19,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":20,"author":{"gitId":"jasonqiu212"},"content":"This user guide provides details on how to use Swift+ in your daily workflow. This guide covers how to set up Swift+ and","lastModifiedDate":"2022-10-30"},{"lineNumber":21,"author":{"gitId":"jasonqiu212"},"content":"use its text-based commands. Get started now by heading over to the [How to use this user guide](#how-to-use-this-user-guide) section!","lastModifiedDate":"2022-11-10"},{"lineNumber":22,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":23,"author":{"gitId":"jasonqiu212"},"content":"---","lastModifiedDate":"2022-10-30"},{"lineNumber":24,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":25,"author":{"gitId":"jasonqiu212"},"content":"## **Table of Contents**","lastModifiedDate":"2022-11-05"},{"lineNumber":26,"author":{"gitId":"jasonqiu212"},"content":"{:.no_toc}","lastModifiedDate":"2022-11-05"},{"lineNumber":27,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":28,"author":{"gitId":"jasonqiu212"},"content":"1. Table of Contents","lastModifiedDate":"2022-11-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"jasonqiu212"},"content":"---","lastModifiedDate":"2022-10-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"jasonqiu212"},"content":"## **How to use this user guide**","lastModifiedDate":"2022-11-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":35,"author":{"gitId":"jasonqiu212"},"content":"### Icons","lastModifiedDate":"2022-11-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":37,"author":{"gitId":"jasonqiu212"},"content":"Throughout this website, you may find colored boxes that contain useful information. The icon at the top of the box represents","lastModifiedDate":"2022-11-04"},{"lineNumber":38,"author":{"gitId":"jasonqiu212"},"content":"the type of information contained.","lastModifiedDate":"2022-11-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":40,"author":{"gitId":"jasonqiu212"},"content":"| Icon                                                      | Meaning                                                      |","lastModifiedDate":"2022-11-04"},{"lineNumber":41,"author":{"gitId":"peppapighs"},"content":"| --------------------------------------------------------- | ------------------------------------------------------------ |","lastModifiedDate":"2022-11-06"},{"lineNumber":42,"author":{"gitId":"jasonqiu212"},"content":"| ![Tip](images/user-guide/tip.png){:height\u003d\"32px\"}         | Tips to help you make the most out of Swift+.                |","lastModifiedDate":"2022-11-05"},{"lineNumber":43,"author":{"gitId":"jasonqiu212"},"content":"| ![Note](images/user-guide/note.png){:height\u003d\"32px\"}       | Information you should take note of while using Swift+.      |","lastModifiedDate":"2022-11-05"},{"lineNumber":44,"author":{"gitId":"jasonqiu212"},"content":"| ![Caution](images/user-guide/caution.png){:height\u003d\"32px\"} | Warnings that may corrupt your app and data if not followed. |","lastModifiedDate":"2022-11-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":46,"author":{"gitId":"jasonqiu212"},"content":"### Sections","lastModifiedDate":"2022-11-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"jasonqiu212"},"content":"If you have not installed Swift+, head over to the [Installation](#installation) section.","lastModifiedDate":"2022-10-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"jasonqiu212"},"content":"After installing Swift+, you can refer to our [Getting Started](#getting-started) section on the basics of using Swift+. This includes the app\u0027s,","lastModifiedDate":"2022-10-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":52,"author":{"gitId":"jasonqiu212"},"content":"- [Layout](#layout)","lastModifiedDate":"2022-11-05"},{"lineNumber":53,"author":{"gitId":"jasonqiu212"},"content":"- [Command format](#command-format)","lastModifiedDate":"2022-11-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"jasonqiu212"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip** \u003cbr\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":56,"author":{"gitId":"jasonqiu212"},"content":"If you are using Swift+ for the first time, we **highly recommend** that you read through the [Getting Started](#getting-started)","lastModifiedDate":"2022-10-30"},{"lineNumber":57,"author":{"gitId":"jasonqiu212"},"content":"section before the other sections.","lastModifiedDate":"2022-10-31"},{"lineNumber":58,"author":{"gitId":"jasonqiu212"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"jasonqiu212"},"content":"To view each command in detail, you can head over to the [Commands](#commands) section.","lastModifiedDate":"2022-10-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":62,"author":{"gitId":"jasonqiu212"},"content":"If you are an experienced user, you can refer to the [Command Summary](#command-summary) for a quick overview of the commands in Swift+.","lastModifiedDate":"2022-10-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":64,"author":{"gitId":"jasonqiu212"},"content":"If you have any questions while using the app, please refer to our [FAQ](#faq) section.","lastModifiedDate":"2022-10-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":66,"author":{"gitId":"jasonqiu212"},"content":"For any further queries or suggestions, you may reach out to us [here](/AboutUs)!","lastModifiedDate":"2022-10-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":68,"author":{"gitId":"jasonqiu212"},"content":"---","lastModifiedDate":"2022-10-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":70,"author":{"gitId":"jasonqiu212"},"content":"## **Getting Started**","lastModifiedDate":"2022-10-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"jasonqiu212"},"content":"This section covers how to install and start using Swift+.","lastModifiedDate":"2022-10-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"jasonqiu212"},"content":"### Installation","lastModifiedDate":"2022-10-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"jasonqiu212"},"content":"1. Ensure you have [Java 11](https://docs.oracle.com/en/java/javase/11/install/overview-jdk-installation.html) installed in your computer.","lastModifiedDate":"2022-10-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"jasonqiu212"},"content":"2. Download the latest release of `swift+.jar` from [here](https://github.com/AY2223S1-CS2103T-T12-2/tp/releases).","lastModifiedDate":"2022-10-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":80,"author":{"gitId":"jasonqiu212"},"content":"3. Copy the file to an empty folder. This will be your home folder for Swift+.","lastModifiedDate":"2022-10-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":82,"author":{"gitId":"jasonqiu212"},"content":"4. Double-click on the jar file to launch Swift+.","lastModifiedDate":"2022-10-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":84,"author":{"gitId":"jasonqiu212"},"content":"Congratulations! You have successfully set up Swift+.","lastModifiedDate":"2022-10-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"jasonqiu212"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip** \u003cbr\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":87,"author":{"gitId":"jasonqiu212"},"content":"The app comes with sample contacts and tasks by default. To delete the sample data quickly, you can use the [`clear`](#clearing-all-data-clear) command.","lastModifiedDate":"2022-10-28"},{"lineNumber":88,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":90,"author":{"gitId":"jasonqiu212"},"content":"### Layout","lastModifiedDate":"2022-10-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"jasonqiu212"},"content":"After you open Swift+, the app will appear in the form of a graphical user interface, or GUI. In Swift+, you can toggle","lastModifiedDate":"2022-10-30"},{"lineNumber":93,"author":{"gitId":"jasonqiu212"},"content":"between the [Contact View](#contact-view) and the [Task View](#task-view).","lastModifiedDate":"2022-11-05"},{"lineNumber":94,"author":{"gitId":"jasonqiu212"},"content":"Let\u0027s take a look at the different components in Swift+ below.","lastModifiedDate":"2022-10-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"jasonqiu212"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip** \u003cbr\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":97,"author":{"gitId":"jasonqiu212"},"content":"To toggle between Contact View and Task View, you can use the [`Ctrl + Tab`](#toggling-between-contacts-and-tasks-tabs-ctrl--tab) command.","lastModifiedDate":"2022-10-30"},{"lineNumber":98,"author":{"gitId":"jasonqiu212"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"jasonqiu212"},"content":"**Swift+\u0027s GUI:**","lastModifiedDate":"2022-10-30"},{"lineNumber":101,"author":{"gitId":"jasonqiu212"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2022-10-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"jasonqiu212"},"content":"This table showcases the components shared by both Contact View and Task View.","lastModifiedDate":"2022-11-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"jasonqiu212"},"content":"| Component Name        | Image                                                                      |","lastModifiedDate":"2022-10-30"},{"lineNumber":106,"author":{"gitId":"jasonqiu212"},"content":"|-----------------------|----------------------------------------------------------------------------|","lastModifiedDate":"2022-11-07"},{"lineNumber":107,"author":{"gitId":"jasonqiu212"},"content":"| **Menu Bar**          | ![Menu Bar](images/user-guide/menu-bar.png)                                |","lastModifiedDate":"2022-10-30"},{"lineNumber":108,"author":{"gitId":"jasonqiu212"},"content":"| **Command Input Box** | ![Command Input Box](images/user-guide/command-input-box.png)              |","lastModifiedDate":"2022-10-30"},{"lineNumber":109,"author":{"gitId":"jasonqiu212"},"content":"| **Command Results**   | ![Command Results](images/user-guide/command-results.png){:height\u003d\"120px\"} |","lastModifiedDate":"2022-11-07"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"jasonqiu212"},"content":"#### Contact View","lastModifiedDate":"2022-10-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"jasonqiu212"},"content":"The contact view is primarily for viewing contacts. The main panel on the left shows a list of contacts and all of their contact information. The right sidebar contains tasks with essential details.","lastModifiedDate":"2022-11-10"},{"lineNumber":114,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":115,"author":{"gitId":"jasonqiu212"},"content":"| Component Name   | Image                                                                |","lastModifiedDate":"2022-10-30"},{"lineNumber":116,"author":{"gitId":"peppapighs"},"content":"| ---------------- | -------------------------------------------------------------------- |","lastModifiedDate":"2022-11-06"},{"lineNumber":117,"author":{"gitId":"jasonqiu212"},"content":"| **Contact List** | ![Contact List](images/user-guide/contact-list.png){:height\u003d\"200px\"} |","lastModifiedDate":"2022-11-05"},{"lineNumber":118,"author":{"gitId":"jasonqiu212"},"content":"| **Task Sidebar** | ![Task Sidebar](images/user-guide/task-sidebar.png){:height\u003d\"150px\"} |","lastModifiedDate":"2022-11-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"jasonqiu212"},"content":"#### Task View","lastModifiedDate":"2022-10-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":122,"author":{"gitId":"jasonqiu212"},"content":"The task view is mainly for viewing tasks. The main panel on the left displays a list of tasks and all of their details. The right sidebar contains contacts with essential contact information.","lastModifiedDate":"2022-11-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":124,"author":{"gitId":"jasonqiu212"},"content":"| Component Name      | Image                                                                      |","lastModifiedDate":"2022-10-30"},{"lineNumber":125,"author":{"gitId":"peppapighs"},"content":"| ------------------- | -------------------------------------------------------------------------- |","lastModifiedDate":"2022-11-06"},{"lineNumber":126,"author":{"gitId":"jasonqiu212"},"content":"| **Task List**       | ![Task List](images/user-guide/task-list.png){:height\u003d\"200px\"}             |","lastModifiedDate":"2022-11-05"},{"lineNumber":127,"author":{"gitId":"jasonqiu212"},"content":"| **Contact Sidebar** | ![Contact Sidebar](images/user-guide/contact-sidebar.png){:height\u003d\"150px\"} |","lastModifiedDate":"2022-11-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"jasonqiu212"},"content":"### How to use Swift+ commands","lastModifiedDate":"2022-10-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"jasonqiu212"},"content":"Swift+ is built around text-based commands. Before we dive deeper into the details in the [Commands](#commands) section,","lastModifiedDate":"2022-10-31"},{"lineNumber":132,"author":{"gitId":"jasonqiu212"},"content":"let\u0027s learn the basic components and format of a command.","lastModifiedDate":"2022-10-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"jasonqiu212"},"content":"#### Flag","lastModifiedDate":"2022-10-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"jasonqiu212"},"content":"A flag is a delimiter that allows Swift+ to distinguish different input fields. For each flag, you would put in the","lastModifiedDate":"2022-10-31"},{"lineNumber":137,"author":{"gitId":"jasonqiu212"},"content":"corresponding parameter immediately after.","lastModifiedDate":"2022-10-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"jasonqiu212"},"content":"| Flag  | Corresponding Parameter |","lastModifiedDate":"2022-10-31"},{"lineNumber":140,"author":{"gitId":"peppapighs"},"content":"| ----- | ----------------------- |","lastModifiedDate":"2022-11-06"},{"lineNumber":141,"author":{"gitId":"jasonqiu212"},"content":"| `a/`  | `ADDRESS`               |","lastModifiedDate":"2022-10-31"},{"lineNumber":142,"author":{"gitId":"jasonqiu212"},"content":"| `c/`  | `CONTACT_INDEX`         |","lastModifiedDate":"2022-10-31"},{"lineNumber":143,"author":{"gitId":"jasonqiu212"},"content":"| `d/`  | `DESCRIPTION`           |","lastModifiedDate":"2022-10-31"},{"lineNumber":144,"author":{"gitId":"jasonqiu212"},"content":"| `dl/` | `DEADLINE`              |","lastModifiedDate":"2022-10-31"},{"lineNumber":145,"author":{"gitId":"jasonqiu212"},"content":"| `e/`  | `EMAIL`                 |","lastModifiedDate":"2022-10-31"},{"lineNumber":146,"author":{"gitId":"jasonqiu212"},"content":"| `n/`  | `NAME`                  |","lastModifiedDate":"2022-10-31"},{"lineNumber":147,"author":{"gitId":"jasonqiu212"},"content":"| `p/`  | `PHONE_NUMBER`          |","lastModifiedDate":"2022-10-31"},{"lineNumber":148,"author":{"gitId":"jasonqiu212"},"content":"| `t/`  | `TAG`, `TASK_INDEX`     |","lastModifiedDate":"2022-10-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":150,"author":{"gitId":"jasonqiu212"},"content":"#### Parameter","lastModifiedDate":"2022-10-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":152,"author":{"gitId":"jasonqiu212"},"content":"A parameter represents placeholders where you input data. Usually, parameters follow immediately after their corresponding flag.","lastModifiedDate":"2022-10-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"jasonqiu212"},"content":"Each parameter has unique constraints, which restricts what you can type in for the parameter. Refer to the table below for details.","lastModifiedDate":"2022-11-05"},{"lineNumber":155,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":156,"author":{"gitId":"jasonqiu212"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note**\u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":157,"author":{"gitId":"jasonqiu212"},"content":"Some parameters, such as `CONTACT_INDEX` and `KEYWORD`, may not follow after flags.","lastModifiedDate":"2022-10-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"jasonqiu212"},"content":"Refer to the [Command Format](#command-format) section on how to use flags and parameters together.","lastModifiedDate":"2022-10-31"},{"lineNumber":161,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":162,"author":{"gitId":"jasonqiu212"},"content":"\u003ctable\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":163,"author":{"gitId":"jasonqiu212"},"content":"    \u003ctr\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":164,"author":{"gitId":"jasonqiu212"},"content":"        \u003cth\u003eParameter\u003c/th\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":165,"author":{"gitId":"jasonqiu212"},"content":"        \u003cth\u003eCorresponding Flag\u003c/th\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":166,"author":{"gitId":"jasonqiu212"},"content":"        \u003cth\u003eDescription\u003c/th\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":167,"author":{"gitId":"jasonqiu212"},"content":"    \u003c/tr\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":168,"author":{"gitId":"jasonqiu212"},"content":"    \u003ctr\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":169,"author":{"gitId":"jasonqiu212"},"content":"        \u003ctd markdown\u003d\"span\"\u003e`ADDRESS`\u003c/td\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":170,"author":{"gitId":"jasonqiu212"},"content":"        \u003ctd markdown\u003d\"span\"\u003e`a/`\u003c/td\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":171,"author":{"gitId":"jasonqiu212"},"content":"        \u003ctd markdown\u003d\"span\"\u003eSpecifies the address of a contact. An example use for this field include recording a client\u0027s home or office address.\u003c/td\u003e","lastModifiedDate":"2022-11-10"},{"lineNumber":172,"author":{"gitId":"jasonqiu212"},"content":"    \u003c/tr\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":173,"author":{"gitId":"jasonqiu212"},"content":"    \u003ctr\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":174,"author":{"gitId":"jasonqiu212"},"content":"        \u003ctd markdown\u003d\"span\"\u003e`CONTACT_INDEX`\u003c/td\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":175,"author":{"gitId":"jasonqiu212"},"content":"        \u003ctd markdown\u003d\"span\"\u003e`c/`\u003c/td\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":176,"author":{"gitId":"jasonqiu212"},"content":"        \u003ctd markdown\u003d\"block\"\u003eRefers to the index number shown in the **displayed contact list**.","lastModifiedDate":"2022-11-05"},{"lineNumber":177,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":178,"author":{"gitId":"jasonqiu212"},"content":"- Must be a **positive whole number**, e.g. 1, 2, 3.","lastModifiedDate":"2022-11-05"},{"lineNumber":179,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":180,"author":{"gitId":"jasonqiu212"},"content":"\u003c/td\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":181,"author":{"gitId":"jasonqiu212"},"content":"    \u003c/tr\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":182,"author":{"gitId":"jasonqiu212"},"content":"    \u003ctr\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":183,"author":{"gitId":"jasonqiu212"},"content":"        \u003ctd markdown\u003d\"span\"\u003e`CONTACT_NAME`\u003c/td\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":184,"author":{"gitId":"jasonqiu212"},"content":"        \u003ctd markdown\u003d\"span\"\u003e`n/`\u003c/td\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":185,"author":{"gitId":"jasonqiu212"},"content":"        \u003ctd markdown\u003d\"block\"\u003eSpecifies the name of a contact.","lastModifiedDate":"2022-11-05"},{"lineNumber":186,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":187,"author":{"gitId":"jasonqiu212"},"content":"- Should only contain alphanumeric characters, spaces, and the following symbols: `,` `-` `\u0027`.","lastModifiedDate":"2022-11-05"},{"lineNumber":188,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":189,"author":{"gitId":"jasonqiu212"},"content":"\u003c/td\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":190,"author":{"gitId":"jasonqiu212"},"content":"    \u003c/tr\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":191,"author":{"gitId":"jasonqiu212"},"content":"    \u003ctr\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":192,"author":{"gitId":"jasonqiu212"},"content":"        \u003ctd markdown\u003d\"span\"\u003e`DEADLINE`\u003c/td\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":193,"author":{"gitId":"jasonqiu212"},"content":"        \u003ctd markdown\u003d\"span\"\u003e`dl/`\u003c/td\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":194,"author":{"gitId":"jasonqiu212"},"content":"        \u003ctd markdown\u003d\"block\"\u003eSpecifies the due date of a task.","lastModifiedDate":"2022-11-05"},{"lineNumber":195,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":196,"author":{"gitId":"jasonqiu212"},"content":"- Must be in the format of **`dd-MM-yyyy HHmm`**. e.g. `12-06-2020 1234` represents `12 June 2020 12:34`.","lastModifiedDate":"2022-11-10"},{"lineNumber":197,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":198,"author":{"gitId":"jasonqiu212"},"content":"\u003c/td\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":199,"author":{"gitId":"jasonqiu212"},"content":"    \u003c/tr\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":200,"author":{"gitId":"jasonqiu212"},"content":"    \u003ctr\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":201,"author":{"gitId":"jasonqiu212"},"content":"        \u003ctd markdown\u003d\"span\"\u003e`DESCRIPTION`\u003c/td\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":202,"author":{"gitId":"jasonqiu212"},"content":"        \u003ctd markdown\u003d\"span\"\u003e`d/`\u003c/td\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":203,"author":{"gitId":"jasonqiu212"},"content":"        \u003ctd markdown\u003d\"block\"\u003eSpecifies the description and details of a task.","lastModifiedDate":"2022-11-10"},{"lineNumber":204,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":205,"author":{"gitId":"jasonqiu212"},"content":"- Should only contain alphanumeric characters, spaces, and the following symbols: `$` `\u0026` `+` `,` `:` `;` `\u003d` `?` `@` `#` `|` `\u0027` `\u003c` `\u003e` `.` `\\` `-` `^` `*` `(` `)` `%` `!`.","lastModifiedDate":"2022-11-05"},{"lineNumber":206,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":207,"author":{"gitId":"jasonqiu212"},"content":"\u003c/td\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":208,"author":{"gitId":"jasonqiu212"},"content":"    \u003c/tr\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":209,"author":{"gitId":"jasonqiu212"},"content":"    \u003ctr\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":210,"author":{"gitId":"jasonqiu212"},"content":"        \u003ctd markdown\u003d\"span\"\u003e`EMAIL`\u003c/td\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":211,"author":{"gitId":"jasonqiu212"},"content":"        \u003ctd markdown\u003d\"span\"\u003e`e/`\u003c/td\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":212,"author":{"gitId":"jasonqiu212"},"content":"        \u003ctd markdown\u003d\"block\"\u003eSpecifies the email of a contact.","lastModifiedDate":"2022-11-05"},{"lineNumber":213,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":214,"author":{"gitId":"jasonqiu212"},"content":"- Must be in the format of **`USERNAME@DOMAIN`**.","lastModifiedDate":"2022-11-05"},{"lineNumber":215,"author":{"gitId":"jasonqiu212"},"content":"- `USERNAME` should only contain alphanumeric characters and the following special symbols: `+` `_` `.` `-`.","lastModifiedDate":"2022-11-05"},{"lineNumber":216,"author":{"gitId":"jasonqiu212"},"content":"- `USERNAME` cannot start or end with the above special symbols.","lastModifiedDate":"2022-11-05"},{"lineNumber":217,"author":{"gitId":"jasonqiu212"},"content":"- `DOMAIN` consists of domain labels separated by periods (`.`), e.g. `nus.edu.sg`.","lastModifiedDate":"2022-11-05"},{"lineNumber":218,"author":{"gitId":"jasonqiu212"},"content":"- `DOMAIN` must end with a domain label with at least 2 characters, e.g. `.com`.","lastModifiedDate":"2022-11-05"},{"lineNumber":219,"author":{"gitId":"jasonqiu212"},"content":"- Each domain label must only consist of alphanumeric characters, separated only by hyphens, if any, e.g. `swift-plus.com`.","lastModifiedDate":"2022-11-05"},{"lineNumber":220,"author":{"gitId":"jasonqiu212"},"content":"- Each domain label start and end with alphanumeric characters.","lastModifiedDate":"2022-11-05"},{"lineNumber":221,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":222,"author":{"gitId":"jasonqiu212"},"content":"\u003c/td\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":223,"author":{"gitId":"jasonqiu212"},"content":"    \u003c/tr\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":224,"author":{"gitId":"jasonqiu212"},"content":"    \u003ctr\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":225,"author":{"gitId":"jasonqiu212"},"content":"        \u003ctd markdown\u003d\"span\"\u003e`KEYWORD`\u003c/td\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":226,"author":{"gitId":"jasonqiu212"},"content":"        \u003ctd\u003eNot applicable\u003c/td\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":227,"author":{"gitId":"jasonqiu212"},"content":"        \u003ctd markdown\u003d\"block\"\u003eSpecifies the keywords to search for when finding contacts or tasks.","lastModifiedDate":"2022-11-05"},{"lineNumber":228,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":229,"author":{"gitId":"jasonqiu212"},"content":"- Can contain alphanumeric characters, spaces, and any special characters.","lastModifiedDate":"2022-11-05"},{"lineNumber":230,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":231,"author":{"gitId":"jasonqiu212"},"content":"\u003c/td\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":232,"author":{"gitId":"jasonqiu212"},"content":"    \u003c/tr\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":233,"author":{"gitId":"jasonqiu212"},"content":"    \u003ctr\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":234,"author":{"gitId":"jasonqiu212"},"content":"        \u003ctd markdown\u003d\"span\"\u003e`PHONE_NUMBER`\u003c/td\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":235,"author":{"gitId":"jasonqiu212"},"content":"        \u003ctd markdown\u003d\"span\"\u003e`p/`\u003c/td\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":236,"author":{"gitId":"jasonqiu212"},"content":"        \u003ctd markdown\u003d\"block\"\u003eSpecifies the phone number of a contact.","lastModifiedDate":"2022-11-05"},{"lineNumber":237,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":238,"author":{"gitId":"jasonqiu212"},"content":"- Should only contain numbers.","lastModifiedDate":"2022-11-05"},{"lineNumber":239,"author":{"gitId":"jasonqiu212"},"content":"- Must be at least 3 digits long.","lastModifiedDate":"2022-11-05"},{"lineNumber":240,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":241,"author":{"gitId":"jasonqiu212"},"content":"\u003c/td\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":242,"author":{"gitId":"jasonqiu212"},"content":"    \u003c/tr\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":243,"author":{"gitId":"jasonqiu212"},"content":"    \u003ctr\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":244,"author":{"gitId":"jasonqiu212"},"content":"        \u003ctd markdown\u003d\"span\"\u003e`TAG`\u003c/td\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":245,"author":{"gitId":"jasonqiu212"},"content":"        \u003ctd markdown\u003d\"span\"\u003e`t/`\u003c/td\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":246,"author":{"gitId":"jasonqiu212"},"content":"        \u003ctd markdown\u003d\"block\"\u003eSpecifies the tag to categorize a contact under.","lastModifiedDate":"2022-11-05"},{"lineNumber":247,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":248,"author":{"gitId":"jasonqiu212"},"content":"- Should only contain alphanumeric characters.","lastModifiedDate":"2022-11-05"},{"lineNumber":249,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":250,"author":{"gitId":"jasonqiu212"},"content":"\u003c/td\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":251,"author":{"gitId":"jasonqiu212"},"content":"    \u003c/tr\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":252,"author":{"gitId":"jasonqiu212"},"content":"    \u003ctr\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":253,"author":{"gitId":"jasonqiu212"},"content":"        \u003ctd markdown\u003d\"span\"\u003e`TASK_INDEX`\u003c/td\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":254,"author":{"gitId":"jasonqiu212"},"content":"        \u003ctd markdown\u003d\"span\"\u003e`t/`\u003c/td\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":255,"author":{"gitId":"jasonqiu212"},"content":"        \u003ctd markdown\u003d\"block\"\u003eRefers to the index number shown in the **displayed task list**.","lastModifiedDate":"2022-11-05"},{"lineNumber":256,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":257,"author":{"gitId":"jasonqiu212"},"content":"- Must be a **positive whole number**, e.g. 1, 2, 3.","lastModifiedDate":"2022-11-05"},{"lineNumber":258,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":259,"author":{"gitId":"jasonqiu212"},"content":"\u003c/td\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":260,"author":{"gitId":"jasonqiu212"},"content":"    \u003c/tr\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":261,"author":{"gitId":"jasonqiu212"},"content":"    \u003ctr\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":262,"author":{"gitId":"jasonqiu212"},"content":"        \u003ctd markdown\u003d\"span\"\u003e`TASK_NAME`\u003c/td\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":263,"author":{"gitId":"jasonqiu212"},"content":"        \u003ctd markdown\u003d\"span\"\u003e`n/`\u003c/td\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":264,"author":{"gitId":"jasonqiu212"},"content":"        \u003ctd markdown\u003d\"block\"\u003eSpecifies the name of a task.","lastModifiedDate":"2022-11-05"},{"lineNumber":265,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":266,"author":{"gitId":"jasonqiu212"},"content":"- Should only contain alphanumeric characters, spaces, and the following symbols: `,` `-` `\u0027`.","lastModifiedDate":"2022-11-05"},{"lineNumber":267,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":268,"author":{"gitId":"jasonqiu212"},"content":"\u003c/td\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":269,"author":{"gitId":"jasonqiu212"},"content":"    \u003c/tr\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":270,"author":{"gitId":"jasonqiu212"},"content":"\u003c/table\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":271,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":272,"author":{"gitId":"jasonqiu212"},"content":"#### Command Format","lastModifiedDate":"2022-10-31"},{"lineNumber":273,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":274,"author":{"gitId":"jasonqiu212"},"content":"To understand how a full command is interpreted, let\u0027s look at the following example.","lastModifiedDate":"2022-10-31"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"jasonqiu212"},"content":"**Example:** `add_contact n/CONTACT_NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​`","lastModifiedDate":"2022-10-31"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"jasonqiu212"},"content":"|                    | Component Name | Meaning                                                            |","lastModifiedDate":"2022-10-31"},{"lineNumber":279,"author":{"gitId":"jasonqiu212"},"content":"| ------------------ | -------------- |--------------------------------------------------------------------|","lastModifiedDate":"2022-11-10"},{"lineNumber":280,"author":{"gitId":"jasonqiu212"},"content":"| **`add_contact`**  | Command Word   | Tells Swift+ to execute command to add contact.                    |","lastModifiedDate":"2022-11-10"},{"lineNumber":281,"author":{"gitId":"jasonqiu212"},"content":"| **`n/`**           | Flag           | Distinguishes `CONTACT_NAME` from other input fields.              |","lastModifiedDate":"2022-11-10"},{"lineNumber":282,"author":{"gitId":"jasonqiu212"},"content":"| **`CONTACT_NAME`** | Parameter      | Represents placeholder for name of contact that you wish to input. |","lastModifiedDate":"2022-11-10"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":284,"author":{"gitId":"jasonqiu212"},"content":"Notice how `t/TAG` is wrapped in `[ ]`. Items in square brackets are **optional**.","lastModifiedDate":"2022-10-31"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":286,"author":{"gitId":"jasonqiu212"},"content":"- For example, `n/CONTACT_NAME [t/TAG]` can be used as `n/Mark t/friend` or as `n/Mark`.","lastModifiedDate":"2022-11-06"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"jasonqiu212"},"content":"Furthermore, notice how `[t/TAG]` is followed by `…`​. Items followed by `…`​ can be inputted **multiple times**, including","lastModifiedDate":"2022-11-10"},{"lineNumber":289,"author":{"gitId":"jasonqiu212"},"content":"zero times.","lastModifiedDate":"2022-10-31"},{"lineNumber":290,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":291,"author":{"gitId":"jasonqiu212"},"content":"- For example, `n/CONTACT_NAME [t/TAG]…​` can be used as `n/Mark` (i.e. 0 times), `n/Mark t/friend`, `n/Mark t/friend t/family`, and etc.","lastModifiedDate":"2022-11-06"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"jasonqiu212"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e:information_source: **Note**\u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":295,"author":{"gitId":"jasonqiu212"},"content":"- Parameters can be in **any order**.\u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":296,"author":{"gitId":"jasonqiu212"},"content":"  e.g. if the command specifies `n/CONTACT_NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/CONTACT_NAME` is also acceptable.","lastModifiedDate":"2022-10-31"},{"lineNumber":297,"author":{"gitId":"jasonqiu212"},"content":"- If a parameter is expected only once in the command but you specified it multiple times, only the **last occurrence** of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":298,"author":{"gitId":"jasonqiu212"},"content":"  e.g. if you specify `p/1234 p/5678`, only `p/5678` will be taken.","lastModifiedDate":"2022-10-31"},{"lineNumber":299,"author":{"gitId":"jasonqiu212"},"content":"- Extraneous parameters for commands that do not take in parameters (such as `help`, `list_contact`, `exit` and `clear`) will be **ignored**.\u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":300,"author":{"gitId":"jasonqiu212"},"content":"  e.g. if your specify `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2022-10-31"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":302,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"jasonqiu212"},"content":"---","lastModifiedDate":"2022-10-31"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"jasonqiu212"},"content":"## **Commands**","lastModifiedDate":"2022-11-06"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"jasonqiu212"},"content":"This section covers how to use each command in detail. You can refer to the [Parameter](#parameter) section to view the constraints for each parameter.","lastModifiedDate":"2022-11-10"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":310,"author":{"gitId":"jasonqiu212"},"content":"### Contact Commands","lastModifiedDate":"2022-11-10"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":312,"author":{"gitId":"jasonqiu212"},"content":"#### Adding a contact: `add_contact`","lastModifiedDate":"2022-10-30"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"jasonqiu212"},"content":"\u003e Adds a contact.","lastModifiedDate":"2022-10-31"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"jasonqiu212"},"content":"**Format:** `add_contact n/CONTACT_NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​`","lastModifiedDate":"2022-11-05"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"jasonqiu212"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip** \u003cbr\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":319,"author":{"gitId":"jasonqiu212"},"content":"A contact can have any number of tags (including 0).","lastModifiedDate":"2022-11-10"},{"lineNumber":320,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"jasonqiu212"},"content":"**Examples:**","lastModifiedDate":"2022-11-05"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":324,"author":{"gitId":"jasonqiu212"},"content":"- `add_contact n/Mark Yang p/12345678 e/mark@example.com a/block 123` adds a contact named `Mark Yang` with a phone number of `12345678`, email of `mark@example.com`, and address of `block 123`.","lastModifiedDate":"2022-11-05"},{"lineNumber":325,"author":{"gitId":"jasonqiu212"},"content":"- `add_contact n/Anne Marie t/developer e/anne@example.com a/Newgate office p/87654321 t/client` adds a contact named `Anne Marie` with a `developer` tag, a `friend` tag, email of `anne@example.com`, address of `Newgate office`, and phone number of `87654321`.","lastModifiedDate":"2022-11-10"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"jasonqiu212"},"content":"#### Listing all contacts: `list_contact`","lastModifiedDate":"2022-10-30"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"jasonqiu212"},"content":"\u003e Shows a list of all contacts in the main panel and a list of all tasks in the sidebar.","lastModifiedDate":"2022-11-06"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"jasonqiu212"},"content":"**Format:** `list_contact`","lastModifiedDate":"2022-11-05"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":333,"author":{"gitId":"jasonqiu212"},"content":"#### Finding contacts by name: `find_contact`","lastModifiedDate":"2022-10-30"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"peppapighs"},"content":"\u003e Finds contacts whose names contain any of the given keywords.","lastModifiedDate":"2022-11-01"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"jasonqiu212"},"content":"**Format:** `find_contact KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2022-11-05"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"jasonqiu212"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e:information_source: **Note**\u003cbr\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":341,"author":{"gitId":"jasonqiu212"},"content":"- The search is **case-insensitive**. e.g. `mark` will match `Mark`","lastModifiedDate":"2022-11-05"},{"lineNumber":342,"author":{"gitId":"jasonqiu212"},"content":"- The order of the keywords does not matter. e.g. `Mark Wilson` will match `Wilson Mark`","lastModifiedDate":"2022-11-05"},{"lineNumber":343,"author":{"gitId":"jasonqiu212"},"content":"- Only the name of contacts is searched.","lastModifiedDate":"2022-11-05"},{"lineNumber":344,"author":{"gitId":"jasonqiu212"},"content":"- Only full words will be matched e.g. `Mark` will not match `Marks`","lastModifiedDate":"2022-11-05"},{"lineNumber":345,"author":{"gitId":"jasonqiu212"},"content":"- Contacts matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2022-10-21"},{"lineNumber":346,"author":{"gitId":"jasonqiu212"},"content":"  e.g. `Mark Wilson` will return `Mark Yang`, `Steve Wilson`","lastModifiedDate":"2022-11-05"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":348,"author":{"gitId":"jasonqiu212"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":350,"author":{"gitId":"jasonqiu212"},"content":"**Examples:**","lastModifiedDate":"2022-11-05"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":352,"author":{"gitId":"jasonqiu212"},"content":"- `find_contact Mark` returns `Mark` and `mark`.","lastModifiedDate":"2022-11-10"},{"lineNumber":353,"author":{"gitId":"jasonqiu212"},"content":"- `find_contact alex david` returns `Alex Yeoh` and `David Li`.","lastModifiedDate":"2022-10-28"},{"lineNumber":354,"author":{"gitId":"jasonqiu212"},"content":"  ![result for \u0027find alex david\u0027](images/user-guide/findAlexDavidResult.png)","lastModifiedDate":"2022-10-30"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"jasonqiu212"},"content":"#### Editing a contact: `edit_contact`","lastModifiedDate":"2022-10-30"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"jasonqiu212"},"content":"\u003e Edits an existing contact.","lastModifiedDate":"2022-10-31"},{"lineNumber":359,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":360,"author":{"gitId":"jasonqiu212"},"content":"**Format:** `edit_contact CONTACT_INDEX [n/CONTACT_NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`","lastModifiedDate":"2022-11-05"},{"lineNumber":361,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":362,"author":{"gitId":"jasonqiu212"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e:information_source: **Note**\u003cbr\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":363,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":364,"author":{"gitId":"jasonqiu212"},"content":"- Edits the contact at the specified `CONTACT_INDEX`.","lastModifiedDate":"2022-11-05"},{"lineNumber":365,"author":{"gitId":"jasonqiu212"},"content":"- At least one of the optional fields must be provided.","lastModifiedDate":"2022-10-21"},{"lineNumber":366,"author":{"gitId":"jasonqiu212"},"content":"- Existing values will be updated to the input values.","lastModifiedDate":"2022-10-21"},{"lineNumber":367,"author":{"gitId":"jasonqiu212"},"content":"- When editing tags, the existing tags of the contact will be removed, i.e. adding of tags is not cumulative.","lastModifiedDate":"2022-11-10"},{"lineNumber":368,"author":{"gitId":"jasonqiu212"},"content":"- You can remove all the contact\u0027s tags by typing `t/` without specifying any tags after it.","lastModifiedDate":"2022-10-28"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":372,"author":{"gitId":"jasonqiu212"},"content":"**Examples:**","lastModifiedDate":"2022-11-05"},{"lineNumber":373,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":374,"author":{"gitId":"jasonqiu212"},"content":"- `edit_contact 1 p/91234567 e/mark@example.com` edits the phone number and email address of the 1st contact to be `91234567` and `mark@example.com` respectively.","lastModifiedDate":"2022-11-06"},{"lineNumber":375,"author":{"gitId":"jasonqiu212"},"content":"- `edit_contact 2 n/Anne t/` edits the name of the 2nd contact to be `Anne` and clears all of `Anne`\u0027s tags.","lastModifiedDate":"2022-11-10"},{"lineNumber":376,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":377,"author":{"gitId":"jasonqiu212"},"content":"#### Deleting a contact: `delete_contact`","lastModifiedDate":"2022-10-30"},{"lineNumber":378,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":379,"author":{"gitId":"jasonqiu212"},"content":"\u003e Deletes the specified contact.","lastModifiedDate":"2022-10-31"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":381,"author":{"gitId":"jasonqiu212"},"content":"**Format:** `delete_contact CONTACT_INDEX`","lastModifiedDate":"2022-11-05"},{"lineNumber":382,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":383,"author":{"gitId":"jasonqiu212"},"content":"**Examples:**","lastModifiedDate":"2022-11-05"},{"lineNumber":384,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":385,"author":{"gitId":"jasonqiu212"},"content":"- `list_contact` followed by `delete_contact 2` deletes the 2nd contact in the entire contact list.","lastModifiedDate":"2022-10-28"},{"lineNumber":386,"author":{"gitId":"jasonqiu212"},"content":"- `find_contact Anne` followed by `delete_contact 1` deletes the 1st contact in the results of the `find_contact Anne` command.","lastModifiedDate":"2022-11-06"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":388,"author":{"gitId":"jasonqiu212"},"content":"#### Selecting a contact: `select_contact`","lastModifiedDate":"2022-10-30"},{"lineNumber":389,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":390,"author":{"gitId":"jasonqiu212"},"content":"\u003e Displays the selected contact in the main panel and displays the tasks assigned to the contact in the sidebar.","lastModifiedDate":"2022-11-06"},{"lineNumber":391,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":392,"author":{"gitId":"jasonqiu212"},"content":"**Format:** `select_contact CONTACT_INDEX`","lastModifiedDate":"2022-11-05"},{"lineNumber":393,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":394,"author":{"gitId":"jasonqiu212"},"content":"**Examples:**","lastModifiedDate":"2022-11-05"},{"lineNumber":395,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":396,"author":{"gitId":"jasonqiu212"},"content":"- `list_contact` followed by `select_contact 1` selects the 1st contact in the entire contact list and shows all tasks assigned to that contact.","lastModifiedDate":"2022-10-28"},{"lineNumber":397,"author":{"gitId":"jasonqiu212"},"content":"- `find_contact Hermione` followed by `select_contact 1` selects the 1st contact in the results of the `find_contact Hermione` command and shows all task assigned to that person.","lastModifiedDate":"2022-10-28"},{"lineNumber":398,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":399,"author":{"gitId":"jasonqiu212"},"content":"### Task Commands","lastModifiedDate":"2022-11-10"},{"lineNumber":400,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":401,"author":{"gitId":"jasonqiu212"},"content":"#### Adding a task: `add_task`","lastModifiedDate":"2022-10-30"},{"lineNumber":402,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":403,"author":{"gitId":"jasonqiu212"},"content":"\u003e Adds a task.","lastModifiedDate":"2022-10-31"},{"lineNumber":404,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":405,"author":{"gitId":"jasonqiu212"},"content":"**Format:** `add_task n/TASK_NAME [d/DESCRIPTION] [dl/DEADLINE] [c/CONTACT_INDEX]…​`","lastModifiedDate":"2022-11-05"},{"lineNumber":406,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":407,"author":{"gitId":"jasonqiu212"},"content":"**Examples:**","lastModifiedDate":"2022-11-05"},{"lineNumber":408,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":409,"author":{"gitId":"jasonqiu212"},"content":"- `add_task n/CS2103T iP d/Finish milestones dl/12-12-2022 2359 c/1` adds a task assigned to the 1st displayed contact. The task has a name of `CS2103T`, description of `Finish milestones`, and deadline of `12 December 2022 23:59`.","lastModifiedDate":"2022-11-05"},{"lineNumber":410,"author":{"gitId":"jasonqiu212"},"content":"- `add_task n/CS2101 Assignment dl/12-12-2022 2359 c/2 c/3` adds a task assigned to the 2nd and 3rd displayed contact. The task has a name of `CS2101 Assignment` and deadline of `12 December 2022 23:59`.","lastModifiedDate":"2022-11-05"},{"lineNumber":411,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":412,"author":{"gitId":"jasonqiu212"},"content":"#### Listing all tasks: `list_task`","lastModifiedDate":"2022-10-30"},{"lineNumber":413,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":414,"author":{"gitId":"jasonqiu212"},"content":"\u003e Shows a list of all tasks in the main panel and a list of all contacts in the sidebar.","lastModifiedDate":"2022-11-06"},{"lineNumber":415,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":416,"author":{"gitId":"jasonqiu212"},"content":"**Format:** `list_task`","lastModifiedDate":"2022-11-05"},{"lineNumber":417,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":418,"author":{"gitId":"jasonqiu212"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e:information_source: **Note**\u003cbr\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":419,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":420,"author":{"gitId":"jasonqiu212"},"content":"- Tasks are **sorted chronologically by deadline**.","lastModifiedDate":"2022-11-05"},{"lineNumber":421,"author":{"gitId":"jasonqiu212"},"content":"- Tasks without deadlines are listed below tasks with deadlines and sorted by their names alphabetically.","lastModifiedDate":"2022-11-05"},{"lineNumber":422,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":423,"author":{"gitId":"jasonqiu212"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":424,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":425,"author":{"gitId":"jasonqiu212"},"content":"#### Finding tasks by name: `find_task`","lastModifiedDate":"2022-10-30"},{"lineNumber":426,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":427,"author":{"gitId":"jasonqiu212"},"content":"\u003e Finds tasks whose names contain any of the given keywords.","lastModifiedDate":"2022-11-05"},{"lineNumber":428,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":429,"author":{"gitId":"jasonqiu212"},"content":"**Format:** `find_task KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2022-11-05"},{"lineNumber":430,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":431,"author":{"gitId":"jasonqiu212"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e:information_source: **Note**\u003cbr\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":432,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":433,"author":{"gitId":"jasonqiu212"},"content":"- The search is **case-insensitive**. e.g. `book` will match `Book`","lastModifiedDate":"2022-11-06"},{"lineNumber":434,"author":{"gitId":"jasonqiu212"},"content":"- The order of the keywords does not matter. e.g. `read book` will match `book read`","lastModifiedDate":"2022-10-21"},{"lineNumber":435,"author":{"gitId":"jasonqiu212"},"content":"- Only the name of the task is searched.","lastModifiedDate":"2022-10-21"},{"lineNumber":436,"author":{"gitId":"jasonqiu212"},"content":"- Only full words will be matched e.g. `Book` will not match `Books`","lastModifiedDate":"2022-10-21"},{"lineNumber":437,"author":{"gitId":"jasonqiu212"},"content":"- Tasks matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2022-10-21"},{"lineNumber":438,"author":{"gitId":"jasonqiu212"},"content":"  e.g. `Read book` will return `Write book`, `Find book`","lastModifiedDate":"2022-09-27"},{"lineNumber":439,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":440,"author":{"gitId":"jasonqiu212"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":441,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":442,"author":{"gitId":"jasonqiu212"},"content":"**Examples:**","lastModifiedDate":"2022-11-05"},{"lineNumber":443,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":444,"author":{"gitId":"jasonqiu212"},"content":"- `find_task Book` returns `book` and `Book`.","lastModifiedDate":"2022-10-28"},{"lineNumber":445,"author":{"gitId":"jasonqiu212"},"content":"- `find_task read book` returns `read novel` and `sell book`.","lastModifiedDate":"2022-10-28"},{"lineNumber":446,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":447,"author":{"gitId":"jasonqiu212"},"content":"#### Editing tasks: `edit_task`","lastModifiedDate":"2022-10-30"},{"lineNumber":448,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":449,"author":{"gitId":"jasonqiu212"},"content":"\u003e Edits an existing task.","lastModifiedDate":"2022-10-31"},{"lineNumber":450,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":451,"author":{"gitId":"jasonqiu212"},"content":"**Format:** `edit_task TASK_INDEX [n/TASK_NAME] [d/DESCRIPTION] [dl/DEADLINE]`","lastModifiedDate":"2022-11-05"},{"lineNumber":452,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":453,"author":{"gitId":"jasonqiu212"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e:information_source: **Note**\u003cbr\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":454,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":455,"author":{"gitId":"jasonqiu212"},"content":"- Edits the task at the specified `TASK_INDEX`.","lastModifiedDate":"2022-11-05"},{"lineNumber":456,"author":{"gitId":"jasonqiu212"},"content":"- At least one of the optional fields must be provided.","lastModifiedDate":"2022-10-21"},{"lineNumber":457,"author":{"gitId":"jasonqiu212"},"content":"- Existing values will be updated to the input values.","lastModifiedDate":"2022-10-21"},{"lineNumber":458,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":459,"author":{"gitId":"jasonqiu212"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":460,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":461,"author":{"gitId":"jasonqiu212"},"content":"**Examples:**","lastModifiedDate":"2022-11-05"},{"lineNumber":462,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":463,"author":{"gitId":"jasonqiu212"},"content":"- `edit_task 1 n/Client meeting d/Gather user stories` edits the task name and description of the 1st task to `Client meeting` and `Gather user stories` respectively.","lastModifiedDate":"2022-10-28"},{"lineNumber":464,"author":{"gitId":"jasonqiu212"},"content":"- `edit_task 2 dl/06-12-2022 1200` edits the deadline of the 2nd task to be `06-12-2022 1200`.","lastModifiedDate":"2022-10-28"},{"lineNumber":465,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":466,"author":{"gitId":"jasonqiu212"},"content":"#### Deleting tasks: `delete_task`","lastModifiedDate":"2022-10-30"},{"lineNumber":467,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":468,"author":{"gitId":"jasonqiu212"},"content":"\u003e Deletes an existing task in task list.","lastModifiedDate":"2022-10-31"},{"lineNumber":469,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":470,"author":{"gitId":"jasonqiu212"},"content":"**Format:** `delete_task TASK_INDEX`","lastModifiedDate":"2022-11-05"},{"lineNumber":471,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":472,"author":{"gitId":"jasonqiu212"},"content":"**Examples:**","lastModifiedDate":"2022-11-05"},{"lineNumber":473,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":474,"author":{"gitId":"jasonqiu212"},"content":"- `delete_task 1` deletes the task at index 1.","lastModifiedDate":"2022-11-05"},{"lineNumber":475,"author":{"gitId":"jasonqiu212"},"content":"- `delete_task 3` deletes the task at index 3.","lastModifiedDate":"2022-11-05"},{"lineNumber":476,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":477,"author":{"gitId":"jasonqiu212"},"content":"#### Selecting a task: `select_task`","lastModifiedDate":"2022-10-30"},{"lineNumber":478,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":479,"author":{"gitId":"jasonqiu212"},"content":"\u003e Selects the specified task and displays the contacts assigned to the task.","lastModifiedDate":"2022-10-31"},{"lineNumber":480,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":481,"author":{"gitId":"jasonqiu212"},"content":"**Format:** `select_task TASK_INDEX`","lastModifiedDate":"2022-11-05"},{"lineNumber":482,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":483,"author":{"gitId":"jasonqiu212"},"content":"**Examples:**","lastModifiedDate":"2022-11-05"},{"lineNumber":484,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":485,"author":{"gitId":"jasonqiu212"},"content":"- `list_task` followed by `select_task 1` selects the 1st task in the entire task list and shows all contacts assigned to that task.","lastModifiedDate":"2022-10-28"},{"lineNumber":486,"author":{"gitId":"jasonqiu212"},"content":"- `find_task sleep` followed by `select_task 1` selects the 1st task in the results of the `find_task sleep` command and shows all contacts assigned to that task.","lastModifiedDate":"2022-10-28"},{"lineNumber":487,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":488,"author":{"gitId":"jasonqiu212"},"content":"#### Marking a task as complete: `mark`","lastModifiedDate":"2022-10-30"},{"lineNumber":489,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":490,"author":{"gitId":"jasonqiu212"},"content":"\u003e Marks the specified task as completed.","lastModifiedDate":"2022-10-31"},{"lineNumber":491,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":492,"author":{"gitId":"jasonqiu212"},"content":"**Format:** `mark TASK_INDEX`","lastModifiedDate":"2022-11-05"},{"lineNumber":493,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":494,"author":{"gitId":"jasonqiu212"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e:information_source: **Note**\u003cbr\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":495,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":496,"author":{"gitId":"santosh3007"},"content":"- Specified task must be currently incomplete for command to succeed.","lastModifiedDate":"2022-10-27"},{"lineNumber":497,"author":{"gitId":"peppapighs"},"content":"- The diagram below shows the task being marked as indicated by the checked tickbox.\u003cbr\u003e","lastModifiedDate":"2022-11-10"},{"lineNumber":498,"author":{"gitId":"peppapighs"},"content":"  ![Task marked as complete](images/mark.png)","lastModifiedDate":"2022-11-10"},{"lineNumber":499,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":500,"author":{"gitId":"jasonqiu212"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":501,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":502,"author":{"gitId":"jasonqiu212"},"content":"**Examples:**","lastModifiedDate":"2022-11-05"},{"lineNumber":503,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":504,"author":{"gitId":"jasonqiu212"},"content":"- `list_task` followed by `mark 1` marks the 1st task in the entire task list as completed.","lastModifiedDate":"2022-10-28"},{"lineNumber":505,"author":{"gitId":"jasonqiu212"},"content":"- `find_task sleep` followed by `mark 1` marks the 1st task in the results of the `find_task sleep` command as completed.","lastModifiedDate":"2022-10-28"},{"lineNumber":506,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":507,"author":{"gitId":"jasonqiu212"},"content":"#### Marking a task as incomplete: `unmark`","lastModifiedDate":"2022-10-30"},{"lineNumber":508,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":509,"author":{"gitId":"jasonqiu212"},"content":"\u003e Marks the specified task as incomplete.","lastModifiedDate":"2022-10-31"},{"lineNumber":510,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":511,"author":{"gitId":"jasonqiu212"},"content":"**Format:** `unmark TASK_INDEX`","lastModifiedDate":"2022-11-05"},{"lineNumber":512,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":513,"author":{"gitId":"jasonqiu212"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e:information_source: **Note**\u003cbr\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":514,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":515,"author":{"gitId":"santosh3007"},"content":"- Specified task must be currently completed for command to succeed.","lastModifiedDate":"2022-10-27"},{"lineNumber":516,"author":{"gitId":"peppapighs"},"content":"- The diagram below shows the task being unmarked as indicated by the unchecked tickbox.\u003cbr\u003e","lastModifiedDate":"2022-11-10"},{"lineNumber":517,"author":{"gitId":"peppapighs"},"content":"  ![Task marked as incomplete](images/unmark.png)","lastModifiedDate":"2022-11-10"},{"lineNumber":518,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":519,"author":{"gitId":"jasonqiu212"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":520,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":521,"author":{"gitId":"jasonqiu212"},"content":"**Examples:**","lastModifiedDate":"2022-11-05"},{"lineNumber":522,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":523,"author":{"gitId":"jasonqiu212"},"content":"- `list_task` followed by `unmark 1` marks the 1st task in the entire task list as incomplete.","lastModifiedDate":"2022-10-28"},{"lineNumber":524,"author":{"gitId":"jasonqiu212"},"content":"- `find_task sleep` followed by `unmark 1` marks the 1st task in the results of the `find_task sleep` command as incomplete.","lastModifiedDate":"2022-10-28"},{"lineNumber":525,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":526,"author":{"gitId":"jasonqiu212"},"content":"#### Assigning a task to a contact: `assign`","lastModifiedDate":"2022-10-30"},{"lineNumber":527,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":528,"author":{"gitId":"jasonqiu212"},"content":"\u003e Assigns a task to a contact.","lastModifiedDate":"2022-10-31"},{"lineNumber":529,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":530,"author":{"gitId":"jasonqiu212"},"content":"**Format:** `assign c/CONTACT_INDEX t/TASK_INDEX`","lastModifiedDate":"2022-11-05"},{"lineNumber":531,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":532,"author":{"gitId":"jasonqiu212"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e:information_source: **Note**\u003cbr\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":533,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":534,"author":{"gitId":"jasonqiu212"},"content":"- Assigns the task at the specified `TASK_INDEX` to the contact at the specified `CONTACT_INDEX`.","lastModifiedDate":"2022-10-28"},{"lineNumber":535,"author":{"gitId":"jasonqiu212"},"content":"- Existing assignments are not affected.","lastModifiedDate":"2022-11-05"},{"lineNumber":536,"author":{"gitId":"jasonqiu212"},"content":"- To view a task\u0027s assigned contact(s), you can view the labels on the right side of the task list. \u003cbr\u003ee.g. In the diagram below, the 1st task is assigned to `Alex Yeoh`.","lastModifiedDate":"2022-11-10"},{"lineNumber":537,"author":{"gitId":"jasonqiu212"},"content":"  ![Assign contact](images/assign-contact.png)","lastModifiedDate":"2022-11-10"},{"lineNumber":538,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":539,"author":{"gitId":"jasonqiu212"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":540,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":541,"author":{"gitId":"jasonqiu212"},"content":"**Examples:**","lastModifiedDate":"2022-11-05"},{"lineNumber":542,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":543,"author":{"gitId":"jasonqiu212"},"content":"- `assign c/1 t/1` assigns the task at index 1 to the contact at index 1.","lastModifiedDate":"2022-10-28"},{"lineNumber":544,"author":{"gitId":"jasonqiu212"},"content":"- `assign c/3 t/2` assigns the task at index 2 to the contact at index 3.","lastModifiedDate":"2022-10-28"},{"lineNumber":545,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":546,"author":{"gitId":"jasonqiu212"},"content":"#### Unassign a task from a contact: `unassign`","lastModifiedDate":"2022-10-30"},{"lineNumber":547,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":548,"author":{"gitId":"jasonqiu212"},"content":"\u003e Removes a contact from a task.","lastModifiedDate":"2022-10-31"},{"lineNumber":549,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":550,"author":{"gitId":"jasonqiu212"},"content":"**Format:** `unassign c/CONTACT_INDEX t/TASK_INDEX`","lastModifiedDate":"2022-11-05"},{"lineNumber":551,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":552,"author":{"gitId":"jasonqiu212"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e:information_source: **Note**\u003cbr\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":553,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":554,"author":{"gitId":"jasonqiu212"},"content":"- Removes the contact at the specified `CONTACT_INDEX` from the task at the specified `TASK_INDEX`.","lastModifiedDate":"2022-10-28"},{"lineNumber":555,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":556,"author":{"gitId":"jasonqiu212"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":557,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":558,"author":{"gitId":"jasonqiu212"},"content":"**Examples:**","lastModifiedDate":"2022-11-05"},{"lineNumber":559,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":560,"author":{"gitId":"jasonqiu212"},"content":"- `unassign c/1 t/1` removes the contact at index 1 from the task at index 1.","lastModifiedDate":"2022-10-28"},{"lineNumber":561,"author":{"gitId":"jasonqiu212"},"content":"- `unassign c/3 t/2` removes the contact at index 3 from the task at index 2.","lastModifiedDate":"2022-10-28"},{"lineNumber":562,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":563,"author":{"gitId":"jasonqiu212"},"content":"### General Commands","lastModifiedDate":"2022-11-10"},{"lineNumber":564,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":565,"author":{"gitId":"jasonqiu212"},"content":"#### Toggling between contacts and tasks tabs: `Ctrl + Tab`","lastModifiedDate":"2022-10-30"},{"lineNumber":566,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":567,"author":{"gitId":"jasonqiu212"},"content":"\u003e Toggles the view between the contacts and tasks tabs.","lastModifiedDate":"2022-10-31"},{"lineNumber":568,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":569,"author":{"gitId":"jasonqiu212"},"content":"**Format:** `Ctrl + Tab`","lastModifiedDate":"2022-11-05"},{"lineNumber":570,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":571,"author":{"gitId":"jasonqiu212"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip** \u003cbr\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":572,"author":{"gitId":"jasonqiu212"},"content":"Alternatively, you can click on the **Contacts and Tasks button** in the top toolbar.","lastModifiedDate":"2022-11-05"},{"lineNumber":573,"author":{"gitId":"jasonqiu212"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":574,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":575,"author":{"gitId":"jasonqiu212"},"content":"#### Viewing help: `help`","lastModifiedDate":"2022-10-30"},{"lineNumber":576,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":577,"author":{"gitId":"yunruu"},"content":"\u003e Shows a message explaining how to access the user guide.","lastModifiedDate":"2022-11-07"},{"lineNumber":578,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":579,"author":{"gitId":"jasonqiu212"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip** \u003cbr\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":580,"author":{"gitId":"jasonqiu212"},"content":"Alternatively, you can click on the **Help button** in the top toolbar.","lastModifiedDate":"2022-11-05"},{"lineNumber":581,"author":{"gitId":"jasonqiu212"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":582,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":583,"author":{"gitId":"jasonqiu212"},"content":"**Format:** `help`","lastModifiedDate":"2022-11-05"},{"lineNumber":584,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":585,"author":{"gitId":"jasonqiu212"},"content":"#### Clearing all data: `clear`","lastModifiedDate":"2022-10-30"},{"lineNumber":586,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":587,"author":{"gitId":"jasonqiu212"},"content":"\u003e Deletes all data in the application.","lastModifiedDate":"2022-10-31"},{"lineNumber":588,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":589,"author":{"gitId":"jasonqiu212"},"content":"**Format:** `clear`","lastModifiedDate":"2022-11-05"},{"lineNumber":590,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":591,"author":{"gitId":"santosh3007"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:warning: **Caution** \u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":592,"author":{"gitId":"jasonqiu212"},"content":"Executing the `clear` command will cause all of your existing data to be discarded forever and the app will start with an empty data file. There will be no confirmation prompt before clearing data.","lastModifiedDate":"2022-11-10"},{"lineNumber":593,"author":{"gitId":"santosh3007"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":594,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":595,"author":{"gitId":"jasonqiu212"},"content":"#### Exiting the program : `exit`","lastModifiedDate":"2022-10-30"},{"lineNumber":596,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":597,"author":{"gitId":"jasonqiu212"},"content":"\u003e Exits the program.","lastModifiedDate":"2022-10-31"},{"lineNumber":598,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":599,"author":{"gitId":"jasonqiu212"},"content":"**Format:** `exit`","lastModifiedDate":"2022-11-05"},{"lineNumber":600,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":601,"author":{"gitId":"jasonqiu212"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip** \u003cbr\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":602,"author":{"gitId":"jasonqiu212"},"content":"Alternatively, you can click on the **Exit button** in the top toolbar.","lastModifiedDate":"2022-11-05"},{"lineNumber":603,"author":{"gitId":"jasonqiu212"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":604,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":605,"author":{"gitId":"jasonqiu212"},"content":"### Command suggestion and autocomplete","lastModifiedDate":"2022-10-30"},{"lineNumber":606,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":607,"author":{"gitId":"jasonqiu212"},"content":"To help you familiarize with the commands, Swift+ prompts you with command suggestions as you type and can autocomplete your commands until the next user-required input.","lastModifiedDate":"2022-10-28"},{"lineNumber":608,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":609,"author":{"gitId":"jasonqiu212"},"content":"1. Type the first few letters of a command you hope to use and Swift+ will display a suggested command. e.g. `lis`.\u003cbr\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":610,"author":{"gitId":"jasonqiu212"},"content":"   ![autocomplete](images/autocomplete.png)","lastModifiedDate":"2022-10-28"},{"lineNumber":611,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":612,"author":{"gitId":"jasonqiu212"},"content":"2. Press `Tab` to autocomplete your command with the prompted suggestion.","lastModifiedDate":"2022-10-30"},{"lineNumber":613,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":614,"author":{"gitId":"jasonqiu212"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":615,"author":{"gitId":"jasonqiu212"},"content":":information_source: **Note** \u003cbr\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":616,"author":{"gitId":"jasonqiu212"},"content":"- If multiple commands are possible with the current input, autocomplete only completes up to the **longest matching prefix**. e.g. pressing `Tab` after `lis` will autocomplete the command to `list_`, since there are two commands (`list_contact` and `list_task`) that start with `lis`.","lastModifiedDate":"2022-10-30"},{"lineNumber":617,"author":{"gitId":"jasonqiu212"},"content":"- If the current input is invalid, command suggestions will not be shown. The current input will also turn red to alert you.\u003cbr\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":618,"author":{"gitId":"jasonqiu212"},"content":"- Autocomplete does not guarantee a valid command, unless the given syntax is followed.\u003cbr\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":619,"author":{"gitId":"jasonqiu212"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":620,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":621,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":622,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":623,"author":{"gitId":"jasonqiu212"},"content":"Swift+ data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2022-09-29"},{"lineNumber":624,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":625,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":626,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":627,"author":{"gitId":"jasonqiu212"},"content":"Swift+ data are saved as a JSON file `[JAR file location]/data/addressbook.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2022-10-26"},{"lineNumber":628,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":629,"author":{"gitId":"jasonqiu212"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:warning: **Caution** \u003cbr\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":630,"author":{"gitId":"jasonqiu212"},"content":"If your changes to the data file makes its format invalid, Swift+ will discard all data and start with an empty data file in the next run.","lastModifiedDate":"2022-11-10"},{"lineNumber":631,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":632,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":633,"author":{"gitId":"jasonqiu212"},"content":"---","lastModifiedDate":"2022-10-21"},{"lineNumber":634,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":635,"author":{"gitId":"jasonqiu212"},"content":"## **FAQ**","lastModifiedDate":"2022-10-26"},{"lineNumber":636,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":637,"author":{"gitId":"jasonqiu212"},"content":"**Q**: How do I transfer my data to another computer?\u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":638,"author":{"gitId":"jasonqiu212"},"content":"**A**: Install Swift+ in the other computer. Replace the default data file `addressbook.json` with the file that contains the data of your previous Swift+.","lastModifiedDate":"2022-10-31"},{"lineNumber":639,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":640,"author":{"gitId":"peppapighs"},"content":"**Q**: Why does autocomplete not complete the whole suggestion after pressing Tab?\u003cbr\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":641,"author":{"gitId":"peppapighs"},"content":"**A**: If multiple commands are possible with the current input, autocomplete only completes up to the **longest matching prefix**. e.g. pressing `Tab` after `lis` will autocomplete the command to `list_`, since there are two commands (`list_contact` and `list_task`) that start with `lis`.","lastModifiedDate":"2022-11-07"},{"lineNumber":642,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":643,"author":{"gitId":"jasonqiu212"},"content":"---","lastModifiedDate":"2022-10-21"},{"lineNumber":644,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":645,"author":{"gitId":"jasonqiu212"},"content":"## **Command Summary**","lastModifiedDate":"2022-10-30"},{"lineNumber":646,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":647,"author":{"gitId":"jasonqiu212"},"content":"This section contains a summary of all commands in Swift+ listed in alphabetical order. ","lastModifiedDate":"2022-11-10"},{"lineNumber":648,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":649,"author":{"gitId":"jasonqiu212"},"content":"| Action             | Format                                                                                         |","lastModifiedDate":"2022-09-29"},{"lineNumber":650,"author":{"gitId":"peppapighs"},"content":"| ------------------ | ---------------------------------------------------------------------------------------------- |","lastModifiedDate":"2022-11-06"},{"lineNumber":651,"author":{"gitId":"jasonqiu212"},"content":"| **Add Contact**    | `add_contact n/CONTACT_NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​`                        |","lastModifiedDate":"2022-10-31"},{"lineNumber":652,"author":{"gitId":"jasonqiu212"},"content":"| **Add Task**       | `add_task n/TASK_NAME [d/DESCRIPTION] [dl/DEADLINE] [c/CONTACT_INDEX]…​`                       |","lastModifiedDate":"2022-10-31"},{"lineNumber":653,"author":{"gitId":"jasonqiu212"},"content":"| **Assign Task**    | `assign c/CONTACT_INDEX t/TASK_INDEX`                                                          |","lastModifiedDate":"2022-10-28"},{"lineNumber":654,"author":{"gitId":"jasonqiu212"},"content":"| **Clear Data**     | `clear`                                                                                        |","lastModifiedDate":"2022-10-28"},{"lineNumber":655,"author":{"gitId":"jasonqiu212"},"content":"| **Delete Contact** | `delete_contact CONTACT_INDEX`                                                                 |","lastModifiedDate":"2022-11-05"},{"lineNumber":656,"author":{"gitId":"jasonqiu212"},"content":"| **Delete Task**    | `delete_task TASK_INDEX`                                                                       |","lastModifiedDate":"2022-11-05"},{"lineNumber":657,"author":{"gitId":"jasonqiu212"},"content":"| **Edit Contact**   | `edit_contact CONTACT_INDEX [n/CONTACT_NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` |","lastModifiedDate":"2022-11-05"},{"lineNumber":658,"author":{"gitId":"jasonqiu212"},"content":"| **Edit Task**      | `edit_task TASK_INDEX [n/TASK_NAME] [d/DESCRIPTION] [dl/DEADLINE]`                             |","lastModifiedDate":"2022-11-05"},{"lineNumber":659,"author":{"gitId":"jasonqiu212"},"content":"| **Find Contacts**  | `find_contact KEYWORD [MORE_KEYWORDS]`                                                         |","lastModifiedDate":"2022-10-28"},{"lineNumber":660,"author":{"gitId":"jasonqiu212"},"content":"| **Find Tasks**     | `find_task KEYWORD [MORE_KEYWORDS]`                                                            |","lastModifiedDate":"2022-09-29"},{"lineNumber":661,"author":{"gitId":"jasonqiu212"},"content":"| **Help**           | `help`                                                                                         |","lastModifiedDate":"2022-10-28"},{"lineNumber":662,"author":{"gitId":"jasonqiu212"},"content":"| **List Contacts**  | `list_contact`                                                                                 |","lastModifiedDate":"2022-10-28"},{"lineNumber":663,"author":{"gitId":"jasonqiu212"},"content":"| **List Tasks**     | `list_task`                                                                                    |","lastModifiedDate":"2022-10-28"},{"lineNumber":664,"author":{"gitId":"jasonqiu212"},"content":"| **Mark Task**      | `mark TASK_INDEX`                                                                              |","lastModifiedDate":"2022-11-05"},{"lineNumber":665,"author":{"gitId":"jasonqiu212"},"content":"| **Select Contact** | `select_contact CONTACT_INDEX`                                                                 |","lastModifiedDate":"2022-11-05"},{"lineNumber":666,"author":{"gitId":"jasonqiu212"},"content":"| **Select Task**    | `select_task TASK_INDEX`                                                                       |","lastModifiedDate":"2022-11-05"},{"lineNumber":667,"author":{"gitId":"peppapighs"},"content":"| **Unassign Task**  | `unassign c/CONTACT_INDEX t/TASK_INDEX`                                                        |","lastModifiedDate":"2022-10-28"},{"lineNumber":668,"author":{"gitId":"jasonqiu212"},"content":"| **Unmark Task**    | `unmark TASK_INDEX`                                                                            |","lastModifiedDate":"2022-11-05"}],"authorContributionMap":{"jasonqiu212":493,"ShenyiCui":8,"santosh3007":20,"-":113,"peppapighs":26,"yunruu":8}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"jasonqiu212"},"content":"  scroll-behavior: smooth;","lastModifiedDate":"2022-10-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"jasonqiu212"},"content":"body,","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"jasonqiu212"},"content":"h1,","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"jasonqiu212"},"content":"h2,","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"jasonqiu212"},"content":"h3,","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"jasonqiu212"},"content":"h4,","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"jasonqiu212"},"content":"h5,","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"jasonqiu212"},"content":"h6,","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"jasonqiu212"},"content":"p,","lastModifiedDate":"2022-10-21"},{"lineNumber":17,"author":{"gitId":"jasonqiu212"},"content":"blockquote,","lastModifiedDate":"2022-10-21"},{"lineNumber":18,"author":{"gitId":"jasonqiu212"},"content":"pre,","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"jasonqiu212"},"content":"hr,","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"jasonqiu212"},"content":"dl,","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"jasonqiu212"},"content":"dd,","lastModifiedDate":"2022-10-21"},{"lineNumber":22,"author":{"gitId":"jasonqiu212"},"content":"ol,","lastModifiedDate":"2022-10-21"},{"lineNumber":23,"author":{"gitId":"jasonqiu212"},"content":"ul,","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"jasonqiu212"},"content":"figure {","lastModifiedDate":"2022-10-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"jasonqiu212"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height}","lastModifiedDate":"2022-10-21"},{"lineNumber":34,"author":{"gitId":"jasonqiu212"},"content":"    $base-font-family;","lastModifiedDate":"2022-10-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"jasonqiu212"},"content":"h1,","lastModifiedDate":"2022-10-21"},{"lineNumber":53,"author":{"gitId":"jasonqiu212"},"content":"h2,","lastModifiedDate":"2022-10-21"},{"lineNumber":54,"author":{"gitId":"jasonqiu212"},"content":"h3,","lastModifiedDate":"2022-10-21"},{"lineNumber":55,"author":{"gitId":"jasonqiu212"},"content":"h4,","lastModifiedDate":"2022-10-21"},{"lineNumber":56,"author":{"gitId":"jasonqiu212"},"content":"h5,","lastModifiedDate":"2022-10-21"},{"lineNumber":57,"author":{"gitId":"jasonqiu212"},"content":"h6,","lastModifiedDate":"2022-10-21"},{"lineNumber":58,"author":{"gitId":"jasonqiu212"},"content":"p,","lastModifiedDate":"2022-10-21"},{"lineNumber":59,"author":{"gitId":"jasonqiu212"},"content":"blockquote,","lastModifiedDate":"2022-10-21"},{"lineNumber":60,"author":{"gitId":"jasonqiu212"},"content":"pre,","lastModifiedDate":"2022-10-21"},{"lineNumber":61,"author":{"gitId":"jasonqiu212"},"content":"ul,","lastModifiedDate":"2022-10-21"},{"lineNumber":62,"author":{"gitId":"jasonqiu212"},"content":"ol,","lastModifiedDate":"2022-10-21"},{"lineNumber":63,"author":{"gitId":"jasonqiu212"},"content":"dl,","lastModifiedDate":"2022-10-21"},{"lineNumber":64,"author":{"gitId":"jasonqiu212"},"content":"figure,","lastModifiedDate":"2022-10-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"jasonqiu212"},"content":"ul,","lastModifiedDate":"2022-10-21"},{"lineNumber":104,"author":{"gitId":"jasonqiu212"},"content":"ol {","lastModifiedDate":"2022-10-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"jasonqiu212"},"content":"h1,","lastModifiedDate":"2022-10-21"},{"lineNumber":119,"author":{"gitId":"jasonqiu212"},"content":"h2,","lastModifiedDate":"2022-10-21"},{"lineNumber":120,"author":{"gitId":"jasonqiu212"},"content":"h3,","lastModifiedDate":"2022-10-21"},{"lineNumber":121,"author":{"gitId":"jasonqiu212"},"content":"h5,","lastModifiedDate":"2022-10-21"},{"lineNumber":122,"author":{"gitId":"jasonqiu212"},"content":"h6 {","lastModifiedDate":"2022-10-21"},{"lineNumber":123,"author":{"gitId":"jasonqiu212"},"content":"  font-weight: $bold-font-weight;","lastModifiedDate":"2022-11-05"},{"lineNumber":124,"author":{"gitId":"jasonqiu212"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2022-11-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"jasonqiu212"},"content":"h4 {","lastModifiedDate":"2022-11-10"},{"lineNumber":128,"author":{"gitId":"jasonqiu212"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2022-11-10"},{"lineNumber":129,"author":{"gitId":"jasonqiu212"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2022-11-10"},{"lineNumber":130,"author":{"gitId":"jasonqiu212"},"content":"}","lastModifiedDate":"2022-11-10"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-10"},{"lineNumber":132,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"jasonqiu212"},"content":"    color: $link-base-color;","lastModifiedDate":"2022-10-26"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"jasonqiu212"},"content":"  i,","lastModifiedDate":"2022-10-21"},{"lineNumber":171,"author":{"gitId":"jasonqiu212"},"content":"  em {","lastModifiedDate":"2022-10-21"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"jasonqiu212"},"content":"  th,","lastModifiedDate":"2022-10-21"},{"lineNumber":268,"author":{"gitId":"jasonqiu212"},"content":"  td {","lastModifiedDate":"2022-10-21"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":287,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":291,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":296,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":297,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":298,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":299,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":300,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":302,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":303,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":304,"author":{"gitId":"jasonqiu212"},"content":"    content: \"Swift+\";","lastModifiedDate":"2022-09-26"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":306,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":307,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"jasonqiu212":51,"-":256}},{"path":"docs/_sass/minima/_layout.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":" * Site header","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":".site-header {","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  border-top: 5px solid $brand-color-dark;","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  border-bottom: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  min-height: $spacing-unit * 1.865;","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  line-height: $base-line-height * $base-font-size * 2.25;","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  // Positioning context for the mobile navigation icon","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  position: relative;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":".site-title {","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.625);","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  font-weight: 300;","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  letter-spacing: -1px;","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  float: left;","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  @include media-query($on-palm) {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    padding-right: 45px;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  \u0026,","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    color: $brand-color-dark;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":".site-nav {","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  position: absolute;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  top: 9px;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  border-radius: 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  text-align: right;","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  .nav-trigger {","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"      display: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  .menu-icon {","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    float: right;","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    width: 36px;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    height: 26px;","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    line-height: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    padding-top: 10px;","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    \u003e svg path {","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"      fill: $brand-color-dark;","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  label[for\u003d\"nav-trigger\"] {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    float: right;","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    width: 36px;","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    height: 36px;","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    z-index: 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    cursor: pointer;","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  input ~ .trigger {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"  input:checked ~ .trigger {","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    padding-bottom: 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"  .page-link {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    line-height: $base-line-height;","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    padding: 5px 10px;","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    // Gaps between nav items, but not on the last one","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    \u0026:not(:last-child) {","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"      margin-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    margin-left: 20px;","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-medium) {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    position: static;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    float: right;","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    border: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    background-color: inherit;","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    label[for\u003d\"nav-trigger\"] {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"      display: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    .menu-icon {","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"      display: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    input ~ .trigger {","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"      display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    .page-link {","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"      display: inline;","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"      padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"      \u0026:not(:last-child) {","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        margin-right: 20px;","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"      }","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"      margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":" * Page content","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":".page-content {","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  padding: $spacing-unit 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"  flex: 1 0 auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":".page-heading {","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"  @include relative-font-size(2);","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":".post-list-heading {","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.75);","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":".post-list {","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"  margin-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"  list-style: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  \u003e li {","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":".post-meta {","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":".post-link {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.5);","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Posts","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":".post-header {","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":".post-title,","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":".post-content h1 {","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  @include relative-font-size(2.625);","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"  letter-spacing: -1px;","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"  line-height: 1.15;","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"jasonqiu212"},"content":"  font-weight: 500;","lastModifiedDate":"2022-10-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    @include relative-font-size(2.625);","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":".post-content {","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"jasonqiu212"},"content":"  h3 { margin-top: $spacing-unit * 1.5 }","lastModifiedDate":"2022-11-05"},{"lineNumber":181,"author":{"gitId":"-"},"content":"  h4, h5, h6 { margin-top: $spacing-unit }","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"  h2 {","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @include relative-font-size(1.75);","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"      @include relative-font-size(2);","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"  h3 {","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    @include relative-font-size(1.375);","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"      @include relative-font-size(1.625);","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"  h4 {","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    @include relative-font-size(1.25);","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  h5 {","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    @include relative-font-size(1.0625);","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":".social-media-list {","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"  margin: 0 auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"  li {","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    float: left;","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    margin: 5px 10px 5px 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    \u0026:last-of-type { margin-right: 0 }","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    a {","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"      display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"      padding: $spacing-unit / 4;","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"      border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"      \u0026:hover { border-color: darken($brand-color-light, 10%) }","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":" * Pagination navbar","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":".pagination {","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"  @extend .social-media-list;","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"  li {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    a, div {","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"      min-width: 41px;","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"      text-align: center;","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"      box-sizing: border-box;","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    div {","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"      display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"      padding: $spacing-unit / 4;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"      border: 1px solid transparent;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"      \u0026.pager-edge {","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        color: darken($brand-color-light, 5%);","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        border: 1px dashed;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"      }","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":" * Grid helpers","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"@media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  .one-half {","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    width: calc(50% - (#{$spacing-unit} / 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"jasonqiu212":2,"-":262}},{"path":"docs/_sass/minima/custom-styles.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"// Placeholder to allow defining custom styles that override everything else.","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"// (Use `_sass/minima/custom-variables.scss` to override variable defaults)","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"jasonqiu212"},"content":"h2,","lastModifiedDate":"2022-10-21"},{"lineNumber":4,"author":{"gitId":"jasonqiu212"},"content":"h3,","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"jasonqiu212"},"content":"h4,","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"jasonqiu212"},"content":"h5,","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"jasonqiu212"},"content":"h6 {","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"jasonqiu212"},"content":"  color: $heading-color;","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"// Bootstrap style alerts","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":".alert {","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  position: relative;","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  padding: $alert-padding-y $alert-padding-x;","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  margin-bottom: $alert-margin-bottom;","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  border: $alert-border-width solid transparent;","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"jasonqiu212"},"content":"  border-radius: $alert-border-radius;","lastModifiedDate":"2022-10-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"// Headings for larger alerts","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":".alert-heading {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  // Specified to prevent conflicts of changing $headings-color","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: inherit;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"// Provide class for links that match alerts","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":".alert-link {","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  font-weight: $alert-link-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"// Generate contextual modifier classes for colorizing the alert.","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"@each $color, $value in $theme-colors {","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  .alert-#{$color} {","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"jasonqiu212"},"content":"    @include alert-variant(","lastModifiedDate":"2022-10-21"},{"lineNumber":36,"author":{"gitId":"jasonqiu212"},"content":"      color-level($value, $alert-bg-level),","lastModifiedDate":"2022-10-21"},{"lineNumber":37,"author":{"gitId":"jasonqiu212"},"content":"      color-level($value, $alert-border-level),","lastModifiedDate":"2022-10-21"},{"lineNumber":38,"author":{"gitId":"jasonqiu212"},"content":"      color-level($value, $alert-color-level)","lastModifiedDate":"2022-10-21"},{"lineNumber":39,"author":{"gitId":"jasonqiu212"},"content":"    );","lastModifiedDate":"2022-10-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"jasonqiu212":12,"-":29}},{"path":"docs/_sass/minima/custom-variables.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"// Placeholder to allow overriding predefined variables smoothly.","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"//Bootstrap\u0027s default","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"$white: #fff !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"$gray-100: #f8f9fa !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"$gray-200: #e9ecef !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"$gray-300: #dee2e6 !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"$gray-400: #ced4da !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"$gray-500: #adb5bd !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"$gray-600: #6c757d !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"$gray-700: #495057 !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"$gray-800: #343a40 !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"$gray-900: #212529 !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"$black: #000 !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"$blue: #0d6efd !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"$indigo: #6610f2 !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"jasonqiu212"},"content":"$purple: #6d28d9 !default;","lastModifiedDate":"2022-10-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"$pink: #d63384 !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"$red: #dc3545 !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"$orange: #fd7e14 !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"$yellow: #ffc107 !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"$green: #28a745 !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"$teal: #20c997 !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"$cyan: #17a2b8 !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"$primary: $blue !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"$secondary: $gray-600 !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"$success: $green !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"$info: $cyan !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"$warning: $yellow !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"$danger: $red !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"$light: $gray-100 !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"$dark: $gray-800 !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"$theme-colors: (","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  \"primary\": $primary,","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  \"secondary\": $secondary,","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  \"success\": $success,","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  \"info\": $info,","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  \"warning\": $warning,","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  \"danger\": $danger,","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  \"light\": $light,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"jasonqiu212"},"content":"  \"dark\": $dark,","lastModifiedDate":"2022-10-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":") !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"$theme-color-interval: 8% !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"jasonqiu212"},"content":"$heading-color: $purple !default;","lastModifiedDate":"2022-10-21"},{"lineNumber":49,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"$body-bg: $white !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"$body-color: $gray-900 !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"$body-text-align: null !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"$enable-gradients: true;","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"// Define alert colors, border radius, and padding.","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"jasonqiu212"},"content":"$border-radius: 10px !default;","lastModifiedDate":"2022-10-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"$border-width: 1px !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"$font-weight-bold: 700 !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"jasonqiu212"},"content":"$alert-padding-y: 0.75rem !default;","lastModifiedDate":"2022-10-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"$alert-padding-x: 1.25rem !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"$alert-margin-bottom: 1rem !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"$alert-border-radius: $border-radius !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"$alert-link-font-weight: $font-weight-bold !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"$alert-border-width: $border-width !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"$alert-bg-level: -10 !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"$alert-border-level: -9 !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"$alert-color-level: 6 !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"// Request a color level","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"// scss-docs-start color-level","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"@function color-level($color: $primary, $level: 0) {","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"  $color-base: if($level \u003e 0, $black, $white);","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"  $level: abs($level);","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  @return mix($color-base, $color, $level * $theme-color-interval);","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"jasonqiu212":6,"-":72}},{"path":"docs/_sass/minima/initialize.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@charset \"utf-8\";","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"// Define defaults for each variable.","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"$base-font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Segoe UI Symbol\", \"Segoe UI Emoji\", \"Apple Color Emoji\", Roboto, Helvetica, Arial, sans-serif !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"$code-font-family: \"Menlo\", \"Inconsolata\", \"Consolas\", \"Roboto Mono\", \"Ubuntu Mono\", \"Liberation Mono\", \"Courier New\", monospace;","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"$base-font-size:   16px !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"$base-font-weight: 400 !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"jasonqiu212"},"content":"$bold-font-weight:  700 !default;","lastModifiedDate":"2022-11-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"$small-font-size:  $base-font-size * 0.875 !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"$base-line-height: 1.5 !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"$spacing-unit:     30px !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"$table-text-align: left !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"// Width of the content area","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"$content-width:    800px !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"$on-palm:          600px !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"$on-laptop:        800px !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"$on-medium:        $on-palm !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"$on-large:         $on-laptop !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"// Use media queries like this:","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"// @include media-query($on-palm) {","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"//   .wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"//     padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"//     padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"//   }","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"// }","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"// Notice the following mixin uses max-width, in a deprecated, desktop-first","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"// approach, whereas media queries used elsewhere now use min-width.","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"@mixin media-query($device) {","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  @media screen and (max-width: $device) {","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @content;","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"@mixin relative-font-size($ratio) {","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  font-size: #{$ratio}rem;","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"// Import pre-styling-overrides hook and style-partials.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"@import","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"  \"minima/custom-variables\", // Hook to override predefined variables.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"  \"minima/custom-mixins\",    // Hook to add custom mixins.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  \"minima/base\",             // Defines element resets.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  \"minima/layout\",           // Defines structure and style based on CSS selectors.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  \"minima/custom-styles\"     // Hook to override existing styles.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":";","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"jasonqiu212":1,"-":51}},{"path":"docs/assets/css/style.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"# Only the main Sass file needs front matter (the dashes are enough)","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"@import","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  \"minima/skins/{{ site.minima.skin | default: \u0027classic\u0027 }}\",","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"jasonqiu212"},"content":"  \"minima/initialize\",","lastModifiedDate":"2022-11-05"},{"lineNumber":8,"author":{"gitId":"jasonqiu212"},"content":"  \"toc\";","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":".icon {","lastModifiedDate":"2020-08-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    height: 21px;","lastModifiedDate":"2020-08-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    width: 21px","lastModifiedDate":"2020-08-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-01"}],"authorContributionMap":{"jasonqiu212":2,"-":11}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"peppapighs"},"content":"user -[USER_COLOR]\u003e ui : \"delete_contact 1\"","lastModifiedDate":"2022-11-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"peppapighs"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"delete_contact 1\")","lastModifiedDate":"2022-11-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"logic -[LOGIC_COLOR]\u003e model : deletePerson(p)","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveAddressBook(addressBook)","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":36,"peppapighs":2}},{"path":"docs/diagrams/DeleteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"peppapighs"},"content":"participant \":DeleteContactCommandParser\" as DeleteContactCommandParser LOGIC_COLOR","lastModifiedDate":"2022-11-07"},{"lineNumber":8,"author":{"gitId":"peppapighs"},"content":"participant \"d:DeleteContactCommand\" as DeleteContactCommand LOGIC_COLOR","lastModifiedDate":"2022-11-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"peppapighs"},"content":"[-\u003e LogicManager : execute(\"delete_contact 1\")","lastModifiedDate":"2022-11-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"peppapighs"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"delete_contact 1\")","lastModifiedDate":"2022-11-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"activate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"peppapighs"},"content":"create DeleteContactCommandParser","lastModifiedDate":"2022-11-07"},{"lineNumber":23,"author":{"gitId":"peppapighs"},"content":"AddressBookParser -\u003e DeleteContactCommandParser","lastModifiedDate":"2022-11-07"},{"lineNumber":24,"author":{"gitId":"peppapighs"},"content":"activate DeleteContactCommandParser","lastModifiedDate":"2022-11-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"peppapighs"},"content":"DeleteContactCommandParser --\u003e AddressBookParser","lastModifiedDate":"2022-11-07"},{"lineNumber":27,"author":{"gitId":"peppapighs"},"content":"deactivate DeleteContactCommandParser","lastModifiedDate":"2022-11-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"peppapighs"},"content":"AddressBookParser -\u003e DeleteContactCommandParser : parse(\"1\")","lastModifiedDate":"2022-11-07"},{"lineNumber":30,"author":{"gitId":"peppapighs"},"content":"activate DeleteContactCommandParser","lastModifiedDate":"2022-11-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"peppapighs"},"content":"create DeleteContactCommand","lastModifiedDate":"2022-11-07"},{"lineNumber":33,"author":{"gitId":"peppapighs"},"content":"DeleteContactCommandParser -\u003e DeleteContactCommand","lastModifiedDate":"2022-11-07"},{"lineNumber":34,"author":{"gitId":"peppapighs"},"content":"activate DeleteContactCommand","lastModifiedDate":"2022-11-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"peppapighs"},"content":"DeleteContactCommand --\u003e DeleteContactCommandParser : d","lastModifiedDate":"2022-11-07"},{"lineNumber":37,"author":{"gitId":"peppapighs"},"content":"deactivate DeleteContactCommand","lastModifiedDate":"2022-11-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"peppapighs"},"content":"DeleteContactCommandParser --\u003e AddressBookParser : d","lastModifiedDate":"2022-11-07"},{"lineNumber":40,"author":{"gitId":"peppapighs"},"content":"deactivate DeleteContactCommandParser","lastModifiedDate":"2022-11-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"peppapighs"},"content":"DeleteContactCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2022-11-07"},{"lineNumber":43,"author":{"gitId":"peppapighs"},"content":"destroy DeleteContactCommandParser","lastModifiedDate":"2022-11-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"AddressBookParser --\u003e LogicManager : d","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"deactivate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"peppapighs"},"content":"LogicManager -\u003e DeleteContactCommand : execute()","lastModifiedDate":"2022-11-07"},{"lineNumber":49,"author":{"gitId":"peppapighs"},"content":"activate DeleteContactCommand","lastModifiedDate":"2022-11-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"peppapighs"},"content":"DeleteContactCommand -\u003e Model : deletePerson(1)","lastModifiedDate":"2022-11-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"peppapighs"},"content":"Model --\u003e DeleteContactCommand","lastModifiedDate":"2022-11-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"create CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"peppapighs"},"content":"DeleteContactCommand -\u003e CommandResult","lastModifiedDate":"2022-11-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"activate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"peppapighs"},"content":"CommandResult --\u003e DeleteContactCommand","lastModifiedDate":"2022-11-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"deactivate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"peppapighs"},"content":"DeleteContactCommand --\u003e LogicManager : result","lastModifiedDate":"2022-11-07"},{"lineNumber":65,"author":{"gitId":"peppapighs"},"content":"deactivate DeleteContactCommand","lastModifiedDate":"2022-11-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":41,"peppapighs":28}},{"path":"docs/diagrams/LogicClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Logic {","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nLogic\" as Logic","lastModifiedDate":"2022-01-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"package Model{","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"LogicManager .right.|\u003e Logic","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"LogicManager -right-\u003e\"1\" AddressBookParser","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"AddressBookParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"LogicManager .left.\u003e Command : executes \u003e","lastModifiedDate":"2019-07-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"LogicManager --\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"LogicManager --\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"Storage --[hidden] Model","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"Command .[hidden]up.\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Command .right.\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"peppapighs"},"content":"note right of XYZCommand: XYZCommand \u003d AddContactCommand, \\nFindContactCommand, etc","lastModifiedDate":"2022-11-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Logic ..\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"LogicManager .down.\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Command .up.\u003e CommandResult : produces \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":45,"peppapighs":1}},{"path":"docs/diagrams/PersonTaskBridgeDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"@startuml","lastModifiedDate":"2022-11-06"},{"lineNumber":2,"author":{"gitId":"peppapighs"},"content":"!include style.puml","lastModifiedDate":"2022-11-06"},{"lineNumber":3,"author":{"gitId":"santosh3007"},"content":"skinparam linetype polyline","lastModifiedDate":"2022-11-07"},{"lineNumber":4,"author":{"gitId":"santosh3007"},"content":"skinparam linetype ortho","lastModifiedDate":"2022-11-07"},{"lineNumber":5,"author":{"gitId":"peppapighs"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2022-11-06"},{"lineNumber":6,"author":{"gitId":"peppapighs"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2022-11-06"},{"lineNumber":7,"author":{"gitId":"peppapighs"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2022-11-06"},{"lineNumber":8,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":9,"author":{"gitId":"peppapighs"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2022-11-06"},{"lineNumber":10,"author":{"gitId":"peppapighs"},"content":"    Class AddressBook","lastModifiedDate":"2022-11-06"},{"lineNumber":11,"author":{"gitId":"peppapighs"},"content":"    Class Task","lastModifiedDate":"2022-11-06"},{"lineNumber":12,"author":{"gitId":"santosh3007"},"content":"    Class Person","lastModifiedDate":"2022-11-07"},{"lineNumber":13,"author":{"gitId":"peppapighs"},"content":"    Class PersonTaskBridge","lastModifiedDate":"2022-11-06"},{"lineNumber":14,"author":{"gitId":"peppapighs"},"content":"    Class PersonTaskBridgeList","lastModifiedDate":"2022-11-06"},{"lineNumber":15,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":16,"author":{"gitId":"santosh3007"},"content":"    Task -d- Person : \u003e assigned to","lastModifiedDate":"2022-11-07"},{"lineNumber":17,"author":{"gitId":"santosh3007"},"content":"    (Person, Task) .. PersonTaskBridge","lastModifiedDate":"2022-11-07"},{"lineNumber":18,"author":{"gitId":"santosh3007"},"content":"    PersonTaskBridgeList \"*\" *-up-\u003e PersonTaskBridge","lastModifiedDate":"2022-11-07"},{"lineNumber":19,"author":{"gitId":"santosh3007"},"content":"    AddressBook \"1\" *--\u003e PersonTaskBridgeList","lastModifiedDate":"2022-11-07"},{"lineNumber":20,"author":{"gitId":"santosh3007"},"content":"}","lastModifiedDate":"2022-11-07"},{"lineNumber":21,"author":{"gitId":"peppapighs"},"content":"@enduml","lastModifiedDate":"2022-11-06"}],"authorContributionMap":{"santosh3007":8,"peppapighs":13}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUserPrefsStorage\" as UserPrefsStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nStorage\" as Storage","lastModifiedDate":"2022-01-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"package \"AddressBook Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nAddressBookStorage\" as AddressBookStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class JsonAddressBookStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class JsonAdaptedPerson","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":23,"author":{"gitId":"peppapighs"},"content":"Class JsonAdaptedTask","lastModifiedDate":"2022-11-07"},{"lineNumber":24,"author":{"gitId":"peppapighs"},"content":"Class JsonAdaptedBridge","lastModifiedDate":"2022-11-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Storage -left-|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"Storage -right-|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"JsonAddressBookStorage .up.|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"JsonAddressBookStorage ..\u003e JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"JsonSerializableAddressBook --\u003e \"*\" JsonAdaptedPerson","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"JsonAdaptedPerson --\u003e \"*\" JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"peppapighs"},"content":"JsonSerializableAddressBook --\u003e \"*\" JsonAdaptedTask","lastModifiedDate":"2022-11-07"},{"lineNumber":45,"author":{"gitId":"peppapighs"},"content":"JsonSerializableAddressBook --\u003e \"*\" JsonAdaptedBridge","lastModifiedDate":"2022-11-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":43,"peppapighs":4}},{"path":"docs/diagrams/UiPanelsClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"santosh3007"},"content":"@startuml","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"santosh3007"},"content":"!include style.puml","lastModifiedDate":"2022-11-07"},{"lineNumber":3,"author":{"gitId":"santosh3007"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2022-11-07"},{"lineNumber":4,"author":{"gitId":"santosh3007"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2022-11-07"},{"lineNumber":5,"author":{"gitId":"santosh3007"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2022-11-07"},{"lineNumber":6,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":7,"author":{"gitId":"santosh3007"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2022-11-07"},{"lineNumber":8,"author":{"gitId":"santosh3007"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUi\" as Ui","lastModifiedDate":"2022-11-07"},{"lineNumber":9,"author":{"gitId":"santosh3007"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2022-11-07"},{"lineNumber":10,"author":{"gitId":"santosh3007"},"content":"Class UiManager","lastModifiedDate":"2022-11-07"},{"lineNumber":11,"author":{"gitId":"santosh3007"},"content":"show MainWindow members","lastModifiedDate":"2022-11-07"},{"lineNumber":12,"author":{"gitId":"santosh3007"},"content":"Class MainWindow","lastModifiedDate":"2022-11-07"},{"lineNumber":13,"author":{"gitId":"santosh3007"},"content":"Class PersonListPanel","lastModifiedDate":"2022-11-07"},{"lineNumber":14,"author":{"gitId":"santosh3007"},"content":"Class PersonCard","lastModifiedDate":"2022-11-07"},{"lineNumber":15,"author":{"gitId":"santosh3007"},"content":"Class TaskListPanel","lastModifiedDate":"2022-11-07"},{"lineNumber":16,"author":{"gitId":"santosh3007"},"content":"Class TaskCard","lastModifiedDate":"2022-11-07"},{"lineNumber":17,"author":{"gitId":"santosh3007"},"content":"Class PersonTaskCard","lastModifiedDate":"2022-11-07"},{"lineNumber":18,"author":{"gitId":"santosh3007"},"content":"Class PersonTaskListPanel","lastModifiedDate":"2022-11-07"},{"lineNumber":19,"author":{"gitId":"santosh3007"},"content":"Class TaskPersonCard","lastModifiedDate":"2022-11-07"},{"lineNumber":20,"author":{"gitId":"santosh3007"},"content":"Class TaskPersonListPanel","lastModifiedDate":"2022-11-07"},{"lineNumber":21,"author":{"gitId":"santosh3007"},"content":"}","lastModifiedDate":"2022-11-07"},{"lineNumber":22,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":23,"author":{"gitId":"santosh3007"},"content":"class MainWindow {","lastModifiedDate":"2022-11-07"},{"lineNumber":24,"author":{"gitId":"santosh3007"},"content":"    isContactTabShown Boolean","lastModifiedDate":"2022-11-07"},{"lineNumber":25,"author":{"gitId":"santosh3007"},"content":"}","lastModifiedDate":"2022-11-07"},{"lineNumber":26,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":27,"author":{"gitId":"santosh3007"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2022-11-07"},{"lineNumber":28,"author":{"gitId":"santosh3007"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2022-11-07"},{"lineNumber":29,"author":{"gitId":"santosh3007"},"content":"}","lastModifiedDate":"2022-11-07"},{"lineNumber":30,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":31,"author":{"gitId":"santosh3007"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2022-11-07"},{"lineNumber":32,"author":{"gitId":"santosh3007"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2022-11-07"},{"lineNumber":33,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":34,"author":{"gitId":"santosh3007"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2022-11-07"},{"lineNumber":35,"author":{"gitId":"santosh3007"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2022-11-07"},{"lineNumber":36,"author":{"gitId":"santosh3007"},"content":"MainWindow *-down-\u003e \"0..1\" PersonListPanel","lastModifiedDate":"2022-11-07"},{"lineNumber":37,"author":{"gitId":"santosh3007"},"content":"MainWindow *-down-\u003e \"0..1\" TaskListPanel","lastModifiedDate":"2022-11-07"},{"lineNumber":38,"author":{"gitId":"santosh3007"},"content":"MainWindow *-down-\u003e \"0..1\" PersonTaskListPanel","lastModifiedDate":"2022-11-07"},{"lineNumber":39,"author":{"gitId":"santosh3007"},"content":"MainWindow *-down-\u003e \"0..1\" TaskPersonListPanel","lastModifiedDate":"2022-11-07"},{"lineNumber":40,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":41,"author":{"gitId":"santosh3007"},"content":"PersonListPanel -down-\u003e \"*\" PersonCard","lastModifiedDate":"2022-11-07"},{"lineNumber":42,"author":{"gitId":"santosh3007"},"content":"TaskListPanel -down-\u003e \"*\" TaskCard","lastModifiedDate":"2022-11-07"},{"lineNumber":43,"author":{"gitId":"santosh3007"},"content":"PersonTaskListPanel -down-\u003e \"*\" PersonTaskCard","lastModifiedDate":"2022-11-07"},{"lineNumber":44,"author":{"gitId":"santosh3007"},"content":"TaskPersonListPanel -down-\u003e \"*\" TaskPersonCard","lastModifiedDate":"2022-11-07"},{"lineNumber":45,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":46,"author":{"gitId":"santosh3007"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2022-11-07"},{"lineNumber":47,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":48,"author":{"gitId":"santosh3007"},"content":"PersonListPanel --|\u003e UiPart","lastModifiedDate":"2022-11-07"},{"lineNumber":49,"author":{"gitId":"santosh3007"},"content":"PersonCard --|\u003e UiPart","lastModifiedDate":"2022-11-07"},{"lineNumber":50,"author":{"gitId":"santosh3007"},"content":"TaskListPanel --|\u003e UiPart","lastModifiedDate":"2022-11-07"},{"lineNumber":51,"author":{"gitId":"santosh3007"},"content":"TaskCard --|\u003e UiPart","lastModifiedDate":"2022-11-07"},{"lineNumber":52,"author":{"gitId":"santosh3007"},"content":"PersonTaskListPanel --|\u003e UiPart","lastModifiedDate":"2022-11-07"},{"lineNumber":53,"author":{"gitId":"santosh3007"},"content":"PersonTaskCard --|\u003e UiPart","lastModifiedDate":"2022-11-07"},{"lineNumber":54,"author":{"gitId":"santosh3007"},"content":"TaskPersonListPanel --|\u003e UiPart","lastModifiedDate":"2022-11-07"},{"lineNumber":55,"author":{"gitId":"santosh3007"},"content":"TaskPersonCard --|\u003e UiPart","lastModifiedDate":"2022-11-07"},{"lineNumber":56,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":57,"author":{"gitId":"santosh3007"},"content":"PersonCard ..\u003e Model","lastModifiedDate":"2022-11-07"},{"lineNumber":58,"author":{"gitId":"santosh3007"},"content":"TaskCard ..\u003e Model","lastModifiedDate":"2022-11-07"},{"lineNumber":59,"author":{"gitId":"santosh3007"},"content":"PersonTaskCard ...\u003e Model","lastModifiedDate":"2022-11-07"},{"lineNumber":60,"author":{"gitId":"santosh3007"},"content":"TaskPersonCard .right.\u003e Model","lastModifiedDate":"2022-11-07"},{"lineNumber":61,"author":{"gitId":"santosh3007"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2022-11-07"},{"lineNumber":62,"author":{"gitId":"santosh3007"},"content":"@enduml","lastModifiedDate":"2022-11-07"}],"authorContributionMap":{"santosh3007":62}},{"path":"docs/images/favicon/browserconfig.xml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"jasonqiu212"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"utf-8\"?\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"jasonqiu212"},"content":"\u003cbrowserconfig\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":3,"author":{"gitId":"jasonqiu212"},"content":"    \u003cmsapplication\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":4,"author":{"gitId":"jasonqiu212"},"content":"        \u003ctile\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"jasonqiu212"},"content":"            \u003csquare150x150logo src\u003d\"/mstile-150x150.png\"/\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"jasonqiu212"},"content":"            \u003cTileColor\u003e#da532c\u003c/TileColor\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"jasonqiu212"},"content":"        \u003c/tile\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"jasonqiu212"},"content":"    \u003c/msapplication\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"jasonqiu212"},"content":"\u003c/browserconfig\u003e","lastModifiedDate":"2022-10-26"}],"authorContributionMap":{"jasonqiu212":9}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"jasonqiu212"},"content":"title: Swift+","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"jasonqiu212"},"content":"[![codecov](https://codecov.io/gh/AY2223S1-CS2103T-T12-2/tp/branch/master/graph/badge.svg?token\u003dA2FU6P932B)](https://app.codecov.io/gh/AY2223S1-CS2103T-T12-2/tp)","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"jasonqiu212"},"content":"[![CI Status](https://github.com/AY2223S1-CS2103T-T12-2/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S1-CS2103T-T12-2/tp/actions)","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"jasonqiu212"},"content":"Swift+ is a **desktop application to track your daily events with contacts.** Combined with an aesthetic GUI, all user interactions happen using swift text-based commands.","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"jasonqiu212"},"content":"- If you are interested in using Swift+, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"jasonqiu212"},"content":"- If you are interested about developing Swift+, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"jasonqiu212"},"content":"- This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"jasonqiu212"},"content":"- Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"jasonqiu212"},"content":"- UI color scheme inspired by [TailwindUI](https://tailwindui.com/)","lastModifiedDate":"2022-10-28"}],"authorContributionMap":{"jasonqiu212":9,"-":11}},{"path":"docs/team/jasonqiu212.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jasonqiu212"},"content":"---","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"jasonqiu212"},"content":"layout: page","lastModifiedDate":"2022-09-26"},{"lineNumber":3,"author":{"gitId":"jasonqiu212"},"content":"title: Jason Qiu\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-26"},{"lineNumber":4,"author":{"gitId":"jasonqiu212"},"content":"---","lastModifiedDate":"2022-09-26"},{"lineNumber":5,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":6,"author":{"gitId":"jasonqiu212"},"content":"### Project: Swift+","lastModifiedDate":"2022-09-26"},{"lineNumber":7,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":8,"author":{"gitId":"jasonqiu212"},"content":"Swift+ is a **project management application** designed to help software engineering (SWE) project leads in tracking their daily","lastModifiedDate":"2022-11-04"},{"lineNumber":9,"author":{"gitId":"jasonqiu212"},"content":"interactions with contacts. The user interacts with Swift+ mainly through a Command Line Interface (CLI). The application is","lastModifiedDate":"2022-11-04"},{"lineNumber":10,"author":{"gitId":"jasonqiu212"},"content":"written in **Java** and has about **10k LoC**.","lastModifiedDate":"2022-11-04"},{"lineNumber":11,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":12,"author":{"gitId":"jasonqiu212"},"content":"Here are my contributions to the project.","lastModifiedDate":"2022-11-04"},{"lineNumber":13,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":14,"author":{"gitId":"peppapighs"},"content":"- **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003djasonqiu212\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2022-09-16\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)","lastModifiedDate":"2022-11-06"},{"lineNumber":15,"author":{"gitId":"peppapighs"},"content":"- **New feature**: Added the ability to find tasks","lastModifiedDate":"2022-11-06"},{"lineNumber":16,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":17,"author":{"gitId":"peppapighs"},"content":"  - Relevant pull request(s): [#58](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/58)","lastModifiedDate":"2022-11-06"},{"lineNumber":18,"author":{"gitId":"peppapighs"},"content":"  - What it does: This feature allows users to search for tasks using keywords.","lastModifiedDate":"2022-11-06"},{"lineNumber":19,"author":{"gitId":"peppapighs"},"content":"  - Justification: This feature eases the process of finding tasks, since users can easily search using keywords.","lastModifiedDate":"2022-11-06"},{"lineNumber":20,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":21,"author":{"gitId":"peppapighs"},"content":"- **New feature**: Added `deadline`, `description`, and `isDone` fields for tasks","lastModifiedDate":"2022-11-06"},{"lineNumber":22,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":23,"author":{"gitId":"peppapighs"},"content":"  - Relevant pull request(s): [#103](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/103), [#132](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/132)","lastModifiedDate":"2022-11-06"},{"lineNumber":24,"author":{"gitId":"peppapighs"},"content":"  - What it does: This feature give users the option to add deadlines and descriptions to their tasks. It also allows the user to mark their tasks as completed and mark their tasks as incomplete.","lastModifiedDate":"2022-11-06"},{"lineNumber":25,"author":{"gitId":"peppapighs"},"content":"  - Justification: This enhancement allows users to add more information to their created tasks.","lastModifiedDate":"2022-11-06"},{"lineNumber":26,"author":{"gitId":"peppapighs"},"content":"  - Highlights: The main challenge while implementing this task was making the `deadline` and `description` optional. Although Java has the `Optional` class to wrap around optional values, it was difficult to decide where to add this layer of abstraction while considering the Single Level of Abstraction Principle (SLAP).","lastModifiedDate":"2022-11-06"},{"lineNumber":27,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":28,"author":{"gitId":"peppapighs"},"content":"- **Enhancements to existing features**:","lastModifiedDate":"2022-11-06"},{"lineNumber":29,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":30,"author":{"gitId":"peppapighs"},"content":"  - Renamed `find` command from AB3 to `find_contact` ([#56](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/56))","lastModifiedDate":"2022-11-06"},{"lineNumber":31,"author":{"gitId":"jasonqiu212"},"content":"  - Added task sorting feature by chronological order of deadline ([#137](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/137))","lastModifiedDate":"2022-11-07"},{"lineNumber":32,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":33,"author":{"gitId":"peppapighs"},"content":"- **Project management**:","lastModifiedDate":"2022-11-06"},{"lineNumber":34,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":35,"author":{"gitId":"peppapighs"},"content":"  - Managed releases `v1.1` to `v1.3` (4 releases) on GitHub","lastModifiedDate":"2022-11-06"},{"lineNumber":36,"author":{"gitId":"peppapighs"},"content":"  - Updated Jekyll site-wide settings ([#10](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/10))","lastModifiedDate":"2022-11-06"},{"lineNumber":37,"author":{"gitId":"peppapighs"},"content":"  - Removed AB3 traces from user guide ([#34](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/34))","lastModifiedDate":"2022-11-06"},{"lineNumber":38,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":39,"author":{"gitId":"peppapighs"},"content":"- **Documentation**:","lastModifiedDate":"2022-11-06"},{"lineNumber":40,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":41,"author":{"gitId":"peppapighs"},"content":"  - User Guide:","lastModifiedDate":"2022-11-06"},{"lineNumber":42,"author":{"gitId":"peppapighs"},"content":"    - Added sections on how to use this user guide and how to get started ([#193](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/193))","lastModifiedDate":"2022-11-06"},{"lineNumber":43,"author":{"gitId":"peppapighs"},"content":"    - Added documentation for the `find_task` command","lastModifiedDate":"2022-11-06"},{"lineNumber":44,"author":{"gitId":"peppapighs"},"content":"    - Made cosmetic changes to header colors and spacing to match color scheme of app","lastModifiedDate":"2022-11-06"},{"lineNumber":45,"author":{"gitId":"peppapighs"},"content":"  - Developer Guide:","lastModifiedDate":"2022-11-06"},{"lineNumber":46,"author":{"gitId":"jasonqiu212"},"content":"    - Added implementation details of optional `Description` and `Deadline` fields ([#249](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/249))","lastModifiedDate":"2022-11-07"},{"lineNumber":47,"author":{"gitId":"jasonqiu212"},"content":"    - Added user stories, target user profile, and value proposition ([#16](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/16))","lastModifiedDate":"2022-11-07"},{"lineNumber":48,"author":{"gitId":"jasonqiu212"},"content":"    - Added use cases 7 to 9 ([#249](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/249))","lastModifiedDate":"2022-11-07"},{"lineNumber":49,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":50,"author":{"gitId":"peppapighs"},"content":"- **Community**:","lastModifiedDate":"2022-11-06"},{"lineNumber":51,"author":{"gitId":"peppapighs"},"content":"  - PRs reviewed (with non-trivial review comments): [#19](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/19), [#20](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/20), [#48](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/48), [#57](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/57), [#62](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/62), [#83](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/83), [#85](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/85), [#89](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/89), [#99](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/99), [#128](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/128), [#133](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/133), [#187](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/187), [#195](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/195)","lastModifiedDate":"2022-11-06"},{"lineNumber":52,"author":{"gitId":"peppapighs"},"content":"  - Contributed to forum discussions (examples: [#288](https://github.com/nus-cs2103-AY2223S1/forum/issues/288), [#317](https://github.com/nus-cs2103-AY2223S1/forum/issues/317))","lastModifiedDate":"2022-11-06"},{"lineNumber":53,"author":{"gitId":"peppapighs"},"content":"  - Reported bugs and added suggestions for other teams in the class (examples: [#241](https://github.com/AY2223S1-CS2103T-W16-4/tp/issues/241), [#262](https://github.com/AY2223S1-CS2103T-W16-4/tp/issues/262), [#272](https://github.com/AY2223S1-CS2103T-W16-4/tp/issues/272))","lastModifiedDate":"2022-11-06"},{"lineNumber":54,"author":{"gitId":"peppapighs"},"content":"  - Found bug in `addressbook-level3` site website: [#149](https://github.com/se-edu/addressbook-level3/issues/149)","lastModifiedDate":"2022-11-06"}],"authorContributionMap":{"jasonqiu212":17,"peppapighs":37}},{"path":"docs/team/peppapighs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"---","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"peppapighs"},"content":"layout: page","lastModifiedDate":"2022-09-26"},{"lineNumber":3,"author":{"gitId":"peppapighs"},"content":"title: Pontakorn Prasertsuk\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-26"},{"lineNumber":4,"author":{"gitId":"peppapighs"},"content":"---","lastModifiedDate":"2022-09-26"},{"lineNumber":5,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":6,"author":{"gitId":"peppapighs"},"content":"### Project: Swift+","lastModifiedDate":"2022-09-26"},{"lineNumber":7,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":8,"author":{"gitId":"peppapighs"},"content":"Swift+ is a **project management application** designed to help software engineering (SWE) project leads in tracking their daily interactions with contacts. The user interacts with Swift+ mainly through a Command Line Interface (CLI). The application is written in **Java** and has about **10k LoC**.","lastModifiedDate":"2022-11-07"},{"lineNumber":9,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":10,"author":{"gitId":"peppapighs"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-26"},{"lineNumber":11,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":12,"author":{"gitId":"peppapighs"},"content":"- **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dpeppapighs\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)","lastModifiedDate":"2022-11-03"},{"lineNumber":13,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":14,"author":{"gitId":"peppapighs"},"content":"- **New feature**: Added the task schema and the ability to add tasks.","lastModifiedDate":"2022-11-03"},{"lineNumber":15,"author":{"gitId":"peppapighs"},"content":"  - What it does: allows the user to add tasks to the contact list.","lastModifiedDate":"2022-11-03"},{"lineNumber":16,"author":{"gitId":"peppapighs"},"content":"  - Justification: This feature improves the product significantly because a user can track the tasks.","lastModifiedDate":"2022-11-03"},{"lineNumber":17,"author":{"gitId":"peppapighs"},"content":"  - Highlights: This enhancement serves as the foundation for the other task features.","lastModifiedDate":"2022-11-03"},{"lineNumber":18,"author":{"gitId":"peppapighs"},"content":"- **New features** Added the bridge relation between tasks and contacts.","lastModifiedDate":"2022-11-03"},{"lineNumber":19,"author":{"gitId":"peppapighs"},"content":"  - What it does: allows the user to assign tasks to contacts and vice versa.","lastModifiedDate":"2022-11-03"},{"lineNumber":20,"author":{"gitId":"peppapighs"},"content":"  - Justification: This feature improves the product significantly because a user can track the associations between contacts and tasks.","lastModifiedDate":"2022-11-03"},{"lineNumber":21,"author":{"gitId":"peppapighs"},"content":"  - Highlights: This enhancement serves as the foundation for the other contact-task features.","lastModifiedDate":"2022-11-03"},{"lineNumber":22,"author":{"gitId":"peppapighs"},"content":"- **New features** Added the ability to assign a contact to a task.","lastModifiedDate":"2022-11-03"},{"lineNumber":23,"author":{"gitId":"peppapighs"},"content":"  - What it does: allows the user to assign a contact to a task.","lastModifiedDate":"2022-11-03"},{"lineNumber":24,"author":{"gitId":"peppapighs"},"content":"  - Justification: This feature improves the product significantly because a user can make change to the associations between contacts and tasks.","lastModifiedDate":"2022-11-03"},{"lineNumber":25,"author":{"gitId":"peppapighs"},"content":"- **Enhancements to existing features**:","lastModifiedDate":"2022-11-03"},{"lineNumber":26,"author":{"gitId":"peppapighs"},"content":"  - Updated package name from `seedu.address` to `swift` [#40](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/40), [#42](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/42)","lastModifiedDate":"2022-11-07"},{"lineNumber":27,"author":{"gitId":"peppapighs"},"content":"  - Rename `list` command to `list_contact` command [#48](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/48)","lastModifiedDate":"2022-11-07"},{"lineNumber":28,"author":{"gitId":"peppapighs"},"content":"- **Documentation**:","lastModifiedDate":"2022-11-03"},{"lineNumber":29,"author":{"gitId":"peppapighs"},"content":"  - User Guide:","lastModifiedDate":"2022-11-03"},{"lineNumber":30,"author":{"gitId":"peppapighs"},"content":"    - Add documentation for `add_task` command [#45](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/45)","lastModifiedDate":"2022-11-07"},{"lineNumber":31,"author":{"gitId":"peppapighs"},"content":"    - Add documentation for `assign` command [#99](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/99)","lastModifiedDate":"2022-11-07"},{"lineNumber":32,"author":{"gitId":"peppapighs"},"content":"    - Add documentation for `clear` command [#133](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/133)","lastModifiedDate":"2022-11-07"},{"lineNumber":33,"author":{"gitId":"peppapighs"},"content":"    - Add documentation for autocomplete feature [#189](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/189)","lastModifiedDate":"2022-11-07"},{"lineNumber":34,"author":{"gitId":"peppapighs"},"content":"    - Add autocomplete FAQ [#227](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/227)","lastModifiedDate":"2022-11-07"},{"lineNumber":35,"author":{"gitId":"peppapighs"},"content":"  - Developer Guide:","lastModifiedDate":"2022-11-03"},{"lineNumber":36,"author":{"gitId":"peppapighs"},"content":"    - Add implementation details of contact-task bridge relation [#79](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/79)","lastModifiedDate":"2022-11-07"},{"lineNumber":37,"author":{"gitId":"peppapighs"},"content":"    - Update class and model sequence diagrams [#244](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/244)","lastModifiedDate":"2022-11-07"},{"lineNumber":38,"author":{"gitId":"peppapighs"},"content":"- **Reviewing/Mentoring**:","lastModifiedDate":"2022-11-03"},{"lineNumber":39,"author":{"gitId":"peppapighs"},"content":"  - PRs reviewed: [#8](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/8), [#16](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/16), [#28](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/28), [#58](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/58), [#83](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/83), [#85](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/85), [#89](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/89), [#103](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/103), [#127](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/127), [#137](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/137), [#205](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/205), [#212](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/212), [#230](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/230)","lastModifiedDate":"2022-11-07"},{"lineNumber":40,"author":{"gitId":"peppapighs"},"content":"  - Bug reports: [#90](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/90), [#100](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/100), [#224](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/224), [#229](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/229)","lastModifiedDate":"2022-11-07"}],"authorContributionMap":{"peppapighs":40}},{"path":"docs/team/santosh3007.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"santosh3007"},"content":"---","lastModifiedDate":"2022-09-28"},{"lineNumber":2,"author":{"gitId":"santosh3007"},"content":"layout: page","lastModifiedDate":"2022-09-28"},{"lineNumber":3,"author":{"gitId":"santosh3007"},"content":"title: Santosh Muthukrishnan\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-28"},{"lineNumber":4,"author":{"gitId":"santosh3007"},"content":"---","lastModifiedDate":"2022-09-28"},{"lineNumber":5,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"santosh3007"},"content":"## Project: Swift+","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":8,"author":{"gitId":"santosh3007"},"content":"Swift+ is a **project management application** designed to help software engineering (SWE) project leads in tracking their daily tasks and","lastModifiedDate":"2022-11-07"},{"lineNumber":9,"author":{"gitId":"santosh3007"},"content":"interactions with different contacts. The user interacts with Swift+ mainly through a Command Line Interface (CLI). The application is","lastModifiedDate":"2022-11-07"},{"lineNumber":10,"author":{"gitId":"santosh3007"},"content":"written in **Java** and has about **10k LoC**.","lastModifiedDate":"2022-11-04"},{"lineNumber":11,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":12,"author":{"gitId":"santosh3007"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-28"},{"lineNumber":13,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":14,"author":{"gitId":"santosh3007"},"content":"- **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dsantosh3007\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2022-09-16\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)","lastModifiedDate":"2022-09-28"},{"lineNumber":15,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":16,"author":{"gitId":"santosh3007"},"content":"* **New feature**: Added the ability to edit tasks","lastModifiedDate":"2022-11-04"},{"lineNumber":17,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":18,"author":{"gitId":"peppapighs"},"content":"  - Relevant pull request(s): [#66](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/66)","lastModifiedDate":"2022-11-06"},{"lineNumber":19,"author":{"gitId":"peppapighs"},"content":"  - What it does: This feature allows users to edit existing tasks to update the corresponding fields.","lastModifiedDate":"2022-11-06"},{"lineNumber":20,"author":{"gitId":"peppapighs"},"content":"  - Justification: This feature aids users in changing the details of their tasks if they created the task with incorrect details or if there is a change in details.","lastModifiedDate":"2022-11-06"},{"lineNumber":21,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":22,"author":{"gitId":"santosh3007"},"content":"* **New feature**: Added Command Suggestion and Autocomplete features","lastModifiedDate":"2022-11-04"},{"lineNumber":23,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":24,"author":{"gitId":"peppapighs"},"content":"  - Relevant pull request(s): [#83](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/83) [#113](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/113) [#134](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/134)","lastModifiedDate":"2022-11-06"},{"lineNumber":25,"author":{"gitId":"peppapighs"},"content":"  - What it does: This feature prompts users with command suggestions depending on the current user input. It also allows them to autocomplete their commands depending on the command suggestion.","lastModifiedDate":"2022-11-06"},{"lineNumber":26,"author":{"gitId":"peppapighs"},"content":"  - Justification: This feature make typing commands faster for users and helps new users get familiarised with the commands. It also lets the users know if their commands are valid as they type without running the commands.","lastModifiedDate":"2022-11-06"},{"lineNumber":27,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":28,"author":{"gitId":"santosh3007"},"content":"* **New feature**: Added the ability to mark/unmark tasks as completed","lastModifiedDate":"2022-11-04"},{"lineNumber":29,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":30,"author":{"gitId":"peppapighs"},"content":"  - Relevant pull request(s): [#128](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/128)","lastModifiedDate":"2022-11-06"},{"lineNumber":31,"author":{"gitId":"peppapighs"},"content":"  - What it does: This feature allows users to mark or unmark existing tasks as complete.","lastModifiedDate":"2022-11-06"},{"lineNumber":32,"author":{"gitId":"peppapighs"},"content":"  - Justification: This feature aids users in keeping track of the progress/status of their tasks and events so that they can manage their schedule effectively.","lastModifiedDate":"2022-11-06"},{"lineNumber":33,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":34,"author":{"gitId":"santosh3007"},"content":"* **Enhancements to existing UI**:","lastModifiedDate":"2022-11-04"},{"lineNumber":35,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":36,"author":{"gitId":"peppapighs"},"content":"  - Enhanced the current base UI to match project color scheme and changed layout of components ([#57](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/57))","lastModifiedDate":"2022-11-06"},{"lineNumber":37,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":38,"author":{"gitId":"santosh3007"},"content":"* **Documentation**:","lastModifiedDate":"2022-11-04"},{"lineNumber":39,"author":{"gitId":"peppapighs"},"content":"  - User Guide:","lastModifiedDate":"2022-11-06"},{"lineNumber":40,"author":{"gitId":"peppapighs"},"content":"    - Added documentation for `edit_task` command ([#27](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/27))","lastModifiedDate":"2022-11-06"},{"lineNumber":41,"author":{"gitId":"peppapighs"},"content":"    - Added documentation for Command Suggestion and Autocomplete features","lastModifiedDate":"2022-11-06"},{"lineNumber":42,"author":{"gitId":"peppapighs"},"content":"    - Added documentation for `mark` and `unmark` commands","lastModifiedDate":"2022-11-06"},{"lineNumber":43,"author":{"gitId":"santosh3007"},"content":"    - Added Caution note for `clear` command","lastModifiedDate":"2022-11-07"},{"lineNumber":44,"author":{"gitId":"peppapighs"},"content":"  - Developer Guide:","lastModifiedDate":"2022-11-06"},{"lineNumber":45,"author":{"gitId":"peppapighs"},"content":"    - Updated and added Non-Functional Requirements ([#28](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/28))","lastModifiedDate":"2022-11-06"},{"lineNumber":46,"author":{"gitId":"peppapighs"},"content":"    - Added implementation details of Command Suggestion and Autocomplete ([#82](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/82))","lastModifiedDate":"2022-11-06"},{"lineNumber":47,"author":{"gitId":"santosh3007"},"content":"    - Added and updated class diagrams for UI (With and without Task/Contact display panels)","lastModifiedDate":"2022-11-07"},{"lineNumber":48,"author":{"gitId":"santosh3007"},"content":"    - Update PersonTaskBridge Diagram","lastModifiedDate":"2022-11-07"},{"lineNumber":49,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":50,"author":{"gitId":"santosh3007"},"content":"\u003c!-- * **Project management**: to be added soon --\u003e","lastModifiedDate":"2022-11-04"},{"lineNumber":51,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":52,"author":{"gitId":"peppapighs"},"content":"- **Reviewing/Mentoring**:","lastModifiedDate":"2022-11-06"},{"lineNumber":53,"author":{"gitId":"santosh3007"},"content":"  - PRs reviewed (with non-trivial review comments): [#77](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/77), [#83](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/83), [#85](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/85), [#101](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/101), [#111](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/111), [#119](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/119), [#121](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/121), [#127](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/127), [#132](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/132), [#137](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/137), [#138](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/138), [#139](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/139), [#190](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/190), [#191](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/191), [#193](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/193), [#199](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/199), [#217](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/217),  [#251](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/251)","lastModifiedDate":"2022-11-07"},{"lineNumber":54,"author":{"gitId":"santosh3007"},"content":"  - Helped with the logic behind tab switching and panel management  [#111](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/111)","lastModifiedDate":"2022-11-07"},{"lineNumber":55,"author":{"gitId":"santosh3007"},"content":"  - Helped with coming up with the idea of making `CommandResult` include a `CommandType` enum to differentiate which tab each command is associated to  [#111](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/111)","lastModifiedDate":"2022-11-07"},{"lineNumber":56,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-11-07"}],"authorContributionMap":{"santosh3007":34,"peppapighs":22}},{"path":"docs/team/shenyicui.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ShenyiCui"},"content":"---","lastModifiedDate":"2022-09-27"},{"lineNumber":2,"author":{"gitId":"ShenyiCui"},"content":"layout: page","lastModifiedDate":"2022-09-27"},{"lineNumber":3,"author":{"gitId":"ShenyiCui"},"content":"title: Shenyi Cui\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-27"},{"lineNumber":4,"author":{"gitId":"ShenyiCui"},"content":"---","lastModifiedDate":"2022-09-27"},{"lineNumber":5,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":6,"author":{"gitId":"ShenyiCui"},"content":"### Project: Swift+","lastModifiedDate":"2022-09-27"},{"lineNumber":7,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":8,"author":{"gitId":"ShenyiCui"},"content":"Swift+ is a desktop contact management application for SWE project leads working on multiple projects to track their","lastModifiedDate":"2022-09-27"},{"lineNumber":9,"author":{"gitId":"ShenyiCui"},"content":"interactions and meetings with clients and colleagues. The user interacts with it using a CLI, and Swift+ has a GUI created","lastModifiedDate":"2022-09-27"},{"lineNumber":10,"author":{"gitId":"ShenyiCui"},"content":"with JavaFX. It is written in Java and has about 10kLoC.","lastModifiedDate":"2022-09-27"},{"lineNumber":11,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":12,"author":{"gitId":"ShenyiCui"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-27"},{"lineNumber":13,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":14,"author":{"gitId":"peppapighs"},"content":"- **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dshenyicui\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)","lastModifiedDate":"2022-11-06"},{"lineNumber":15,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":16,"author":{"gitId":"peppapighs"},"content":"* **New feature**: Added the ability to delete tasks. [#52](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/52)","lastModifiedDate":"2022-11-06"},{"lineNumber":17,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":18,"author":{"gitId":"ShenyiCui"},"content":"  - What it does: allows the user to delete tasks from the program.","lastModifiedDate":"2022-11-04"},{"lineNumber":19,"author":{"gitId":"ShenyiCui"},"content":"  - Justification: This feature improves the usability of the application, allowing users to keep clear already completed tasks.","lastModifiedDate":"2022-11-04"},{"lineNumber":20,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":21,"author":{"gitId":"peppapighs"},"content":"* **New features** Added the ability to select contacts. [#86](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/86)","lastModifiedDate":"2022-11-06"},{"lineNumber":22,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":23,"author":{"gitId":"ShenyiCui"},"content":"  - What it does: allows the user to select a contact to view its task association.","lastModifiedDate":"2022-11-04"},{"lineNumber":24,"author":{"gitId":"ShenyiCui"},"content":"  - Justification: This feature improves the product significantly because a user can track the associations between contacts and tasks.","lastModifiedDate":"2022-11-04"},{"lineNumber":25,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":26,"author":{"gitId":"peppapighs"},"content":"* **New features** Added a new panel in the UI that displays the associated tasks and contacts. [#86](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/86)","lastModifiedDate":"2022-11-06"},{"lineNumber":27,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":28,"author":{"gitId":"ShenyiCui"},"content":"  - What it does: allows the user to view the associated contacts and tasks to a selected item.","lastModifiedDate":"2022-11-04"},{"lineNumber":29,"author":{"gitId":"ShenyiCui"},"content":"  - Justification: This feature improves the product significantly because it allows the user to view the associations between contacts and tasks.","lastModifiedDate":"2022-11-04"},{"lineNumber":30,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":31,"author":{"gitId":"peppapighs"},"content":"* **New features** Added the ability for a user to unassign a contact or task. [#127](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/127)","lastModifiedDate":"2022-11-06"},{"lineNumber":32,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":33,"author":{"gitId":"ShenyiCui"},"content":"  - What it does: allows the user to view the associated contacts and tasks to a selected item.","lastModifiedDate":"2022-11-04"},{"lineNumber":34,"author":{"gitId":"ShenyiCui"},"content":"  - Justification: This feature improves the product significantly because it allows the user to view the associations between contacts and tasks.","lastModifiedDate":"2022-11-04"},{"lineNumber":35,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":36,"author":{"gitId":"peppapighs"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-11-06"},{"lineNumber":37,"author":{"gitId":"ShenyiCui"},"content":"  - Rename `add` command to `add_contact` command [#51](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/51)","lastModifiedDate":"2022-11-04"},{"lineNumber":38,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":39,"author":{"gitId":"peppapighs"},"content":"- **Documentation**:","lastModifiedDate":"2022-11-06"},{"lineNumber":40,"author":{"gitId":"peppapighs"},"content":"  - User Guide:","lastModifiedDate":"2022-11-06"},{"lineNumber":41,"author":{"gitId":"ShenyiCui"},"content":"    - Add documentation for `select`","lastModifiedDate":"2022-11-04"},{"lineNumber":42,"author":{"gitId":"ShenyiCui"},"content":"    - Add documentation for `delete_task`","lastModifiedDate":"2022-11-04"},{"lineNumber":43,"author":{"gitId":"ShenyiCui"},"content":"    - Add documentation for `unassign`","lastModifiedDate":"2022-11-04"},{"lineNumber":44,"author":{"gitId":"peppapighs"},"content":"  - Developer Guide:","lastModifiedDate":"2022-11-06"},{"lineNumber":45,"author":{"gitId":"ShenyiCui"},"content":"    - Added documentation for `delete_task` [#89](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/89)","lastModifiedDate":"2022-11-04"},{"lineNumber":46,"author":{"gitId":"ShenyiCui"},"content":"    - Added manual testing instructions [#251](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/251)","lastModifiedDate":"2022-11-07"},{"lineNumber":47,"author":{"gitId":"peppapighs"},"content":"- **Community**:","lastModifiedDate":"2022-11-06"},{"lineNumber":48,"author":{"gitId":"peppapighs"},"content":"  - PRs reviewed (with non-trivial review comments):","lastModifiedDate":"2022-11-06"},{"lineNumber":49,"author":{"gitId":"peppapighs"},"content":"    - [#111](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/111), [#28](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/28), [#27](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/27),","lastModifiedDate":"2022-11-06"},{"lineNumber":50,"author":{"gitId":"ShenyiCui"},"content":"      [#91](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/91), [#94](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/94), [#227](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/227), [#230](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/230)","lastModifiedDate":"2022-11-07"},{"lineNumber":51,"author":{"gitId":"peppapighs"},"content":"  - Reported bugs and added suggestions for other teams in the class","lastModifiedDate":"2022-11-06"},{"lineNumber":52,"author":{"gitId":"peppapighs"},"content":"    - [#93](https://github.com/AY2223S1-CS2103T-T12-2/tp/issues/93), [#92](https://github.com/AY2223S1-CS2103T-T12-2/tp/issues/92), [#110](https://github.com/AY2223S1-CS2103T-T12-2/tp/issues/110)","lastModifiedDate":"2022-11-06"}],"authorContributionMap":{"ShenyiCui":34,"peppapighs":18}},{"path":"docs/team/yunruu.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"yunruu"},"content":"---","lastModifiedDate":"2022-09-28"},{"lineNumber":2,"author":{"gitId":"yunruu"},"content":"layout: page","lastModifiedDate":"2022-09-28"},{"lineNumber":3,"author":{"gitId":"yunruu"},"content":"title: Chin Yun Ru\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-28"},{"lineNumber":4,"author":{"gitId":"yunruu"},"content":"---","lastModifiedDate":"2022-09-28"},{"lineNumber":5,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"yunruu"},"content":"### Project: Swift+","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":8,"author":{"gitId":"yunruu"},"content":"Swift+ is a desktop contact management application for SWE project leads working on multiple projects to track their","lastModifiedDate":"2022-09-28"},{"lineNumber":9,"author":{"gitId":"yunruu"},"content":"interactions and meetings with clients and colleagues. The user interacts with it using a CLI, and Swift+ has a GUI created","lastModifiedDate":"2022-09-28"},{"lineNumber":10,"author":{"gitId":"yunruu"},"content":"with JavaFX. It is written in Java and has about 10kLoC.","lastModifiedDate":"2022-09-28"},{"lineNumber":11,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":12,"author":{"gitId":"yunruu"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-28"},{"lineNumber":13,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":14,"author":{"gitId":"peppapighs"},"content":"- **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dyunruu\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2022-09-16\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)","lastModifiedDate":"2022-11-06"},{"lineNumber":15,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":16,"author":{"gitId":"peppapighs"},"content":"- **New feature**: Added `list_task` command","lastModifiedDate":"2022-11-06"},{"lineNumber":17,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":18,"author":{"gitId":"peppapighs"},"content":"  - Relevant pull requests: [#63](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/63), [#64](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/64), [#194](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/194)","lastModifiedDate":"2022-11-06"},{"lineNumber":19,"author":{"gitId":"peppapighs"},"content":"  - What it does: list all existing tasks.","lastModifiedDate":"2022-11-06"},{"lineNumber":20,"author":{"gitId":"peppapighs"},"content":"  - Justification: this feature provides an immediate overview of all tasks information at one go.","lastModifiedDate":"2022-11-06"},{"lineNumber":21,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":22,"author":{"gitId":"peppapighs"},"content":"- **New feature**: Added main task panel and sub contact panel","lastModifiedDate":"2022-11-06"},{"lineNumber":23,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":24,"author":{"gitId":"peppapighs"},"content":"  - Relevant pull requests: [#101](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/101), [#85](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/85)","lastModifiedDate":"2022-11-06"},{"lineNumber":25,"author":{"gitId":"peppapighs"},"content":"  - What it does: allows the user to see the lists of task according to the task commands.","lastModifiedDate":"2022-11-06"},{"lineNumber":26,"author":{"gitId":"peppapighs"},"content":"  - Justification: this feature allows user to focus on the list of tasks in the main panel, with the relevant contacts in the sub-panel.","lastModifiedDate":"2022-11-06"},{"lineNumber":27,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":28,"author":{"gitId":"peppapighs"},"content":"- **New feature**: Added toggling between contacts and tasks tabs","lastModifiedDate":"2022-11-06"},{"lineNumber":29,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":30,"author":{"gitId":"peppapighs"},"content":"  - Relevant pull requests: [#101](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/101), [#111](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/111)","lastModifiedDate":"2022-11-06"},{"lineNumber":31,"author":{"gitId":"peppapighs"},"content":"  - What it does: allows the user toggle between contacts and tasks tabs so they can focus on either view.","lastModifiedDate":"2022-11-06"},{"lineNumber":32,"author":{"gitId":"peppapighs"},"content":"  - Justification: allows user to focus on contacts or tasks view according to the command type (contacts or tasks respectively).","lastModifiedDate":"2022-11-06"},{"lineNumber":33,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":34,"author":{"gitId":"peppapighs"},"content":"- **New feature**: Added `select_task` command","lastModifiedDate":"2022-11-06"},{"lineNumber":35,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":36,"author":{"gitId":"peppapighs"},"content":"  - Relevant pull requests: [#101](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/101), [#117](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/117)","lastModifiedDate":"2022-11-06"},{"lineNumber":37,"author":{"gitId":"peppapighs"},"content":"  - What it does: allows the user to select a task to view the task information and assigned contacts.","lastModifiedDate":"2022-11-06"},{"lineNumber":38,"author":{"gitId":"peppapighs"},"content":"  - Justification: allows the user to see the important information of the contacts that are assigned to the task.","lastModifiedDate":"2022-11-06"},{"lineNumber":39,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":40,"author":{"gitId":"peppapighs"},"content":"- **Enhancements to existing features**:","lastModifiedDate":"2022-11-06"},{"lineNumber":41,"author":{"gitId":"peppapighs"},"content":"  - Renamed `Edit` command from AB3 to `EditContact` ([#62](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/62))","lastModifiedDate":"2022-11-06"},{"lineNumber":42,"author":{"gitId":"yunruu"},"content":"  - Updated Contacts Tab UI ([#78](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/78))","lastModifiedDate":"2022-11-07"},{"lineNumber":43,"author":{"gitId":"yunruu"},"content":"  - Updated Tasks Tab UI ([101](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/101))","lastModifiedDate":"2022-11-07"},{"lineNumber":44,"author":{"gitId":"yunruu"},"content":"  - Updated overall UI ([126](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/126), [#138](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/138), [#145](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/145), [#77](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/77), [#78](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/78), [#148](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/148))","lastModifiedDate":"2022-11-07"},{"lineNumber":45,"author":{"gitId":"peppapighs"},"content":"- **Documentation**:","lastModifiedDate":"2022-11-06"},{"lineNumber":46,"author":{"gitId":"yunruu"},"content":"  - User Guide:","lastModifiedDate":"2022-11-07"},{"lineNumber":47,"author":{"gitId":"yunruu"},"content":"    - Updated `edit_contact` and `list_task` documentation ([#31](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/31), [#194](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/194))","lastModifiedDate":"2022-11-07"},{"lineNumber":48,"author":{"gitId":"yunruu"},"content":"    - Added documentation for `select_task` and `select_contact` commands ([#117](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/117))","lastModifiedDate":"2022-11-07"},{"lineNumber":49,"author":{"gitId":"yunruu"},"content":"  - Developer Guide:","lastModifiedDate":"2022-11-07"},{"lineNumber":50,"author":{"gitId":"yunruu"},"content":"    - Updated glossary ([#32](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/32))","lastModifiedDate":"2022-11-07"},{"lineNumber":51,"author":{"gitId":"yunruu"},"content":"    - Added documentation for implementation of tasks main panel ([#85](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/85))","lastModifiedDate":"2022-11-07"},{"lineNumber":52,"author":{"gitId":"yunruu"},"content":"- **Reviewing**: [#22](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/22), [#84](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/84), [#124](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/124), [#140](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/140), [#147](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/147), [#222](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/222), [#232](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/232), [#233](https://github.com/AY2223S1-CS2103T-T12-2/tp/pull/233)","lastModifiedDate":"2022-11-07"}],"authorContributionMap":{"peppapighs":29,"yunruu":23}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"peppapighs"},"content":"package swift.logic.commands;","lastModifiedDate":"2022-10-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"peppapighs"},"content":"import swift.model.Model;","lastModifiedDate":"2022-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2020-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2022-01-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            + \": Edits the remark of the person identified \"","lastModifiedDate":"2021-08-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"peppapighs"},"content":"import static swift.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594) after you are done.","lastModifiedDate":"2022-01-02"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"peppapighs"},"content":"Create a `RemarkCommandParser` class in the `swift.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2022-10-01"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2022-01-02"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of person data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the person’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a person.","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"peppapighs"},"content":"Create a new `Remark` in `swift.model.person`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2022-10-01"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2022-01-02"},{"lineNumber":235,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each person.","lastModifiedDate":"2020-07-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"peppapighs"},"content":"Simply add the following to [`swift.ui.PersonCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2022-10-01"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2022-01-02"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    remark.setText(person.getRemark().value);","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-07-29"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2021-08-01"},{"lineNumber":348,"author":{"gitId":"-"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-08-01"},{"lineNumber":349,"author":{"gitId":"-"},"content":"                personToEdit.getAddress(), remark, personToEdit.getTags());","lastModifiedDate":"2020-07-29"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"ShenyiCui"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PEOPLE);","lastModifiedDate":"2022-10-23"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":360,"author":{"gitId":"-"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2022-01-02"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":378,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2022-01-02"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"ShenyiCui":1,"-":394,"peppapighs":6}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `address` field from `Person` class.","lastModifiedDate":"2021-08-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `address` field can be done similarly.","lastModifiedDate":"2021-08-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Let’s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"peppapighs"},"content":"The `address` field in `Person` is actually an instance of the `swift.model.person.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2022-10-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditPersonDescriptor` may require more careful inspection.","lastModifiedDate":"2021-08-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Let’s try removing references to `Address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"1. Safe delete the field `address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"jasonqiu212"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip** \u003cbr\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":54,"author":{"gitId":"jasonqiu212"},"content":"   Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Person` class will require you to modify its constructor.","lastModifiedDate":"2022-10-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `PersonCard` that has not been removed nor identified.","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"A quick look at the `PersonCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"**`PersonCard.java`**","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"**`PersonCard.fxml`**","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"**`invalidPersonAddressBook.json`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"jasonqiu212":2,"-":108,"peppapighs":1}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"![ArchitectureDiagram](../images/ArchitectureDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"peppapighs"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `swift.logic.Logic`.","lastModifiedDate":"2022-10-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"jasonqiu212"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip** \u003cbr\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":47,"author":{"gitId":"jasonqiu212"},"content":"The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2022-10-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"peppapighs"},"content":"A quick look at the `swift.logic.Logic` (an extract given below) confirms that this indeed might be what we’re looking for.","lastModifiedDate":"2022-10-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"jasonqiu212"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip** \u003cbr\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":74,"author":{"gitId":"jasonqiu212"},"content":"The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2022-10-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"jasonqiu212"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip** \u003cbr\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":89,"author":{"gitId":"jasonqiu212"},"content":"Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2022-10-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"jasonqiu212"},"content":"2. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2022-10-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"jasonqiu212"},"content":"3. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"jasonqiu212"},"content":"4. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"jasonqiu212"},"content":"5. We are interested in the `logic.execute(commandText)` portion of that line so let’s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"jasonqiu212"},"content":"6. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Let’s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2022-10-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"jasonqiu212"},"content":"7. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2022-10-26"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"jasonqiu212"},"content":"8. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2022-10-26"},{"lineNumber":139,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"jasonqiu212"},"content":"9. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `AddressBookParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2022-10-26"},{"lineNumber":142,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"jasonqiu212"},"content":"10. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"jasonqiu212"},"content":"11. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2022-10-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"jasonqiu212"},"content":"12. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2022-10-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     ...","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"         return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     ...","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     ```","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"jasonqiu212"},"content":"13. Let’s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2022-10-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"jasonqiu212"},"content":"    \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip** \u003cbr\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":167,"author":{"gitId":"jasonqiu212"},"content":"    Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2022-10-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"jasonqiu212"},"content":"14. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2022-10-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":172,"author":{"gitId":"jasonqiu212"},"content":"15. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditPersonDescriptor`. Recall that we can verify the contents of `editPersonDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"jasonqiu212"},"content":"16. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2022-10-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    \u003cimg src\u003d\"../images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":178,"author":{"gitId":"jasonqiu212"},"content":"17. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2022-10-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"jasonqiu212"},"content":"18. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2022-10-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        ...","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"ShenyiCui"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PEOPLE);","lastModifiedDate":"2022-10-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"jasonqiu212"},"content":"19. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2022-10-26"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    * it uses the `setPerson()` method (defined in the interface `Model` and implemented in `ModelManager` as per the usual pattern) to update the person data.","lastModifiedDate":"2021-07-31"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    * it uses the `updateFilteredPersonList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ persons.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":204,"author":{"gitId":"-"},"content":"      FYI, The \u0027filtered list\u0027 is the list of persons resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the persons so that the user can see the edited person along with all other persons. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":205,"author":{"gitId":"-"},"content":"      To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of persons is being tracked.","lastModifiedDate":"2021-07-31"},{"lineNumber":206,"author":{"gitId":"-"},"content":"      \u003cimg src\u003d\"../images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    * :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"jasonqiu212"},"content":"20. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"jasonqiu212"},"content":"21. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2022-10-26"},{"lineNumber":213,"author":{"gitId":"-"},"content":"     \u003cimg src\u003d\"../images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    * :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"jasonqiu212"},"content":"22. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2022-10-26"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":218,"author":{"gitId":"jasonqiu212"},"content":"    \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip** \u003cbr\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":219,"author":{"gitId":"jasonqiu212"},"content":"    When trying to step into a statement such as `storage.saveAddressBook(model.getAddressBook())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2022-10-26"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"jasonqiu212"},"content":"23. As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonAddressBook#saveAddressBook()` method which calls the `JsonSerializableAddressBook` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2022-10-26"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"     **`JsonSerializableAddressBook` constructor:**","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"     ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"     /**","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"      * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"      *","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"      * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"      * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"      */","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"         persons.addAll(","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"             source.getPersonList()","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"                   .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                   .map(JsonAdaptedPerson::new)","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                   .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"     }","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"     ```","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"jasonqiu212"},"content":"24. It appears that a `JsonAdaptedPerson` is created for each `Person` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2022-10-26"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"jasonqiu212"},"content":"25. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    \u003cimg src\u003d\"../images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    * :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"jasonqiu212"},"content":"26. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2022-10-26"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"jasonqiu212"},"content":"27. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2022-10-26"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"     **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":253,"author":{"gitId":"-"},"content":"     ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"     public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"         requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"         resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"     }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"     ```","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"jasonqiu212"},"content":"28. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"    5.  Add a new field to `Person`","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"jasonqiu212":37,"ShenyiCui":1,"-":260,"peppapighs":2}},{"path":"src/main/java/swift/AppParameters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"peppapighs"},"content":"import swift.commons.core.LogsCenter;","lastModifiedDate":"2022-10-01"},{"lineNumber":11,"author":{"gitId":"peppapighs"},"content":"import swift.commons.util.FileUtil;","lastModifiedDate":"2022-10-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents the parsed command-line parameters given to the application.","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AppParameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AppParameters.class);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Path configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path getConfigPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setConfigPath(Path configPath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.configPath \u003d configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the application command-line parameters.","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static AppParameters parse(Application.Parameters parameters) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e namedParameters \u003d parameters.getNamed();","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String configPathParameter \u003d namedParameters.get(\"config\");","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (configPathParameter !\u003d null \u0026\u0026 !FileUtil.isValidPath(configPathParameter)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            logger.warning(\"Invalid config path \" + configPathParameter + \". Using default config path.\");","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            configPathParameter \u003d null;","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        appParameters.setConfigPath(configPathParameter !\u003d null ? Paths.get(configPathParameter) : null);","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return appParameters;","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!(other instanceof AppParameters)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d (AppParameters) other;","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return Objects.equals(getConfigPath(), otherAppParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return configPath.hashCode();","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"peppapighs":3,"-":61}},{"path":"src/main/java/swift/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" *     Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"peppapighs":1,"-":24}},{"path":"src/main/java/swift/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"peppapighs"},"content":"import swift.commons.core.Config;","lastModifiedDate":"2022-10-01"},{"lineNumber":11,"author":{"gitId":"peppapighs"},"content":"import swift.commons.core.LogsCenter;","lastModifiedDate":"2022-10-01"},{"lineNumber":12,"author":{"gitId":"peppapighs"},"content":"import swift.commons.core.Version;","lastModifiedDate":"2022-10-01"},{"lineNumber":13,"author":{"gitId":"peppapighs"},"content":"import swift.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-01"},{"lineNumber":14,"author":{"gitId":"peppapighs"},"content":"import swift.commons.util.ConfigUtil;","lastModifiedDate":"2022-10-01"},{"lineNumber":15,"author":{"gitId":"peppapighs"},"content":"import swift.commons.util.StringUtil;","lastModifiedDate":"2022-10-01"},{"lineNumber":16,"author":{"gitId":"peppapighs"},"content":"import swift.logic.Logic;","lastModifiedDate":"2022-10-01"},{"lineNumber":17,"author":{"gitId":"peppapighs"},"content":"import swift.logic.LogicManager;","lastModifiedDate":"2022-10-01"},{"lineNumber":18,"author":{"gitId":"peppapighs"},"content":"import swift.model.AddressBook;","lastModifiedDate":"2022-10-01"},{"lineNumber":19,"author":{"gitId":"peppapighs"},"content":"import swift.model.Model;","lastModifiedDate":"2022-10-01"},{"lineNumber":20,"author":{"gitId":"peppapighs"},"content":"import swift.model.ModelManager;","lastModifiedDate":"2022-10-01"},{"lineNumber":21,"author":{"gitId":"peppapighs"},"content":"import swift.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-10-01"},{"lineNumber":22,"author":{"gitId":"peppapighs"},"content":"import swift.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-01"},{"lineNumber":23,"author":{"gitId":"peppapighs"},"content":"import swift.model.UserPrefs;","lastModifiedDate":"2022-10-01"},{"lineNumber":24,"author":{"gitId":"peppapighs"},"content":"import swift.model.util.SampleDataUtil;","lastModifiedDate":"2022-10-01"},{"lineNumber":25,"author":{"gitId":"peppapighs"},"content":"import swift.storage.AddressBookStorage;","lastModifiedDate":"2022-10-01"},{"lineNumber":26,"author":{"gitId":"peppapighs"},"content":"import swift.storage.JsonAddressBookStorage;","lastModifiedDate":"2022-10-01"},{"lineNumber":27,"author":{"gitId":"peppapighs"},"content":"import swift.storage.JsonUserPrefsStorage;","lastModifiedDate":"2022-10-01"},{"lineNumber":28,"author":{"gitId":"peppapighs"},"content":"import swift.storage.Storage;","lastModifiedDate":"2022-10-01"},{"lineNumber":29,"author":{"gitId":"peppapighs"},"content":"import swift.storage.StorageManager;","lastModifiedDate":"2022-10-01"},{"lineNumber":30,"author":{"gitId":"peppapighs"},"content":"import swift.storage.UserPrefsStorage;","lastModifiedDate":"2022-10-01"},{"lineNumber":31,"author":{"gitId":"peppapighs"},"content":"import swift.ui.Ui;","lastModifiedDate":"2022-10-01"},{"lineNumber":32,"author":{"gitId":"peppapighs"},"content":"import swift.ui.UiManager;","lastModifiedDate":"2022-10-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"jasonqiu212"},"content":"    public static final Version VERSION \u003d new Version(1, 3, 0, true);","lastModifiedDate":"2022-10-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":81,"author":{"gitId":"jasonqiu212"},"content":"            if (addressBookOptional.isEmpty()) {","lastModifiedDate":"2022-10-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                logger.info(\"Data file not found. Will be starting with a sample AddressBook\");","lastModifiedDate":"2016-12-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"ShenyiCui"},"content":"        ModelManager newModelManager \u003d new ModelManager(initialData, userPrefs);","lastModifiedDate":"2022-10-23"},{"lineNumber":94,"author":{"gitId":"santosh3007"},"content":"        // Show all Tasks by Default","lastModifiedDate":"2022-10-27"},{"lineNumber":95,"author":{"gitId":"yunruu"},"content":"        newModelManager.updateFilteredTaskList(Model.PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2022-10-27"},{"lineNumber":96,"author":{"gitId":"ShenyiCui"},"content":"        return newModelManager;","lastModifiedDate":"2022-10-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":154,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jasonqiu212":2,"ShenyiCui":2,"santosh3007":1,"peppapighs":24,"-":156,"yunruu":1}},{"path":"src/main/java/swift/commons/core/Config.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.commons.core;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Config values used by the app","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Config {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Path DEFAULT_CONFIG_FILE \u003d Paths.get(\"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    // Config values customizable through config file","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private Level logLevel \u003d Level.INFO;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path userPrefsFilePath \u003d Paths.get(\"preferences.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public Level getLogLevel() {","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setLogLevel(Level logLevel) {","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.logLevel \u003d logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void setUserPrefsFilePath(Path userPrefsFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!(other instanceof Config)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config o \u003d (Config) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Objects.equals(logLevel, o.logLevel)","lastModifiedDate":"2018-12-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(userPrefsFilePath, o.userPrefsFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return Objects.hash(logLevel, userPrefsFilePath);","lastModifiedDate":"2018-12-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        sb.append(\"Current log level : \" + logLevel);","lastModifiedDate":"2018-12-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        sb.append(\"\\nPreference file Location : \" + userPrefsFilePath);","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"peppapighs":1,"-":62}},{"path":"src/main/java/swift/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.commons.core;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"jasonqiu212"},"content":"    private static final double DEFAULT_HEIGHT \u003d 900;","lastModifiedDate":"2022-10-28"},{"lineNumber":14,"author":{"gitId":"jasonqiu212"},"content":"    private static final double DEFAULT_WIDTH \u003d 1500;","lastModifiedDate":"2022-10-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings o \u003d (GuiSettings) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d o.windowWidth","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d o.windowHeight","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, o.windowCoordinates);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        sb.append(\"Width : \" + windowWidth + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        sb.append(\"Height : \" + windowHeight + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        sb.append(\"Position : \" + windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jasonqiu212":2,"peppapighs":1,"-":76}},{"path":"src/main/java/swift/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.commons.core;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String LOG_FILE \u003d \"addressbook.log\";","lastModifiedDate":"2016-09-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static FileHandler fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static ConsoleHandler consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes with a custom log level (specified in the {@code config} object)","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Logging levels for existing loggers will only be updated if the logger with the same name","lastModifiedDate":"2016-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * is requested again from the LogsCenter.","lastModifiedDate":"2016-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.info(\"currentLogLevel: \" + currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name.","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(false);","lastModifiedDate":"2016-09-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addConsoleHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addFileHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (clazz \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return Logger.getLogger(\"\");","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates the {@code consoleHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void addConsoleHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (consoleHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            consoleHandler \u003d createConsoleHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logger.addHandler(consoleHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Remove all the handlers from {@code logger}.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Creates {@code fileHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static void addFileHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (fileHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                fileHandler \u003d createFileHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-04-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Creates a {@code FileHandler} for the log file.","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @throws IOException if there are problems opening the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private static FileHandler createFileHandler() throws IOException {","lastModifiedDate":"2016-09-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2016-09-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2016-09-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        fileHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private static ConsoleHandler createConsoleHandler() {","lastModifiedDate":"2016-09-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2016-09-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"peppapighs":1,"-":111}},{"path":"src/main/java/swift/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.commons.core;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"peppapighs"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The contact index provided is invalid\";","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"ShenyiCui"},"content":"    public static final String MESSAGE_INVALID_TASK_DISPLAYED_INDEX \u003d \"The task index provided is invalid\";","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"peppapighs"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d contacts listed!\";","lastModifiedDate":"2022-11-05"},{"lineNumber":13,"author":{"gitId":"jasonqiu212"},"content":"    public static final String MESSAGE_TASKS_LISTED_OVERVIEW \u003d \"%1$d tasks listed!\";","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"peppapighs"},"content":"    public static final String MESSAGE_PERSONS_SELECTED_OVERVIEW \u003d \"Contact Selected!\";","lastModifiedDate":"2022-11-05"},{"lineNumber":15,"author":{"gitId":"yunruu"},"content":"    public static final String MESSAGE_TASKS_SELECTED_OVERVIEW \u003d \"Task Selected!\";","lastModifiedDate":"2022-10-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ShenyiCui":1,"jasonqiu212":1,"peppapighs":4,"-":9,"yunruu":1}},{"path":"src/main/java/swift/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.commons.core;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a version with major, minor and patch number","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final int major;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final int minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final int patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.major \u003d major;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public int getMajor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return major;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public int getMinor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int getPatch() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @param versionString version number string","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @return a Version object","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                versionMatcher.group(4) \u003d\u003d null ? false : true);","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (major !\u003d other.major) {","lastModifiedDate":"2018-08-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return major - other.major;","lastModifiedDate":"2018-08-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (minor !\u003d other.minor) {","lastModifiedDate":"2018-08-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return minor - other.minor;","lastModifiedDate":"2018-08-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (patch !\u003d other.patch) {","lastModifiedDate":"2018-08-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return patch - other.patch;","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2018-08-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (isEarlyAccess) {","lastModifiedDate":"2018-08-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return -1;","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return 1;","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Version)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        final Version other \u003d (Version) obj;","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return compareTo(other) \u003d\u003d 0;","lastModifiedDate":"2018-08-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"peppapighs":1,"-":115}},{"path":"src/main/java/swift/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.commons.core.index;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"peppapighs"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":49,"author":{"gitId":"peppapighs"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-16"},{"lineNumber":50,"author":{"gitId":"peppapighs"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2022-10-16"},{"lineNumber":51,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":52,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                || (other instanceof Index // instanceof handles nulls","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                \u0026\u0026 zeroBasedIndex \u003d\u003d ((Index) other).zeroBasedIndex); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"peppapighs":6,"-":53}},{"path":"src/main/java/swift/commons/exceptions/DataConversionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.commons.exceptions;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error during conversion of data from one format to another","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class DataConversionException extends Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public DataConversionException(Exception cause) {","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(cause);","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"peppapighs":1,"-":10}},{"path":"src/main/java/swift/commons/exceptions/IllegalValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.commons.exceptions;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that some given data does not fulfill some constraints.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class IllegalValueException extends Exception {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @param cause of the main exception","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"peppapighs":1,"-":20}},{"path":"src/main/java/swift/commons/util/AppUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.commons.util;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"peppapighs"},"content":"import swift.MainApp;","lastModifiedDate":"2022-10-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A container for App specific utility functions","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AppUtil {","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Gets an {@code Image} from the specified path.","lastModifiedDate":"2020-05-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(imagePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException with {@code errorMessage} if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition, String errorMessage) {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"peppapighs":2,"-":40}},{"path":"src/main/java/swift/commons/util/CollectionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.commons.util;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-06-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2016-12-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Utility methods related to Collections","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CollectionUtil {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** @see #requireAllNonNull(Collection) */","lastModifiedDate":"2017-05-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Object... items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Stream.of(items).forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Throws NullPointerException if {@code items} or any element of {@code items} is null.","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Collection\u003c?\u003e items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        items.forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if {@code items} contain any elements that are non-null.","lastModifiedDate":"2017-06-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isAnyNonNull(Object... items) {","lastModifiedDate":"2017-06-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);","lastModifiedDate":"2017-06-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"peppapighs":1,"-":34}},{"path":"src/main/java/swift/commons/util/ConfigUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.commons.util;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"peppapighs"},"content":"import swift.commons.core.Config;","lastModifiedDate":"2022-10-01"},{"lineNumber":8,"author":{"gitId":"peppapighs"},"content":"import swift.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A class for accessing the Config File.","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ConfigUtil {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static Optional\u003cConfig\u003e readConfig(Path configFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(configFilePath, Config.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static void saveConfig(Config config, Path configFilePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(config, configFilePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"peppapighs":3,"-":20}},{"path":"src/main/java/swift/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.commons.util;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String)},","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"peppapighs":1,"-":82}},{"path":"src/main/java/swift/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.commons.util;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"peppapighs"},"content":"import swift.commons.core.LogsCenter;","lastModifiedDate":"2022-10-01"},{"lineNumber":24,"author":{"gitId":"peppapighs"},"content":"import swift.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class JsonUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    .addDeserializer(Level.class, new LevelDeserializer(Level.class)));","lastModifiedDate":"2016-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);","lastModifiedDate":"2016-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the Json object from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2016-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * If any values are missing from the file, default values will be used, as long as the file is a valid json file.","lastModifiedDate":"2016-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null.","lastModifiedDate":"2016-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param classOfObjectToDeserialize Json file has to correspond to the structure in the class given here.","lastModifiedDate":"2016-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile(","lastModifiedDate":"2016-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            logger.info(\"Json file \" + filePath + \" not found\");","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2016-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        T jsonFile;","lastModifiedDate":"2016-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2018-04-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new DataConversionException(e);","lastModifiedDate":"2016-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2016-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Saves the Json object to the specified file.","lastModifiedDate":"2016-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2016-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @param jsonFile cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2016-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2017-05-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        serializeObjectToJsonFile(filePath, jsonFile);","lastModifiedDate":"2018-04-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Converts a given string representation of a JSON data to instance of a class","lastModifiedDate":"2016-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @return The instance of T with the specified values in the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2016-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2016-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Converts a given instance of a class into its JSON data string representation","lastModifiedDate":"2016-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param instance The T object to be converted into the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @return JSON data representation of the given class instance, in string","lastModifiedDate":"2016-10-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2016-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2016-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            super(vc);","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"         * Gets the logging level that matches loggingLevelString","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"         * \u003cp\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2016-09-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            return Level.class;","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"peppapighs":3,"-":140}},{"path":"src/main/java/swift/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.commons.util;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"peppapighs"},"content":"import static swift.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"peppapighs":2,"-":66}},{"path":"src/main/java/swift/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.logic;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"peppapighs"},"content":"import swift.commons.core.GuiSettings;","lastModifiedDate":"2022-10-01"},{"lineNumber":7,"author":{"gitId":"peppapighs"},"content":"import swift.logic.commands.CommandResult;","lastModifiedDate":"2022-10-01"},{"lineNumber":8,"author":{"gitId":"peppapighs"},"content":"import swift.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-01"},{"lineNumber":9,"author":{"gitId":"peppapighs"},"content":"import swift.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-01"},{"lineNumber":10,"author":{"gitId":"peppapighs"},"content":"import swift.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-10-01"},{"lineNumber":11,"author":{"gitId":"yunruu"},"content":"import swift.model.bridge.PersonTaskBridge;","lastModifiedDate":"2022-10-23"},{"lineNumber":12,"author":{"gitId":"peppapighs"},"content":"import swift.model.person.Person;","lastModifiedDate":"2022-10-01"},{"lineNumber":13,"author":{"gitId":"yunruu"},"content":"import swift.model.task.Task;","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"peppapighs"},"content":"     * @see swift.model.Model#getAddressBook()","lastModifiedDate":"2022-10-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":38,"author":{"gitId":"yunruu"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2022-10-26"},{"lineNumber":39,"author":{"gitId":"yunruu"},"content":"    ObservableList\u003cPerson\u003e getUnfilteredPersonList();","lastModifiedDate":"2022-10-26"},{"lineNumber":40,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":41,"author":{"gitId":"yunruu"},"content":"    /** Returns an unmodifiable view of the filtered list of tasks */","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"yunruu"},"content":"    ObservableList\u003cTask\u003e getFilteredTaskList();","lastModifiedDate":"2022-10-20"},{"lineNumber":43,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":44,"author":{"gitId":"yunruu"},"content":"    /** Returns an unmodifiable view of the filtered list of bridge */","lastModifiedDate":"2022-10-23"},{"lineNumber":45,"author":{"gitId":"yunruu"},"content":"    ObservableList\u003cPersonTaskBridge\u003e getFilteredBridgeList();","lastModifiedDate":"2022-10-23"},{"lineNumber":46,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":47,"author":{"gitId":"yunruu"},"content":"    /** Returns an unmodifiable view of the unfiltered list of bridge */","lastModifiedDate":"2022-10-26"},{"lineNumber":48,"author":{"gitId":"yunruu"},"content":"    ObservableList\u003cPersonTaskBridge\u003e getUnfilteredBridgeList();","lastModifiedDate":"2022-10-26"},{"lineNumber":49,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"peppapighs":8,"-":42,"yunruu":14}},{"path":"src/main/java/swift/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.logic;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"peppapighs"},"content":"import swift.commons.core.GuiSettings;","lastModifiedDate":"2022-10-01"},{"lineNumber":9,"author":{"gitId":"peppapighs"},"content":"import swift.commons.core.LogsCenter;","lastModifiedDate":"2022-10-01"},{"lineNumber":10,"author":{"gitId":"peppapighs"},"content":"import swift.logic.commands.Command;","lastModifiedDate":"2022-10-01"},{"lineNumber":11,"author":{"gitId":"peppapighs"},"content":"import swift.logic.commands.CommandResult;","lastModifiedDate":"2022-10-01"},{"lineNumber":12,"author":{"gitId":"peppapighs"},"content":"import swift.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-01"},{"lineNumber":13,"author":{"gitId":"peppapighs"},"content":"import swift.logic.parser.AddressBookParser;","lastModifiedDate":"2022-10-01"},{"lineNumber":14,"author":{"gitId":"peppapighs"},"content":"import swift.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-01"},{"lineNumber":15,"author":{"gitId":"peppapighs"},"content":"import swift.model.Model;","lastModifiedDate":"2022-10-01"},{"lineNumber":16,"author":{"gitId":"peppapighs"},"content":"import swift.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-10-01"},{"lineNumber":17,"author":{"gitId":"yunruu"},"content":"import swift.model.bridge.PersonTaskBridge;","lastModifiedDate":"2022-10-23"},{"lineNumber":18,"author":{"gitId":"peppapighs"},"content":"import swift.model.person.Person;","lastModifiedDate":"2022-10-01"},{"lineNumber":19,"author":{"gitId":"ShenyiCui"},"content":"import swift.model.task.Task;","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"peppapighs"},"content":"import swift.storage.Storage;","lastModifiedDate":"2022-10-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2022-10-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2022-10-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":70,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":71,"author":{"gitId":"yunruu"},"content":"    @Override","lastModifiedDate":"2022-10-26"},{"lineNumber":72,"author":{"gitId":"yunruu"},"content":"    public ObservableList\u003cPerson\u003e getUnfilteredPersonList() {","lastModifiedDate":"2022-10-26"},{"lineNumber":73,"author":{"gitId":"yunruu"},"content":"        return model.getUnfilteredPersonList();","lastModifiedDate":"2022-10-26"},{"lineNumber":74,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":75,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":76,"author":{"gitId":"ShenyiCui"},"content":"    @Override","lastModifiedDate":"2022-10-21"},{"lineNumber":77,"author":{"gitId":"ShenyiCui"},"content":"    public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2022-10-21"},{"lineNumber":78,"author":{"gitId":"ShenyiCui"},"content":"        return model.getFilteredTaskList();","lastModifiedDate":"2022-10-21"},{"lineNumber":79,"author":{"gitId":"ShenyiCui"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":80,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":81,"author":{"gitId":"yunruu"},"content":"    @Override","lastModifiedDate":"2022-10-23"},{"lineNumber":82,"author":{"gitId":"yunruu"},"content":"    public ObservableList\u003cPersonTaskBridge\u003e getFilteredBridgeList() {","lastModifiedDate":"2022-10-23"},{"lineNumber":83,"author":{"gitId":"yunruu"},"content":"        return model.getFilteredBridgeList();","lastModifiedDate":"2022-10-23"},{"lineNumber":84,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":85,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":86,"author":{"gitId":"yunruu"},"content":"    @Override","lastModifiedDate":"2022-10-26"},{"lineNumber":87,"author":{"gitId":"yunruu"},"content":"    public ObservableList\u003cPersonTaskBridge\u003e getUnfilteredBridgeList() {","lastModifiedDate":"2022-10-26"},{"lineNumber":88,"author":{"gitId":"yunruu"},"content":"        return model.getUnfilteredBridgeList();","lastModifiedDate":"2022-10-26"},{"lineNumber":89,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":90,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"ShenyiCui":7,"peppapighs":12,"-":69,"yunruu":17}},{"path":"src/main/java/swift/logic/commands/AddContactCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.logic.commands;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-10-01"},{"lineNumber":5,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-01"},{"lineNumber":6,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-01"},{"lineNumber":7,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-01"},{"lineNumber":8,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"santosh3007"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"santosh3007"},"content":"import java.util.List;","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"peppapighs"},"content":"import swift.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-01"},{"lineNumber":14,"author":{"gitId":"santosh3007"},"content":"import swift.logic.parser.Prefix;","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"peppapighs"},"content":"import swift.model.Model;","lastModifiedDate":"2022-10-01"},{"lineNumber":16,"author":{"gitId":"peppapighs"},"content":"import swift.model.person.Person;","lastModifiedDate":"2022-10-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"ShenyiCui"},"content":"public class AddContactCommand extends Command {","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"ShenyiCui"},"content":"    public static final String COMMAND_WORD \u003d \"add_contact\";","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"santosh3007"},"content":"    public static final ArrayList\u003cPrefix\u003e ARGUMENT_PREFIXES \u003d new ArrayList\u003c\u003e(","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"santosh3007"},"content":"            List.of(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG));","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"peppapighs"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a contact to the address book. \"","lastModifiedDate":"2022-11-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"peppapighs"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New contact added: %1$s\";","lastModifiedDate":"2022-11-05"},{"lineNumber":43,"author":{"gitId":"peppapighs"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This contact already exists in the address book\";","lastModifiedDate":"2022-11-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"ShenyiCui"},"content":"    public AddContactCommand(Person person) {","lastModifiedDate":"2022-10-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"yunruu"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd), CommandType.CONTACTS);","lastModifiedDate":"2022-10-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"ShenyiCui"},"content":"                || (other instanceof AddContactCommand // instanceof handles nulls","lastModifiedDate":"2022-10-06"},{"lineNumber":71,"author":{"gitId":"ShenyiCui"},"content":"                \u0026\u0026 toAdd.equals(((AddContactCommand) other).toAdd));","lastModifiedDate":"2022-10-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ShenyiCui":5,"santosh3007":6,"peppapighs":12,"-":49,"yunruu":1}},{"path":"src/main/java/swift/logic/commands/AddTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.logic.commands;","lastModifiedDate":"2022-10-05"},{"lineNumber":2,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"peppapighs"},"content":"import static swift.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.parser.CliSyntax.PREFIX_CONTACT;","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"jasonqiu212"},"content":"import static swift.logic.parser.CliSyntax.PREFIX_DEADLINE;","lastModifiedDate":"2022-10-25"},{"lineNumber":6,"author":{"gitId":"jasonqiu212"},"content":"import static swift.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"santosh3007"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"peppapighs"},"content":"import java.util.Collection;","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"santosh3007"},"content":"import java.util.List;","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"peppapighs"},"content":"import swift.commons.core.index.Index;","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"peppapighs"},"content":"import swift.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"santosh3007"},"content":"import swift.logic.parser.Prefix;","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"peppapighs"},"content":"import swift.model.Model;","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"ShenyiCui"},"content":"import swift.model.task.Deadline;","lastModifiedDate":"2022-11-07"},{"lineNumber":18,"author":{"gitId":"peppapighs"},"content":"import swift.model.task.Task;","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"peppapighs"},"content":"/**","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"peppapighs"},"content":" * Adds a task to the address book.","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"peppapighs"},"content":" */","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"peppapighs"},"content":"public class AddTaskCommand extends Command {","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"peppapighs"},"content":"    public static final String COMMAND_WORD \u003d \"add_task\";","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"santosh3007"},"content":"    public static final ArrayList\u003cPrefix\u003e ARGUMENT_PREFIXES \u003d new ArrayList\u003c\u003e(","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"santosh3007"},"content":"            List.of(PREFIX_NAME, PREFIX_DESCRIPTION, PREFIX_DEADLINE, PREFIX_CONTACT));","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"peppapighs"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"peppapighs"},"content":"            + \": Adds a task to the task list.\\n\"","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"peppapighs"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"peppapighs"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"jasonqiu212"},"content":"            + \"[\" + PREFIX_DESCRIPTION + \"DESCRIPTION] \"","lastModifiedDate":"2022-10-25"},{"lineNumber":34,"author":{"gitId":"jasonqiu212"},"content":"            + \"[\" + PREFIX_DEADLINE + \"DEADLINE] (must be in dd-MM-yyyy HHmm format) \"","lastModifiedDate":"2022-10-27"},{"lineNumber":35,"author":{"gitId":"peppapighs"},"content":"            + \"[\" + PREFIX_CONTACT + \"CONTACT]...\\n\"","lastModifiedDate":"2022-10-15"},{"lineNumber":36,"author":{"gitId":"peppapighs"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"peppapighs"},"content":"            + PREFIX_NAME + \"CS2103T Tutorial \"","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"jasonqiu212"},"content":"            + PREFIX_DESCRIPTION + \"Finish questions \"","lastModifiedDate":"2022-10-27"},{"lineNumber":39,"author":{"gitId":"jasonqiu212"},"content":"            + PREFIX_DEADLINE + \"12-12-2022 1200 \"","lastModifiedDate":"2022-10-27"},{"lineNumber":40,"author":{"gitId":"peppapighs"},"content":"            + PREFIX_CONTACT + \"1 \"","lastModifiedDate":"2022-10-15"},{"lineNumber":41,"author":{"gitId":"peppapighs"},"content":"            + PREFIX_CONTACT + \"2\";","lastModifiedDate":"2022-10-15"},{"lineNumber":42,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"peppapighs"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New task added: %1$s\";","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"peppapighs"},"content":"    public static final String MESSAGE_DUPLICATE_TASK \u003d \"This task already exists in the address book\";","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"peppapighs"},"content":"    public static final String MESSAGE_INVALID_CONTACT_INDEX \u003d \"The contact index provided is invalid\";","lastModifiedDate":"2022-11-05"},{"lineNumber":46,"author":{"gitId":"ShenyiCui"},"content":"    public static final String MESSAGE_INVALID_DATE \u003d \"Deadline must valid and in the `dd-MM-yyyy HHmm` format.\";","lastModifiedDate":"2022-11-07"},{"lineNumber":47,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"peppapighs"},"content":"    private final Task toAdd;","lastModifiedDate":"2022-10-05"},{"lineNumber":49,"author":{"gitId":"peppapighs"},"content":"    private final Collection\u003cIndex\u003e contactIndices;","lastModifiedDate":"2022-10-16"},{"lineNumber":50,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":51,"author":{"gitId":"peppapighs"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":52,"author":{"gitId":"peppapighs"},"content":"     * Creates an AddTaskCommand to add the specified {@code Task}","lastModifiedDate":"2022-10-05"},{"lineNumber":53,"author":{"gitId":"peppapighs"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":54,"author":{"gitId":"peppapighs"},"content":"     * @param task Task to be added.","lastModifiedDate":"2022-10-05"},{"lineNumber":55,"author":{"gitId":"peppapighs"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":56,"author":{"gitId":"peppapighs"},"content":"    public AddTaskCommand(Task task, Collection\u003cIndex\u003e indices) {","lastModifiedDate":"2022-10-16"},{"lineNumber":57,"author":{"gitId":"peppapighs"},"content":"        requireAllNonNull(task, indices);","lastModifiedDate":"2022-10-16"},{"lineNumber":58,"author":{"gitId":"peppapighs"},"content":"        toAdd \u003d task;","lastModifiedDate":"2022-10-05"},{"lineNumber":59,"author":{"gitId":"peppapighs"},"content":"        contactIndices \u003d indices;","lastModifiedDate":"2022-10-16"},{"lineNumber":60,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":61,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":62,"author":{"gitId":"peppapighs"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":63,"author":{"gitId":"peppapighs"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-05"},{"lineNumber":64,"author":{"gitId":"peppapighs"},"content":"        requireAllNonNull(model);","lastModifiedDate":"2022-10-16"},{"lineNumber":65,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":66,"author":{"gitId":"peppapighs"},"content":"        if (model.hasTask(toAdd)) {","lastModifiedDate":"2022-10-05"},{"lineNumber":67,"author":{"gitId":"peppapighs"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2022-10-05"},{"lineNumber":68,"author":{"gitId":"peppapighs"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":69,"author":{"gitId":"ShenyiCui"},"content":"        if (toAdd.getDeadline().map(x -\u003e !Deadline.isValidDeadline(x.toString())).orElse(false)) {","lastModifiedDate":"2022-11-07"},{"lineNumber":70,"author":{"gitId":"ShenyiCui"},"content":"            throw new CommandException(MESSAGE_INVALID_DATE);","lastModifiedDate":"2022-11-07"},{"lineNumber":71,"author":{"gitId":"ShenyiCui"},"content":"        }","lastModifiedDate":"2022-11-07"},{"lineNumber":72,"author":{"gitId":"peppapighs"},"content":"        for (Index index : contactIndices) {","lastModifiedDate":"2022-11-05"},{"lineNumber":73,"author":{"gitId":"peppapighs"},"content":"            if (index.getZeroBased() \u003e\u003d model.getFilteredPersonList().size()) {","lastModifiedDate":"2022-11-05"},{"lineNumber":74,"author":{"gitId":"peppapighs"},"content":"                throw new CommandException(MESSAGE_INVALID_CONTACT_INDEX);","lastModifiedDate":"2022-11-05"},{"lineNumber":75,"author":{"gitId":"peppapighs"},"content":"            }","lastModifiedDate":"2022-11-05"},{"lineNumber":76,"author":{"gitId":"peppapighs"},"content":"        }","lastModifiedDate":"2022-11-05"},{"lineNumber":77,"author":{"gitId":"peppapighs"},"content":"        for (Index index : contactIndices) {","lastModifiedDate":"2022-10-16"},{"lineNumber":78,"author":{"gitId":"peppapighs"},"content":"            model.addBridge(model.getFilteredPersonList().get(index.getZeroBased()), toAdd);","lastModifiedDate":"2022-10-22"},{"lineNumber":79,"author":{"gitId":"peppapighs"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":80,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":81,"author":{"gitId":"peppapighs"},"content":"        model.addTask(toAdd);","lastModifiedDate":"2022-11-05"},{"lineNumber":82,"author":{"gitId":"yunruu"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd), CommandType.TASKS);","lastModifiedDate":"2022-10-27"},{"lineNumber":83,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":84,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":85,"author":{"gitId":"peppapighs"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":86,"author":{"gitId":"peppapighs"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-05"},{"lineNumber":87,"author":{"gitId":"peppapighs"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-05"},{"lineNumber":88,"author":{"gitId":"peppapighs"},"content":"                || (other instanceof AddTaskCommand // instanceof handles nulls","lastModifiedDate":"2022-10-05"},{"lineNumber":89,"author":{"gitId":"peppapighs"},"content":"                \u0026\u0026 toAdd.equals(((AddTaskCommand) other).toAdd));","lastModifiedDate":"2022-10-05"},{"lineNumber":90,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":91,"author":{"gitId":"peppapighs"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"jasonqiu212":6,"ShenyiCui":5,"santosh3007":5,"peppapighs":74,"yunruu":1}},{"path":"src/main/java/swift/logic/commands/AssignCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.logic.commands;","lastModifiedDate":"2022-10-25"},{"lineNumber":2,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":3,"author":{"gitId":"peppapighs"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-25"},{"lineNumber":4,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.parser.CliSyntax.PREFIX_CONTACT;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.parser.CliSyntax.PREFIX_TASK;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"peppapighs"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"peppapighs"},"content":"import java.util.List;","lastModifiedDate":"2022-10-25"},{"lineNumber":9,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":10,"author":{"gitId":"peppapighs"},"content":"import swift.commons.core.Messages;","lastModifiedDate":"2022-10-25"},{"lineNumber":11,"author":{"gitId":"peppapighs"},"content":"import swift.commons.core.index.Index;","lastModifiedDate":"2022-10-25"},{"lineNumber":12,"author":{"gitId":"peppapighs"},"content":"import swift.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-25"},{"lineNumber":13,"author":{"gitId":"peppapighs"},"content":"import swift.logic.parser.Prefix;","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"peppapighs"},"content":"import swift.model.Model;","lastModifiedDate":"2022-10-25"},{"lineNumber":15,"author":{"gitId":"peppapighs"},"content":"import swift.model.bridge.PersonTaskBridge;","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"peppapighs"},"content":"import swift.model.person.Person;","lastModifiedDate":"2022-10-25"},{"lineNumber":17,"author":{"gitId":"peppapighs"},"content":"import swift.model.task.Task;","lastModifiedDate":"2022-10-25"},{"lineNumber":18,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":19,"author":{"gitId":"peppapighs"},"content":"/**","lastModifiedDate":"2022-10-25"},{"lineNumber":20,"author":{"gitId":"peppapighs"},"content":" * Assigns a task to a contact identified using their displayed index from the","lastModifiedDate":"2022-10-25"},{"lineNumber":21,"author":{"gitId":"peppapighs"},"content":" * address book.","lastModifiedDate":"2022-10-25"},{"lineNumber":22,"author":{"gitId":"peppapighs"},"content":" */","lastModifiedDate":"2022-10-25"},{"lineNumber":23,"author":{"gitId":"peppapighs"},"content":"public class AssignCommand extends Command {","lastModifiedDate":"2022-10-25"},{"lineNumber":24,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":25,"author":{"gitId":"peppapighs"},"content":"    public static final String COMMAND_WORD \u003d \"assign\";","lastModifiedDate":"2022-10-25"},{"lineNumber":26,"author":{"gitId":"peppapighs"},"content":"    public static final ArrayList\u003cPrefix\u003e ARGUMENT_PREFIXES \u003d new ArrayList\u003c\u003e(","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"peppapighs"},"content":"            List.of(PREFIX_CONTACT, PREFIX_TASK));","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":29,"author":{"gitId":"peppapighs"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-25"},{"lineNumber":30,"author":{"gitId":"peppapighs"},"content":"            + \": Assigns the task to the contact identified by the index numbers used in the displayed contact list.\\n\"","lastModifiedDate":"2022-10-25"},{"lineNumber":31,"author":{"gitId":"peppapighs"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"peppapighs"},"content":"            + PREFIX_CONTACT + \"CONTACT_INDEX \"","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"peppapighs"},"content":"            + PREFIX_TASK + \"TASK_INDEX\\n\"","lastModifiedDate":"2022-10-27"},{"lineNumber":34,"author":{"gitId":"peppapighs"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-27"},{"lineNumber":35,"author":{"gitId":"peppapighs"},"content":"            + PREFIX_CONTACT + \"1 \"","lastModifiedDate":"2022-10-27"},{"lineNumber":36,"author":{"gitId":"peppapighs"},"content":"            + PREFIX_TASK + \"2\";","lastModifiedDate":"2022-10-27"},{"lineNumber":37,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":38,"author":{"gitId":"peppapighs"},"content":"    public static final String MESSAGE_ASSIGN_SUCCESS \u003d \"Task %1$s assigned to contact %2$s!\";","lastModifiedDate":"2022-10-25"},{"lineNumber":39,"author":{"gitId":"peppapighs"},"content":"    public static final String MESSAGE_DUPLICATE_BRIDGE \u003d \"This task is already assigned to this contact\";","lastModifiedDate":"2022-10-27"},{"lineNumber":40,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":41,"author":{"gitId":"peppapighs"},"content":"    private final Index contactIndex;","lastModifiedDate":"2022-10-25"},{"lineNumber":42,"author":{"gitId":"peppapighs"},"content":"    private final Index taskIndex;","lastModifiedDate":"2022-10-25"},{"lineNumber":43,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":44,"author":{"gitId":"peppapighs"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":45,"author":{"gitId":"peppapighs"},"content":"     * Creates an AssignCommand to add the specified {@code Task} to the specified","lastModifiedDate":"2022-10-25"},{"lineNumber":46,"author":{"gitId":"peppapighs"},"content":"     * {@code Person}","lastModifiedDate":"2022-10-25"},{"lineNumber":47,"author":{"gitId":"peppapighs"},"content":"     *","lastModifiedDate":"2022-10-25"},{"lineNumber":48,"author":{"gitId":"peppapighs"},"content":"     * @param contactIndex Index of the contact to assign the task to.","lastModifiedDate":"2022-10-25"},{"lineNumber":49,"author":{"gitId":"peppapighs"},"content":"     * @param taskIndex    Index of the task to be assigned.","lastModifiedDate":"2022-10-25"},{"lineNumber":50,"author":{"gitId":"peppapighs"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":51,"author":{"gitId":"peppapighs"},"content":"    public AssignCommand(Index contactIndex, Index taskIndex) {","lastModifiedDate":"2022-10-25"},{"lineNumber":52,"author":{"gitId":"peppapighs"},"content":"        this.contactIndex \u003d contactIndex;","lastModifiedDate":"2022-10-25"},{"lineNumber":53,"author":{"gitId":"peppapighs"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2022-10-25"},{"lineNumber":54,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":55,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":56,"author":{"gitId":"peppapighs"},"content":"    @Override","lastModifiedDate":"2022-10-25"},{"lineNumber":57,"author":{"gitId":"peppapighs"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-25"},{"lineNumber":58,"author":{"gitId":"peppapighs"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-25"},{"lineNumber":59,"author":{"gitId":"peppapighs"},"content":"        List\u003cPerson\u003e lastShownPersonList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-10-25"},{"lineNumber":60,"author":{"gitId":"peppapighs"},"content":"        List\u003cTask\u003e lastShownTaskList \u003d model.getFilteredTaskList();","lastModifiedDate":"2022-10-25"},{"lineNumber":61,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":62,"author":{"gitId":"peppapighs"},"content":"        if (contactIndex.getZeroBased() \u003e\u003d lastShownPersonList.size()) {","lastModifiedDate":"2022-10-25"},{"lineNumber":63,"author":{"gitId":"peppapighs"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-25"},{"lineNumber":64,"author":{"gitId":"peppapighs"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":65,"author":{"gitId":"peppapighs"},"content":"        if (taskIndex.getZeroBased() \u003e\u003d lastShownTaskList.size()) {","lastModifiedDate":"2022-10-25"},{"lineNumber":66,"author":{"gitId":"peppapighs"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-25"},{"lineNumber":67,"author":{"gitId":"peppapighs"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":68,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":69,"author":{"gitId":"peppapighs"},"content":"        Person selectedPerson \u003d lastShownPersonList.get(contactIndex.getZeroBased());","lastModifiedDate":"2022-10-25"},{"lineNumber":70,"author":{"gitId":"peppapighs"},"content":"        Task selectedTask \u003d lastShownTaskList.get(taskIndex.getZeroBased());","lastModifiedDate":"2022-10-25"},{"lineNumber":71,"author":{"gitId":"peppapighs"},"content":"        PersonTaskBridge bridge \u003d new PersonTaskBridge(selectedPerson.getId(), selectedTask.getId());","lastModifiedDate":"2022-10-27"},{"lineNumber":72,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":73,"author":{"gitId":"peppapighs"},"content":"        if (model.hasBridge(bridge)) {","lastModifiedDate":"2022-10-27"},{"lineNumber":74,"author":{"gitId":"peppapighs"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_BRIDGE);","lastModifiedDate":"2022-10-27"},{"lineNumber":75,"author":{"gitId":"peppapighs"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":76,"author":{"gitId":"peppapighs"},"content":"        model.addBridge(selectedPerson, selectedTask);","lastModifiedDate":"2022-10-25"},{"lineNumber":77,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":78,"author":{"gitId":"peppapighs"},"content":"        model.updateFilteredBridgeList(filteredBridge -\u003e model.getFilteredPersonList().stream()","lastModifiedDate":"2022-10-27"},{"lineNumber":79,"author":{"gitId":"peppapighs"},"content":"                .anyMatch(person -\u003e person.getId().equals(filteredBridge.getPersonId())));","lastModifiedDate":"2022-10-27"},{"lineNumber":80,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":81,"author":{"gitId":"peppapighs"},"content":"        return new CommandResult(String.format(MESSAGE_ASSIGN_SUCCESS, selectedTask, selectedPerson),","lastModifiedDate":"2022-10-27"},{"lineNumber":82,"author":{"gitId":"peppapighs"},"content":"                CommandType.ASSIGN);","lastModifiedDate":"2022-10-27"},{"lineNumber":83,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":84,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":85,"author":{"gitId":"peppapighs"},"content":"    @Override","lastModifiedDate":"2022-10-25"},{"lineNumber":86,"author":{"gitId":"peppapighs"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-25"},{"lineNumber":87,"author":{"gitId":"peppapighs"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-25"},{"lineNumber":88,"author":{"gitId":"peppapighs"},"content":"                || (other instanceof AssignCommand // instanceof handles nulls","lastModifiedDate":"2022-10-26"},{"lineNumber":89,"author":{"gitId":"peppapighs"},"content":"                        \u0026\u0026 contactIndex.equals(((AssignCommand) other).contactIndex)","lastModifiedDate":"2022-10-25"},{"lineNumber":90,"author":{"gitId":"peppapighs"},"content":"                        \u0026\u0026 taskIndex.equals(((AssignCommand) other).taskIndex)); // state check","lastModifiedDate":"2022-10-25"},{"lineNumber":91,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":92,"author":{"gitId":"peppapighs"},"content":"}","lastModifiedDate":"2022-10-25"}],"authorContributionMap":{"peppapighs":92}},{"path":"src/main/java/swift/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.logic.commands;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"santosh3007"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"santosh3007"},"content":"import swift.logic.parser.Prefix;","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"peppapighs"},"content":"import swift.model.AddressBook;","lastModifiedDate":"2022-10-01"},{"lineNumber":9,"author":{"gitId":"peppapighs"},"content":"import swift.model.Model;","lastModifiedDate":"2022-10-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"santosh3007"},"content":"    public static final ArrayList\u003cPrefix\u003e ARGUMENT_PREFIXES \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Address book has been cleared!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        model.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"yunruu"},"content":"        return new CommandResult(MESSAGE_SUCCESS, CommandType.CLEAR);","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"santosh3007":5,"peppapighs":3,"-":19,"yunruu":1}},{"path":"src/main/java/swift/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.logic.commands;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"peppapighs"},"content":"import swift.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-01"},{"lineNumber":4,"author":{"gitId":"peppapighs"},"content":"import swift.model.Model;","lastModifiedDate":"2022-10-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"peppapighs":3,"-":17}},{"path":"src/main/java/swift/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.logic.commands;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"yunruu"},"content":"    /** Type of the command. */","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"yunruu"},"content":"    private final CommandType commandType;","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"yunruu"},"content":"    public CommandResult(String feedbackToUser, CommandType commandType) {","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"yunruu"},"content":"        this.commandType \u003d commandType;","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"yunruu"},"content":"    public CommandType getCommandType() {","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"yunruu"},"content":"        return commandType;","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":32,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"yunruu"},"content":"                \u0026\u0026 commandType \u003d\u003d otherCommandResult.commandType;","lastModifiedDate":"2022-10-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"yunruu"},"content":"        return Objects.hash(feedbackToUser, commandType);","lastModifiedDate":"2022-10-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"peppapighs":1,"-":42,"yunruu":11}},{"path":"src/main/java/swift/logic/commands/CommandSuggestor.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"santosh3007"},"content":"package swift.logic.commands;","lastModifiedDate":"2022-10-21"},{"lineNumber":2,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":3,"author":{"gitId":"santosh3007"},"content":"import static swift.logic.parser.CliSyntax.PREFIX_KEYWORD;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"santosh3007"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"santosh3007"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-28"},{"lineNumber":7,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":8,"author":{"gitId":"santosh3007"},"content":"import swift.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"santosh3007"},"content":"import swift.logic.parser.ArgumentMultimap;","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"santosh3007"},"content":"import swift.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"santosh3007"},"content":"import swift.logic.parser.Prefix;","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"santosh3007"},"content":"/**","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"santosh3007"},"content":" * Suggests a command based on the user input.","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"santosh3007"},"content":" */","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"santosh3007"},"content":"public class CommandSuggestor {","lastModifiedDate":"2022-10-21"},{"lineNumber":17,"author":{"gitId":"jasonqiu212"},"content":"    private final ArrayList\u003cString\u003e commandList;","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"santosh3007"},"content":"    private final ArrayList\u003cArrayList\u003cPrefix\u003e\u003e argPrefixList;","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"santosh3007"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"santosh3007"},"content":"     * Constructs a {@code CommandSuggestor} with predefined commands and argument prompts.","lastModifiedDate":"2022-10-21"},{"lineNumber":22,"author":{"gitId":"santosh3007"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":23,"author":{"gitId":"santosh3007"},"content":"    public CommandSuggestor() {","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"santosh3007"},"content":"        commandList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-21"},{"lineNumber":25,"author":{"gitId":"santosh3007"},"content":"        argPrefixList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":27,"author":{"gitId":"santosh3007"},"content":"        commandList.add(AddContactCommand.COMMAND_WORD);","lastModifiedDate":"2022-10-21"},{"lineNumber":28,"author":{"gitId":"santosh3007"},"content":"        argPrefixList.add(AddContactCommand.ARGUMENT_PREFIXES);","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":30,"author":{"gitId":"santosh3007"},"content":"        commandList.add(AddTaskCommand.COMMAND_WORD);","lastModifiedDate":"2022-10-21"},{"lineNumber":31,"author":{"gitId":"santosh3007"},"content":"        argPrefixList.add(AddTaskCommand.ARGUMENT_PREFIXES);","lastModifiedDate":"2022-10-26"},{"lineNumber":32,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":33,"author":{"gitId":"santosh3007"},"content":"        commandList.add(ClearCommand.COMMAND_WORD);","lastModifiedDate":"2022-10-21"},{"lineNumber":34,"author":{"gitId":"santosh3007"},"content":"        argPrefixList.add(ClearCommand.ARGUMENT_PREFIXES);","lastModifiedDate":"2022-10-26"},{"lineNumber":35,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":36,"author":{"gitId":"santosh3007"},"content":"        commandList.add(DeleteContactCommand.COMMAND_WORD);","lastModifiedDate":"2022-10-21"},{"lineNumber":37,"author":{"gitId":"santosh3007"},"content":"        argPrefixList.add(DeleteContactCommand.ARGUMENT_PREFIXES);","lastModifiedDate":"2022-10-26"},{"lineNumber":38,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":39,"author":{"gitId":"santosh3007"},"content":"        commandList.add(DeleteTaskCommand.COMMAND_WORD);","lastModifiedDate":"2022-10-21"},{"lineNumber":40,"author":{"gitId":"santosh3007"},"content":"        argPrefixList.add(DeleteTaskCommand.ARGUMENT_PREFIXES);","lastModifiedDate":"2022-10-26"},{"lineNumber":41,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":42,"author":{"gitId":"santosh3007"},"content":"        commandList.add(EditContactCommand.COMMAND_WORD);","lastModifiedDate":"2022-10-21"},{"lineNumber":43,"author":{"gitId":"santosh3007"},"content":"        argPrefixList.add(EditContactCommand.ARGUMENT_PREFIXES);","lastModifiedDate":"2022-10-26"},{"lineNumber":44,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":45,"author":{"gitId":"santosh3007"},"content":"        commandList.add(EditTaskCommand.COMMAND_WORD);","lastModifiedDate":"2022-10-21"},{"lineNumber":46,"author":{"gitId":"santosh3007"},"content":"        argPrefixList.add(EditTaskCommand.ARGUMENT_PREFIXES);","lastModifiedDate":"2022-10-26"},{"lineNumber":47,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":48,"author":{"gitId":"santosh3007"},"content":"        commandList.add(ExitCommand.COMMAND_WORD);","lastModifiedDate":"2022-10-21"},{"lineNumber":49,"author":{"gitId":"santosh3007"},"content":"        argPrefixList.add(ExitCommand.ARGUMENT_PREFIXES);","lastModifiedDate":"2022-10-26"},{"lineNumber":50,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":51,"author":{"gitId":"santosh3007"},"content":"        commandList.add(FindContactCommand.COMMAND_WORD);","lastModifiedDate":"2022-10-21"},{"lineNumber":52,"author":{"gitId":"santosh3007"},"content":"        argPrefixList.add(FindContactCommand.ARGUMENT_PREFIXES);","lastModifiedDate":"2022-10-26"},{"lineNumber":53,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":54,"author":{"gitId":"santosh3007"},"content":"        commandList.add(FindTaskCommand.COMMAND_WORD);","lastModifiedDate":"2022-10-21"},{"lineNumber":55,"author":{"gitId":"santosh3007"},"content":"        argPrefixList.add(FindTaskCommand.ARGUMENT_PREFIXES);","lastModifiedDate":"2022-10-26"},{"lineNumber":56,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":57,"author":{"gitId":"santosh3007"},"content":"        commandList.add(HelpCommand.COMMAND_WORD);","lastModifiedDate":"2022-10-21"},{"lineNumber":58,"author":{"gitId":"santosh3007"},"content":"        argPrefixList.add(HelpCommand.ARGUMENT_PREFIXES);","lastModifiedDate":"2022-10-26"},{"lineNumber":59,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":60,"author":{"gitId":"santosh3007"},"content":"        commandList.add(ListContactCommand.COMMAND_WORD);","lastModifiedDate":"2022-10-21"},{"lineNumber":61,"author":{"gitId":"santosh3007"},"content":"        argPrefixList.add(ListContactCommand.ARGUMENT_PREFIXES);","lastModifiedDate":"2022-10-26"},{"lineNumber":62,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":63,"author":{"gitId":"santosh3007"},"content":"        commandList.add(ListTaskCommand.COMMAND_WORD);","lastModifiedDate":"2022-10-21"},{"lineNumber":64,"author":{"gitId":"santosh3007"},"content":"        argPrefixList.add(ListTaskCommand.ARGUMENT_PREFIXES);","lastModifiedDate":"2022-10-26"},{"lineNumber":65,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":66,"author":{"gitId":"santosh3007"},"content":"        commandList.add(SelectContactCommand.COMMAND_WORD);","lastModifiedDate":"2022-10-27"},{"lineNumber":67,"author":{"gitId":"santosh3007"},"content":"        argPrefixList.add(SelectContactCommand.ARGUMENT_PREFIXES);","lastModifiedDate":"2022-10-27"},{"lineNumber":68,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":69,"author":{"gitId":"santosh3007"},"content":"        commandList.add(SelectTaskCommand.COMMAND_WORD);","lastModifiedDate":"2022-10-27"},{"lineNumber":70,"author":{"gitId":"santosh3007"},"content":"        argPrefixList.add(SelectTaskCommand.ARGUMENT_PREFIXES);","lastModifiedDate":"2022-10-27"},{"lineNumber":71,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":72,"author":{"gitId":"santosh3007"},"content":"        commandList.add(MarkTaskCommand.COMMAND_WORD);","lastModifiedDate":"2022-10-27"},{"lineNumber":73,"author":{"gitId":"santosh3007"},"content":"        argPrefixList.add(MarkTaskCommand.ARGUMENT_PREFIXES);","lastModifiedDate":"2022-10-27"},{"lineNumber":74,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":75,"author":{"gitId":"santosh3007"},"content":"        commandList.add(UnmarkTaskCommand.COMMAND_WORD);","lastModifiedDate":"2022-10-27"},{"lineNumber":76,"author":{"gitId":"santosh3007"},"content":"        argPrefixList.add(UnmarkTaskCommand.ARGUMENT_PREFIXES);","lastModifiedDate":"2022-10-27"},{"lineNumber":77,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":78,"author":{"gitId":"peppapighs"},"content":"        commandList.add(AssignCommand.COMMAND_WORD);","lastModifiedDate":"2022-10-27"},{"lineNumber":79,"author":{"gitId":"peppapighs"},"content":"        argPrefixList.add(AssignCommand.ARGUMENT_PREFIXES);","lastModifiedDate":"2022-10-27"},{"lineNumber":80,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":81,"author":{"gitId":"ShenyiCui"},"content":"        commandList.add(UnassignCommand.COMMAND_WORD);","lastModifiedDate":"2022-10-27"},{"lineNumber":82,"author":{"gitId":"ShenyiCui"},"content":"        argPrefixList.add(UnassignCommand.ARGUMENT_PREFIXES);","lastModifiedDate":"2022-10-27"},{"lineNumber":83,"author":{"gitId":"santosh3007"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":84,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":85,"author":{"gitId":"santosh3007"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":86,"author":{"gitId":"santosh3007"},"content":"     * Suggests a command based on the user input.","lastModifiedDate":"2022-10-21"},{"lineNumber":87,"author":{"gitId":"santosh3007"},"content":"     *","lastModifiedDate":"2022-10-21"},{"lineNumber":88,"author":{"gitId":"santosh3007"},"content":"     * @param userInput User input.","lastModifiedDate":"2022-10-21"},{"lineNumber":89,"author":{"gitId":"santosh3007"},"content":"     * @return Suggested command.","lastModifiedDate":"2022-10-21"},{"lineNumber":90,"author":{"gitId":"santosh3007"},"content":"     * @throws CommandException If the user input is invalid.","lastModifiedDate":"2022-10-21"},{"lineNumber":91,"author":{"gitId":"santosh3007"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":92,"author":{"gitId":"santosh3007"},"content":"    public String suggestCommand(String userInput) throws CommandException {","lastModifiedDate":"2022-10-21"},{"lineNumber":93,"author":{"gitId":"santosh3007"},"content":"        assert userInput !\u003d null \u0026\u0026 !userInput.isEmpty();","lastModifiedDate":"2022-10-21"},{"lineNumber":94,"author":{"gitId":"santosh3007"},"content":"        String[] userInputArray \u003d userInput.split(\" \", 2);","lastModifiedDate":"2022-10-26"},{"lineNumber":95,"author":{"gitId":"santosh3007"},"content":"        String commandWord \u003d userInputArray[0];","lastModifiedDate":"2022-10-21"},{"lineNumber":96,"author":{"gitId":"santosh3007"},"content":"        String suggestedCommand \u003d \"\";","lastModifiedDate":"2022-10-21"},{"lineNumber":97,"author":{"gitId":"santosh3007"},"content":"        boolean isCommandComplete \u003d userInput.contains(\" \");","lastModifiedDate":"2022-10-27"},{"lineNumber":98,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":99,"author":{"gitId":"santosh3007"},"content":"        for (String command : commandList) {","lastModifiedDate":"2022-10-21"},{"lineNumber":100,"author":{"gitId":"santosh3007"},"content":"            if (command.startsWith(commandWord)) {","lastModifiedDate":"2022-10-21"},{"lineNumber":101,"author":{"gitId":"santosh3007"},"content":"                if (isCommandComplete \u0026\u0026 !command.equals(commandWord)) {","lastModifiedDate":"2022-10-27"},{"lineNumber":102,"author":{"gitId":"santosh3007"},"content":"                    continue;","lastModifiedDate":"2022-10-27"},{"lineNumber":103,"author":{"gitId":"santosh3007"},"content":"                }","lastModifiedDate":"2022-10-27"},{"lineNumber":104,"author":{"gitId":"santosh3007"},"content":"                suggestedCommand \u003d command;","lastModifiedDate":"2022-10-21"},{"lineNumber":105,"author":{"gitId":"santosh3007"},"content":"                break;","lastModifiedDate":"2022-10-21"},{"lineNumber":106,"author":{"gitId":"santosh3007"},"content":"            }","lastModifiedDate":"2022-10-21"},{"lineNumber":107,"author":{"gitId":"santosh3007"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":108,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":109,"author":{"gitId":"jasonqiu212"},"content":"        if (suggestedCommand.equals(\"\") \u0026\u0026 !commandWord.equals(\"\")) {","lastModifiedDate":"2022-10-26"},{"lineNumber":110,"author":{"gitId":"santosh3007"},"content":"            throw new CommandException(\"Invalid command\");","lastModifiedDate":"2022-10-21"},{"lineNumber":111,"author":{"gitId":"santosh3007"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":112,"author":{"gitId":"santosh3007"},"content":"        ArrayList\u003cPrefix\u003e argPrefixes \u003d argPrefixList.get(commandList.indexOf(suggestedCommand));","lastModifiedDate":"2022-10-26"},{"lineNumber":113,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":114,"author":{"gitId":"santosh3007"},"content":"        if (userInputArray.length \u003e 1) {","lastModifiedDate":"2022-10-21"},{"lineNumber":115,"author":{"gitId":"santosh3007"},"content":"            if (userInput.charAt(userInput.length() - 1) \u003d\u003d \u0027 \u0027) {","lastModifiedDate":"2022-11-06"},{"lineNumber":116,"author":{"gitId":"santosh3007"},"content":"                userInput \u003d userInput.substring(0, userInput.length() - 1);","lastModifiedDate":"2022-11-06"},{"lineNumber":117,"author":{"gitId":"santosh3007"},"content":"            }","lastModifiedDate":"2022-11-06"},{"lineNumber":118,"author":{"gitId":"santosh3007"},"content":"            return userInput + suggestArguments(argPrefixes, userInputArray[1]);","lastModifiedDate":"2022-11-06"},{"lineNumber":119,"author":{"gitId":"santosh3007"},"content":"        } else {","lastModifiedDate":"2022-10-21"},{"lineNumber":120,"author":{"gitId":"santosh3007"},"content":"            return suggestedCommand + suggestArguments(argPrefixes, \"\");","lastModifiedDate":"2022-10-26"},{"lineNumber":121,"author":{"gitId":"santosh3007"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":122,"author":{"gitId":"santosh3007"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":123,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":124,"author":{"gitId":"santosh3007"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":125,"author":{"gitId":"santosh3007"},"content":"     * Returns the new user input when user auto-completes the command.","lastModifiedDate":"2022-10-21"},{"lineNumber":126,"author":{"gitId":"santosh3007"},"content":"     *","lastModifiedDate":"2022-10-21"},{"lineNumber":127,"author":{"gitId":"santosh3007"},"content":"     * @param userInput Current User Input.","lastModifiedDate":"2022-10-21"},{"lineNumber":128,"author":{"gitId":"santosh3007"},"content":"     * @param commandSuggestion Current Command Suggestion","lastModifiedDate":"2022-10-21"},{"lineNumber":129,"author":{"gitId":"santosh3007"},"content":"     * @return New User Input.","lastModifiedDate":"2022-10-21"},{"lineNumber":130,"author":{"gitId":"santosh3007"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":131,"author":{"gitId":"santosh3007"},"content":"    public String autocompleteCommand(String userInput, String commandSuggestion) {","lastModifiedDate":"2022-10-21"},{"lineNumber":132,"author":{"gitId":"santosh3007"},"content":"        // Command suggested but not yet entered by user","lastModifiedDate":"2022-10-21"},{"lineNumber":133,"author":{"gitId":"santosh3007"},"content":"        String suggestedCommand \u003d commandSuggestion.substring(userInput.length());","lastModifiedDate":"2022-10-21"},{"lineNumber":134,"author":{"gitId":"santosh3007"},"content":"        boolean isCommandComplete \u003d userInput.contains(\" \");","lastModifiedDate":"2022-10-21"},{"lineNumber":135,"author":{"gitId":"santosh3007"},"content":"        int autocompleteUptoIndex;","lastModifiedDate":"2022-10-28"},{"lineNumber":136,"author":{"gitId":"santosh3007"},"content":"        if (isCommandComplete) {","lastModifiedDate":"2022-10-28"},{"lineNumber":137,"author":{"gitId":"santosh3007"},"content":"            autocompleteUptoIndex \u003d suggestedCommand.indexOf(isCommandComplete ? \"/\" : \" \") + 1;","lastModifiedDate":"2022-10-28"},{"lineNumber":138,"author":{"gitId":"santosh3007"},"content":"        } else {","lastModifiedDate":"2022-10-28"},{"lineNumber":139,"author":{"gitId":"santosh3007"},"content":"            return getLongestMatchingPrefixSuggestion(userInput);","lastModifiedDate":"2022-10-28"},{"lineNumber":140,"author":{"gitId":"santosh3007"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":141,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":142,"author":{"gitId":"santosh3007"},"content":"        // If command has no prefix arguments","lastModifiedDate":"2022-10-26"},{"lineNumber":143,"author":{"gitId":"santosh3007"},"content":"        if (autocompleteUptoIndex \u003d\u003d 0) {","lastModifiedDate":"2022-10-26"},{"lineNumber":144,"author":{"gitId":"santosh3007"},"content":"            autocompleteUptoIndex \u003d suggestedCommand.length();","lastModifiedDate":"2022-10-26"},{"lineNumber":145,"author":{"gitId":"santosh3007"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":146,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":147,"author":{"gitId":"santosh3007"},"content":"        String autocompletedCommand \u003d suggestedCommand.substring(0, autocompleteUptoIndex);","lastModifiedDate":"2022-11-06"},{"lineNumber":148,"author":{"gitId":"santosh3007"},"content":"        if (!autocompletedCommand.contains(\"\u003c\")) {","lastModifiedDate":"2022-11-06"},{"lineNumber":149,"author":{"gitId":"santosh3007"},"content":"            userInput \u003d userInput + autocompletedCommand;","lastModifiedDate":"2022-11-06"},{"lineNumber":150,"author":{"gitId":"santosh3007"},"content":"        }","lastModifiedDate":"2022-11-06"},{"lineNumber":151,"author":{"gitId":"santosh3007"},"content":"        return userInput;","lastModifiedDate":"2022-10-21"},{"lineNumber":152,"author":{"gitId":"santosh3007"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":153,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":154,"author":{"gitId":"santosh3007"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":155,"author":{"gitId":"santosh3007"},"content":"     * Suggests prompts for arguments based on the user input.","lastModifiedDate":"2022-10-21"},{"lineNumber":156,"author":{"gitId":"santosh3007"},"content":"     *","lastModifiedDate":"2022-10-21"},{"lineNumber":157,"author":{"gitId":"santosh3007"},"content":"     * @param argPrefixes Argument prefixes for specified command.","lastModifiedDate":"2022-10-26"},{"lineNumber":158,"author":{"gitId":"santosh3007"},"content":"     * @param userInput Current user input.","lastModifiedDate":"2022-10-21"},{"lineNumber":159,"author":{"gitId":"santosh3007"},"content":"     * @return Suggested arguments.","lastModifiedDate":"2022-10-21"},{"lineNumber":160,"author":{"gitId":"santosh3007"},"content":"     * @throws CommandException If the user input is invalid.","lastModifiedDate":"2022-10-21"},{"lineNumber":161,"author":{"gitId":"santosh3007"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":162,"author":{"gitId":"santosh3007"},"content":"    public String suggestArguments(","lastModifiedDate":"2022-10-26"},{"lineNumber":163,"author":{"gitId":"santosh3007"},"content":"            ArrayList\u003cPrefix\u003e argPrefixes, String userInput) throws CommandException {","lastModifiedDate":"2022-10-26"},{"lineNumber":164,"author":{"gitId":"santosh3007"},"content":"        ArgumentMultimap argumentMultimap \u003d","lastModifiedDate":"2022-10-26"},{"lineNumber":165,"author":{"gitId":"santosh3007"},"content":"                ArgumentTokenizer.tokenize(\" \" + userInput, argPrefixes.toArray(new Prefix[] {}));","lastModifiedDate":"2022-10-26"},{"lineNumber":166,"author":{"gitId":"santosh3007"},"content":"        String argumentSuggestion \u003d \"\";","lastModifiedDate":"2022-10-21"},{"lineNumber":167,"author":{"gitId":"santosh3007"},"content":"        String[] userInputArray \u003d userInput.trim().split(\" \");","lastModifiedDate":"2022-11-06"},{"lineNumber":168,"author":{"gitId":"santosh3007"},"content":"        Prefix currPrefix \u003d null;","lastModifiedDate":"2022-10-21"},{"lineNumber":169,"author":{"gitId":"santosh3007"},"content":"        boolean isIndexRequired \u003d argPrefixes.contains(new Prefix(\"\"));","lastModifiedDate":"2022-10-26"},{"lineNumber":170,"author":{"gitId":"santosh3007"},"content":"        boolean hasKeyword \u003d argPrefixes.contains(PREFIX_KEYWORD);","lastModifiedDate":"2022-10-27"},{"lineNumber":171,"author":{"gitId":"santosh3007"},"content":"        boolean hasPrefix \u003d (!userInput.isEmpty() \u0026\u0026 (!isIndexRequired || userInputArray.length \u003e 1));","lastModifiedDate":"2022-10-27"},{"lineNumber":172,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":173,"author":{"gitId":"santosh3007"},"content":"        // Check if user input for index is valid (only if required)","lastModifiedDate":"2022-10-26"},{"lineNumber":174,"author":{"gitId":"santosh3007"},"content":"        if (isIndexRequired) {","lastModifiedDate":"2022-10-26"},{"lineNumber":175,"author":{"gitId":"santosh3007"},"content":"            if (userInputArray[0].equals(\"\")) {","lastModifiedDate":"2022-10-26"},{"lineNumber":176,"author":{"gitId":"santosh3007"},"content":"                argumentSuggestion +\u003d \" \" + argPrefixes.get(0).getUserPrompt();","lastModifiedDate":"2022-10-26"},{"lineNumber":177,"author":{"gitId":"santosh3007"},"content":"            } else {","lastModifiedDate":"2022-10-26"},{"lineNumber":178,"author":{"gitId":"santosh3007"},"content":"                if (!userInputArray[0].matches(\"-?\\\\d+(\\\\.\\\\d+)?\")) {","lastModifiedDate":"2022-10-26"},{"lineNumber":179,"author":{"gitId":"santosh3007"},"content":"                    throw new CommandException(\"Invalid index\");","lastModifiedDate":"2022-10-26"},{"lineNumber":180,"author":{"gitId":"santosh3007"},"content":"                }","lastModifiedDate":"2022-10-26"},{"lineNumber":181,"author":{"gitId":"santosh3007"},"content":"            }","lastModifiedDate":"2022-10-26"},{"lineNumber":182,"author":{"gitId":"santosh3007"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":183,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":184,"author":{"gitId":"santosh3007"},"content":"        if (hasKeyword) {","lastModifiedDate":"2022-10-27"},{"lineNumber":185,"author":{"gitId":"santosh3007"},"content":"            // Check if user input contains keyword","lastModifiedDate":"2022-10-27"},{"lineNumber":186,"author":{"gitId":"santosh3007"},"content":"            if (userInput.equals(\"\")) {","lastModifiedDate":"2022-10-27"},{"lineNumber":187,"author":{"gitId":"santosh3007"},"content":"                argumentSuggestion +\u003d \" \" + argPrefixes.get(0).getUserPrompt();","lastModifiedDate":"2022-10-27"},{"lineNumber":188,"author":{"gitId":"santosh3007"},"content":"            }","lastModifiedDate":"2022-10-27"},{"lineNumber":189,"author":{"gitId":"santosh3007"},"content":"            argumentMultimap.put(PREFIX_KEYWORD, \"\");","lastModifiedDate":"2022-10-27"},{"lineNumber":190,"author":{"gitId":"santosh3007"},"content":"        } else if (hasPrefix \u0026\u0026 !userInputArray[userInputArray.length - 1].contains(\"/\")) {","lastModifiedDate":"2022-10-27"},{"lineNumber":191,"author":{"gitId":"santosh3007"},"content":"            // Check if user is trying to autocomplete a prefix","lastModifiedDate":"2022-10-21"},{"lineNumber":192,"author":{"gitId":"santosh3007"},"content":"            currPrefix \u003d new Prefix(userInputArray[userInputArray.length - 1] + \"/\");","lastModifiedDate":"2022-10-21"},{"lineNumber":193,"author":{"gitId":"santosh3007"},"content":"            argumentMultimap.put(currPrefix, \"\");","lastModifiedDate":"2022-10-21"},{"lineNumber":194,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":195,"author":{"gitId":"santosh3007"},"content":"            if (argPrefixes.contains(currPrefix)) {","lastModifiedDate":"2022-10-26"},{"lineNumber":196,"author":{"gitId":"santosh3007"},"content":"                argumentSuggestion +\u003d \"/ \";","lastModifiedDate":"2022-10-26"},{"lineNumber":197,"author":{"gitId":"santosh3007"},"content":"            } else if (!userInput.contains(\"/\")) {","lastModifiedDate":"2022-10-26"},{"lineNumber":198,"author":{"gitId":"santosh3007"},"content":"                throw new CommandException(\"Invalid prefix\");","lastModifiedDate":"2022-10-21"},{"lineNumber":199,"author":{"gitId":"santosh3007"},"content":"            }","lastModifiedDate":"2022-10-21"},{"lineNumber":200,"author":{"gitId":"santosh3007"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":201,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":202,"author":{"gitId":"santosh3007"},"content":"        for (Prefix prefix : argPrefixes) {","lastModifiedDate":"2022-10-27"},{"lineNumber":203,"author":{"gitId":"santosh3007"},"content":"            if (argumentMultimap.getValue(prefix).isEmpty()) {","lastModifiedDate":"2022-10-27"},{"lineNumber":204,"author":{"gitId":"santosh3007"},"content":"                argumentSuggestion +\u003d \" \" + prefix + prefix.getUserPrompt();","lastModifiedDate":"2022-10-27"},{"lineNumber":205,"author":{"gitId":"santosh3007"},"content":"            }","lastModifiedDate":"2022-10-21"},{"lineNumber":206,"author":{"gitId":"santosh3007"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":207,"author":{"gitId":"santosh3007"},"content":"        return argumentSuggestion;","lastModifiedDate":"2022-10-21"},{"lineNumber":208,"author":{"gitId":"santosh3007"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":209,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":210,"author":{"gitId":"santosh3007"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":211,"author":{"gitId":"santosh3007"},"content":"     * Gets the longest matching prefix from all possible command suggestions depending on the user","lastModifiedDate":"2022-10-28"},{"lineNumber":212,"author":{"gitId":"santosh3007"},"content":"     * input.","lastModifiedDate":"2022-10-28"},{"lineNumber":213,"author":{"gitId":"santosh3007"},"content":"     *","lastModifiedDate":"2022-10-28"},{"lineNumber":214,"author":{"gitId":"santosh3007"},"content":"     * @param userInput User input.","lastModifiedDate":"2022-10-28"},{"lineNumber":215,"author":{"gitId":"santosh3007"},"content":"     * @return Longest matching prefix.","lastModifiedDate":"2022-10-28"},{"lineNumber":216,"author":{"gitId":"santosh3007"},"content":"     * @throws CommandException If the user input is invalid.","lastModifiedDate":"2022-10-28"},{"lineNumber":217,"author":{"gitId":"santosh3007"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":218,"author":{"gitId":"santosh3007"},"content":"    public String getLongestMatchingPrefixSuggestion(String userInput) {","lastModifiedDate":"2022-10-28"},{"lineNumber":219,"author":{"gitId":"santosh3007"},"content":"        assert userInput !\u003d null \u0026\u0026 !userInput.isEmpty();","lastModifiedDate":"2022-10-28"},{"lineNumber":220,"author":{"gitId":"santosh3007"},"content":"        String[] userInputArray \u003d userInput.split(\" \", 2);","lastModifiedDate":"2022-10-28"},{"lineNumber":221,"author":{"gitId":"santosh3007"},"content":"        String commandWord \u003d userInputArray[0];","lastModifiedDate":"2022-10-28"},{"lineNumber":222,"author":{"gitId":"santosh3007"},"content":"        boolean isCommandComplete \u003d userInput.contains(\" \");","lastModifiedDate":"2022-10-28"},{"lineNumber":223,"author":{"gitId":"santosh3007"},"content":"        ArrayList\u003cString\u003e matchingCommands \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-28"},{"lineNumber":224,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":225,"author":{"gitId":"santosh3007"},"content":"        for (String command : commandList) {","lastModifiedDate":"2022-10-28"},{"lineNumber":226,"author":{"gitId":"santosh3007"},"content":"            if (command.startsWith(commandWord)) {","lastModifiedDate":"2022-10-28"},{"lineNumber":227,"author":{"gitId":"santosh3007"},"content":"                if (isCommandComplete \u0026\u0026 !command.equals(commandWord)) {","lastModifiedDate":"2022-10-28"},{"lineNumber":228,"author":{"gitId":"santosh3007"},"content":"                    continue;","lastModifiedDate":"2022-10-28"},{"lineNumber":229,"author":{"gitId":"santosh3007"},"content":"                }","lastModifiedDate":"2022-10-28"},{"lineNumber":230,"author":{"gitId":"santosh3007"},"content":"                matchingCommands.add(command + \" \");","lastModifiedDate":"2022-10-28"},{"lineNumber":231,"author":{"gitId":"santosh3007"},"content":"            }","lastModifiedDate":"2022-10-28"},{"lineNumber":232,"author":{"gitId":"santosh3007"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":233,"author":{"gitId":"santosh3007"},"content":"        return getLongestMatchingPrefix(matchingCommands);","lastModifiedDate":"2022-10-28"},{"lineNumber":234,"author":{"gitId":"santosh3007"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":235,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":236,"author":{"gitId":"santosh3007"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":237,"author":{"gitId":"santosh3007"},"content":"     * Gets longest matching prefix from list of strings.","lastModifiedDate":"2022-10-28"},{"lineNumber":238,"author":{"gitId":"santosh3007"},"content":"     *","lastModifiedDate":"2022-10-28"},{"lineNumber":239,"author":{"gitId":"santosh3007"},"content":"     * @param matchingCommands List of strings.","lastModifiedDate":"2022-10-28"},{"lineNumber":240,"author":{"gitId":"santosh3007"},"content":"     * @return Longest matching prefix.","lastModifiedDate":"2022-10-28"},{"lineNumber":241,"author":{"gitId":"santosh3007"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":242,"author":{"gitId":"santosh3007"},"content":"    public String getLongestMatchingPrefix(ArrayList\u003cString\u003e matchingCommands) {","lastModifiedDate":"2022-10-28"},{"lineNumber":243,"author":{"gitId":"santosh3007"},"content":"        Collections.sort(matchingCommands);","lastModifiedDate":"2022-10-28"},{"lineNumber":244,"author":{"gitId":"santosh3007"},"content":"        int size \u003d matchingCommands.size();","lastModifiedDate":"2022-10-28"},{"lineNumber":245,"author":{"gitId":"santosh3007"},"content":"        if (size \u003d\u003d 0) {","lastModifiedDate":"2022-10-28"},{"lineNumber":246,"author":{"gitId":"santosh3007"},"content":"            return \"\";","lastModifiedDate":"2022-10-28"},{"lineNumber":247,"author":{"gitId":"santosh3007"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":248,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":249,"author":{"gitId":"santosh3007"},"content":"        if (size \u003d\u003d 1) {","lastModifiedDate":"2022-10-28"},{"lineNumber":250,"author":{"gitId":"santosh3007"},"content":"            return matchingCommands.get(0);","lastModifiedDate":"2022-10-28"},{"lineNumber":251,"author":{"gitId":"santosh3007"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":252,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":253,"author":{"gitId":"santosh3007"},"content":"        // find the minimum length from first and last string","lastModifiedDate":"2022-10-28"},{"lineNumber":254,"author":{"gitId":"santosh3007"},"content":"        int end \u003d","lastModifiedDate":"2022-10-28"},{"lineNumber":255,"author":{"gitId":"santosh3007"},"content":"                Math.min(matchingCommands.get(0).length(), matchingCommands.get(size - 1).length());","lastModifiedDate":"2022-10-28"},{"lineNumber":256,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":257,"author":{"gitId":"santosh3007"},"content":"        // find the common prefix between the first and last string","lastModifiedDate":"2022-10-28"},{"lineNumber":258,"author":{"gitId":"santosh3007"},"content":"        int i \u003d 0;","lastModifiedDate":"2022-10-28"},{"lineNumber":259,"author":{"gitId":"santosh3007"},"content":"        while (i \u003c end","lastModifiedDate":"2022-10-28"},{"lineNumber":260,"author":{"gitId":"santosh3007"},"content":"                \u0026\u0026 matchingCommands.get(0).charAt(i) \u003d\u003d matchingCommands.get(size - 1).charAt(i)) {","lastModifiedDate":"2022-10-28"},{"lineNumber":261,"author":{"gitId":"santosh3007"},"content":"            i++;","lastModifiedDate":"2022-10-28"},{"lineNumber":262,"author":{"gitId":"santosh3007"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":263,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":264,"author":{"gitId":"santosh3007"},"content":"        String prefix \u003d matchingCommands.get(0).substring(0, i);","lastModifiedDate":"2022-10-28"},{"lineNumber":265,"author":{"gitId":"santosh3007"},"content":"        return prefix;","lastModifiedDate":"2022-10-28"},{"lineNumber":266,"author":{"gitId":"santosh3007"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":267,"author":{"gitId":"santosh3007"},"content":"}","lastModifiedDate":"2022-10-21"}],"authorContributionMap":{"jasonqiu212":2,"ShenyiCui":3,"santosh3007":260,"peppapighs":2}},{"path":"src/main/java/swift/logic/commands/CommandType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yunruu"},"content":"package swift.logic.commands;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":3,"author":{"gitId":"yunruu"},"content":"/**","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"yunruu"},"content":" * Enum of the type of commands that can be input into the command box.","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"yunruu"},"content":" */","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"yunruu"},"content":"public enum CommandType {","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"yunruu"},"content":"    HELP,","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"yunruu"},"content":"    EXIT,","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"yunruu"},"content":"    CONTACTS,","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"yunruu"},"content":"    TASKS,","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"yunruu"},"content":"    CLEAR,","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"yunruu"},"content":"    SELECT_TASK,","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"santosh3007"},"content":"    SELECT_CONTACT,","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"ShenyiCui"},"content":"    ASSIGN,","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"ShenyiCui"},"content":"    UNASSIGN","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"yunruu"},"content":"}","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"ShenyiCui":2,"santosh3007":1,"yunruu":13}},{"path":"src/main/java/swift/logic/commands/DeleteContactCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.logic.commands;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"santosh3007"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"peppapighs"},"content":"import swift.commons.core.Messages;","lastModifiedDate":"2022-10-01"},{"lineNumber":9,"author":{"gitId":"peppapighs"},"content":"import swift.commons.core.index.Index;","lastModifiedDate":"2022-10-01"},{"lineNumber":10,"author":{"gitId":"peppapighs"},"content":"import swift.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-01"},{"lineNumber":11,"author":{"gitId":"santosh3007"},"content":"import swift.logic.parser.Prefix;","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"peppapighs"},"content":"import swift.model.Model;","lastModifiedDate":"2022-10-01"},{"lineNumber":13,"author":{"gitId":"peppapighs"},"content":"import swift.model.person.Person;","lastModifiedDate":"2022-10-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"jasonqiu212"},"content":"public class DeleteContactCommand extends Command {","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"jasonqiu212"},"content":"    public static final String COMMAND_WORD \u003d \"delete_contact\";","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"santosh3007"},"content":"    public static final ArrayList\u003cPrefix\u003e ARGUMENT_PREFIXES \u003d new ArrayList\u003c\u003e(List.of(new Prefix(\"\", \"contact_index\")));","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"peppapighs"},"content":"            + \": Deletes the contact identified by the index number used in the displayed contact list.\\n\"","lastModifiedDate":"2022-11-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"peppapighs"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Contact: %1$s\";","lastModifiedDate":"2022-11-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"jasonqiu212"},"content":"    public DeleteContactCommand(Index targetIndex) {","lastModifiedDate":"2022-10-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"yunruu"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, personToDelete), CommandType.CONTACTS);","lastModifiedDate":"2022-10-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"jasonqiu212"},"content":"                || (other instanceof DeleteContactCommand // instanceof handles nulls","lastModifiedDate":"2022-10-21"},{"lineNumber":54,"author":{"gitId":"jasonqiu212"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteContactCommand) other).targetIndex)); // state check","lastModifiedDate":"2022-10-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jasonqiu212":5,"santosh3007":3,"peppapighs":8,"-":39,"yunruu":1}},{"path":"src/main/java/swift/logic/commands/DeleteTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ShenyiCui"},"content":"package swift.logic.commands;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"ShenyiCui"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"santosh3007"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"ShenyiCui"},"content":"import java.util.List;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"ShenyiCui"},"content":"import swift.commons.core.Messages;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"ShenyiCui"},"content":"import swift.commons.core.index.Index;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"ShenyiCui"},"content":"import swift.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"santosh3007"},"content":"import swift.logic.parser.Prefix;","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"ShenyiCui"},"content":"import swift.model.Model;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"ShenyiCui"},"content":"import swift.model.task.Task;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"ShenyiCui"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"ShenyiCui"},"content":" * Deletes a task identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"ShenyiCui"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"ShenyiCui"},"content":"public class DeleteTaskCommand extends Command {","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"ShenyiCui"},"content":"    public static final String COMMAND_WORD \u003d \"delete_task\";","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"santosh3007"},"content":"    public static final ArrayList\u003cPrefix\u003e ARGUMENT_PREFIXES \u003d new ArrayList\u003c\u003e(","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"santosh3007"},"content":"            List.of(new Prefix(\"\", \"task_index\")));","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"ShenyiCui"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"ShenyiCui"},"content":"            + \": Deletes the task identified by the index number used in the displayed task list.\\n\"","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"ShenyiCui"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"ShenyiCui"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"ShenyiCui"},"content":"    public static final String MESSAGE_DELETE_TASK_SUCCESS \u003d \"Deleted task: %1$s\";","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"ShenyiCui"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"ShenyiCui"},"content":"    public DeleteTaskCommand(Index targetIndex) {","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"ShenyiCui"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"ShenyiCui"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"ShenyiCui"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"ShenyiCui"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"ShenyiCui"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"ShenyiCui"},"content":"        List\u003cTask\u003e lastShownList \u003d model.getFilteredTaskList();","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"ShenyiCui"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"ShenyiCui"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"ShenyiCui"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"ShenyiCui"},"content":"        Task taskToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"ShenyiCui"},"content":"        model.deleteTask(taskToDelete);","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"yunruu"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_TASK_SUCCESS, taskToDelete), CommandType.TASKS);","lastModifiedDate":"2022-10-27"},{"lineNumber":49,"author":{"gitId":"ShenyiCui"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"ShenyiCui"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"ShenyiCui"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"ShenyiCui"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"ShenyiCui"},"content":"                || (other instanceof DeleteTaskCommand // instanceof handles nulls","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"ShenyiCui"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteTaskCommand) other).targetIndex)); // state check","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"ShenyiCui"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"ShenyiCui"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"ShenyiCui":52,"santosh3007":4,"yunruu":1}},{"path":"src/main/java/swift/logic/commands/EditContactCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.logic.commands;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-10-01"},{"lineNumber":5,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-01"},{"lineNumber":6,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-01"},{"lineNumber":7,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-01"},{"lineNumber":8,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-01"},{"lineNumber":9,"author":{"gitId":"ShenyiCui"},"content":"import static swift.model.Model.PREDICATE_SHOW_ALL_PEOPLE;","lastModifiedDate":"2022-10-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"santosh3007"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":17,"author":{"gitId":"peppapighs"},"content":"import java.util.UUID;","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":19,"author":{"gitId":"peppapighs"},"content":"import swift.commons.core.Messages;","lastModifiedDate":"2022-10-01"},{"lineNumber":20,"author":{"gitId":"peppapighs"},"content":"import swift.commons.core.index.Index;","lastModifiedDate":"2022-10-01"},{"lineNumber":21,"author":{"gitId":"peppapighs"},"content":"import swift.commons.util.CollectionUtil;","lastModifiedDate":"2022-10-01"},{"lineNumber":22,"author":{"gitId":"peppapighs"},"content":"import swift.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-01"},{"lineNumber":23,"author":{"gitId":"santosh3007"},"content":"import swift.logic.parser.Prefix;","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"peppapighs"},"content":"import swift.model.Model;","lastModifiedDate":"2022-10-01"},{"lineNumber":25,"author":{"gitId":"peppapighs"},"content":"import swift.model.person.Address;","lastModifiedDate":"2022-10-01"},{"lineNumber":26,"author":{"gitId":"peppapighs"},"content":"import swift.model.person.Email;","lastModifiedDate":"2022-10-01"},{"lineNumber":27,"author":{"gitId":"peppapighs"},"content":"import swift.model.person.Person;","lastModifiedDate":"2022-10-01"},{"lineNumber":28,"author":{"gitId":"jasonqiu212"},"content":"import swift.model.person.PersonName;","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"peppapighs"},"content":"import swift.model.person.Phone;","lastModifiedDate":"2022-10-01"},{"lineNumber":30,"author":{"gitId":"peppapighs"},"content":"import swift.model.tag.Tag;","lastModifiedDate":"2022-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"yunruu"},"content":"public class EditContactCommand extends Command {","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"yunruu"},"content":"    public static final String COMMAND_WORD \u003d \"edit_contact\";","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"santosh3007"},"content":"    public static final ArrayList\u003cPrefix\u003e ARGUMENT_PREFIXES \u003d new ArrayList\u003c\u003e(","lastModifiedDate":"2022-10-26"},{"lineNumber":39,"author":{"gitId":"santosh3007"},"content":"        List.of(new Prefix(\"\", \"contact_index\"), PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_TAG));","lastModifiedDate":"2022-10-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"peppapighs"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the contact identified \"","lastModifiedDate":"2022-11-05"},{"lineNumber":42,"author":{"gitId":"peppapighs"},"content":"            + \"by the index number used in the displayed contact list. \"","lastModifiedDate":"2022-11-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":54,"author":{"gitId":"peppapighs"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Contact: %1$s\";","lastModifiedDate":"2022-11-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"peppapighs"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This contact already exists in the address book.\";","lastModifiedDate":"2022-11-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":65,"author":{"gitId":"yunruu"},"content":"    public EditContactCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":90,"author":{"gitId":"ShenyiCui"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PEOPLE);","lastModifiedDate":"2022-10-23"},{"lineNumber":91,"author":{"gitId":"yunruu"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson), CommandType.CONTACTS);","lastModifiedDate":"2022-10-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":101,"author":{"gitId":"peppapighs"},"content":"        UUID updatedId \u003d personToEdit.getId();","lastModifiedDate":"2022-10-15"},{"lineNumber":102,"author":{"gitId":"jasonqiu212"},"content":"        PersonName updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2022-10-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":108,"author":{"gitId":"peppapighs"},"content":"        return new Person(updatedId, updatedName, updatedPhone, updatedEmail, updatedAddress, updatedTags);","lastModifiedDate":"2022-10-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"yunruu"},"content":"        if (!(other instanceof EditContactCommand)) {","lastModifiedDate":"2022-10-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":124,"author":{"gitId":"yunruu"},"content":"        EditContactCommand e \u003d (EditContactCommand) other;","lastModifiedDate":"2022-10-10"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":134,"author":{"gitId":"jasonqiu212"},"content":"        private PersonName name;","lastModifiedDate":"2022-10-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":143,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":144,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":145,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags);","lastModifiedDate":"2018-08-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":161,"author":{"gitId":"jasonqiu212"},"content":"        public void setName(PersonName name) {","lastModifiedDate":"2022-10-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"jasonqiu212"},"content":"        public Optional\u003cPersonName\u003e getName() {","lastModifiedDate":"2022-10-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":194,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":195,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":196,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":202,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":203,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":204,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":205,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":214,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":219,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":225,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":226,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":227,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":228,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":229,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":232,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"ShenyiCui":2,"jasonqiu212":5,"santosh3007":4,"peppapighs":23,"-":192,"yunruu":6}},{"path":"src/main/java/swift/logic/commands/EditTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"santosh3007"},"content":"package swift.logic.commands;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"santosh3007"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"jasonqiu212"},"content":"import static swift.logic.parser.CliSyntax.PREFIX_DEADLINE;","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"jasonqiu212"},"content":"import static swift.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"santosh3007"},"content":"import static swift.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"santosh3007"},"content":"import static swift.model.Model.PREDICATE_SHOW_ALL_TASKS;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"santosh3007"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"santosh3007"},"content":"import java.util.List;","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"santosh3007"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"peppapighs"},"content":"import java.util.UUID;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"santosh3007"},"content":"import swift.commons.core.Messages;","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"santosh3007"},"content":"import swift.commons.core.index.Index;","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"santosh3007"},"content":"import swift.commons.util.CollectionUtil;","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"santosh3007"},"content":"import swift.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"santosh3007"},"content":"import swift.logic.parser.Prefix;","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"santosh3007"},"content":"import swift.model.Model;","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"jasonqiu212"},"content":"import swift.model.task.Deadline;","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"jasonqiu212"},"content":"import swift.model.task.Description;","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"santosh3007"},"content":"import swift.model.task.Task;","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"santosh3007"},"content":"import swift.model.task.TaskName;","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"santosh3007"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"santosh3007"},"content":" * Edits the details of an existing task in the address book.","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"santosh3007"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"santosh3007"},"content":"public class EditTaskCommand extends Command {","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"santosh3007"},"content":"    public static final String COMMAND_WORD \u003d \"edit_task\";","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"santosh3007"},"content":"    public static final ArrayList\u003cPrefix\u003e ARGUMENT_PREFIXES \u003d","lastModifiedDate":"2022-10-26"},{"lineNumber":32,"author":{"gitId":"santosh3007"},"content":"            new ArrayList\u003c\u003e(List.of(new Prefix(\"\", \"task_index\"), PREFIX_NAME, PREFIX_DESCRIPTION, PREFIX_DEADLINE));","lastModifiedDate":"2022-10-26"},{"lineNumber":33,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"santosh3007"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the task identified \"","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"santosh3007"},"content":"        + \"by the index number used in the displayed task list. \"","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"santosh3007"},"content":"        + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"santosh3007"},"content":"        + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"santosh3007"},"content":"        + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"jasonqiu212"},"content":"        + \"[\" + PREFIX_DESCRIPTION + \"DESCRIPTION] \"","lastModifiedDate":"2022-10-26"},{"lineNumber":40,"author":{"gitId":"jasonqiu212"},"content":"        + \"[\" + PREFIX_DEADLINE + \"DEADLINE] (must be in dd-MM-yyyy HHmm format)\\n\"","lastModifiedDate":"2022-10-27"},{"lineNumber":41,"author":{"gitId":"santosh3007"},"content":"        + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"santosh3007"},"content":"        + PREFIX_NAME + \"Finish Assignment \"","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"jasonqiu212"},"content":"        + PREFIX_DESCRIPTION + \"CS1231 \"","lastModifiedDate":"2022-10-27"},{"lineNumber":44,"author":{"gitId":"jasonqiu212"},"content":"        + PREFIX_DEADLINE + \"12-12-2022 1800\";","lastModifiedDate":"2022-10-27"},{"lineNumber":45,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"santosh3007"},"content":"    public static final String MESSAGE_EDIT_TASK_SUCCESS \u003d \"Edited Task: %1$s\";","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"santosh3007"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"santosh3007"},"content":"    public static final String MESSAGE_DUPLICATE_TASK \u003d \"This task already exists in the address book.\";","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"santosh3007"},"content":"    private final Index index;","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"santosh3007"},"content":"    private final EditTaskDescriptor editTaskDescriptor;","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"santosh3007"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"santosh3007"},"content":"    * @param index of the task in the filtered task list to edit","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"santosh3007"},"content":"    * @param editTaskDescriptor details to edit the task with","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"santosh3007"},"content":"    */","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"santosh3007"},"content":"    public EditTaskCommand(Index index, EditTaskDescriptor editTaskDescriptor) {","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"santosh3007"},"content":"        requireNonNull(index);","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"santosh3007"},"content":"        requireNonNull(editTaskDescriptor);","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"santosh3007"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"santosh3007"},"content":"        this.editTaskDescriptor \u003d new EditTaskDescriptor(editTaskDescriptor);","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"santosh3007"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"santosh3007"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"santosh3007"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-12"},{"lineNumber":67,"author":{"gitId":"santosh3007"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-12"},{"lineNumber":68,"author":{"gitId":"santosh3007"},"content":"        List\u003cTask\u003e lastShownList \u003d model.getFilteredTaskList();","lastModifiedDate":"2022-10-12"},{"lineNumber":69,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"santosh3007"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-12"},{"lineNumber":71,"author":{"gitId":"santosh3007"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-12"},{"lineNumber":72,"author":{"gitId":"santosh3007"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":73,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":74,"author":{"gitId":"santosh3007"},"content":"        Task taskToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-10-12"},{"lineNumber":75,"author":{"gitId":"santosh3007"},"content":"        Task editedTask \u003d createEditedTask(taskToEdit, editTaskDescriptor);","lastModifiedDate":"2022-10-12"},{"lineNumber":76,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":77,"author":{"gitId":"santosh3007"},"content":"        if (!taskToEdit.equals(editedTask) \u0026\u0026 model.hasTask(editedTask)) {","lastModifiedDate":"2022-10-12"},{"lineNumber":78,"author":{"gitId":"santosh3007"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2022-10-12"},{"lineNumber":79,"author":{"gitId":"santosh3007"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":80,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":81,"author":{"gitId":"santosh3007"},"content":"        model.setTask(taskToEdit, editedTask);","lastModifiedDate":"2022-10-12"},{"lineNumber":82,"author":{"gitId":"santosh3007"},"content":"        model.updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2022-10-12"},{"lineNumber":83,"author":{"gitId":"yunruu"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_TASK_SUCCESS, editedTask), CommandType.TASKS);","lastModifiedDate":"2022-10-27"},{"lineNumber":84,"author":{"gitId":"santosh3007"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":85,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":86,"author":{"gitId":"santosh3007"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":87,"author":{"gitId":"santosh3007"},"content":"    * Creates and returns a {@code Task} with the details of {@code taskToEdit}","lastModifiedDate":"2022-10-12"},{"lineNumber":88,"author":{"gitId":"santosh3007"},"content":"    * edited with {@code editTaskDescriptor}.","lastModifiedDate":"2022-10-12"},{"lineNumber":89,"author":{"gitId":"santosh3007"},"content":"    */","lastModifiedDate":"2022-10-12"},{"lineNumber":90,"author":{"gitId":"santosh3007"},"content":"    public static Task createEditedTask(Task taskToEdit, EditTaskDescriptor editTaskDescriptor) {","lastModifiedDate":"2022-10-27"},{"lineNumber":91,"author":{"gitId":"santosh3007"},"content":"        assert taskToEdit !\u003d null;","lastModifiedDate":"2022-10-12"},{"lineNumber":92,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":93,"author":{"gitId":"peppapighs"},"content":"        UUID updatedId \u003d taskToEdit.getId();","lastModifiedDate":"2022-10-15"},{"lineNumber":94,"author":{"gitId":"jasonqiu212"},"content":"        TaskName updatedTaskName \u003d editTaskDescriptor.getTaskName().orElse(taskToEdit.getName());","lastModifiedDate":"2022-10-24"},{"lineNumber":95,"author":{"gitId":"jasonqiu212"},"content":"        Optional\u003cDescription\u003e updatedDescription \u003d editTaskDescriptor.getDescription().or(taskToEdit::getDescription);","lastModifiedDate":"2022-10-26"},{"lineNumber":96,"author":{"gitId":"jasonqiu212"},"content":"        Optional\u003cDeadline\u003e updatedDeadline \u003d editTaskDescriptor.getDeadline().or(taskToEdit::getDeadline);","lastModifiedDate":"2022-10-26"},{"lineNumber":97,"author":{"gitId":"santosh3007"},"content":"        boolean updatedisDone \u003d editTaskDescriptor.isDone().orElse(taskToEdit.isDone());","lastModifiedDate":"2022-10-27"},{"lineNumber":98,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":99,"author":{"gitId":"santosh3007"},"content":"        return new Task(updatedId, updatedTaskName, updatedDescription, updatedDeadline, updatedisDone);","lastModifiedDate":"2022-10-27"},{"lineNumber":100,"author":{"gitId":"santosh3007"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":101,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":102,"author":{"gitId":"santosh3007"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":103,"author":{"gitId":"santosh3007"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-12"},{"lineNumber":104,"author":{"gitId":"santosh3007"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-12"},{"lineNumber":105,"author":{"gitId":"santosh3007"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-12"},{"lineNumber":106,"author":{"gitId":"santosh3007"},"content":"            return true;","lastModifiedDate":"2022-10-12"},{"lineNumber":107,"author":{"gitId":"santosh3007"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":108,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":109,"author":{"gitId":"santosh3007"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-12"},{"lineNumber":110,"author":{"gitId":"santosh3007"},"content":"        if (!(other instanceof EditTaskCommand)) {","lastModifiedDate":"2022-10-12"},{"lineNumber":111,"author":{"gitId":"santosh3007"},"content":"            return false;","lastModifiedDate":"2022-10-12"},{"lineNumber":112,"author":{"gitId":"santosh3007"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":113,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":114,"author":{"gitId":"santosh3007"},"content":"        // state check","lastModifiedDate":"2022-10-12"},{"lineNumber":115,"author":{"gitId":"santosh3007"},"content":"        EditTaskCommand e \u003d (EditTaskCommand) other;","lastModifiedDate":"2022-10-12"},{"lineNumber":116,"author":{"gitId":"santosh3007"},"content":"        return index.equals(e.index)","lastModifiedDate":"2022-10-12"},{"lineNumber":117,"author":{"gitId":"santosh3007"},"content":"            \u0026\u0026 editTaskDescriptor.equals(e.editTaskDescriptor);","lastModifiedDate":"2022-10-12"},{"lineNumber":118,"author":{"gitId":"santosh3007"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":119,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":120,"author":{"gitId":"santosh3007"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":121,"author":{"gitId":"santosh3007"},"content":"    * Stores the details to edit the task with. Each non-empty field value will replace the","lastModifiedDate":"2022-10-12"},{"lineNumber":122,"author":{"gitId":"santosh3007"},"content":"    * corresponding field value of the task.","lastModifiedDate":"2022-10-12"},{"lineNumber":123,"author":{"gitId":"santosh3007"},"content":"    */","lastModifiedDate":"2022-10-12"},{"lineNumber":124,"author":{"gitId":"santosh3007"},"content":"    public static class EditTaskDescriptor {","lastModifiedDate":"2022-10-12"},{"lineNumber":125,"author":{"gitId":"santosh3007"},"content":"        private TaskName taskName;","lastModifiedDate":"2022-10-12"},{"lineNumber":126,"author":{"gitId":"jasonqiu212"},"content":"        private Description description;","lastModifiedDate":"2022-10-26"},{"lineNumber":127,"author":{"gitId":"jasonqiu212"},"content":"        private Deadline deadline;","lastModifiedDate":"2022-10-26"},{"lineNumber":128,"author":{"gitId":"santosh3007"},"content":"        private Index contactIndex;","lastModifiedDate":"2022-10-12"},{"lineNumber":129,"author":{"gitId":"peppapighs"},"content":"        private Boolean isDone;","lastModifiedDate":"2022-11-07"},{"lineNumber":130,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":131,"author":{"gitId":"santosh3007"},"content":"        public EditTaskDescriptor() {}","lastModifiedDate":"2022-10-12"},{"lineNumber":132,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":133,"author":{"gitId":"santosh3007"},"content":"        /**","lastModifiedDate":"2022-10-12"},{"lineNumber":134,"author":{"gitId":"santosh3007"},"content":"        * Copy constructor.","lastModifiedDate":"2022-10-12"},{"lineNumber":135,"author":{"gitId":"santosh3007"},"content":"        * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2022-10-12"},{"lineNumber":136,"author":{"gitId":"santosh3007"},"content":"        */","lastModifiedDate":"2022-10-12"},{"lineNumber":137,"author":{"gitId":"santosh3007"},"content":"        public EditTaskDescriptor(EditTaskDescriptor toCopy) {","lastModifiedDate":"2022-10-12"},{"lineNumber":138,"author":{"gitId":"santosh3007"},"content":"            setTaskName(toCopy.taskName);","lastModifiedDate":"2022-10-12"},{"lineNumber":139,"author":{"gitId":"jasonqiu212"},"content":"            setDescription(toCopy.description);","lastModifiedDate":"2022-10-26"},{"lineNumber":140,"author":{"gitId":"jasonqiu212"},"content":"            setDeadline(toCopy.deadline);","lastModifiedDate":"2022-10-26"},{"lineNumber":141,"author":{"gitId":"santosh3007"},"content":"            setContactIndex(toCopy.contactIndex);","lastModifiedDate":"2022-10-12"},{"lineNumber":142,"author":{"gitId":"santosh3007"},"content":"            setIsDone(toCopy.isDone);","lastModifiedDate":"2022-10-27"},{"lineNumber":143,"author":{"gitId":"santosh3007"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":144,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":145,"author":{"gitId":"santosh3007"},"content":"        /**","lastModifiedDate":"2022-10-12"},{"lineNumber":146,"author":{"gitId":"santosh3007"},"content":"        * Returns true if at least one field is edited.","lastModifiedDate":"2022-10-12"},{"lineNumber":147,"author":{"gitId":"santosh3007"},"content":"        */","lastModifiedDate":"2022-10-12"},{"lineNumber":148,"author":{"gitId":"santosh3007"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2022-10-12"},{"lineNumber":149,"author":{"gitId":"jasonqiu212"},"content":"            return CollectionUtil.isAnyNonNull(taskName, description, deadline, contactIndex);","lastModifiedDate":"2022-10-26"},{"lineNumber":150,"author":{"gitId":"santosh3007"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":151,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":152,"author":{"gitId":"santosh3007"},"content":"        public void setTaskName(TaskName taskName) {","lastModifiedDate":"2022-10-12"},{"lineNumber":153,"author":{"gitId":"santosh3007"},"content":"            this.taskName \u003d taskName;","lastModifiedDate":"2022-10-12"},{"lineNumber":154,"author":{"gitId":"santosh3007"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":155,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":156,"author":{"gitId":"santosh3007"},"content":"        public Optional\u003cTaskName\u003e getTaskName() {","lastModifiedDate":"2022-10-12"},{"lineNumber":157,"author":{"gitId":"santosh3007"},"content":"            return Optional.ofNullable(taskName);","lastModifiedDate":"2022-10-12"},{"lineNumber":158,"author":{"gitId":"santosh3007"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":159,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":160,"author":{"gitId":"jasonqiu212"},"content":"        public void setDescription(Description description) {","lastModifiedDate":"2022-10-26"},{"lineNumber":161,"author":{"gitId":"jasonqiu212"},"content":"            this.description \u003d description;","lastModifiedDate":"2022-10-26"},{"lineNumber":162,"author":{"gitId":"jasonqiu212"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":163,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":164,"author":{"gitId":"jasonqiu212"},"content":"        public Optional\u003cDescription\u003e getDescription() {","lastModifiedDate":"2022-10-26"},{"lineNumber":165,"author":{"gitId":"jasonqiu212"},"content":"            return Optional.ofNullable(description);","lastModifiedDate":"2022-10-26"},{"lineNumber":166,"author":{"gitId":"jasonqiu212"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":167,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":168,"author":{"gitId":"jasonqiu212"},"content":"        public void setDeadline(Deadline deadline) {","lastModifiedDate":"2022-10-26"},{"lineNumber":169,"author":{"gitId":"jasonqiu212"},"content":"            this.deadline \u003d deadline;","lastModifiedDate":"2022-10-26"},{"lineNumber":170,"author":{"gitId":"jasonqiu212"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":171,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":172,"author":{"gitId":"jasonqiu212"},"content":"        public Optional\u003cDeadline\u003e getDeadline() {","lastModifiedDate":"2022-10-26"},{"lineNumber":173,"author":{"gitId":"jasonqiu212"},"content":"            return Optional.ofNullable(deadline);","lastModifiedDate":"2022-10-26"},{"lineNumber":174,"author":{"gitId":"jasonqiu212"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":175,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":176,"author":{"gitId":"santosh3007"},"content":"        public void setContactIndex(Index contactIndex) {","lastModifiedDate":"2022-10-12"},{"lineNumber":177,"author":{"gitId":"santosh3007"},"content":"            this.contactIndex \u003d contactIndex;","lastModifiedDate":"2022-10-12"},{"lineNumber":178,"author":{"gitId":"santosh3007"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":179,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":180,"author":{"gitId":"santosh3007"},"content":"        public Optional\u003cIndex\u003e getContactIndex() {","lastModifiedDate":"2022-10-12"},{"lineNumber":181,"author":{"gitId":"santosh3007"},"content":"            return Optional.ofNullable(contactIndex);","lastModifiedDate":"2022-10-12"},{"lineNumber":182,"author":{"gitId":"santosh3007"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":183,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":184,"author":{"gitId":"peppapighs"},"content":"        public void setIsDone(Boolean isDone) {","lastModifiedDate":"2022-11-07"},{"lineNumber":185,"author":{"gitId":"santosh3007"},"content":"            this.isDone \u003d isDone;","lastModifiedDate":"2022-10-27"},{"lineNumber":186,"author":{"gitId":"santosh3007"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":187,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":188,"author":{"gitId":"santosh3007"},"content":"        public Optional\u003cBoolean\u003e isDone() {","lastModifiedDate":"2022-10-27"},{"lineNumber":189,"author":{"gitId":"santosh3007"},"content":"            return Optional.ofNullable(isDone);","lastModifiedDate":"2022-10-27"},{"lineNumber":190,"author":{"gitId":"santosh3007"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":191,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":192,"author":{"gitId":"santosh3007"},"content":"        @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":193,"author":{"gitId":"santosh3007"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2022-10-12"},{"lineNumber":194,"author":{"gitId":"santosh3007"},"content":"            // short circuit if same object","lastModifiedDate":"2022-10-12"},{"lineNumber":195,"author":{"gitId":"santosh3007"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-12"},{"lineNumber":196,"author":{"gitId":"santosh3007"},"content":"                return true;","lastModifiedDate":"2022-10-12"},{"lineNumber":197,"author":{"gitId":"santosh3007"},"content":"            }","lastModifiedDate":"2022-10-12"},{"lineNumber":198,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":199,"author":{"gitId":"santosh3007"},"content":"            // instanceof handles nulls","lastModifiedDate":"2022-10-12"},{"lineNumber":200,"author":{"gitId":"santosh3007"},"content":"            if (!(other instanceof EditTaskDescriptor)) {","lastModifiedDate":"2022-10-12"},{"lineNumber":201,"author":{"gitId":"santosh3007"},"content":"                return false;","lastModifiedDate":"2022-10-12"},{"lineNumber":202,"author":{"gitId":"santosh3007"},"content":"            }","lastModifiedDate":"2022-10-12"},{"lineNumber":203,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":204,"author":{"gitId":"santosh3007"},"content":"            // state check","lastModifiedDate":"2022-10-12"},{"lineNumber":205,"author":{"gitId":"santosh3007"},"content":"            EditTaskDescriptor e \u003d (EditTaskDescriptor) other;","lastModifiedDate":"2022-10-12"},{"lineNumber":206,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":207,"author":{"gitId":"santosh3007"},"content":"            return getTaskName().equals(e.getTaskName())","lastModifiedDate":"2022-10-12"},{"lineNumber":208,"author":{"gitId":"jasonqiu212"},"content":"                    \u0026\u0026 getDescription().equals(e.getDescription())","lastModifiedDate":"2022-10-26"},{"lineNumber":209,"author":{"gitId":"jasonqiu212"},"content":"                    \u0026\u0026 getDeadline().equals(e.getDeadline())","lastModifiedDate":"2022-10-26"},{"lineNumber":210,"author":{"gitId":"santosh3007"},"content":"                    \u0026\u0026 getContactIndex().equals(e.getContactIndex());","lastModifiedDate":"2022-10-12"},{"lineNumber":211,"author":{"gitId":"santosh3007"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":212,"author":{"gitId":"santosh3007"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":213,"author":{"gitId":"santosh3007"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"jasonqiu212":34,"santosh3007":174,"peppapighs":4,"yunruu":1}},{"path":"src/main/java/swift/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.logic.commands;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"santosh3007"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-26"},{"lineNumber":4,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"santosh3007"},"content":"import swift.logic.parser.Prefix;","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"peppapighs"},"content":"import swift.model.Model;","lastModifiedDate":"2022-10-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"santosh3007"},"content":"    public static final ArrayList\u003cPrefix\u003e ARGUMENT_PREFIXES \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Address Book as requested ...\";","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"yunruu"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, CommandType.EXIT);","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"santosh3007":4,"peppapighs":2,"-":16,"yunruu":1}},{"path":"src/main/java/swift/logic/commands/FindContactCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.logic.commands;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"santosh3007"},"content":"import static swift.logic.parser.CliSyntax.PREFIX_KEYWORD;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":6,"author":{"gitId":"santosh3007"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"santosh3007"},"content":"import java.util.List;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"peppapighs"},"content":"import swift.commons.core.Messages;","lastModifiedDate":"2022-10-01"},{"lineNumber":10,"author":{"gitId":"santosh3007"},"content":"import swift.logic.parser.Prefix;","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"peppapighs"},"content":"import swift.model.Model;","lastModifiedDate":"2022-10-01"},{"lineNumber":12,"author":{"gitId":"jasonqiu212"},"content":"import swift.model.person.PersonNameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"jasonqiu212"},"content":" * Keyword matching is case-insensitive.","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"jasonqiu212"},"content":"public class FindContactCommand extends Command {","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"jasonqiu212"},"content":"    public static final String COMMAND_WORD \u003d \"find_contact\";","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"santosh3007"},"content":"    public static final ArrayList\u003cPrefix\u003e ARGUMENT_PREFIXES \u003d new ArrayList\u003c\u003e(List.of(PREFIX_KEYWORD));","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"peppapighs"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all contacts whose names contain any of \"","lastModifiedDate":"2022-11-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"jasonqiu212"},"content":"    private final PersonNameContainsKeywordsPredicate predicate;","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"jasonqiu212"},"content":"    public FindContactCommand(PersonNameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":39,"author":{"gitId":"yunruu"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()),","lastModifiedDate":"2022-10-26"},{"lineNumber":40,"author":{"gitId":"yunruu"},"content":"                CommandType.CONTACTS);","lastModifiedDate":"2022-10-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"jasonqiu212"},"content":"                || (other instanceof FindContactCommand // instanceof handles nulls","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"jasonqiu212"},"content":"                \u0026\u0026 predicate.equals(((FindContactCommand) other).predicate)); // state check","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"jasonqiu212":8,"santosh3007":6,"peppapighs":4,"-":29,"yunruu":2}},{"path":"src/main/java/swift/logic/commands/FindTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jasonqiu212"},"content":"package swift.logic.commands;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"jasonqiu212"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"santosh3007"},"content":"import static swift.logic.parser.CliSyntax.PREFIX_KEYWORD;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"santosh3007"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"santosh3007"},"content":"import java.util.List;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"jasonqiu212"},"content":"import swift.commons.core.Messages;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"santosh3007"},"content":"import swift.logic.parser.Prefix;","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"jasonqiu212"},"content":"import swift.model.Model;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"jasonqiu212"},"content":"import swift.model.task.TaskNameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"jasonqiu212"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"jasonqiu212"},"content":" * Finds and lists all tasks in address book whose name contains any of the argument keywords.","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"jasonqiu212"},"content":" * Keyword matching is case-insensitive.","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"jasonqiu212"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"jasonqiu212"},"content":"public class FindTaskCommand extends Command {","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"jasonqiu212"},"content":"    public static final String COMMAND_WORD \u003d \"find_task\";","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"santosh3007"},"content":"    public static final ArrayList\u003cPrefix\u003e ARGUMENT_PREFIXES \u003d new ArrayList\u003c\u003e(List.of(PREFIX_KEYWORD));","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"jasonqiu212"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all tasks whose names contain any of \"","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"jasonqiu212"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"jasonqiu212"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"jasonqiu212"},"content":"            + \"Example: \" + COMMAND_WORD + \" discuss about UI\";","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"jasonqiu212"},"content":"    private final TaskNameContainsKeywordsPredicate predicate;","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"jasonqiu212"},"content":"    public FindTaskCommand(TaskNameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"jasonqiu212"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"jasonqiu212"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"jasonqiu212"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"jasonqiu212"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"jasonqiu212"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"jasonqiu212"},"content":"        model.updateFilteredTaskList(predicate);","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"jasonqiu212"},"content":"        return new CommandResult(","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"yunruu"},"content":"                String.format(Messages.MESSAGE_TASKS_LISTED_OVERVIEW, model.getFilteredTaskList().size()),","lastModifiedDate":"2022-10-26"},{"lineNumber":40,"author":{"gitId":"yunruu"},"content":"                CommandType.TASKS);","lastModifiedDate":"2022-10-27"},{"lineNumber":41,"author":{"gitId":"jasonqiu212"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"jasonqiu212"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"jasonqiu212"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"jasonqiu212"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"jasonqiu212"},"content":"                || (other instanceof FindTaskCommand // instanceof handles nulls","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"jasonqiu212"},"content":"                \u0026\u0026 predicate.equals(((FindTaskCommand) other).predicate)); // state check","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"jasonqiu212"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"jasonqiu212"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"jasonqiu212":41,"santosh3007":6,"yunruu":2}},{"path":"src/main/java/swift/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.logic.commands;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"santosh3007"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-26"},{"lineNumber":4,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"santosh3007"},"content":"import swift.logic.parser.Prefix;","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"peppapighs"},"content":"import swift.model.Model;","lastModifiedDate":"2022-10-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"santosh3007"},"content":"    public static final ArrayList\u003cPrefix\u003e ARGUMENT_PREFIXES \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":23,"author":{"gitId":"yunruu"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, CommandType.HELP);","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"santosh3007":4,"peppapighs":2,"-":18,"yunruu":1}},{"path":"src/main/java/swift/logic/commands/ListContactCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.logic.commands;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"ShenyiCui"},"content":"import static swift.model.Model.PREDICATE_SHOW_ALL_PEOPLE;","lastModifiedDate":"2022-10-23"},{"lineNumber":5,"author":{"gitId":"jasonqiu212"},"content":"import static swift.model.Model.PREDICATE_SHOW_ALL_TASKS;","lastModifiedDate":"2022-11-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"santosh3007"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"santosh3007"},"content":"import swift.logic.parser.Prefix;","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"peppapighs"},"content":"import swift.model.Model;","lastModifiedDate":"2022-10-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"peppapighs"},"content":"public class ListContactCommand extends Command {","lastModifiedDate":"2022-10-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"peppapighs"},"content":"    public static final String COMMAND_WORD \u003d \"list_contact\";","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"santosh3007"},"content":"    public static final ArrayList\u003cPrefix\u003e ARGUMENT_PREFIXES \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"peppapighs"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all contacts\";","lastModifiedDate":"2022-11-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"ShenyiCui"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PEOPLE);","lastModifiedDate":"2022-10-23"},{"lineNumber":27,"author":{"gitId":"jasonqiu212"},"content":"        model.updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2022-11-06"},{"lineNumber":28,"author":{"gitId":"yunruu"},"content":"        return new CommandResult(MESSAGE_SUCCESS, CommandType.CONTACTS);","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ShenyiCui":2,"jasonqiu212":2,"santosh3007":4,"peppapighs":5,"-":16,"yunruu":1}},{"path":"src/main/java/swift/logic/commands/ListTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yunruu"},"content":"package swift.logic.commands;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"yunruu"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"jasonqiu212"},"content":"import static swift.model.Model.PREDICATE_SHOW_ALL_PEOPLE;","lastModifiedDate":"2022-11-06"},{"lineNumber":5,"author":{"gitId":"yunruu"},"content":"import static swift.model.Model.PREDICATE_SHOW_ALL_TASKS;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"santosh3007"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"yunruu"},"content":"import swift.commons.core.Messages;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"santosh3007"},"content":"import swift.logic.parser.Prefix;","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"yunruu"},"content":"import swift.model.Model;","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"yunruu"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"yunruu"},"content":" * Finds and lists all tasks in address book whose name contains any of the argument keywords.","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"yunruu"},"content":" * Keyword matching is case-insensitive.","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"yunruu"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"yunruu"},"content":"public class ListTaskCommand extends Command {","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"yunruu"},"content":"    public static final String COMMAND_WORD \u003d \"list_task\";","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"santosh3007"},"content":"    public static final ArrayList\u003cPrefix\u003e ARGUMENT_PREFIXES \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"yunruu"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Displays all tasks as a list with\\n\"","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"yunruu"},"content":"            + \"index numbers.\\n\"","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"yunruu"},"content":"            + \"Parameters: KEYWORD\\n\"","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"yunruu"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"yunruu"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"yunruu"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"yunruu"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"yunruu"},"content":"        model.updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"jasonqiu212"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PEOPLE);","lastModifiedDate":"2022-11-06"},{"lineNumber":32,"author":{"gitId":"yunruu"},"content":"        return new CommandResult(","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"yunruu"},"content":"                String.format(Messages.MESSAGE_TASKS_LISTED_OVERVIEW, model.getFilteredTaskList().size()),","lastModifiedDate":"2022-10-23"},{"lineNumber":34,"author":{"gitId":"yunruu"},"content":"                CommandType.TASKS);","lastModifiedDate":"2022-10-27"},{"lineNumber":35,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"yunruu"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"yunruu"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"jasonqiu212"},"content":"        return (other instanceof ListTaskCommand); // instanceof handles nulls","lastModifiedDate":"2022-11-06"},{"lineNumber":40,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"yunruu"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"jasonqiu212":3,"santosh3007":4,"yunruu":34}},{"path":"src/main/java/swift/logic/commands/MarkTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"santosh3007"},"content":"package swift.logic.commands;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":3,"author":{"gitId":"santosh3007"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"santosh3007"},"content":"import static swift.logic.commands.EditTaskCommand.EditTaskDescriptor;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"santosh3007"},"content":"import static swift.logic.commands.EditTaskCommand.createEditedTask;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"santosh3007"},"content":"import static swift.logic.parser.CliSyntax.PREFIX_TASK_INDEX;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"santosh3007"},"content":"import static swift.model.Model.PREDICATE_SHOW_ALL_TASKS;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"santosh3007"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"santosh3007"},"content":"import java.util.List;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"santosh3007"},"content":"import swift.commons.core.Messages;","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"santosh3007"},"content":"import swift.commons.core.index.Index;","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"santosh3007"},"content":"import swift.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"santosh3007"},"content":"import swift.logic.parser.Prefix;","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"santosh3007"},"content":"import swift.model.Model;","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"santosh3007"},"content":"import swift.model.task.Task;","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"santosh3007"},"content":"/**","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"santosh3007"},"content":" * Marks an existing task in the address book as completed.","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"santosh3007"},"content":" */","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"santosh3007"},"content":"public class MarkTaskCommand extends Command {","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"santosh3007"},"content":"    public static final String COMMAND_WORD \u003d \"mark\";","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"santosh3007"},"content":"    public static final ArrayList\u003cPrefix\u003e ARGUMENT_PREFIXES \u003d new ArrayList\u003c\u003e(List.of(PREFIX_TASK_INDEX));","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"santosh3007"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"santosh3007"},"content":"            + \": Marks the task identified by the index number \"","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"santosh3007"},"content":"            + \"used in the displayed task list as completed.\\n\"","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"santosh3007"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"santosh3007"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"santosh3007"},"content":"    public static final String MESSAGE_MARK_TASK_SUCCESS \u003d \"Marked Task %1$s as completed.\";","lastModifiedDate":"2022-10-27"},{"lineNumber":34,"author":{"gitId":"santosh3007"},"content":"    public static final String MESSAGE_TASK_ALREADY_COMPLETED \u003d","lastModifiedDate":"2022-10-27"},{"lineNumber":35,"author":{"gitId":"santosh3007"},"content":"            \"This task is already marked as completed.\";","lastModifiedDate":"2022-10-27"},{"lineNumber":36,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":37,"author":{"gitId":"santosh3007"},"content":"    private final Index index;","lastModifiedDate":"2022-10-27"},{"lineNumber":38,"author":{"gitId":"santosh3007"},"content":"    private final EditTaskDescriptor markTaskDescriptor;","lastModifiedDate":"2022-10-27"},{"lineNumber":39,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":40,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":41,"author":{"gitId":"santosh3007"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":42,"author":{"gitId":"santosh3007"},"content":"     * @param index of the task in the filtered task list to mark as complete","lastModifiedDate":"2022-10-27"},{"lineNumber":43,"author":{"gitId":"santosh3007"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":44,"author":{"gitId":"santosh3007"},"content":"    public MarkTaskCommand(Index index) {","lastModifiedDate":"2022-10-27"},{"lineNumber":45,"author":{"gitId":"santosh3007"},"content":"        requireNonNull(index);","lastModifiedDate":"2022-10-27"},{"lineNumber":46,"author":{"gitId":"santosh3007"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-10-27"},{"lineNumber":47,"author":{"gitId":"santosh3007"},"content":"        markTaskDescriptor \u003d new EditTaskDescriptor();","lastModifiedDate":"2022-10-27"},{"lineNumber":48,"author":{"gitId":"santosh3007"},"content":"        markTaskDescriptor.setIsDone(true);","lastModifiedDate":"2022-10-27"},{"lineNumber":49,"author":{"gitId":"santosh3007"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":50,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":51,"author":{"gitId":"santosh3007"},"content":"    @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":52,"author":{"gitId":"santosh3007"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-27"},{"lineNumber":53,"author":{"gitId":"santosh3007"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-27"},{"lineNumber":54,"author":{"gitId":"santosh3007"},"content":"        List\u003cTask\u003e lastShownList \u003d model.getFilteredTaskList();","lastModifiedDate":"2022-10-27"},{"lineNumber":55,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":56,"author":{"gitId":"santosh3007"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-27"},{"lineNumber":57,"author":{"gitId":"santosh3007"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-27"},{"lineNumber":58,"author":{"gitId":"santosh3007"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":59,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":60,"author":{"gitId":"santosh3007"},"content":"        Task taskToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-10-27"},{"lineNumber":61,"author":{"gitId":"santosh3007"},"content":"        Task editedTask \u003d createEditedTask(taskToEdit, markTaskDescriptor);","lastModifiedDate":"2022-10-27"},{"lineNumber":62,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":63,"author":{"gitId":"santosh3007"},"content":"        if (taskToEdit.isDone()) {","lastModifiedDate":"2022-10-27"},{"lineNumber":64,"author":{"gitId":"santosh3007"},"content":"            throw new CommandException(MESSAGE_TASK_ALREADY_COMPLETED);","lastModifiedDate":"2022-10-27"},{"lineNumber":65,"author":{"gitId":"santosh3007"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":66,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":67,"author":{"gitId":"santosh3007"},"content":"        model.setTask(taskToEdit, editedTask);","lastModifiedDate":"2022-10-27"},{"lineNumber":68,"author":{"gitId":"santosh3007"},"content":"        model.updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2022-10-27"},{"lineNumber":69,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":70,"author":{"gitId":"santosh3007"},"content":"        return new CommandResult(String.format(MESSAGE_MARK_TASK_SUCCESS, editedTask),","lastModifiedDate":"2022-10-27"},{"lineNumber":71,"author":{"gitId":"santosh3007"},"content":"                CommandType.TASKS);","lastModifiedDate":"2022-10-27"},{"lineNumber":72,"author":{"gitId":"santosh3007"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":73,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":74,"author":{"gitId":"santosh3007"},"content":"    @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":75,"author":{"gitId":"santosh3007"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-27"},{"lineNumber":76,"author":{"gitId":"santosh3007"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-27"},{"lineNumber":77,"author":{"gitId":"santosh3007"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-27"},{"lineNumber":78,"author":{"gitId":"santosh3007"},"content":"            return true;","lastModifiedDate":"2022-10-27"},{"lineNumber":79,"author":{"gitId":"santosh3007"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":80,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":81,"author":{"gitId":"santosh3007"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-27"},{"lineNumber":82,"author":{"gitId":"santosh3007"},"content":"        if (!(other instanceof MarkTaskCommand)) {","lastModifiedDate":"2022-10-27"},{"lineNumber":83,"author":{"gitId":"santosh3007"},"content":"            return false;","lastModifiedDate":"2022-10-27"},{"lineNumber":84,"author":{"gitId":"santosh3007"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":85,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":86,"author":{"gitId":"santosh3007"},"content":"        // state check","lastModifiedDate":"2022-10-27"},{"lineNumber":87,"author":{"gitId":"santosh3007"},"content":"        MarkTaskCommand e \u003d (MarkTaskCommand) other;","lastModifiedDate":"2022-10-27"},{"lineNumber":88,"author":{"gitId":"santosh3007"},"content":"        return index.equals(e.index) \u0026\u0026 markTaskDescriptor.equals(e.markTaskDescriptor);","lastModifiedDate":"2022-10-27"},{"lineNumber":89,"author":{"gitId":"santosh3007"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":90,"author":{"gitId":"santosh3007"},"content":"}","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"santosh3007":89,"peppapighs":1}},{"path":"src/main/java/swift/logic/commands/SelectContactCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ShenyiCui"},"content":"package swift.logic.commands;","lastModifiedDate":"2022-10-22"},{"lineNumber":2,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":3,"author":{"gitId":"ShenyiCui"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-22"},{"lineNumber":4,"author":{"gitId":"ShenyiCui"},"content":"import static swift.model.Model.PREDICATE_SHOW_ALL_BRIDGE;","lastModifiedDate":"2022-10-23"},{"lineNumber":5,"author":{"gitId":"ShenyiCui"},"content":"import static swift.model.Model.PREDICATE_SHOW_ALL_TASKS;","lastModifiedDate":"2022-10-22"},{"lineNumber":6,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":7,"author":{"gitId":"santosh3007"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"ShenyiCui"},"content":"import java.util.List;","lastModifiedDate":"2022-10-22"},{"lineNumber":9,"author":{"gitId":"ShenyiCui"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-22"},{"lineNumber":10,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":11,"author":{"gitId":"ShenyiCui"},"content":"import swift.commons.core.Messages;","lastModifiedDate":"2022-10-22"},{"lineNumber":12,"author":{"gitId":"ShenyiCui"},"content":"import swift.commons.core.index.Index;","lastModifiedDate":"2022-10-22"},{"lineNumber":13,"author":{"gitId":"ShenyiCui"},"content":"import swift.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-22"},{"lineNumber":14,"author":{"gitId":"santosh3007"},"content":"import swift.logic.parser.Prefix;","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"ShenyiCui"},"content":"import swift.model.Model;","lastModifiedDate":"2022-10-22"},{"lineNumber":16,"author":{"gitId":"ShenyiCui"},"content":"import swift.model.bridge.PersonTaskBridge;","lastModifiedDate":"2022-10-22"},{"lineNumber":17,"author":{"gitId":"ShenyiCui"},"content":"import swift.model.person.Person;","lastModifiedDate":"2022-10-22"},{"lineNumber":18,"author":{"gitId":"ShenyiCui"},"content":"import swift.model.task.Task;","lastModifiedDate":"2022-10-22"},{"lineNumber":19,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":20,"author":{"gitId":"ShenyiCui"},"content":"/**","lastModifiedDate":"2022-10-22"},{"lineNumber":21,"author":{"gitId":"yunruu"},"content":" * Selects a task identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2022-10-24"},{"lineNumber":22,"author":{"gitId":"ShenyiCui"},"content":" */","lastModifiedDate":"2022-10-22"},{"lineNumber":23,"author":{"gitId":"ShenyiCui"},"content":"public class SelectContactCommand extends Command {","lastModifiedDate":"2022-10-22"},{"lineNumber":24,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":25,"author":{"gitId":"ShenyiCui"},"content":"    public static final String COMMAND_WORD \u003d \"select_contact\";","lastModifiedDate":"2022-10-22"},{"lineNumber":26,"author":{"gitId":"santosh3007"},"content":"    public static final ArrayList\u003cPrefix\u003e ARGUMENT_PREFIXES \u003d new ArrayList\u003c\u003e(List.of(new Prefix(\"\", \"contact_index\")));","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":28,"author":{"gitId":"ShenyiCui"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-22"},{"lineNumber":29,"author":{"gitId":"ShenyiCui"},"content":"            + \": Selects the contact identified by the index number used in the displayed contact list.\\n\"","lastModifiedDate":"2022-10-22"},{"lineNumber":30,"author":{"gitId":"ShenyiCui"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2022-10-22"},{"lineNumber":31,"author":{"gitId":"ShenyiCui"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2022-10-22"},{"lineNumber":32,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":33,"author":{"gitId":"peppapighs"},"content":"    public static final String MESSAGE_SELECT_CONTACT_SUCCESS \u003d \"Contact Selected!\";","lastModifiedDate":"2022-11-05"},{"lineNumber":34,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":35,"author":{"gitId":"ShenyiCui"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-10-22"},{"lineNumber":36,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":37,"author":{"gitId":"ShenyiCui"},"content":"    public SelectContactCommand(Index targetIndex) {","lastModifiedDate":"2022-10-22"},{"lineNumber":38,"author":{"gitId":"ShenyiCui"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-10-22"},{"lineNumber":39,"author":{"gitId":"ShenyiCui"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":40,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":41,"author":{"gitId":"ShenyiCui"},"content":"    @Override","lastModifiedDate":"2022-10-22"},{"lineNumber":42,"author":{"gitId":"ShenyiCui"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-22"},{"lineNumber":43,"author":{"gitId":"ShenyiCui"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-22"},{"lineNumber":44,"author":{"gitId":"ShenyiCui"},"content":"        List\u003cPerson\u003e lastShownPersonList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-10-22"},{"lineNumber":45,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":46,"author":{"gitId":"ShenyiCui"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownPersonList.size()) {","lastModifiedDate":"2022-10-22"},{"lineNumber":47,"author":{"gitId":"ShenyiCui"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-22"},{"lineNumber":48,"author":{"gitId":"ShenyiCui"},"content":"        }","lastModifiedDate":"2022-10-22"},{"lineNumber":49,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":50,"author":{"gitId":"ShenyiCui"},"content":"        Person selectedPerson \u003d lastShownPersonList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-22"},{"lineNumber":51,"author":{"gitId":"ShenyiCui"},"content":"        model.updateFilteredPersonList((person) -\u003e person.equals(selectedPerson));","lastModifiedDate":"2022-10-22"},{"lineNumber":52,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":53,"author":{"gitId":"ShenyiCui"},"content":"        model.updateFilteredBridgeList(PREDICATE_SHOW_ALL_BRIDGE);","lastModifiedDate":"2022-10-23"},{"lineNumber":54,"author":{"gitId":"ShenyiCui"},"content":"        model.updateFilteredBridgeList((bridge) -\u003e bridge.getPersonId().equals(selectedPerson.getId()));","lastModifiedDate":"2022-10-22"},{"lineNumber":55,"author":{"gitId":"ShenyiCui"},"content":"        List\u003cPersonTaskBridge\u003e bridgeList \u003d model.getFilteredBridgeList();","lastModifiedDate":"2022-10-22"},{"lineNumber":56,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":57,"author":{"gitId":"ShenyiCui"},"content":"        // Predicate to check whether task exists within a bridgeList","lastModifiedDate":"2022-10-22"},{"lineNumber":58,"author":{"gitId":"ShenyiCui"},"content":"        Predicate\u003cTask\u003e isTaskExist \u003d (task) -\u003e bridgeList.stream()","lastModifiedDate":"2022-10-22"},{"lineNumber":59,"author":{"gitId":"jasonqiu212"},"content":"                .anyMatch((bridge) -\u003e bridge.getTaskId().equals(task.getId()));","lastModifiedDate":"2022-11-06"},{"lineNumber":60,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":61,"author":{"gitId":"ShenyiCui"},"content":"        model.updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2022-10-22"},{"lineNumber":62,"author":{"gitId":"ShenyiCui"},"content":"        model.updateFilteredTaskList(isTaskExist);","lastModifiedDate":"2022-10-22"},{"lineNumber":63,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":64,"author":{"gitId":"yunruu"},"content":"        return new CommandResult(Messages.MESSAGE_PERSONS_SELECTED_OVERVIEW, CommandType.SELECT_CONTACT);","lastModifiedDate":"2022-10-27"},{"lineNumber":65,"author":{"gitId":"ShenyiCui"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":66,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":67,"author":{"gitId":"ShenyiCui"},"content":"    @Override","lastModifiedDate":"2022-10-22"},{"lineNumber":68,"author":{"gitId":"ShenyiCui"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-22"},{"lineNumber":69,"author":{"gitId":"ShenyiCui"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-22"},{"lineNumber":70,"author":{"gitId":"ShenyiCui"},"content":"                || (other instanceof SelectContactCommand // instanceof handles nulls","lastModifiedDate":"2022-10-22"},{"lineNumber":71,"author":{"gitId":"ShenyiCui"},"content":"                \u0026\u0026 targetIndex.equals(((SelectContactCommand) other).targetIndex)); // state check","lastModifiedDate":"2022-10-22"},{"lineNumber":72,"author":{"gitId":"ShenyiCui"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":73,"author":{"gitId":"ShenyiCui"},"content":"}","lastModifiedDate":"2022-10-22"}],"authorContributionMap":{"ShenyiCui":66,"jasonqiu212":1,"santosh3007":3,"peppapighs":1,"yunruu":2}},{"path":"src/main/java/swift/logic/commands/SelectTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yunruu"},"content":"package swift.logic.commands;","lastModifiedDate":"2022-10-24"},{"lineNumber":2,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":3,"author":{"gitId":"yunruu"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-26"},{"lineNumber":4,"author":{"gitId":"yunruu"},"content":"import static swift.model.Model.PREDICATE_SHOW_ALL_BRIDGE;","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"yunruu"},"content":"import static swift.model.Model.PREDICATE_SHOW_ALL_PEOPLE;","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"yunruu"},"content":"import static swift.model.Model.PREDICATE_SHOW_ALL_TASKS;","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"santosh3007"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"yunruu"},"content":"import java.util.List;","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"yunruu"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"yunruu"},"content":"import swift.commons.core.Messages;","lastModifiedDate":"2022-10-24"},{"lineNumber":13,"author":{"gitId":"yunruu"},"content":"import swift.commons.core.index.Index;","lastModifiedDate":"2022-10-24"},{"lineNumber":14,"author":{"gitId":"yunruu"},"content":"import swift.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-24"},{"lineNumber":15,"author":{"gitId":"santosh3007"},"content":"import swift.logic.parser.Prefix;","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"yunruu"},"content":"import swift.model.Model;","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"yunruu"},"content":"import swift.model.bridge.PersonTaskBridge;","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"yunruu"},"content":"import swift.model.person.Person;","lastModifiedDate":"2022-10-24"},{"lineNumber":19,"author":{"gitId":"yunruu"},"content":"import swift.model.task.Task;","lastModifiedDate":"2022-10-24"},{"lineNumber":20,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":21,"author":{"gitId":"yunruu"},"content":"/**","lastModifiedDate":"2022-10-24"},{"lineNumber":22,"author":{"gitId":"yunruu"},"content":" * Command to display all tasks using its specified index from address book.","lastModifiedDate":"2022-10-24"},{"lineNumber":23,"author":{"gitId":"yunruu"},"content":" */","lastModifiedDate":"2022-10-24"},{"lineNumber":24,"author":{"gitId":"yunruu"},"content":"public class SelectTaskCommand extends Command {","lastModifiedDate":"2022-10-24"},{"lineNumber":25,"author":{"gitId":"yunruu"},"content":"    public static final String COMMAND_WORD \u003d \"select_task\";","lastModifiedDate":"2022-10-24"},{"lineNumber":26,"author":{"gitId":"santosh3007"},"content":"    public static final ArrayList\u003cPrefix\u003e ARGUMENT_PREFIXES \u003d new ArrayList\u003c\u003e(List.of(new Prefix(\"\", \"task_index\")));","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":28,"author":{"gitId":"yunruu"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-24"},{"lineNumber":29,"author":{"gitId":"yunruu"},"content":"            + \": Selects the task identified by the index number used in the displayed task list.\\n\"","lastModifiedDate":"2022-10-24"},{"lineNumber":30,"author":{"gitId":"yunruu"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2022-10-24"},{"lineNumber":31,"author":{"gitId":"yunruu"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2022-10-24"},{"lineNumber":32,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":33,"author":{"gitId":"yunruu"},"content":"    public static final String MESSAGE_SELECT_TASK_SUCCESS \u003d \"Task Selected!\";","lastModifiedDate":"2022-10-24"},{"lineNumber":34,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":35,"author":{"gitId":"yunruu"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-10-24"},{"lineNumber":36,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":37,"author":{"gitId":"yunruu"},"content":"    public SelectTaskCommand(Index targetIndex) {","lastModifiedDate":"2022-10-24"},{"lineNumber":38,"author":{"gitId":"yunruu"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-10-24"},{"lineNumber":39,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":40,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":41,"author":{"gitId":"yunruu"},"content":"    @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":42,"author":{"gitId":"yunruu"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-24"},{"lineNumber":43,"author":{"gitId":"yunruu"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-24"},{"lineNumber":44,"author":{"gitId":"yunruu"},"content":"        List\u003cTask\u003e lastShownTaskList \u003d model.getFilteredTaskList();","lastModifiedDate":"2022-10-24"},{"lineNumber":45,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":46,"author":{"gitId":"yunruu"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownTaskList.size()) {","lastModifiedDate":"2022-10-24"},{"lineNumber":47,"author":{"gitId":"yunruu"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-24"},{"lineNumber":48,"author":{"gitId":"yunruu"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":49,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":50,"author":{"gitId":"yunruu"},"content":"        // Display only selected task","lastModifiedDate":"2022-10-24"},{"lineNumber":51,"author":{"gitId":"yunruu"},"content":"        Task selectedTask \u003d lastShownTaskList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-24"},{"lineNumber":52,"author":{"gitId":"yunruu"},"content":"        model.updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2022-10-25"},{"lineNumber":53,"author":{"gitId":"yunruu"},"content":"        model.updateFilteredTaskList(task -\u003e task.equals(selectedTask));","lastModifiedDate":"2022-10-24"},{"lineNumber":54,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":55,"author":{"gitId":"yunruu"},"content":"        model.updateFilteredBridgeList(PREDICATE_SHOW_ALL_BRIDGE);","lastModifiedDate":"2022-10-24"},{"lineNumber":56,"author":{"gitId":"yunruu"},"content":"        model.updateFilteredBridgeList(bridge -\u003e bridge.getTaskId().equals(selectedTask.getId()));","lastModifiedDate":"2022-10-24"},{"lineNumber":57,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":58,"author":{"gitId":"yunruu"},"content":"        List\u003cPersonTaskBridge\u003e bridgeList \u003d model.getFilteredBridgeList();","lastModifiedDate":"2022-10-24"},{"lineNumber":59,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":60,"author":{"gitId":"yunruu"},"content":"        Predicate\u003cPerson\u003e isAssociatedContact \u003d contact -\u003e bridgeList.stream()","lastModifiedDate":"2022-10-24"},{"lineNumber":61,"author":{"gitId":"jasonqiu212"},"content":"                .anyMatch((bridge) -\u003e bridge.getPersonId().equals(contact.getId()));","lastModifiedDate":"2022-11-06"},{"lineNumber":62,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":63,"author":{"gitId":"yunruu"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PEOPLE);","lastModifiedDate":"2022-10-24"},{"lineNumber":64,"author":{"gitId":"yunruu"},"content":"        model.updateFilteredPersonList(isAssociatedContact);","lastModifiedDate":"2022-10-24"},{"lineNumber":65,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":66,"author":{"gitId":"yunruu"},"content":"        return new CommandResult(Messages.MESSAGE_TASKS_SELECTED_OVERVIEW, CommandType.SELECT_TASK);","lastModifiedDate":"2022-10-27"},{"lineNumber":67,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":68,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":69,"author":{"gitId":"yunruu"},"content":"    @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":70,"author":{"gitId":"yunruu"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-24"},{"lineNumber":71,"author":{"gitId":"yunruu"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-24"},{"lineNumber":72,"author":{"gitId":"yunruu"},"content":"                || (other instanceof SelectTaskCommand // instanceof handles nulls","lastModifiedDate":"2022-10-24"},{"lineNumber":73,"author":{"gitId":"yunruu"},"content":"                \u0026\u0026 targetIndex.equals(((SelectTaskCommand) other).targetIndex)); // state check","lastModifiedDate":"2022-10-24"},{"lineNumber":74,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":75,"author":{"gitId":"yunruu"},"content":"}","lastModifiedDate":"2022-10-24"}],"authorContributionMap":{"jasonqiu212":1,"santosh3007":3,"yunruu":71}},{"path":"src/main/java/swift/logic/commands/UnassignCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ShenyiCui"},"content":"package swift.logic.commands;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":3,"author":{"gitId":"ShenyiCui"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"ShenyiCui"},"content":"import static swift.logic.parser.CliSyntax.PREFIX_CONTACT;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"ShenyiCui"},"content":"import static swift.logic.parser.CliSyntax.PREFIX_TASK;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"ShenyiCui"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"ShenyiCui"},"content":"import java.util.List;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"ShenyiCui"},"content":"import swift.commons.core.Messages;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"ShenyiCui"},"content":"import swift.commons.core.index.Index;","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"ShenyiCui"},"content":"import swift.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"ShenyiCui"},"content":"import swift.logic.parser.Prefix;","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"ShenyiCui"},"content":"import swift.model.Model;","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"ShenyiCui"},"content":"import swift.model.bridge.PersonTaskBridge;","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"ShenyiCui"},"content":"import swift.model.person.Person;","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"ShenyiCui"},"content":"import swift.model.task.Task;","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"ShenyiCui"},"content":"/**","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"ShenyiCui"},"content":" * Unassigns a task to a contact identified using their displayed index from the","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"ShenyiCui"},"content":" * address book.","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"ShenyiCui"},"content":" */","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"ShenyiCui"},"content":"public class UnassignCommand extends Command {","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"ShenyiCui"},"content":"    public static final String COMMAND_WORD \u003d \"unassign\";","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"ShenyiCui"},"content":"    public static final ArrayList\u003cPrefix\u003e ARGUMENT_PREFIXES \u003d new ArrayList\u003c\u003e(","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"ShenyiCui"},"content":"            List.of(PREFIX_CONTACT, PREFIX_TASK));","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"ShenyiCui"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"ShenyiCui"},"content":"            + \": Unassigns the task to the contact identified by the index numbers used in the \"","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"ShenyiCui"},"content":"            + \"displayed contact list.\\n\"","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"ShenyiCui"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"ShenyiCui"},"content":"            + PREFIX_CONTACT + \"CONTACT_INDEX \"","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"ShenyiCui"},"content":"            + PREFIX_TASK + \"TASK_INDEX\\n\"","lastModifiedDate":"2022-10-27"},{"lineNumber":34,"author":{"gitId":"ShenyiCui"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-27"},{"lineNumber":35,"author":{"gitId":"ShenyiCui"},"content":"            + PREFIX_CONTACT + \"1 \"","lastModifiedDate":"2022-10-27"},{"lineNumber":36,"author":{"gitId":"ShenyiCui"},"content":"            + PREFIX_TASK + \"2\";","lastModifiedDate":"2022-10-27"},{"lineNumber":37,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":38,"author":{"gitId":"ShenyiCui"},"content":"    public static final String MESSAGE_UNASSIGN_SUCCESS \u003d \"Task %1$s unassigned to contact %2$s!\";","lastModifiedDate":"2022-10-27"},{"lineNumber":39,"author":{"gitId":"ShenyiCui"},"content":"    public static final String MESSAGE_BRIDGE_DOESNT_EXIST \u003d \"This task is not assigned to this contact!\";","lastModifiedDate":"2022-10-27"},{"lineNumber":40,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":41,"author":{"gitId":"ShenyiCui"},"content":"    private final Index contactIndex;","lastModifiedDate":"2022-10-27"},{"lineNumber":42,"author":{"gitId":"ShenyiCui"},"content":"    private final Index taskIndex;","lastModifiedDate":"2022-10-27"},{"lineNumber":43,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":44,"author":{"gitId":"ShenyiCui"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":45,"author":{"gitId":"ShenyiCui"},"content":"     * Creates an UnassignCommand to add the specified {@code Task} to the specified","lastModifiedDate":"2022-10-27"},{"lineNumber":46,"author":{"gitId":"ShenyiCui"},"content":"     * {@code Person}","lastModifiedDate":"2022-10-27"},{"lineNumber":47,"author":{"gitId":"ShenyiCui"},"content":"     *","lastModifiedDate":"2022-10-27"},{"lineNumber":48,"author":{"gitId":"ShenyiCui"},"content":"     * @param contactIndex Index of the contact to assign the task to.","lastModifiedDate":"2022-10-27"},{"lineNumber":49,"author":{"gitId":"ShenyiCui"},"content":"     * @param taskIndex    Index of the task to be assigned.","lastModifiedDate":"2022-10-27"},{"lineNumber":50,"author":{"gitId":"ShenyiCui"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":51,"author":{"gitId":"ShenyiCui"},"content":"    public UnassignCommand(Index contactIndex, Index taskIndex) {","lastModifiedDate":"2022-10-27"},{"lineNumber":52,"author":{"gitId":"ShenyiCui"},"content":"        this.contactIndex \u003d contactIndex;","lastModifiedDate":"2022-10-27"},{"lineNumber":53,"author":{"gitId":"ShenyiCui"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2022-10-27"},{"lineNumber":54,"author":{"gitId":"ShenyiCui"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":55,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":56,"author":{"gitId":"ShenyiCui"},"content":"    @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":57,"author":{"gitId":"ShenyiCui"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-27"},{"lineNumber":58,"author":{"gitId":"ShenyiCui"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-27"},{"lineNumber":59,"author":{"gitId":"ShenyiCui"},"content":"        List\u003cPerson\u003e lastShownPersonList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-10-27"},{"lineNumber":60,"author":{"gitId":"ShenyiCui"},"content":"        List\u003cTask\u003e lastShownTaskList \u003d model.getFilteredTaskList();","lastModifiedDate":"2022-10-27"},{"lineNumber":61,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":62,"author":{"gitId":"ShenyiCui"},"content":"        if (contactIndex.getZeroBased() \u003e\u003d lastShownPersonList.size()) {","lastModifiedDate":"2022-10-27"},{"lineNumber":63,"author":{"gitId":"ShenyiCui"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-27"},{"lineNumber":64,"author":{"gitId":"ShenyiCui"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":65,"author":{"gitId":"ShenyiCui"},"content":"        if (taskIndex.getZeroBased() \u003e\u003d lastShownTaskList.size()) {","lastModifiedDate":"2022-10-27"},{"lineNumber":66,"author":{"gitId":"ShenyiCui"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-27"},{"lineNumber":67,"author":{"gitId":"ShenyiCui"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":68,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":69,"author":{"gitId":"ShenyiCui"},"content":"        Person selectedPerson \u003d lastShownPersonList.get(contactIndex.getZeroBased());","lastModifiedDate":"2022-10-27"},{"lineNumber":70,"author":{"gitId":"ShenyiCui"},"content":"        Task selectedTask \u003d lastShownTaskList.get(taskIndex.getZeroBased());","lastModifiedDate":"2022-10-27"},{"lineNumber":71,"author":{"gitId":"ShenyiCui"},"content":"        PersonTaskBridge bridge \u003d new PersonTaskBridge(selectedPerson.getId(), selectedTask.getId());","lastModifiedDate":"2022-10-27"},{"lineNumber":72,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":73,"author":{"gitId":"ShenyiCui"},"content":"        if (!model.hasBridge(bridge)) {","lastModifiedDate":"2022-10-27"},{"lineNumber":74,"author":{"gitId":"ShenyiCui"},"content":"            throw new CommandException(MESSAGE_BRIDGE_DOESNT_EXIST);","lastModifiedDate":"2022-10-27"},{"lineNumber":75,"author":{"gitId":"ShenyiCui"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":76,"author":{"gitId":"ShenyiCui"},"content":"        model.deleteBridge(bridge);","lastModifiedDate":"2022-10-27"},{"lineNumber":77,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":78,"author":{"gitId":"ShenyiCui"},"content":"        model.updateFilteredBridgeList(filteredBridge -\u003e model.getFilteredPersonList().stream()","lastModifiedDate":"2022-10-27"},{"lineNumber":79,"author":{"gitId":"ShenyiCui"},"content":"                .anyMatch(person -\u003e person.getId().equals(filteredBridge.getPersonId())));","lastModifiedDate":"2022-10-27"},{"lineNumber":80,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":81,"author":{"gitId":"ShenyiCui"},"content":"        return new CommandResult(String.format(MESSAGE_UNASSIGN_SUCCESS, selectedTask, selectedPerson),","lastModifiedDate":"2022-10-27"},{"lineNumber":82,"author":{"gitId":"ShenyiCui"},"content":"                CommandType.UNASSIGN);","lastModifiedDate":"2022-10-27"},{"lineNumber":83,"author":{"gitId":"ShenyiCui"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":84,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":85,"author":{"gitId":"ShenyiCui"},"content":"    @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":86,"author":{"gitId":"ShenyiCui"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-27"},{"lineNumber":87,"author":{"gitId":"ShenyiCui"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-27"},{"lineNumber":88,"author":{"gitId":"ShenyiCui"},"content":"                || (other instanceof UnassignCommand // instanceof handles nulls","lastModifiedDate":"2022-10-27"},{"lineNumber":89,"author":{"gitId":"ShenyiCui"},"content":"                \u0026\u0026 contactIndex.equals(((UnassignCommand) other).contactIndex)","lastModifiedDate":"2022-10-27"},{"lineNumber":90,"author":{"gitId":"ShenyiCui"},"content":"                \u0026\u0026 taskIndex.equals(((UnassignCommand) other).taskIndex)); // state check","lastModifiedDate":"2022-10-27"},{"lineNumber":91,"author":{"gitId":"ShenyiCui"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":92,"author":{"gitId":"ShenyiCui"},"content":"}","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"ShenyiCui":92}},{"path":"src/main/java/swift/logic/commands/UnmarkTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"santosh3007"},"content":"package swift.logic.commands;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":3,"author":{"gitId":"santosh3007"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"santosh3007"},"content":"import static swift.logic.commands.EditTaskCommand.EditTaskDescriptor;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"santosh3007"},"content":"import static swift.logic.commands.EditTaskCommand.createEditedTask;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"santosh3007"},"content":"import static swift.logic.parser.CliSyntax.PREFIX_TASK_INDEX;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"santosh3007"},"content":"import static swift.model.Model.PREDICATE_SHOW_ALL_TASKS;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"santosh3007"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"santosh3007"},"content":"import java.util.List;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"santosh3007"},"content":"import swift.commons.core.Messages;","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"santosh3007"},"content":"import swift.commons.core.index.Index;","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"santosh3007"},"content":"import swift.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"santosh3007"},"content":"import swift.logic.parser.Prefix;","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"santosh3007"},"content":"import swift.model.Model;","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"santosh3007"},"content":"import swift.model.task.Task;","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"santosh3007"},"content":"/**","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"santosh3007"},"content":" * Marks an existing task in the address book as incomplete.","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"santosh3007"},"content":" */","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"santosh3007"},"content":"public class UnmarkTaskCommand extends Command {","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"santosh3007"},"content":"    public static final String COMMAND_WORD \u003d \"unmark\";","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"santosh3007"},"content":"    public static final ArrayList\u003cPrefix\u003e ARGUMENT_PREFIXES \u003d","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"santosh3007"},"content":"            new ArrayList\u003c\u003e(List.of(PREFIX_TASK_INDEX));","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"santosh3007"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"santosh3007"},"content":"            + \": Marks the task identified by the index number \"","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"santosh3007"},"content":"            + \"used in the displayed task list as incomplete.\\n\"","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"santosh3007"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"santosh3007"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":34,"author":{"gitId":"santosh3007"},"content":"    public static final String MESSAGE_UNMARK_TASK_SUCCESS \u003d \"Marked Task %1$s as incomplete.\";","lastModifiedDate":"2022-10-27"},{"lineNumber":35,"author":{"gitId":"santosh3007"},"content":"    public static final String MESSAGE_TASK_ALREADY_INCOMPLETE \u003d","lastModifiedDate":"2022-10-27"},{"lineNumber":36,"author":{"gitId":"santosh3007"},"content":"            \"This task is already marked as incomplete.\";","lastModifiedDate":"2022-10-27"},{"lineNumber":37,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":38,"author":{"gitId":"santosh3007"},"content":"    private final Index index;","lastModifiedDate":"2022-10-27"},{"lineNumber":39,"author":{"gitId":"santosh3007"},"content":"    private final EditTaskDescriptor unmarkTaskDescriptor;","lastModifiedDate":"2022-10-27"},{"lineNumber":40,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":41,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":42,"author":{"gitId":"santosh3007"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":43,"author":{"gitId":"santosh3007"},"content":"     * @param index of the task in the filtered task list to mark as incomplete","lastModifiedDate":"2022-10-27"},{"lineNumber":44,"author":{"gitId":"santosh3007"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":45,"author":{"gitId":"santosh3007"},"content":"    public UnmarkTaskCommand(Index index) {","lastModifiedDate":"2022-10-27"},{"lineNumber":46,"author":{"gitId":"santosh3007"},"content":"        requireNonNull(index);","lastModifiedDate":"2022-10-27"},{"lineNumber":47,"author":{"gitId":"santosh3007"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-10-27"},{"lineNumber":48,"author":{"gitId":"santosh3007"},"content":"        unmarkTaskDescriptor \u003d new EditTaskDescriptor();","lastModifiedDate":"2022-10-27"},{"lineNumber":49,"author":{"gitId":"santosh3007"},"content":"        unmarkTaskDescriptor.setIsDone(false);","lastModifiedDate":"2022-10-27"},{"lineNumber":50,"author":{"gitId":"santosh3007"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":51,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":52,"author":{"gitId":"santosh3007"},"content":"    @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":53,"author":{"gitId":"santosh3007"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-27"},{"lineNumber":54,"author":{"gitId":"santosh3007"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-27"},{"lineNumber":55,"author":{"gitId":"santosh3007"},"content":"        List\u003cTask\u003e lastShownList \u003d model.getFilteredTaskList();","lastModifiedDate":"2022-10-27"},{"lineNumber":56,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":57,"author":{"gitId":"santosh3007"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-27"},{"lineNumber":58,"author":{"gitId":"santosh3007"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-27"},{"lineNumber":59,"author":{"gitId":"santosh3007"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":60,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":61,"author":{"gitId":"santosh3007"},"content":"        Task taskToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-10-27"},{"lineNumber":62,"author":{"gitId":"santosh3007"},"content":"        Task editedTask \u003d createEditedTask(taskToEdit, unmarkTaskDescriptor);","lastModifiedDate":"2022-10-27"},{"lineNumber":63,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":64,"author":{"gitId":"santosh3007"},"content":"        if (!taskToEdit.isDone()) {","lastModifiedDate":"2022-10-27"},{"lineNumber":65,"author":{"gitId":"santosh3007"},"content":"            throw new CommandException(MESSAGE_TASK_ALREADY_INCOMPLETE);","lastModifiedDate":"2022-10-27"},{"lineNumber":66,"author":{"gitId":"santosh3007"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":67,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":68,"author":{"gitId":"santosh3007"},"content":"        model.setTask(taskToEdit, editedTask);","lastModifiedDate":"2022-10-27"},{"lineNumber":69,"author":{"gitId":"santosh3007"},"content":"        model.updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2022-10-27"},{"lineNumber":70,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":71,"author":{"gitId":"santosh3007"},"content":"        return new CommandResult(String.format(MESSAGE_UNMARK_TASK_SUCCESS, editedTask),","lastModifiedDate":"2022-10-27"},{"lineNumber":72,"author":{"gitId":"santosh3007"},"content":"                CommandType.TASKS);","lastModifiedDate":"2022-10-27"},{"lineNumber":73,"author":{"gitId":"santosh3007"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":74,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":75,"author":{"gitId":"santosh3007"},"content":"    @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":76,"author":{"gitId":"santosh3007"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-27"},{"lineNumber":77,"author":{"gitId":"santosh3007"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-27"},{"lineNumber":78,"author":{"gitId":"santosh3007"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-27"},{"lineNumber":79,"author":{"gitId":"santosh3007"},"content":"            return true;","lastModifiedDate":"2022-10-27"},{"lineNumber":80,"author":{"gitId":"santosh3007"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":81,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":82,"author":{"gitId":"santosh3007"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-27"},{"lineNumber":83,"author":{"gitId":"santosh3007"},"content":"        if (!(other instanceof UnmarkTaskCommand)) {","lastModifiedDate":"2022-10-27"},{"lineNumber":84,"author":{"gitId":"santosh3007"},"content":"            return false;","lastModifiedDate":"2022-10-27"},{"lineNumber":85,"author":{"gitId":"santosh3007"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":86,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":87,"author":{"gitId":"santosh3007"},"content":"        // state check","lastModifiedDate":"2022-10-27"},{"lineNumber":88,"author":{"gitId":"santosh3007"},"content":"        UnmarkTaskCommand e \u003d (UnmarkTaskCommand) other;","lastModifiedDate":"2022-10-27"},{"lineNumber":89,"author":{"gitId":"santosh3007"},"content":"        return index.equals(e.index) \u0026\u0026 unmarkTaskDescriptor.equals(e.unmarkTaskDescriptor);","lastModifiedDate":"2022-10-27"},{"lineNumber":90,"author":{"gitId":"santosh3007"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":91,"author":{"gitId":"santosh3007"},"content":"}","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"santosh3007":90,"peppapighs":1}},{"path":"src/main/java/swift/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.logic.commands.exceptions;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"peppapighs":1,"-":16}},{"path":"src/main/java/swift/logic/parser/AddContactCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.logic.parser;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"peppapighs"},"content":"import static swift.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-01"},{"lineNumber":4,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-10-01"},{"lineNumber":5,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-01"},{"lineNumber":6,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-01"},{"lineNumber":7,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-01"},{"lineNumber":8,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":11,"author":{"gitId":"peppapighs"},"content":"import java.util.UUID;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"ShenyiCui"},"content":"import swift.logic.commands.AddContactCommand;","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"peppapighs"},"content":"import swift.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-01"},{"lineNumber":16,"author":{"gitId":"peppapighs"},"content":"import swift.model.person.Address;","lastModifiedDate":"2022-10-01"},{"lineNumber":17,"author":{"gitId":"peppapighs"},"content":"import swift.model.person.Email;","lastModifiedDate":"2022-10-01"},{"lineNumber":18,"author":{"gitId":"peppapighs"},"content":"import swift.model.person.Person;","lastModifiedDate":"2022-10-01"},{"lineNumber":19,"author":{"gitId":"jasonqiu212"},"content":"import swift.model.person.PersonName;","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"peppapighs"},"content":"import swift.model.person.Phone;","lastModifiedDate":"2022-10-01"},{"lineNumber":21,"author":{"gitId":"peppapighs"},"content":"import swift.model.tag.Tag;","lastModifiedDate":"2022-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"jasonqiu212"},"content":"public class AddContactCommandParser implements Parser\u003cAddContactCommand\u003e {","lastModifiedDate":"2022-10-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"ShenyiCui"},"content":"    public AddContactCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2017-06-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2017-12-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":39,"author":{"gitId":"ShenyiCui"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddContactCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":42,"author":{"gitId":"peppapighs"},"content":"        UUID id \u003d UUID.randomUUID();","lastModifiedDate":"2022-10-15"},{"lineNumber":43,"author":{"gitId":"jasonqiu212"},"content":"        PersonName name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2022-10-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":49,"author":{"gitId":"peppapighs"},"content":"        Person person \u003d new Person(id, name, phone, email, address, tagList);","lastModifiedDate":"2022-10-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":51,"author":{"gitId":"ShenyiCui"},"content":"        return new AddContactCommand(person);","lastModifiedDate":"2022-10-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"ShenyiCui":4,"jasonqiu212":3,"peppapighs":16,"-":39}},{"path":"src/main/java/swift/logic/parser/AddTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.logic.parser;","lastModifiedDate":"2022-10-05"},{"lineNumber":2,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"jasonqiu212"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-26"},{"lineNumber":4,"author":{"gitId":"peppapighs"},"content":"import static swift.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.parser.CliSyntax.PREFIX_CONTACT;","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"jasonqiu212"},"content":"import static swift.logic.parser.CliSyntax.PREFIX_DEADLINE;","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"jasonqiu212"},"content":"import static swift.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2022-10-25"},{"lineNumber":8,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"jasonqiu212"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"peppapighs"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"peppapighs"},"content":"import java.util.UUID;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"peppapighs"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"peppapighs"},"content":"import swift.commons.core.index.Index;","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"peppapighs"},"content":"import swift.logic.commands.AddTaskCommand;","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"peppapighs"},"content":"import swift.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"jasonqiu212"},"content":"import swift.model.task.Deadline;","lastModifiedDate":"2022-10-25"},{"lineNumber":19,"author":{"gitId":"jasonqiu212"},"content":"import swift.model.task.Description;","lastModifiedDate":"2022-10-25"},{"lineNumber":20,"author":{"gitId":"peppapighs"},"content":"import swift.model.task.Task;","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"peppapighs"},"content":"import swift.model.task.TaskName;","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"peppapighs"},"content":"/**","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"peppapighs"},"content":" * Parses input arguments and creates a new AddTaskCommand object","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"peppapighs"},"content":" */","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"peppapighs"},"content":"public class AddTaskCommandParser implements Parser\u003cAddTaskCommand\u003e {","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"peppapighs"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"peppapighs"},"content":"     * Parses the given {@code String} of arguments in the context of the","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"peppapighs"},"content":"     * AddTaskCommand","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"peppapighs"},"content":"     * and returns an AddTaskCommand object for execution.","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"peppapighs"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"peppapighs"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"peppapighs"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"peppapighs"},"content":"    public AddTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"jasonqiu212"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-10-26"},{"lineNumber":37,"author":{"gitId":"jasonqiu212"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(","lastModifiedDate":"2022-10-26"},{"lineNumber":38,"author":{"gitId":"jasonqiu212"},"content":"                args, PREFIX_NAME, PREFIX_DESCRIPTION, PREFIX_DEADLINE, PREFIX_CONTACT);","lastModifiedDate":"2022-10-26"},{"lineNumber":39,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"peppapighs"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME) || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-10-15"},{"lineNumber":41,"author":{"gitId":"peppapighs"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"peppapighs"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"peppapighs"},"content":"        TaskName name \u003d ParserUtil.parseTaskName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":46,"author":{"gitId":"jasonqiu212"},"content":"        Optional\u003cDescription\u003e description \u003d Optional.empty();","lastModifiedDate":"2022-10-26"},{"lineNumber":47,"author":{"gitId":"jasonqiu212"},"content":"        if (argMultimap.getValue(PREFIX_DESCRIPTION).isPresent()) {","lastModifiedDate":"2022-10-25"},{"lineNumber":48,"author":{"gitId":"jasonqiu212"},"content":"            description \u003d Optional.of(ParserUtil.parseDescription(argMultimap.getValue(PREFIX_DESCRIPTION).get()));","lastModifiedDate":"2022-10-26"},{"lineNumber":49,"author":{"gitId":"jasonqiu212"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":50,"author":{"gitId":"jasonqiu212"},"content":"        Optional\u003cDeadline\u003e deadline \u003d Optional.empty();","lastModifiedDate":"2022-10-26"},{"lineNumber":51,"author":{"gitId":"jasonqiu212"},"content":"        if (argMultimap.getValue(PREFIX_DEADLINE).isPresent()) {","lastModifiedDate":"2022-10-25"},{"lineNumber":52,"author":{"gitId":"jasonqiu212"},"content":"            deadline \u003d Optional.of(ParserUtil.parseDeadline((argMultimap.getValue(PREFIX_DEADLINE).get())));","lastModifiedDate":"2022-10-26"},{"lineNumber":53,"author":{"gitId":"jasonqiu212"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":54,"author":{"gitId":"peppapighs"},"content":"        Set\u003cIndex\u003e indices \u003d ParserUtil.parseIndices(argMultimap.getAllValues(PREFIX_CONTACT));","lastModifiedDate":"2022-10-15"},{"lineNumber":55,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":56,"author":{"gitId":"jasonqiu212"},"content":"        Task task \u003d new Task(UUID.randomUUID(), name, description, deadline);","lastModifiedDate":"2022-10-25"},{"lineNumber":57,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":58,"author":{"gitId":"peppapighs"},"content":"        return new AddTaskCommand(task, indices);","lastModifiedDate":"2022-10-16"},{"lineNumber":59,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":60,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":61,"author":{"gitId":"peppapighs"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":62,"author":{"gitId":"peppapighs"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values","lastModifiedDate":"2022-10-05"},{"lineNumber":63,"author":{"gitId":"peppapighs"},"content":"     * in the given","lastModifiedDate":"2022-10-05"},{"lineNumber":64,"author":{"gitId":"peppapighs"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-10-05"},{"lineNumber":65,"author":{"gitId":"peppapighs"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":66,"author":{"gitId":"peppapighs"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-10-05"},{"lineNumber":67,"author":{"gitId":"peppapighs"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-10-05"},{"lineNumber":68,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":69,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":70,"author":{"gitId":"peppapighs"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"jasonqiu212":18,"peppapighs":52}},{"path":"src/main/java/swift/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.logic.parser;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"peppapighs"},"content":"import static swift.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-01"},{"lineNumber":4,"author":{"gitId":"peppapighs"},"content":"import static swift.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2022-10-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"yunruu"},"content":"import swift.logic.commands.AddContactCommand;","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"yunruu"},"content":"import swift.logic.commands.AddTaskCommand;","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"peppapighs"},"content":"import swift.logic.commands.AssignCommand;","lastModifiedDate":"2022-10-25"},{"lineNumber":12,"author":{"gitId":"yunruu"},"content":"import swift.logic.commands.ClearCommand;","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"yunruu"},"content":"import swift.logic.commands.Command;","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"yunruu"},"content":"import swift.logic.commands.DeleteContactCommand;","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"yunruu"},"content":"import swift.logic.commands.DeleteTaskCommand;","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"yunruu"},"content":"import swift.logic.commands.EditContactCommand;","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"yunruu"},"content":"import swift.logic.commands.EditTaskCommand;","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"yunruu"},"content":"import swift.logic.commands.ExitCommand;","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"yunruu"},"content":"import swift.logic.commands.FindContactCommand;","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"yunruu"},"content":"import swift.logic.commands.FindTaskCommand;","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"yunruu"},"content":"import swift.logic.commands.HelpCommand;","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"yunruu"},"content":"import swift.logic.commands.ListContactCommand;","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"yunruu"},"content":"import swift.logic.commands.ListTaskCommand;","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"santosh3007"},"content":"import swift.logic.commands.MarkTaskCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"yunruu"},"content":"import swift.logic.commands.SelectContactCommand;","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"yunruu"},"content":"import swift.logic.commands.SelectTaskCommand;","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"ShenyiCui"},"content":"import swift.logic.commands.UnassignCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"santosh3007"},"content":"import swift.logic.commands.UnmarkTaskCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"peppapighs"},"content":"import swift.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"ShenyiCui"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"ShenyiCui"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"ShenyiCui"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE)","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"ShenyiCui"},"content":"            );","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"ShenyiCui"},"content":"        case AddContactCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-06"},{"lineNumber":59,"author":{"gitId":"jasonqiu212"},"content":"            return new AddContactCommandParser().parse(arguments);","lastModifiedDate":"2022-10-21"},{"lineNumber":60,"author":{"gitId":"yunruu"},"content":"        case EditContactCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"yunruu"},"content":"            return new EditContactCommandParser().parse(arguments);","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"jasonqiu212"},"content":"        case DeleteContactCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-21"},{"lineNumber":63,"author":{"gitId":"jasonqiu212"},"content":"            return new DeleteContactCommandParser().parse(arguments);","lastModifiedDate":"2022-10-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"jasonqiu212"},"content":"        case FindContactCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"jasonqiu212"},"content":"            return new FindContactCommandParser().parse(arguments);","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"ShenyiCui"},"content":"        case SelectContactCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-22"},{"lineNumber":69,"author":{"gitId":"ShenyiCui"},"content":"            return new SelectContactCommandParser().parse(arguments);","lastModifiedDate":"2022-10-22"},{"lineNumber":70,"author":{"gitId":"peppapighs"},"content":"        case ListContactCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-08"},{"lineNumber":71,"author":{"gitId":"peppapighs"},"content":"            return new ListContactCommand();","lastModifiedDate":"2022-10-08"},{"lineNumber":72,"author":{"gitId":"yunruu"},"content":"        case ListTaskCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-11"},{"lineNumber":73,"author":{"gitId":"yunruu"},"content":"            return new ListTaskCommand();","lastModifiedDate":"2022-10-11"},{"lineNumber":74,"author":{"gitId":"peppapighs"},"content":"        case AddTaskCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-05"},{"lineNumber":75,"author":{"gitId":"peppapighs"},"content":"            return new AddTaskCommandParser().parse(arguments);","lastModifiedDate":"2022-10-05"},{"lineNumber":76,"author":{"gitId":"santosh3007"},"content":"        case EditTaskCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-12"},{"lineNumber":77,"author":{"gitId":"santosh3007"},"content":"            return new EditTaskCommandParser().parse(arguments);","lastModifiedDate":"2022-10-12"},{"lineNumber":78,"author":{"gitId":"ShenyiCui"},"content":"        case DeleteTaskCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"ShenyiCui"},"content":"            return new DeleteTaskCommandParser().parse(arguments);","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"jasonqiu212"},"content":"        case FindTaskCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"jasonqiu212"},"content":"            return new FindTaskCommandParser().parse(arguments);","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"yunruu"},"content":"        case SelectTaskCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-24"},{"lineNumber":83,"author":{"gitId":"yunruu"},"content":"            return new SelectTaskCommandParser().parse(arguments);","lastModifiedDate":"2022-10-24"},{"lineNumber":84,"author":{"gitId":"santosh3007"},"content":"        case MarkTaskCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-27"},{"lineNumber":85,"author":{"gitId":"santosh3007"},"content":"            return new MarkTaskCommandParser().parse(arguments);","lastModifiedDate":"2022-10-27"},{"lineNumber":86,"author":{"gitId":"santosh3007"},"content":"        case UnmarkTaskCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-27"},{"lineNumber":87,"author":{"gitId":"santosh3007"},"content":"            return new UnmarkTaskCommandParser().parse(arguments);","lastModifiedDate":"2022-10-27"},{"lineNumber":88,"author":{"gitId":"peppapighs"},"content":"        case AssignCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-25"},{"lineNumber":89,"author":{"gitId":"peppapighs"},"content":"            return new AssignCommandParser().parse(arguments);","lastModifiedDate":"2022-10-25"},{"lineNumber":90,"author":{"gitId":"ShenyiCui"},"content":"        case UnassignCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-27"},{"lineNumber":91,"author":{"gitId":"ShenyiCui"},"content":"            return new UnassignCommandParser().parse(arguments);","lastModifiedDate":"2022-10-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ShenyiCui":13,"jasonqiu212":7,"santosh3007":8,"peppapighs":11,"-":39,"yunruu":22}},{"path":"src/main/java/swift/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.logic.parser;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"peppapighs":1,"-":59}},{"path":"src/main/java/swift/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.logic.parser;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *    in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return           ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return           List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"santosh3007"},"content":"     * {@code argsString}. Preamble is optional.","lastModifiedDate":"2022-10-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @return                ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"santosh3007"},"content":"        // Insert a PrefixPosition to represent the preamble if preamble exists","lastModifiedDate":"2022-10-26"},{"lineNumber":93,"author":{"gitId":"santosh3007"},"content":"        if (prefixPositions.isEmpty() || prefixPositions.get(0).getStartPosition() !\u003d 0) {","lastModifiedDate":"2022-10-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"santosh3007"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                                        PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                                        PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private int startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"santosh3007":4,"peppapighs":1,"-":145}},{"path":"src/main/java/swift/logic/parser/AssignCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.logic.parser;","lastModifiedDate":"2022-10-25"},{"lineNumber":2,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":3,"author":{"gitId":"peppapighs"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"peppapighs"},"content":"import static swift.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-25"},{"lineNumber":5,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.parser.CliSyntax.PREFIX_CONTACT;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.parser.CliSyntax.PREFIX_TASK;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"peppapighs"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":10,"author":{"gitId":"peppapighs"},"content":"import swift.commons.core.index.Index;","lastModifiedDate":"2022-10-25"},{"lineNumber":11,"author":{"gitId":"peppapighs"},"content":"import swift.logic.commands.AssignCommand;","lastModifiedDate":"2022-10-25"},{"lineNumber":12,"author":{"gitId":"peppapighs"},"content":"import swift.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-25"},{"lineNumber":13,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":14,"author":{"gitId":"peppapighs"},"content":"/**","lastModifiedDate":"2022-10-25"},{"lineNumber":15,"author":{"gitId":"peppapighs"},"content":" * Parses input arguments and creates a new AssignCommand object","lastModifiedDate":"2022-10-25"},{"lineNumber":16,"author":{"gitId":"peppapighs"},"content":" */","lastModifiedDate":"2022-10-25"},{"lineNumber":17,"author":{"gitId":"peppapighs"},"content":"public class AssignCommandParser implements Parser\u003cAssignCommand\u003e {","lastModifiedDate":"2022-10-25"},{"lineNumber":18,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":19,"author":{"gitId":"peppapighs"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":20,"author":{"gitId":"peppapighs"},"content":"     * Parses the given {@code String} of arguments in the context of the","lastModifiedDate":"2022-10-25"},{"lineNumber":21,"author":{"gitId":"peppapighs"},"content":"     * AssignCommand","lastModifiedDate":"2022-10-25"},{"lineNumber":22,"author":{"gitId":"peppapighs"},"content":"     * and returns a AssignCommand object for execution.","lastModifiedDate":"2022-10-25"},{"lineNumber":23,"author":{"gitId":"peppapighs"},"content":"     *","lastModifiedDate":"2022-10-25"},{"lineNumber":24,"author":{"gitId":"peppapighs"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-25"},{"lineNumber":25,"author":{"gitId":"peppapighs"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":26,"author":{"gitId":"peppapighs"},"content":"    public AssignCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-25"},{"lineNumber":27,"author":{"gitId":"peppapighs"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"peppapighs"},"content":"        System.out.println(args);","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"peppapighs"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"peppapighs"},"content":"                args, PREFIX_CONTACT, PREFIX_TASK);","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"peppapighs"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_CONTACT, PREFIX_TASK) || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"peppapighs"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AssignCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-27"},{"lineNumber":34,"author":{"gitId":"peppapighs"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":35,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":36,"author":{"gitId":"peppapighs"},"content":"        try {","lastModifiedDate":"2022-10-27"},{"lineNumber":37,"author":{"gitId":"peppapighs"},"content":"            Index contactIndex \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_CONTACT).get());","lastModifiedDate":"2022-10-27"},{"lineNumber":38,"author":{"gitId":"peppapighs"},"content":"            Index taskIndex \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_TASK).get());","lastModifiedDate":"2022-10-27"},{"lineNumber":39,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":40,"author":{"gitId":"peppapighs"},"content":"            return new AssignCommand(contactIndex, taskIndex);","lastModifiedDate":"2022-10-25"},{"lineNumber":41,"author":{"gitId":"peppapighs"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-10-25"},{"lineNumber":42,"author":{"gitId":"peppapighs"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-25"},{"lineNumber":43,"author":{"gitId":"peppapighs"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, AssignCommand.MESSAGE_USAGE), e);","lastModifiedDate":"2022-10-25"},{"lineNumber":44,"author":{"gitId":"peppapighs"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":45,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":46,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":47,"author":{"gitId":"peppapighs"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":48,"author":{"gitId":"peppapighs"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values","lastModifiedDate":"2022-10-27"},{"lineNumber":49,"author":{"gitId":"peppapighs"},"content":"     * in the given","lastModifiedDate":"2022-10-27"},{"lineNumber":50,"author":{"gitId":"peppapighs"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-10-27"},{"lineNumber":51,"author":{"gitId":"peppapighs"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":52,"author":{"gitId":"peppapighs"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-10-27"},{"lineNumber":53,"author":{"gitId":"peppapighs"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-10-27"},{"lineNumber":54,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":55,"author":{"gitId":"peppapighs"},"content":"}","lastModifiedDate":"2022-10-25"}],"authorContributionMap":{"peppapighs":55}},{"path":"src/main/java/swift/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.logic.parser;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"santosh3007"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\", \"name\");","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"santosh3007"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\", \"phone\");","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"santosh3007"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\", \"email\");","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"santosh3007"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\", \"address\");","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"santosh3007"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\", \"tag\");","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"peppapighs"},"content":"    public static final Prefix PREFIX_TASK \u003d new Prefix(\"t/\", \"task_index\");","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"santosh3007"},"content":"    public static final Prefix PREFIX_CONTACT \u003d new Prefix(\"c/\", \"contact_index\");","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"santosh3007"},"content":"    public static final Prefix PREFIX_DESCRIPTION \u003d new Prefix(\"d/\", \"description\");","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"santosh3007"},"content":"    public static final Prefix PREFIX_DEADLINE \u003d new Prefix(\"dl/\", \"deadline\");","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"santosh3007"},"content":"    // PREFIX_KEYWORD is not a prefix, but a placeholder for the keyword argument","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"santosh3007"},"content":"    public static final Prefix PREFIX_KEYWORD \u003d new Prefix(\"keyword\", \"keyword\");","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"santosh3007"},"content":"    public static final Prefix PREFIX_CONTACT_INDEX \u003d new Prefix(\"\", \"contact_index\");","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"santosh3007"},"content":"    public static final Prefix PREFIX_TASK_INDEX \u003d new Prefix(\"\", \"task_index\");","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"santosh3007":12,"peppapighs":2,"-":8}},{"path":"src/main/java/swift/logic/parser/DeleteContactCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.logic.parser;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"peppapighs"},"content":"import static swift.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"peppapighs"},"content":"import swift.commons.core.index.Index;","lastModifiedDate":"2022-10-01"},{"lineNumber":6,"author":{"gitId":"jasonqiu212"},"content":"import swift.logic.commands.DeleteContactCommand;","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"peppapighs"},"content":"import swift.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"jasonqiu212"},"content":"public class DeleteContactCommandParser implements Parser\u003cDeleteContactCommand\u003e {","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"jasonqiu212"},"content":"    public DeleteContactCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"jasonqiu212"},"content":"            return new DeleteContactCommand(index);","lastModifiedDate":"2022-10-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"jasonqiu212"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteContactCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"jasonqiu212":5,"peppapighs":4,"-":20}},{"path":"src/main/java/swift/logic/parser/DeleteTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ShenyiCui"},"content":"package swift.logic.parser;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"ShenyiCui"},"content":"import static swift.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"ShenyiCui"},"content":"import swift.commons.core.index.Index;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"ShenyiCui"},"content":"import swift.logic.commands.DeleteTaskCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"ShenyiCui"},"content":"import swift.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"ShenyiCui"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"ShenyiCui"},"content":" * Parses input arguments and creates a new DeleteTaskCommand object","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"ShenyiCui"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"ShenyiCui"},"content":"public class DeleteTaskCommandParser implements Parser\u003cDeleteTaskCommand\u003e {","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"ShenyiCui"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"ShenyiCui"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteTaskCommand","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"ShenyiCui"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"ShenyiCui"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"ShenyiCui"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"ShenyiCui"},"content":"    public DeleteTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"ShenyiCui"},"content":"        try {","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"ShenyiCui"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"ShenyiCui"},"content":"            return new DeleteTaskCommand(index);","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"ShenyiCui"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"ShenyiCui"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"ShenyiCui"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteTaskCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"ShenyiCui"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"ShenyiCui"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"ShenyiCui"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"ShenyiCui":28}},{"path":"src/main/java/swift/logic/parser/EditContactCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.logic.parser;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"peppapighs"},"content":"import static swift.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-01"},{"lineNumber":5,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-10-01"},{"lineNumber":6,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-01"},{"lineNumber":7,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-01"},{"lineNumber":8,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-01"},{"lineNumber":9,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"peppapighs"},"content":"import swift.commons.core.index.Index;","lastModifiedDate":"2022-10-01"},{"lineNumber":17,"author":{"gitId":"yunruu"},"content":"import swift.logic.commands.EditContactCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"yunruu"},"content":"import swift.logic.commands.EditContactCommand.EditPersonDescriptor;","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"peppapighs"},"content":"import swift.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-01"},{"lineNumber":20,"author":{"gitId":"peppapighs"},"content":"import swift.model.tag.Tag;","lastModifiedDate":"2022-10-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"yunruu"},"content":"public class EditContactCommandParser implements Parser\u003cEditContactCommand\u003e {","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"yunruu"},"content":"    public EditContactCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2017-06-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":42,"author":{"gitId":"yunruu"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"yunruu"},"content":"                EditContactCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":62,"author":{"gitId":"yunruu"},"content":"            throw new ParseException(EditContactCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":65,"author":{"gitId":"yunruu"},"content":"        return new EditContactCommand(index, editPersonDescriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"peppapighs":10,"-":65,"yunruu":8}},{"path":"src/main/java/swift/logic/parser/EditTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"santosh3007"},"content":"package swift.logic.parser;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"santosh3007"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"santosh3007"},"content":"import static swift.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"santosh3007"},"content":"import static swift.logic.parser.CliSyntax.PREFIX_CONTACT;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"jasonqiu212"},"content":"import static swift.logic.parser.CliSyntax.PREFIX_DEADLINE;","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"jasonqiu212"},"content":"import static swift.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"santosh3007"},"content":"import static swift.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"santosh3007"},"content":"import swift.commons.core.index.Index;","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"santosh3007"},"content":"import swift.logic.commands.EditTaskCommand;","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"santosh3007"},"content":"import swift.logic.commands.EditTaskCommand.EditTaskDescriptor;","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"santosh3007"},"content":"import swift.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"santosh3007"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"santosh3007"},"content":" * Parses input arguments and creates a new EditTaskCommand object","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"santosh3007"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"santosh3007"},"content":"public class EditTaskCommandParser implements Parser\u003cEditTaskCommand\u003e {","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"santosh3007"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"santosh3007"},"content":"     * Parses the given {@code String} of arguments in the context of the EditTaskCommand","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"santosh3007"},"content":"     * and returns an EditTaskCommand object for execution.","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"santosh3007"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"santosh3007"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"santosh3007"},"content":"    public EditTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"santosh3007"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"santosh3007"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"jasonqiu212"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_DESCRIPTION, PREFIX_DEADLINE, PREFIX_CONTACT);","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"santosh3007"},"content":"        Index index;","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"santosh3007"},"content":"        try {","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"santosh3007"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"santosh3007"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"santosh3007"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditTaskCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"santosh3007"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"santosh3007"},"content":"        EditTaskDescriptor editTaskDescriptor \u003d new EditTaskDescriptor();","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"santosh3007"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"santosh3007"},"content":"            editTaskDescriptor.setTaskName(ParserUtil.parseTaskName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"santosh3007"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"jasonqiu212"},"content":"        if (argMultimap.getValue(PREFIX_DESCRIPTION).isPresent()) {","lastModifiedDate":"2022-10-26"},{"lineNumber":43,"author":{"gitId":"jasonqiu212"},"content":"            editTaskDescriptor.setDescription(ParserUtil.parseDescription(","lastModifiedDate":"2022-10-26"},{"lineNumber":44,"author":{"gitId":"jasonqiu212"},"content":"                    argMultimap.getValue(PREFIX_DESCRIPTION).get()));","lastModifiedDate":"2022-10-26"},{"lineNumber":45,"author":{"gitId":"jasonqiu212"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":46,"author":{"gitId":"jasonqiu212"},"content":"        if (argMultimap.getValue(PREFIX_DEADLINE).isPresent()) {","lastModifiedDate":"2022-10-26"},{"lineNumber":47,"author":{"gitId":"jasonqiu212"},"content":"            editTaskDescriptor.setDeadline(ParserUtil.parseDeadline(argMultimap.getValue(PREFIX_DEADLINE).get()));","lastModifiedDate":"2022-10-26"},{"lineNumber":48,"author":{"gitId":"jasonqiu212"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":49,"author":{"gitId":"santosh3007"},"content":"        if (argMultimap.getValue(PREFIX_CONTACT).isPresent()) {","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"santosh3007"},"content":"            editTaskDescriptor.setContactIndex(ParserUtil.parseIndex(argMultimap.getValue(PREFIX_CONTACT).get()));","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"santosh3007"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"santosh3007"},"content":"        if (!editTaskDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"santosh3007"},"content":"            throw new ParseException(EditTaskCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"santosh3007"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"santosh3007"},"content":"        return new EditTaskCommand(index, editTaskDescriptor);","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"santosh3007"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"santosh3007"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"jasonqiu212":10,"santosh3007":50}},{"path":"src/main/java/swift/logic/parser/FindContactCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.logic.parser;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"peppapighs"},"content":"import static swift.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"jasonqiu212"},"content":"import swift.logic.commands.FindContactCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"peppapighs"},"content":"import swift.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-01"},{"lineNumber":9,"author":{"gitId":"jasonqiu212"},"content":"import swift.model.person.PersonNameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"jasonqiu212"},"content":"public class FindContactCommandParser implements Parser\u003cFindContactCommand\u003e {","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"jasonqiu212"},"content":"    public FindContactCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"jasonqiu212"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindContactCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"jasonqiu212"},"content":"        return new FindContactCommand(new PersonNameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"jasonqiu212":6,"peppapighs":3,"-":24}},{"path":"src/main/java/swift/logic/parser/FindTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jasonqiu212"},"content":"package swift.logic.parser;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"jasonqiu212"},"content":"import static swift.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"jasonqiu212"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"jasonqiu212"},"content":"import swift.logic.commands.FindTaskCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"jasonqiu212"},"content":"import swift.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"jasonqiu212"},"content":"import swift.model.task.TaskNameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"jasonqiu212"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"jasonqiu212"},"content":" * Parses input arguments and creates a new FindTaskCommand object","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"jasonqiu212"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"jasonqiu212"},"content":"public class FindTaskCommandParser implements Parser\u003cFindTaskCommand\u003e {","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"jasonqiu212"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"jasonqiu212"},"content":"     * Parses the given {@code String} of arguments in the context of the FindTaskCommand","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"jasonqiu212"},"content":"     * and returns a FindTaskCommand object for execution.","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"jasonqiu212"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"jasonqiu212"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"jasonqiu212"},"content":"    public FindTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"jasonqiu212"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"jasonqiu212"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"jasonqiu212"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"jasonqiu212"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"jasonqiu212"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"jasonqiu212"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"jasonqiu212"},"content":"        return new FindTaskCommand(new TaskNameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"jasonqiu212"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"jasonqiu212"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"jasonqiu212":33}},{"path":"src/main/java/swift/logic/parser/MarkTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"santosh3007"},"content":"package swift.logic.parser;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":3,"author":{"gitId":"santosh3007"},"content":"import static swift.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"santosh3007"},"content":"import swift.commons.core.index.Index;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"santosh3007"},"content":"import swift.logic.commands.MarkTaskCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"santosh3007"},"content":"import swift.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"santosh3007"},"content":"/**","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"santosh3007"},"content":" * Parses input arguments and creates a new MarkTaskCommand object","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"santosh3007"},"content":" */","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"santosh3007"},"content":"public class MarkTaskCommandParser {","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"santosh3007"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"santosh3007"},"content":"     * Parses the given {@code String} of arguments in the context of the MarkTaskCommand and","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"santosh3007"},"content":"     * returns a MarkTaskCommand object for execution.","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"santosh3007"},"content":"     *","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"santosh3007"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"santosh3007"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"santosh3007"},"content":"    public MarkTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"santosh3007"},"content":"        try {","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"santosh3007"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"santosh3007"},"content":"            return new MarkTaskCommand(index);","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"santosh3007"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"santosh3007"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"santosh3007"},"content":"                    MarkTaskCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"santosh3007"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"santosh3007"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"santosh3007"},"content":"}","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"santosh3007":28}},{"path":"src/main/java/swift/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.logic.parser;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"peppapighs"},"content":"import swift.logic.commands.Command;","lastModifiedDate":"2022-10-01"},{"lineNumber":4,"author":{"gitId":"peppapighs"},"content":"import swift.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"peppapighs":3,"-":13}},{"path":"src/main/java/swift/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.logic.parser;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"peppapighs"},"content":"import swift.commons.core.index.Index;","lastModifiedDate":"2022-10-01"},{"lineNumber":10,"author":{"gitId":"peppapighs"},"content":"import swift.commons.util.StringUtil;","lastModifiedDate":"2022-10-01"},{"lineNumber":11,"author":{"gitId":"peppapighs"},"content":"import swift.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-01"},{"lineNumber":12,"author":{"gitId":"peppapighs"},"content":"import swift.model.person.Address;","lastModifiedDate":"2022-10-01"},{"lineNumber":13,"author":{"gitId":"peppapighs"},"content":"import swift.model.person.Email;","lastModifiedDate":"2022-10-01"},{"lineNumber":14,"author":{"gitId":"jasonqiu212"},"content":"import swift.model.person.PersonName;","lastModifiedDate":"2022-10-24"},{"lineNumber":15,"author":{"gitId":"peppapighs"},"content":"import swift.model.person.Phone;","lastModifiedDate":"2022-10-01"},{"lineNumber":16,"author":{"gitId":"peppapighs"},"content":"import swift.model.tag.Tag;","lastModifiedDate":"2022-10-01"},{"lineNumber":17,"author":{"gitId":"jasonqiu212"},"content":"import swift.model.task.Deadline;","lastModifiedDate":"2022-10-25"},{"lineNumber":18,"author":{"gitId":"jasonqiu212"},"content":"import swift.model.task.Description;","lastModifiedDate":"2022-10-25"},{"lineNumber":19,"author":{"gitId":"peppapighs"},"content":"import swift.model.task.TaskName;","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":31,"author":{"gitId":"peppapighs"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":42,"author":{"gitId":"peppapighs"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":43,"author":{"gitId":"peppapighs"},"content":"     * Parses {@code Collection\u003cString\u003e oneBasedIndices} into a {@code Set\u003cIndex\u003e}.","lastModifiedDate":"2022-10-15"},{"lineNumber":44,"author":{"gitId":"peppapighs"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":45,"author":{"gitId":"peppapighs"},"content":"    public static Set\u003cIndex\u003e parseIndices(Collection\u003cString\u003e oneBasedIndices) throws ParseException {","lastModifiedDate":"2022-10-15"},{"lineNumber":46,"author":{"gitId":"peppapighs"},"content":"        requireNonNull(oneBasedIndices);","lastModifiedDate":"2022-10-15"},{"lineNumber":47,"author":{"gitId":"peppapighs"},"content":"        final Set\u003cIndex\u003e indexSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-15"},{"lineNumber":48,"author":{"gitId":"peppapighs"},"content":"        for (String oneBasedIndex : oneBasedIndices) {","lastModifiedDate":"2022-10-15"},{"lineNumber":49,"author":{"gitId":"peppapighs"},"content":"            indexSet.add(parseIndex(oneBasedIndex));","lastModifiedDate":"2022-10-15"},{"lineNumber":50,"author":{"gitId":"peppapighs"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":51,"author":{"gitId":"peppapighs"},"content":"        return indexSet;","lastModifiedDate":"2022-10-15"},{"lineNumber":52,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":53,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":60,"author":{"gitId":"jasonqiu212"},"content":"    public static PersonName parseName(String name) throws ParseException {","lastModifiedDate":"2022-10-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":63,"author":{"gitId":"jasonqiu212"},"content":"        if (!PersonName.isValidName(trimmedName)) {","lastModifiedDate":"2022-10-24"},{"lineNumber":64,"author":{"gitId":"jasonqiu212"},"content":"            throw new ParseException(PersonName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"jasonqiu212"},"content":"        return new PersonName(trimmedName);","lastModifiedDate":"2022-10-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":140,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":141,"author":{"gitId":"peppapighs"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":142,"author":{"gitId":"peppapighs"},"content":"     * Parses a {@code String name} into a {@code TaskName}.","lastModifiedDate":"2022-10-05"},{"lineNumber":143,"author":{"gitId":"peppapighs"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-05"},{"lineNumber":144,"author":{"gitId":"peppapighs"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":145,"author":{"gitId":"peppapighs"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2022-10-05"},{"lineNumber":146,"author":{"gitId":"peppapighs"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":147,"author":{"gitId":"peppapighs"},"content":"    public static TaskName parseTaskName(String name) throws ParseException {","lastModifiedDate":"2022-10-05"},{"lineNumber":148,"author":{"gitId":"peppapighs"},"content":"        requireNonNull(name);","lastModifiedDate":"2022-10-05"},{"lineNumber":149,"author":{"gitId":"peppapighs"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2022-10-05"},{"lineNumber":150,"author":{"gitId":"peppapighs"},"content":"        if (!TaskName.isValidName(trimmedName)) {","lastModifiedDate":"2022-10-05"},{"lineNumber":151,"author":{"gitId":"jasonqiu212"},"content":"            throw new ParseException(TaskName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-25"},{"lineNumber":152,"author":{"gitId":"peppapighs"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":153,"author":{"gitId":"peppapighs"},"content":"        return new TaskName(trimmedName);","lastModifiedDate":"2022-10-05"},{"lineNumber":154,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":155,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":156,"author":{"gitId":"jasonqiu212"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":157,"author":{"gitId":"jasonqiu212"},"content":"     * Parses a {@code String description} into a {@code Description}.","lastModifiedDate":"2022-10-25"},{"lineNumber":158,"author":{"gitId":"jasonqiu212"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-25"},{"lineNumber":159,"author":{"gitId":"jasonqiu212"},"content":"     *","lastModifiedDate":"2022-10-25"},{"lineNumber":160,"author":{"gitId":"jasonqiu212"},"content":"     * @throws ParseException if the given {@code description} is invalid.","lastModifiedDate":"2022-10-25"},{"lineNumber":161,"author":{"gitId":"jasonqiu212"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":162,"author":{"gitId":"jasonqiu212"},"content":"    public static Description parseDescription(String description) throws ParseException {","lastModifiedDate":"2022-10-25"},{"lineNumber":163,"author":{"gitId":"jasonqiu212"},"content":"        requireNonNull(description);","lastModifiedDate":"2022-10-25"},{"lineNumber":164,"author":{"gitId":"jasonqiu212"},"content":"        String trimmedDescription \u003d description.trim();","lastModifiedDate":"2022-10-25"},{"lineNumber":165,"author":{"gitId":"jasonqiu212"},"content":"        if (!Description.isValidDescription(trimmedDescription)) {","lastModifiedDate":"2022-10-25"},{"lineNumber":166,"author":{"gitId":"jasonqiu212"},"content":"            throw new ParseException(Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-25"},{"lineNumber":167,"author":{"gitId":"jasonqiu212"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":168,"author":{"gitId":"jasonqiu212"},"content":"        return new Description(trimmedDescription);","lastModifiedDate":"2022-10-25"},{"lineNumber":169,"author":{"gitId":"jasonqiu212"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":170,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":171,"author":{"gitId":"jasonqiu212"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":172,"author":{"gitId":"jasonqiu212"},"content":"     * Parses a {@code String deadline} into a {@code Deadline}.","lastModifiedDate":"2022-10-25"},{"lineNumber":173,"author":{"gitId":"jasonqiu212"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-25"},{"lineNumber":174,"author":{"gitId":"jasonqiu212"},"content":"     *","lastModifiedDate":"2022-10-25"},{"lineNumber":175,"author":{"gitId":"jasonqiu212"},"content":"     * @throws ParseException if the given {@code deadline} is invalid.","lastModifiedDate":"2022-10-25"},{"lineNumber":176,"author":{"gitId":"jasonqiu212"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":177,"author":{"gitId":"jasonqiu212"},"content":"    public static Deadline parseDeadline(String deadline) throws ParseException {","lastModifiedDate":"2022-10-25"},{"lineNumber":178,"author":{"gitId":"jasonqiu212"},"content":"        requireNonNull(deadline);","lastModifiedDate":"2022-10-25"},{"lineNumber":179,"author":{"gitId":"jasonqiu212"},"content":"        String trimmedDeadline \u003d deadline.trim();","lastModifiedDate":"2022-10-25"},{"lineNumber":180,"author":{"gitId":"jasonqiu212"},"content":"        if (!Deadline.isValidDeadline(trimmedDeadline)) {","lastModifiedDate":"2022-10-25"},{"lineNumber":181,"author":{"gitId":"jasonqiu212"},"content":"            throw new ParseException(Deadline.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-25"},{"lineNumber":182,"author":{"gitId":"jasonqiu212"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":183,"author":{"gitId":"jasonqiu212"},"content":"        return new Deadline(trimmedDeadline);","lastModifiedDate":"2022-10-25"},{"lineNumber":184,"author":{"gitId":"jasonqiu212"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":185,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"jasonqiu212":39,"peppapighs":36,"-":111}},{"path":"src/main/java/swift/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.logic.parser;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * E.g. \u0027t/\u0027 in \u0027add James t/ friend\u0027.","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"santosh3007"},"content":"    private String userPrompt;","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public Prefix(String prefix) {","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"santosh3007"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"santosh3007"},"content":"     * Constructs a {@code Prefix} with given prefix and user prompt.","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"santosh3007"},"content":"     * @param prefix Prefix","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"santosh3007"},"content":"     * @param userPrompt User prompt for prefix","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"santosh3007"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"santosh3007"},"content":"    public Prefix(String prefix, String userPrompt) {","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"santosh3007"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"santosh3007"},"content":"        this.userPrompt \u003d userPrompt;","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"santosh3007"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return getPrefix();","lastModifiedDate":"2017-05-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":33,"author":{"gitId":"santosh3007"},"content":"    public String getUserPrompt() {","lastModifiedDate":"2022-10-26"},{"lineNumber":34,"author":{"gitId":"santosh3007"},"content":"        return userPrompt \u003d\u003d null ? \"\" : \"\u003c\" + userPrompt + \"\u003e\";","lastModifiedDate":"2022-10-26"},{"lineNumber":35,"author":{"gitId":"santosh3007"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":36,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Prefix)) {","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) obj;","lastModifiedDate":"2017-03-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return otherPrefix.getPrefix().equals(getPrefix());","lastModifiedDate":"2017-03-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"santosh3007":15,"peppapighs":1,"-":38}},{"path":"src/main/java/swift/logic/parser/SelectContactCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ShenyiCui"},"content":"package swift.logic.parser;","lastModifiedDate":"2022-10-22"},{"lineNumber":2,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":3,"author":{"gitId":"ShenyiCui"},"content":"import static swift.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-22"},{"lineNumber":4,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":5,"author":{"gitId":"ShenyiCui"},"content":"import swift.commons.core.index.Index;","lastModifiedDate":"2022-10-22"},{"lineNumber":6,"author":{"gitId":"ShenyiCui"},"content":"import swift.logic.commands.SelectContactCommand;","lastModifiedDate":"2022-10-22"},{"lineNumber":7,"author":{"gitId":"ShenyiCui"},"content":"import swift.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-22"},{"lineNumber":8,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":9,"author":{"gitId":"ShenyiCui"},"content":"/**","lastModifiedDate":"2022-10-22"},{"lineNumber":10,"author":{"gitId":"yunruu"},"content":" * Parses input arguments and creates a new SelectContactCommand object","lastModifiedDate":"2022-10-24"},{"lineNumber":11,"author":{"gitId":"ShenyiCui"},"content":" */","lastModifiedDate":"2022-10-22"},{"lineNumber":12,"author":{"gitId":"ShenyiCui"},"content":"public class SelectContactCommandParser implements Parser\u003cSelectContactCommand\u003e {","lastModifiedDate":"2022-10-22"},{"lineNumber":13,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":14,"author":{"gitId":"ShenyiCui"},"content":"    /**","lastModifiedDate":"2022-10-22"},{"lineNumber":15,"author":{"gitId":"yunruu"},"content":"     * Parses the given {@code String} of arguments in the context of the SelectContactCommand","lastModifiedDate":"2022-10-24"},{"lineNumber":16,"author":{"gitId":"yunruu"},"content":"     * and returns a SelectContactCommand object for execution.","lastModifiedDate":"2022-10-24"},{"lineNumber":17,"author":{"gitId":"ShenyiCui"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-22"},{"lineNumber":18,"author":{"gitId":"ShenyiCui"},"content":"     */","lastModifiedDate":"2022-10-22"},{"lineNumber":19,"author":{"gitId":"ShenyiCui"},"content":"    public SelectContactCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-22"},{"lineNumber":20,"author":{"gitId":"ShenyiCui"},"content":"        try {","lastModifiedDate":"2022-10-22"},{"lineNumber":21,"author":{"gitId":"ShenyiCui"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2022-10-22"},{"lineNumber":22,"author":{"gitId":"ShenyiCui"},"content":"            return new SelectContactCommand(index);","lastModifiedDate":"2022-10-22"},{"lineNumber":23,"author":{"gitId":"ShenyiCui"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-22"},{"lineNumber":24,"author":{"gitId":"ShenyiCui"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-22"},{"lineNumber":25,"author":{"gitId":"ShenyiCui"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, SelectContactCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-22"},{"lineNumber":26,"author":{"gitId":"ShenyiCui"},"content":"        }","lastModifiedDate":"2022-10-22"},{"lineNumber":27,"author":{"gitId":"ShenyiCui"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":28,"author":{"gitId":"ShenyiCui"},"content":"}","lastModifiedDate":"2022-10-22"}],"authorContributionMap":{"ShenyiCui":25,"yunruu":3}},{"path":"src/main/java/swift/logic/parser/SelectTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yunruu"},"content":"package swift.logic.parser;","lastModifiedDate":"2022-10-24"},{"lineNumber":2,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":3,"author":{"gitId":"yunruu"},"content":"import static swift.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-26"},{"lineNumber":4,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"yunruu"},"content":"import swift.commons.core.index.Index;","lastModifiedDate":"2022-10-24"},{"lineNumber":6,"author":{"gitId":"yunruu"},"content":"import swift.logic.commands.SelectContactCommand;","lastModifiedDate":"2022-10-24"},{"lineNumber":7,"author":{"gitId":"yunruu"},"content":"import swift.logic.commands.SelectTaskCommand;","lastModifiedDate":"2022-10-24"},{"lineNumber":8,"author":{"gitId":"yunruu"},"content":"import swift.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-24"},{"lineNumber":9,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":10,"author":{"gitId":"yunruu"},"content":"/**","lastModifiedDate":"2022-10-24"},{"lineNumber":11,"author":{"gitId":"yunruu"},"content":" * Parses input arguments and creates a new SelectTaskCommand object","lastModifiedDate":"2022-10-24"},{"lineNumber":12,"author":{"gitId":"yunruu"},"content":" */","lastModifiedDate":"2022-10-24"},{"lineNumber":13,"author":{"gitId":"yunruu"},"content":"public class SelectTaskCommandParser implements Parser\u003cSelectTaskCommand\u003e {","lastModifiedDate":"2022-10-24"},{"lineNumber":14,"author":{"gitId":"yunruu"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":15,"author":{"gitId":"yunruu"},"content":"     * Parses the given {@code String} of arguments in the context of the SelectTaskCommand","lastModifiedDate":"2022-10-24"},{"lineNumber":16,"author":{"gitId":"yunruu"},"content":"     * and returns a SelectTaskCommand object for execution.","lastModifiedDate":"2022-10-24"},{"lineNumber":17,"author":{"gitId":"yunruu"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-24"},{"lineNumber":18,"author":{"gitId":"yunruu"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":19,"author":{"gitId":"yunruu"},"content":"    public SelectTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-24"},{"lineNumber":20,"author":{"gitId":"yunruu"},"content":"        try {","lastModifiedDate":"2022-10-24"},{"lineNumber":21,"author":{"gitId":"yunruu"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2022-10-24"},{"lineNumber":22,"author":{"gitId":"yunruu"},"content":"            return new SelectTaskCommand(index);","lastModifiedDate":"2022-10-24"},{"lineNumber":23,"author":{"gitId":"yunruu"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-10-24"},{"lineNumber":24,"author":{"gitId":"yunruu"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-24"},{"lineNumber":25,"author":{"gitId":"yunruu"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, SelectContactCommand.MESSAGE_USAGE), e);","lastModifiedDate":"2022-10-24"},{"lineNumber":26,"author":{"gitId":"yunruu"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":27,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":28,"author":{"gitId":"yunruu"},"content":"}","lastModifiedDate":"2022-10-24"}],"authorContributionMap":{"yunruu":28}},{"path":"src/main/java/swift/logic/parser/UnassignCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ShenyiCui"},"content":"package swift.logic.parser;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":3,"author":{"gitId":"ShenyiCui"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"ShenyiCui"},"content":"import static swift.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"ShenyiCui"},"content":"import static swift.logic.parser.CliSyntax.PREFIX_CONTACT;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"ShenyiCui"},"content":"import static swift.logic.parser.CliSyntax.PREFIX_TASK;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"ShenyiCui"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"ShenyiCui"},"content":"import swift.commons.core.index.Index;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"ShenyiCui"},"content":"import swift.logic.commands.UnassignCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"ShenyiCui"},"content":"import swift.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"ShenyiCui"},"content":"/**","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"ShenyiCui"},"content":" * Parses input arguments and creates a new AssignCommand object","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"ShenyiCui"},"content":" */","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"ShenyiCui"},"content":"public class UnassignCommandParser implements Parser\u003cUnassignCommand\u003e {","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"ShenyiCui"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"ShenyiCui"},"content":"     * Parses the given {@code String} of arguments in the context of the","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"ShenyiCui"},"content":"     * AssignCommand","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"ShenyiCui"},"content":"     * and returns a AssignCommand object for execution.","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"ShenyiCui"},"content":"     *","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"ShenyiCui"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"ShenyiCui"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"ShenyiCui"},"content":"    public UnassignCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"ShenyiCui"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"ShenyiCui"},"content":"        System.out.println(args);","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"ShenyiCui"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"ShenyiCui"},"content":"                args, PREFIX_CONTACT, PREFIX_TASK);","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"ShenyiCui"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_CONTACT, PREFIX_TASK) || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"ShenyiCui"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, UnassignCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-27"},{"lineNumber":34,"author":{"gitId":"ShenyiCui"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":35,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":36,"author":{"gitId":"ShenyiCui"},"content":"        try {","lastModifiedDate":"2022-10-27"},{"lineNumber":37,"author":{"gitId":"ShenyiCui"},"content":"            Index contactIndex \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_CONTACT).get());","lastModifiedDate":"2022-10-27"},{"lineNumber":38,"author":{"gitId":"ShenyiCui"},"content":"            Index taskIndex \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_TASK).get());","lastModifiedDate":"2022-10-27"},{"lineNumber":39,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":40,"author":{"gitId":"ShenyiCui"},"content":"            return new UnassignCommand(contactIndex, taskIndex);","lastModifiedDate":"2022-10-27"},{"lineNumber":41,"author":{"gitId":"ShenyiCui"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-10-27"},{"lineNumber":42,"author":{"gitId":"ShenyiCui"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-27"},{"lineNumber":43,"author":{"gitId":"ShenyiCui"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, UnassignCommand.MESSAGE_USAGE), e);","lastModifiedDate":"2022-10-27"},{"lineNumber":44,"author":{"gitId":"ShenyiCui"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":45,"author":{"gitId":"ShenyiCui"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":46,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":47,"author":{"gitId":"ShenyiCui"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":48,"author":{"gitId":"ShenyiCui"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values","lastModifiedDate":"2022-10-27"},{"lineNumber":49,"author":{"gitId":"ShenyiCui"},"content":"     * in the given","lastModifiedDate":"2022-10-27"},{"lineNumber":50,"author":{"gitId":"ShenyiCui"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-10-27"},{"lineNumber":51,"author":{"gitId":"ShenyiCui"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":52,"author":{"gitId":"ShenyiCui"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-10-27"},{"lineNumber":53,"author":{"gitId":"ShenyiCui"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-10-27"},{"lineNumber":54,"author":{"gitId":"ShenyiCui"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":55,"author":{"gitId":"ShenyiCui"},"content":"}","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"ShenyiCui":55}},{"path":"src/main/java/swift/logic/parser/UnmarkTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"santosh3007"},"content":"package swift.logic.parser;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":3,"author":{"gitId":"santosh3007"},"content":"import static swift.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"santosh3007"},"content":"import swift.commons.core.index.Index;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"santosh3007"},"content":"import swift.logic.commands.UnmarkTaskCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"santosh3007"},"content":"import swift.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"santosh3007"},"content":"/**","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"santosh3007"},"content":" * Parses input arguments and creates a new UnmarkTaskCommand object","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"santosh3007"},"content":" */","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"santosh3007"},"content":"public class UnmarkTaskCommandParser {","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"santosh3007"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"santosh3007"},"content":"     * Parses the given {@code String} of arguments in the context of the UnmarkTaskCommand and","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"santosh3007"},"content":"     * returns a UnmarkTaskCommand object for execution.","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"santosh3007"},"content":"     *","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"santosh3007"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"santosh3007"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"santosh3007"},"content":"    public UnmarkTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"santosh3007"},"content":"        try {","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"santosh3007"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"santosh3007"},"content":"            return new UnmarkTaskCommand(index);","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"santosh3007"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"santosh3007"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"santosh3007"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, UnmarkTaskCommand.MESSAGE_USAGE),","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"santosh3007"},"content":"                    pe);","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"santosh3007"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"santosh3007"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"santosh3007"},"content":"}","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"santosh3007":29}},{"path":"src/main/java/swift/logic/parser/exceptions/ParseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.logic.parser.exceptions;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"peppapighs"},"content":"import swift.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a parse error encountered by a parser.","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ParseException extends IllegalValueException {","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public ParseException(String message) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public ParseException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"peppapighs":2,"-":15}},{"path":"src/main/java/swift/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.model;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"peppapighs"},"content":"import swift.model.bridge.PersonTaskBridge;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"peppapighs"},"content":"import swift.model.bridge.PersonTaskBridgeList;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"peppapighs"},"content":"import swift.model.person.Person;","lastModifiedDate":"2022-10-01"},{"lineNumber":11,"author":{"gitId":"peppapighs"},"content":"import swift.model.person.UniquePersonList;","lastModifiedDate":"2022-10-01"},{"lineNumber":12,"author":{"gitId":"peppapighs"},"content":"import swift.model.task.Task;","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"peppapighs"},"content":"import swift.model.task.UniqueTaskList;","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":22,"author":{"gitId":"peppapighs"},"content":"    private final UniqueTaskList tasks;","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"peppapighs"},"content":"    private final PersonTaskBridgeList bridges;","lastModifiedDate":"2022-10-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":34,"author":{"gitId":"peppapighs"},"content":"        tasks \u003d new UniqueTaskList();","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"peppapighs"},"content":"        bridges \u003d new PersonTaskBridgeList();","lastModifiedDate":"2022-10-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"peppapighs"},"content":"    public AddressBook() {","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"peppapighs"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":60,"author":{"gitId":"peppapighs"},"content":"     * Replaces the contents of the task list with {@code tasks}.","lastModifiedDate":"2022-10-05"},{"lineNumber":61,"author":{"gitId":"peppapighs"},"content":"     * {@code tasks} must not contain duplicate tasks.","lastModifiedDate":"2022-10-05"},{"lineNumber":62,"author":{"gitId":"peppapighs"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":63,"author":{"gitId":"peppapighs"},"content":"    public void setTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2022-10-05"},{"lineNumber":64,"author":{"gitId":"peppapighs"},"content":"        this.tasks.setTasks(tasks);","lastModifiedDate":"2022-10-05"},{"lineNumber":65,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":66,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":67,"author":{"gitId":"peppapighs"},"content":"    /**","lastModifiedDate":"2022-10-22"},{"lineNumber":68,"author":{"gitId":"peppapighs"},"content":"     * Replaces the contents of the bridge list with {@code bridges}.","lastModifiedDate":"2022-10-22"},{"lineNumber":69,"author":{"gitId":"peppapighs"},"content":"     * {@code bridges} must not contain duplicate bridges.","lastModifiedDate":"2022-10-22"},{"lineNumber":70,"author":{"gitId":"peppapighs"},"content":"     */","lastModifiedDate":"2022-10-22"},{"lineNumber":71,"author":{"gitId":"peppapighs"},"content":"    public void setBridges(List\u003cPersonTaskBridge\u003e bridges) {","lastModifiedDate":"2022-10-22"},{"lineNumber":72,"author":{"gitId":"peppapighs"},"content":"        this.bridges.setBridges(bridges);","lastModifiedDate":"2022-10-22"},{"lineNumber":73,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":74,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":82,"author":{"gitId":"peppapighs"},"content":"        setTasks(newData.getTaskList());","lastModifiedDate":"2022-10-05"},{"lineNumber":83,"author":{"gitId":"peppapighs"},"content":"        setBridges(newData.getBridgeList());","lastModifiedDate":"2022-10-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"peppapighs"},"content":"    //// task-level operations","lastModifiedDate":"2022-10-05"},{"lineNumber":124,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":125,"author":{"gitId":"peppapighs"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":126,"author":{"gitId":"peppapighs"},"content":"     * Returns true if a task with the same name and owner as {@code task} exists in the address book.","lastModifiedDate":"2022-10-05"},{"lineNumber":127,"author":{"gitId":"peppapighs"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":128,"author":{"gitId":"peppapighs"},"content":"    public boolean hasTask(Task task) {","lastModifiedDate":"2022-10-05"},{"lineNumber":129,"author":{"gitId":"peppapighs"},"content":"        requireNonNull(task);","lastModifiedDate":"2022-10-05"},{"lineNumber":130,"author":{"gitId":"peppapighs"},"content":"        return tasks.contains(task);","lastModifiedDate":"2022-10-05"},{"lineNumber":131,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":132,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":133,"author":{"gitId":"peppapighs"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":134,"author":{"gitId":"peppapighs"},"content":"     * Adds a task to the address book.","lastModifiedDate":"2022-10-05"},{"lineNumber":135,"author":{"gitId":"peppapighs"},"content":"     * The task must not already exist in the address book.","lastModifiedDate":"2022-10-05"},{"lineNumber":136,"author":{"gitId":"peppapighs"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":137,"author":{"gitId":"peppapighs"},"content":"    public void addTask(Task t) {","lastModifiedDate":"2022-10-05"},{"lineNumber":138,"author":{"gitId":"peppapighs"},"content":"        tasks.add(t);","lastModifiedDate":"2022-10-05"},{"lineNumber":139,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":140,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":141,"author":{"gitId":"peppapighs"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":142,"author":{"gitId":"peppapighs"},"content":"     * Replaces the given task {@code target} in the list with {@code editedTask}.","lastModifiedDate":"2022-10-05"},{"lineNumber":143,"author":{"gitId":"peppapighs"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2022-10-05"},{"lineNumber":144,"author":{"gitId":"peppapighs"},"content":"     * The task name and owner of {@code editedTask} must not be the same as another existing task in the address book.","lastModifiedDate":"2022-10-05"},{"lineNumber":145,"author":{"gitId":"peppapighs"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":146,"author":{"gitId":"peppapighs"},"content":"    public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2022-10-05"},{"lineNumber":147,"author":{"gitId":"peppapighs"},"content":"        requireNonNull(editedTask);","lastModifiedDate":"2022-10-05"},{"lineNumber":148,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":149,"author":{"gitId":"peppapighs"},"content":"        tasks.setTask(target, editedTask);","lastModifiedDate":"2022-10-05"},{"lineNumber":150,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":151,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":152,"author":{"gitId":"peppapighs"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":153,"author":{"gitId":"peppapighs"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2022-10-05"},{"lineNumber":154,"author":{"gitId":"peppapighs"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2022-10-05"},{"lineNumber":155,"author":{"gitId":"peppapighs"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":156,"author":{"gitId":"peppapighs"},"content":"    public void removeTask(Task key) {","lastModifiedDate":"2022-10-05"},{"lineNumber":157,"author":{"gitId":"peppapighs"},"content":"        tasks.remove(key);","lastModifiedDate":"2022-10-05"},{"lineNumber":158,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":159,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":160,"author":{"gitId":"peppapighs"},"content":"    //// bridge-level operations","lastModifiedDate":"2022-10-15"},{"lineNumber":161,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":162,"author":{"gitId":"peppapighs"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":163,"author":{"gitId":"peppapighs"},"content":"     * Returns true if a bridge with the same person and task as {@code bridge} exists in the address book.","lastModifiedDate":"2022-10-15"},{"lineNumber":164,"author":{"gitId":"peppapighs"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":165,"author":{"gitId":"peppapighs"},"content":"    public boolean hasBridge(PersonTaskBridge bridge) {","lastModifiedDate":"2022-10-15"},{"lineNumber":166,"author":{"gitId":"peppapighs"},"content":"        requireNonNull(bridge);","lastModifiedDate":"2022-10-15"},{"lineNumber":167,"author":{"gitId":"peppapighs"},"content":"        return bridges.contains(bridge);","lastModifiedDate":"2022-10-15"},{"lineNumber":168,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":169,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":170,"author":{"gitId":"peppapighs"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":171,"author":{"gitId":"peppapighs"},"content":"     * Adds a bridge to the address book.","lastModifiedDate":"2022-10-15"},{"lineNumber":172,"author":{"gitId":"peppapighs"},"content":"     * The bridge must not already exist in the address book.","lastModifiedDate":"2022-10-15"},{"lineNumber":173,"author":{"gitId":"peppapighs"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":174,"author":{"gitId":"peppapighs"},"content":"    public void addBridge(PersonTaskBridge b) {","lastModifiedDate":"2022-10-15"},{"lineNumber":175,"author":{"gitId":"peppapighs"},"content":"        bridges.add(b);","lastModifiedDate":"2022-10-15"},{"lineNumber":176,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":177,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":178,"author":{"gitId":"ShenyiCui"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":179,"author":{"gitId":"ShenyiCui"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2022-10-27"},{"lineNumber":180,"author":{"gitId":"ShenyiCui"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2022-10-27"},{"lineNumber":181,"author":{"gitId":"ShenyiCui"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":182,"author":{"gitId":"ShenyiCui"},"content":"    public void removeBridge(PersonTaskBridge key) {","lastModifiedDate":"2022-10-27"},{"lineNumber":183,"author":{"gitId":"ShenyiCui"},"content":"        bridges.remove(key);","lastModifiedDate":"2022-10-27"},{"lineNumber":184,"author":{"gitId":"ShenyiCui"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":185,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"peppapighs"},"content":"        return persons.asUnmodifiableObservableList().size() + \" persons, \"","lastModifiedDate":"2022-10-05"},{"lineNumber":191,"author":{"gitId":"peppapighs"},"content":"                + tasks.asUnmodifiableObservableList().size() + \" tasks\";","lastModifiedDate":"2022-10-05"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":200,"author":{"gitId":"peppapighs"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":201,"author":{"gitId":"peppapighs"},"content":"    public ObservableList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2022-10-05"},{"lineNumber":202,"author":{"gitId":"peppapighs"},"content":"        return tasks.asUnmodifiableObservableList();","lastModifiedDate":"2022-10-05"},{"lineNumber":203,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":204,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":205,"author":{"gitId":"peppapighs"},"content":"    @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":206,"author":{"gitId":"peppapighs"},"content":"    public ObservableList\u003cPersonTaskBridge\u003e getBridgeList() {","lastModifiedDate":"2022-10-15"},{"lineNumber":207,"author":{"gitId":"peppapighs"},"content":"        return bridges.asUnmodifiableObservableList();","lastModifiedDate":"2022-10-15"},{"lineNumber":208,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":209,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":213,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":214,"author":{"gitId":"ShenyiCui"},"content":"                \u0026\u0026 persons.equals(((AddressBook) other).persons))","lastModifiedDate":"2022-10-23"},{"lineNumber":215,"author":{"gitId":"ShenyiCui"},"content":"                \u0026\u0026 tasks.equals(((AddressBook) other).tasks)","lastModifiedDate":"2022-10-23"},{"lineNumber":216,"author":{"gitId":"ShenyiCui"},"content":"                \u0026\u0026 bridges.equals(((AddressBook) other).bridges);","lastModifiedDate":"2022-10-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":221,"author":{"gitId":"ShenyiCui"},"content":"        return persons.hashCode() ^ tasks.hashCode() ^ bridges.hashCode();","lastModifiedDate":"2022-10-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":223,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ShenyiCui":12,"peppapighs":98,"-":113}},{"path":"src/main/java/swift/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.model;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"peppapighs"},"content":"import swift.commons.core.GuiSettings;","lastModifiedDate":"2022-10-01"},{"lineNumber":8,"author":{"gitId":"peppapighs"},"content":"import swift.model.bridge.PersonTaskBridge;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"peppapighs"},"content":"import swift.model.person.Person;","lastModifiedDate":"2022-10-01"},{"lineNumber":10,"author":{"gitId":"peppapighs"},"content":"import swift.model.task.Task;","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"ShenyiCui"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PEOPLE \u003d unused -\u003e true;","lastModifiedDate":"2022-10-23"},{"lineNumber":18,"author":{"gitId":"ShenyiCui"},"content":"    Predicate\u003cPerson\u003e PREDICATE_HIDE_ALL_PEOPLE \u003d unused -\u003e false;","lastModifiedDate":"2022-10-23"},{"lineNumber":19,"author":{"gitId":"yunruu"},"content":"    Predicate\u003cTask\u003e PREDICATE_SHOW_ALL_TASKS \u003d unused -\u003e true;","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"ShenyiCui"},"content":"    Predicate\u003cTask\u003e PREDICATE_HIDE_ALL_TASKS \u003d unused -\u003e false;","lastModifiedDate":"2022-10-23"},{"lineNumber":21,"author":{"gitId":"ShenyiCui"},"content":"    Predicate\u003cPersonTaskBridge\u003e PREDICATE_SHOW_ALL_BRIDGE \u003d unused -\u003e true;","lastModifiedDate":"2022-10-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":94,"author":{"gitId":"ShenyiCui"},"content":"    /** Returns an unmodifiable view of the filtered task list */","lastModifiedDate":"2022-10-10"},{"lineNumber":95,"author":{"gitId":"ShenyiCui"},"content":"    ObservableList\u003cTask\u003e getFilteredTaskList();","lastModifiedDate":"2022-10-10"},{"lineNumber":96,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":97,"author":{"gitId":"ShenyiCui"},"content":"    /**","lastModifiedDate":"2022-10-22"},{"lineNumber":98,"author":{"gitId":"ShenyiCui"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2022-10-22"},{"lineNumber":99,"author":{"gitId":"ShenyiCui"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2022-10-22"},{"lineNumber":100,"author":{"gitId":"ShenyiCui"},"content":"     */","lastModifiedDate":"2022-10-22"},{"lineNumber":101,"author":{"gitId":"ShenyiCui"},"content":"    void updateFilteredBridgeList(Predicate\u003cPersonTaskBridge\u003e predicate);","lastModifiedDate":"2022-10-22"},{"lineNumber":102,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":103,"author":{"gitId":"ShenyiCui"},"content":"    /** Returns an unmodifiable view of the filtered task list */","lastModifiedDate":"2022-10-22"},{"lineNumber":104,"author":{"gitId":"ShenyiCui"},"content":"    ObservableList\u003cPersonTaskBridge\u003e getFilteredBridgeList();","lastModifiedDate":"2022-10-22"},{"lineNumber":105,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":106,"author":{"gitId":"ShenyiCui"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":107,"author":{"gitId":"ShenyiCui"},"content":"     * Updates the filter of the filtered task list to filter by the given {@code predicate}.","lastModifiedDate":"2022-10-10"},{"lineNumber":108,"author":{"gitId":"ShenyiCui"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2022-10-10"},{"lineNumber":109,"author":{"gitId":"ShenyiCui"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":110,"author":{"gitId":"ShenyiCui"},"content":"    void updateFilteredTaskList(Predicate\u003cTask\u003e predicate);","lastModifiedDate":"2022-10-10"},{"lineNumber":111,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":112,"author":{"gitId":"peppapighs"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":113,"author":{"gitId":"peppapighs"},"content":"     * Returns true if a task with the same identity as {@code task} exists in the address book.","lastModifiedDate":"2022-10-05"},{"lineNumber":114,"author":{"gitId":"peppapighs"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":115,"author":{"gitId":"peppapighs"},"content":"    boolean hasTask(Task task);","lastModifiedDate":"2022-10-05"},{"lineNumber":116,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":117,"author":{"gitId":"peppapighs"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":118,"author":{"gitId":"ShenyiCui"},"content":"     * Deletes the given task.","lastModifiedDate":"2022-10-10"},{"lineNumber":119,"author":{"gitId":"ShenyiCui"},"content":"     * The task must exist in the address book.","lastModifiedDate":"2022-10-10"},{"lineNumber":120,"author":{"gitId":"peppapighs"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":121,"author":{"gitId":"peppapighs"},"content":"    void deleteTask(Task target);","lastModifiedDate":"2022-10-05"},{"lineNumber":122,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":123,"author":{"gitId":"peppapighs"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":124,"author":{"gitId":"peppapighs"},"content":"     * Adds the given task.","lastModifiedDate":"2022-10-05"},{"lineNumber":125,"author":{"gitId":"peppapighs"},"content":"     * {@code task} must not already exist in the address book.","lastModifiedDate":"2022-10-05"},{"lineNumber":126,"author":{"gitId":"peppapighs"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":127,"author":{"gitId":"peppapighs"},"content":"    void addTask(Task task);","lastModifiedDate":"2022-10-05"},{"lineNumber":128,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":129,"author":{"gitId":"peppapighs"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":130,"author":{"gitId":"peppapighs"},"content":"     * Returns true if a bridge exists in the address book.","lastModifiedDate":"2022-10-16"},{"lineNumber":131,"author":{"gitId":"peppapighs"},"content":"     *","lastModifiedDate":"2022-10-16"},{"lineNumber":132,"author":{"gitId":"peppapighs"},"content":"     * @param bridge the bridge to check","lastModifiedDate":"2022-10-16"},{"lineNumber":133,"author":{"gitId":"peppapighs"},"content":"     * @return true if the bridge exists","lastModifiedDate":"2022-10-16"},{"lineNumber":134,"author":{"gitId":"peppapighs"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":135,"author":{"gitId":"peppapighs"},"content":"    boolean hasBridge(PersonTaskBridge bridge);","lastModifiedDate":"2022-10-16"},{"lineNumber":136,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":137,"author":{"gitId":"peppapighs"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":138,"author":{"gitId":"peppapighs"},"content":"     * Replaces the given task {@code target} with {@code editedTask}.","lastModifiedDate":"2022-10-05"},{"lineNumber":139,"author":{"gitId":"peppapighs"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2022-10-05"},{"lineNumber":140,"author":{"gitId":"peppapighs"},"content":"     * The task name and owner of {@code editedTask} must not be the same as another existing task in the address book.","lastModifiedDate":"2022-10-05"},{"lineNumber":141,"author":{"gitId":"peppapighs"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":142,"author":{"gitId":"peppapighs"},"content":"    void setTask(Task target, Task editedTask);","lastModifiedDate":"2022-10-05"},{"lineNumber":143,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":144,"author":{"gitId":"peppapighs"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":145,"author":{"gitId":"peppapighs"},"content":"     * Adds a relationship between the given task and person.","lastModifiedDate":"2022-10-16"},{"lineNumber":146,"author":{"gitId":"peppapighs"},"content":"     *","lastModifiedDate":"2022-10-16"},{"lineNumber":147,"author":{"gitId":"peppapighs"},"content":"     * @param person The person to be added to the task.","lastModifiedDate":"2022-10-16"},{"lineNumber":148,"author":{"gitId":"peppapighs"},"content":"     * @param task The task to be added to the person.","lastModifiedDate":"2022-10-16"},{"lineNumber":149,"author":{"gitId":"peppapighs"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":150,"author":{"gitId":"peppapighs"},"content":"    void addBridge(Person person, Task task);","lastModifiedDate":"2022-10-16"},{"lineNumber":151,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":152,"author":{"gitId":"peppapighs"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":153,"author":{"gitId":"peppapighs"},"content":"     * Adds a relationship between the given task and person.","lastModifiedDate":"2022-10-16"},{"lineNumber":154,"author":{"gitId":"peppapighs"},"content":"     *","lastModifiedDate":"2022-10-16"},{"lineNumber":155,"author":{"gitId":"peppapighs"},"content":"     * @param bridge The bridge to be added.","lastModifiedDate":"2022-10-16"},{"lineNumber":156,"author":{"gitId":"peppapighs"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":157,"author":{"gitId":"peppapighs"},"content":"    void addBridge(PersonTaskBridge bridge);","lastModifiedDate":"2022-10-16"},{"lineNumber":158,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":159,"author":{"gitId":"ShenyiCui"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":160,"author":{"gitId":"ShenyiCui"},"content":"     * Deletes a relationship between a given task and person.","lastModifiedDate":"2022-10-27"},{"lineNumber":161,"author":{"gitId":"ShenyiCui"},"content":"     *","lastModifiedDate":"2022-10-27"},{"lineNumber":162,"author":{"gitId":"ShenyiCui"},"content":"     * @param bridge The bridge to be deleted.","lastModifiedDate":"2022-10-27"},{"lineNumber":163,"author":{"gitId":"ShenyiCui"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":164,"author":{"gitId":"ShenyiCui"},"content":"    void deleteBridge(PersonTaskBridge bridge);","lastModifiedDate":"2022-10-27"},{"lineNumber":165,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":166,"author":{"gitId":"yunruu"},"content":"    /** Returns an unmodifiable view of the unfiltered bridge list */","lastModifiedDate":"2022-10-26"},{"lineNumber":167,"author":{"gitId":"yunruu"},"content":"    ObservableList\u003cPersonTaskBridge\u003e getUnfilteredBridgeList();","lastModifiedDate":"2022-10-26"},{"lineNumber":168,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":169,"author":{"gitId":"yunruu"},"content":"    /** Returns an unmodifiable view of the unfiltered person list */","lastModifiedDate":"2022-10-26"},{"lineNumber":170,"author":{"gitId":"yunruu"},"content":"    ObservableList\u003cPerson\u003e getUnfilteredPersonList();","lastModifiedDate":"2022-10-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"ShenyiCui":31,"peppapighs":50,"-":83,"yunruu":7}},{"path":"src/main/java/swift/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.model;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"peppapighs"},"content":"import static swift.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"peppapighs"},"content":"import swift.commons.core.GuiSettings;","lastModifiedDate":"2022-10-01"},{"lineNumber":13,"author":{"gitId":"peppapighs"},"content":"import swift.commons.core.LogsCenter;","lastModifiedDate":"2022-10-01"},{"lineNumber":14,"author":{"gitId":"peppapighs"},"content":"import swift.model.bridge.PersonTaskBridge;","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"peppapighs"},"content":"import swift.model.person.Person;","lastModifiedDate":"2022-10-01"},{"lineNumber":16,"author":{"gitId":"peppapighs"},"content":"import swift.model.task.Task;","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"ShenyiCui"},"content":"    private final FilteredList\u003cTask\u003e filteredTasks;","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"ShenyiCui"},"content":"    private final FilteredList\u003cPersonTaskBridge\u003e filteredBridges;","lastModifiedDate":"2022-10-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"ShenyiCui"},"content":"        filteredTasks \u003d new FilteredList\u003c\u003e(this.addressBook.getTaskList());","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"ShenyiCui"},"content":"        filteredBridges \u003d new FilteredList\u003c\u003e(this.addressBook.getBridgeList());","lastModifiedDate":"2022-10-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":110,"author":{"gitId":"ShenyiCui"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PEOPLE);","lastModifiedDate":"2022-10-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":120,"author":{"gitId":"peppapighs"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":121,"author":{"gitId":"peppapighs"},"content":"    public boolean hasTask(Task task) {","lastModifiedDate":"2022-10-05"},{"lineNumber":122,"author":{"gitId":"peppapighs"},"content":"        requireNonNull(task);","lastModifiedDate":"2022-10-05"},{"lineNumber":123,"author":{"gitId":"peppapighs"},"content":"        return addressBook.hasTask(task);","lastModifiedDate":"2022-10-05"},{"lineNumber":124,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":125,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":126,"author":{"gitId":"peppapighs"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":127,"author":{"gitId":"peppapighs"},"content":"    public void deleteTask(Task target) {","lastModifiedDate":"2022-10-05"},{"lineNumber":128,"author":{"gitId":"peppapighs"},"content":"        addressBook.removeTask(target);","lastModifiedDate":"2022-10-05"},{"lineNumber":129,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":130,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":131,"author":{"gitId":"peppapighs"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":132,"author":{"gitId":"peppapighs"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2022-10-05"},{"lineNumber":133,"author":{"gitId":"peppapighs"},"content":"        addressBook.addTask(task);","lastModifiedDate":"2022-10-05"},{"lineNumber":134,"author":{"gitId":"yunruu"},"content":"        updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2022-10-23"},{"lineNumber":135,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":136,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":137,"author":{"gitId":"peppapighs"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":138,"author":{"gitId":"peppapighs"},"content":"    public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2022-10-05"},{"lineNumber":139,"author":{"gitId":"peppapighs"},"content":"        requireAllNonNull(target, editedTask);","lastModifiedDate":"2022-10-05"},{"lineNumber":140,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":141,"author":{"gitId":"peppapighs"},"content":"        addressBook.setTask(target, editedTask);","lastModifiedDate":"2022-10-05"},{"lineNumber":142,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":143,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":144,"author":{"gitId":"peppapighs"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":145,"author":{"gitId":"peppapighs"},"content":"    public boolean hasBridge(PersonTaskBridge bridge) {","lastModifiedDate":"2022-10-16"},{"lineNumber":146,"author":{"gitId":"peppapighs"},"content":"        requireNonNull(bridge);","lastModifiedDate":"2022-10-16"},{"lineNumber":147,"author":{"gitId":"peppapighs"},"content":"        return addressBook.hasBridge(bridge);","lastModifiedDate":"2022-10-16"},{"lineNumber":148,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":149,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":150,"author":{"gitId":"peppapighs"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":151,"author":{"gitId":"peppapighs"},"content":"    public void addBridge(Person person, Task task) {","lastModifiedDate":"2022-10-16"},{"lineNumber":152,"author":{"gitId":"peppapighs"},"content":"        requireAllNonNull(person, task);","lastModifiedDate":"2022-10-16"},{"lineNumber":153,"author":{"gitId":"peppapighs"},"content":"        addressBook.addBridge(new PersonTaskBridge(person.getId(), task.getId()));","lastModifiedDate":"2022-10-16"},{"lineNumber":154,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":155,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":156,"author":{"gitId":"peppapighs"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":157,"author":{"gitId":"peppapighs"},"content":"    public void addBridge(PersonTaskBridge bridge) {","lastModifiedDate":"2022-10-16"},{"lineNumber":158,"author":{"gitId":"peppapighs"},"content":"        requireNonNull(bridge);","lastModifiedDate":"2022-10-16"},{"lineNumber":159,"author":{"gitId":"peppapighs"},"content":"        addressBook.addBridge(bridge);","lastModifiedDate":"2022-10-16"},{"lineNumber":160,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":161,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":162,"author":{"gitId":"ShenyiCui"},"content":"    @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":163,"author":{"gitId":"ShenyiCui"},"content":"    public void deleteBridge(PersonTaskBridge target) {","lastModifiedDate":"2022-10-27"},{"lineNumber":164,"author":{"gitId":"ShenyiCui"},"content":"        addressBook.removeBridge(target);","lastModifiedDate":"2022-10-27"},{"lineNumber":165,"author":{"gitId":"ShenyiCui"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":166,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":167,"author":{"gitId":"ShenyiCui"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Task List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":168,"author":{"gitId":"ShenyiCui"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":169,"author":{"gitId":"ShenyiCui"},"content":"     * Returns an unmodifiable view of the list of {@code Task} backed by the internal list of","lastModifiedDate":"2022-10-10"},{"lineNumber":170,"author":{"gitId":"ShenyiCui"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2022-10-10"},{"lineNumber":171,"author":{"gitId":"ShenyiCui"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":172,"author":{"gitId":"ShenyiCui"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":173,"author":{"gitId":"ShenyiCui"},"content":"    public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2022-10-10"},{"lineNumber":174,"author":{"gitId":"jasonqiu212"},"content":"        return filteredTasks.sorted(Task::compareTo);","lastModifiedDate":"2022-10-28"},{"lineNumber":175,"author":{"gitId":"ShenyiCui"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":176,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":177,"author":{"gitId":"ShenyiCui"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":178,"author":{"gitId":"ShenyiCui"},"content":"    public void updateFilteredTaskList(Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2022-10-10"},{"lineNumber":179,"author":{"gitId":"ShenyiCui"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2022-10-10"},{"lineNumber":180,"author":{"gitId":"ShenyiCui"},"content":"        filteredTasks.setPredicate(predicate);","lastModifiedDate":"2022-10-10"},{"lineNumber":181,"author":{"gitId":"ShenyiCui"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":182,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":183,"author":{"gitId":"ShenyiCui"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Bridge List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-22"},{"lineNumber":184,"author":{"gitId":"ShenyiCui"},"content":"    /**","lastModifiedDate":"2022-10-22"},{"lineNumber":185,"author":{"gitId":"ShenyiCui"},"content":"     * Returns an unmodifiable view of the list of {@code Task} backed by the internal list of","lastModifiedDate":"2022-10-22"},{"lineNumber":186,"author":{"gitId":"ShenyiCui"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2022-10-22"},{"lineNumber":187,"author":{"gitId":"ShenyiCui"},"content":"     */","lastModifiedDate":"2022-10-22"},{"lineNumber":188,"author":{"gitId":"ShenyiCui"},"content":"    @Override","lastModifiedDate":"2022-10-22"},{"lineNumber":189,"author":{"gitId":"ShenyiCui"},"content":"    public ObservableList\u003cPersonTaskBridge\u003e getFilteredBridgeList() {","lastModifiedDate":"2022-10-22"},{"lineNumber":190,"author":{"gitId":"ShenyiCui"},"content":"        return filteredBridges;","lastModifiedDate":"2022-10-22"},{"lineNumber":191,"author":{"gitId":"ShenyiCui"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":192,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":193,"author":{"gitId":"yunruu"},"content":"    @Override","lastModifiedDate":"2022-10-26"},{"lineNumber":194,"author":{"gitId":"yunruu"},"content":"    public ObservableList\u003cPersonTaskBridge\u003e getUnfilteredBridgeList() {","lastModifiedDate":"2022-10-26"},{"lineNumber":195,"author":{"gitId":"yunruu"},"content":"        return addressBook.getBridgeList();","lastModifiedDate":"2022-10-26"},{"lineNumber":196,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":197,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":198,"author":{"gitId":"ShenyiCui"},"content":"    @Override","lastModifiedDate":"2022-10-22"},{"lineNumber":199,"author":{"gitId":"ShenyiCui"},"content":"    public void updateFilteredBridgeList(Predicate\u003cPersonTaskBridge\u003e predicate) {","lastModifiedDate":"2022-10-22"},{"lineNumber":200,"author":{"gitId":"ShenyiCui"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2022-10-22"},{"lineNumber":201,"author":{"gitId":"ShenyiCui"},"content":"        filteredBridges.setPredicate(predicate);","lastModifiedDate":"2022-10-22"},{"lineNumber":202,"author":{"gitId":"ShenyiCui"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":203,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":209,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":215,"author":{"gitId":"yunruu"},"content":"    @Override","lastModifiedDate":"2022-10-26"},{"lineNumber":216,"author":{"gitId":"yunruu"},"content":"    public ObservableList\u003cPerson\u003e getUnfilteredPersonList() {","lastModifiedDate":"2022-10-26"},{"lineNumber":217,"author":{"gitId":"yunruu"},"content":"        return addressBook.getPersonList();","lastModifiedDate":"2022-10-26"},{"lineNumber":218,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":219,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":241,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":242,"author":{"gitId":"ShenyiCui"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons)","lastModifiedDate":"2022-10-10"},{"lineNumber":243,"author":{"gitId":"ShenyiCui"},"content":"                \u0026\u0026 filteredTasks.equals(other.filteredTasks);","lastModifiedDate":"2022-10-10"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ShenyiCui":43,"jasonqiu212":1,"peppapighs":48,"-":143,"yunruu":11}},{"path":"src/main/java/swift/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.model;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"peppapighs"},"content":"import swift.model.bridge.PersonTaskBridge;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"peppapighs"},"content":"import swift.model.person.Person;","lastModifiedDate":"2022-10-01"},{"lineNumber":6,"author":{"gitId":"peppapighs"},"content":"import swift.model.task.Task;","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"peppapighs"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"peppapighs"},"content":"     * Returns an unmodifiable view of the tasks list.","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"peppapighs"},"content":"     * This list will not contain any duplicate tasks.","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"peppapighs"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"peppapighs"},"content":"    ObservableList\u003cTask\u003e getTaskList();","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"peppapighs"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":26,"author":{"gitId":"peppapighs"},"content":"     * Returns an unmodifiable view of the person-task bridge list.","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"peppapighs"},"content":"     * This list will not contain any duplicate bridges.","lastModifiedDate":"2022-10-15"},{"lineNumber":28,"author":{"gitId":"peppapighs"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":29,"author":{"gitId":"peppapighs"},"content":"    ObservableList\u003cPersonTaskBridge\u003e getBridgeList();","lastModifiedDate":"2022-10-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"peppapighs":15,"-":15}},{"path":"src/main/java/swift/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.model;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"peppapighs"},"content":"import swift.commons.core.GuiSettings;","lastModifiedDate":"2022-10-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"peppapighs":2,"-":14}},{"path":"src/main/java/swift/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.model;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"peppapighs"},"content":"import swift.commons.core.GuiSettings;","lastModifiedDate":"2022-10-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path addressBookFilePath \u003d Paths.get(\"data\" , \"addressbook.json\");","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                \u0026\u0026 addressBookFilePath.equals(o.addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Objects.hash(guiSettings, addressBookFilePath);","lastModifiedDate":"2018-08-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        sb.append(\"\\nLocal data file location : \" + addressBookFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"peppapighs":2,"-":85}},{"path":"src/main/java/swift/model/bridge/PersonTaskBridge.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.model.bridge;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":3,"author":{"gitId":"peppapighs"},"content":"import static swift.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"peppapighs"},"content":"import java.util.UUID;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"peppapighs"},"content":"/**","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"peppapighs"},"content":" * Represents a many-to-many relationship between Person and Task.","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"peppapighs"},"content":" */","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"peppapighs"},"content":"public class PersonTaskBridge {","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"peppapighs"},"content":"    private final UUID personId;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"peppapighs"},"content":"    private final UUID taskId;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"peppapighs"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"peppapighs"},"content":"     * Initializes PersonTaskBridge with the given personId and taskId.","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"peppapighs"},"content":"     *","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"peppapighs"},"content":"     * @param personId A unique identifier for the person.","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"peppapighs"},"content":"     * @param taskId   A unique identifier for the task.","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"peppapighs"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"peppapighs"},"content":"    public PersonTaskBridge(UUID personId, UUID taskId) {","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"peppapighs"},"content":"        requireAllNonNull(personId, taskId);","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"peppapighs"},"content":"        this.personId \u003d personId;","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"peppapighs"},"content":"        this.taskId \u003d taskId;","lastModifiedDate":"2022-10-15"},{"lineNumber":24,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":26,"author":{"gitId":"peppapighs"},"content":"    public UUID getPersonId() {","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"peppapighs"},"content":"        return personId;","lastModifiedDate":"2022-10-15"},{"lineNumber":28,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":29,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":30,"author":{"gitId":"peppapighs"},"content":"    public UUID getTaskId() {","lastModifiedDate":"2022-10-15"},{"lineNumber":31,"author":{"gitId":"peppapighs"},"content":"        return taskId;","lastModifiedDate":"2022-10-15"},{"lineNumber":32,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":33,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":34,"author":{"gitId":"peppapighs"},"content":"    @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":35,"author":{"gitId":"peppapighs"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2022-10-15"},{"lineNumber":36,"author":{"gitId":"peppapighs"},"content":"        if (this \u003d\u003d obj) {","lastModifiedDate":"2022-10-15"},{"lineNumber":37,"author":{"gitId":"peppapighs"},"content":"            return true;","lastModifiedDate":"2022-10-15"},{"lineNumber":38,"author":{"gitId":"peppapighs"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":39,"author":{"gitId":"peppapighs"},"content":"        if (obj instanceof PersonTaskBridge) {","lastModifiedDate":"2022-10-15"},{"lineNumber":40,"author":{"gitId":"peppapighs"},"content":"            PersonTaskBridge other \u003d (PersonTaskBridge) obj;","lastModifiedDate":"2022-10-15"},{"lineNumber":41,"author":{"gitId":"peppapighs"},"content":"            return personId.equals(other.personId) \u0026\u0026 taskId.equals(other.taskId);","lastModifiedDate":"2022-10-15"},{"lineNumber":42,"author":{"gitId":"peppapighs"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":43,"author":{"gitId":"peppapighs"},"content":"        return false;","lastModifiedDate":"2022-10-15"},{"lineNumber":44,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":45,"author":{"gitId":"peppapighs"},"content":"}","lastModifiedDate":"2022-10-15"}],"authorContributionMap":{"peppapighs":45}},{"path":"src/main/java/swift/model/bridge/PersonTaskBridgeList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.model.bridge;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":3,"author":{"gitId":"peppapighs"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"peppapighs"},"content":"import static swift.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-22"},{"lineNumber":5,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"peppapighs"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"peppapighs"},"content":"import java.util.List;","lastModifiedDate":"2022-10-22"},{"lineNumber":8,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"peppapighs"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"peppapighs"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"peppapighs"},"content":"import swift.model.bridge.exceptions.BridgeNotFoundException;","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"peppapighs"},"content":"import swift.model.bridge.exceptions.DuplicateBridgeException;","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"peppapighs"},"content":"import swift.model.person.Person;","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"peppapighs"},"content":"import swift.model.task.Task;","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"peppapighs"},"content":"/**","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"peppapighs"},"content":" * Represents a list of person-task bridges.","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"peppapighs"},"content":" */","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"peppapighs"},"content":"public class PersonTaskBridgeList implements Iterable\u003cPersonTaskBridge\u003e {","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"peppapighs"},"content":"    private final ObservableList\u003cPersonTaskBridge\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"peppapighs"},"content":"    private final ObservableList\u003cPersonTaskBridge\u003e internalUnmodifiableList \u003d FXCollections","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"peppapighs"},"content":"            .unmodifiableObservableList(internalList);","lastModifiedDate":"2022-10-15"},{"lineNumber":24,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"peppapighs"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":26,"author":{"gitId":"peppapighs"},"content":"     * Returns true if the list contains an equivalent person-task bridge as the","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"peppapighs"},"content":"     * given argument.","lastModifiedDate":"2022-10-15"},{"lineNumber":28,"author":{"gitId":"peppapighs"},"content":"     *","lastModifiedDate":"2022-10-15"},{"lineNumber":29,"author":{"gitId":"peppapighs"},"content":"     * @param toCheck The person-task bridge to check for.","lastModifiedDate":"2022-10-15"},{"lineNumber":30,"author":{"gitId":"peppapighs"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":31,"author":{"gitId":"peppapighs"},"content":"    public boolean contains(PersonTaskBridge toCheck) {","lastModifiedDate":"2022-10-15"},{"lineNumber":32,"author":{"gitId":"peppapighs"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-10-15"},{"lineNumber":33,"author":{"gitId":"peppapighs"},"content":"        return internalList.stream().anyMatch(toCheck::equals);","lastModifiedDate":"2022-10-15"},{"lineNumber":34,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":35,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":36,"author":{"gitId":"peppapighs"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":37,"author":{"gitId":"peppapighs"},"content":"     * Adds a person-task bridge to the list.","lastModifiedDate":"2022-10-15"},{"lineNumber":38,"author":{"gitId":"peppapighs"},"content":"     * The person-task bridge must not already exist in the list.","lastModifiedDate":"2022-10-15"},{"lineNumber":39,"author":{"gitId":"peppapighs"},"content":"     *","lastModifiedDate":"2022-10-15"},{"lineNumber":40,"author":{"gitId":"peppapighs"},"content":"     * @param toAdd The person-task bridge to add.","lastModifiedDate":"2022-10-15"},{"lineNumber":41,"author":{"gitId":"peppapighs"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":42,"author":{"gitId":"peppapighs"},"content":"    public void add(PersonTaskBridge toAdd) {","lastModifiedDate":"2022-10-15"},{"lineNumber":43,"author":{"gitId":"peppapighs"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2022-10-15"},{"lineNumber":44,"author":{"gitId":"peppapighs"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2022-10-15"},{"lineNumber":45,"author":{"gitId":"peppapighs"},"content":"            throw new DuplicateBridgeException();","lastModifiedDate":"2022-10-16"},{"lineNumber":46,"author":{"gitId":"peppapighs"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":47,"author":{"gitId":"peppapighs"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2022-10-15"},{"lineNumber":48,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":49,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":50,"author":{"gitId":"peppapighs"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":51,"author":{"gitId":"peppapighs"},"content":"     * Removes the equivalent person-task bridge from the list.","lastModifiedDate":"2022-10-15"},{"lineNumber":52,"author":{"gitId":"peppapighs"},"content":"     * The person-task bridge must exist in the list.","lastModifiedDate":"2022-10-15"},{"lineNumber":53,"author":{"gitId":"peppapighs"},"content":"     *","lastModifiedDate":"2022-10-15"},{"lineNumber":54,"author":{"gitId":"peppapighs"},"content":"     * @param toRemove The person-task bridge to be removed.","lastModifiedDate":"2022-10-15"},{"lineNumber":55,"author":{"gitId":"peppapighs"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":56,"author":{"gitId":"peppapighs"},"content":"    public void remove(PersonTaskBridge toRemove) {","lastModifiedDate":"2022-10-15"},{"lineNumber":57,"author":{"gitId":"peppapighs"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2022-10-15"},{"lineNumber":58,"author":{"gitId":"peppapighs"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2022-10-15"},{"lineNumber":59,"author":{"gitId":"peppapighs"},"content":"            throw new BridgeNotFoundException();","lastModifiedDate":"2022-10-16"},{"lineNumber":60,"author":{"gitId":"peppapighs"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":61,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":62,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":63,"author":{"gitId":"peppapighs"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":64,"author":{"gitId":"peppapighs"},"content":"     * Removes all person-task bridges associated with a person from the list.","lastModifiedDate":"2022-10-15"},{"lineNumber":65,"author":{"gitId":"peppapighs"},"content":"     *","lastModifiedDate":"2022-10-15"},{"lineNumber":66,"author":{"gitId":"peppapighs"},"content":"     * @param person The person whose person-task bridges are to be removed.","lastModifiedDate":"2022-10-15"},{"lineNumber":67,"author":{"gitId":"peppapighs"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":68,"author":{"gitId":"peppapighs"},"content":"    public void removePerson(Person person) {","lastModifiedDate":"2022-10-16"},{"lineNumber":69,"author":{"gitId":"peppapighs"},"content":"        requireNonNull(person);","lastModifiedDate":"2022-10-15"},{"lineNumber":70,"author":{"gitId":"peppapighs"},"content":"        internalList.removeIf(bridge -\u003e bridge.getPersonId().equals(person.getId()));","lastModifiedDate":"2022-10-15"},{"lineNumber":71,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":72,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":73,"author":{"gitId":"peppapighs"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":74,"author":{"gitId":"peppapighs"},"content":"     * Removes all person-task bridges associated with a task from the list.","lastModifiedDate":"2022-10-15"},{"lineNumber":75,"author":{"gitId":"peppapighs"},"content":"     *","lastModifiedDate":"2022-10-15"},{"lineNumber":76,"author":{"gitId":"peppapighs"},"content":"     * @param task The task whose person-task bridges are to be removed.","lastModifiedDate":"2022-10-15"},{"lineNumber":77,"author":{"gitId":"peppapighs"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":78,"author":{"gitId":"peppapighs"},"content":"    public void removeTask(Task task) {","lastModifiedDate":"2022-10-16"},{"lineNumber":79,"author":{"gitId":"peppapighs"},"content":"        requireNonNull(task);","lastModifiedDate":"2022-10-15"},{"lineNumber":80,"author":{"gitId":"peppapighs"},"content":"        internalList.removeIf(bridge -\u003e bridge.getTaskId().equals(task.getId()));","lastModifiedDate":"2022-10-15"},{"lineNumber":81,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":82,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":83,"author":{"gitId":"peppapighs"},"content":"    /**","lastModifiedDate":"2022-10-22"},{"lineNumber":84,"author":{"gitId":"peppapighs"},"content":"     * Replaces the contents of this list with {@code bridges}.","lastModifiedDate":"2022-10-22"},{"lineNumber":85,"author":{"gitId":"peppapighs"},"content":"     * {@code bridges} must not contain duplicate bridges.","lastModifiedDate":"2022-10-22"},{"lineNumber":86,"author":{"gitId":"peppapighs"},"content":"     *","lastModifiedDate":"2022-10-22"},{"lineNumber":87,"author":{"gitId":"peppapighs"},"content":"     * @param bridges The list of bridges to replace the current list with.","lastModifiedDate":"2022-10-22"},{"lineNumber":88,"author":{"gitId":"peppapighs"},"content":"     */","lastModifiedDate":"2022-10-22"},{"lineNumber":89,"author":{"gitId":"peppapighs"},"content":"    public void setBridges(List\u003cPersonTaskBridge\u003e bridges) {","lastModifiedDate":"2022-10-22"},{"lineNumber":90,"author":{"gitId":"peppapighs"},"content":"        requireAllNonNull(bridges);","lastModifiedDate":"2022-10-22"},{"lineNumber":91,"author":{"gitId":"peppapighs"},"content":"        if (!bridgesAreUnique(bridges)) {","lastModifiedDate":"2022-10-22"},{"lineNumber":92,"author":{"gitId":"peppapighs"},"content":"            throw new DuplicateBridgeException();","lastModifiedDate":"2022-10-22"},{"lineNumber":93,"author":{"gitId":"peppapighs"},"content":"        }","lastModifiedDate":"2022-10-22"},{"lineNumber":94,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":95,"author":{"gitId":"peppapighs"},"content":"        internalList.setAll(bridges);","lastModifiedDate":"2022-10-22"},{"lineNumber":96,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":97,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":98,"author":{"gitId":"peppapighs"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":99,"author":{"gitId":"peppapighs"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2022-10-15"},{"lineNumber":100,"author":{"gitId":"peppapighs"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":101,"author":{"gitId":"peppapighs"},"content":"    public ObservableList\u003cPersonTaskBridge\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-10-15"},{"lineNumber":102,"author":{"gitId":"peppapighs"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2022-10-15"},{"lineNumber":103,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":104,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":105,"author":{"gitId":"peppapighs"},"content":"    @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":106,"author":{"gitId":"peppapighs"},"content":"    public Iterator\u003cPersonTaskBridge\u003e iterator() {","lastModifiedDate":"2022-10-15"},{"lineNumber":107,"author":{"gitId":"peppapighs"},"content":"        return internalList.iterator();","lastModifiedDate":"2022-10-15"},{"lineNumber":108,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":109,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":110,"author":{"gitId":"peppapighs"},"content":"    @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":111,"author":{"gitId":"peppapighs"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-15"},{"lineNumber":112,"author":{"gitId":"peppapighs"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-15"},{"lineNumber":113,"author":{"gitId":"peppapighs"},"content":"                || (other instanceof PersonTaskBridgeList // instanceof handles nulls","lastModifiedDate":"2022-10-15"},{"lineNumber":114,"author":{"gitId":"peppapighs"},"content":"                        \u0026\u0026 internalList.equals(((PersonTaskBridgeList) other).internalList));","lastModifiedDate":"2022-10-15"},{"lineNumber":115,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":116,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":117,"author":{"gitId":"peppapighs"},"content":"    @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":118,"author":{"gitId":"peppapighs"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-15"},{"lineNumber":119,"author":{"gitId":"peppapighs"},"content":"        return internalList.hashCode();","lastModifiedDate":"2022-10-15"},{"lineNumber":120,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":121,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":122,"author":{"gitId":"peppapighs"},"content":"    /**","lastModifiedDate":"2022-10-22"},{"lineNumber":123,"author":{"gitId":"peppapighs"},"content":"     * Returns true if {@code bridges} contains only unique bridges.","lastModifiedDate":"2022-10-22"},{"lineNumber":124,"author":{"gitId":"peppapighs"},"content":"     *","lastModifiedDate":"2022-10-22"},{"lineNumber":125,"author":{"gitId":"peppapighs"},"content":"     * @param bridges A list of bridges.","lastModifiedDate":"2022-10-22"},{"lineNumber":126,"author":{"gitId":"peppapighs"},"content":"     */","lastModifiedDate":"2022-10-22"},{"lineNumber":127,"author":{"gitId":"peppapighs"},"content":"    private boolean bridgesAreUnique(List\u003cPersonTaskBridge\u003e bridges) {","lastModifiedDate":"2022-10-22"},{"lineNumber":128,"author":{"gitId":"peppapighs"},"content":"        for (int i \u003d 0; i \u003c bridges.size() - 1; i++) {","lastModifiedDate":"2022-10-22"},{"lineNumber":129,"author":{"gitId":"peppapighs"},"content":"            for (int j \u003d i + 1; j \u003c bridges.size(); j++) {","lastModifiedDate":"2022-10-22"},{"lineNumber":130,"author":{"gitId":"peppapighs"},"content":"                if (bridges.get(i).equals(bridges.get(j))) {","lastModifiedDate":"2022-10-22"},{"lineNumber":131,"author":{"gitId":"peppapighs"},"content":"                    return false;","lastModifiedDate":"2022-10-22"},{"lineNumber":132,"author":{"gitId":"peppapighs"},"content":"                }","lastModifiedDate":"2022-10-22"},{"lineNumber":133,"author":{"gitId":"peppapighs"},"content":"            }","lastModifiedDate":"2022-10-22"},{"lineNumber":134,"author":{"gitId":"peppapighs"},"content":"        }","lastModifiedDate":"2022-10-22"},{"lineNumber":135,"author":{"gitId":"peppapighs"},"content":"        return true;","lastModifiedDate":"2022-10-22"},{"lineNumber":136,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":137,"author":{"gitId":"peppapighs"},"content":"}","lastModifiedDate":"2022-10-15"}],"authorContributionMap":{"peppapighs":137}},{"path":"src/main/java/swift/model/bridge/exceptions/BridgeNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.model.bridge.exceptions;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"peppapighs"},"content":"/**","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"peppapighs"},"content":" * Signals that the operation is unable to find the specified bridge.","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"peppapighs"},"content":" */","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"peppapighs"},"content":"public class BridgeNotFoundException extends RuntimeException {","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"peppapighs"},"content":"}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"peppapighs":7}},{"path":"src/main/java/swift/model/bridge/exceptions/DuplicateBridgeException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.model.bridge.exceptions;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"peppapighs"},"content":"/**","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"peppapighs"},"content":" * Signals that the operation will result in duplicate PersonTaskBridge","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"peppapighs"},"content":" * (PersonTaskBridge are","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"peppapighs"},"content":" * considered duplicates if they have the same","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"peppapighs"},"content":" * person ID and task ID).","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"peppapighs"},"content":" */","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"peppapighs"},"content":"public class DuplicateBridgeException extends RuntimeException {","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"peppapighs"},"content":"    public DuplicateBridgeException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"peppapighs"},"content":"        super(\"Operation would result in duplicate bridges\");","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"peppapighs"},"content":"}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"peppapighs":13}},{"path":"src/main/java/swift/model/person/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.model.person;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"peppapighs"},"content":"import static swift.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s address in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                || (other instanceof Address // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Address) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"peppapighs":2,"-":55}},{"path":"src/main/java/swift/model/person/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.model.person;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"peppapighs"},"content":"import static swift.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s email in the address book.","lastModifiedDate":"2018-02-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"peppapighs":2,"-":69}},{"path":"src/main/java/swift/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.model.person;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"peppapighs"},"content":"import static swift.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"peppapighs"},"content":"import java.util.UUID;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"peppapighs"},"content":"import swift.model.tag.Tag;","lastModifiedDate":"2022-10-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"peppapighs"},"content":"    private final UUID id;","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"jasonqiu212"},"content":"    private final PersonName name;","lastModifiedDate":"2022-10-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"jasonqiu212"},"content":"    public Person(UUID id, PersonName name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags) {","lastModifiedDate":"2022-10-24"},{"lineNumber":33,"author":{"gitId":"peppapighs"},"content":"        requireAllNonNull(id, name, phone, email, address, tags);","lastModifiedDate":"2022-10-15"},{"lineNumber":34,"author":{"gitId":"peppapighs"},"content":"        this.id \u003d id;","lastModifiedDate":"2022-10-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"peppapighs"},"content":"    public UUID getId() {","lastModifiedDate":"2022-10-15"},{"lineNumber":43,"author":{"gitId":"peppapighs"},"content":"        return id;","lastModifiedDate":"2022-10-15"},{"lineNumber":44,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":45,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":46,"author":{"gitId":"jasonqiu212"},"content":"    public PersonName getName() {","lastModifiedDate":"2022-10-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"yunruu"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName())","lastModifiedDate":"2022-11-03"},{"lineNumber":81,"author":{"gitId":"yunruu"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2022-11-03"},{"lineNumber":82,"author":{"gitId":"yunruu"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2022-11-03"},{"lineNumber":83,"author":{"gitId":"yunruu"},"content":"                \u0026\u0026 otherPerson.getAddress().equals(getAddress());","lastModifiedDate":"2022-11-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2018-08-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getAddress().equals(getAddress())","lastModifiedDate":"2018-08-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getTags().equals(getTags());","lastModifiedDate":"2018-08-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"peppapighs"},"content":"        return Objects.hash(id, name, phone, email, address, tags);","lastModifiedDate":"2022-10-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                .append(getAddress());","lastModifiedDate":"2020-12-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jasonqiu212":3,"peppapighs":12,"-":114,"yunruu":4}},{"path":"src/main/java/swift/model/person/PersonName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.model.person;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"peppapighs"},"content":"import static swift.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s name in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"jasonqiu212"},"content":"public class PersonName {","lastModifiedDate":"2022-10-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"peppapighs"},"content":"            \"Names should only contain alphanumeric characters, commas, hyphen, apostrophes and spaces, \"","lastModifiedDate":"2022-11-03"},{"lineNumber":14,"author":{"gitId":"peppapighs"},"content":"                    + \"and it should not be blank\";","lastModifiedDate":"2022-11-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":20,"author":{"gitId":"peppapighs"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[\\\\p{Alnum}][\\\\p{Alnum}\\\\s\\\\-\\\\.\\\\\u0027]*$\";","lastModifiedDate":"2022-11-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"jasonqiu212"},"content":"    public PersonName(String name) {","lastModifiedDate":"2022-10-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"jasonqiu212"},"content":"                || (other instanceof PersonName // instanceof handles nulls","lastModifiedDate":"2022-10-24"},{"lineNumber":52,"author":{"gitId":"jasonqiu212"},"content":"                \u0026\u0026 fullName.equals(((PersonName) other).fullName)); // state check","lastModifiedDate":"2022-10-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jasonqiu212":4,"peppapighs":5,"-":51}},{"path":"src/main/java/swift/model/person/PersonNameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.model.person;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"peppapighs"},"content":"import swift.commons.util.StringUtil;","lastModifiedDate":"2022-10-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"jasonqiu212"},"content":"public class PersonNameContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"jasonqiu212"},"content":"    public PersonNameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getName().fullName, keyword));","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"jasonqiu212"},"content":"                || (other instanceof PersonNameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"jasonqiu212"},"content":"                \u0026\u0026 keywords.equals(((PersonNameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"jasonqiu212":4,"peppapighs":2,"-":25}},{"path":"src/main/java/swift/model/person/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.model.person;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"peppapighs"},"content":"import static swift.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s phone number in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"peppapighs":2,"-":51}},{"path":"src/main/java/swift/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.model.person;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"peppapighs"},"content":"import static swift.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"peppapighs"},"content":"import swift.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2022-10-01"},{"lineNumber":12,"author":{"gitId":"peppapighs"},"content":"import swift.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2022-10-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                || (other instanceof UniquePersonList // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                        \u0026\u0026 internalList.equals(((UniquePersonList) other).internalList));","lastModifiedDate":"2018-08-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"peppapighs":4,"-":133}},{"path":"src/main/java/swift/model/person/exceptions/DuplicatePersonException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.model.person.exceptions;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that the operation will result in duplicate Persons (Persons are considered duplicates if they have the same","lastModifiedDate":"2018-04-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * identity).","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class DuplicatePersonException extends RuntimeException {","lastModifiedDate":"2018-08-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public DuplicatePersonException() {","lastModifiedDate":"2017-06-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"        super(\"Operation would result in duplicate persons\");","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"peppapighs":1,"-":10}},{"path":"src/main/java/swift/model/person/exceptions/PersonNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.model.person.exceptions;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that the operation is unable to find the specified person.","lastModifiedDate":"2017-06-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class PersonNotFoundException extends RuntimeException {}","lastModifiedDate":"2018-08-07"}],"authorContributionMap":{"peppapighs":1,"-":5}},{"path":"src/main/java/swift/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.model.tag;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"peppapighs"},"content":"import static swift.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Tag in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"peppapighs":2,"-":52}},{"path":"src/main/java/swift/model/task/Deadline.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jasonqiu212"},"content":"package swift.model.task;","lastModifiedDate":"2022-10-25"},{"lineNumber":2,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":3,"author":{"gitId":"jasonqiu212"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-11-06"},{"lineNumber":4,"author":{"gitId":"jasonqiu212"},"content":"import static swift.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"jasonqiu212"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"jasonqiu212"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-10-25"},{"lineNumber":8,"author":{"gitId":"jasonqiu212"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-10-25"},{"lineNumber":9,"author":{"gitId":"ShenyiCui"},"content":"import java.time.format.ResolverStyle;","lastModifiedDate":"2022-11-07"},{"lineNumber":10,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":11,"author":{"gitId":"jasonqiu212"},"content":"/**","lastModifiedDate":"2022-10-25"},{"lineNumber":12,"author":{"gitId":"jasonqiu212"},"content":" * Represents a Task\u0027s deadline in the address book.","lastModifiedDate":"2022-10-25"},{"lineNumber":13,"author":{"gitId":"jasonqiu212"},"content":" * Guarantees: immutable; valid as declared in {@link #isValidDeadline(String)}","lastModifiedDate":"2022-10-25"},{"lineNumber":14,"author":{"gitId":"jasonqiu212"},"content":" */","lastModifiedDate":"2022-10-25"},{"lineNumber":15,"author":{"gitId":"jasonqiu212"},"content":"public class Deadline implements Comparable\u003cDeadline\u003e {","lastModifiedDate":"2022-10-28"},{"lineNumber":16,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":17,"author":{"gitId":"jasonqiu212"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-10-25"},{"lineNumber":18,"author":{"gitId":"jasonqiu212"},"content":"            \"Deadline must be in `dd-MM-yyyy HHmm` format.\";","lastModifiedDate":"2022-10-25"},{"lineNumber":19,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":20,"author":{"gitId":"jasonqiu212"},"content":"    private static final DateTimeFormatter DATE_TIME_FORMATTER \u003d","lastModifiedDate":"2022-10-25"},{"lineNumber":21,"author":{"gitId":"ShenyiCui"},"content":"            DateTimeFormatter.ofPattern(\"dd-MM-uuuu HHmm\").withResolverStyle(ResolverStyle.STRICT);","lastModifiedDate":"2022-11-07"},{"lineNumber":22,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":23,"author":{"gitId":"jasonqiu212"},"content":"    public final LocalDateTime deadline;","lastModifiedDate":"2022-10-25"},{"lineNumber":24,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":25,"author":{"gitId":"jasonqiu212"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":26,"author":{"gitId":"jasonqiu212"},"content":"     * Constructs a {@code Deadline}.","lastModifiedDate":"2022-10-25"},{"lineNumber":27,"author":{"gitId":"jasonqiu212"},"content":"     *","lastModifiedDate":"2022-10-25"},{"lineNumber":28,"author":{"gitId":"jasonqiu212"},"content":"     * @param deadline A valid deadline.","lastModifiedDate":"2022-10-25"},{"lineNumber":29,"author":{"gitId":"jasonqiu212"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":30,"author":{"gitId":"jasonqiu212"},"content":"    public Deadline(String deadline) {","lastModifiedDate":"2022-10-25"},{"lineNumber":31,"author":{"gitId":"jasonqiu212"},"content":"        requireNonNull(deadline);","lastModifiedDate":"2022-11-06"},{"lineNumber":32,"author":{"gitId":"jasonqiu212"},"content":"        checkArgument(isValidDeadline(deadline), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-25"},{"lineNumber":33,"author":{"gitId":"jasonqiu212"},"content":"        this.deadline \u003d LocalDateTime.parse(deadline, DATE_TIME_FORMATTER);","lastModifiedDate":"2022-10-25"},{"lineNumber":34,"author":{"gitId":"jasonqiu212"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":35,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":36,"author":{"gitId":"jasonqiu212"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":37,"author":{"gitId":"jasonqiu212"},"content":"     * Returns true if a given string is a valid deadline.","lastModifiedDate":"2022-10-25"},{"lineNumber":38,"author":{"gitId":"jasonqiu212"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":39,"author":{"gitId":"jasonqiu212"},"content":"    public static boolean isValidDeadline(String test) {","lastModifiedDate":"2022-10-25"},{"lineNumber":40,"author":{"gitId":"jasonqiu212"},"content":"        try {","lastModifiedDate":"2022-10-25"},{"lineNumber":41,"author":{"gitId":"jasonqiu212"},"content":"            LocalDateTime.parse(test, DATE_TIME_FORMATTER);","lastModifiedDate":"2022-10-25"},{"lineNumber":42,"author":{"gitId":"jasonqiu212"},"content":"            return true;","lastModifiedDate":"2022-10-25"},{"lineNumber":43,"author":{"gitId":"jasonqiu212"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-10-25"},{"lineNumber":44,"author":{"gitId":"jasonqiu212"},"content":"            return false;","lastModifiedDate":"2022-10-25"},{"lineNumber":45,"author":{"gitId":"jasonqiu212"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":46,"author":{"gitId":"jasonqiu212"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":47,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":48,"author":{"gitId":"jasonqiu212"},"content":"    @Override","lastModifiedDate":"2022-10-28"},{"lineNumber":49,"author":{"gitId":"jasonqiu212"},"content":"    public int compareTo(Deadline other) {","lastModifiedDate":"2022-10-28"},{"lineNumber":50,"author":{"gitId":"jasonqiu212"},"content":"        return deadline.compareTo(other.deadline);","lastModifiedDate":"2022-10-28"},{"lineNumber":51,"author":{"gitId":"jasonqiu212"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":52,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":53,"author":{"gitId":"jasonqiu212"},"content":"    @Override","lastModifiedDate":"2022-10-25"},{"lineNumber":54,"author":{"gitId":"jasonqiu212"},"content":"    public String toString() {","lastModifiedDate":"2022-10-25"},{"lineNumber":55,"author":{"gitId":"jasonqiu212"},"content":"        return DATE_TIME_FORMATTER.format(deadline);","lastModifiedDate":"2022-10-25"},{"lineNumber":56,"author":{"gitId":"jasonqiu212"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":57,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":58,"author":{"gitId":"jasonqiu212"},"content":"    @Override","lastModifiedDate":"2022-10-25"},{"lineNumber":59,"author":{"gitId":"jasonqiu212"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-25"},{"lineNumber":60,"author":{"gitId":"jasonqiu212"},"content":"        return (this \u003d\u003d other)","lastModifiedDate":"2022-10-25"},{"lineNumber":61,"author":{"gitId":"jasonqiu212"},"content":"                || (other instanceof Deadline","lastModifiedDate":"2022-10-25"},{"lineNumber":62,"author":{"gitId":"jasonqiu212"},"content":"                \u0026\u0026 deadline.equals(((Deadline) other).deadline));","lastModifiedDate":"2022-10-25"},{"lineNumber":63,"author":{"gitId":"jasonqiu212"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":64,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":65,"author":{"gitId":"jasonqiu212"},"content":"    @Override","lastModifiedDate":"2022-10-25"},{"lineNumber":66,"author":{"gitId":"jasonqiu212"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-25"},{"lineNumber":67,"author":{"gitId":"jasonqiu212"},"content":"        return deadline.hashCode();","lastModifiedDate":"2022-10-25"},{"lineNumber":68,"author":{"gitId":"jasonqiu212"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":69,"author":{"gitId":"jasonqiu212"},"content":"}","lastModifiedDate":"2022-10-25"}],"authorContributionMap":{"jasonqiu212":67,"ShenyiCui":2}},{"path":"src/main/java/swift/model/task/Description.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jasonqiu212"},"content":"package swift.model.task;","lastModifiedDate":"2022-10-24"},{"lineNumber":2,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":3,"author":{"gitId":"jasonqiu212"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-24"},{"lineNumber":4,"author":{"gitId":"jasonqiu212"},"content":"import static swift.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-24"},{"lineNumber":5,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":6,"author":{"gitId":"jasonqiu212"},"content":"/**","lastModifiedDate":"2022-10-24"},{"lineNumber":7,"author":{"gitId":"jasonqiu212"},"content":" * Represents a Task\u0027s description in the address book.","lastModifiedDate":"2022-10-24"},{"lineNumber":8,"author":{"gitId":"jasonqiu212"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidDescription(String)}","lastModifiedDate":"2022-10-24"},{"lineNumber":9,"author":{"gitId":"jasonqiu212"},"content":" */","lastModifiedDate":"2022-10-24"},{"lineNumber":10,"author":{"gitId":"jasonqiu212"},"content":"public class Description {","lastModifiedDate":"2022-10-24"},{"lineNumber":11,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":12,"author":{"gitId":"jasonqiu212"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-10-24"},{"lineNumber":13,"author":{"gitId":"jasonqiu212"},"content":"            \"Descriptions should only contain alphanumeric characters, spaces, and special \"","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"jasonqiu212"},"content":"                    + \"characters ($\u0026+,:;\u003d?@#|\u0027\u003c\u003e.\\\\-^*()%!/)\";","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":16,"author":{"gitId":"jasonqiu212"},"content":"    /*","lastModifiedDate":"2022-10-24"},{"lineNumber":17,"author":{"gitId":"jasonqiu212"},"content":"     * Only alphanumeric characters, spaces, and special characters ($\u0026+,:;\u003d?@#|\u0027\u003c\u003e.\\-^*()%!)","lastModifiedDate":"2022-10-24"},{"lineNumber":18,"author":{"gitId":"jasonqiu212"},"content":"     * are allowed.","lastModifiedDate":"2022-10-24"},{"lineNumber":19,"author":{"gitId":"jasonqiu212"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":20,"author":{"gitId":"jasonqiu212"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[\\\\p{Alnum}/$\u0026+,:;\u003d?@#|\u0027\u003c\u003e.\\\\\\\\-^*()%! ]*$\";","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":22,"author":{"gitId":"jasonqiu212"},"content":"    public final String description;","lastModifiedDate":"2022-10-24"},{"lineNumber":23,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":24,"author":{"gitId":"jasonqiu212"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":25,"author":{"gitId":"jasonqiu212"},"content":"     * Constructs a {@code Description}.","lastModifiedDate":"2022-10-24"},{"lineNumber":26,"author":{"gitId":"jasonqiu212"},"content":"     *","lastModifiedDate":"2022-10-24"},{"lineNumber":27,"author":{"gitId":"jasonqiu212"},"content":"     * @param description A valid description.","lastModifiedDate":"2022-10-24"},{"lineNumber":28,"author":{"gitId":"jasonqiu212"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":29,"author":{"gitId":"jasonqiu212"},"content":"    public Description(String description) {","lastModifiedDate":"2022-10-24"},{"lineNumber":30,"author":{"gitId":"jasonqiu212"},"content":"        requireNonNull(description);","lastModifiedDate":"2022-10-24"},{"lineNumber":31,"author":{"gitId":"jasonqiu212"},"content":"        checkArgument(isValidDescription(description), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-24"},{"lineNumber":32,"author":{"gitId":"jasonqiu212"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-10-24"},{"lineNumber":33,"author":{"gitId":"jasonqiu212"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":34,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":35,"author":{"gitId":"jasonqiu212"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":36,"author":{"gitId":"jasonqiu212"},"content":"     * Returns true if a given string is a valid description.","lastModifiedDate":"2022-10-24"},{"lineNumber":37,"author":{"gitId":"jasonqiu212"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":38,"author":{"gitId":"jasonqiu212"},"content":"    public static boolean isValidDescription(String test) {","lastModifiedDate":"2022-10-24"},{"lineNumber":39,"author":{"gitId":"jasonqiu212"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-24"},{"lineNumber":40,"author":{"gitId":"jasonqiu212"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":41,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":42,"author":{"gitId":"jasonqiu212"},"content":"    @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":43,"author":{"gitId":"jasonqiu212"},"content":"    public String toString() {","lastModifiedDate":"2022-10-24"},{"lineNumber":44,"author":{"gitId":"jasonqiu212"},"content":"        return description;","lastModifiedDate":"2022-10-24"},{"lineNumber":45,"author":{"gitId":"jasonqiu212"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":46,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":47,"author":{"gitId":"jasonqiu212"},"content":"    @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":48,"author":{"gitId":"jasonqiu212"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-24"},{"lineNumber":49,"author":{"gitId":"jasonqiu212"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2022-10-24"},{"lineNumber":50,"author":{"gitId":"jasonqiu212"},"content":"                || (other instanceof Description","lastModifiedDate":"2022-10-24"},{"lineNumber":51,"author":{"gitId":"jasonqiu212"},"content":"                \u0026\u0026 description.equals(((Description) other).description));","lastModifiedDate":"2022-10-24"},{"lineNumber":52,"author":{"gitId":"jasonqiu212"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":53,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":54,"author":{"gitId":"jasonqiu212"},"content":"    @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":55,"author":{"gitId":"jasonqiu212"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-24"},{"lineNumber":56,"author":{"gitId":"jasonqiu212"},"content":"        return description.hashCode();","lastModifiedDate":"2022-10-24"},{"lineNumber":57,"author":{"gitId":"jasonqiu212"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":58,"author":{"gitId":"jasonqiu212"},"content":"}","lastModifiedDate":"2022-10-24"}],"authorContributionMap":{"jasonqiu212":58}},{"path":"src/main/java/swift/model/task/Task.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.model.task;","lastModifiedDate":"2022-10-05"},{"lineNumber":2,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"peppapighs"},"content":"import static swift.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"peppapighs"},"content":"import java.util.Objects;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"jasonqiu212"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"peppapighs"},"content":"import java.util.UUID;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"peppapighs"},"content":"/**","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"peppapighs"},"content":" * Represents a Task in the address book.","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"peppapighs"},"content":" */","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"jasonqiu212"},"content":"public class Task implements Comparable\u003cTask\u003e {","lastModifiedDate":"2022-10-28"},{"lineNumber":13,"author":{"gitId":"peppapighs"},"content":"    private final UUID id;","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"jasonqiu212"},"content":"    private final TaskName name;","lastModifiedDate":"2022-10-24"},{"lineNumber":16,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":17,"author":{"gitId":"jasonqiu212"},"content":"    private final Optional\u003cDescription\u003e description;","lastModifiedDate":"2022-10-25"},{"lineNumber":18,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":19,"author":{"gitId":"jasonqiu212"},"content":"    private final Optional\u003cDeadline\u003e deadline;","lastModifiedDate":"2022-10-25"},{"lineNumber":20,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":21,"author":{"gitId":"santosh3007"},"content":"    private final boolean isDone;","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":23,"author":{"gitId":"peppapighs"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"peppapighs"},"content":"     * Constructs a {@code Task}.","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"peppapighs"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"peppapighs"},"content":"     * @param id          A unique identifier for the task.","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"jasonqiu212"},"content":"     * @param name        A valid task name.","lastModifiedDate":"2022-10-24"},{"lineNumber":28,"author":{"gitId":"jasonqiu212"},"content":"     * @param description A valid and optional description.","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"jasonqiu212"},"content":"     * @param deadline    A valid and optional deadline.","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"peppapighs"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"jasonqiu212"},"content":"    public Task(UUID id, TaskName name, Optional\u003cDescription\u003e description, Optional\u003cDeadline\u003e deadline) {","lastModifiedDate":"2022-10-26"},{"lineNumber":32,"author":{"gitId":"jasonqiu212"},"content":"        requireAllNonNull(id, name, description, deadline);","lastModifiedDate":"2022-10-25"},{"lineNumber":33,"author":{"gitId":"peppapighs"},"content":"        this.id \u003d id;","lastModifiedDate":"2022-10-15"},{"lineNumber":34,"author":{"gitId":"jasonqiu212"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-10-24"},{"lineNumber":35,"author":{"gitId":"jasonqiu212"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-10-26"},{"lineNumber":36,"author":{"gitId":"jasonqiu212"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2022-10-26"},{"lineNumber":37,"author":{"gitId":"santosh3007"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-10-27"},{"lineNumber":38,"author":{"gitId":"santosh3007"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":39,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":40,"author":{"gitId":"santosh3007"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":41,"author":{"gitId":"santosh3007"},"content":"     * Constructs a {@code Task}.","lastModifiedDate":"2022-10-27"},{"lineNumber":42,"author":{"gitId":"santosh3007"},"content":"     *","lastModifiedDate":"2022-10-27"},{"lineNumber":43,"author":{"gitId":"santosh3007"},"content":"     * @param id A unique identifier for the task.","lastModifiedDate":"2022-10-27"},{"lineNumber":44,"author":{"gitId":"santosh3007"},"content":"     * @param name A valid task name.","lastModifiedDate":"2022-10-27"},{"lineNumber":45,"author":{"gitId":"santosh3007"},"content":"     * @param description A valid and optional description.","lastModifiedDate":"2022-10-27"},{"lineNumber":46,"author":{"gitId":"santosh3007"},"content":"     * @param deadline A valid and optional deadline.","lastModifiedDate":"2022-10-27"},{"lineNumber":47,"author":{"gitId":"santosh3007"},"content":"     * @param isDone A boolean value indicating whether the task is done.","lastModifiedDate":"2022-10-27"},{"lineNumber":48,"author":{"gitId":"santosh3007"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":49,"author":{"gitId":"santosh3007"},"content":"    public Task(UUID id, TaskName name, Optional\u003cDescription\u003e description,","lastModifiedDate":"2022-10-27"},{"lineNumber":50,"author":{"gitId":"santosh3007"},"content":"            Optional\u003cDeadline\u003e deadline, boolean isDone) {","lastModifiedDate":"2022-10-27"},{"lineNumber":51,"author":{"gitId":"santosh3007"},"content":"        requireAllNonNull(id, name, description, deadline);","lastModifiedDate":"2022-10-27"},{"lineNumber":52,"author":{"gitId":"santosh3007"},"content":"        this.id \u003d id;","lastModifiedDate":"2022-10-27"},{"lineNumber":53,"author":{"gitId":"santosh3007"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-10-27"},{"lineNumber":54,"author":{"gitId":"santosh3007"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-10-27"},{"lineNumber":55,"author":{"gitId":"santosh3007"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2022-10-27"},{"lineNumber":56,"author":{"gitId":"santosh3007"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-10-27"},{"lineNumber":57,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":58,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":59,"author":{"gitId":"peppapighs"},"content":"    public UUID getId() {","lastModifiedDate":"2022-10-15"},{"lineNumber":60,"author":{"gitId":"peppapighs"},"content":"        return id;","lastModifiedDate":"2022-10-15"},{"lineNumber":61,"author":{"gitId":"jasonqiu212"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"jasonqiu212"},"content":"    public TaskName getName() {","lastModifiedDate":"2022-10-24"},{"lineNumber":64,"author":{"gitId":"jasonqiu212"},"content":"        return name;","lastModifiedDate":"2022-10-24"},{"lineNumber":65,"author":{"gitId":"santosh3007"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":67,"author":{"gitId":"jasonqiu212"},"content":"    public Optional\u003cDescription\u003e getDescription() {","lastModifiedDate":"2022-10-25"},{"lineNumber":68,"author":{"gitId":"jasonqiu212"},"content":"        return description;","lastModifiedDate":"2022-10-24"},{"lineNumber":69,"author":{"gitId":"jasonqiu212"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":70,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":71,"author":{"gitId":"jasonqiu212"},"content":"    public Optional\u003cDeadline\u003e getDeadline() {","lastModifiedDate":"2022-10-25"},{"lineNumber":72,"author":{"gitId":"jasonqiu212"},"content":"        return deadline;","lastModifiedDate":"2022-10-25"},{"lineNumber":73,"author":{"gitId":"jasonqiu212"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":74,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":75,"author":{"gitId":"santosh3007"},"content":"    public boolean isDone() {","lastModifiedDate":"2022-10-27"},{"lineNumber":76,"author":{"gitId":"jasonqiu212"},"content":"        return isDone;","lastModifiedDate":"2022-10-25"},{"lineNumber":77,"author":{"gitId":"jasonqiu212"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":78,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":79,"author":{"gitId":"jasonqiu212"},"content":"    @Override","lastModifiedDate":"2022-10-28"},{"lineNumber":80,"author":{"gitId":"jasonqiu212"},"content":"    public int compareTo(Task other) {","lastModifiedDate":"2022-10-28"},{"lineNumber":81,"author":{"gitId":"jasonqiu212"},"content":"        // Compare by name lexicographically if both tasks do not have deadlines","lastModifiedDate":"2022-10-28"},{"lineNumber":82,"author":{"gitId":"jasonqiu212"},"content":"        if (deadline.isEmpty() \u0026\u0026 other.deadline.isEmpty()) {","lastModifiedDate":"2022-10-28"},{"lineNumber":83,"author":{"gitId":"jasonqiu212"},"content":"            return name.compareTo(other.name);","lastModifiedDate":"2022-10-28"},{"lineNumber":84,"author":{"gitId":"jasonqiu212"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":85,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":86,"author":{"gitId":"jasonqiu212"},"content":"        if (deadline.isEmpty()) {","lastModifiedDate":"2022-10-28"},{"lineNumber":87,"author":{"gitId":"jasonqiu212"},"content":"            return 1;","lastModifiedDate":"2022-10-28"},{"lineNumber":88,"author":{"gitId":"jasonqiu212"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":89,"author":{"gitId":"jasonqiu212"},"content":"        if (other.deadline.isEmpty()) {","lastModifiedDate":"2022-10-28"},{"lineNumber":90,"author":{"gitId":"jasonqiu212"},"content":"            return -1;","lastModifiedDate":"2022-10-28"},{"lineNumber":91,"author":{"gitId":"jasonqiu212"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":92,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":93,"author":{"gitId":"jasonqiu212"},"content":"        // Compare by deadline if both tasks have deadlines","lastModifiedDate":"2022-10-28"},{"lineNumber":94,"author":{"gitId":"jasonqiu212"},"content":"        return deadline.get().compareTo(other.deadline.get());","lastModifiedDate":"2022-10-28"},{"lineNumber":95,"author":{"gitId":"jasonqiu212"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":96,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":97,"author":{"gitId":"peppapighs"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":98,"author":{"gitId":"peppapighs"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-05"},{"lineNumber":99,"author":{"gitId":"jasonqiu212"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-25"},{"lineNumber":100,"author":{"gitId":"jasonqiu212"},"content":"            return true;","lastModifiedDate":"2022-10-25"},{"lineNumber":101,"author":{"gitId":"jasonqiu212"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":102,"author":{"gitId":"jasonqiu212"},"content":"        if (other instanceof Task) {","lastModifiedDate":"2022-10-25"},{"lineNumber":103,"author":{"gitId":"jasonqiu212"},"content":"            Task otherTask \u003d (Task) other;","lastModifiedDate":"2022-10-25"},{"lineNumber":104,"author":{"gitId":"jasonqiu212"},"content":"            return name.equals(otherTask.name)","lastModifiedDate":"2022-10-25"},{"lineNumber":105,"author":{"gitId":"jasonqiu212"},"content":"                    \u0026\u0026 description.equals(otherTask.description)","lastModifiedDate":"2022-10-25"},{"lineNumber":106,"author":{"gitId":"ShenyiCui"},"content":"                    \u0026\u0026 deadline.equals(otherTask.deadline);","lastModifiedDate":"2022-11-06"},{"lineNumber":107,"author":{"gitId":"jasonqiu212"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":108,"author":{"gitId":"jasonqiu212"},"content":"        return false;","lastModifiedDate":"2022-10-25"},{"lineNumber":109,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":110,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":111,"author":{"gitId":"peppapighs"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":112,"author":{"gitId":"peppapighs"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-05"},{"lineNumber":113,"author":{"gitId":"jasonqiu212"},"content":"        return Objects.hash(id, name, description, isDone);","lastModifiedDate":"2022-10-25"},{"lineNumber":114,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":115,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":116,"author":{"gitId":"peppapighs"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":117,"author":{"gitId":"peppapighs"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2022-10-05"},{"lineNumber":118,"author":{"gitId":"peppapighs"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":119,"author":{"gitId":"jasonqiu212"},"content":"    @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":120,"author":{"gitId":"peppapighs"},"content":"    public String toString() {","lastModifiedDate":"2022-10-05"},{"lineNumber":121,"author":{"gitId":"jasonqiu212"},"content":"        return \u0027[\u0027 + name.toString() + \u0027]\u0027;","lastModifiedDate":"2022-10-24"},{"lineNumber":122,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":123,"author":{"gitId":"peppapighs"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"jasonqiu212":62,"ShenyiCui":1,"santosh3007":24,"peppapighs":36}},{"path":"src/main/java/swift/model/task/TaskName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.model.task;","lastModifiedDate":"2022-10-05"},{"lineNumber":2,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"peppapighs"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"peppapighs"},"content":"import static swift.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"peppapighs"},"content":"/**","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"peppapighs"},"content":" * Represents a Task\u0027s name in the address book.","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"peppapighs"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"peppapighs"},"content":" */","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"jasonqiu212"},"content":"public class TaskName implements Comparable\u003cTaskName\u003e {","lastModifiedDate":"2022-10-28"},{"lineNumber":11,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"peppapighs"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"peppapighs"},"content":"            \"Names should only contain alphanumeric characters, commas, hyphen, apostrophes and spaces, \"","lastModifiedDate":"2022-11-03"},{"lineNumber":14,"author":{"gitId":"peppapighs"},"content":"                    + \"and it should not be blank\";","lastModifiedDate":"2022-11-03"},{"lineNumber":15,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"peppapighs"},"content":"    /*","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"peppapighs"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"peppapighs"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"peppapighs"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"peppapighs"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[\\\\p{Alnum}][\\\\p{Alnum}\\\\s\\\\-\\\\.\\\\\u0027]*$\";","lastModifiedDate":"2022-11-03"},{"lineNumber":21,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"peppapighs"},"content":"    public final String fullName;","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"peppapighs"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"peppapighs"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"peppapighs"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"peppapighs"},"content":"     * @param name A valid name.","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"peppapighs"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"peppapighs"},"content":"    public TaskName(String name) {","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"peppapighs"},"content":"        requireNonNull(name);","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"peppapighs"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"peppapighs"},"content":"        fullName \u003d name;","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"peppapighs"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"peppapighs"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"peppapighs"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"peppapighs"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"peppapighs"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"jasonqiu212"},"content":"    @Override","lastModifiedDate":"2022-10-28"},{"lineNumber":43,"author":{"gitId":"jasonqiu212"},"content":"    public int compareTo(TaskName other) {","lastModifiedDate":"2022-10-28"},{"lineNumber":44,"author":{"gitId":"jasonqiu212"},"content":"        return fullName.compareTo(other.fullName);","lastModifiedDate":"2022-10-28"},{"lineNumber":45,"author":{"gitId":"jasonqiu212"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":46,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":47,"author":{"gitId":"peppapighs"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"peppapighs"},"content":"    public String toString() {","lastModifiedDate":"2022-10-05"},{"lineNumber":49,"author":{"gitId":"peppapighs"},"content":"        return fullName;","lastModifiedDate":"2022-10-05"},{"lineNumber":50,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":51,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":52,"author":{"gitId":"peppapighs"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":53,"author":{"gitId":"peppapighs"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-05"},{"lineNumber":54,"author":{"gitId":"peppapighs"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-05"},{"lineNumber":55,"author":{"gitId":"peppapighs"},"content":"                || (other instanceof TaskName // instanceof handles nulls","lastModifiedDate":"2022-10-05"},{"lineNumber":56,"author":{"gitId":"peppapighs"},"content":"                \u0026\u0026 fullName.equals(((TaskName) other).fullName)); // state check","lastModifiedDate":"2022-10-05"},{"lineNumber":57,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":58,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":59,"author":{"gitId":"peppapighs"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":60,"author":{"gitId":"peppapighs"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-05"},{"lineNumber":61,"author":{"gitId":"peppapighs"},"content":"        return fullName.hashCode();","lastModifiedDate":"2022-10-05"},{"lineNumber":62,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":63,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":64,"author":{"gitId":"peppapighs"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"jasonqiu212":6,"peppapighs":58}},{"path":"src/main/java/swift/model/task/TaskNameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jasonqiu212"},"content":"package swift.model.task;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"jasonqiu212"},"content":"import java.util.List;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"jasonqiu212"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"jasonqiu212"},"content":"import swift.commons.util.StringUtil;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"jasonqiu212"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"jasonqiu212"},"content":" * Tests that a {@code Task}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"jasonqiu212"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"jasonqiu212"},"content":"public class TaskNameContainsKeywordsPredicate implements Predicate\u003cTask\u003e {","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"jasonqiu212"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"jasonqiu212"},"content":"    public TaskNameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"jasonqiu212"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"jasonqiu212"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"jasonqiu212"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"jasonqiu212"},"content":"    public boolean test(Task task) {","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"jasonqiu212"},"content":"        return keywords.stream()","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"jasonqiu212"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(task.getName().fullName, keyword));","lastModifiedDate":"2022-10-24"},{"lineNumber":22,"author":{"gitId":"jasonqiu212"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"jasonqiu212"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"jasonqiu212"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"jasonqiu212"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"jasonqiu212"},"content":"                || (other instanceof TaskNameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"jasonqiu212"},"content":"                \u0026\u0026 keywords.equals(((TaskNameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"jasonqiu212"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"jasonqiu212"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"jasonqiu212":31}},{"path":"src/main/java/swift/model/task/UniqueTaskList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.model.task;","lastModifiedDate":"2022-10-05"},{"lineNumber":2,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"peppapighs"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"peppapighs"},"content":"import static swift.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"peppapighs"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"peppapighs"},"content":"import java.util.List;","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"peppapighs"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"peppapighs"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"peppapighs"},"content":"import swift.model.task.exceptions.DuplicateTaskException;","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"peppapighs"},"content":"import swift.model.task.exceptions.TaskNotFoundException;","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"peppapighs"},"content":"/**","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"peppapighs"},"content":" * A list of tasks that enforces uniqueness between its elements and does not","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"peppapighs"},"content":" * allow nulls.","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"peppapighs"},"content":" * A task is considered unique by comparing using {@code Task#equals(Task)}.","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"peppapighs"},"content":" * As such, adding and updating of","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"peppapighs"},"content":" * tasks uses Task#equals(Task) for equality so as to ensure that the person","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"peppapighs"},"content":" * being added or updated is","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"peppapighs"},"content":" * unique in terms of name and owner in the UniqueTaskList.","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"peppapighs"},"content":" * \u003cp\u003e","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"peppapighs"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"peppapighs"},"content":" *","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"peppapighs"},"content":" * @see Task#isSameTask(Task)","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"peppapighs"},"content":" */","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"peppapighs"},"content":"public class UniqueTaskList implements Iterable\u003cTask\u003e {","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"peppapighs"},"content":"    private final ObservableList\u003cTask\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"peppapighs"},"content":"    private final ObservableList\u003cTask\u003e internalUnmodifiableList \u003d FXCollections","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"peppapighs"},"content":"            .unmodifiableObservableList(internalList);","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"peppapighs"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"peppapighs"},"content":"     * Returns true if the list contains an equivalent task as the given argument.","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"peppapighs"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"peppapighs"},"content":"     * @param toCheck The task to check for.","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"peppapighs"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"peppapighs"},"content":"    public boolean contains(Task toCheck) {","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"peppapighs"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"peppapighs"},"content":"        return internalList.stream().anyMatch(toCheck::equals);","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"peppapighs"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"peppapighs"},"content":"     * Adds a task to the list.","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"peppapighs"},"content":"     * The task must not already exist in the list.","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"peppapighs"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"peppapighs"},"content":"     * @param toAdd The task to add.","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"peppapighs"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":49,"author":{"gitId":"peppapighs"},"content":"    public void add(Task toAdd) {","lastModifiedDate":"2022-10-05"},{"lineNumber":50,"author":{"gitId":"peppapighs"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2022-10-05"},{"lineNumber":51,"author":{"gitId":"peppapighs"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2022-10-05"},{"lineNumber":52,"author":{"gitId":"peppapighs"},"content":"            throw new DuplicateTaskException();","lastModifiedDate":"2022-10-05"},{"lineNumber":53,"author":{"gitId":"peppapighs"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":54,"author":{"gitId":"peppapighs"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2022-10-05"},{"lineNumber":55,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":56,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":57,"author":{"gitId":"peppapighs"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":58,"author":{"gitId":"peppapighs"},"content":"     * Replaces the task {@code target} in the list with {@code editedTask}.","lastModifiedDate":"2022-10-05"},{"lineNumber":59,"author":{"gitId":"peppapighs"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2022-10-05"},{"lineNumber":60,"author":{"gitId":"peppapighs"},"content":"     * The task name and owner of {@code editedTask} must not be the same as another","lastModifiedDate":"2022-10-05"},{"lineNumber":61,"author":{"gitId":"peppapighs"},"content":"     * existing task in the list.","lastModifiedDate":"2022-10-05"},{"lineNumber":62,"author":{"gitId":"peppapighs"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":63,"author":{"gitId":"peppapighs"},"content":"     * @param target     The task to be replaced.","lastModifiedDate":"2022-10-05"},{"lineNumber":64,"author":{"gitId":"peppapighs"},"content":"     * @param editedTask The task to replace with.","lastModifiedDate":"2022-10-05"},{"lineNumber":65,"author":{"gitId":"peppapighs"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":66,"author":{"gitId":"peppapighs"},"content":"    public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2022-10-05"},{"lineNumber":67,"author":{"gitId":"peppapighs"},"content":"        requireAllNonNull(target, editedTask);","lastModifiedDate":"2022-10-05"},{"lineNumber":68,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":69,"author":{"gitId":"peppapighs"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2022-10-05"},{"lineNumber":70,"author":{"gitId":"peppapighs"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2022-10-05"},{"lineNumber":71,"author":{"gitId":"peppapighs"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2022-10-05"},{"lineNumber":72,"author":{"gitId":"peppapighs"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":73,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":74,"author":{"gitId":"peppapighs"},"content":"        if (!target.equals(editedTask) \u0026\u0026 contains(editedTask)) {","lastModifiedDate":"2022-10-05"},{"lineNumber":75,"author":{"gitId":"peppapighs"},"content":"            throw new DuplicateTaskException();","lastModifiedDate":"2022-10-05"},{"lineNumber":76,"author":{"gitId":"peppapighs"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":77,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":78,"author":{"gitId":"peppapighs"},"content":"        internalList.set(index, editedTask);","lastModifiedDate":"2022-10-05"},{"lineNumber":79,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":80,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":81,"author":{"gitId":"peppapighs"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":82,"author":{"gitId":"peppapighs"},"content":"     * Removes the equivalent task from the list.","lastModifiedDate":"2022-10-05"},{"lineNumber":83,"author":{"gitId":"peppapighs"},"content":"     * The task must exist in the list.","lastModifiedDate":"2022-10-05"},{"lineNumber":84,"author":{"gitId":"peppapighs"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":85,"author":{"gitId":"peppapighs"},"content":"     * @param toRemove Task to be removed.","lastModifiedDate":"2022-10-05"},{"lineNumber":86,"author":{"gitId":"peppapighs"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":87,"author":{"gitId":"peppapighs"},"content":"    public void remove(Task toRemove) {","lastModifiedDate":"2022-10-05"},{"lineNumber":88,"author":{"gitId":"peppapighs"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2022-10-05"},{"lineNumber":89,"author":{"gitId":"peppapighs"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2022-10-05"},{"lineNumber":90,"author":{"gitId":"peppapighs"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2022-10-05"},{"lineNumber":91,"author":{"gitId":"peppapighs"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":92,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":93,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":94,"author":{"gitId":"peppapighs"},"content":"    public void setTasks(UniqueTaskList replacement) {","lastModifiedDate":"2022-10-05"},{"lineNumber":95,"author":{"gitId":"peppapighs"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2022-10-05"},{"lineNumber":96,"author":{"gitId":"peppapighs"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2022-10-05"},{"lineNumber":97,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":98,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":99,"author":{"gitId":"peppapighs"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":100,"author":{"gitId":"peppapighs"},"content":"     * Replaces the contents of this list with {@code tasks}.","lastModifiedDate":"2022-10-05"},{"lineNumber":101,"author":{"gitId":"peppapighs"},"content":"     * {@code tasks} must not contain duplicate tasks.","lastModifiedDate":"2022-10-05"},{"lineNumber":102,"author":{"gitId":"peppapighs"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":103,"author":{"gitId":"peppapighs"},"content":"     * @param tasks The list of tasks to replace the current list with.","lastModifiedDate":"2022-10-05"},{"lineNumber":104,"author":{"gitId":"peppapighs"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":105,"author":{"gitId":"peppapighs"},"content":"    public void setTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2022-10-05"},{"lineNumber":106,"author":{"gitId":"peppapighs"},"content":"        requireAllNonNull(tasks);","lastModifiedDate":"2022-10-05"},{"lineNumber":107,"author":{"gitId":"peppapighs"},"content":"        if (!tasksAreUnique(tasks)) {","lastModifiedDate":"2022-10-05"},{"lineNumber":108,"author":{"gitId":"peppapighs"},"content":"            throw new DuplicateTaskException();","lastModifiedDate":"2022-10-05"},{"lineNumber":109,"author":{"gitId":"peppapighs"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":110,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":111,"author":{"gitId":"peppapighs"},"content":"        internalList.setAll(tasks);","lastModifiedDate":"2022-10-05"},{"lineNumber":112,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":113,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":114,"author":{"gitId":"peppapighs"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":115,"author":{"gitId":"peppapighs"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2022-10-05"},{"lineNumber":116,"author":{"gitId":"peppapighs"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":117,"author":{"gitId":"peppapighs"},"content":"    public ObservableList\u003cTask\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-10-05"},{"lineNumber":118,"author":{"gitId":"peppapighs"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2022-10-05"},{"lineNumber":119,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":120,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":121,"author":{"gitId":"peppapighs"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":122,"author":{"gitId":"peppapighs"},"content":"    public Iterator\u003cTask\u003e iterator() {","lastModifiedDate":"2022-10-05"},{"lineNumber":123,"author":{"gitId":"peppapighs"},"content":"        return internalList.iterator();","lastModifiedDate":"2022-10-05"},{"lineNumber":124,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":125,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":126,"author":{"gitId":"peppapighs"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":127,"author":{"gitId":"peppapighs"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-05"},{"lineNumber":128,"author":{"gitId":"peppapighs"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-05"},{"lineNumber":129,"author":{"gitId":"peppapighs"},"content":"                || (other instanceof UniqueTaskList // instanceof handles nulls","lastModifiedDate":"2022-10-05"},{"lineNumber":130,"author":{"gitId":"peppapighs"},"content":"                \u0026\u0026 internalList.equals(((UniqueTaskList) other).internalList));","lastModifiedDate":"2022-10-05"},{"lineNumber":131,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":132,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":133,"author":{"gitId":"peppapighs"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":134,"author":{"gitId":"peppapighs"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-05"},{"lineNumber":135,"author":{"gitId":"peppapighs"},"content":"        return internalList.hashCode();","lastModifiedDate":"2022-10-05"},{"lineNumber":136,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":137,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":138,"author":{"gitId":"peppapighs"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":139,"author":{"gitId":"peppapighs"},"content":"     * Returns true if {@code tasks} contains only unique tasks.","lastModifiedDate":"2022-10-05"},{"lineNumber":140,"author":{"gitId":"peppapighs"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":141,"author":{"gitId":"peppapighs"},"content":"     * @param tasks A list of tasks.","lastModifiedDate":"2022-10-05"},{"lineNumber":142,"author":{"gitId":"peppapighs"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":143,"author":{"gitId":"peppapighs"},"content":"    private boolean tasksAreUnique(List\u003cTask\u003e tasks) {","lastModifiedDate":"2022-10-05"},{"lineNumber":144,"author":{"gitId":"peppapighs"},"content":"        for (int i \u003d 0; i \u003c tasks.size() - 1; i++) {","lastModifiedDate":"2022-10-05"},{"lineNumber":145,"author":{"gitId":"peppapighs"},"content":"            for (int j \u003d i + 1; j \u003c tasks.size(); j++) {","lastModifiedDate":"2022-10-05"},{"lineNumber":146,"author":{"gitId":"peppapighs"},"content":"                if (tasks.get(i).equals(tasks.get(j))) {","lastModifiedDate":"2022-10-05"},{"lineNumber":147,"author":{"gitId":"peppapighs"},"content":"                    return false;","lastModifiedDate":"2022-10-05"},{"lineNumber":148,"author":{"gitId":"peppapighs"},"content":"                }","lastModifiedDate":"2022-10-05"},{"lineNumber":149,"author":{"gitId":"peppapighs"},"content":"            }","lastModifiedDate":"2022-10-05"},{"lineNumber":150,"author":{"gitId":"peppapighs"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":151,"author":{"gitId":"peppapighs"},"content":"        return true;","lastModifiedDate":"2022-10-05"},{"lineNumber":152,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":153,"author":{"gitId":"peppapighs"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"peppapighs":153}},{"path":"src/main/java/swift/model/task/exceptions/DuplicateTaskException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.model.task.exceptions;","lastModifiedDate":"2022-10-05"},{"lineNumber":2,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"peppapighs"},"content":"/**","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"peppapighs"},"content":" * Signals that the operation will result in duplicate Tasks (Taskss are","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"peppapighs"},"content":" * considered duplicates if they have the same","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"peppapighs"},"content":" * name and owner).","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"peppapighs"},"content":" */","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"peppapighs"},"content":"public class DuplicateTaskException extends RuntimeException {","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"peppapighs"},"content":"    public DuplicateTaskException() {","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"peppapighs"},"content":"        super(\"Operation would result in duplicate tasks\");","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"peppapighs"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"peppapighs":12}},{"path":"src/main/java/swift/model/task/exceptions/TaskNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.model.task.exceptions;","lastModifiedDate":"2022-10-05"},{"lineNumber":2,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"peppapighs"},"content":"/**","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"peppapighs"},"content":" * Signals that the operation is unable to find the specified task.","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"peppapighs"},"content":" */","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"peppapighs"},"content":"public class TaskNotFoundException extends RuntimeException {","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"peppapighs"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"peppapighs":7}},{"path":"src/main/java/swift/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.model.util;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"jasonqiu212"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"jasonqiu212"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"peppapighs"},"content":"import java.util.UUID;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":10,"author":{"gitId":"peppapighs"},"content":"import swift.model.AddressBook;","lastModifiedDate":"2022-10-01"},{"lineNumber":11,"author":{"gitId":"peppapighs"},"content":"import swift.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-10-01"},{"lineNumber":12,"author":{"gitId":"jasonqiu212"},"content":"import swift.model.bridge.PersonTaskBridge;","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"peppapighs"},"content":"import swift.model.person.Address;","lastModifiedDate":"2022-10-01"},{"lineNumber":14,"author":{"gitId":"peppapighs"},"content":"import swift.model.person.Email;","lastModifiedDate":"2022-10-01"},{"lineNumber":15,"author":{"gitId":"peppapighs"},"content":"import swift.model.person.Person;","lastModifiedDate":"2022-10-01"},{"lineNumber":16,"author":{"gitId":"jasonqiu212"},"content":"import swift.model.person.PersonName;","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"peppapighs"},"content":"import swift.model.person.Phone;","lastModifiedDate":"2022-10-01"},{"lineNumber":18,"author":{"gitId":"peppapighs"},"content":"import swift.model.tag.Tag;","lastModifiedDate":"2022-10-01"},{"lineNumber":19,"author":{"gitId":"jasonqiu212"},"content":"import swift.model.task.Deadline;","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"jasonqiu212"},"content":"import swift.model.task.Description;","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"jasonqiu212"},"content":"import swift.model.task.Task;","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"jasonqiu212"},"content":"import swift.model.task.TaskName;","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":28,"author":{"gitId":"jasonqiu212"},"content":"    public static ArrayList\u003cPerson\u003e getSamplePersons() {","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"jasonqiu212"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"peppapighs"},"content":"                new Person(UUID.fromString(\"6517916e-80c0-40e1-ac13-7cb870f57d80\"),","lastModifiedDate":"2022-10-15"},{"lineNumber":31,"author":{"gitId":"jasonqiu212"},"content":"                        new PersonName(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2022-10-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                        new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":33,"author":{"gitId":"jasonqiu212"},"content":"                        getTagSet(\"clients\")),","lastModifiedDate":"2022-10-26"},{"lineNumber":34,"author":{"gitId":"peppapighs"},"content":"                new Person(UUID.fromString(\"049fb6e6-7e43-4075-a1e3-faad028faa0f\"),","lastModifiedDate":"2022-10-15"},{"lineNumber":35,"author":{"gitId":"jasonqiu212"},"content":"                        new PersonName(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2022-10-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                        new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":37,"author":{"gitId":"jasonqiu212"},"content":"                        getTagSet(\"developers\")),","lastModifiedDate":"2022-10-26"},{"lineNumber":38,"author":{"gitId":"peppapighs"},"content":"                new Person(UUID.fromString(\"5f3f93b9-d839-4d5c-b197-9f3e53ebbb71\"),","lastModifiedDate":"2022-10-15"},{"lineNumber":39,"author":{"gitId":"jasonqiu212"},"content":"                        new PersonName(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2022-10-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                        new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":41,"author":{"gitId":"jasonqiu212"},"content":"                        getTagSet(\"developers\")),","lastModifiedDate":"2022-10-26"},{"lineNumber":42,"author":{"gitId":"peppapighs"},"content":"                new Person(UUID.fromString(\"f2d431ed-1793-4761-9121-3652441e0ea2\"),","lastModifiedDate":"2022-10-15"},{"lineNumber":43,"author":{"gitId":"jasonqiu212"},"content":"                        new PersonName(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2022-10-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                        new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":45,"author":{"gitId":"jasonqiu212"},"content":"                        getTagSet(\"clients\")),","lastModifiedDate":"2022-10-26"},{"lineNumber":46,"author":{"gitId":"peppapighs"},"content":"                new Person(UUID.fromString(\"98245b81-7d46-4834-b557-ed2f720110e8\"),","lastModifiedDate":"2022-10-15"},{"lineNumber":47,"author":{"gitId":"jasonqiu212"},"content":"                        new PersonName(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2022-10-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                        new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":49,"author":{"gitId":"jasonqiu212"},"content":"                        getTagSet(\"clients\")),","lastModifiedDate":"2022-10-26"},{"lineNumber":50,"author":{"gitId":"peppapighs"},"content":"                new Person(UUID.fromString(\"1c6513a5-f530-4995-88ba-c9a7eb77d81c\"),","lastModifiedDate":"2022-10-15"},{"lineNumber":51,"author":{"gitId":"jasonqiu212"},"content":"                        new PersonName(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2022-10-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                        new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":53,"author":{"gitId":"jasonqiu212"},"content":"                        getTagSet(\"designers\"))","lastModifiedDate":"2022-10-26"},{"lineNumber":54,"author":{"gitId":"jasonqiu212"},"content":"        ));","lastModifiedDate":"2022-10-26"},{"lineNumber":55,"author":{"gitId":"jasonqiu212"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":56,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":57,"author":{"gitId":"jasonqiu212"},"content":"    public static ArrayList\u003cTask\u003e getSampleTasks() {","lastModifiedDate":"2022-10-26"},{"lineNumber":58,"author":{"gitId":"jasonqiu212"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(","lastModifiedDate":"2022-10-26"},{"lineNumber":59,"author":{"gitId":"jasonqiu212"},"content":"                new Task(UUID.fromString(\"08a458c9-4f0e-4819-a716-1876ff57356f\"),","lastModifiedDate":"2022-10-26"},{"lineNumber":60,"author":{"gitId":"jasonqiu212"},"content":"                        new TaskName(\"Discuss user requirements\"),","lastModifiedDate":"2022-10-26"},{"lineNumber":61,"author":{"gitId":"jasonqiu212"},"content":"                        Optional.of(new Description(\"Draw diagrams\")),","lastModifiedDate":"2022-10-26"},{"lineNumber":62,"author":{"gitId":"jasonqiu212"},"content":"                        Optional.of(new Deadline(\"12-12-2022 1400\")),","lastModifiedDate":"2022-10-28"},{"lineNumber":63,"author":{"gitId":"jasonqiu212"},"content":"                        false),","lastModifiedDate":"2022-10-28"},{"lineNumber":64,"author":{"gitId":"jasonqiu212"},"content":"                new Task(UUID.fromString(\"9f1d7d61-e75b-41f2-b66b-1ce95ec251e3\"),","lastModifiedDate":"2022-10-26"},{"lineNumber":65,"author":{"gitId":"jasonqiu212"},"content":"                        new TaskName(\"Update developer guide\"),","lastModifiedDate":"2022-10-26"},{"lineNumber":66,"author":{"gitId":"jasonqiu212"},"content":"                        Optional.of(new Description(\"Include UML diagram\")),","lastModifiedDate":"2022-10-26"},{"lineNumber":67,"author":{"gitId":"jasonqiu212"},"content":"                        Optional.empty(),","lastModifiedDate":"2022-10-28"},{"lineNumber":68,"author":{"gitId":"jasonqiu212"},"content":"                        true),","lastModifiedDate":"2022-10-28"},{"lineNumber":69,"author":{"gitId":"jasonqiu212"},"content":"                new Task(UUID.fromString(\"990b1561-ea5f-498d-96e6-eab5381b609e\"),","lastModifiedDate":"2022-10-26"},{"lineNumber":70,"author":{"gitId":"jasonqiu212"},"content":"                        new TaskName(\"Review PR\"),","lastModifiedDate":"2022-10-26"},{"lineNumber":71,"author":{"gitId":"jasonqiu212"},"content":"                        Optional.empty(),","lastModifiedDate":"2022-10-26"},{"lineNumber":72,"author":{"gitId":"jasonqiu212"},"content":"                        Optional.of(new Deadline(\"14-12-2022 1800\")),","lastModifiedDate":"2022-10-28"},{"lineNumber":73,"author":{"gitId":"jasonqiu212"},"content":"                        false),","lastModifiedDate":"2022-10-28"},{"lineNumber":74,"author":{"gitId":"jasonqiu212"},"content":"                new Task(UUID.fromString(\"f2b134b4-d505-463c-bc10-0e72c4566002\"),","lastModifiedDate":"2022-10-26"},{"lineNumber":75,"author":{"gitId":"jasonqiu212"},"content":"                        new TaskName(\"Brainstorm user stories\"),","lastModifiedDate":"2022-10-26"},{"lineNumber":76,"author":{"gitId":"jasonqiu212"},"content":"                        Optional.of(new Description(\"Meeting link: https://www.meeting.com\")),","lastModifiedDate":"2022-10-26"},{"lineNumber":77,"author":{"gitId":"jasonqiu212"},"content":"                        Optional.of(new Deadline(\"14-12-2022 1800\")),","lastModifiedDate":"2022-10-28"},{"lineNumber":78,"author":{"gitId":"jasonqiu212"},"content":"                        true)","lastModifiedDate":"2022-10-28"},{"lineNumber":79,"author":{"gitId":"jasonqiu212"},"content":"        ));","lastModifiedDate":"2022-10-26"},{"lineNumber":80,"author":{"gitId":"jasonqiu212"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":81,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":82,"author":{"gitId":"jasonqiu212"},"content":"    public static ArrayList\u003cPersonTaskBridge\u003e getSamplePersonTaskBridge() {","lastModifiedDate":"2022-10-26"},{"lineNumber":83,"author":{"gitId":"jasonqiu212"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(","lastModifiedDate":"2022-10-26"},{"lineNumber":84,"author":{"gitId":"jasonqiu212"},"content":"                new PersonTaskBridge(UUID.fromString(\"6517916e-80c0-40e1-ac13-7cb870f57d80\"),","lastModifiedDate":"2022-10-26"},{"lineNumber":85,"author":{"gitId":"jasonqiu212"},"content":"                        UUID.fromString(\"08a458c9-4f0e-4819-a716-1876ff57356f\")),","lastModifiedDate":"2022-10-26"},{"lineNumber":86,"author":{"gitId":"jasonqiu212"},"content":"                new PersonTaskBridge(UUID.fromString(\"049fb6e6-7e43-4075-a1e3-faad028faa0f\"),","lastModifiedDate":"2022-10-26"},{"lineNumber":87,"author":{"gitId":"jasonqiu212"},"content":"                        UUID.fromString(\"9f1d7d61-e75b-41f2-b66b-1ce95ec251e3\")),","lastModifiedDate":"2022-10-26"},{"lineNumber":88,"author":{"gitId":"jasonqiu212"},"content":"                new PersonTaskBridge(UUID.fromString(\"049fb6e6-7e43-4075-a1e3-faad028faa0f\"),","lastModifiedDate":"2022-10-26"},{"lineNumber":89,"author":{"gitId":"jasonqiu212"},"content":"                        UUID.fromString(\"990b1561-ea5f-498d-96e6-eab5381b609e\")),","lastModifiedDate":"2022-10-26"},{"lineNumber":90,"author":{"gitId":"jasonqiu212"},"content":"                new PersonTaskBridge(UUID.fromString(\"f2d431ed-1793-4761-9121-3652441e0ea2\"),","lastModifiedDate":"2022-10-26"},{"lineNumber":91,"author":{"gitId":"jasonqiu212"},"content":"                        UUID.fromString(\"f2b134b4-d505-463c-bc10-0e72c4566002\"))","lastModifiedDate":"2022-10-26"},{"lineNumber":92,"author":{"gitId":"jasonqiu212"},"content":"        ));","lastModifiedDate":"2022-10-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":97,"author":{"gitId":"jasonqiu212"},"content":"        sampleAb.setPersons(getSamplePersons());","lastModifiedDate":"2022-10-26"},{"lineNumber":98,"author":{"gitId":"jasonqiu212"},"content":"        sampleAb.setTasks(getSampleTasks());","lastModifiedDate":"2022-10-26"},{"lineNumber":99,"author":{"gitId":"jasonqiu212"},"content":"        sampleAb.setBridges(getSamplePersonTaskBridge());","lastModifiedDate":"2022-10-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"jasonqiu212":64,"peppapighs":15,"-":32}},{"path":"src/main/java/swift/storage/AddressBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.storage;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"peppapighs"},"content":"import swift.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-01"},{"lineNumber":8,"author":{"gitId":"peppapighs"},"content":"import swift.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-10-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"peppapighs"},"content":" * Represents a storage for {@link swift.model.AddressBook}.","lastModifiedDate":"2022-10-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public interface AddressBookStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns AddressBook data as a {@link ReadOnlyAddressBook}.","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @see #getAddressBookFilePath()","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Saves the given {@link ReadOnlyAddressBook} to the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param addressBook cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @see #saveAddressBook(ReadOnlyAddressBook)","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException;","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"peppapighs":4,"-":41}},{"path":"src/main/java/swift/storage/JsonAdaptedBridge.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.storage;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"peppapighs"},"content":"import java.util.UUID;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"peppapighs"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"peppapighs"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"peppapighs"},"content":"import swift.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"peppapighs"},"content":"import swift.model.bridge.PersonTaskBridge;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"peppapighs"},"content":"/**","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"peppapighs"},"content":" * Jackson-friendly version of {@link PersonTaskBridge}.","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"peppapighs"},"content":" */","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"peppapighs"},"content":"class JsonAdaptedBridge {","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"peppapighs"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Bridge\u0027s %s field is missing!\";","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"peppapighs"},"content":"    private final String personId;","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"peppapighs"},"content":"    private final String taskId;","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"peppapighs"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"peppapighs"},"content":"     * Constructs a {@code JsonAdaptedBridge} with the given person details.","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"peppapighs"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"peppapighs"},"content":"    @JsonCreator","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"peppapighs"},"content":"    public JsonAdaptedBridge(@JsonProperty(\"personId\") String personId, @JsonProperty(\"taskId\") String taskId) {","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"peppapighs"},"content":"        this.personId \u003d personId;","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"peppapighs"},"content":"        this.taskId \u003d taskId;","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"peppapighs"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"peppapighs"},"content":"     * Converts a given {@code PersonTaskBridge} into this class for Jackson use.","lastModifiedDate":"2022-10-16"},{"lineNumber":32,"author":{"gitId":"peppapighs"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"peppapighs"},"content":"    public JsonAdaptedBridge(PersonTaskBridge source) {","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"peppapighs"},"content":"        personId \u003d source.getPersonId().toString();","lastModifiedDate":"2022-10-16"},{"lineNumber":35,"author":{"gitId":"peppapighs"},"content":"        taskId \u003d source.getTaskId().toString();","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"peppapighs"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":39,"author":{"gitId":"peppapighs"},"content":"     * Converts this Jackson-friendly adapted person-task bridge object into the","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"peppapighs"},"content":"     * model\u0027s","lastModifiedDate":"2022-10-16"},{"lineNumber":41,"author":{"gitId":"peppapighs"},"content":"     * {@code PersonTaskBridge} object.","lastModifiedDate":"2022-10-16"},{"lineNumber":42,"author":{"gitId":"peppapighs"},"content":"     *","lastModifiedDate":"2022-10-16"},{"lineNumber":43,"author":{"gitId":"peppapighs"},"content":"     * @throws IllegalValueException if there were any data constraints violated in","lastModifiedDate":"2022-10-16"},{"lineNumber":44,"author":{"gitId":"peppapighs"},"content":"     *                               the adapted person-task bridge.","lastModifiedDate":"2022-10-16"},{"lineNumber":45,"author":{"gitId":"peppapighs"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":46,"author":{"gitId":"peppapighs"},"content":"    public PersonTaskBridge toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-16"},{"lineNumber":47,"author":{"gitId":"peppapighs"},"content":"        if (personId \u003d\u003d null) {","lastModifiedDate":"2022-10-16"},{"lineNumber":48,"author":{"gitId":"peppapighs"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, UUID.class.getSimpleName()));","lastModifiedDate":"2022-10-16"},{"lineNumber":49,"author":{"gitId":"peppapighs"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":50,"author":{"gitId":"peppapighs"},"content":"        try {","lastModifiedDate":"2022-10-16"},{"lineNumber":51,"author":{"gitId":"peppapighs"},"content":"            UUID.fromString(personId);","lastModifiedDate":"2022-10-16"},{"lineNumber":52,"author":{"gitId":"peppapighs"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2022-10-16"},{"lineNumber":53,"author":{"gitId":"peppapighs"},"content":"            throw new IllegalValueException(e.getMessage());","lastModifiedDate":"2022-10-16"},{"lineNumber":54,"author":{"gitId":"peppapighs"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":55,"author":{"gitId":"peppapighs"},"content":"        final UUID modelPersonId \u003d UUID.fromString(personId);","lastModifiedDate":"2022-10-16"},{"lineNumber":56,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":57,"author":{"gitId":"peppapighs"},"content":"        if (taskId \u003d\u003d null) {","lastModifiedDate":"2022-10-16"},{"lineNumber":58,"author":{"gitId":"peppapighs"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, UUID.class.getSimpleName()));","lastModifiedDate":"2022-10-16"},{"lineNumber":59,"author":{"gitId":"peppapighs"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":60,"author":{"gitId":"peppapighs"},"content":"        try {","lastModifiedDate":"2022-10-16"},{"lineNumber":61,"author":{"gitId":"peppapighs"},"content":"            UUID.fromString(taskId);","lastModifiedDate":"2022-10-16"},{"lineNumber":62,"author":{"gitId":"peppapighs"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2022-10-16"},{"lineNumber":63,"author":{"gitId":"peppapighs"},"content":"            throw new IllegalValueException(e.getMessage());","lastModifiedDate":"2022-10-16"},{"lineNumber":64,"author":{"gitId":"peppapighs"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":65,"author":{"gitId":"peppapighs"},"content":"        final UUID modelTaskId \u003d UUID.fromString(taskId);","lastModifiedDate":"2022-10-16"},{"lineNumber":66,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":67,"author":{"gitId":"peppapighs"},"content":"        return new PersonTaskBridge(modelPersonId, modelTaskId);","lastModifiedDate":"2022-10-16"},{"lineNumber":68,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":69,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":70,"author":{"gitId":"peppapighs"},"content":"}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"peppapighs":70}},{"path":"src/main/java/swift/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.storage;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"peppapighs"},"content":"import java.util.UUID;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"peppapighs"},"content":"import swift.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-01"},{"lineNumber":14,"author":{"gitId":"peppapighs"},"content":"import swift.model.person.Address;","lastModifiedDate":"2022-10-01"},{"lineNumber":15,"author":{"gitId":"peppapighs"},"content":"import swift.model.person.Email;","lastModifiedDate":"2022-10-01"},{"lineNumber":16,"author":{"gitId":"peppapighs"},"content":"import swift.model.person.Person;","lastModifiedDate":"2022-10-01"},{"lineNumber":17,"author":{"gitId":"jasonqiu212"},"content":"import swift.model.person.PersonName;","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"peppapighs"},"content":"import swift.model.person.Phone;","lastModifiedDate":"2022-10-01"},{"lineNumber":19,"author":{"gitId":"peppapighs"},"content":"import swift.model.tag.Tag;","lastModifiedDate":"2022-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"peppapighs"},"content":"    private final String id;","lastModifiedDate":"2022-10-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"peppapighs"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"id\") String id,","lastModifiedDate":"2022-10-15"},{"lineNumber":40,"author":{"gitId":"peppapighs"},"content":"            @JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2022-10-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"peppapighs"},"content":"        this.id \u003d id;","lastModifiedDate":"2022-10-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"peppapighs"},"content":"        id \u003d source.getId().toString();","lastModifiedDate":"2022-10-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"peppapighs"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s","lastModifiedDate":"2022-10-15"},{"lineNumber":69,"author":{"gitId":"peppapighs"},"content":"     * {@code Person} object.","lastModifiedDate":"2022-10-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"peppapighs"},"content":"     * @throws IllegalValueException if there were any data constraints violated in","lastModifiedDate":"2022-10-15"},{"lineNumber":72,"author":{"gitId":"peppapighs"},"content":"     *                               the adapted person.","lastModifiedDate":"2022-10-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"peppapighs"},"content":"        if (id \u003d\u003d null) {","lastModifiedDate":"2022-10-15"},{"lineNumber":76,"author":{"gitId":"peppapighs"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, UUID.class.getSimpleName()));","lastModifiedDate":"2022-10-15"},{"lineNumber":77,"author":{"gitId":"peppapighs"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":78,"author":{"gitId":"peppapighs"},"content":"        try {","lastModifiedDate":"2022-10-15"},{"lineNumber":79,"author":{"gitId":"peppapighs"},"content":"            UUID.fromString(id);","lastModifiedDate":"2022-10-15"},{"lineNumber":80,"author":{"gitId":"peppapighs"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2022-10-15"},{"lineNumber":81,"author":{"gitId":"peppapighs"},"content":"            throw new IllegalValueException(e.getMessage());","lastModifiedDate":"2022-10-15"},{"lineNumber":82,"author":{"gitId":"peppapighs"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":83,"author":{"gitId":"peppapighs"},"content":"        final UUID modelId \u003d UUID.fromString(id);","lastModifiedDate":"2022-10-15"},{"lineNumber":84,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"jasonqiu212"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-10-26"},{"lineNumber":92,"author":{"gitId":"jasonqiu212"},"content":"                    PersonName.class.getSimpleName()));","lastModifiedDate":"2022-10-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"jasonqiu212"},"content":"        if (!PersonName.isValidName(name)) {","lastModifiedDate":"2022-10-24"},{"lineNumber":95,"author":{"gitId":"jasonqiu212"},"content":"            throw new IllegalValueException(PersonName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"jasonqiu212"},"content":"        final PersonName modelName \u003d new PersonName(name);","lastModifiedDate":"2022-10-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"peppapighs"},"content":"        return new Person(modelId, modelName, modelPhone, modelEmail, modelAddress, modelTags);","lastModifiedDate":"2022-10-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"jasonqiu212":6,"peppapighs":28,"-":93}},{"path":"src/main/java/swift/storage/JsonAdaptedTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.storage;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"peppapighs"},"content":"import swift.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-01"},{"lineNumber":7,"author":{"gitId":"peppapighs"},"content":"import swift.model.tag.Tag;","lastModifiedDate":"2022-10-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"class JsonAdaptedTag {","lastModifiedDate":"2018-12-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(String tagName) {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(Tag source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        tagName \u003d source.tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public String getTagName() {","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Tag toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(tagName)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Tag(tagName);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"peppapighs":3,"-":45}},{"path":"src/main/java/swift/storage/JsonAdaptedTask.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.storage;","lastModifiedDate":"2022-10-05"},{"lineNumber":2,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"jasonqiu212"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-26"},{"lineNumber":4,"author":{"gitId":"peppapighs"},"content":"import java.util.UUID;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"peppapighs"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"peppapighs"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"peppapighs"},"content":"import swift.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"jasonqiu212"},"content":"import swift.logic.parser.ParserUtil;","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"jasonqiu212"},"content":"import swift.model.task.Deadline;","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"jasonqiu212"},"content":"import swift.model.task.Description;","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"peppapighs"},"content":"import swift.model.task.Task;","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"peppapighs"},"content":"import swift.model.task.TaskName;","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"peppapighs"},"content":"/**","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"peppapighs"},"content":" * Jackson-friendly version of {@link Task}.","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"peppapighs"},"content":" */","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"peppapighs"},"content":"class JsonAdaptedTask {","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"peppapighs"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Task\u0027s %s field is missing!\";","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"peppapighs"},"content":"    private final String id;","lastModifiedDate":"2022-10-15"},{"lineNumber":24,"author":{"gitId":"peppapighs"},"content":"    private final String taskName;","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"jasonqiu212"},"content":"    private final String description;","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"jasonqiu212"},"content":"    private final String deadline;","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"jasonqiu212"},"content":"    private final boolean isDone;","lastModifiedDate":"2022-10-28"},{"lineNumber":29,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":30,"author":{"gitId":"peppapighs"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"peppapighs"},"content":"     * Constructs a {@code JsonAdaptedTask} with the given person details.","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"peppapighs"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"peppapighs"},"content":"    @JsonCreator","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"jasonqiu212"},"content":"    public JsonAdaptedTask(@JsonProperty(\"id\") String id, @JsonProperty(\"taskName\") String taskName,","lastModifiedDate":"2022-10-26"},{"lineNumber":35,"author":{"gitId":"jasonqiu212"},"content":"            @JsonProperty(\"description\") String description, @JsonProperty(\"deadline\") String deadline,","lastModifiedDate":"2022-10-28"},{"lineNumber":36,"author":{"gitId":"jasonqiu212"},"content":"            @JsonProperty(\"isDone\") boolean isDone) {","lastModifiedDate":"2022-10-28"},{"lineNumber":37,"author":{"gitId":"peppapighs"},"content":"        this.id \u003d id;","lastModifiedDate":"2022-10-15"},{"lineNumber":38,"author":{"gitId":"peppapighs"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"jasonqiu212"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-10-26"},{"lineNumber":40,"author":{"gitId":"jasonqiu212"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2022-10-26"},{"lineNumber":41,"author":{"gitId":"jasonqiu212"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-10-28"},{"lineNumber":42,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"peppapighs"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"peppapighs"},"content":"     * Converts a given {@code Task} into this class for Jackson use.","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"peppapighs"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"peppapighs"},"content":"    public JsonAdaptedTask(Task source) {","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"peppapighs"},"content":"        id \u003d source.getId().toString();","lastModifiedDate":"2022-10-15"},{"lineNumber":49,"author":{"gitId":"jasonqiu212"},"content":"        taskName \u003d source.getName().fullName;","lastModifiedDate":"2022-10-26"},{"lineNumber":50,"author":{"gitId":"jasonqiu212"},"content":"        description \u003d source.getDescription().map(Description::toString).orElse(null);","lastModifiedDate":"2022-10-26"},{"lineNumber":51,"author":{"gitId":"jasonqiu212"},"content":"        deadline \u003d source.getDeadline().map(Deadline::toString).orElse(null);","lastModifiedDate":"2022-10-26"},{"lineNumber":52,"author":{"gitId":"jasonqiu212"},"content":"        isDone \u003d source.isDone();","lastModifiedDate":"2022-10-28"},{"lineNumber":53,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":54,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":55,"author":{"gitId":"peppapighs"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":56,"author":{"gitId":"peppapighs"},"content":"     * Converts this Jackson-friendly adapted task object into the model\u0027s","lastModifiedDate":"2022-10-05"},{"lineNumber":57,"author":{"gitId":"peppapighs"},"content":"     * {@code Task} object.","lastModifiedDate":"2022-10-05"},{"lineNumber":58,"author":{"gitId":"peppapighs"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":59,"author":{"gitId":"peppapighs"},"content":"     * @throws IllegalValueException if there were any data constraints violated in","lastModifiedDate":"2022-10-05"},{"lineNumber":60,"author":{"gitId":"peppapighs"},"content":"     *                               the adapted task.","lastModifiedDate":"2022-10-05"},{"lineNumber":61,"author":{"gitId":"peppapighs"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":62,"author":{"gitId":"peppapighs"},"content":"    public Task toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-05"},{"lineNumber":63,"author":{"gitId":"peppapighs"},"content":"        if (id \u003d\u003d null) {","lastModifiedDate":"2022-10-15"},{"lineNumber":64,"author":{"gitId":"peppapighs"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, UUID.class.getSimpleName()));","lastModifiedDate":"2022-10-15"},{"lineNumber":65,"author":{"gitId":"peppapighs"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":66,"author":{"gitId":"peppapighs"},"content":"        try {","lastModifiedDate":"2022-10-15"},{"lineNumber":67,"author":{"gitId":"peppapighs"},"content":"            UUID.fromString(id);","lastModifiedDate":"2022-10-15"},{"lineNumber":68,"author":{"gitId":"peppapighs"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2022-10-15"},{"lineNumber":69,"author":{"gitId":"peppapighs"},"content":"            throw new IllegalValueException(e.getMessage());","lastModifiedDate":"2022-10-15"},{"lineNumber":70,"author":{"gitId":"peppapighs"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":71,"author":{"gitId":"peppapighs"},"content":"        final UUID modelId \u003d UUID.fromString(id);","lastModifiedDate":"2022-10-15"},{"lineNumber":72,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":73,"author":{"gitId":"peppapighs"},"content":"        if (taskName \u003d\u003d null) {","lastModifiedDate":"2022-10-05"},{"lineNumber":74,"author":{"gitId":"peppapighs"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2022-10-05"},{"lineNumber":75,"author":{"gitId":"peppapighs"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, TaskName.class.getSimpleName()));","lastModifiedDate":"2022-10-05"},{"lineNumber":76,"author":{"gitId":"peppapighs"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":77,"author":{"gitId":"peppapighs"},"content":"        if (!TaskName.isValidName(taskName)) {","lastModifiedDate":"2022-10-05"},{"lineNumber":78,"author":{"gitId":"peppapighs"},"content":"            throw new IllegalValueException(TaskName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-05"},{"lineNumber":79,"author":{"gitId":"peppapighs"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":80,"author":{"gitId":"peppapighs"},"content":"        final TaskName modelName \u003d new TaskName(taskName);","lastModifiedDate":"2022-10-05"},{"lineNumber":81,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":82,"author":{"gitId":"jasonqiu212"},"content":"        if (description !\u003d null \u0026\u0026 !Description.isValidDescription(description)) {","lastModifiedDate":"2022-10-26"},{"lineNumber":83,"author":{"gitId":"jasonqiu212"},"content":"            throw new IllegalValueException(Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-26"},{"lineNumber":84,"author":{"gitId":"jasonqiu212"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":85,"author":{"gitId":"jasonqiu212"},"content":"        Optional\u003cDescription\u003e modelDescription \u003d Optional.empty();","lastModifiedDate":"2022-10-26"},{"lineNumber":86,"author":{"gitId":"jasonqiu212"},"content":"        if (description !\u003d null) {","lastModifiedDate":"2022-10-26"},{"lineNumber":87,"author":{"gitId":"jasonqiu212"},"content":"            modelDescription \u003d Optional.of(ParserUtil.parseDescription(description));","lastModifiedDate":"2022-10-26"},{"lineNumber":88,"author":{"gitId":"peppapighs"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":89,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":90,"author":{"gitId":"jasonqiu212"},"content":"        if (deadline !\u003d null \u0026\u0026 !Deadline.isValidDeadline(deadline)) {","lastModifiedDate":"2022-10-26"},{"lineNumber":91,"author":{"gitId":"jasonqiu212"},"content":"            throw new IllegalValueException(Deadline.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-26"},{"lineNumber":92,"author":{"gitId":"jasonqiu212"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":93,"author":{"gitId":"jasonqiu212"},"content":"        Optional\u003cDeadline\u003e modelDeadline \u003d Optional.empty();","lastModifiedDate":"2022-10-26"},{"lineNumber":94,"author":{"gitId":"jasonqiu212"},"content":"        if (deadline !\u003d null) {","lastModifiedDate":"2022-10-26"},{"lineNumber":95,"author":{"gitId":"jasonqiu212"},"content":"            modelDeadline \u003d Optional.of(ParserUtil.parseDeadline(deadline));","lastModifiedDate":"2022-10-26"},{"lineNumber":96,"author":{"gitId":"jasonqiu212"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":97,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":98,"author":{"gitId":"jasonqiu212"},"content":"        return new Task(modelId, modelName, modelDescription, modelDeadline, isDone);","lastModifiedDate":"2022-10-28"},{"lineNumber":99,"author":{"gitId":"jasonqiu212"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":100,"author":{"gitId":"peppapighs"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"jasonqiu212":34,"peppapighs":66}},{"path":"src/main/java/swift/storage/JsonAddressBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.storage;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"peppapighs"},"content":"import swift.commons.core.LogsCenter;","lastModifiedDate":"2022-10-01"},{"lineNumber":11,"author":{"gitId":"peppapighs"},"content":"import swift.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-01"},{"lineNumber":12,"author":{"gitId":"peppapighs"},"content":"import swift.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-01"},{"lineNumber":13,"author":{"gitId":"peppapighs"},"content":"import swift.commons.util.FileUtil;","lastModifiedDate":"2022-10-01"},{"lineNumber":14,"author":{"gitId":"peppapighs"},"content":"import swift.commons.util.JsonUtil;","lastModifiedDate":"2022-10-01"},{"lineNumber":15,"author":{"gitId":"peppapighs"},"content":"import swift.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A class to access AddressBook data stored as a json file on the hard disk.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorage implements AddressBookStorage {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonAddressBookStorage.class);","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public JsonAddressBookStorage(Path filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException {","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return readAddressBook(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Similar to {@link #readAddressBook()}.","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Optional\u003cJsonSerializableAddressBook\u003e jsonAddressBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                filePath, JsonSerializableAddressBook.class);","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!jsonAddressBook.isPresent()) {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Optional.of(jsonAddressBook.get().toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Similar to {@link #saveAddressBook(ReadOnlyAddressBook)}.","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireNonNull(addressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableAddressBook(addressBook), filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"peppapighs":7,"-":73}},{"path":"src/main/java/swift/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.storage;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"peppapighs"},"content":"import swift.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-01"},{"lineNumber":12,"author":{"gitId":"peppapighs"},"content":"import swift.model.AddressBook;","lastModifiedDate":"2022-10-01"},{"lineNumber":13,"author":{"gitId":"peppapighs"},"content":"import swift.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-10-01"},{"lineNumber":14,"author":{"gitId":"peppapighs"},"content":"import swift.model.bridge.PersonTaskBridge;","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"peppapighs"},"content":"import swift.model.person.Person;","lastModifiedDate":"2022-10-01"},{"lineNumber":16,"author":{"gitId":"peppapighs"},"content":"import swift.model.task.Task;","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"peppapighs"},"content":"    public static final String MESSAGE_DUPLICATE_TASK \u003d \"Tasks list contains duplicate task(s).\";","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"peppapighs"},"content":"    public static final String MESSAGE_DUPLICATE_BRIDGE \u003d \"Bridges list contains duplicate bridge(s).\";","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"peppapighs"},"content":"    private final List\u003cJsonAdaptedTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"peppapighs"},"content":"    private final List\u003cJsonAdaptedBridge\u003e bridges \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"peppapighs"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons,","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"peppapighs"},"content":"     * tasks and bridges.","lastModifiedDate":"2022-10-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"peppapighs"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons,","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"peppapighs"},"content":"            @JsonProperty(\"tasks\") List\u003cJsonAdaptedTask\u003e tasks,","lastModifiedDate":"2022-10-16"},{"lineNumber":39,"author":{"gitId":"peppapighs"},"content":"            @JsonProperty(\"bridges\") List\u003cJsonAdaptedBridge\u003e bridges) {","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"peppapighs"},"content":"        this.tasks.addAll(tasks);","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"peppapighs"},"content":"        this.bridges.addAll(bridges);","lastModifiedDate":"2022-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"peppapighs"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2022-10-05"},{"lineNumber":49,"author":{"gitId":"peppapighs"},"content":"     *               {@code JsonSerializableAddressBook}.","lastModifiedDate":"2022-10-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"peppapighs"},"content":"        tasks.addAll(source.getTaskList().stream().map(JsonAdaptedTask::new).collect(Collectors.toList()));","lastModifiedDate":"2022-10-05"},{"lineNumber":54,"author":{"gitId":"peppapighs"},"content":"        bridges.addAll(source.getBridgeList().stream().map(JsonAdaptedBridge::new).collect(Collectors.toList()));","lastModifiedDate":"2022-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            if (addressBook.hasPerson(person)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            addressBook.addPerson(person);","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"peppapighs"},"content":"        for (JsonAdaptedTask jsonAdaptedTask : tasks) {","lastModifiedDate":"2022-10-05"},{"lineNumber":72,"author":{"gitId":"peppapighs"},"content":"            Task task \u003d jsonAdaptedTask.toModelType();","lastModifiedDate":"2022-10-05"},{"lineNumber":73,"author":{"gitId":"peppapighs"},"content":"            if (addressBook.hasTask(task)) {","lastModifiedDate":"2022-10-05"},{"lineNumber":74,"author":{"gitId":"peppapighs"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2022-10-05"},{"lineNumber":75,"author":{"gitId":"peppapighs"},"content":"            }","lastModifiedDate":"2022-10-05"},{"lineNumber":76,"author":{"gitId":"peppapighs"},"content":"            addressBook.addTask(task);","lastModifiedDate":"2022-10-05"},{"lineNumber":77,"author":{"gitId":"peppapighs"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":78,"author":{"gitId":"peppapighs"},"content":"        for (JsonAdaptedBridge jsonAdaptedBridge : bridges) {","lastModifiedDate":"2022-10-16"},{"lineNumber":79,"author":{"gitId":"peppapighs"},"content":"            PersonTaskBridge bridge \u003d jsonAdaptedBridge.toModelType();","lastModifiedDate":"2022-10-16"},{"lineNumber":80,"author":{"gitId":"peppapighs"},"content":"            if (addressBook.hasBridge(bridge)) {","lastModifiedDate":"2022-10-16"},{"lineNumber":81,"author":{"gitId":"peppapighs"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_BRIDGE);","lastModifiedDate":"2022-10-16"},{"lineNumber":82,"author":{"gitId":"peppapighs"},"content":"            }","lastModifiedDate":"2022-10-16"},{"lineNumber":83,"author":{"gitId":"peppapighs"},"content":"            addressBook.addBridge(bridge);","lastModifiedDate":"2022-10-16"},{"lineNumber":84,"author":{"gitId":"peppapighs"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"peppapighs":36,"-":52}},{"path":"src/main/java/swift/storage/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.storage;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"peppapighs"},"content":"import swift.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-01"},{"lineNumber":8,"author":{"gitId":"peppapighs"},"content":"import swift.commons.util.JsonUtil;","lastModifiedDate":"2022-10-01"},{"lineNumber":9,"author":{"gitId":"peppapighs"},"content":"import swift.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-01"},{"lineNumber":10,"author":{"gitId":"peppapighs"},"content":"import swift.model.UserPrefs;","lastModifiedDate":"2022-10-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2016-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2017-02-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException {","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"peppapighs":5,"-":42}},{"path":"src/main/java/swift/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.storage;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"peppapighs"},"content":"import swift.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-01"},{"lineNumber":8,"author":{"gitId":"peppapighs"},"content":"import swift.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-10-01"},{"lineNumber":9,"author":{"gitId":"peppapighs"},"content":"import swift.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-01"},{"lineNumber":10,"author":{"gitId":"peppapighs"},"content":"import swift.model.UserPrefs;","lastModifiedDate":"2022-10-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public interface Storage extends AddressBookStorage, UserPrefsStorage {","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException;","lastModifiedDate":"2016-10-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"peppapighs":5,"-":27}},{"path":"src/main/java/swift/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.storage;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"peppapighs"},"content":"import swift.commons.core.LogsCenter;","lastModifiedDate":"2022-10-01"},{"lineNumber":9,"author":{"gitId":"peppapighs"},"content":"import swift.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-01"},{"lineNumber":10,"author":{"gitId":"peppapighs"},"content":"import swift.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-10-01"},{"lineNumber":11,"author":{"gitId":"peppapighs"},"content":"import swift.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-01"},{"lineNumber":12,"author":{"gitId":"peppapighs"},"content":"import swift.model.UserPrefs;","lastModifiedDate":"2022-10-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Manages storage of AddressBook data in local storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private AddressBookStorage addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates a {@code StorageManager} with the given {@code AddressBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public StorageManager(AddressBookStorage addressBookStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2016-10-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.addressBookStorage \u003d addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return addressBookStorage.getAddressBookFilePath();","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException {","lastModifiedDate":"2016-10-01"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return readAddressBook(addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return addressBookStorage.readAddressBook(filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        addressBookStorage.saveAddressBook(addressBook, filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"peppapighs":6,"-":72}},{"path":"src/main/java/swift/storage/UserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.storage;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"peppapighs"},"content":"import swift.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-01"},{"lineNumber":8,"author":{"gitId":"peppapighs"},"content":"import swift.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-01"},{"lineNumber":9,"author":{"gitId":"peppapighs"},"content":"import swift.model.UserPrefs;","lastModifiedDate":"2022-10-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"peppapighs"},"content":" * Represents a storage for {@link swift.model.UserPrefs}.","lastModifiedDate":"2022-10-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface UserPrefsStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2017-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"peppapighs"},"content":"     * Saves the given {@link swift.model.ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2022-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"peppapighs":6,"-":30}},{"path":"src/main/java/swift/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.ui;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"santosh3007"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-10-21"},{"lineNumber":4,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":8,"author":{"gitId":"santosh3007"},"content":"import javafx.scene.input.KeyCode;","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"santosh3007"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"santosh3007"},"content":"import javafx.scene.text.Text;","lastModifiedDate":"2022-11-07"},{"lineNumber":12,"author":{"gitId":"santosh3007"},"content":"import swift.commons.core.LogsCenter;","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"peppapighs"},"content":"import swift.logic.commands.CommandResult;","lastModifiedDate":"2022-10-01"},{"lineNumber":14,"author":{"gitId":"santosh3007"},"content":"import swift.logic.commands.CommandSuggestor;","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"peppapighs"},"content":"import swift.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-01"},{"lineNumber":16,"author":{"gitId":"peppapighs"},"content":"import swift.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"santosh3007"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(CommandBox.class);","lastModifiedDate":"2022-10-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":32,"author":{"gitId":"santosh3007"},"content":"    @FXML","lastModifiedDate":"2022-10-21"},{"lineNumber":33,"author":{"gitId":"santosh3007"},"content":"    private TextField commandSuggestionTextField;","lastModifiedDate":"2022-10-21"},{"lineNumber":34,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":35,"author":{"gitId":"santosh3007"},"content":"    private CommandSuggestor commandSuggestor;","lastModifiedDate":"2022-10-21"},{"lineNumber":36,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":44,"author":{"gitId":"santosh3007"},"content":"        commandTextField.textProperty()","lastModifiedDate":"2022-10-21"},{"lineNumber":45,"author":{"gitId":"santosh3007"},"content":"                .addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2022-10-21"},{"lineNumber":46,"author":{"gitId":"santosh3007"},"content":"        commandTextField.textProperty()","lastModifiedDate":"2022-10-21"},{"lineNumber":47,"author":{"gitId":"santosh3007"},"content":"                .addListener((observable, oldValue, newValue) -\u003e updateCommandSuggestion(newValue));","lastModifiedDate":"2022-10-21"},{"lineNumber":48,"author":{"gitId":"santosh3007"},"content":"        commandTextField.addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e handleKeyPressed(event));","lastModifiedDate":"2022-10-21"},{"lineNumber":49,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":50,"author":{"gitId":"santosh3007"},"content":"        commandSuggestionTextField.setEditable(false);","lastModifiedDate":"2022-10-21"},{"lineNumber":51,"author":{"gitId":"santosh3007"},"content":"        commandSuggestionTextField.setFocusTraversable(false);","lastModifiedDate":"2022-10-21"},{"lineNumber":52,"author":{"gitId":"santosh3007"},"content":"        commandSuggestionTextField.setMouseTransparent(true);","lastModifiedDate":"2022-10-21"},{"lineNumber":53,"author":{"gitId":"santosh3007"},"content":"        commandSuggestor \u003d new CommandSuggestor();","lastModifiedDate":"2022-10-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":102,"author":{"gitId":"peppapighs"},"content":"         * @see swift.logic.Logic#execute(String)","lastModifiedDate":"2022-10-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":107,"author":{"gitId":"santosh3007"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":108,"author":{"gitId":"santosh3007"},"content":"     * Auto-completes user input when the user presses the Tab key.","lastModifiedDate":"2022-10-21"},{"lineNumber":109,"author":{"gitId":"santosh3007"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":110,"author":{"gitId":"santosh3007"},"content":"    public void handleKeyPressed(KeyEvent e) {","lastModifiedDate":"2022-10-21"},{"lineNumber":111,"author":{"gitId":"santosh3007"},"content":"        try {","lastModifiedDate":"2022-11-07"},{"lineNumber":112,"author":{"gitId":"santosh3007"},"content":"            String userInput \u003d commandTextField.getText();","lastModifiedDate":"2022-11-06"},{"lineNumber":113,"author":{"gitId":"santosh3007"},"content":"            if (e.getCode() \u003d\u003d KeyCode.TAB) {","lastModifiedDate":"2022-10-21"},{"lineNumber":114,"author":{"gitId":"santosh3007"},"content":"                String commandSuggestion \u003d commandSuggestor.suggestCommand(userInput);","lastModifiedDate":"2022-11-07"},{"lineNumber":115,"author":{"gitId":"santosh3007"},"content":"                String autocompletedCommand \u003d commandSuggestor.autocompleteCommand(userInput, commandSuggestion);","lastModifiedDate":"2022-11-06"},{"lineNumber":116,"author":{"gitId":"santosh3007"},"content":"                if (!autocompletedCommand.equals(\"\")) {","lastModifiedDate":"2022-11-06"},{"lineNumber":117,"author":{"gitId":"santosh3007"},"content":"                    commandTextField.setText(autocompletedCommand);","lastModifiedDate":"2022-11-06"},{"lineNumber":118,"author":{"gitId":"santosh3007"},"content":"                    commandTextField.end();","lastModifiedDate":"2022-11-06"},{"lineNumber":119,"author":{"gitId":"santosh3007"},"content":"                }","lastModifiedDate":"2022-11-06"},{"lineNumber":120,"author":{"gitId":"santosh3007"},"content":"                updateCommandSuggestion(commandTextField.getText());","lastModifiedDate":"2022-10-21"},{"lineNumber":121,"author":{"gitId":"santosh3007"},"content":"                e.consume();","lastModifiedDate":"2022-10-21"},{"lineNumber":122,"author":{"gitId":"santosh3007"},"content":"            }","lastModifiedDate":"2022-11-07"},{"lineNumber":123,"author":{"gitId":"santosh3007"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2022-11-07"},{"lineNumber":124,"author":{"gitId":"santosh3007"},"content":"            logger.info(\"Invalid Command Entered\");","lastModifiedDate":"2022-11-07"},{"lineNumber":125,"author":{"gitId":"santosh3007"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2022-11-07"},{"lineNumber":126,"author":{"gitId":"santosh3007"},"content":"            e.consume();","lastModifiedDate":"2022-11-07"},{"lineNumber":127,"author":{"gitId":"santosh3007"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":128,"author":{"gitId":"santosh3007"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":129,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":130,"author":{"gitId":"santosh3007"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":131,"author":{"gitId":"santosh3007"},"content":"     * Updates the command suggestion text field.","lastModifiedDate":"2022-10-21"},{"lineNumber":132,"author":{"gitId":"santosh3007"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":133,"author":{"gitId":"santosh3007"},"content":"    private void updateCommandSuggestion(String commandText) {","lastModifiedDate":"2022-10-21"},{"lineNumber":134,"author":{"gitId":"santosh3007"},"content":"        if (commandText.equals(\"\") || isOverflow()) {","lastModifiedDate":"2022-11-07"},{"lineNumber":135,"author":{"gitId":"santosh3007"},"content":"            commandSuggestionTextField.setText(\"\");","lastModifiedDate":"2022-10-21"},{"lineNumber":136,"author":{"gitId":"santosh3007"},"content":"            return;","lastModifiedDate":"2022-10-21"},{"lineNumber":137,"author":{"gitId":"santosh3007"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":138,"author":{"gitId":"santosh3007"},"content":"        try {","lastModifiedDate":"2022-10-21"},{"lineNumber":139,"author":{"gitId":"santosh3007"},"content":"            commandSuggestionTextField.setText(commandSuggestor.suggestCommand(commandText));","lastModifiedDate":"2022-10-21"},{"lineNumber":140,"author":{"gitId":"santosh3007"},"content":"            commandSuggestionTextField.positionCaret(commandTextField.getText().length());","lastModifiedDate":"2022-11-06"},{"lineNumber":141,"author":{"gitId":"santosh3007"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2022-10-21"},{"lineNumber":142,"author":{"gitId":"santosh3007"},"content":"            logger.info(\"Invalid Command Entered\");","lastModifiedDate":"2022-10-21"},{"lineNumber":143,"author":{"gitId":"santosh3007"},"content":"            commandSuggestionTextField.setText(commandText);","lastModifiedDate":"2022-10-21"},{"lineNumber":144,"author":{"gitId":"santosh3007"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2022-10-21"},{"lineNumber":145,"author":{"gitId":"santosh3007"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":146,"author":{"gitId":"santosh3007"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":147,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":148,"author":{"gitId":"santosh3007"},"content":"    /**","lastModifiedDate":"2022-11-07"},{"lineNumber":149,"author":{"gitId":"santosh3007"},"content":"     * Checks if the command text field is overflowing.","lastModifiedDate":"2022-11-07"},{"lineNumber":150,"author":{"gitId":"santosh3007"},"content":"     * @return true if the command text field is overflowing.","lastModifiedDate":"2022-11-07"},{"lineNumber":151,"author":{"gitId":"santosh3007"},"content":"     */","lastModifiedDate":"2022-11-07"},{"lineNumber":152,"author":{"gitId":"santosh3007"},"content":"    public boolean isOverflow() {","lastModifiedDate":"2022-11-07"},{"lineNumber":153,"author":{"gitId":"santosh3007"},"content":"        Text t \u003d new Text(commandTextField.getText() + \"12345\"); // `12345` is used to pad the text","lastModifiedDate":"2022-11-07"},{"lineNumber":154,"author":{"gitId":"santosh3007"},"content":"        t.setFont(commandTextField.getFont());","lastModifiedDate":"2022-11-07"},{"lineNumber":155,"author":{"gitId":"santosh3007"},"content":"        double width \u003d t.getLayoutBounds().getWidth();","lastModifiedDate":"2022-11-07"},{"lineNumber":156,"author":{"gitId":"santosh3007"},"content":"        return width \u003e commandTextField.getWidth();","lastModifiedDate":"2022-11-07"},{"lineNumber":157,"author":{"gitId":"santosh3007"},"content":"    }","lastModifiedDate":"2022-11-07"},{"lineNumber":158,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":159,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"santosh3007":75,"peppapighs":5,"-":79}},{"path":"src/main/java/swift/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.ui;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"peppapighs"},"content":"import swift.commons.core.LogsCenter;","lastModifiedDate":"2022-10-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"jasonqiu212"},"content":"    public static final String USER_GUIDE_URL \u003d \"https://ay2223s1-cs2103t-t12-2.github.io/tp/UserGuide.html\";","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"jasonqiu212"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USER_GUIDE_URL;","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"jasonqiu212"},"content":"        url.putString(USER_GUIDE_URL);","lastModifiedDate":"2022-10-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"jasonqiu212":3,"peppapighs":2,"-":97}},{"path":"src/main/java/swift/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.ui;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":6,"author":{"gitId":"yunruu"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-10-28"},{"lineNumber":7,"author":{"gitId":"santosh3007"},"content":"import javafx.scene.input.KeyCode;","lastModifiedDate":"2022-10-28"},{"lineNumber":8,"author":{"gitId":"santosh3007"},"content":"import javafx.scene.input.KeyCodeCombination;","lastModifiedDate":"2022-10-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"peppapighs"},"content":"import swift.commons.core.GuiSettings;","lastModifiedDate":"2022-10-01"},{"lineNumber":14,"author":{"gitId":"peppapighs"},"content":"import swift.commons.core.LogsCenter;","lastModifiedDate":"2022-10-01"},{"lineNumber":15,"author":{"gitId":"peppapighs"},"content":"import swift.logic.Logic;","lastModifiedDate":"2022-10-01"},{"lineNumber":16,"author":{"gitId":"peppapighs"},"content":"import swift.logic.commands.CommandResult;","lastModifiedDate":"2022-10-01"},{"lineNumber":17,"author":{"gitId":"yunruu"},"content":"import swift.logic.commands.CommandType;","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"peppapighs"},"content":"import swift.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-01"},{"lineNumber":19,"author":{"gitId":"peppapighs"},"content":"import swift.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"yunruu"},"content":"    private TaskListPanel taskListPanel;","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"yunruu"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2022-10-23"},{"lineNumber":38,"author":{"gitId":"yunruu"},"content":"    private PersonTaskListPanel personTaskListPanel;","lastModifiedDate":"2022-10-23"},{"lineNumber":39,"author":{"gitId":"yunruu"},"content":"    private TaskPersonListPanel taskPersonListPanel;","lastModifiedDate":"2022-10-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"peppapighs"},"content":"    private boolean isContactTabShown;","lastModifiedDate":"2022-10-27"},{"lineNumber":43,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"yunruu"},"content":"    private StackPane listPanelPlaceholder;","lastModifiedDate":"2022-10-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"yunruu"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2022-10-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"yunruu"},"content":"    private StackPane personTaskListPanelPlaceholder;","lastModifiedDate":"2022-10-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"yunruu"},"content":"    @FXML","lastModifiedDate":"2022-10-20"},{"lineNumber":54,"author":{"gitId":"yunruu"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2022-10-23"},{"lineNumber":55,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"yunruu"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2022-10-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"yunruu"},"content":"    @FXML","lastModifiedDate":"2022-10-28"},{"lineNumber":60,"author":{"gitId":"yunruu"},"content":"    private Button tasksButton;","lastModifiedDate":"2022-10-28"},{"lineNumber":61,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":62,"author":{"gitId":"yunruu"},"content":"    @FXML","lastModifiedDate":"2022-10-28"},{"lineNumber":63,"author":{"gitId":"yunruu"},"content":"    private Button contactsButton;","lastModifiedDate":"2022-10-28"},{"lineNumber":64,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"santosh3007"},"content":"        setAccelerator();","lastModifiedDate":"2022-10-28"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":81,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":82,"author":{"gitId":"peppapighs"},"content":"        isContactTabShown \u003d true;","lastModifiedDate":"2022-10-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"santosh3007"},"content":"     * Sets the accelerator and toggles the tab","lastModifiedDate":"2022-10-28"},{"lineNumber":92,"author":{"gitId":"santosh3007"},"content":"     * when the user presses the shortcut keys.","lastModifiedDate":"2022-10-28"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"santosh3007"},"content":"    private void setAccelerator() {","lastModifiedDate":"2022-10-28"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"santosh3007"},"content":"        KeyCodeCombination keyCodeCombination \u003d new KeyCodeCombination(KeyCode.TAB, KeyCombination.CONTROL_DOWN);","lastModifiedDate":"2022-10-28"},{"lineNumber":111,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":113,"author":{"gitId":"santosh3007"},"content":"            if (keyCodeCombination.match(event)) {","lastModifiedDate":"2022-10-28"},{"lineNumber":114,"author":{"gitId":"santosh3007"},"content":"                toggleTab();","lastModifiedDate":"2022-10-28"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"santosh3007"},"content":"    private void toggleTab() {","lastModifiedDate":"2022-10-28"},{"lineNumber":121,"author":{"gitId":"santosh3007"},"content":"        if (isContactTabShown) {","lastModifiedDate":"2022-10-28"},{"lineNumber":122,"author":{"gitId":"santosh3007"},"content":"            showTaskTab();","lastModifiedDate":"2022-10-28"},{"lineNumber":123,"author":{"gitId":"santosh3007"},"content":"        } else {","lastModifiedDate":"2022-10-28"},{"lineNumber":124,"author":{"gitId":"santosh3007"},"content":"            showContactTab();","lastModifiedDate":"2022-10-28"},{"lineNumber":125,"author":{"gitId":"santosh3007"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":126,"author":{"gitId":"santosh3007"},"content":"        isContactTabShown \u003d !isContactTabShown;","lastModifiedDate":"2022-10-28"},{"lineNumber":127,"author":{"gitId":"santosh3007"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":128,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":133,"author":{"gitId":"yunruu"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2022-10-22"},{"lineNumber":134,"author":{"gitId":"yunruu"},"content":"        listPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2022-10-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":136,"author":{"gitId":"yunruu"},"content":"        personTaskListPanel \u003d new PersonTaskListPanel(logic.getFilteredTaskList(),","lastModifiedDate":"2022-10-26"},{"lineNumber":137,"author":{"gitId":"yunruu"},"content":"                logic.getUnfilteredBridgeList(), logic.getFilteredPersonList());","lastModifiedDate":"2022-10-26"},{"lineNumber":138,"author":{"gitId":"ShenyiCui"},"content":"        personTaskListPanelPlaceholder.getChildren().add(personTaskListPanel.getRoot());","lastModifiedDate":"2022-10-22"},{"lineNumber":139,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":148,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":149,"author":{"gitId":"yunruu"},"content":"        setMenuButtonStyle(contactsButton);","lastModifiedDate":"2022-10-28"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":192,"author":{"gitId":"yunruu"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":193,"author":{"gitId":"yunruu"},"content":"     * Switch to tasks tab.","lastModifiedDate":"2022-10-24"},{"lineNumber":194,"author":{"gitId":"yunruu"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":195,"author":{"gitId":"yunruu"},"content":"    @FXML","lastModifiedDate":"2022-10-22"},{"lineNumber":196,"author":{"gitId":"yunruu"},"content":"    private void showTaskTab() {","lastModifiedDate":"2022-10-27"},{"lineNumber":197,"author":{"gitId":"yunruu"},"content":"        setMenuButtonStyle(tasksButton);","lastModifiedDate":"2022-10-28"},{"lineNumber":198,"author":{"gitId":"yunruu"},"content":"        resetMenuButtonStyle(contactsButton);","lastModifiedDate":"2022-10-28"},{"lineNumber":199,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":200,"author":{"gitId":"yunruu"},"content":"        taskListPanel \u003d new TaskListPanel(logic.getFilteredTaskList(), logic.getUnfilteredBridgeList(),","lastModifiedDate":"2022-10-26"},{"lineNumber":201,"author":{"gitId":"yunruu"},"content":"                logic.getUnfilteredPersonList());","lastModifiedDate":"2022-10-28"},{"lineNumber":202,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":203,"author":{"gitId":"yunruu"},"content":"        listPanelPlaceholder.getChildren().clear();","lastModifiedDate":"2022-10-26"},{"lineNumber":204,"author":{"gitId":"yunruu"},"content":"        listPanelPlaceholder.getChildren().add(taskListPanel.getRoot());","lastModifiedDate":"2022-10-22"},{"lineNumber":205,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":206,"author":{"gitId":"yunruu"},"content":"        showContactsInTaskTab();","lastModifiedDate":"2022-10-27"},{"lineNumber":207,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":208,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":209,"author":{"gitId":"yunruu"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":210,"author":{"gitId":"yunruu"},"content":"     * Switch to contacts tab.","lastModifiedDate":"2022-10-24"},{"lineNumber":211,"author":{"gitId":"yunruu"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":212,"author":{"gitId":"yunruu"},"content":"    @FXML","lastModifiedDate":"2022-10-22"},{"lineNumber":213,"author":{"gitId":"yunruu"},"content":"    private void showContactTab() {","lastModifiedDate":"2022-10-27"},{"lineNumber":214,"author":{"gitId":"yunruu"},"content":"        setMenuButtonStyle(contactsButton);","lastModifiedDate":"2022-10-28"},{"lineNumber":215,"author":{"gitId":"yunruu"},"content":"        resetMenuButtonStyle(tasksButton);","lastModifiedDate":"2022-10-28"},{"lineNumber":216,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":217,"author":{"gitId":"yunruu"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2022-10-22"},{"lineNumber":218,"author":{"gitId":"yunruu"},"content":"        listPanelPlaceholder.getChildren().clear();","lastModifiedDate":"2022-10-26"},{"lineNumber":219,"author":{"gitId":"yunruu"},"content":"        listPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2022-10-22"},{"lineNumber":220,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":221,"author":{"gitId":"yunruu"},"content":"        showTasksInContactTab();","lastModifiedDate":"2022-10-27"},{"lineNumber":222,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":223,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":224,"author":{"gitId":"yunruu"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":225,"author":{"gitId":"yunruu"},"content":"     * Show the associated tasks list panel only if there is one contact selected in contact list.","lastModifiedDate":"2022-10-27"},{"lineNumber":226,"author":{"gitId":"yunruu"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":227,"author":{"gitId":"yunruu"},"content":"    @FXML","lastModifiedDate":"2022-10-27"},{"lineNumber":228,"author":{"gitId":"yunruu"},"content":"    private void showTasksInContactTab() {","lastModifiedDate":"2022-10-27"},{"lineNumber":229,"author":{"gitId":"yunruu"},"content":"        removeSidePanel();","lastModifiedDate":"2022-10-27"},{"lineNumber":230,"author":{"gitId":"yunruu"},"content":"        personTaskListPanel \u003d new PersonTaskListPanel(logic.getFilteredTaskList(),","lastModifiedDate":"2022-10-26"},{"lineNumber":231,"author":{"gitId":"yunruu"},"content":"                logic.getUnfilteredBridgeList(), logic.getUnfilteredPersonList());","lastModifiedDate":"2022-10-26"},{"lineNumber":232,"author":{"gitId":"yunruu"},"content":"        personTaskListPanel.switchToAllTasks();","lastModifiedDate":"2022-10-27"},{"lineNumber":233,"author":{"gitId":"yunruu"},"content":"        personTaskListPanelPlaceholder.getChildren().add(personTaskListPanel.getRoot());","lastModifiedDate":"2022-10-24"},{"lineNumber":234,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":235,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":236,"author":{"gitId":"yunruu"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":237,"author":{"gitId":"yunruu"},"content":"     * Show the associated persons list panel only if there is one task selected in task list.","lastModifiedDate":"2022-10-27"},{"lineNumber":238,"author":{"gitId":"yunruu"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":239,"author":{"gitId":"yunruu"},"content":"    @FXML","lastModifiedDate":"2022-10-27"},{"lineNumber":240,"author":{"gitId":"yunruu"},"content":"    private void showContactsInTaskTab() {","lastModifiedDate":"2022-10-27"},{"lineNumber":241,"author":{"gitId":"yunruu"},"content":"        removeSidePanel();","lastModifiedDate":"2022-10-27"},{"lineNumber":242,"author":{"gitId":"yunruu"},"content":"        taskPersonListPanel \u003d new TaskPersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2022-10-27"},{"lineNumber":243,"author":{"gitId":"yunruu"},"content":"        taskPersonListPanel.switchToAllContacts();","lastModifiedDate":"2022-10-27"},{"lineNumber":244,"author":{"gitId":"yunruu"},"content":"        personTaskListPanelPlaceholder.getChildren().add(taskPersonListPanel.getRoot());","lastModifiedDate":"2022-10-27"},{"lineNumber":245,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":246,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":247,"author":{"gitId":"yunruu"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":248,"author":{"gitId":"yunruu"},"content":"     * Show the assigned contacts in task tab side panel.","lastModifiedDate":"2022-10-28"},{"lineNumber":249,"author":{"gitId":"yunruu"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":250,"author":{"gitId":"yunruu"},"content":"    @FXML","lastModifiedDate":"2022-10-27"},{"lineNumber":251,"author":{"gitId":"yunruu"},"content":"    private void showAssignedContacts() {","lastModifiedDate":"2022-10-27"},{"lineNumber":252,"author":{"gitId":"yunruu"},"content":"        taskPersonListPanel.switchToAssignedContacts();","lastModifiedDate":"2022-10-27"},{"lineNumber":253,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":254,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":255,"author":{"gitId":"yunruu"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":256,"author":{"gitId":"yunruu"},"content":"     * Show the assigned tasks in the contact tab side panel.","lastModifiedDate":"2022-10-28"},{"lineNumber":257,"author":{"gitId":"yunruu"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":258,"author":{"gitId":"yunruu"},"content":"    @FXML","lastModifiedDate":"2022-10-27"},{"lineNumber":259,"author":{"gitId":"yunruu"},"content":"    private void showAssignedTasks() {","lastModifiedDate":"2022-10-27"},{"lineNumber":260,"author":{"gitId":"yunruu"},"content":"        personTaskListPanel.switchToAssignedTasks();","lastModifiedDate":"2022-10-27"},{"lineNumber":261,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":262,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":263,"author":{"gitId":"yunruu"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":264,"author":{"gitId":"yunruu"},"content":"     * Remove list in side panel","lastModifiedDate":"2022-10-27"},{"lineNumber":265,"author":{"gitId":"yunruu"},"content":"     * @return","lastModifiedDate":"2022-10-27"},{"lineNumber":266,"author":{"gitId":"yunruu"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":267,"author":{"gitId":"yunruu"},"content":"    @FXML","lastModifiedDate":"2022-10-27"},{"lineNumber":268,"author":{"gitId":"yunruu"},"content":"    private void removeSidePanel() {","lastModifiedDate":"2022-10-27"},{"lineNumber":269,"author":{"gitId":"yunruu"},"content":"        personTaskListPanelPlaceholder.getChildren().clear();","lastModifiedDate":"2022-10-27"},{"lineNumber":270,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":271,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":272,"author":{"gitId":"yunruu"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":273,"author":{"gitId":"yunruu"},"content":"     * Underline the menu button that represents the tab the application is on.","lastModifiedDate":"2022-10-28"},{"lineNumber":274,"author":{"gitId":"yunruu"},"content":"     *","lastModifiedDate":"2022-10-28"},{"lineNumber":275,"author":{"gitId":"yunruu"},"content":"     * @param button the menu button to be styled.","lastModifiedDate":"2022-10-28"},{"lineNumber":276,"author":{"gitId":"yunruu"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":277,"author":{"gitId":"yunruu"},"content":"    private void setMenuButtonStyle(Button button) {","lastModifiedDate":"2022-10-28"},{"lineNumber":278,"author":{"gitId":"yunruu"},"content":"        button.setStyle(\"-fx-border-color: transparent transparent #6D28D9 transparent\");","lastModifiedDate":"2022-10-28"},{"lineNumber":279,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":280,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":281,"author":{"gitId":"yunruu"},"content":"    private void resetMenuButtonStyle(Button button) {","lastModifiedDate":"2022-10-28"},{"lineNumber":282,"author":{"gitId":"yunruu"},"content":"        button.setStyle(\"-fx-border-color: transparent transparent transparent transparent\");","lastModifiedDate":"2022-10-28"},{"lineNumber":283,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":284,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":286,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":289,"author":{"gitId":"peppapighs"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":290,"author":{"gitId":"peppapighs"},"content":"     * Refreshes the current view.","lastModifiedDate":"2022-10-27"},{"lineNumber":291,"author":{"gitId":"peppapighs"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":292,"author":{"gitId":"peppapighs"},"content":"    public void refreshTab() {","lastModifiedDate":"2022-10-27"},{"lineNumber":293,"author":{"gitId":"peppapighs"},"content":"        if (isContactTabShown) {","lastModifiedDate":"2022-10-27"},{"lineNumber":294,"author":{"gitId":"peppapighs"},"content":"            showContactTab();","lastModifiedDate":"2022-10-27"},{"lineNumber":295,"author":{"gitId":"peppapighs"},"content":"        } else {","lastModifiedDate":"2022-10-27"},{"lineNumber":296,"author":{"gitId":"peppapighs"},"content":"            showTaskTab();","lastModifiedDate":"2022-10-27"},{"lineNumber":297,"author":{"gitId":"peppapighs"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":298,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":299,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":300,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":301,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":302,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":303,"author":{"gitId":"peppapighs"},"content":"     * @see swift.logic.Logic#execute(String)","lastModifiedDate":"2022-10-01"},{"lineNumber":304,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":306,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":307,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":308,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":309,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":311,"author":{"gitId":"yunruu"},"content":"            CommandType commandType \u003d commandResult.getCommandType();","lastModifiedDate":"2022-10-27"},{"lineNumber":312,"author":{"gitId":"yunruu"},"content":"            switch (commandType) {","lastModifiedDate":"2022-10-27"},{"lineNumber":313,"author":{"gitId":"yunruu"},"content":"            case HELP:","lastModifiedDate":"2022-10-27"},{"lineNumber":314,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":315,"author":{"gitId":"yunruu"},"content":"                break;","lastModifiedDate":"2022-10-27"},{"lineNumber":316,"author":{"gitId":"yunruu"},"content":"            case EXIT:","lastModifiedDate":"2022-10-27"},{"lineNumber":317,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":318,"author":{"gitId":"yunruu"},"content":"                break;","lastModifiedDate":"2022-10-27"},{"lineNumber":319,"author":{"gitId":"yunruu"},"content":"            case CONTACTS:","lastModifiedDate":"2022-10-27"},{"lineNumber":320,"author":{"gitId":"yunruu"},"content":"                showContactTab();","lastModifiedDate":"2022-10-27"},{"lineNumber":321,"author":{"gitId":"peppapighs"},"content":"                isContactTabShown \u003d true;","lastModifiedDate":"2022-10-27"},{"lineNumber":322,"author":{"gitId":"yunruu"},"content":"                break;","lastModifiedDate":"2022-10-27"},{"lineNumber":323,"author":{"gitId":"yunruu"},"content":"            case TASKS:","lastModifiedDate":"2022-10-27"},{"lineNumber":324,"author":{"gitId":"yunruu"},"content":"                showTaskTab();","lastModifiedDate":"2022-10-27"},{"lineNumber":325,"author":{"gitId":"peppapighs"},"content":"                isContactTabShown \u003d false;","lastModifiedDate":"2022-10-27"},{"lineNumber":326,"author":{"gitId":"peppapighs"},"content":"                break;","lastModifiedDate":"2022-10-27"},{"lineNumber":327,"author":{"gitId":"peppapighs"},"content":"            case ASSIGN:","lastModifiedDate":"2022-10-27"},{"lineNumber":328,"author":{"gitId":"ShenyiCui"},"content":"            case UNASSIGN:","lastModifiedDate":"2022-10-27"},{"lineNumber":329,"author":{"gitId":"peppapighs"},"content":"                // Fallthrough","lastModifiedDate":"2022-10-28"},{"lineNumber":330,"author":{"gitId":"peppapighs"},"content":"                refreshTab();","lastModifiedDate":"2022-10-27"},{"lineNumber":331,"author":{"gitId":"yunruu"},"content":"                break;","lastModifiedDate":"2022-10-27"},{"lineNumber":332,"author":{"gitId":"yunruu"},"content":"            case SELECT_CONTACT:","lastModifiedDate":"2022-10-27"},{"lineNumber":333,"author":{"gitId":"yunruu"},"content":"                showContactTab();","lastModifiedDate":"2022-10-27"},{"lineNumber":334,"author":{"gitId":"yunruu"},"content":"                showAssignedTasks();","lastModifiedDate":"2022-10-27"},{"lineNumber":335,"author":{"gitId":"yunruu"},"content":"                break;","lastModifiedDate":"2022-10-27"},{"lineNumber":336,"author":{"gitId":"yunruu"},"content":"            case SELECT_TASK:","lastModifiedDate":"2022-10-27"},{"lineNumber":337,"author":{"gitId":"yunruu"},"content":"                showTaskTab();","lastModifiedDate":"2022-10-27"},{"lineNumber":338,"author":{"gitId":"yunruu"},"content":"                showAssignedContacts();","lastModifiedDate":"2022-10-27"},{"lineNumber":339,"author":{"gitId":"yunruu"},"content":"                break;","lastModifiedDate":"2022-10-27"},{"lineNumber":340,"author":{"gitId":"yunruu"},"content":"            default:","lastModifiedDate":"2022-10-27"},{"lineNumber":341,"author":{"gitId":"yunruu"},"content":"                break;","lastModifiedDate":"2022-10-27"},{"lineNumber":342,"author":{"gitId":"yunruu"},"content":"            }","lastModifiedDate":"2022-10-23"},{"lineNumber":343,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":344,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":345,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":346,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":347,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":348,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":349,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":351,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"ShenyiCui":3,"santosh3007":19,"peppapighs":29,"-":158,"yunruu":142}},{"path":"src/main/java/swift/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.ui;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"peppapighs"},"content":"import swift.model.person.Person;","lastModifiedDate":"2022-10-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":57,"author":{"gitId":"yunruu"},"content":"                .forEach(tag -\u003e {","lastModifiedDate":"2022-10-27"},{"lineNumber":58,"author":{"gitId":"yunruu"},"content":"                    Label label \u003d new Label(tag.tagName.toUpperCase());","lastModifiedDate":"2022-10-27"},{"lineNumber":59,"author":{"gitId":"yunruu"},"content":"                    setStyle(label);","lastModifiedDate":"2022-10-27"},{"lineNumber":60,"author":{"gitId":"yunruu"},"content":"                    tags.getChildren().add(label);","lastModifiedDate":"2022-10-27"},{"lineNumber":61,"author":{"gitId":"yunruu"},"content":"                });","lastModifiedDate":"2022-10-27"},{"lineNumber":62,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":63,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":64,"author":{"gitId":"yunruu"},"content":"    private void setStyle(Label... labels) {","lastModifiedDate":"2022-10-27"},{"lineNumber":65,"author":{"gitId":"yunruu"},"content":"        for (Label label: labels) {","lastModifiedDate":"2022-10-27"},{"lineNumber":66,"author":{"gitId":"yunruu"},"content":"            label.setStyle(\"-fx-background-color:transparent; -fx-text-fill: #AFB4FF;\"","lastModifiedDate":"2022-10-27"},{"lineNumber":67,"author":{"gitId":"yunruu"},"content":"                    + \"-fx-font-family: Arial; -fx-font-size: 12; -fx-font-weight: bold;\"","lastModifiedDate":"2022-10-27"},{"lineNumber":68,"author":{"gitId":"yunruu"},"content":"                    + \"-fx-background-insets: 1;\");","lastModifiedDate":"2022-10-27"},{"lineNumber":69,"author":{"gitId":"yunruu"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"peppapighs":2,"-":74,"yunruu":13}},{"path":"src/main/java/swift/ui/PersonListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.ui;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"yunruu"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-10-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"peppapighs"},"content":"import swift.commons.core.LogsCenter;","lastModifiedDate":"2022-10-01"},{"lineNumber":12,"author":{"gitId":"peppapighs"},"content":"import swift.model.person.Person;","lastModifiedDate":"2022-10-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class PersonListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListPanel.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PersonListPanel.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"yunruu"},"content":"    @FXML","lastModifiedDate":"2022-10-22"},{"lineNumber":22,"author":{"gitId":"yunruu"},"content":"    private Label listPanelHeading;","lastModifiedDate":"2022-10-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private ListView\u003cPerson\u003e personListView;","lastModifiedDate":"2018-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public PersonListPanel(ObservableList\u003cPerson\u003e personList) {","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        personListView.setItems(personList);","lastModifiedDate":"2018-02-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        personListView.setCellFactory(listView -\u003e new PersonListViewCell());","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":35,"author":{"gitId":"yunruu"},"content":"    /**","lastModifiedDate":"2022-10-22"},{"lineNumber":36,"author":{"gitId":"yunruu"},"content":"     * Remove heading from the panel.","lastModifiedDate":"2022-10-22"},{"lineNumber":37,"author":{"gitId":"yunruu"},"content":"     */","lastModifiedDate":"2022-10-22"},{"lineNumber":38,"author":{"gitId":"yunruu"},"content":"    protected void removeHeading() {","lastModifiedDate":"2022-10-22"},{"lineNumber":39,"author":{"gitId":"yunruu"},"content":"        listPanelHeading.setText(\"\");","lastModifiedDate":"2022-10-22"},{"lineNumber":40,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":41,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2018-02-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    class PersonListViewCell extends ListCell\u003cPerson\u003e {","lastModifiedDate":"2018-02-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        protected void updateItem(Person person, boolean empty) {","lastModifiedDate":"2018-02-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            super.updateItem(person, empty);","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            if (empty || person \u003d\u003d null) {","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                setGraphic(new PersonCard(person, getIndex() + 1).getRoot());","lastModifiedDate":"2018-02-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"peppapighs":3,"-":46,"yunruu":10}},{"path":"src/main/java/swift/ui/PersonTaskCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ShenyiCui"},"content":"package swift.ui;","lastModifiedDate":"2022-10-22"},{"lineNumber":2,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":3,"author":{"gitId":"yunruu"},"content":"import java.util.UUID;","lastModifiedDate":"2022-10-26"},{"lineNumber":4,"author":{"gitId":"yunruu"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"yunruu"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"ShenyiCui"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-22"},{"lineNumber":8,"author":{"gitId":"ShenyiCui"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-10-22"},{"lineNumber":9,"author":{"gitId":"yunruu"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"ShenyiCui"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-10-22"},{"lineNumber":11,"author":{"gitId":"ShenyiCui"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-10-22"},{"lineNumber":12,"author":{"gitId":"yunruu"},"content":"import swift.model.bridge.PersonTaskBridge;","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"yunruu"},"content":"import swift.model.person.Person;","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"yunruu"},"content":"import swift.model.task.Deadline;","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"ShenyiCui"},"content":"import swift.model.task.Task;","lastModifiedDate":"2022-10-22"},{"lineNumber":16,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":17,"author":{"gitId":"ShenyiCui"},"content":"/**","lastModifiedDate":"2022-10-22"},{"lineNumber":18,"author":{"gitId":"ShenyiCui"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2022-10-22"},{"lineNumber":19,"author":{"gitId":"ShenyiCui"},"content":" */","lastModifiedDate":"2022-10-22"},{"lineNumber":20,"author":{"gitId":"ShenyiCui"},"content":"public class PersonTaskCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-22"},{"lineNumber":21,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":22,"author":{"gitId":"ShenyiCui"},"content":"    private static final String FXML \u003d \"PersonTaskCard.fxml\";","lastModifiedDate":"2022-10-22"},{"lineNumber":23,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":24,"author":{"gitId":"ShenyiCui"},"content":"    /**","lastModifiedDate":"2022-10-22"},{"lineNumber":25,"author":{"gitId":"ShenyiCui"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2022-10-22"},{"lineNumber":26,"author":{"gitId":"ShenyiCui"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2022-10-22"},{"lineNumber":27,"author":{"gitId":"ShenyiCui"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2022-10-22"},{"lineNumber":28,"author":{"gitId":"ShenyiCui"},"content":"     *","lastModifiedDate":"2022-10-22"},{"lineNumber":29,"author":{"gitId":"ShenyiCui"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":30,"author":{"gitId":"ShenyiCui"},"content":"     */","lastModifiedDate":"2022-10-22"},{"lineNumber":31,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":32,"author":{"gitId":"ShenyiCui"},"content":"    public final Task task;","lastModifiedDate":"2022-10-22"},{"lineNumber":33,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":34,"author":{"gitId":"ShenyiCui"},"content":"    @FXML","lastModifiedDate":"2022-10-22"},{"lineNumber":35,"author":{"gitId":"ShenyiCui"},"content":"    private HBox cardPane;","lastModifiedDate":"2022-10-22"},{"lineNumber":36,"author":{"gitId":"ShenyiCui"},"content":"    @FXML","lastModifiedDate":"2022-10-22"},{"lineNumber":37,"author":{"gitId":"ShenyiCui"},"content":"    private Label name;","lastModifiedDate":"2022-10-22"},{"lineNumber":38,"author":{"gitId":"ShenyiCui"},"content":"    @FXML","lastModifiedDate":"2022-10-22"},{"lineNumber":39,"author":{"gitId":"ShenyiCui"},"content":"    private Label id;","lastModifiedDate":"2022-10-22"},{"lineNumber":40,"author":{"gitId":"yunruu"},"content":"    @FXML","lastModifiedDate":"2022-10-26"},{"lineNumber":41,"author":{"gitId":"yunruu"},"content":"    private FlowPane contacts;","lastModifiedDate":"2022-10-26"},{"lineNumber":42,"author":{"gitId":"yunruu"},"content":"    @FXML","lastModifiedDate":"2022-10-26"},{"lineNumber":43,"author":{"gitId":"yunruu"},"content":"    private Label deadline;","lastModifiedDate":"2022-10-27"},{"lineNumber":44,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":45,"author":{"gitId":"ShenyiCui"},"content":"    /**","lastModifiedDate":"2022-10-22"},{"lineNumber":46,"author":{"gitId":"ShenyiCui"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2022-10-22"},{"lineNumber":47,"author":{"gitId":"ShenyiCui"},"content":"     */","lastModifiedDate":"2022-10-22"},{"lineNumber":48,"author":{"gitId":"yunruu"},"content":"    public PersonTaskCard(Task task, int displayedIndex, ObservableList\u003cPersonTaskBridge\u003e personTaskBridgeList,","lastModifiedDate":"2022-10-26"},{"lineNumber":49,"author":{"gitId":"yunruu"},"content":"                    ObservableList\u003cPerson\u003e personList) {","lastModifiedDate":"2022-10-26"},{"lineNumber":50,"author":{"gitId":"ShenyiCui"},"content":"        super(FXML);","lastModifiedDate":"2022-10-22"},{"lineNumber":51,"author":{"gitId":"ShenyiCui"},"content":"        this.task \u003d task;","lastModifiedDate":"2022-10-22"},{"lineNumber":52,"author":{"gitId":"ShenyiCui"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2022-10-22"},{"lineNumber":53,"author":{"gitId":"yunruu"},"content":"        name.setText(task.getName().fullName);","lastModifiedDate":"2022-10-26"},{"lineNumber":54,"author":{"gitId":"yunruu"},"content":"        deadline.setText(task.getDeadline().map(Deadline::toString).orElse(\"NO DEADLINE\"));","lastModifiedDate":"2022-10-27"},{"lineNumber":55,"author":{"gitId":"yunruu"},"content":"        setAssociatedContacts(personTaskBridgeList, personList);","lastModifiedDate":"2022-10-26"},{"lineNumber":56,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":57,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":58,"author":{"gitId":"yunruu"},"content":"    private void setAssociatedContacts(ObservableList\u003cPersonTaskBridge\u003e personTaskBridgeList,","lastModifiedDate":"2022-10-26"},{"lineNumber":59,"author":{"gitId":"yunruu"},"content":"                                       ObservableList\u003cPerson\u003e personList) {","lastModifiedDate":"2022-10-26"},{"lineNumber":60,"author":{"gitId":"yunruu"},"content":"        personTaskBridgeList.stream()","lastModifiedDate":"2022-10-26"},{"lineNumber":61,"author":{"gitId":"yunruu"},"content":"                .filter(bridge -\u003e bridge.getTaskId().equals(task.getId()))","lastModifiedDate":"2022-10-26"},{"lineNumber":62,"author":{"gitId":"yunruu"},"content":"                .collect(Collectors.toList())","lastModifiedDate":"2022-10-26"},{"lineNumber":63,"author":{"gitId":"yunruu"},"content":"                .forEach(taskBridge -\u003e {","lastModifiedDate":"2022-10-26"},{"lineNumber":64,"author":{"gitId":"yunruu"},"content":"                    UUID personId \u003d taskBridge.getPersonId();","lastModifiedDate":"2022-10-26"},{"lineNumber":65,"author":{"gitId":"yunruu"},"content":"                    Person associatedPerson;","lastModifiedDate":"2022-10-26"},{"lineNumber":66,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":67,"author":{"gitId":"yunruu"},"content":"                    for (Person person : personList) {","lastModifiedDate":"2022-10-26"},{"lineNumber":68,"author":{"gitId":"yunruu"},"content":"                        associatedPerson \u003d person;","lastModifiedDate":"2022-10-26"},{"lineNumber":69,"author":{"gitId":"yunruu"},"content":"                        if (associatedPerson.getId().equals(personId)) {","lastModifiedDate":"2022-10-26"},{"lineNumber":70,"author":{"gitId":"yunruu"},"content":"                            Label label \u003d new Label(associatedPerson.getName().toString());","lastModifiedDate":"2022-10-26"},{"lineNumber":71,"author":{"gitId":"yunruu"},"content":"                            setStyle(label);","lastModifiedDate":"2022-10-26"},{"lineNumber":72,"author":{"gitId":"yunruu"},"content":"                            contacts.getChildren().add(label);","lastModifiedDate":"2022-10-26"},{"lineNumber":73,"author":{"gitId":"yunruu"},"content":"                            return;","lastModifiedDate":"2022-10-26"},{"lineNumber":74,"author":{"gitId":"yunruu"},"content":"                        }","lastModifiedDate":"2022-10-26"},{"lineNumber":75,"author":{"gitId":"yunruu"},"content":"                    }","lastModifiedDate":"2022-10-26"},{"lineNumber":76,"author":{"gitId":"yunruu"},"content":"                });","lastModifiedDate":"2022-10-26"},{"lineNumber":77,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":78,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":79,"author":{"gitId":"yunruu"},"content":"    private void setStyle(Label... labels) {","lastModifiedDate":"2022-10-26"},{"lineNumber":80,"author":{"gitId":"yunruu"},"content":"        for (Label label: labels) {","lastModifiedDate":"2022-10-26"},{"lineNumber":81,"author":{"gitId":"yunruu"},"content":"            label.setStyle(\"-fx-background-color:derive(#6D28D9, 50%); -fx-text-fill: #FFFFFF;\"","lastModifiedDate":"2022-10-26"},{"lineNumber":82,"author":{"gitId":"yunruu"},"content":"                    + \"-fx-font-family: \u0027Space Grotesk Regular\u0027; -fx-font-size: 10; -fx-font-weight: bold;\"","lastModifiedDate":"2022-10-27"},{"lineNumber":83,"author":{"gitId":"yunruu"},"content":"                    + \"-fx-border-insets: 3; -fx-border-radius: 4px; -fx-border-width: 2px;\"","lastModifiedDate":"2022-10-26"},{"lineNumber":84,"author":{"gitId":"yunruu"},"content":"                    + \"-fx-border-color: derive(#6D28D9, 50%); -fx-background-insets: 4; -fx-label-padding: 2;\");","lastModifiedDate":"2022-10-27"},{"lineNumber":85,"author":{"gitId":"yunruu"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":86,"author":{"gitId":"ShenyiCui"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":87,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":88,"author":{"gitId":"ShenyiCui"},"content":"    @Override","lastModifiedDate":"2022-10-22"},{"lineNumber":89,"author":{"gitId":"ShenyiCui"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-22"},{"lineNumber":90,"author":{"gitId":"ShenyiCui"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-22"},{"lineNumber":91,"author":{"gitId":"ShenyiCui"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-22"},{"lineNumber":92,"author":{"gitId":"ShenyiCui"},"content":"            return true;","lastModifiedDate":"2022-10-22"},{"lineNumber":93,"author":{"gitId":"ShenyiCui"},"content":"        }","lastModifiedDate":"2022-10-22"},{"lineNumber":94,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":95,"author":{"gitId":"ShenyiCui"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-22"},{"lineNumber":96,"author":{"gitId":"ShenyiCui"},"content":"        if (!(other instanceof PersonTaskCard)) {","lastModifiedDate":"2022-10-22"},{"lineNumber":97,"author":{"gitId":"ShenyiCui"},"content":"            return false;","lastModifiedDate":"2022-10-22"},{"lineNumber":98,"author":{"gitId":"ShenyiCui"},"content":"        }","lastModifiedDate":"2022-10-22"},{"lineNumber":99,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":100,"author":{"gitId":"ShenyiCui"},"content":"        // state check","lastModifiedDate":"2022-10-22"},{"lineNumber":101,"author":{"gitId":"ShenyiCui"},"content":"        PersonTaskCard card \u003d (PersonTaskCard) other;","lastModifiedDate":"2022-10-22"},{"lineNumber":102,"author":{"gitId":"ShenyiCui"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2022-10-22"},{"lineNumber":103,"author":{"gitId":"ShenyiCui"},"content":"                \u0026\u0026 task.equals(card.task);","lastModifiedDate":"2022-10-22"},{"lineNumber":104,"author":{"gitId":"ShenyiCui"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":105,"author":{"gitId":"ShenyiCui"},"content":"}","lastModifiedDate":"2022-10-22"}],"authorContributionMap":{"ShenyiCui":58,"yunruu":47}},{"path":"src/main/java/swift/ui/PersonTaskListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ShenyiCui"},"content":"package swift.ui;","lastModifiedDate":"2022-10-22"},{"lineNumber":2,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":3,"author":{"gitId":"ShenyiCui"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-10-22"},{"lineNumber":4,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":5,"author":{"gitId":"ShenyiCui"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-22"},{"lineNumber":6,"author":{"gitId":"ShenyiCui"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-22"},{"lineNumber":7,"author":{"gitId":"yunruu"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-10-24"},{"lineNumber":8,"author":{"gitId":"ShenyiCui"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2022-10-22"},{"lineNumber":9,"author":{"gitId":"ShenyiCui"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2022-10-22"},{"lineNumber":10,"author":{"gitId":"ShenyiCui"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-10-22"},{"lineNumber":11,"author":{"gitId":"ShenyiCui"},"content":"import swift.commons.core.LogsCenter;","lastModifiedDate":"2022-10-22"},{"lineNumber":12,"author":{"gitId":"yunruu"},"content":"import swift.model.bridge.PersonTaskBridge;","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"yunruu"},"content":"import swift.model.person.Person;","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"ShenyiCui"},"content":"import swift.model.task.Task;","lastModifiedDate":"2022-10-22"},{"lineNumber":15,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":16,"author":{"gitId":"ShenyiCui"},"content":"/**","lastModifiedDate":"2022-10-22"},{"lineNumber":17,"author":{"gitId":"ShenyiCui"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2022-10-22"},{"lineNumber":18,"author":{"gitId":"ShenyiCui"},"content":" */","lastModifiedDate":"2022-10-22"},{"lineNumber":19,"author":{"gitId":"ShenyiCui"},"content":"public class PersonTaskListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-22"},{"lineNumber":20,"author":{"gitId":"ShenyiCui"},"content":"    private static final String FXML \u003d \"PersonTaskListPanel.fxml\";","lastModifiedDate":"2022-10-22"},{"lineNumber":21,"author":{"gitId":"yunruu"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PersonTaskListPanel.class);","lastModifiedDate":"2022-10-24"},{"lineNumber":22,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":23,"author":{"gitId":"ShenyiCui"},"content":"    @FXML","lastModifiedDate":"2022-10-22"},{"lineNumber":24,"author":{"gitId":"ShenyiCui"},"content":"    private ListView\u003cTask\u003e personTaskListView;","lastModifiedDate":"2022-10-22"},{"lineNumber":25,"author":{"gitId":"yunruu"},"content":"    @FXML","lastModifiedDate":"2022-10-24"},{"lineNumber":26,"author":{"gitId":"yunruu"},"content":"    private Label heading;","lastModifiedDate":"2022-10-24"},{"lineNumber":27,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":28,"author":{"gitId":"ShenyiCui"},"content":"    /**","lastModifiedDate":"2022-10-22"},{"lineNumber":29,"author":{"gitId":"ShenyiCui"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2022-10-22"},{"lineNumber":30,"author":{"gitId":"ShenyiCui"},"content":"     */","lastModifiedDate":"2022-10-22"},{"lineNumber":31,"author":{"gitId":"yunruu"},"content":"    public PersonTaskListPanel(ObservableList\u003cTask\u003e taskList, ObservableList\u003cPersonTaskBridge\u003e bridgeList,","lastModifiedDate":"2022-10-26"},{"lineNumber":32,"author":{"gitId":"yunruu"},"content":"                               ObservableList\u003cPerson\u003e personList) {","lastModifiedDate":"2022-10-26"},{"lineNumber":33,"author":{"gitId":"ShenyiCui"},"content":"        super(FXML);","lastModifiedDate":"2022-10-22"},{"lineNumber":34,"author":{"gitId":"ShenyiCui"},"content":"        personTaskListView.setItems(taskList);","lastModifiedDate":"2022-10-22"},{"lineNumber":35,"author":{"gitId":"yunruu"},"content":"        personTaskListView.setCellFactory(listView -\u003e new PersonTaskListViewCell(bridgeList, personList));","lastModifiedDate":"2022-10-26"},{"lineNumber":36,"author":{"gitId":"ShenyiCui"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":37,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":38,"author":{"gitId":"yunruu"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":39,"author":{"gitId":"yunruu"},"content":"     * Change panel to show contacts assigned to task.","lastModifiedDate":"2022-10-27"},{"lineNumber":40,"author":{"gitId":"yunruu"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":41,"author":{"gitId":"yunruu"},"content":"    protected void switchToAssignedTasks() {","lastModifiedDate":"2022-10-27"},{"lineNumber":42,"author":{"gitId":"yunruu"},"content":"        heading.setText(\"ASSIGNED TASKS\");","lastModifiedDate":"2022-10-27"},{"lineNumber":43,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":44,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":45,"author":{"gitId":"yunruu"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":46,"author":{"gitId":"yunruu"},"content":"     * Change panel to show all contacts.","lastModifiedDate":"2022-10-27"},{"lineNumber":47,"author":{"gitId":"yunruu"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":48,"author":{"gitId":"yunruu"},"content":"    protected void switchToAllTasks() {","lastModifiedDate":"2022-10-27"},{"lineNumber":49,"author":{"gitId":"jasonqiu212"},"content":"        heading.setText(\"TASKS\");","lastModifiedDate":"2022-11-06"},{"lineNumber":50,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":51,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":52,"author":{"gitId":"ShenyiCui"},"content":"    /**","lastModifiedDate":"2022-10-22"},{"lineNumber":53,"author":{"gitId":"ShenyiCui"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2022-10-22"},{"lineNumber":54,"author":{"gitId":"ShenyiCui"},"content":"     */","lastModifiedDate":"2022-10-22"},{"lineNumber":55,"author":{"gitId":"ShenyiCui"},"content":"    class PersonTaskListViewCell extends ListCell\u003cTask\u003e {","lastModifiedDate":"2022-10-22"},{"lineNumber":56,"author":{"gitId":"yunruu"},"content":"        private ObservableList\u003cPersonTaskBridge\u003e bridgeList;","lastModifiedDate":"2022-10-26"},{"lineNumber":57,"author":{"gitId":"yunruu"},"content":"        private ObservableList\u003cPerson\u003e personList;","lastModifiedDate":"2022-10-26"},{"lineNumber":58,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":59,"author":{"gitId":"yunruu"},"content":"        protected PersonTaskListViewCell(ObservableList\u003cPersonTaskBridge\u003e bridgeList,","lastModifiedDate":"2022-10-26"},{"lineNumber":60,"author":{"gitId":"yunruu"},"content":"                                   ObservableList\u003cPerson\u003e personList) {","lastModifiedDate":"2022-10-26"},{"lineNumber":61,"author":{"gitId":"yunruu"},"content":"            this.bridgeList \u003d bridgeList;","lastModifiedDate":"2022-10-26"},{"lineNumber":62,"author":{"gitId":"yunruu"},"content":"            this.personList \u003d personList;","lastModifiedDate":"2022-10-26"},{"lineNumber":63,"author":{"gitId":"yunruu"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":64,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":65,"author":{"gitId":"ShenyiCui"},"content":"        @Override","lastModifiedDate":"2022-10-22"},{"lineNumber":66,"author":{"gitId":"ShenyiCui"},"content":"        protected void updateItem(Task task, boolean empty) {","lastModifiedDate":"2022-10-22"},{"lineNumber":67,"author":{"gitId":"ShenyiCui"},"content":"            super.updateItem(task, empty);","lastModifiedDate":"2022-10-22"},{"lineNumber":68,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":69,"author":{"gitId":"ShenyiCui"},"content":"            if (empty || task \u003d\u003d null) {","lastModifiedDate":"2022-10-22"},{"lineNumber":70,"author":{"gitId":"ShenyiCui"},"content":"                setGraphic(null);","lastModifiedDate":"2022-10-22"},{"lineNumber":71,"author":{"gitId":"ShenyiCui"},"content":"                setText(null);","lastModifiedDate":"2022-10-22"},{"lineNumber":72,"author":{"gitId":"ShenyiCui"},"content":"            } else {","lastModifiedDate":"2022-10-22"},{"lineNumber":73,"author":{"gitId":"yunruu"},"content":"                setGraphic(new PersonTaskCard(task, getIndex() + 1, bridgeList, personList).getRoot());","lastModifiedDate":"2022-10-26"},{"lineNumber":74,"author":{"gitId":"ShenyiCui"},"content":"            }","lastModifiedDate":"2022-10-22"},{"lineNumber":75,"author":{"gitId":"ShenyiCui"},"content":"        }","lastModifiedDate":"2022-10-22"},{"lineNumber":76,"author":{"gitId":"ShenyiCui"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":77,"author":{"gitId":"ShenyiCui"},"content":"}","lastModifiedDate":"2022-10-22"}],"authorContributionMap":{"ShenyiCui":44,"jasonqiu212":1,"yunruu":32}},{"path":"src/main/java/swift/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.ui;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2016-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2016-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"yunruu"},"content":"        resultDisplay.setWrapText(true);","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"peppapighs":1,"-":27,"yunruu":1}},{"path":"src/main/java/swift/ui/StatusBarFooter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.ui;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2018-12-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the footer of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StatusBarFooter extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Label saveLocationStatus;","lastModifiedDate":"2018-12-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code StatusBarFooter} with the given {@code Path}.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public StatusBarFooter(Path saveLocation) {","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        saveLocationStatus.setText(Paths.get(\".\").resolve(saveLocation).toString());","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"peppapighs":1,"-":27}},{"path":"src/main/java/swift/ui/TaskCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yunruu"},"content":"package swift.ui;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"yunruu"},"content":"import java.util.UUID;","lastModifiedDate":"2022-10-26"},{"lineNumber":4,"author":{"gitId":"yunruu"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"yunruu"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-23"},{"lineNumber":7,"author":{"gitId":"yunruu"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"yunruu"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"yunruu"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"yunruu"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"yunruu"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"yunruu"},"content":"import swift.model.bridge.PersonTaskBridge;","lastModifiedDate":"2022-10-23"},{"lineNumber":13,"author":{"gitId":"yunruu"},"content":"import swift.model.person.Person;","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"jasonqiu212"},"content":"import swift.model.task.Deadline;","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"jasonqiu212"},"content":"import swift.model.task.Description;","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"yunruu"},"content":"import swift.model.task.Task;","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":18,"author":{"gitId":"yunruu"},"content":"/**","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"yunruu"},"content":" * A UI component that displays information of a {@code Task}.","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"yunruu"},"content":" */","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"yunruu"},"content":"public class TaskCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"yunruu"},"content":"    private static final String FXML \u003d \"TaskListCard.fxml\";","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"yunruu"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"yunruu"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"yunruu"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"yunruu"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"yunruu"},"content":"     *","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"yunruu"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"yunruu"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"yunruu"},"content":"    public final Task task;","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"yunruu"},"content":"    @FXML","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"yunruu"},"content":"    private HBox cardPane;","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"yunruu"},"content":"    @FXML","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"yunruu"},"content":"    private Label taskName;","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"yunruu"},"content":"    @FXML","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"yunruu"},"content":"    private Label id;","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"yunruu"},"content":"    @FXML","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"yunruu"},"content":"    private FlowPane contacts;","lastModifiedDate":"2022-10-20"},{"lineNumber":43,"author":{"gitId":"yunruu"},"content":"    @FXML","lastModifiedDate":"2022-10-20"},{"lineNumber":44,"author":{"gitId":"jasonqiu212"},"content":"    private Label deadline;","lastModifiedDate":"2022-10-26"},{"lineNumber":45,"author":{"gitId":"jasonqiu212"},"content":"    @FXML","lastModifiedDate":"2022-10-27"},{"lineNumber":46,"author":{"gitId":"jasonqiu212"},"content":"    private Label description;","lastModifiedDate":"2022-10-27"},{"lineNumber":47,"author":{"gitId":"yunruu"},"content":"    @FXML","lastModifiedDate":"2022-10-28"},{"lineNumber":48,"author":{"gitId":"yunruu"},"content":"    private Label checkBox;","lastModifiedDate":"2022-10-28"},{"lineNumber":49,"author":{"gitId":"yunruu"},"content":"    @FXML","lastModifiedDate":"2022-10-28"},{"lineNumber":50,"author":{"gitId":"yunruu"},"content":"    private Label uncheckBox;","lastModifiedDate":"2022-10-28"},{"lineNumber":51,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":52,"author":{"gitId":"yunruu"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":53,"author":{"gitId":"yunruu"},"content":"     * Creates a {@code TaskCode} with the given {@code Task} and index to display.","lastModifiedDate":"2022-10-20"},{"lineNumber":54,"author":{"gitId":"yunruu"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":55,"author":{"gitId":"yunruu"},"content":"    public TaskCard(Task task, int displayedIndex, ObservableList\u003cPersonTaskBridge\u003e personTaskBridgeList,","lastModifiedDate":"2022-10-23"},{"lineNumber":56,"author":{"gitId":"yunruu"},"content":"                    ObservableList\u003cPerson\u003e personList) {","lastModifiedDate":"2022-10-23"},{"lineNumber":57,"author":{"gitId":"yunruu"},"content":"        super(FXML);","lastModifiedDate":"2022-10-20"},{"lineNumber":58,"author":{"gitId":"yunruu"},"content":"        this.task \u003d task;","lastModifiedDate":"2022-10-20"},{"lineNumber":59,"author":{"gitId":"yunruu"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2022-10-20"},{"lineNumber":60,"author":{"gitId":"jasonqiu212"},"content":"        taskName.setText(task.getName().fullName);","lastModifiedDate":"2022-10-26"},{"lineNumber":61,"author":{"gitId":"yunruu"},"content":"        deadline.setText(task.getDeadline().map(Deadline::toString).orElse(\"NO DEADLINE\"));","lastModifiedDate":"2022-10-27"},{"lineNumber":62,"author":{"gitId":"jasonqiu212"},"content":"        description.setText(task.getDescription().map(Description::toString).orElse(\"NO DESCRIPTION\"));","lastModifiedDate":"2022-10-27"},{"lineNumber":63,"author":{"gitId":"yunruu"},"content":"        setAssociatedContacts(personTaskBridgeList, personList);","lastModifiedDate":"2022-10-27"},{"lineNumber":64,"author":{"gitId":"santosh3007"},"content":"        checkBox.setVisible(task.isDone());","lastModifiedDate":"2022-10-28"},{"lineNumber":65,"author":{"gitId":"santosh3007"},"content":"        uncheckBox.setVisible(!task.isDone());","lastModifiedDate":"2022-10-28"},{"lineNumber":66,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":67,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":68,"author":{"gitId":"yunruu"},"content":"    private void setAssociatedContacts(ObservableList\u003cPersonTaskBridge\u003e personTaskBridgeList,","lastModifiedDate":"2022-10-26"},{"lineNumber":69,"author":{"gitId":"yunruu"},"content":"                                       ObservableList\u003cPerson\u003e personList) {","lastModifiedDate":"2022-10-26"},{"lineNumber":70,"author":{"gitId":"yunruu"},"content":"        personTaskBridgeList.stream()","lastModifiedDate":"2022-10-26"},{"lineNumber":71,"author":{"gitId":"yunruu"},"content":"                .filter(bridge -\u003e bridge.getTaskId().equals(task.getId()))","lastModifiedDate":"2022-10-23"},{"lineNumber":72,"author":{"gitId":"yunruu"},"content":"                .collect(Collectors.toList())","lastModifiedDate":"2022-10-26"},{"lineNumber":73,"author":{"gitId":"yunruu"},"content":"                .forEach(taskBridge -\u003e {","lastModifiedDate":"2022-10-26"},{"lineNumber":74,"author":{"gitId":"yunruu"},"content":"                    UUID personId \u003d taskBridge.getPersonId();","lastModifiedDate":"2022-10-23"},{"lineNumber":75,"author":{"gitId":"yunruu"},"content":"                    Person associatedPerson;","lastModifiedDate":"2022-10-23"},{"lineNumber":76,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":77,"author":{"gitId":"yunruu"},"content":"                    for (Person person : personList) {","lastModifiedDate":"2022-10-23"},{"lineNumber":78,"author":{"gitId":"yunruu"},"content":"                        associatedPerson \u003d person;","lastModifiedDate":"2022-10-23"},{"lineNumber":79,"author":{"gitId":"yunruu"},"content":"                        if (associatedPerson.getId().equals(personId)) {","lastModifiedDate":"2022-10-23"},{"lineNumber":80,"author":{"gitId":"yunruu"},"content":"                            Label label \u003d new Label(associatedPerson.getName().toString());","lastModifiedDate":"2022-10-23"},{"lineNumber":81,"author":{"gitId":"yunruu"},"content":"                            setStyle(label);","lastModifiedDate":"2022-10-23"},{"lineNumber":82,"author":{"gitId":"yunruu"},"content":"                            contacts.getChildren().add(label);","lastModifiedDate":"2022-10-23"},{"lineNumber":83,"author":{"gitId":"yunruu"},"content":"                            return;","lastModifiedDate":"2022-10-23"},{"lineNumber":84,"author":{"gitId":"yunruu"},"content":"                        }","lastModifiedDate":"2022-10-23"},{"lineNumber":85,"author":{"gitId":"yunruu"},"content":"                    }","lastModifiedDate":"2022-10-23"},{"lineNumber":86,"author":{"gitId":"yunruu"},"content":"                });","lastModifiedDate":"2022-10-23"},{"lineNumber":87,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":88,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":89,"author":{"gitId":"yunruu"},"content":"    private void setStyle(Label... labels) {","lastModifiedDate":"2022-10-20"},{"lineNumber":90,"author":{"gitId":"yunruu"},"content":"        for (Label label: labels) {","lastModifiedDate":"2022-10-20"},{"lineNumber":91,"author":{"gitId":"yunruu"},"content":"            label.setStyle(\"-fx-background-color:derive(#6D28D9, 50%); -fx-text-fill: #FFFFFF;\"","lastModifiedDate":"2022-10-22"},{"lineNumber":92,"author":{"gitId":"yunruu"},"content":"                    + \"-fx-font-family: Inter; -fx-font-size: 11; -fx-font-weight: bold;\"","lastModifiedDate":"2022-10-27"},{"lineNumber":93,"author":{"gitId":"yunruu"},"content":"                    + \"-fx-border-insets: 3; -fx-border-radius: 4px; -fx-border-width: 2px;\"","lastModifiedDate":"2022-10-22"},{"lineNumber":94,"author":{"gitId":"yunruu"},"content":"                    + \"-fx-border-color: derive(#6D28D9, 50%); -fx-background-insets: 4; -fx-label-padding: 1;\");","lastModifiedDate":"2022-10-27"},{"lineNumber":95,"author":{"gitId":"yunruu"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":96,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":97,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":98,"author":{"gitId":"yunruu"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":99,"author":{"gitId":"yunruu"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-20"},{"lineNumber":100,"author":{"gitId":"yunruu"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-20"},{"lineNumber":101,"author":{"gitId":"yunruu"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-20"},{"lineNumber":102,"author":{"gitId":"yunruu"},"content":"            return true;","lastModifiedDate":"2022-10-20"},{"lineNumber":103,"author":{"gitId":"yunruu"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":104,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":105,"author":{"gitId":"yunruu"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-20"},{"lineNumber":106,"author":{"gitId":"yunruu"},"content":"        if (!(other instanceof TaskCard)) {","lastModifiedDate":"2022-10-20"},{"lineNumber":107,"author":{"gitId":"yunruu"},"content":"            return false;","lastModifiedDate":"2022-10-20"},{"lineNumber":108,"author":{"gitId":"yunruu"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":109,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":110,"author":{"gitId":"yunruu"},"content":"        // state check","lastModifiedDate":"2022-10-20"},{"lineNumber":111,"author":{"gitId":"yunruu"},"content":"        TaskCard card \u003d (TaskCard) other;","lastModifiedDate":"2022-10-20"},{"lineNumber":112,"author":{"gitId":"yunruu"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2022-10-20"},{"lineNumber":113,"author":{"gitId":"yunruu"},"content":"                \u0026\u0026 task.equals(card.task);","lastModifiedDate":"2022-10-20"},{"lineNumber":114,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":115,"author":{"gitId":"yunruu"},"content":"}","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"jasonqiu212":7,"santosh3007":2,"yunruu":106}},{"path":"src/main/java/swift/ui/TaskListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yunruu"},"content":"package swift.ui;","lastModifiedDate":"2022-10-19"},{"lineNumber":2,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":3,"author":{"gitId":"yunruu"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-10-21"},{"lineNumber":4,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"yunruu"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-19"},{"lineNumber":6,"author":{"gitId":"yunruu"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-19"},{"lineNumber":7,"author":{"gitId":"yunruu"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-10-22"},{"lineNumber":8,"author":{"gitId":"yunruu"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2022-10-19"},{"lineNumber":9,"author":{"gitId":"yunruu"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2022-10-19"},{"lineNumber":10,"author":{"gitId":"yunruu"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-10-19"},{"lineNumber":11,"author":{"gitId":"yunruu"},"content":"import swift.commons.core.LogsCenter;","lastModifiedDate":"2022-10-19"},{"lineNumber":12,"author":{"gitId":"yunruu"},"content":"import swift.model.bridge.PersonTaskBridge;","lastModifiedDate":"2022-10-23"},{"lineNumber":13,"author":{"gitId":"yunruu"},"content":"import swift.model.person.Person;","lastModifiedDate":"2022-10-23"},{"lineNumber":14,"author":{"gitId":"yunruu"},"content":"import swift.model.task.Task;","lastModifiedDate":"2022-10-19"},{"lineNumber":15,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":16,"author":{"gitId":"yunruu"},"content":"/**","lastModifiedDate":"2022-10-19"},{"lineNumber":17,"author":{"gitId":"yunruu"},"content":" * Panel containing the list of tasks.","lastModifiedDate":"2022-10-19"},{"lineNumber":18,"author":{"gitId":"yunruu"},"content":" */","lastModifiedDate":"2022-10-19"},{"lineNumber":19,"author":{"gitId":"yunruu"},"content":"public class TaskListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-19"},{"lineNumber":20,"author":{"gitId":"yunruu"},"content":"    private static final String FXML \u003d \"TaskListPanel.fxml\";","lastModifiedDate":"2022-10-19"},{"lineNumber":21,"author":{"gitId":"yunruu"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(TaskListPanel.class);","lastModifiedDate":"2022-10-19"},{"lineNumber":22,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":23,"author":{"gitId":"yunruu"},"content":"    @FXML","lastModifiedDate":"2022-10-22"},{"lineNumber":24,"author":{"gitId":"yunruu"},"content":"    private Label listPanelHeading;","lastModifiedDate":"2022-10-22"},{"lineNumber":25,"author":{"gitId":"yunruu"},"content":"    @FXML","lastModifiedDate":"2022-10-19"},{"lineNumber":26,"author":{"gitId":"yunruu"},"content":"    private ListView\u003cTask\u003e taskListView;","lastModifiedDate":"2022-10-19"},{"lineNumber":27,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":28,"author":{"gitId":"yunruu"},"content":"    /**","lastModifiedDate":"2022-10-19"},{"lineNumber":29,"author":{"gitId":"yunruu"},"content":"     * Creates a {@code TaskListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2022-10-19"},{"lineNumber":30,"author":{"gitId":"yunruu"},"content":"     */","lastModifiedDate":"2022-10-19"},{"lineNumber":31,"author":{"gitId":"yunruu"},"content":"    public TaskListPanel(ObservableList\u003cTask\u003e taskList, ObservableList\u003cPersonTaskBridge\u003e personTaskBridgeList,","lastModifiedDate":"2022-10-23"},{"lineNumber":32,"author":{"gitId":"yunruu"},"content":"                         ObservableList\u003cPerson\u003e personList) {","lastModifiedDate":"2022-10-23"},{"lineNumber":33,"author":{"gitId":"yunruu"},"content":"        super(FXML);","lastModifiedDate":"2022-10-19"},{"lineNumber":34,"author":{"gitId":"yunruu"},"content":"        taskListView.setItems(taskList);","lastModifiedDate":"2022-10-19"},{"lineNumber":35,"author":{"gitId":"yunruu"},"content":"        taskListView.setCellFactory(listView -\u003e new TaskListViewCell(personTaskBridgeList, personList));","lastModifiedDate":"2022-10-23"},{"lineNumber":36,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":37,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":38,"author":{"gitId":"yunruu"},"content":"    /**","lastModifiedDate":"2022-10-19"},{"lineNumber":39,"author":{"gitId":"yunruu"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Task} using a {@code TaskCard}.","lastModifiedDate":"2022-10-19"},{"lineNumber":40,"author":{"gitId":"yunruu"},"content":"     */","lastModifiedDate":"2022-10-19"},{"lineNumber":41,"author":{"gitId":"yunruu"},"content":"    class TaskListViewCell extends ListCell\u003cTask\u003e {","lastModifiedDate":"2022-10-19"},{"lineNumber":42,"author":{"gitId":"yunruu"},"content":"        private ObservableList\u003cPersonTaskBridge\u003e personTaskBridgeList;","lastModifiedDate":"2022-10-23"},{"lineNumber":43,"author":{"gitId":"yunruu"},"content":"        private ObservableList\u003cPerson\u003e personList;","lastModifiedDate":"2022-10-23"},{"lineNumber":44,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":45,"author":{"gitId":"yunruu"},"content":"        protected TaskListViewCell(ObservableList\u003cPersonTaskBridge\u003e personTaskBridgeList,","lastModifiedDate":"2022-10-24"},{"lineNumber":46,"author":{"gitId":"yunruu"},"content":"                                   ObservableList\u003cPerson\u003e personList) {","lastModifiedDate":"2022-10-24"},{"lineNumber":47,"author":{"gitId":"yunruu"},"content":"            this.personTaskBridgeList \u003d personTaskBridgeList;","lastModifiedDate":"2022-10-23"},{"lineNumber":48,"author":{"gitId":"yunruu"},"content":"            this.personList \u003d personList;","lastModifiedDate":"2022-10-23"},{"lineNumber":49,"author":{"gitId":"yunruu"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":50,"author":{"gitId":"yunruu"},"content":"        @Override","lastModifiedDate":"2022-10-19"},{"lineNumber":51,"author":{"gitId":"yunruu"},"content":"        protected void updateItem(Task task, boolean empty) {","lastModifiedDate":"2022-10-19"},{"lineNumber":52,"author":{"gitId":"yunruu"},"content":"            super.updateItem(task, empty);","lastModifiedDate":"2022-10-19"},{"lineNumber":53,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":54,"author":{"gitId":"yunruu"},"content":"            if (empty || task \u003d\u003d null) {","lastModifiedDate":"2022-10-19"},{"lineNumber":55,"author":{"gitId":"yunruu"},"content":"                setGraphic(null);","lastModifiedDate":"2022-10-19"},{"lineNumber":56,"author":{"gitId":"yunruu"},"content":"                setText(null);","lastModifiedDate":"2022-10-19"},{"lineNumber":57,"author":{"gitId":"yunruu"},"content":"            } else {","lastModifiedDate":"2022-10-19"},{"lineNumber":58,"author":{"gitId":"yunruu"},"content":"                setGraphic(new TaskCard(task, getIndex() + 1, personTaskBridgeList, personList).getRoot());","lastModifiedDate":"2022-10-23"},{"lineNumber":59,"author":{"gitId":"yunruu"},"content":"            }","lastModifiedDate":"2022-10-19"},{"lineNumber":60,"author":{"gitId":"yunruu"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":61,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":62,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":63,"author":{"gitId":"yunruu"},"content":"}","lastModifiedDate":"2022-10-19"}],"authorContributionMap":{"yunruu":63}},{"path":"src/main/java/swift/ui/TaskPersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yunruu"},"content":"package swift.ui;","lastModifiedDate":"2022-10-24"},{"lineNumber":2,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":3,"author":{"gitId":"yunruu"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-10-26"},{"lineNumber":4,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"yunruu"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-24"},{"lineNumber":6,"author":{"gitId":"yunruu"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-10-24"},{"lineNumber":7,"author":{"gitId":"yunruu"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2022-10-24"},{"lineNumber":8,"author":{"gitId":"yunruu"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-10-24"},{"lineNumber":9,"author":{"gitId":"yunruu"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-10-24"},{"lineNumber":10,"author":{"gitId":"yunruu"},"content":"import swift.model.person.Person;","lastModifiedDate":"2022-10-24"},{"lineNumber":11,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":12,"author":{"gitId":"yunruu"},"content":"/**","lastModifiedDate":"2022-10-24"},{"lineNumber":13,"author":{"gitId":"yunruu"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2022-10-24"},{"lineNumber":14,"author":{"gitId":"yunruu"},"content":" */","lastModifiedDate":"2022-10-24"},{"lineNumber":15,"author":{"gitId":"yunruu"},"content":"public class TaskPersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-24"},{"lineNumber":16,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":17,"author":{"gitId":"yunruu"},"content":"    private static final String FXML \u003d \"TaskPersonCard.fxml\";","lastModifiedDate":"2022-10-24"},{"lineNumber":18,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":19,"author":{"gitId":"yunruu"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":20,"author":{"gitId":"yunruu"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2022-10-24"},{"lineNumber":21,"author":{"gitId":"yunruu"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2022-10-24"},{"lineNumber":22,"author":{"gitId":"yunruu"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2022-10-24"},{"lineNumber":23,"author":{"gitId":"yunruu"},"content":"     *","lastModifiedDate":"2022-10-24"},{"lineNumber":24,"author":{"gitId":"yunruu"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":25,"author":{"gitId":"yunruu"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":26,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":27,"author":{"gitId":"yunruu"},"content":"    public final Person person;","lastModifiedDate":"2022-10-24"},{"lineNumber":28,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":29,"author":{"gitId":"yunruu"},"content":"    @FXML","lastModifiedDate":"2022-10-24"},{"lineNumber":30,"author":{"gitId":"yunruu"},"content":"    private HBox cardPane;","lastModifiedDate":"2022-10-24"},{"lineNumber":31,"author":{"gitId":"yunruu"},"content":"    @FXML","lastModifiedDate":"2022-10-24"},{"lineNumber":32,"author":{"gitId":"yunruu"},"content":"    private Label name;","lastModifiedDate":"2022-10-24"},{"lineNumber":33,"author":{"gitId":"yunruu"},"content":"    @FXML","lastModifiedDate":"2022-10-24"},{"lineNumber":34,"author":{"gitId":"yunruu"},"content":"    private Label id;","lastModifiedDate":"2022-10-24"},{"lineNumber":35,"author":{"gitId":"yunruu"},"content":"    @FXML","lastModifiedDate":"2022-10-24"},{"lineNumber":36,"author":{"gitId":"yunruu"},"content":"    private Label phone;","lastModifiedDate":"2022-10-24"},{"lineNumber":37,"author":{"gitId":"yunruu"},"content":"    @FXML","lastModifiedDate":"2022-10-24"},{"lineNumber":38,"author":{"gitId":"yunruu"},"content":"    private Label email;","lastModifiedDate":"2022-10-24"},{"lineNumber":39,"author":{"gitId":"yunruu"},"content":"    @FXML","lastModifiedDate":"2022-10-24"},{"lineNumber":40,"author":{"gitId":"yunruu"},"content":"    private FlowPane tags;","lastModifiedDate":"2022-10-24"},{"lineNumber":41,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":42,"author":{"gitId":"yunruu"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":43,"author":{"gitId":"yunruu"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2022-10-24"},{"lineNumber":44,"author":{"gitId":"yunruu"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":45,"author":{"gitId":"yunruu"},"content":"    public TaskPersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2022-10-24"},{"lineNumber":46,"author":{"gitId":"yunruu"},"content":"        super(FXML);","lastModifiedDate":"2022-10-24"},{"lineNumber":47,"author":{"gitId":"yunruu"},"content":"        this.person \u003d person;","lastModifiedDate":"2022-10-24"},{"lineNumber":48,"author":{"gitId":"yunruu"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2022-10-24"},{"lineNumber":49,"author":{"gitId":"yunruu"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2022-10-24"},{"lineNumber":50,"author":{"gitId":"yunruu"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2022-10-24"},{"lineNumber":51,"author":{"gitId":"yunruu"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2022-10-24"},{"lineNumber":52,"author":{"gitId":"yunruu"},"content":"        person.getTags().stream()","lastModifiedDate":"2022-10-24"},{"lineNumber":53,"author":{"gitId":"yunruu"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2022-10-24"},{"lineNumber":54,"author":{"gitId":"yunruu"},"content":"                .forEach(tag -\u003e {","lastModifiedDate":"2022-10-27"},{"lineNumber":55,"author":{"gitId":"yunruu"},"content":"                    Label label \u003d new Label(tag.tagName.toUpperCase());","lastModifiedDate":"2022-10-27"},{"lineNumber":56,"author":{"gitId":"yunruu"},"content":"                    setStyle(label);","lastModifiedDate":"2022-10-27"},{"lineNumber":57,"author":{"gitId":"yunruu"},"content":"                    tags.getChildren().add(label);","lastModifiedDate":"2022-10-27"},{"lineNumber":58,"author":{"gitId":"yunruu"},"content":"                });","lastModifiedDate":"2022-10-27"},{"lineNumber":59,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":60,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":61,"author":{"gitId":"yunruu"},"content":"    private void setStyle(Label... labels) {","lastModifiedDate":"2022-10-27"},{"lineNumber":62,"author":{"gitId":"yunruu"},"content":"        for (Label label: labels) {","lastModifiedDate":"2022-10-27"},{"lineNumber":63,"author":{"gitId":"yunruu"},"content":"            label.setStyle(\"-fx-background-color:transparent; -fx-text-fill: #AFB4FF;\"","lastModifiedDate":"2022-10-27"},{"lineNumber":64,"author":{"gitId":"yunruu"},"content":"                    + \"-fx-font-family: Arial; -fx-font-size: 10; -fx-font-weight: bold;\");","lastModifiedDate":"2022-10-27"},{"lineNumber":65,"author":{"gitId":"yunruu"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":66,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":67,"author":{"gitId":"yunruu"},"content":"    @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":68,"author":{"gitId":"yunruu"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-24"},{"lineNumber":69,"author":{"gitId":"yunruu"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-24"},{"lineNumber":70,"author":{"gitId":"yunruu"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-24"},{"lineNumber":71,"author":{"gitId":"yunruu"},"content":"            return true;","lastModifiedDate":"2022-10-24"},{"lineNumber":72,"author":{"gitId":"yunruu"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":73,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":74,"author":{"gitId":"yunruu"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-24"},{"lineNumber":75,"author":{"gitId":"yunruu"},"content":"        if (!(other instanceof TaskPersonCard)) {","lastModifiedDate":"2022-10-24"},{"lineNumber":76,"author":{"gitId":"yunruu"},"content":"            return false;","lastModifiedDate":"2022-10-24"},{"lineNumber":77,"author":{"gitId":"yunruu"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":78,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":79,"author":{"gitId":"yunruu"},"content":"        // state check","lastModifiedDate":"2022-10-24"},{"lineNumber":80,"author":{"gitId":"yunruu"},"content":"        TaskPersonCard card \u003d (TaskPersonCard) other;","lastModifiedDate":"2022-10-24"},{"lineNumber":81,"author":{"gitId":"yunruu"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2022-10-24"},{"lineNumber":82,"author":{"gitId":"yunruu"},"content":"                \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2022-10-24"},{"lineNumber":83,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":84,"author":{"gitId":"yunruu"},"content":"}","lastModifiedDate":"2022-10-24"}],"authorContributionMap":{"yunruu":84}},{"path":"src/main/java/swift/ui/TaskPersonListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yunruu"},"content":"package swift.ui;","lastModifiedDate":"2022-10-24"},{"lineNumber":2,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":3,"author":{"gitId":"yunruu"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-10-24"},{"lineNumber":4,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":5,"author":{"gitId":"yunruu"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-24"},{"lineNumber":6,"author":{"gitId":"yunruu"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-24"},{"lineNumber":7,"author":{"gitId":"yunruu"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-10-24"},{"lineNumber":8,"author":{"gitId":"yunruu"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2022-10-24"},{"lineNumber":9,"author":{"gitId":"yunruu"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2022-10-24"},{"lineNumber":10,"author":{"gitId":"yunruu"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-10-24"},{"lineNumber":11,"author":{"gitId":"yunruu"},"content":"import swift.commons.core.LogsCenter;","lastModifiedDate":"2022-10-24"},{"lineNumber":12,"author":{"gitId":"yunruu"},"content":"import swift.model.person.Person;","lastModifiedDate":"2022-10-24"},{"lineNumber":13,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":14,"author":{"gitId":"yunruu"},"content":"/**","lastModifiedDate":"2022-10-24"},{"lineNumber":15,"author":{"gitId":"yunruu"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2022-10-24"},{"lineNumber":16,"author":{"gitId":"yunruu"},"content":" */","lastModifiedDate":"2022-10-24"},{"lineNumber":17,"author":{"gitId":"yunruu"},"content":"public class TaskPersonListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-24"},{"lineNumber":18,"author":{"gitId":"yunruu"},"content":"    private static final String FXML \u003d \"TaskPersonListPanel.fxml\";","lastModifiedDate":"2022-10-24"},{"lineNumber":19,"author":{"gitId":"yunruu"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(TaskPersonListPanel.class);","lastModifiedDate":"2022-10-24"},{"lineNumber":20,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":21,"author":{"gitId":"yunruu"},"content":"    @FXML","lastModifiedDate":"2022-10-24"},{"lineNumber":22,"author":{"gitId":"yunruu"},"content":"    private ListView\u003cPerson\u003e taskPersonListView;","lastModifiedDate":"2022-10-24"},{"lineNumber":23,"author":{"gitId":"yunruu"},"content":"    @FXML","lastModifiedDate":"2022-10-24"},{"lineNumber":24,"author":{"gitId":"yunruu"},"content":"    private Label heading;","lastModifiedDate":"2022-10-24"},{"lineNumber":25,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":26,"author":{"gitId":"yunruu"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":27,"author":{"gitId":"yunruu"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2022-10-24"},{"lineNumber":28,"author":{"gitId":"yunruu"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":29,"author":{"gitId":"yunruu"},"content":"    public TaskPersonListPanel(ObservableList\u003cPerson\u003e personList) {","lastModifiedDate":"2022-10-24"},{"lineNumber":30,"author":{"gitId":"yunruu"},"content":"        super(FXML);","lastModifiedDate":"2022-10-24"},{"lineNumber":31,"author":{"gitId":"yunruu"},"content":"        taskPersonListView.setItems(personList);","lastModifiedDate":"2022-10-24"},{"lineNumber":32,"author":{"gitId":"yunruu"},"content":"        taskPersonListView.setCellFactory(listView -\u003e new TaskPersonListViewCell());","lastModifiedDate":"2022-10-24"},{"lineNumber":33,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":34,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":35,"author":{"gitId":"yunruu"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":36,"author":{"gitId":"yunruu"},"content":"     * Change panel to show contacts assigned to task.","lastModifiedDate":"2022-10-27"},{"lineNumber":37,"author":{"gitId":"yunruu"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":38,"author":{"gitId":"yunruu"},"content":"    protected void switchToAssignedContacts() {","lastModifiedDate":"2022-10-27"},{"lineNumber":39,"author":{"gitId":"yunruu"},"content":"        heading.setText(\"ASSIGNED CONTACTS\");","lastModifiedDate":"2022-10-27"},{"lineNumber":40,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":41,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":42,"author":{"gitId":"yunruu"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":43,"author":{"gitId":"yunruu"},"content":"     * Change panel to show all contacts.","lastModifiedDate":"2022-10-27"},{"lineNumber":44,"author":{"gitId":"yunruu"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":45,"author":{"gitId":"yunruu"},"content":"    protected void switchToAllContacts() {","lastModifiedDate":"2022-10-27"},{"lineNumber":46,"author":{"gitId":"jasonqiu212"},"content":"        heading.setText(\"CONTACTS\");","lastModifiedDate":"2022-11-06"},{"lineNumber":47,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":48,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":49,"author":{"gitId":"yunruu"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":50,"author":{"gitId":"yunruu"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2022-10-24"},{"lineNumber":51,"author":{"gitId":"yunruu"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":52,"author":{"gitId":"yunruu"},"content":"    class TaskPersonListViewCell extends ListCell\u003cPerson\u003e {","lastModifiedDate":"2022-10-24"},{"lineNumber":53,"author":{"gitId":"yunruu"},"content":"        @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":54,"author":{"gitId":"yunruu"},"content":"        protected void updateItem(Person person, boolean empty) {","lastModifiedDate":"2022-10-24"},{"lineNumber":55,"author":{"gitId":"yunruu"},"content":"            super.updateItem(person, empty);","lastModifiedDate":"2022-10-24"},{"lineNumber":56,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":57,"author":{"gitId":"yunruu"},"content":"            if (empty || person \u003d\u003d null) {","lastModifiedDate":"2022-10-24"},{"lineNumber":58,"author":{"gitId":"yunruu"},"content":"                setGraphic(null);","lastModifiedDate":"2022-10-24"},{"lineNumber":59,"author":{"gitId":"yunruu"},"content":"                setText(null);","lastModifiedDate":"2022-10-24"},{"lineNumber":60,"author":{"gitId":"yunruu"},"content":"            } else {","lastModifiedDate":"2022-10-24"},{"lineNumber":61,"author":{"gitId":"yunruu"},"content":"                setGraphic(new TaskPersonCard(person, getIndex() + 1).getRoot());","lastModifiedDate":"2022-10-24"},{"lineNumber":62,"author":{"gitId":"yunruu"},"content":"            }","lastModifiedDate":"2022-10-24"},{"lineNumber":63,"author":{"gitId":"yunruu"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":64,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":65,"author":{"gitId":"yunruu"},"content":"}","lastModifiedDate":"2022-10-24"}],"authorContributionMap":{"jasonqiu212":1,"yunruu":64}},{"path":"src/main/java/swift/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.ui;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * API of UI component","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public interface Ui {","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /** Starts the UI (and the App).  */","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    void start(Stage primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"peppapighs":1,"-":12}},{"path":"src/main/java/swift/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.ui;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"peppapighs"},"content":"import swift.MainApp;","lastModifiedDate":"2022-10-01"},{"lineNumber":11,"author":{"gitId":"peppapighs"},"content":"import swift.commons.core.LogsCenter;","lastModifiedDate":"2022-10-01"},{"lineNumber":12,"author":{"gitId":"peppapighs"},"content":"import swift.commons.util.StringUtil;","lastModifiedDate":"2022-10-01"},{"lineNumber":13,"author":{"gitId":"peppapighs"},"content":"import swift.logic.Logic;","lastModifiedDate":"2022-10-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"jasonqiu212"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/swift.png\";","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"jasonqiu212":1,"peppapighs":5,"-":82}},{"path":"src/main/java/swift/ui/UiPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.ui;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"peppapighs"},"content":"import swift.MainApp;","lastModifiedDate":"2022-10-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc.","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * It contains a scene graph with a root node of type {@code T}.","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** Resource folder where FXML files are stored. */","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2017-11-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2017-11-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL, T)","lastModifiedDate":"2017-11-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2017-11-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public T getRoot() {","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return fxmlLoader.getRoot();","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @param location Location of the FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param root Specifies the root of the object hierarchy.","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private void loadFxmlFile(URL location, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        fxmlLoader.setLocation(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        fxmlLoader.setRoot(root);","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"peppapighs":2,"-":86}},{"path":"src/main/resources/view/CommandBox.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cStackPane styleClass\u003d\"stack-pane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2018-04-01"},{"lineNumber":7,"author":{"gitId":"santosh3007"},"content":"  \u003cTextField fx:id\u003d\"commandSuggestionTextField\"/\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"santosh3007"},"content":"  \u003cTextField fx:id\u003d\"commandTextField\" onAction\u003d\"#handleCommandEntered\" onKeyPressed\u003d\"#handleKeyPressed\" promptText\u003d\"Enter command here...\"/\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"santosh3007":2,"-":8}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yunruu"},"content":"@font-face {","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"yunruu"},"content":"    font-family: \"Inter SemiBold\";","lastModifiedDate":"2022-10-27"},{"lineNumber":3,"author":{"gitId":"yunruu"},"content":"    font-style: normal;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"yunruu"},"content":"    font-weight: 500;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"yunruu"},"content":"    src: url(\"/fonts/Inter-SemiBold.ttf\");","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"yunruu"},"content":"}","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"yunruu"},"content":"@font-face {","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"yunruu"},"content":"    font-family: \"Inter Regular\";","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"yunruu"},"content":"    font-style: normal;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"yunruu"},"content":"    font-weight: 700;","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"yunruu"},"content":"    src: url(\"/fonts/Inter-Regular.ttf\");","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"yunruu"},"content":"}","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"yunruu"},"content":"@font-face {","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"yunruu"},"content":"    font-family: \"Inter Medium\";","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"yunruu"},"content":"    font-style: normal;","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"yunruu"},"content":"    font-weight: 700;","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"yunruu"},"content":"    src: url(\"/fonts/Inter-Medium.ttf\");","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"yunruu"},"content":"}","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"yunruu"},"content":"@font-face {","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"yunruu"},"content":"    font-family: \"Space Grotesk\";","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"yunruu"},"content":"    font-style: normal;","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"yunruu"},"content":"    src: url(\"/fonts/SpaceGrotesk-Regular.ttf\");","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"yunruu"},"content":"}","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"yunruu"},"content":"    -fx-background-color: #FAFAFA;","lastModifiedDate":"2022-10-24"},{"lineNumber":30,"author":{"gitId":"yunruu"},"content":"    background-color: #FAFAFA; /* Used in the default.html file */","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"yunruu"},"content":"    -fx-background-color: #FFFFFF;","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"yunruu"},"content":"    -fx-font-family: \"SpaceGrotesk Regular\";","lastModifiedDate":"2022-10-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"yunruu"},"content":"    -fx-base: #FAFAFA;","lastModifiedDate":"2022-10-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":73,"author":{"gitId":"yunruu"},"content":"    -fx-background-color: #FAFAFA;","lastModifiedDate":"2022-10-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":115,"author":{"gitId":"yunruu"},"content":"    -fx-background-color: #FAFAFA;","lastModifiedDate":"2022-10-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"yunruu"},"content":"    -fx-background-color: #FAFAFA;","lastModifiedDate":"2022-10-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":124,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"yunruu"},"content":"    -fx-background-color: #FAFAFA;","lastModifiedDate":"2022-10-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":132,"author":{"gitId":"yunruu"},"content":"    -fx-background-color: #FEFEFE;","lastModifiedDate":"2022-10-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":135,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":136,"author":{"gitId":"yunruu"},"content":"    -fx-background-color: #F9F9F9;","lastModifiedDate":"2022-10-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":139,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":140,"author":{"gitId":"yunruu"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2022-10-20"},{"lineNumber":141,"author":{"gitId":"yunruu"},"content":"    -fx-border-color: derive(#6D28D9, 20%);","lastModifiedDate":"2022-10-20"},{"lineNumber":142,"author":{"gitId":"yunruu"},"content":"    -fx-background-color: #e7e4f9;","lastModifiedDate":"2022-10-20"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":145,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":146,"author":{"gitId":"yunruu"},"content":"    -fx-border-color: #6D28D9;","lastModifiedDate":"2022-10-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":149,"author":{"gitId":"yunruu"},"content":".task-side-panel {","lastModifiedDate":"2022-10-24"},{"lineNumber":150,"author":{"gitId":"yunruu"},"content":"    -fx-background-color: #FAFAFA;","lastModifiedDate":"2022-10-26"},{"lineNumber":151,"author":{"gitId":"yunruu"},"content":"}","lastModifiedDate":"2022-10-24"},{"lineNumber":152,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":153,"author":{"gitId":"yunruu"},"content":".task-side-panel .list-cell:filled {","lastModifiedDate":"2022-10-27"},{"lineNumber":154,"author":{"gitId":"yunruu"},"content":"    -fx-background-color: #FAFAFA;","lastModifiedDate":"2022-10-27"},{"lineNumber":155,"author":{"gitId":"yunruu"},"content":"    -fx-padding: 5;","lastModifiedDate":"2022-10-24"},{"lineNumber":156,"author":{"gitId":"yunruu"},"content":"}","lastModifiedDate":"2022-10-24"},{"lineNumber":157,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":158,"author":{"gitId":"yunruu"},"content":".task-side-panel .list-cell:filled:selected {","lastModifiedDate":"2022-10-24"},{"lineNumber":159,"author":{"gitId":"yunruu"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2022-10-24"},{"lineNumber":160,"author":{"gitId":"yunruu"},"content":"    -fx-border-color: derive(#6D28D9, 20%);","lastModifiedDate":"2022-10-24"},{"lineNumber":161,"author":{"gitId":"yunruu"},"content":"}","lastModifiedDate":"2022-10-24"},{"lineNumber":162,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":163,"author":{"gitId":"yunruu"},"content":".task-side-panel .list-cell:filled:selected #cardPane {","lastModifiedDate":"2022-10-24"},{"lineNumber":164,"author":{"gitId":"yunruu"},"content":"    -fx-border-color: #6D28D9;","lastModifiedDate":"2022-10-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"yunruu"},"content":".side-panel-cell-big-label {","lastModifiedDate":"2022-10-27"},{"lineNumber":168,"author":{"gitId":"yunruu"},"content":"    -fx-font-size: 15px;","lastModifiedDate":"2022-10-27"},{"lineNumber":169,"author":{"gitId":"yunruu"},"content":"    -fx-font-family: \"Inter Medium\";","lastModifiedDate":"2022-10-27"},{"lineNumber":170,"author":{"gitId":"yunruu"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2022-10-27"},{"lineNumber":171,"author":{"gitId":"yunruu"},"content":"    -fx-text-fill: #333333;","lastModifiedDate":"2022-10-27"},{"lineNumber":172,"author":{"gitId":"yunruu"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2022-10-27"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-27"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":175,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"yunruu"},"content":"    -fx-font-family: \"Inter SemiBold\";","lastModifiedDate":"2022-10-27"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2022-10-27"},{"lineNumber":178,"author":{"gitId":"yunruu"},"content":"    -fx-text-fill: #444444;","lastModifiedDate":"2022-10-27"},{"lineNumber":179,"author":{"gitId":"yunruu"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2022-10-14"},{"lineNumber":180,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"yunruu"},"content":".cell_small_label, .due_date_label {","lastModifiedDate":"2022-10-28"},{"lineNumber":183,"author":{"gitId":"yunruu"},"content":"    -fx-font-family: \"Inter Medium\";","lastModifiedDate":"2022-10-27"},{"lineNumber":184,"author":{"gitId":"yunruu"},"content":"    -fx-font-size: 12px;","lastModifiedDate":"2022-10-20"},{"lineNumber":185,"author":{"gitId":"yunruu"},"content":"    -fx-text-fill: #64748B;","lastModifiedDate":"2022-10-12"},{"lineNumber":186,"author":{"gitId":"yunruu"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2022-10-14"},{"lineNumber":187,"author":{"gitId":"yunruu"},"content":"}","lastModifiedDate":"2022-10-12"},{"lineNumber":188,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":189,"author":{"gitId":"yunruu"},"content":".check_icon {","lastModifiedDate":"2022-10-28"},{"lineNumber":190,"author":{"gitId":"yunruu"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2022-10-28"},{"lineNumber":191,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":193,"author":{"gitId":"yunruu"},"content":".sub_heading {","lastModifiedDate":"2022-10-12"},{"lineNumber":194,"author":{"gitId":"yunruu"},"content":"    -fx-font-family: \"Arial\";","lastModifiedDate":"2022-10-22"},{"lineNumber":195,"author":{"gitId":"yunruu"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2022-10-22"},{"lineNumber":196,"author":{"gitId":"yunruu"},"content":"    -fx-font-size: 12px;","lastModifiedDate":"2022-10-22"},{"lineNumber":197,"author":{"gitId":"yunruu"},"content":"    -fx-text-fill: #A1A1AA;","lastModifiedDate":"2022-10-12"},{"lineNumber":198,"author":{"gitId":"yunruu"},"content":"    -fx-background-color: #FAFAFA;","lastModifiedDate":"2022-10-26"},{"lineNumber":199,"author":{"gitId":"yunruu"},"content":"}","lastModifiedDate":"2022-10-12"},{"lineNumber":200,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":201,"author":{"gitId":"yunruu"},"content":".cell_small_flowPane .label {","lastModifiedDate":"2022-10-12"},{"lineNumber":202,"author":{"gitId":"yunruu"},"content":"    -fx-font-family: \"Inter Medium\";","lastModifiedDate":"2022-10-27"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2022-10-12"},{"lineNumber":204,"author":{"gitId":"yunruu"},"content":"    -fx-text-fill: #AFB4FF;","lastModifiedDate":"2022-10-12"},{"lineNumber":205,"author":{"gitId":"yunruu"},"content":"    -fx-background-color: #AFB4FF;","lastModifiedDate":"2022-10-12"},{"lineNumber":206,"author":{"gitId":"yunruu"},"content":"}","lastModifiedDate":"2022-10-12"},{"lineNumber":207,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":208,"author":{"gitId":"yunruu"},"content":".circle_icon_label {","lastModifiedDate":"2022-10-20"},{"lineNumber":209,"author":{"gitId":"yunruu"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2022-10-20"},{"lineNumber":210,"author":{"gitId":"yunruu"},"content":"}","lastModifiedDate":"2022-10-20"},{"lineNumber":211,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":212,"author":{"gitId":"yunruu"},"content":".task_cell_deco_circle {","lastModifiedDate":"2022-10-20"},{"lineNumber":213,"author":{"gitId":"yunruu"},"content":"    -fx-fill: #A1A1AA;","lastModifiedDate":"2022-10-20"},{"lineNumber":214,"author":{"gitId":"yunruu"},"content":"    -fx-stroke: #A1A1AA;","lastModifiedDate":"2022-10-20"},{"lineNumber":215,"author":{"gitId":"yunruu"},"content":"    -fx-stroke-type: inside;","lastModifiedDate":"2022-10-22"},{"lineNumber":216,"author":{"gitId":"yunruu"},"content":"}","lastModifiedDate":"2022-10-20"},{"lineNumber":217,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":218,"author":{"gitId":"yunruu"},"content":".task_cell_deco_circle:selected {","lastModifiedDate":"2022-10-20"},{"lineNumber":219,"author":{"gitId":"yunruu"},"content":"    -fx-fill: #6D28D9;","lastModifiedDate":"2022-10-20"},{"lineNumber":220,"author":{"gitId":"yunruu"},"content":"}","lastModifiedDate":"2022-10-20"},{"lineNumber":221,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":222,"author":{"gitId":"yunruu"},"content":".task_cell_deco_line {","lastModifiedDate":"2022-10-20"},{"lineNumber":223,"author":{"gitId":"yunruu"},"content":"    -fx-stroke: #A1A1AA;","lastModifiedDate":"2022-10-20"},{"lineNumber":224,"author":{"gitId":"yunruu"},"content":"}","lastModifiedDate":"2022-10-20"},{"lineNumber":225,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":226,"author":{"gitId":"yunruu"},"content":".tags_pane .label {","lastModifiedDate":"2022-10-12"},{"lineNumber":227,"author":{"gitId":"yunruu"},"content":"    -fx-font-fill: #FFFFFF;","lastModifiedDate":"2022-10-24"},{"lineNumber":228,"author":{"gitId":"yunruu"},"content":"    -fx-background-color: #FAFAFA;","lastModifiedDate":"2022-10-24"},{"lineNumber":229,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":232,"author":{"gitId":"santosh3007"},"content":"    -fx-border-radius: 10;","lastModifiedDate":"2022-10-05"},{"lineNumber":233,"author":{"gitId":"santosh3007"},"content":"    -fx-background-radius: 10;","lastModifiedDate":"2022-10-05"},{"lineNumber":234,"author":{"gitId":"santosh3007"},"content":"    -fx-background-color: derive(#E4E4E7, 20%);","lastModifiedDate":"2022-10-05"},{"lineNumber":235,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":238,"author":{"gitId":"yunruu"},"content":"    -fx-background-color: #FAFAFA;","lastModifiedDate":"2022-10-24"},{"lineNumber":239,"author":{"gitId":"santosh3007"},"content":"    -fx-border-color: derive(#F3F4F6, 10%);","lastModifiedDate":"2022-10-05"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":241,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":243,"author":{"gitId":"yunruu"},"content":".right-pane-with-border {","lastModifiedDate":"2022-10-24"},{"lineNumber":244,"author":{"gitId":"yunruu"},"content":"    -fx-background-color: #FAFAFA;","lastModifiedDate":"2022-10-24"},{"lineNumber":245,"author":{"gitId":"yunruu"},"content":"    -fx-border-color: derive(#F3F4F6, 10%);","lastModifiedDate":"2022-10-24"},{"lineNumber":246,"author":{"gitId":"yunruu"},"content":"    -fx-border-width: 0px;","lastModifiedDate":"2022-10-24"},{"lineNumber":247,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-24"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":249,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"yunruu"},"content":"    -fx-background-color: #6D28D9;","lastModifiedDate":"2022-10-12"},{"lineNumber":251,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":253,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":255,"author":{"gitId":"yunruu"},"content":"    -fx-font-family: \"Space Grotesk\";","lastModifiedDate":"2022-10-27"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":257,"author":{"gitId":"yunruu"},"content":"    -fx-text-fill: #7C3AED;","lastModifiedDate":"2022-10-12"},{"lineNumber":258,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":260,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":261,"author":{"gitId":"yunruu"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2022-10-24"},{"lineNumber":262,"author":{"gitId":"yunruu"},"content":"}","lastModifiedDate":"2022-10-24"},{"lineNumber":263,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":264,"author":{"gitId":"yunruu"},"content":".result_heading {","lastModifiedDate":"2022-10-24"},{"lineNumber":265,"author":{"gitId":"yunruu"},"content":"    -fx-font-family: \"Arial\";","lastModifiedDate":"2022-10-24"},{"lineNumber":266,"author":{"gitId":"yunruu"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2022-10-24"},{"lineNumber":267,"author":{"gitId":"yunruu"},"content":"    -fx-font-size: 12px;","lastModifiedDate":"2022-10-24"},{"lineNumber":268,"author":{"gitId":"yunruu"},"content":"    -fx-text-fill: #A1A1AA;","lastModifiedDate":"2022-10-24"},{"lineNumber":269,"author":{"gitId":"yunruu"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2022-10-24"},{"lineNumber":270,"author":{"gitId":"yunruu"},"content":"}","lastModifiedDate":"2022-10-24"},{"lineNumber":271,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":272,"author":{"gitId":"yunruu"},"content":".result-display-pane {","lastModifiedDate":"2022-10-24"},{"lineNumber":273,"author":{"gitId":"yunruu"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2022-10-24"},{"lineNumber":274,"author":{"gitId":"yunruu"},"content":"    -fx-border-width: 0px, 0px, 0px, 0px;","lastModifiedDate":"2022-10-24"},{"lineNumber":275,"author":{"gitId":"yunruu"},"content":"    -fx-border-top-width: 2px;","lastModifiedDate":"2022-10-24"},{"lineNumber":276,"author":{"gitId":"yunruu"},"content":"    -fx-border-color: #F3F4F6","lastModifiedDate":"2022-10-24"},{"lineNumber":277,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":284,"author":{"gitId":"yunruu"},"content":"    -fx-background-color: #6D28D9;","lastModifiedDate":"2022-10-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":295,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":297,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":298,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":301,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":303,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":307,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":308,"author":{"gitId":"yunruu"},"content":"    -fx-background-color: derive(#888EA4, 50%);","lastModifiedDate":"2022-11-06"},{"lineNumber":309,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"yunruu"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2022-11-06"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":314,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":317,"author":{"gitId":"santosh3007"},"content":"    -fx-background-color: derive(#FAFAFA, 20%);","lastModifiedDate":"2022-10-05"},{"lineNumber":318,"author":{"gitId":"yunruu"},"content":"    -fx-padding: 0 0 0 20;","lastModifiedDate":"2022-10-28"},{"lineNumber":319,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":321,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":322,"author":{"gitId":"yunruu"},"content":"    -fx-font-size: 9pt;","lastModifiedDate":"2022-10-22"},{"lineNumber":323,"author":{"gitId":"yunruu"},"content":"    -fx-font-family: \"Arial\";","lastModifiedDate":"2022-10-22"},{"lineNumber":324,"author":{"gitId":"yunruu"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2022-10-22"},{"lineNumber":325,"author":{"gitId":"santosh3007"},"content":"    -fx-text-fill: #A1A1AA;","lastModifiedDate":"2022-10-05"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":327,"author":{"gitId":"yunruu"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2022-10-22"},{"lineNumber":328,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":330,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":331,"author":{"gitId":"yunruu"},"content":"    -fx-background-color: #FAFAFA;","lastModifiedDate":"2022-10-12"},{"lineNumber":332,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":334,"author":{"gitId":"-"},"content":" .button {","lastModifiedDate":"2016-08-08"},{"lineNumber":335,"author":{"gitId":"santosh3007"},"content":"    -fx-background-color: #FAFAFA;","lastModifiedDate":"2022-10-28"},{"lineNumber":336,"author":{"gitId":"santosh3007"},"content":"    -fx-font-size: 9pt;","lastModifiedDate":"2022-10-28"},{"lineNumber":337,"author":{"gitId":"santosh3007"},"content":"    -fx-font-family: \"Arial\";","lastModifiedDate":"2022-10-28"},{"lineNumber":338,"author":{"gitId":"santosh3007"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2022-10-28"},{"lineNumber":339,"author":{"gitId":"santosh3007"},"content":"    -fx-text-fill: #95959b;","lastModifiedDate":"2022-10-28"},{"lineNumber":340,"author":{"gitId":"santosh3007"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2022-10-28"},{"lineNumber":341,"author":{"gitId":"santosh3007"},"content":"    -fx-padding: 8 10 8 8;","lastModifiedDate":"2022-10-28"},{"lineNumber":342,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":344,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":345,"author":{"gitId":"santosh3007"},"content":"    -fx-background-color: #F2F2F2;","lastModifiedDate":"2022-10-28"},{"lineNumber":346,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":348,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":349,"author":{"gitId":"santosh3007"},"content":"    -fx-background-color: #F0F0F0;","lastModifiedDate":"2022-10-28"},{"lineNumber":350,"author":{"gitId":"santosh3007"},"content":"    -fx-text-fill: #959595;","lastModifiedDate":"2022-10-28"},{"lineNumber":351,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":354,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":356,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":358,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":359,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":360,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":362,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":364,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":366,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":368,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":369,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":370,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":372,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":373,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":374,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":375,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":376,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":377,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":379,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":380,"author":{"gitId":"yunruu"},"content":"    -fx-background-color: derive(#64748B, 85%);","lastModifiedDate":"2022-10-23"},{"lineNumber":381,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":383,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":384,"author":{"gitId":"yunruu"},"content":"    -fx-background-color: derive(#E0DCE5, 50%);","lastModifiedDate":"2022-10-22"},{"lineNumber":385,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":386,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":388,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":389,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":390,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":391,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":393,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":394,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":395,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":397,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":398,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":399,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":401,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":402,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":403,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":405,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":406,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":407,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":408,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":410,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":411,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":412,"author":{"gitId":"yunruu"},"content":"    -fx-text-fill: #F1F1F1;","lastModifiedDate":"2022-10-27"},{"lineNumber":413,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":414,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":415,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":416,"author":{"gitId":"santosh3007"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2022-10-21"},{"lineNumber":417,"author":{"gitId":"santosh3007"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2022-10-21"},{"lineNumber":418,"author":{"gitId":"santosh3007"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2022-10-21"},{"lineNumber":419,"author":{"gitId":"yunruu"},"content":"    -fx-font-family: \"Space Grotesk\";","lastModifiedDate":"2022-10-27"},{"lineNumber":420,"author":{"gitId":"santosh3007"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2022-10-21"},{"lineNumber":421,"author":{"gitId":"santosh3007"},"content":"    -fx-text-fill: #000000;","lastModifiedDate":"2022-10-21"},{"lineNumber":422,"author":{"gitId":"santosh3007"},"content":"}","lastModifiedDate":"2022-10-21"},{"lineNumber":423,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":424,"author":{"gitId":"santosh3007"},"content":"#commandSuggestionTextField {","lastModifiedDate":"2022-10-21"},{"lineNumber":425,"author":{"gitId":"santosh3007"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2022-11-06"},{"lineNumber":426,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":427,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":428,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":429,"author":{"gitId":"yunruu"},"content":"    -fx-font-family: \"Space Grotesk\";","lastModifiedDate":"2022-10-27"},{"lineNumber":430,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":431,"author":{"gitId":"yunruu"},"content":"    -fx-text-fill: #91919A;","lastModifiedDate":"2022-10-27"},{"lineNumber":432,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":433,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":434,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":435,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":436,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":437,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":438,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":439,"author":{"gitId":"yunruu"},"content":"    -fx-background-color: transparent, derive(#E4E4E7, 20%), transparent, derive(#E4E4E7, 20%);","lastModifiedDate":"2022-10-19"},{"lineNumber":440,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":441,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":442,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":443,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":444,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":445,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":446,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":447,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":448,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":449,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":450,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":451,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":452,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":453,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":454,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":455,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"santosh3007":25,"-":279,"yunruu":151}},{"path":"src/main/resources/view/Extensions.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":".error {","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d06651 !important; /* The error class should always override the default text-fill style */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".list-cell:empty {","lastModifiedDate":"2017-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /* Empty cells will not have alternating colours */","lastModifiedDate":"2017-02-23"},{"lineNumber":8,"author":{"gitId":"yunruu"},"content":"    -fx-background: #FAFAFA;","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":".tag-selector {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    -fx-border-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-border-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-background-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":".tooltip-text {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":19,"yunruu":1}},{"path":"src/main/resources/view/HelpWindow.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jasonqiu212"},"content":"#helpMessage {","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"jasonqiu212"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2022-10-26"},{"lineNumber":3,"author":{"gitId":"jasonqiu212"},"content":"}","lastModifiedDate":"2022-10-26"},{"lineNumber":4,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"jasonqiu212"},"content":"#copyButton {","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-01-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"#copyButton {","lastModifiedDate":"2022-01-02"},{"lineNumber":10,"author":{"gitId":"jasonqiu212"},"content":"    -fx-background-color: #6D28D9;","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"#copyButton:hover {","lastModifiedDate":"2022-01-02"},{"lineNumber":14,"author":{"gitId":"jasonqiu212"},"content":"    -fx-background-color: derive(#6D28D9, 20%);","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"#copyButton:armed {","lastModifiedDate":"2022-01-02"},{"lineNumber":18,"author":{"gitId":"jasonqiu212"},"content":"    -fx-background-color: #6D28D9;","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"#helpMessageContainer {","lastModifiedDate":"2022-01-02"},{"lineNumber":22,"author":{"gitId":"jasonqiu212"},"content":"    -fx-background-color: derive(#ffffff, 20%);","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"jasonqiu212":9,"-":14}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"santosh3007"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":7,"author":{"gitId":"yunruu"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":9,"author":{"gitId":"yunruu"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":10,"author":{"gitId":"yunruu"},"content":"\u003c?import javafx.scene.layout.Pane?\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"yunruu"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":15,"author":{"gitId":"yunruu"},"content":"\u003cfx:root minWidth\u003d\"1200.0\" onCloseRequest\u003d\"#handleExit\" title\u003d\"Swift+\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"jasonqiu212"},"content":"    \u003cImage url\u003d\"@/images/swift.png\" /\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"santosh3007"},"content":"      \u003cVBox prefHeight\u003d\"66.0\" prefWidth\u003d\"1200.0\"\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"yunruu"},"content":"        \u003cHBox styleClass\u003d\"menu-bar\"\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":28,"author":{"gitId":"santosh3007"},"content":"          \u003cButton fx:id\u003d\"contactsButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#showContactTab\" text\u003d\"CONTACTS\" /\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":29,"author":{"gitId":"santosh3007"},"content":"          \u003cButton fx:id\u003d\"tasksButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#showTaskTab\" text\u003d\"TASKS\" /\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":30,"author":{"gitId":"santosh3007"},"content":"          \u003cButton fx:id\u003d\"helpButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"HELP\" /\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":31,"author":{"gitId":"santosh3007"},"content":"          \u003cButton fx:id\u003d\"exitButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"EXIT\" /\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":32,"author":{"gitId":"santosh3007"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":34,"author":{"gitId":"yunruu"},"content":"        \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":36,"author":{"gitId":"yunruu"},"content":"            \u003cInsets bottom\u003d\"10.0\" left\u003d\"25.0\" right\u003d\"25.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":40,"author":{"gitId":"santosh3007"},"content":"        \u003cVBox VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"santosh3007"},"content":"          \u003cHBox VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"santosh3007"},"content":"            \u003cHBox minWidth\u003d\"850.0\" prefHeight\u003d\"22.0\" HBox.hgrow\u003d\"ALWAYS\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":43,"author":{"gitId":"yunruu"},"content":"                \u003cVBox fx:id\u003d\"list\" prefHeight\u003d\"22.0\" styleClass\u003d\"pane-with-border\" HBox.hgrow\u003d\"ALWAYS\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                  \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":45,"author":{"gitId":"yunruu"},"content":"                    \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                  \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"yunruu"},"content":"                  \u003cStackPane fx:id\u003d\"listPanelPlaceholder\" minWidth\u003d\"600.0\" HBox.hgrow\u003d\"ALWAYS\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":48,"author":{"gitId":"yunruu"},"content":"                           \u003cpadding\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":49,"author":{"gitId":"yunruu"},"content":"                              \u003cInsets left\u003d\"14.0\" right\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":50,"author":{"gitId":"yunruu"},"content":"                           \u003c/padding\u003e\u003c/StackPane\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":51,"author":{"gitId":"santosh3007"},"content":"                \u003c/VBox\u003e","lastModifiedDate":"2022-10-05"},{"lineNumber":52,"author":{"gitId":"santosh3007"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2022-10-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":54,"author":{"gitId":"santosh3007"},"content":"                  \u003cHBox minWidth\u003d\"300.0\" prefHeight\u003d\"22.0\" prefWidth\u003d\"282.0\" HBox.hgrow\u003d\"ALWAYS\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":55,"author":{"gitId":"yunruu"},"content":"              \u003cVBox style\u003d\"-fx-background-color: #FAFAFA;\" styleClass\u003d\"right-panel-vbox\" HBox.hgrow\u003d\"ALWAYS\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":56,"author":{"gitId":"yunruu"},"content":"                        \u003cPane minHeight\u003d\"25.0\" prefHeight\u003d\"25.0\" prefWidth\u003d\"400.0\" styleClass\u003d\"result-display-pane\"\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":57,"author":{"gitId":"yunruu"},"content":"                           \u003cchildren\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":58,"author":{"gitId":"yunruu"},"content":"                              \u003cLabel prefHeight\u003d\"25.0\" styleClass\u003d\"result_heading\" text\u003d\"COMMAND RESULTS\"\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":59,"author":{"gitId":"yunruu"},"content":"                                 \u003cpadding\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":60,"author":{"gitId":"yunruu"},"content":"                                    \u003cInsets left\u003d\"12.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":61,"author":{"gitId":"yunruu"},"content":"                                 \u003c/padding\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":62,"author":{"gitId":"yunruu"},"content":"                                 \u003copaqueInsets\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":63,"author":{"gitId":"yunruu"},"content":"                                    \u003cInsets /\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":64,"author":{"gitId":"yunruu"},"content":"                                 \u003c/opaqueInsets\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":65,"author":{"gitId":"yunruu"},"content":"                              \u003c/Label\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":66,"author":{"gitId":"yunruu"},"content":"                           \u003c/children\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":67,"author":{"gitId":"yunruu"},"content":"                        \u003c/Pane\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":68,"author":{"gitId":"santosh3007"},"content":"                \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"right-pane-with-border\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                  \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":70,"author":{"gitId":"yunruu"},"content":"                    \u003cInsets bottom\u003d\"5.0\" left\u003d\"10.0\" right\u003d\"25.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                  \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":72,"author":{"gitId":"santosh3007"},"content":"                \u003c/StackPane\u003e","lastModifiedDate":"2022-10-05"},{"lineNumber":73,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":74,"author":{"gitId":"yunruu"},"content":"                \u003cStackPane fx:id\u003d\"personTaskListPanelPlaceholder\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":75,"author":{"gitId":"ShenyiCui"},"content":"                  \u003cpadding\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":76,"author":{"gitId":"yunruu"},"content":"                    \u003cInsets bottom\u003d\"5.0\" left\u003d\"10.0\" right\u003d\"25.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":77,"author":{"gitId":"ShenyiCui"},"content":"                  \u003c/padding\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":78,"author":{"gitId":"ShenyiCui"},"content":"                \u003c/StackPane\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":79,"author":{"gitId":"santosh3007"},"content":"              \u003c/VBox\u003e","lastModifiedDate":"2022-10-05"},{"lineNumber":80,"author":{"gitId":"santosh3007"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2022-10-05"},{"lineNumber":81,"author":{"gitId":"santosh3007"},"content":"          \u003c/HBox\u003e","lastModifiedDate":"2022-10-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"jasonqiu212":1,"ShenyiCui":4,"santosh3007":19,"-":35,"yunruu":30}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"yunruu"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"yunruu"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":12,"author":{"gitId":"yunruu"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":15,"author":{"gitId":"yunruu"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" prefHeight\u003d\"95.0\" prefWidth\u003d\"560.0\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"yunruu"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"90.0\" prefHeight\u003d\"90.0\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"yunruu"},"content":"        \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"yunruu"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" prefWidth\u003d\"540.0\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":30,"author":{"gitId":"yunruu"},"content":"               \u003cpadding\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"yunruu"},"content":"                  \u003cInsets top\u003d\"11.0\" /\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"yunruu"},"content":"               \u003c/padding\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":34,"author":{"gitId":"yunruu"},"content":"        \u003cLabel fx:id\u003d\"name\" prefHeight\u003d\"17.0\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\"\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":35,"author":{"gitId":"yunruu"},"content":"               \u003cpadding\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"yunruu"},"content":"                  \u003cInsets top\u003d\"10.0\" /\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":37,"author":{"gitId":"yunruu"},"content":"               \u003c/padding\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":38,"author":{"gitId":"yunruu"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":39,"author":{"gitId":"yunruu"},"content":"         \u003cFlowPane fx:id\u003d\"tags\" alignment\u003d\"CENTER_RIGHT\" columnHalignment\u003d\"RIGHT\" prefHeight\u003d\"18.0\" prefWidth\u003d\"380.0\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":40,"author":{"gitId":"yunruu"},"content":"               \u003cpadding\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"yunruu"},"content":"                  \u003cInsets bottom\u003d\"5.0\" right\u003d\"10.0\" /\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":42,"author":{"gitId":"yunruu"},"content":"               \u003c/padding\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"yunruu"},"content":"               \u003cHBox.margin\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":44,"author":{"gitId":"yunruu"},"content":"                  \u003cInsets bottom\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":45,"author":{"gitId":"yunruu"},"content":"               \u003c/HBox.margin\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":46,"author":{"gitId":"yunruu"},"content":"            \u003c/FlowPane\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"yunruu"},"content":"            \u003cVBox.margin\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":48,"author":{"gitId":"yunruu"},"content":"               \u003cInsets top\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":49,"author":{"gitId":"yunruu"},"content":"            \u003c/VBox.margin\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"yunruu"},"content":"         \u003cHBox\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":52,"author":{"gitId":"yunruu"},"content":"            \u003cLabel fx:id\u003d\"phone\" minWidth\u003d\"-Infinity\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":53,"author":{"gitId":"yunruu"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"yunruu"},"content":"                    \u003cInsets left\u003d\"24.0\" right\u003d\"12.0\" /\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":55,"author":{"gitId":"yunruu"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"yunruu"},"content":"                \u003cgraphic\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"yunruu"},"content":"                    \u003cLabel styleClass\u003d\"circle_icon_label\"\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":58,"author":{"gitId":"yunruu"},"content":"                        \u003cgraphic\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"yunruu"},"content":"                            \u003cImageView fitHeight\u003d\"9.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":60,"author":{"gitId":"yunruu"},"content":"                                \u003cimage\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":61,"author":{"gitId":"yunruu"},"content":"                                    \u003cImage url\u003d\"@/images/phone_icon_2.png\" /\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":62,"author":{"gitId":"yunruu"},"content":"                                \u003c/image\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":63,"author":{"gitId":"yunruu"},"content":"                            \u003c/ImageView\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":64,"author":{"gitId":"yunruu"},"content":"                        \u003c/graphic\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"yunruu"},"content":"                        \u003cpadding\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":66,"author":{"gitId":"yunruu"},"content":"                           \u003cInsets right\u003d\"3.0\" top\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":67,"author":{"gitId":"yunruu"},"content":"                        \u003c/padding\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":68,"author":{"gitId":"yunruu"},"content":"                     \u003c/Label\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":69,"author":{"gitId":"yunruu"},"content":"                  \u003c/graphic\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"yunruu"},"content":"               \u003c/Label\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":71,"author":{"gitId":"yunruu"},"content":"            \u003cLabel fx:id\u003d\"email\" minWidth\u003d\"-Infinity\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\"\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":72,"author":{"gitId":"yunruu"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":73,"author":{"gitId":"yunruu"},"content":"                    \u003cInsets right\u003d\"10.0\" /\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":74,"author":{"gitId":"yunruu"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":75,"author":{"gitId":"yunruu"},"content":"                \u003cgraphic\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":76,"author":{"gitId":"yunruu"},"content":"                    \u003cLabel styleClass\u003d\"circle_icon_label\"\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":77,"author":{"gitId":"yunruu"},"content":"                        \u003cgraphic\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":78,"author":{"gitId":"yunruu"},"content":"                            \u003cImageView fitHeight\u003d\"9.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":79,"author":{"gitId":"yunruu"},"content":"                                \u003cimage\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":80,"author":{"gitId":"yunruu"},"content":"                                    \u003cImage url\u003d\"@/images/email_icon_2.png\" /\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":81,"author":{"gitId":"yunruu"},"content":"                                \u003c/image\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":82,"author":{"gitId":"yunruu"},"content":"                            \u003c/ImageView\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":83,"author":{"gitId":"yunruu"},"content":"                        \u003c/graphic\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":84,"author":{"gitId":"yunruu"},"content":"                        \u003cpadding\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":85,"author":{"gitId":"yunruu"},"content":"                            \u003cInsets right\u003d\"3.0\" top\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":86,"author":{"gitId":"yunruu"},"content":"                        \u003c/padding\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":87,"author":{"gitId":"yunruu"},"content":"                    \u003c/Label\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":88,"author":{"gitId":"yunruu"},"content":"                \u003c/graphic\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":89,"author":{"gitId":"yunruu"},"content":"            \u003c/Label\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":90,"author":{"gitId":"yunruu"},"content":"            \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\"\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":91,"author":{"gitId":"yunruu"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":92,"author":{"gitId":"yunruu"},"content":"                    \u003cInsets right\u003d\"10.0\" /\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":93,"author":{"gitId":"yunruu"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":94,"author":{"gitId":"yunruu"},"content":"                \u003cgraphic\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":95,"author":{"gitId":"yunruu"},"content":"                    \u003cLabel styleClass\u003d\"circle_icon_label\"\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":96,"author":{"gitId":"yunruu"},"content":"                        \u003cgraphic\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":97,"author":{"gitId":"yunruu"},"content":"                            \u003cImageView fitHeight\u003d\"9.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":98,"author":{"gitId":"yunruu"},"content":"                                \u003cimage\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":99,"author":{"gitId":"yunruu"},"content":"                                    \u003cImage url\u003d\"@/images/address_icon_2.png\" /\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":100,"author":{"gitId":"yunruu"},"content":"                                \u003c/image\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":101,"author":{"gitId":"yunruu"},"content":"                            \u003c/ImageView\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":102,"author":{"gitId":"yunruu"},"content":"                        \u003c/graphic\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":103,"author":{"gitId":"yunruu"},"content":"                        \u003cpadding\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":104,"author":{"gitId":"yunruu"},"content":"                            \u003cInsets right\u003d\"3.0\" /\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":105,"author":{"gitId":"yunruu"},"content":"                        \u003c/padding\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":106,"author":{"gitId":"yunruu"},"content":"                    \u003c/Label\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":107,"author":{"gitId":"yunruu"},"content":"                \u003c/graphic\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":108,"author":{"gitId":"yunruu"},"content":"            \u003c/Label\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":109,"author":{"gitId":"yunruu"},"content":"            \u003cVBox.margin\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":110,"author":{"gitId":"yunruu"},"content":"               \u003cInsets /\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":111,"author":{"gitId":"yunruu"},"content":"            \u003c/VBox.margin\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":112,"author":{"gitId":"yunruu"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":113,"author":{"gitId":"yunruu"},"content":"               \u003cInsets bottom\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":114,"author":{"gitId":"yunruu"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"         \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"yunruu"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":118,"author":{"gitId":"yunruu"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":119,"author":{"gitId":"yunruu"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":28,"yunruu":93}},{"path":"src/main/resources/view/PersonListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"yunruu"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"yunruu"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"yunruu"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-11-03"},{"lineNumber":9,"author":{"gitId":"jasonqiu212"},"content":"   \u003cLabel fx:id\u003d\"listPanelHeading\" prefHeight\u003d\"17.0\" prefWidth\u003d\"240.0\" styleClass\u003d\"sub_heading\" text\u003d\"CONTACTS\"\u003e","lastModifiedDate":"2022-11-06"},{"lineNumber":10,"author":{"gitId":"yunruu"},"content":"      \u003cVBox.margin\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"yunruu"},"content":"         \u003cInsets bottom\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"yunruu"},"content":"      \u003c/VBox.margin\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"yunruu"},"content":"   \u003c/Label\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  \u003cListView fx:id\u003d\"personListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jasonqiu212":1,"-":7,"yunruu":7}},{"path":"src/main/resources/view/PersonTaskCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ShenyiCui"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":2,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":3,"author":{"gitId":"ShenyiCui"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":4,"author":{"gitId":"ShenyiCui"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":5,"author":{"gitId":"ShenyiCui"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":6,"author":{"gitId":"yunruu"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"ShenyiCui"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":8,"author":{"gitId":"ShenyiCui"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":9,"author":{"gitId":"ShenyiCui"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":10,"author":{"gitId":"ShenyiCui"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":11,"author":{"gitId":"ShenyiCui"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":12,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":13,"author":{"gitId":"yunruu"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" prefWidth\u003d\"313.0\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-11-03"},{"lineNumber":14,"author":{"gitId":"ShenyiCui"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":15,"author":{"gitId":"ShenyiCui"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":16,"author":{"gitId":"ShenyiCui"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":17,"author":{"gitId":"ShenyiCui"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":18,"author":{"gitId":"yunruu"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"69.0\" prefHeight\u003d\"69.0\" prefWidth\u003d\"313.0\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"ShenyiCui"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":20,"author":{"gitId":"yunruu"},"content":"                \u003cInsets left\u003d\"15.0\" right\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"ShenyiCui"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":22,"author":{"gitId":"yunruu"},"content":"            \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5.0\"\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"yunruu"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"side-panel-cell-big-label\"\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"ShenyiCui"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":25,"author":{"gitId":"ShenyiCui"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":26,"author":{"gitId":"ShenyiCui"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":27,"author":{"gitId":"ShenyiCui"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":28,"author":{"gitId":"ShenyiCui"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":29,"author":{"gitId":"yunruu"},"content":"                \u003cLabel fx:id\u003d\"name\" prefWidth\u003d\"280.0\" styleClass\u003d\"side-panel-cell-big-label\" text\u003d\"\\$first\"\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"ShenyiCui"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":31,"author":{"gitId":"ShenyiCui"},"content":"                        \u003cInsets right\u003d\"10.0\" /\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":32,"author":{"gitId":"ShenyiCui"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":33,"author":{"gitId":"ShenyiCui"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":34,"author":{"gitId":"yunruu"},"content":"                \u003cFlowPane alignment\u003d\"TOP_RIGHT\" columnHalignment\u003d\"RIGHT\" prefWidth\u003d\"60.0\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":35,"author":{"gitId":"yunruu"},"content":"                    \u003cchildren\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":36,"author":{"gitId":"yunruu"},"content":"                        \u003cLabel fx:id\u003d\"deadline\" alignment\u003d\"CENTER_RIGHT\" contentDisplay\u003d\"RIGHT\" styleClass\u003d\"due_date_label\" textAlignment\u003d\"RIGHT\"\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":37,"author":{"gitId":"yunruu"},"content":"                            \u003cpadding\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":38,"author":{"gitId":"yunruu"},"content":"                                \u003cInsets bottom\u003d\"10.0\" right\u003d\"10.0\" /\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":39,"author":{"gitId":"yunruu"},"content":"                            \u003c/padding\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":40,"author":{"gitId":"yunruu"},"content":"                            \u003cFlowPane.margin\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":41,"author":{"gitId":"yunruu"},"content":"                                \u003cInsets bottom\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":42,"author":{"gitId":"yunruu"},"content":"                            \u003c/FlowPane.margin\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":43,"author":{"gitId":"yunruu"},"content":"                        \u003c/Label\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":44,"author":{"gitId":"yunruu"},"content":"                    \u003c/children\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":45,"author":{"gitId":"yunruu"},"content":"                \u003c/FlowPane\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":46,"author":{"gitId":"yunruu"},"content":"                \u003cVBox.margin\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":47,"author":{"gitId":"yunruu"},"content":"                    \u003cInsets /\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":48,"author":{"gitId":"yunruu"},"content":"                \u003c/VBox.margin\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":49,"author":{"gitId":"ShenyiCui"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":50,"author":{"gitId":"yunruu"},"content":"            \u003cHBox prefWidth\u003d\"130.0\"\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":51,"author":{"gitId":"ShenyiCui"},"content":"                \u003cchildren\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":52,"author":{"gitId":"yunruu"},"content":"                    \u003cFlowPane fx:id\u003d\"contacts\" styleClass\u003d\"\"\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":53,"author":{"gitId":"yunruu"},"content":"                        \u003cHBox.margin\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":54,"author":{"gitId":"yunruu"},"content":"                            \u003cInsets left\u003d\"20.0\" /\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":55,"author":{"gitId":"yunruu"},"content":"                        \u003c/HBox.margin\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":56,"author":{"gitId":"yunruu"},"content":"                    \u003c/FlowPane\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":57,"author":{"gitId":"ShenyiCui"},"content":"                \u003c/children\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":58,"author":{"gitId":"yunruu"},"content":"                \u003cVBox.margin\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":59,"author":{"gitId":"yunruu"},"content":"                    \u003cInsets bottom\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":60,"author":{"gitId":"yunruu"},"content":"                \u003c/VBox.margin\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":61,"author":{"gitId":"ShenyiCui"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":62,"author":{"gitId":"ShenyiCui"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":63,"author":{"gitId":"ShenyiCui"},"content":"        \u003crowConstraints\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":64,"author":{"gitId":"ShenyiCui"},"content":"            \u003cRowConstraints /\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":65,"author":{"gitId":"ShenyiCui"},"content":"        \u003c/rowConstraints\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":66,"author":{"gitId":"ShenyiCui"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":67,"author":{"gitId":"ShenyiCui"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2022-10-22"}],"authorContributionMap":{"ShenyiCui":36,"yunruu":31}},{"path":"src/main/resources/view/PersonTaskListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ShenyiCui"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":2,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":3,"author":{"gitId":"ShenyiCui"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":4,"author":{"gitId":"ShenyiCui"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":5,"author":{"gitId":"ShenyiCui"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":6,"author":{"gitId":"ShenyiCui"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":7,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":8,"author":{"gitId":"yunruu"},"content":"\u003cVBox styleClass\u003d\"task-side-panel\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-11-03"},{"lineNumber":9,"author":{"gitId":"jasonqiu212"},"content":"    \u003cLabel fx:id\u003d\"heading\" prefHeight\u003d\"17.0\" prefWidth\u003d\"550.0\" styleClass\u003d\"sub_heading\" text\u003d\"TASKS\"\u003e","lastModifiedDate":"2022-11-06"},{"lineNumber":10,"author":{"gitId":"ShenyiCui"},"content":"        \u003cVBox.margin\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":11,"author":{"gitId":"ShenyiCui"},"content":"            \u003cInsets bottom\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":12,"author":{"gitId":"ShenyiCui"},"content":"        \u003c/VBox.margin\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":13,"author":{"gitId":"ShenyiCui"},"content":"    \u003c/Label\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":14,"author":{"gitId":"ShenyiCui"},"content":"    \u003cListView fx:id\u003d\"personTaskListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":15,"author":{"gitId":"ShenyiCui"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2022-10-22"}],"authorContributionMap":{"ShenyiCui":13,"jasonqiu212":1,"yunruu":1}},{"path":"src/main/resources/view/ResultDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2016-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"yunruu"},"content":"\u003cStackPane fx:id\u003d\"placeHolder\" prefHeight\u003d\"100.0\" prefWidth\u003d\"512.0\" styleClass\u003d\"pane-with-border\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-11-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  \u003cTextArea fx:id\u003d\"resultDisplay\" editable\u003d\"false\" styleClass\u003d\"result-display\" /\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"-":7,"yunruu":1}},{"path":"src/main/resources/view/TaskListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yunruu"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"yunruu"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"yunruu"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"yunruu"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":6,"author":{"gitId":"yunruu"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":7,"author":{"gitId":"yunruu"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"yunruu"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"yunruu"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"yunruu"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"yunruu"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"yunruu"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":13,"author":{"gitId":"yunruu"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"yunruu"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" minWidth\u003d\"750.0\" prefHeight\u003d\"95.0\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":16,"author":{"gitId":"yunruu"},"content":"    \u003cGridPane prefWidth\u003d\"750.0\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"yunruu"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"yunruu"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"yunruu"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"yunruu"},"content":"      \u003cHBox prefHeight\u003d\"100.0\"\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":21,"author":{"gitId":"yunruu"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":22,"author":{"gitId":"yunruu"},"content":"              \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"-Infinity\" minWidth\u003d\"650.0\"\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":23,"author":{"gitId":"yunruu"},"content":"                  \u003cpadding\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"yunruu"},"content":"                      \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"yunruu"},"content":"                  \u003c/padding\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"yunruu"},"content":"                  \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5.0\"\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":27,"author":{"gitId":"yunruu"},"content":"                  \u003cStackPane minWidth\u003d\"-Infinity\" prefWidth\u003d\"25.0\" styleClass\u003d\"check_icon\"\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":28,"author":{"gitId":"yunruu"},"content":"                     \u003cchildren\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":29,"author":{"gitId":"yunruu"},"content":"                        \u003cLabel fx:id\u003d\"checkBox\" styleClass\u003d\"check_icon\"\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":30,"author":{"gitId":"yunruu"},"content":"                            \u003cgraphic\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":31,"author":{"gitId":"yunruu"},"content":"                                \u003cImageView fitHeight\u003d\"14.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":32,"author":{"gitId":"yunruu"},"content":"                                    \u003cimage\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":33,"author":{"gitId":"yunruu"},"content":"                                        \u003cImage url\u003d\"@/images/check_icon.png\" /\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":34,"author":{"gitId":"yunruu"},"content":"                                    \u003c/image\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":35,"author":{"gitId":"yunruu"},"content":"                                \u003c/ImageView\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":36,"author":{"gitId":"yunruu"},"content":"                            \u003c/graphic\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":37,"author":{"gitId":"yunruu"},"content":"                        \u003c/Label\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":38,"author":{"gitId":"yunruu"},"content":"                        \u003cLabel fx:id\u003d\"uncheckBox\" layoutX\u003d\"24.0\" layoutY\u003d\"14.0\" styleClass\u003d\"check_icon\"\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":39,"author":{"gitId":"yunruu"},"content":"                            \u003cgraphic\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":40,"author":{"gitId":"yunruu"},"content":"                                \u003cImageView fitHeight\u003d\"14.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":41,"author":{"gitId":"yunruu"},"content":"                                    \u003cimage\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":42,"author":{"gitId":"yunruu"},"content":"                                        \u003cImage url\u003d\"@/images/uncheck_icon.png\" /\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":43,"author":{"gitId":"yunruu"},"content":"                                    \u003c/image\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":44,"author":{"gitId":"yunruu"},"content":"                                \u003c/ImageView\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":45,"author":{"gitId":"yunruu"},"content":"                            \u003c/graphic\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":46,"author":{"gitId":"yunruu"},"content":"                        \u003c/Label\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":47,"author":{"gitId":"yunruu"},"content":"                     \u003c/children\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":48,"author":{"gitId":"yunruu"},"content":"                  \u003c/StackPane\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":49,"author":{"gitId":"yunruu"},"content":"                      \u003cLabel fx:id\u003d\"id\" minWidth\u003d\"-Infinity\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":50,"author":{"gitId":"yunruu"},"content":"                      \u003cLabel fx:id\u003d\"taskName\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":51,"author":{"gitId":"yunruu"},"content":"                          \u003cpadding\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":52,"author":{"gitId":"yunruu"},"content":"                              \u003cInsets bottom\u003d\"2.0\" right\u003d\"10.0\" top\u003d\"2.0\" /\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":53,"author":{"gitId":"yunruu"},"content":"                          \u003c/padding\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":54,"author":{"gitId":"jasonqiu212"},"content":"                      \u003c/Label\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":55,"author":{"gitId":"yunruu"},"content":"                  \u003cVBox.margin\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":56,"author":{"gitId":"yunruu"},"content":"                     \u003cInsets /\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":57,"author":{"gitId":"yunruu"},"content":"                  \u003c/VBox.margin\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":58,"author":{"gitId":"yunruu"},"content":"                  \u003c/HBox\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":59,"author":{"gitId":"jasonqiu212"},"content":"                  \u003cHBox alignment\u003d\"CENTER_LEFT\" prefHeight\u003d\"18.0\" translateX\u003d\"25.0\"\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":60,"author":{"gitId":"yunruu"},"content":"                      \u003cLabel styleClass\u003d\"due_date_label\"\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":61,"author":{"gitId":"yunruu"},"content":"                          \u003cgraphic\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":62,"author":{"gitId":"yunruu"},"content":"                              \u003cImageView fitHeight\u003d\"8.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":63,"author":{"gitId":"yunruu"},"content":"                                  \u003cimage\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":64,"author":{"gitId":"yunruu"},"content":"                                      \u003cImage url\u003d\"@/images/deadline_icon_2.png\" /\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":65,"author":{"gitId":"yunruu"},"content":"                                  \u003c/image\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":66,"author":{"gitId":"yunruu"},"content":"                              \u003c/ImageView\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":67,"author":{"gitId":"yunruu"},"content":"                          \u003c/graphic\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":68,"author":{"gitId":"yunruu"},"content":"                          \u003cpadding\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":69,"author":{"gitId":"yunruu"},"content":"                              \u003cInsets bottom\u003d\"1.0\" left\u003d\"28.0\" right\u003d\"4.0\" /\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":70,"author":{"gitId":"yunruu"},"content":"                          \u003c/padding\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":71,"author":{"gitId":"yunruu"},"content":"                      \u003c/Label\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":72,"author":{"gitId":"yunruu"},"content":"                        \u003cLabel fx:id\u003d\"deadline\" alignment\u003d\"TOP_RIGHT\" contentDisplay\u003d\"RIGHT\" styleClass\u003d\"due_date_label\" textAlignment\u003d\"RIGHT\"\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":73,"author":{"gitId":"yunruu"},"content":"                            \u003cpadding\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":74,"author":{"gitId":"yunruu"},"content":"                                \u003cInsets right\u003d\"10.0\" /\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":75,"author":{"gitId":"yunruu"},"content":"                            \u003c/padding\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":76,"author":{"gitId":"yunruu"},"content":"                        \u003c/Label\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":77,"author":{"gitId":"yunruu"},"content":"                      \u003cLabel styleClass\u003d\"cell_small_label\"\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":78,"author":{"gitId":"yunruu"},"content":"                          \u003cgraphic\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":79,"author":{"gitId":"yunruu"},"content":"                              \u003cImageView fitHeight\u003d\"10.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":80,"author":{"gitId":"yunruu"},"content":"                                  \u003cimage\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":81,"author":{"gitId":"yunruu"},"content":"                                      \u003cImage url\u003d\"@/images/description_icon_2.png\" /\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":82,"author":{"gitId":"yunruu"},"content":"                                  \u003c/image\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":83,"author":{"gitId":"yunruu"},"content":"                              \u003c/ImageView\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":84,"author":{"gitId":"yunruu"},"content":"                          \u003c/graphic\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":85,"author":{"gitId":"yunruu"},"content":"                          \u003cpadding\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":86,"author":{"gitId":"yunruu"},"content":"                              \u003cInsets right\u003d\"4.0\" /\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":87,"author":{"gitId":"yunruu"},"content":"                          \u003c/padding\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":88,"author":{"gitId":"yunruu"},"content":"                      \u003c/Label\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":89,"author":{"gitId":"yunruu"},"content":"                      \u003cLabel fx:id\u003d\"description\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$description\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":90,"author":{"gitId":"yunruu"},"content":"                  \u003cVBox.margin\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":91,"author":{"gitId":"yunruu"},"content":"                     \u003cInsets bottom\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":92,"author":{"gitId":"yunruu"},"content":"                  \u003c/VBox.margin\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":93,"author":{"gitId":"yunruu"},"content":"                  \u003c/HBox\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":94,"author":{"gitId":"yunruu"},"content":"              \u003c/VBox\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":95,"author":{"gitId":"yunruu"},"content":"                 \u003cFlowPane fx:id\u003d\"contacts\" alignment\u003d\"TOP_RIGHT\" columnHalignment\u003d\"RIGHT\" orientation\u003d\"VERTICAL\" rowValignment\u003d\"TOP\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":96,"author":{"gitId":"yunruu"},"content":"               \u003cpadding\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":97,"author":{"gitId":"yunruu"},"content":"                  \u003cInsets right\u003d\"15.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":98,"author":{"gitId":"yunruu"},"content":"               \u003c/padding\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":99,"author":{"gitId":"yunruu"},"content":"                 \u003c/FlowPane\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":100,"author":{"gitId":"yunruu"},"content":"         \u003c/children\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":101,"author":{"gitId":"yunruu"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":102,"author":{"gitId":"yunruu"},"content":"        \u003crowConstraints\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":103,"author":{"gitId":"yunruu"},"content":"            \u003cRowConstraints /\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":104,"author":{"gitId":"yunruu"},"content":"        \u003c/rowConstraints\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":105,"author":{"gitId":"yunruu"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":106,"author":{"gitId":"yunruu"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"jasonqiu212":2,"yunruu":104}},{"path":"src/main/resources/view/TaskListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yunruu"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"yunruu"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"yunruu"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"yunruu"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"yunruu"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"yunruu"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-11-03"},{"lineNumber":9,"author":{"gitId":"jasonqiu212"},"content":"   \u003cLabel fx:id\u003d\"listPanelHeading\" prefHeight\u003d\"17.0\" prefWidth\u003d\"245.0\" styleClass\u003d\"sub_heading\" text\u003d\"TASKS\"\u003e","lastModifiedDate":"2022-11-06"},{"lineNumber":10,"author":{"gitId":"yunruu"},"content":"      \u003cVBox.margin\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"yunruu"},"content":"         \u003cInsets bottom\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"yunruu"},"content":"      \u003c/VBox.margin\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"yunruu"},"content":"   \u003c/Label\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"yunruu"},"content":"  \u003cListView fx:id\u003d\"taskListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"yunruu"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"jasonqiu212":1,"yunruu":14}},{"path":"src/main/resources/view/TaskPersonCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yunruu"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":2,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":3,"author":{"gitId":"yunruu"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":4,"author":{"gitId":"yunruu"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":5,"author":{"gitId":"yunruu"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":6,"author":{"gitId":"yunruu"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":7,"author":{"gitId":"yunruu"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":8,"author":{"gitId":"yunruu"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":9,"author":{"gitId":"yunruu"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":10,"author":{"gitId":"yunruu"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":11,"author":{"gitId":"yunruu"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":12,"author":{"gitId":"yunruu"},"content":"\u003c?import javafx.scene.shape.Circle?\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":14,"author":{"gitId":"yunruu"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"yunruu"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"yunruu"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" prefWidth\u003d\"150.0\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-11-03"},{"lineNumber":17,"author":{"gitId":"yunruu"},"content":"    \u003cGridPane prefHeight\u003d\"70.0\" prefWidth\u003d\"150.0\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"yunruu"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":19,"author":{"gitId":"yunruu"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":20,"author":{"gitId":"yunruu"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":21,"author":{"gitId":"yunruu"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" prefHeight\u003d\"70.0\" prefWidth\u003d\"150.0\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"yunruu"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":23,"author":{"gitId":"yunruu"},"content":"                \u003cInsets bottom\u003d\"5.0\" left\u003d\"15.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"yunruu"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":25,"author":{"gitId":"yunruu"},"content":"            \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"yunruu"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":27,"author":{"gitId":"yunruu"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":28,"author":{"gitId":"yunruu"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":29,"author":{"gitId":"yunruu"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":30,"author":{"gitId":"yunruu"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":31,"author":{"gitId":"yunruu"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":32,"author":{"gitId":"yunruu"},"content":"                \u003cLabel fx:id\u003d\"name\" prefWidth\u003d\"400.0\" styleClass\u003d\"side-panel-cell-big-label\" text\u003d\"\\$first\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"yunruu"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":34,"author":{"gitId":"yunruu"},"content":"                        \u003cInsets bottom\u003d\"5.0\" right\u003d\"10.0\" /\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":35,"author":{"gitId":"yunruu"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":36,"author":{"gitId":"yunruu"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":37,"author":{"gitId":"yunruu"},"content":"            \u003cFlowPane fx:id\u003d\"tags\" alignment\u003d\"TOP_RIGHT\" columnHalignment\u003d\"RIGHT\" HBox.hgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":38,"author":{"gitId":"yunruu"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":39,"author":{"gitId":"yunruu"},"content":"            \u003cHBox prefWidth\u003d\"130.0\"\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":40,"author":{"gitId":"yunruu"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":41,"author":{"gitId":"yunruu"},"content":"               \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\"\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":42,"author":{"gitId":"yunruu"},"content":"                  \u003cHBox.margin\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":43,"author":{"gitId":"yunruu"},"content":"                     \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":44,"author":{"gitId":"yunruu"},"content":"                  \u003c/HBox.margin\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":45,"author":{"gitId":"yunruu"},"content":"                  \u003copaqueInsets\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":46,"author":{"gitId":"yunruu"},"content":"                     \u003cInsets /\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":47,"author":{"gitId":"yunruu"},"content":"                  \u003c/opaqueInsets\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":48,"author":{"gitId":"yunruu"},"content":"                  \u003cpadding\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":49,"author":{"gitId":"yunruu"},"content":"                     \u003cInsets left\u003d\"25.0\" /\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":50,"author":{"gitId":"yunruu"},"content":"                  \u003c/padding\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":51,"author":{"gitId":"yunruu"},"content":"                   \u003cgraphic\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":52,"author":{"gitId":"yunruu"},"content":"                       \u003cImageView fitHeight\u003d\"9.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":53,"author":{"gitId":"yunruu"},"content":"                           \u003cimage\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":54,"author":{"gitId":"yunruu"},"content":"                               \u003cImage url\u003d\"@/images/phone_icon.png\" /\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":55,"author":{"gitId":"yunruu"},"content":"                           \u003c/image\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":56,"author":{"gitId":"yunruu"},"content":"                       \u003c/ImageView\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":57,"author":{"gitId":"yunruu"},"content":"                   \u003c/graphic\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":58,"author":{"gitId":"yunruu"},"content":"               \u003c/Label\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":59,"author":{"gitId":"yunruu"},"content":"               \u003cLabel style\u003d\"-fx-background-color: transparent;\"\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":60,"author":{"gitId":"yunruu"},"content":"                   \u003cgraphic\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":61,"author":{"gitId":"yunruu"},"content":"                       \u003cImageView fitHeight\u003d\"9.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":62,"author":{"gitId":"yunruu"},"content":"                           \u003cimage\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":63,"author":{"gitId":"yunruu"},"content":"                               \u003cImage url\u003d\"@/images/email_icon.png\" /\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":64,"author":{"gitId":"yunruu"},"content":"                           \u003c/image\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":65,"author":{"gitId":"yunruu"},"content":"                       \u003c/ImageView\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":66,"author":{"gitId":"yunruu"},"content":"                   \u003c/graphic\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":67,"author":{"gitId":"yunruu"},"content":"                  \u003cpadding\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":68,"author":{"gitId":"yunruu"},"content":"                     \u003cInsets left\u003d\"3.0\" right\u003d\"3.0\" /\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":69,"author":{"gitId":"yunruu"},"content":"                  \u003c/padding\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":70,"author":{"gitId":"yunruu"},"content":"               \u003c/Label\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":71,"author":{"gitId":"yunruu"},"content":"               \u003cLabel fx:id\u003d\"email\" layoutX\u003d\"10.0\" layoutY\u003d\"10.0\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\"\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":72,"author":{"gitId":"yunruu"},"content":"                  \u003cHBox.margin\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":73,"author":{"gitId":"yunruu"},"content":"                     \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":74,"author":{"gitId":"yunruu"},"content":"                  \u003c/HBox.margin\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":75,"author":{"gitId":"yunruu"},"content":"               \u003c/Label\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":76,"author":{"gitId":"yunruu"},"content":"            \u003c/children\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":77,"author":{"gitId":"yunruu"},"content":"            \u003copaqueInsets\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":78,"author":{"gitId":"yunruu"},"content":"               \u003cInsets /\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":79,"author":{"gitId":"yunruu"},"content":"            \u003c/opaqueInsets\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":80,"author":{"gitId":"yunruu"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":81,"author":{"gitId":"yunruu"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":82,"author":{"gitId":"yunruu"},"content":"        \u003crowConstraints\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":83,"author":{"gitId":"yunruu"},"content":"            \u003cRowConstraints /\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":84,"author":{"gitId":"yunruu"},"content":"        \u003c/rowConstraints\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":85,"author":{"gitId":"yunruu"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":86,"author":{"gitId":"yunruu"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2022-10-24"}],"authorContributionMap":{"yunruu":86}},{"path":"src/main/resources/view/TaskPersonListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yunruu"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":2,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":3,"author":{"gitId":"yunruu"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":4,"author":{"gitId":"yunruu"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":5,"author":{"gitId":"yunruu"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":6,"author":{"gitId":"yunruu"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":7,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":8,"author":{"gitId":"yunruu"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" styleClass\u003d\"task-side-panel\"\u003e","lastModifiedDate":"2022-11-03"},{"lineNumber":9,"author":{"gitId":"jasonqiu212"},"content":"    \u003cLabel fx:id\u003d\"heading\" styleClass\u003d\"sub_heading\" text\u003d\"CONTACTS\"\u003e","lastModifiedDate":"2022-11-06"},{"lineNumber":10,"author":{"gitId":"yunruu"},"content":"        \u003cVBox.margin\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":11,"author":{"gitId":"yunruu"},"content":"            \u003cInsets bottom\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":12,"author":{"gitId":"yunruu"},"content":"        \u003c/VBox.margin\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":13,"author":{"gitId":"yunruu"},"content":"    \u003c/Label\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":14,"author":{"gitId":"yunruu"},"content":"    \u003cListView fx:id\u003d\"taskPersonListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":15,"author":{"gitId":"yunruu"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2022-10-24"}],"authorContributionMap":{"jasonqiu212":1,"yunruu":14}},{"path":"src/test/java/swift/AppParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AppParametersTest {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final ParametersStub parametersStub \u003d new ParametersStub();","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final AppParameters expected \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void parse_validConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        expected.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void parse_nullConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", null);","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void parse_invalidConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"a\\0\");","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        expected.setConfigPath(null);","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static class ParametersStub extends Application.Parameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        private Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getRaw() {","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getUnnamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        public Map\u003cString, String\u003e getNamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Collections.unmodifiableMap(namedParameters);","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"peppapighs":1,"-":57}},{"path":"src/test/java/swift/commons/core/ConfigTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.commons.core;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class ConfigTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void toString_defaultObject_stringReturned() {","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        String defaultConfigAsString \u003d \"Current log level : INFO\\n\"","lastModifiedDate":"2018-12-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"                + \"Preference file Location : preferences.json\";","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertEquals(defaultConfigAsString, new Config().toString());","lastModifiedDate":"2016-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2016-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNotNull(defaultConfig);","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(defaultConfig.equals(defaultConfig));","lastModifiedDate":"2016-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"peppapighs":1,"-":26}},{"path":"src/test/java/swift/commons/core/VersionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.commons.core;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"peppapighs"},"content":"import static swift.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class VersionTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void versionParsing_acceptableVersionString_parsedVersionCorrectly() {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V0.0.0ea\", 0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V3.10.2\", 3, 10, 2, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V100.100.100ea\", 100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void versionParsing_wrongVersionString_throwIllegalArgumentException() {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Version.fromString(\"This is not a version string\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void versionConstructor_correctParameter_valueAsExpected() {","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(19, 10, 20, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(19, version.getMajor());","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(10, version.getMinor());","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(20, version.getPatch());","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(true, version.isEarlyAccess());","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // boundary at 0","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(\"V0.0.0ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // normal values","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        version \u003d new Version(4, 10, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(\"V4.10.5\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // big numbers","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(\"V100.100.100ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_compareToIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2017-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2017-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Tests equality","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        one \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        another \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Tests different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Tests different minor","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 5, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Tests different major","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Tests high major vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Tests high patch vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // Tests same major minor different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Tests early access vs not early access on same version number","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // Tests early access lower version vs not early access higher version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Tests early access higher version vs not early access lower version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_hashCodeIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(100100100, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        version \u003d new Version(10, 10, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(1010010010, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_equalIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        one \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        another \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void verifyVersionParsedCorrectly(String versionString,","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertEquals(new Version(major, minor, patch, isEarlyAccess), Version.fromString(versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"peppapighs":2,"-":133}},{"path":"src/test/java/swift/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.commons.core.index;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"peppapighs"},"content":"import static swift.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        final Index fifthPersonIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(fifthPersonIndex));","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(null));","lastModifiedDate":"2017-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(5.0f));","lastModifiedDate":"2017-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2017-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"peppapighs":2,"-":58}},{"path":"src/test/java/swift/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.commons.util;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"peppapighs"},"content":"import static swift.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertNotNull(AppUtil.getImage(\"/images/address_book_32.png\"));","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"peppapighs":2,"-":34}},{"path":"src/test/java/swift/commons/util/CollectionUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.commons.util;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"peppapighs"},"content":"import static swift.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-01"},{"lineNumber":6,"author":{"gitId":"peppapighs"},"content":"import static swift.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CollectionUtilTest {","lastModifiedDate":"2016-12-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void requireAllNonNullVarargs() {","lastModifiedDate":"2017-05-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // no arguments","lastModifiedDate":"2017-01-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown();","lastModifiedDate":"2017-05-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // any non-empty argument list","lastModifiedDate":"2017-01-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"\");","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // argument lists with just one null at the beginning","lastModifiedDate":"2017-01-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, \"\", new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // argument lists with nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), null, null, \"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", null, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // argument lists with one null as the last argument","lastModifiedDate":"2017-01-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object[]) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // confirms nulls inside lists in the argument list are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(containingNull, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void requireAllNonNullCollection() {","lastModifiedDate":"2017-05-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // lists containing nulls in the front","lastModifiedDate":"2017-01-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList((Object) null));","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(null, new Object(), \"\"));","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // lists containing nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, \"eggs\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // lists containing nulls at the end","lastModifiedDate":"2017-01-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Collection\u003cObject\u003e) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // empty list","lastModifiedDate":"2017-01-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Collections.emptyList());","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // list with all non-null elements","lastModifiedDate":"2017-01-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object(), \"ham\", Integer.valueOf(1)));","lastModifiedDate":"2018-04-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // confirms nulls inside nested lists are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(containingNull, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void isAnyNonNull() {","lastModifiedDate":"2017-06-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull());","lastModifiedDate":"2017-06-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object[]) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object()));","lastModifiedDate":"2017-06-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object(), null));","lastModifiedDate":"2017-06-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Object...)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * if {@code objects} or any element of {@code objects} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(objects));","lastModifiedDate":"2019-03-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Collection\u003c?\u003e)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * if {@code collection} or any element of {@code collection} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(collection));","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        requireAllNonNull(objects);","lastModifiedDate":"2017-05-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireAllNonNull(collection);","lastModifiedDate":"2017-05-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-22"}],"authorContributionMap":{"peppapighs":3,"-":105}},{"path":"src/test/java/swift/commons/util/ConfigUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.commons.util;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"peppapighs"},"content":"import static swift.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":16,"author":{"gitId":"peppapighs"},"content":"import swift.commons.core.Config;","lastModifiedDate":"2022-10-01"},{"lineNumber":17,"author":{"gitId":"peppapighs"},"content":"import swift.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ConfigUtilTest {","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ConfigUtilTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path tempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void read_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e read(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(read(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e read(\"NotJsonFormatConfig.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void read_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"TypicalConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void read_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"EmptyConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new Config(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void read_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"ExtraValuesConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private Config getTypicalConfig() {","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        config.setLogLevel(Level.INFO);","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        config.setUserPrefsFilePath(Paths.get(\"preferences.json\"));","lastModifiedDate":"2018-04-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return config;","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private Optional\u003cConfig\u003e read(String configFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return ConfigUtil.readConfig(configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void save_nullConfig_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void save_nullFile_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(new Config(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void saveConfig_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Config original \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d tempDir.resolve(\"TempConfig.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Config readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        original.setLogLevel(Level.FINE);","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void save(Config config, String configFileInTestDataFolder) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(config, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String configFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return configFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                                  ? TEST_DATA_FOLDER.resolve(configFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                                  : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"peppapighs":4,"-":112}},{"path":"src/test/java/swift/commons/util/FileUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.commons.util;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"peppapighs"},"content":"import static swift.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class FileUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void isValidPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        // valid path","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertTrue(FileUtil.isValidPath(\"valid/file/path\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        // invalid path","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertFalse(FileUtil.isValidPath(\"a\\0\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // null path -\u003e throws NullPointerException","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e FileUtil.isValidPath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"peppapighs":2,"-":21}},{"path":"src/test/java/swift/commons/util/JsonUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.commons.util;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"peppapighs"},"content":"import swift.testutil.SerializableTestClass;","lastModifiedDate":"2022-10-01"},{"lineNumber":11,"author":{"gitId":"peppapighs"},"content":"import swift.testutil.TestUtil;","lastModifiedDate":"2022-10-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Tests JSON Read and Write","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path SERIALIZATION_FILE \u003d TestUtil.getFilePathInSandboxFolder(\"serialize.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void serializeObjectToJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d new SerializableTestClass();","lastModifiedDate":"2016-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        serializableTestClass.setTestValues();","lastModifiedDate":"2016-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonUtil.serializeObjectToJsonFile(SERIALIZATION_FILE, serializableTestClass);","lastModifiedDate":"2016-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(FileUtil.readFromFile(SERIALIZATION_FILE), SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void deserializeObjectFromJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(SERIALIZATION_FILE, SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d JsonUtil","lastModifiedDate":"2016-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                .deserializeObjectFromJsonFile(SERIALIZATION_FILE, SerializableTestClass.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getName(), SerializableTestClass.getNameTestValue());","lastModifiedDate":"2016-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getListOfLocalDateTimes(), SerializableTestClass.getListTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getMapOfIntegerToString(), SerializableTestClass.getHashMapTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_readJsonStringToObjectInstance_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_writeThenReadObjectToJson_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"peppapighs":3,"-":42}},{"path":"src/test/java/swift/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.commons.util;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"peppapighs"},"content":"import static swift.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"peppapighs":2,"-":141}},{"path":"src/test/java/swift/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.logic;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"peppapighs"},"content":"import static swift.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2022-10-01"},{"lineNumber":5,"author":{"gitId":"peppapighs"},"content":"import static swift.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2022-10-01"},{"lineNumber":6,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2022-10-01"},{"lineNumber":7,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2022-10-01"},{"lineNumber":8,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-10-01"},{"lineNumber":9,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2022-10-01"},{"lineNumber":10,"author":{"gitId":"peppapighs"},"content":"import static swift.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-01"},{"lineNumber":11,"author":{"gitId":"peppapighs"},"content":"import static swift.testutil.TypicalPersons.AMY;","lastModifiedDate":"2022-10-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":20,"author":{"gitId":"ShenyiCui"},"content":"import swift.logic.commands.AddContactCommand;","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"peppapighs"},"content":"import swift.logic.commands.CommandResult;","lastModifiedDate":"2022-10-01"},{"lineNumber":22,"author":{"gitId":"peppapighs"},"content":"import swift.logic.commands.ListContactCommand;","lastModifiedDate":"2022-10-08"},{"lineNumber":23,"author":{"gitId":"peppapighs"},"content":"import swift.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-01"},{"lineNumber":24,"author":{"gitId":"peppapighs"},"content":"import swift.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-01"},{"lineNumber":25,"author":{"gitId":"peppapighs"},"content":"import swift.model.Model;","lastModifiedDate":"2022-10-01"},{"lineNumber":26,"author":{"gitId":"peppapighs"},"content":"import swift.model.ModelManager;","lastModifiedDate":"2022-10-01"},{"lineNumber":27,"author":{"gitId":"peppapighs"},"content":"import swift.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-10-01"},{"lineNumber":28,"author":{"gitId":"peppapighs"},"content":"import swift.model.UserPrefs;","lastModifiedDate":"2022-10-01"},{"lineNumber":29,"author":{"gitId":"peppapighs"},"content":"import swift.model.person.Person;","lastModifiedDate":"2022-10-01"},{"lineNumber":30,"author":{"gitId":"peppapighs"},"content":"import swift.storage.JsonAddressBookStorage;","lastModifiedDate":"2022-10-01"},{"lineNumber":31,"author":{"gitId":"peppapighs"},"content":"import swift.storage.JsonUserPrefsStorage;","lastModifiedDate":"2022-10-01"},{"lineNumber":32,"author":{"gitId":"peppapighs"},"content":"import swift.storage.StorageManager;","lastModifiedDate":"2022-10-01"},{"lineNumber":33,"author":{"gitId":"peppapighs"},"content":"import swift.testutil.PersonBuilder;","lastModifiedDate":"2022-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"jasonqiu212"},"content":"        String deleteCommand \u003d \"delete_contact 9\";","lastModifiedDate":"2022-10-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"peppapighs"},"content":"        String listCommand \u003d ListContactCommand.COMMAND_WORD;","lastModifiedDate":"2022-10-08"},{"lineNumber":68,"author":{"gitId":"peppapighs"},"content":"        assertCommandSuccess(listCommand, ListContactCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2022-10-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"ShenyiCui"},"content":"        String addCommand \u003d AddContactCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2022-10-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"ShenyiCui":2,"jasonqiu212":1,"peppapighs":24,"-":135}},{"path":"src/test/java/swift/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.logic.commands;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-01"},{"lineNumber":4,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-01"},{"lineNumber":5,"author":{"gitId":"peppapighs"},"content":"import static swift.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-10-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"peppapighs"},"content":"import swift.model.Model;","lastModifiedDate":"2022-10-01"},{"lineNumber":11,"author":{"gitId":"peppapighs"},"content":"import swift.model.ModelManager;","lastModifiedDate":"2022-10-01"},{"lineNumber":12,"author":{"gitId":"peppapighs"},"content":"import swift.model.UserPrefs;","lastModifiedDate":"2022-10-01"},{"lineNumber":13,"author":{"gitId":"peppapighs"},"content":"import swift.model.person.Person;","lastModifiedDate":"2022-10-01"},{"lineNumber":14,"author":{"gitId":"peppapighs"},"content":"import swift.testutil.PersonBuilder;","lastModifiedDate":"2022-10-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"yunruu"},"content":"        String expectedMessage \u003d String.format(AddContactCommand.MESSAGE_SUCCESS, validPerson);","lastModifiedDate":"2022-10-26"},{"lineNumber":36,"author":{"gitId":"yunruu"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage, CommandType.CONTACTS);","lastModifiedDate":"2022-10-27"},{"lineNumber":37,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":38,"author":{"gitId":"ShenyiCui"},"content":"        assertCommandSuccess(new AddContactCommand(validPerson), model,","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"yunruu"},"content":"                expectedCommandResult, expectedModel);","lastModifiedDate":"2022-10-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"ShenyiCui"},"content":"        assertCommandFailure(new AddContactCommand(personInList), model, AddContactCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2022-10-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"ShenyiCui":2,"peppapighs":9,"-":33,"yunruu":4}},{"path":"src/test/java/swift/logic/commands/AddContactCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.logic.commands;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"peppapighs"},"content":"import static swift.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"peppapighs"},"content":"import swift.commons.core.GuiSettings;","lastModifiedDate":"2022-10-01"},{"lineNumber":18,"author":{"gitId":"peppapighs"},"content":"import swift.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-01"},{"lineNumber":19,"author":{"gitId":"peppapighs"},"content":"import swift.model.AddressBook;","lastModifiedDate":"2022-10-01"},{"lineNumber":20,"author":{"gitId":"peppapighs"},"content":"import swift.model.Model;","lastModifiedDate":"2022-10-01"},{"lineNumber":21,"author":{"gitId":"peppapighs"},"content":"import swift.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-10-01"},{"lineNumber":22,"author":{"gitId":"peppapighs"},"content":"import swift.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-01"},{"lineNumber":23,"author":{"gitId":"peppapighs"},"content":"import swift.model.bridge.PersonTaskBridge;","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"peppapighs"},"content":"import swift.model.person.Person;","lastModifiedDate":"2022-10-01"},{"lineNumber":25,"author":{"gitId":"peppapighs"},"content":"import swift.model.task.Task;","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"peppapighs"},"content":"import swift.testutil.PersonBuilder;","lastModifiedDate":"2022-10-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"jasonqiu212"},"content":"public class AddContactCommandTest {","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":32,"author":{"gitId":"ShenyiCui"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddContactCommand(null));","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"ShenyiCui"},"content":"        CommandResult commandResult \u003d new AddContactCommand(validPerson).execute(modelStub);","lastModifiedDate":"2022-10-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"ShenyiCui"},"content":"        assertEquals(String.format(AddContactCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2022-10-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"ShenyiCui"},"content":"        AddContactCommand addCommand \u003d new AddContactCommand(validPerson);","lastModifiedDate":"2022-10-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":52,"author":{"gitId":"ShenyiCui"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2022-10-06"},{"lineNumber":53,"author":{"gitId":"ShenyiCui"},"content":"                AddContactCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2022-10-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"ShenyiCui"},"content":"        AddContactCommand addAliceCommand \u003d new AddContactCommand(alice);","lastModifiedDate":"2022-10-06"},{"lineNumber":61,"author":{"gitId":"ShenyiCui"},"content":"        AddContactCommand addBobCommand \u003d new AddContactCommand(bob);","lastModifiedDate":"2022-10-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"ShenyiCui"},"content":"        AddContactCommand addAliceCommandCopy \u003d new AddContactCommand(alice);","lastModifiedDate":"2022-10-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":119,"author":{"gitId":"peppapighs"},"content":"        @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":120,"author":{"gitId":"peppapighs"},"content":"        public void addTask(Task task) {","lastModifiedDate":"2022-10-05"},{"lineNumber":121,"author":{"gitId":"peppapighs"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-05"},{"lineNumber":122,"author":{"gitId":"peppapighs"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":123,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":154,"author":{"gitId":"yunruu"},"content":"        @Override","lastModifiedDate":"2022-10-26"},{"lineNumber":155,"author":{"gitId":"yunruu"},"content":"        public ObservableList\u003cPerson\u003e getUnfilteredPersonList() {","lastModifiedDate":"2022-10-26"},{"lineNumber":156,"author":{"gitId":"yunruu"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-26"},{"lineNumber":157,"author":{"gitId":"yunruu"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":158,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":163,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":164,"author":{"gitId":"ShenyiCui"},"content":"        @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":165,"author":{"gitId":"ShenyiCui"},"content":"        public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2022-10-10"},{"lineNumber":166,"author":{"gitId":"ShenyiCui"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-10"},{"lineNumber":167,"author":{"gitId":"ShenyiCui"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":168,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":169,"author":{"gitId":"ShenyiCui"},"content":"        @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":170,"author":{"gitId":"ShenyiCui"},"content":"        public void updateFilteredTaskList(Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2022-10-10"},{"lineNumber":171,"author":{"gitId":"ShenyiCui"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-10"},{"lineNumber":172,"author":{"gitId":"ShenyiCui"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":173,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":174,"author":{"gitId":"peppapighs"},"content":"        @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":175,"author":{"gitId":"peppapighs"},"content":"        public boolean hasTask(Task task) {","lastModifiedDate":"2022-10-05"},{"lineNumber":176,"author":{"gitId":"peppapighs"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-05"},{"lineNumber":177,"author":{"gitId":"peppapighs"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":178,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":179,"author":{"gitId":"peppapighs"},"content":"        @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":180,"author":{"gitId":"peppapighs"},"content":"        public void deleteTask(Task target) {","lastModifiedDate":"2022-10-05"},{"lineNumber":181,"author":{"gitId":"peppapighs"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-05"},{"lineNumber":182,"author":{"gitId":"peppapighs"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":183,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":184,"author":{"gitId":"peppapighs"},"content":"        @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":185,"author":{"gitId":"peppapighs"},"content":"        public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2022-10-05"},{"lineNumber":186,"author":{"gitId":"peppapighs"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-05"},{"lineNumber":187,"author":{"gitId":"peppapighs"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":188,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":189,"author":{"gitId":"peppapighs"},"content":"        @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":190,"author":{"gitId":"peppapighs"},"content":"        public boolean hasBridge(PersonTaskBridge bridge) {","lastModifiedDate":"2022-10-16"},{"lineNumber":191,"author":{"gitId":"peppapighs"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-16"},{"lineNumber":192,"author":{"gitId":"peppapighs"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":193,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":194,"author":{"gitId":"peppapighs"},"content":"        @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":195,"author":{"gitId":"peppapighs"},"content":"        public void addBridge(Person person, Task task) {","lastModifiedDate":"2022-10-16"},{"lineNumber":196,"author":{"gitId":"peppapighs"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-16"},{"lineNumber":197,"author":{"gitId":"peppapighs"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":198,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":199,"author":{"gitId":"peppapighs"},"content":"        @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":200,"author":{"gitId":"peppapighs"},"content":"        public void addBridge(PersonTaskBridge bridge) {","lastModifiedDate":"2022-10-16"},{"lineNumber":201,"author":{"gitId":"peppapighs"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-16"},{"lineNumber":202,"author":{"gitId":"peppapighs"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":203,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":204,"author":{"gitId":"ShenyiCui"},"content":"        @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":205,"author":{"gitId":"ShenyiCui"},"content":"        public void deleteBridge(PersonTaskBridge target) {","lastModifiedDate":"2022-10-27"},{"lineNumber":206,"author":{"gitId":"ShenyiCui"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-27"},{"lineNumber":207,"author":{"gitId":"ShenyiCui"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":208,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":209,"author":{"gitId":"ShenyiCui"},"content":"        @Override","lastModifiedDate":"2022-10-23"},{"lineNumber":210,"author":{"gitId":"ShenyiCui"},"content":"        public void updateFilteredBridgeList(Predicate\u003cPersonTaskBridge\u003e predicate) {","lastModifiedDate":"2022-10-23"},{"lineNumber":211,"author":{"gitId":"ShenyiCui"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-23"},{"lineNumber":212,"author":{"gitId":"ShenyiCui"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":213,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":214,"author":{"gitId":"ShenyiCui"},"content":"        @Override","lastModifiedDate":"2022-10-23"},{"lineNumber":215,"author":{"gitId":"ShenyiCui"},"content":"        public ObservableList\u003cPersonTaskBridge\u003e getFilteredBridgeList() {","lastModifiedDate":"2022-10-23"},{"lineNumber":216,"author":{"gitId":"ShenyiCui"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-23"},{"lineNumber":217,"author":{"gitId":"ShenyiCui"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":218,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":219,"author":{"gitId":"yunruu"},"content":"        @Override","lastModifiedDate":"2022-10-26"},{"lineNumber":220,"author":{"gitId":"yunruu"},"content":"        public ObservableList\u003cPersonTaskBridge\u003e getUnfilteredBridgeList() {","lastModifiedDate":"2022-10-26"},{"lineNumber":221,"author":{"gitId":"yunruu"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-26"},{"lineNumber":222,"author":{"gitId":"yunruu"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":226,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":227,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":232,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":233,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":238,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":239,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":244,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":245,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":252,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":258,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":263,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":267,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"jasonqiu212":1,"ShenyiCui":34,"peppapighs":47,"-":175,"yunruu":10}},{"path":"src/test/java/swift/logic/commands/AddTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.logic.commands;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"peppapighs"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"peppapighs"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"peppapighs"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"peppapighs"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"peppapighs"},"content":"import static swift.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"peppapighs"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"peppapighs"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"peppapighs"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"peppapighs"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"peppapighs"},"content":"import java.util.UUID;","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"peppapighs"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"peppapighs"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"peppapighs"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-22"},{"lineNumber":19,"author":{"gitId":"peppapighs"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"peppapighs"},"content":"import swift.commons.core.GuiSettings;","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"peppapighs"},"content":"import swift.commons.core.index.Index;","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"peppapighs"},"content":"import swift.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"peppapighs"},"content":"import swift.model.Model;","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"peppapighs"},"content":"import swift.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"peppapighs"},"content":"import swift.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"peppapighs"},"content":"import swift.model.bridge.PersonTaskBridge;","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"peppapighs"},"content":"import swift.model.person.Person;","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"peppapighs"},"content":"import swift.model.task.Task;","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"peppapighs"},"content":"import swift.testutil.PersonBuilder;","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"peppapighs"},"content":"import swift.testutil.TaskBuilder;","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"peppapighs"},"content":"public class AddTaskCommandTest {","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"peppapighs"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"peppapighs"},"content":"    public void constructor_nullTask_throwsNullPointerException() {","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"peppapighs"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddTaskCommand(null, null));","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"peppapighs"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":40,"author":{"gitId":"peppapighs"},"content":"    public void execute_taskAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2022-10-06"},{"lineNumber":41,"author":{"gitId":"peppapighs"},"content":"        ModelStubAcceptingTaskAdded modelStub \u003d new ModelStubAcceptingTaskAdded();","lastModifiedDate":"2022-10-06"},{"lineNumber":42,"author":{"gitId":"peppapighs"},"content":"        Task validTask \u003d new TaskBuilder().build();","lastModifiedDate":"2022-10-06"},{"lineNumber":43,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":44,"author":{"gitId":"peppapighs"},"content":"        CommandResult commandResult \u003d new AddTaskCommand(validTask, new HashSet\u003c\u003e(Arrays.asList(Index.fromOneBased(1))))","lastModifiedDate":"2022-10-16"},{"lineNumber":45,"author":{"gitId":"peppapighs"},"content":"                .execute(modelStub);","lastModifiedDate":"2022-10-16"},{"lineNumber":46,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":47,"author":{"gitId":"peppapighs"},"content":"        assertEquals(String.format(AddTaskCommand.MESSAGE_SUCCESS, validTask), commandResult.getFeedbackToUser());","lastModifiedDate":"2022-10-06"},{"lineNumber":48,"author":{"gitId":"peppapighs"},"content":"        assertEquals(Arrays.asList(validTask), modelStub.tasksAdded);","lastModifiedDate":"2022-10-06"},{"lineNumber":49,"author":{"gitId":"peppapighs"},"content":"        assertEquals(Arrays.asList(new PersonTaskBridge(","lastModifiedDate":"2022-10-16"},{"lineNumber":50,"author":{"gitId":"ShenyiCui"},"content":"                UUID.fromString(PersonBuilder.DEFAULT_UUID),","lastModifiedDate":"2022-10-23"},{"lineNumber":51,"author":{"gitId":"peppapighs"},"content":"                modelStub.tasksAdded.get(0).getId())), modelStub.bridgesAdded);","lastModifiedDate":"2022-10-16"},{"lineNumber":52,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":53,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":54,"author":{"gitId":"peppapighs"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":55,"author":{"gitId":"peppapighs"},"content":"    public void execute_duplicateTask_throwsCommandException() {","lastModifiedDate":"2022-10-06"},{"lineNumber":56,"author":{"gitId":"peppapighs"},"content":"        Task validTask \u003d new TaskBuilder().build();","lastModifiedDate":"2022-10-06"},{"lineNumber":57,"author":{"gitId":"peppapighs"},"content":"        AddTaskCommand addCommand \u003d new AddTaskCommand(validTask, new HashSet\u003c\u003e());","lastModifiedDate":"2022-10-16"},{"lineNumber":58,"author":{"gitId":"peppapighs"},"content":"        ModelStub modelStub \u003d new ModelStubWithTask(validTask);","lastModifiedDate":"2022-10-06"},{"lineNumber":59,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":60,"author":{"gitId":"peppapighs"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2022-10-06"},{"lineNumber":61,"author":{"gitId":"peppapighs"},"content":"                AddTaskCommand.MESSAGE_DUPLICATE_TASK, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2022-10-06"},{"lineNumber":62,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":63,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":64,"author":{"gitId":"peppapighs"},"content":"    @Test","lastModifiedDate":"2022-11-05"},{"lineNumber":65,"author":{"gitId":"peppapighs"},"content":"    public void execute_invalidContactIndex_throwsCommandException() {","lastModifiedDate":"2022-11-05"},{"lineNumber":66,"author":{"gitId":"peppapighs"},"content":"        Task validTask \u003d new TaskBuilder().build();","lastModifiedDate":"2022-11-05"},{"lineNumber":67,"author":{"gitId":"peppapighs"},"content":"        AddTaskCommand addCommand \u003d new AddTaskCommand(validTask, new HashSet\u003c\u003e(Arrays.asList(Index.fromOneBased(2))));","lastModifiedDate":"2022-11-05"},{"lineNumber":68,"author":{"gitId":"peppapighs"},"content":"        ModelStubAcceptingTaskAdded modelStub \u003d new ModelStubAcceptingTaskAdded();","lastModifiedDate":"2022-11-05"},{"lineNumber":69,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":70,"author":{"gitId":"peppapighs"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2022-11-05"},{"lineNumber":71,"author":{"gitId":"peppapighs"},"content":"                AddTaskCommand.MESSAGE_INVALID_CONTACT_INDEX, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2022-11-05"},{"lineNumber":72,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-11-05"},{"lineNumber":73,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":74,"author":{"gitId":"peppapighs"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":75,"author":{"gitId":"peppapighs"},"content":"    public void equals() {","lastModifiedDate":"2022-10-06"},{"lineNumber":76,"author":{"gitId":"peppapighs"},"content":"        Task buyMilk \u003d new TaskBuilder().withTaskName(\"Buy Milk\").build();","lastModifiedDate":"2022-10-06"},{"lineNumber":77,"author":{"gitId":"peppapighs"},"content":"        Task cs2103t \u003d new TaskBuilder().withTaskName(\"CS2103T\").build();","lastModifiedDate":"2022-10-06"},{"lineNumber":78,"author":{"gitId":"peppapighs"},"content":"        AddTaskCommand addBuyMilkCommand \u003d new AddTaskCommand(buyMilk, new HashSet\u003c\u003e());","lastModifiedDate":"2022-10-16"},{"lineNumber":79,"author":{"gitId":"peppapighs"},"content":"        AddTaskCommand addCs2103tCommand \u003d new AddTaskCommand(cs2103t, new HashSet\u003c\u003e());","lastModifiedDate":"2022-10-16"},{"lineNumber":80,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":81,"author":{"gitId":"peppapighs"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-06"},{"lineNumber":82,"author":{"gitId":"peppapighs"},"content":"        assertTrue(addBuyMilkCommand.equals(addBuyMilkCommand));","lastModifiedDate":"2022-10-06"},{"lineNumber":83,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":84,"author":{"gitId":"peppapighs"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-06"},{"lineNumber":85,"author":{"gitId":"peppapighs"},"content":"        AddTaskCommand addBuyMilkCommandCopy \u003d new AddTaskCommand(buyMilk, new HashSet\u003c\u003e());","lastModifiedDate":"2022-10-16"},{"lineNumber":86,"author":{"gitId":"peppapighs"},"content":"        assertTrue(addBuyMilkCommand.equals(addBuyMilkCommandCopy));","lastModifiedDate":"2022-10-06"},{"lineNumber":87,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":88,"author":{"gitId":"peppapighs"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-06"},{"lineNumber":89,"author":{"gitId":"peppapighs"},"content":"        assertFalse(addBuyMilkCommand.equals(1));","lastModifiedDate":"2022-10-06"},{"lineNumber":90,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":91,"author":{"gitId":"peppapighs"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-06"},{"lineNumber":92,"author":{"gitId":"peppapighs"},"content":"        assertFalse(addBuyMilkCommand.equals(null));","lastModifiedDate":"2022-10-06"},{"lineNumber":93,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":94,"author":{"gitId":"peppapighs"},"content":"        // different task -\u003e returns false","lastModifiedDate":"2022-10-06"},{"lineNumber":95,"author":{"gitId":"peppapighs"},"content":"        assertFalse(addBuyMilkCommand.equals(addCs2103tCommand));","lastModifiedDate":"2022-10-06"},{"lineNumber":96,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":97,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":98,"author":{"gitId":"peppapighs"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":99,"author":{"gitId":"peppapighs"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2022-10-06"},{"lineNumber":100,"author":{"gitId":"peppapighs"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":101,"author":{"gitId":"peppapighs"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2022-10-06"},{"lineNumber":102,"author":{"gitId":"peppapighs"},"content":"        @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":103,"author":{"gitId":"peppapighs"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2022-10-06"},{"lineNumber":104,"author":{"gitId":"peppapighs"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-06"},{"lineNumber":105,"author":{"gitId":"peppapighs"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":106,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":107,"author":{"gitId":"peppapighs"},"content":"        @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":108,"author":{"gitId":"peppapighs"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2022-10-06"},{"lineNumber":109,"author":{"gitId":"peppapighs"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-06"},{"lineNumber":110,"author":{"gitId":"peppapighs"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":111,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":112,"author":{"gitId":"peppapighs"},"content":"        @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":113,"author":{"gitId":"peppapighs"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2022-10-06"},{"lineNumber":114,"author":{"gitId":"peppapighs"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-06"},{"lineNumber":115,"author":{"gitId":"peppapighs"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":116,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":117,"author":{"gitId":"peppapighs"},"content":"        @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":118,"author":{"gitId":"peppapighs"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2022-10-06"},{"lineNumber":119,"author":{"gitId":"peppapighs"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-06"},{"lineNumber":120,"author":{"gitId":"peppapighs"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":121,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":122,"author":{"gitId":"peppapighs"},"content":"        @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":123,"author":{"gitId":"peppapighs"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2022-10-06"},{"lineNumber":124,"author":{"gitId":"peppapighs"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-06"},{"lineNumber":125,"author":{"gitId":"peppapighs"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":126,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":127,"author":{"gitId":"peppapighs"},"content":"        @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":128,"author":{"gitId":"peppapighs"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2022-10-06"},{"lineNumber":129,"author":{"gitId":"peppapighs"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-06"},{"lineNumber":130,"author":{"gitId":"peppapighs"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":131,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":132,"author":{"gitId":"peppapighs"},"content":"        @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":133,"author":{"gitId":"peppapighs"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2022-10-06"},{"lineNumber":134,"author":{"gitId":"peppapighs"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-06"},{"lineNumber":135,"author":{"gitId":"peppapighs"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":136,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":137,"author":{"gitId":"peppapighs"},"content":"        @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":138,"author":{"gitId":"peppapighs"},"content":"        public void addTask(Task task) {","lastModifiedDate":"2022-10-06"},{"lineNumber":139,"author":{"gitId":"peppapighs"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-06"},{"lineNumber":140,"author":{"gitId":"peppapighs"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":141,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":142,"author":{"gitId":"peppapighs"},"content":"        @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":143,"author":{"gitId":"peppapighs"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2022-10-06"},{"lineNumber":144,"author":{"gitId":"peppapighs"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-06"},{"lineNumber":145,"author":{"gitId":"peppapighs"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":146,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":147,"author":{"gitId":"peppapighs"},"content":"        @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":148,"author":{"gitId":"peppapighs"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2022-10-06"},{"lineNumber":149,"author":{"gitId":"peppapighs"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-06"},{"lineNumber":150,"author":{"gitId":"peppapighs"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":151,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":152,"author":{"gitId":"peppapighs"},"content":"        @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":153,"author":{"gitId":"peppapighs"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2022-10-06"},{"lineNumber":154,"author":{"gitId":"peppapighs"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-06"},{"lineNumber":155,"author":{"gitId":"peppapighs"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":156,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":157,"author":{"gitId":"peppapighs"},"content":"        @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":158,"author":{"gitId":"peppapighs"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2022-10-06"},{"lineNumber":159,"author":{"gitId":"peppapighs"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-06"},{"lineNumber":160,"author":{"gitId":"peppapighs"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":161,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":162,"author":{"gitId":"peppapighs"},"content":"        @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":163,"author":{"gitId":"peppapighs"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2022-10-06"},{"lineNumber":164,"author":{"gitId":"peppapighs"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-06"},{"lineNumber":165,"author":{"gitId":"peppapighs"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":166,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":167,"author":{"gitId":"peppapighs"},"content":"        @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":168,"author":{"gitId":"peppapighs"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2022-10-06"},{"lineNumber":169,"author":{"gitId":"peppapighs"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-06"},{"lineNumber":170,"author":{"gitId":"peppapighs"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":171,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":172,"author":{"gitId":"yunruu"},"content":"        @Override","lastModifiedDate":"2022-10-26"},{"lineNumber":173,"author":{"gitId":"yunruu"},"content":"        public ObservableList\u003cPerson\u003e getUnfilteredPersonList() {","lastModifiedDate":"2022-10-26"},{"lineNumber":174,"author":{"gitId":"yunruu"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-26"},{"lineNumber":175,"author":{"gitId":"yunruu"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":176,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":177,"author":{"gitId":"peppapighs"},"content":"        @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":178,"author":{"gitId":"peppapighs"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2022-10-06"},{"lineNumber":179,"author":{"gitId":"peppapighs"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-06"},{"lineNumber":180,"author":{"gitId":"peppapighs"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":181,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":182,"author":{"gitId":"ShenyiCui"},"content":"        @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":183,"author":{"gitId":"ShenyiCui"},"content":"        public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2022-10-10"},{"lineNumber":184,"author":{"gitId":"ShenyiCui"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-10"},{"lineNumber":185,"author":{"gitId":"ShenyiCui"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":186,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":187,"author":{"gitId":"ShenyiCui"},"content":"        @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":188,"author":{"gitId":"ShenyiCui"},"content":"        public void updateFilteredTaskList(Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2022-10-10"},{"lineNumber":189,"author":{"gitId":"ShenyiCui"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-10"},{"lineNumber":190,"author":{"gitId":"ShenyiCui"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":191,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":192,"author":{"gitId":"peppapighs"},"content":"        @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":193,"author":{"gitId":"peppapighs"},"content":"        public boolean hasTask(Task task) {","lastModifiedDate":"2022-10-06"},{"lineNumber":194,"author":{"gitId":"peppapighs"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-06"},{"lineNumber":195,"author":{"gitId":"peppapighs"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":196,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":197,"author":{"gitId":"peppapighs"},"content":"        @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":198,"author":{"gitId":"peppapighs"},"content":"        public void deleteTask(Task target) {","lastModifiedDate":"2022-10-06"},{"lineNumber":199,"author":{"gitId":"peppapighs"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-06"},{"lineNumber":200,"author":{"gitId":"peppapighs"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":201,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":202,"author":{"gitId":"peppapighs"},"content":"        @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":203,"author":{"gitId":"peppapighs"},"content":"        public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2022-10-06"},{"lineNumber":204,"author":{"gitId":"peppapighs"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-06"},{"lineNumber":205,"author":{"gitId":"peppapighs"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":206,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":207,"author":{"gitId":"peppapighs"},"content":"        @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":208,"author":{"gitId":"peppapighs"},"content":"        public boolean hasBridge(PersonTaskBridge bridge) {","lastModifiedDate":"2022-10-16"},{"lineNumber":209,"author":{"gitId":"peppapighs"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-16"},{"lineNumber":210,"author":{"gitId":"peppapighs"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":211,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":212,"author":{"gitId":"peppapighs"},"content":"        @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":213,"author":{"gitId":"peppapighs"},"content":"        public void addBridge(Person person, Task task) {","lastModifiedDate":"2022-10-16"},{"lineNumber":214,"author":{"gitId":"peppapighs"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-16"},{"lineNumber":215,"author":{"gitId":"peppapighs"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":216,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":217,"author":{"gitId":"peppapighs"},"content":"        @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":218,"author":{"gitId":"peppapighs"},"content":"        public void addBridge(PersonTaskBridge bridge) {","lastModifiedDate":"2022-10-16"},{"lineNumber":219,"author":{"gitId":"peppapighs"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-16"},{"lineNumber":220,"author":{"gitId":"peppapighs"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":221,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":222,"author":{"gitId":"ShenyiCui"},"content":"        @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":223,"author":{"gitId":"ShenyiCui"},"content":"        public void deleteBridge(PersonTaskBridge bridge) {","lastModifiedDate":"2022-10-27"},{"lineNumber":224,"author":{"gitId":"ShenyiCui"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-27"},{"lineNumber":225,"author":{"gitId":"ShenyiCui"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":226,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":227,"author":{"gitId":"ShenyiCui"},"content":"        @Override","lastModifiedDate":"2022-10-23"},{"lineNumber":228,"author":{"gitId":"ShenyiCui"},"content":"        public void updateFilteredBridgeList(Predicate\u003cPersonTaskBridge\u003e predicate) {","lastModifiedDate":"2022-10-23"},{"lineNumber":229,"author":{"gitId":"ShenyiCui"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-23"},{"lineNumber":230,"author":{"gitId":"ShenyiCui"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":231,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":232,"author":{"gitId":"ShenyiCui"},"content":"        @Override","lastModifiedDate":"2022-10-23"},{"lineNumber":233,"author":{"gitId":"ShenyiCui"},"content":"        public ObservableList\u003cPersonTaskBridge\u003e getFilteredBridgeList() {","lastModifiedDate":"2022-10-23"},{"lineNumber":234,"author":{"gitId":"ShenyiCui"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-23"},{"lineNumber":235,"author":{"gitId":"ShenyiCui"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":236,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":237,"author":{"gitId":"yunruu"},"content":"        @Override","lastModifiedDate":"2022-10-26"},{"lineNumber":238,"author":{"gitId":"yunruu"},"content":"        public ObservableList\u003cPersonTaskBridge\u003e getUnfilteredBridgeList() {","lastModifiedDate":"2022-10-26"},{"lineNumber":239,"author":{"gitId":"yunruu"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-26"},{"lineNumber":240,"author":{"gitId":"yunruu"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":241,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":242,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":243,"author":{"gitId":"peppapighs"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":244,"author":{"gitId":"peppapighs"},"content":"     * A Model stub that contains a single task.","lastModifiedDate":"2022-10-06"},{"lineNumber":245,"author":{"gitId":"peppapighs"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":246,"author":{"gitId":"peppapighs"},"content":"    private class ModelStubWithTask extends ModelStub {","lastModifiedDate":"2022-10-06"},{"lineNumber":247,"author":{"gitId":"peppapighs"},"content":"        private final Task task;","lastModifiedDate":"2022-10-06"},{"lineNumber":248,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":249,"author":{"gitId":"peppapighs"},"content":"        ModelStubWithTask(Task task) {","lastModifiedDate":"2022-10-06"},{"lineNumber":250,"author":{"gitId":"peppapighs"},"content":"            requireNonNull(task);","lastModifiedDate":"2022-10-06"},{"lineNumber":251,"author":{"gitId":"peppapighs"},"content":"            this.task \u003d task;","lastModifiedDate":"2022-10-06"},{"lineNumber":252,"author":{"gitId":"peppapighs"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":253,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":254,"author":{"gitId":"peppapighs"},"content":"        @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":255,"author":{"gitId":"peppapighs"},"content":"        public boolean hasTask(Task task) {","lastModifiedDate":"2022-10-06"},{"lineNumber":256,"author":{"gitId":"peppapighs"},"content":"            requireNonNull(task);","lastModifiedDate":"2022-10-06"},{"lineNumber":257,"author":{"gitId":"peppapighs"},"content":"            return this.task.equals(task);","lastModifiedDate":"2022-10-06"},{"lineNumber":258,"author":{"gitId":"peppapighs"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":259,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":260,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":261,"author":{"gitId":"peppapighs"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":262,"author":{"gitId":"peppapighs"},"content":"     * A Model stub that always accept the task being added.","lastModifiedDate":"2022-10-06"},{"lineNumber":263,"author":{"gitId":"peppapighs"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":264,"author":{"gitId":"peppapighs"},"content":"    private class ModelStubAcceptingTaskAdded extends ModelStub {","lastModifiedDate":"2022-10-06"},{"lineNumber":265,"author":{"gitId":"peppapighs"},"content":"        final ArrayList\u003cTask\u003e tasksAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-06"},{"lineNumber":266,"author":{"gitId":"peppapighs"},"content":"        final ArrayList\u003cPersonTaskBridge\u003e bridgesAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-16"},{"lineNumber":267,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":268,"author":{"gitId":"peppapighs"},"content":"        @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":269,"author":{"gitId":"peppapighs"},"content":"        public boolean hasTask(Task task) {","lastModifiedDate":"2022-10-06"},{"lineNumber":270,"author":{"gitId":"peppapighs"},"content":"            requireNonNull(task);","lastModifiedDate":"2022-10-06"},{"lineNumber":271,"author":{"gitId":"peppapighs"},"content":"            return tasksAdded.stream().anyMatch(task::equals);","lastModifiedDate":"2022-10-06"},{"lineNumber":272,"author":{"gitId":"peppapighs"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":273,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":274,"author":{"gitId":"peppapighs"},"content":"        @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":275,"author":{"gitId":"peppapighs"},"content":"        public void addTask(Task task) {","lastModifiedDate":"2022-10-06"},{"lineNumber":276,"author":{"gitId":"peppapighs"},"content":"            requireNonNull(task);","lastModifiedDate":"2022-10-06"},{"lineNumber":277,"author":{"gitId":"peppapighs"},"content":"            tasksAdded.add(task);","lastModifiedDate":"2022-10-06"},{"lineNumber":278,"author":{"gitId":"peppapighs"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":279,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":280,"author":{"gitId":"peppapighs"},"content":"        @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":281,"author":{"gitId":"peppapighs"},"content":"        public void addBridge(Person person, Task task) {","lastModifiedDate":"2022-10-16"},{"lineNumber":282,"author":{"gitId":"peppapighs"},"content":"            requireNonNull(person);","lastModifiedDate":"2022-10-16"},{"lineNumber":283,"author":{"gitId":"peppapighs"},"content":"            requireNonNull(task);","lastModifiedDate":"2022-10-16"},{"lineNumber":284,"author":{"gitId":"peppapighs"},"content":"            bridgesAdded.add(new PersonTaskBridge(person.getId(), task.getId()));","lastModifiedDate":"2022-10-16"},{"lineNumber":285,"author":{"gitId":"peppapighs"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":286,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":287,"author":{"gitId":"peppapighs"},"content":"        @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":288,"author":{"gitId":"peppapighs"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2022-10-22"},{"lineNumber":289,"author":{"gitId":"peppapighs"},"content":"            return FXCollections.observableArrayList(new PersonBuilder().build());","lastModifiedDate":"2022-10-22"},{"lineNumber":290,"author":{"gitId":"peppapighs"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":291,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":292,"author":{"gitId":"peppapighs"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"ShenyiCui":26,"peppapighs":256,"yunruu":10}},{"path":"src/test/java/swift/logic/commands/AssignCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.logic.commands;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":3,"author":{"gitId":"peppapighs"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-26"},{"lineNumber":4,"author":{"gitId":"peppapighs"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"peppapighs"},"content":"import static swift.testutil.TypicalIntegratedAddressBook.getTypicalAddressBook;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"peppapighs"},"content":"import static swift.testutil.TypicalPersonIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"peppapighs"},"content":"import static swift.testutil.TypicalPersonIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"peppapighs"},"content":"import static swift.testutil.TypicalTaskIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"peppapighs"},"content":"import static swift.testutil.TypicalTaskIndexes.INDEX_SECOND_TASK;","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"peppapighs"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"peppapighs"},"content":"import swift.commons.core.Messages;","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"peppapighs"},"content":"import swift.commons.core.index.Index;","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"peppapighs"},"content":"import swift.model.Model;","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"peppapighs"},"content":"import swift.model.ModelManager;","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"peppapighs"},"content":"import swift.model.UserPrefs;","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"peppapighs"},"content":"import swift.model.person.Person;","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"peppapighs"},"content":"import swift.model.task.Task;","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"peppapighs"},"content":"/**","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"peppapighs"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"peppapighs"},"content":" * {@code AssignCommand}.","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"peppapighs"},"content":" */","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"peppapighs"},"content":"public class AssignCommandTest {","lastModifiedDate":"2022-10-26"},{"lineNumber":28,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"peppapighs"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":31,"author":{"gitId":"peppapighs"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":32,"author":{"gitId":"peppapighs"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2022-10-26"},{"lineNumber":33,"author":{"gitId":"peppapighs"},"content":"        AssignCommand assignCommand \u003d new AssignCommand(INDEX_SECOND_PERSON, INDEX_SECOND_TASK);","lastModifiedDate":"2022-10-26"},{"lineNumber":34,"author":{"gitId":"peppapighs"},"content":"        Person expectedPerson \u003d model.getFilteredPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2022-10-26"},{"lineNumber":35,"author":{"gitId":"peppapighs"},"content":"        Task expectedTask \u003d model.getFilteredTaskList().get(INDEX_SECOND_TASK.getZeroBased());","lastModifiedDate":"2022-10-26"},{"lineNumber":36,"author":{"gitId":"peppapighs"},"content":"        String expectedMessage \u003d String.format(AssignCommand.MESSAGE_ASSIGN_SUCCESS, expectedTask, expectedPerson);","lastModifiedDate":"2022-10-26"},{"lineNumber":37,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":38,"author":{"gitId":"peppapighs"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-26"},{"lineNumber":39,"author":{"gitId":"peppapighs"},"content":"        expectedModel.addBridge(expectedPerson, expectedTask);","lastModifiedDate":"2022-10-26"},{"lineNumber":40,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":41,"author":{"gitId":"peppapighs"},"content":"        assertCommandSuccess(assignCommand, model, expectedMessage, CommandType.ASSIGN, expectedModel);","lastModifiedDate":"2022-10-27"},{"lineNumber":42,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":43,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":44,"author":{"gitId":"peppapighs"},"content":"    @Test","lastModifiedDate":"2022-10-27"},{"lineNumber":45,"author":{"gitId":"peppapighs"},"content":"    public void execute_duplicateBridge_throwsCommandException() {","lastModifiedDate":"2022-10-27"},{"lineNumber":46,"author":{"gitId":"peppapighs"},"content":"        AssignCommand assignCommand \u003d new AssignCommand(INDEX_SECOND_PERSON, INDEX_SECOND_TASK);","lastModifiedDate":"2022-10-27"},{"lineNumber":47,"author":{"gitId":"peppapighs"},"content":"        Person expectedPerson \u003d model.getFilteredPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2022-10-27"},{"lineNumber":48,"author":{"gitId":"peppapighs"},"content":"        Task expectedTask \u003d model.getFilteredTaskList().get(INDEX_SECOND_TASK.getZeroBased());","lastModifiedDate":"2022-10-27"},{"lineNumber":49,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":50,"author":{"gitId":"peppapighs"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-27"},{"lineNumber":51,"author":{"gitId":"peppapighs"},"content":"        expectedModel.addBridge(expectedPerson, expectedTask);","lastModifiedDate":"2022-10-27"},{"lineNumber":52,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":53,"author":{"gitId":"peppapighs"},"content":"        assertCommandFailure(assignCommand, expectedModel, AssignCommand.MESSAGE_DUPLICATE_BRIDGE);","lastModifiedDate":"2022-10-27"},{"lineNumber":54,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":55,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":56,"author":{"gitId":"peppapighs"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":57,"author":{"gitId":"peppapighs"},"content":"    public void execute_invalidPersonIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2022-10-26"},{"lineNumber":58,"author":{"gitId":"peppapighs"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2022-10-26"},{"lineNumber":59,"author":{"gitId":"peppapighs"},"content":"        AssignCommand assignCommand \u003d new AssignCommand(outOfBoundIndex, INDEX_FIRST_TASK);","lastModifiedDate":"2022-10-26"},{"lineNumber":60,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":61,"author":{"gitId":"peppapighs"},"content":"        assertCommandFailure(assignCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-26"},{"lineNumber":62,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":63,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":64,"author":{"gitId":"peppapighs"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":65,"author":{"gitId":"peppapighs"},"content":"    public void execute_invalidTaskIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2022-10-26"},{"lineNumber":66,"author":{"gitId":"peppapighs"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredTaskList().size() + 1);","lastModifiedDate":"2022-10-26"},{"lineNumber":67,"author":{"gitId":"peppapighs"},"content":"        AssignCommand assignCommand \u003d new AssignCommand(INDEX_FIRST_PERSON, outOfBoundIndex);","lastModifiedDate":"2022-10-26"},{"lineNumber":68,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":69,"author":{"gitId":"peppapighs"},"content":"        assertCommandFailure(assignCommand, model, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-26"},{"lineNumber":70,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":71,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":72,"author":{"gitId":"peppapighs"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":73,"author":{"gitId":"peppapighs"},"content":"    public void equals() {","lastModifiedDate":"2022-10-26"},{"lineNumber":74,"author":{"gitId":"peppapighs"},"content":"        AssignCommand assignCommand1 \u003d new AssignCommand(INDEX_FIRST_PERSON, INDEX_SECOND_TASK);","lastModifiedDate":"2022-10-26"},{"lineNumber":75,"author":{"gitId":"peppapighs"},"content":"        AssignCommand assignCommand2 \u003d new AssignCommand(INDEX_SECOND_PERSON, INDEX_FIRST_TASK);","lastModifiedDate":"2022-10-26"},{"lineNumber":76,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":77,"author":{"gitId":"peppapighs"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-26"},{"lineNumber":78,"author":{"gitId":"peppapighs"},"content":"        assertTrue(assignCommand1.equals(assignCommand1));","lastModifiedDate":"2022-10-26"},{"lineNumber":79,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":80,"author":{"gitId":"peppapighs"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-26"},{"lineNumber":81,"author":{"gitId":"peppapighs"},"content":"        AssignCommand assignCommand3 \u003d new AssignCommand(INDEX_FIRST_PERSON, INDEX_SECOND_TASK);","lastModifiedDate":"2022-10-26"},{"lineNumber":82,"author":{"gitId":"peppapighs"},"content":"        assertTrue(assignCommand1.equals(assignCommand3));","lastModifiedDate":"2022-10-26"},{"lineNumber":83,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":84,"author":{"gitId":"peppapighs"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-26"},{"lineNumber":85,"author":{"gitId":"peppapighs"},"content":"        assertFalse(assignCommand1.equals(1));","lastModifiedDate":"2022-10-26"},{"lineNumber":86,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":87,"author":{"gitId":"peppapighs"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-26"},{"lineNumber":88,"author":{"gitId":"peppapighs"},"content":"        assertFalse(assignCommand1.equals(null));","lastModifiedDate":"2022-10-26"},{"lineNumber":89,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":90,"author":{"gitId":"peppapighs"},"content":"        // different task -\u003e returns false","lastModifiedDate":"2022-10-26"},{"lineNumber":91,"author":{"gitId":"peppapighs"},"content":"        assertFalse(assignCommand1.equals(assignCommand2));","lastModifiedDate":"2022-10-26"},{"lineNumber":92,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":93,"author":{"gitId":"peppapighs"},"content":"}","lastModifiedDate":"2022-10-26"}],"authorContributionMap":{"peppapighs":93}},{"path":"src/test/java/swift/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.logic.commands;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-01"},{"lineNumber":4,"author":{"gitId":"peppapighs"},"content":"import static swift.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-10-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"peppapighs"},"content":"import swift.model.AddressBook;","lastModifiedDate":"2022-10-01"},{"lineNumber":9,"author":{"gitId":"peppapighs"},"content":"import swift.model.Model;","lastModifiedDate":"2022-10-01"},{"lineNumber":10,"author":{"gitId":"peppapighs"},"content":"import swift.model.ModelManager;","lastModifiedDate":"2022-10-01"},{"lineNumber":11,"author":{"gitId":"peppapighs"},"content":"import swift.model.UserPrefs;","lastModifiedDate":"2022-10-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"yunruu"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS,","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"yunruu"},"content":"                CommandType.CLEAR, expectedModel);","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"yunruu"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS,","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"yunruu"},"content":"                CommandType.CLEAR, expectedModel);","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"peppapighs":7,"-":23,"yunruu":4}},{"path":"src/test/java/swift/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.logic.commands;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"yunruu"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\", CommandType.TASKS);","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"yunruu"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", CommandType.TASKS)));","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"yunruu"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\", CommandType.TASKS)));","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"yunruu"},"content":"        // different command type -\u003e returns false","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"yunruu"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", CommandType.HELP)));","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"yunruu"},"content":"        // different command type -\u003e returns false","lastModifiedDate":"2022-10-27"},{"lineNumber":34,"author":{"gitId":"yunruu"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", CommandType.EXIT)));","lastModifiedDate":"2022-10-27"},{"lineNumber":35,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":36,"author":{"gitId":"yunruu"},"content":"        // different command type -\u003e returns false","lastModifiedDate":"2022-10-27"},{"lineNumber":37,"author":{"gitId":"yunruu"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", CommandType.CONTACTS)));","lastModifiedDate":"2022-10-27"},{"lineNumber":38,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":39,"author":{"gitId":"yunruu"},"content":"        // different command type -\u003e returns false","lastModifiedDate":"2022-10-27"},{"lineNumber":40,"author":{"gitId":"yunruu"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", CommandType.CLEAR)));","lastModifiedDate":"2022-10-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"yunruu"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\", CommandType.TASKS);","lastModifiedDate":"2022-10-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"yunruu"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\", CommandType.TASKS).hashCode());","lastModifiedDate":"2022-10-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"yunruu"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\", CommandType.TASKS).hashCode());","lastModifiedDate":"2022-10-27"},{"lineNumber":52,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":53,"author":{"gitId":"yunruu"},"content":"        // different command type -\u003e returns different hashcode","lastModifiedDate":"2022-10-27"},{"lineNumber":54,"author":{"gitId":"yunruu"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", CommandType.HELP).hashCode());","lastModifiedDate":"2022-10-27"},{"lineNumber":55,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":56,"author":{"gitId":"yunruu"},"content":"        // different command type -\u003e returns different hashcode","lastModifiedDate":"2022-10-27"},{"lineNumber":57,"author":{"gitId":"yunruu"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", CommandType.EXIT).hashCode());","lastModifiedDate":"2022-10-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"yunruu"},"content":"        // different command type -\u003e returns different hashcode","lastModifiedDate":"2022-10-27"},{"lineNumber":60,"author":{"gitId":"yunruu"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", CommandType.CONTACTS).hashCode());","lastModifiedDate":"2022-10-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"yunruu"},"content":"        // different command type -\u003e returns different hashcode","lastModifiedDate":"2022-10-27"},{"lineNumber":63,"author":{"gitId":"yunruu"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", CommandType.CLEAR).hashCode());","lastModifiedDate":"2022-10-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"peppapighs":1,"-":38,"yunruu":26}},{"path":"src/test/java/swift/logic/commands/CommandSuggestorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"santosh3007"},"content":"package swift.logic.commands;","lastModifiedDate":"2022-10-21"},{"lineNumber":2,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":3,"author":{"gitId":"santosh3007"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-21"},{"lineNumber":4,"author":{"gitId":"santosh3007"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"santosh3007"},"content":"import static swift.logic.parser.CliSyntax.PREFIX_CONTACT;","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"jasonqiu212"},"content":"import static swift.logic.parser.CliSyntax.PREFIX_DEADLINE;","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"jasonqiu212"},"content":"import static swift.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"santosh3007"},"content":"import static swift.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"santosh3007"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"santosh3007"},"content":"import swift.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"santosh3007"},"content":"public class CommandSuggestorTest {","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"santosh3007"},"content":"    private final CommandSuggestor commandSuggestor \u003d new CommandSuggestor();","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":17,"author":{"gitId":"santosh3007"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":18,"author":{"gitId":"santosh3007"},"content":"    public void suggestCommand_emptyString_failure() {","lastModifiedDate":"2022-10-24"},{"lineNumber":19,"author":{"gitId":"santosh3007"},"content":"        assertThrows(AssertionError.class, () -\u003e commandSuggestor.suggestCommand(\"\"));","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"santosh3007"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":22,"author":{"gitId":"santosh3007"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":23,"author":{"gitId":"santosh3007"},"content":"    public void suggestCommand_null_failure() {","lastModifiedDate":"2022-10-24"},{"lineNumber":24,"author":{"gitId":"santosh3007"},"content":"        assertThrows(AssertionError.class, () -\u003e commandSuggestor.suggestCommand(null));","lastModifiedDate":"2022-10-24"},{"lineNumber":25,"author":{"gitId":"santosh3007"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":26,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":27,"author":{"gitId":"santosh3007"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":28,"author":{"gitId":"santosh3007"},"content":"    public void suggestCommand_validCommand_success() {","lastModifiedDate":"2022-10-21"},{"lineNumber":29,"author":{"gitId":"santosh3007"},"content":"        String expectedSuggestion \u003d AddTaskCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-21"},{"lineNumber":30,"author":{"gitId":"santosh3007"},"content":"                + PREFIX_NAME + PREFIX_NAME.getUserPrompt() + \" \"","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"santosh3007"},"content":"                + PREFIX_DESCRIPTION + PREFIX_DESCRIPTION.getUserPrompt() + \" \"","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"santosh3007"},"content":"                + PREFIX_DEADLINE + PREFIX_DEADLINE.getUserPrompt() + \" \"","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"santosh3007"},"content":"                + PREFIX_CONTACT + PREFIX_CONTACT.getUserPrompt();","lastModifiedDate":"2022-10-27"},{"lineNumber":34,"author":{"gitId":"santosh3007"},"content":"        try {","lastModifiedDate":"2022-10-21"},{"lineNumber":35,"author":{"gitId":"santosh3007"},"content":"            System.out.println(expectedSuggestion);","lastModifiedDate":"2022-10-21"},{"lineNumber":36,"author":{"gitId":"santosh3007"},"content":"            System.out.println(commandSuggestor.suggestCommand(\"add_t\"));","lastModifiedDate":"2022-10-21"},{"lineNumber":37,"author":{"gitId":"santosh3007"},"content":"            assertEquals(expectedSuggestion, commandSuggestor.suggestCommand(\"add_t\"));","lastModifiedDate":"2022-10-21"},{"lineNumber":38,"author":{"gitId":"santosh3007"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2022-10-21"},{"lineNumber":39,"author":{"gitId":"santosh3007"},"content":"            throw new AssertionError(\"Command Suggestion should not fail.\", e);","lastModifiedDate":"2022-10-21"},{"lineNumber":40,"author":{"gitId":"santosh3007"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":41,"author":{"gitId":"santosh3007"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":42,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":43,"author":{"gitId":"santosh3007"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":44,"author":{"gitId":"santosh3007"},"content":"    public void suggestCommand_invalidCommand_failure() {","lastModifiedDate":"2022-10-21"},{"lineNumber":45,"author":{"gitId":"santosh3007"},"content":"        assertThrows(CommandException.class, () -\u003e commandSuggestor.suggestCommand(\"asdfdf\"));","lastModifiedDate":"2022-10-21"},{"lineNumber":46,"author":{"gitId":"santosh3007"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":47,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":48,"author":{"gitId":"santosh3007"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":49,"author":{"gitId":"santosh3007"},"content":"    public void suggestCommand_validCommandWithPrefix_success() {","lastModifiedDate":"2022-10-21"},{"lineNumber":50,"author":{"gitId":"santosh3007"},"content":"        String expectedSuggestion \u003d AddTaskCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-21"},{"lineNumber":51,"author":{"gitId":"santosh3007"},"content":"                + PREFIX_NAME + \" \"","lastModifiedDate":"2022-10-21"},{"lineNumber":52,"author":{"gitId":"santosh3007"},"content":"                + PREFIX_DESCRIPTION + PREFIX_DESCRIPTION.getUserPrompt() + \" \"","lastModifiedDate":"2022-10-27"},{"lineNumber":53,"author":{"gitId":"santosh3007"},"content":"                + PREFIX_DEADLINE + PREFIX_DEADLINE.getUserPrompt() + \" \"","lastModifiedDate":"2022-10-27"},{"lineNumber":54,"author":{"gitId":"santosh3007"},"content":"                + PREFIX_CONTACT + PREFIX_CONTACT.getUserPrompt();","lastModifiedDate":"2022-10-27"},{"lineNumber":55,"author":{"gitId":"santosh3007"},"content":"        try {","lastModifiedDate":"2022-10-21"},{"lineNumber":56,"author":{"gitId":"santosh3007"},"content":"            assertEquals(expectedSuggestion, commandSuggestor.suggestCommand(\"add_task n/ \"));","lastModifiedDate":"2022-10-21"},{"lineNumber":57,"author":{"gitId":"santosh3007"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2022-10-21"},{"lineNumber":58,"author":{"gitId":"santosh3007"},"content":"            throw new AssertionError(\"Command Suggestion should not fail.\", e);","lastModifiedDate":"2022-10-21"},{"lineNumber":59,"author":{"gitId":"santosh3007"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":60,"author":{"gitId":"santosh3007"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":61,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":62,"author":{"gitId":"santosh3007"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":63,"author":{"gitId":"santosh3007"},"content":"    public void suggestCommand_validCommandWithPrefixAndValue_success() {","lastModifiedDate":"2022-10-21"},{"lineNumber":64,"author":{"gitId":"santosh3007"},"content":"        String expectedSuggestion \u003d AddTaskCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-21"},{"lineNumber":65,"author":{"gitId":"santosh3007"},"content":"                + PREFIX_NAME + \"abc \"","lastModifiedDate":"2022-10-21"},{"lineNumber":66,"author":{"gitId":"santosh3007"},"content":"                + PREFIX_DESCRIPTION + PREFIX_DESCRIPTION.getUserPrompt() + \" \"","lastModifiedDate":"2022-10-27"},{"lineNumber":67,"author":{"gitId":"santosh3007"},"content":"                + PREFIX_DEADLINE + PREFIX_DEADLINE.getUserPrompt() + \" \"","lastModifiedDate":"2022-10-27"},{"lineNumber":68,"author":{"gitId":"santosh3007"},"content":"                + PREFIX_CONTACT + PREFIX_CONTACT.getUserPrompt();","lastModifiedDate":"2022-10-27"},{"lineNumber":69,"author":{"gitId":"santosh3007"},"content":"        try {","lastModifiedDate":"2022-10-21"},{"lineNumber":70,"author":{"gitId":"santosh3007"},"content":"            assertEquals(expectedSuggestion, commandSuggestor.suggestCommand(\"add_task n/abc \"));","lastModifiedDate":"2022-10-21"},{"lineNumber":71,"author":{"gitId":"santosh3007"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2022-10-21"},{"lineNumber":72,"author":{"gitId":"santosh3007"},"content":"            throw new AssertionError(\"Command Suggestion should not fail.\", e);","lastModifiedDate":"2022-10-21"},{"lineNumber":73,"author":{"gitId":"santosh3007"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":74,"author":{"gitId":"santosh3007"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":75,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":76,"author":{"gitId":"santosh3007"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":77,"author":{"gitId":"santosh3007"},"content":"    public void suggestCommand_validCommandWithInvalidPrefix_failure() {","lastModifiedDate":"2022-10-21"},{"lineNumber":78,"author":{"gitId":"santosh3007"},"content":"        assertThrows(CommandException.class, () -\u003e commandSuggestor.suggestCommand(\"add_task a\"));","lastModifiedDate":"2022-10-21"},{"lineNumber":79,"author":{"gitId":"santosh3007"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":80,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":81,"author":{"gitId":"santosh3007"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":82,"author":{"gitId":"santosh3007"},"content":"    public void suggestCommand_validCommandWithIndex_success() {","lastModifiedDate":"2022-10-26"},{"lineNumber":83,"author":{"gitId":"santosh3007"},"content":"        String expectedSuggestion \u003d DeleteTaskCommand.COMMAND_WORD + \" \u003ctask_index\u003e\";","lastModifiedDate":"2022-10-26"},{"lineNumber":84,"author":{"gitId":"santosh3007"},"content":"        try {","lastModifiedDate":"2022-10-26"},{"lineNumber":85,"author":{"gitId":"santosh3007"},"content":"            assertEquals(expectedSuggestion, commandSuggestor.suggestCommand(\"delete_task \"));","lastModifiedDate":"2022-10-26"},{"lineNumber":86,"author":{"gitId":"santosh3007"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2022-10-26"},{"lineNumber":87,"author":{"gitId":"santosh3007"},"content":"            throw new AssertionError(\"Command Suggestion should not fail.\", e);","lastModifiedDate":"2022-10-26"},{"lineNumber":88,"author":{"gitId":"santosh3007"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":89,"author":{"gitId":"santosh3007"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":90,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":91,"author":{"gitId":"santosh3007"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":92,"author":{"gitId":"santosh3007"},"content":"    public void suggestCommand_validCommandWithIndexGiven_success() {","lastModifiedDate":"2022-10-26"},{"lineNumber":93,"author":{"gitId":"santosh3007"},"content":"        String expectedSuggestion \u003d EditTaskCommand.COMMAND_WORD + \" 1 \"","lastModifiedDate":"2022-10-27"},{"lineNumber":94,"author":{"gitId":"santosh3007"},"content":"                                        + PREFIX_NAME + PREFIX_NAME.getUserPrompt() + \" \"","lastModifiedDate":"2022-10-27"},{"lineNumber":95,"author":{"gitId":"santosh3007"},"content":"                                        + PREFIX_DESCRIPTION + PREFIX_DESCRIPTION.getUserPrompt() + \" \"","lastModifiedDate":"2022-10-27"},{"lineNumber":96,"author":{"gitId":"santosh3007"},"content":"                                        + PREFIX_DEADLINE + PREFIX_DEADLINE.getUserPrompt();","lastModifiedDate":"2022-10-27"},{"lineNumber":97,"author":{"gitId":"santosh3007"},"content":"        try {","lastModifiedDate":"2022-10-26"},{"lineNumber":98,"author":{"gitId":"santosh3007"},"content":"            assertEquals(expectedSuggestion, commandSuggestor.suggestCommand(\"edit_task 1 \"));","lastModifiedDate":"2022-10-26"},{"lineNumber":99,"author":{"gitId":"santosh3007"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2022-10-26"},{"lineNumber":100,"author":{"gitId":"santosh3007"},"content":"            throw new AssertionError(\"Command Suggestion should not fail.\", e);","lastModifiedDate":"2022-10-26"},{"lineNumber":101,"author":{"gitId":"santosh3007"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":102,"author":{"gitId":"santosh3007"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":103,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":104,"author":{"gitId":"santosh3007"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":105,"author":{"gitId":"santosh3007"},"content":"    public void autocomplete_validCommandWithNoPrefix_success() {","lastModifiedDate":"2022-10-21"},{"lineNumber":106,"author":{"gitId":"santosh3007"},"content":"        String expectedSuggestion \u003d AddTaskCommand.COMMAND_WORD + \" \";","lastModifiedDate":"2022-10-21"},{"lineNumber":107,"author":{"gitId":"santosh3007"},"content":"        try {","lastModifiedDate":"2022-10-21"},{"lineNumber":108,"author":{"gitId":"santosh3007"},"content":"            assertEquals(expectedSuggestion, commandSuggestor.autocompleteCommand(\"add_t\",","lastModifiedDate":"2022-10-21"},{"lineNumber":109,"author":{"gitId":"santosh3007"},"content":"                commandSuggestor.suggestCommand(\"add_t\")));","lastModifiedDate":"2022-10-21"},{"lineNumber":110,"author":{"gitId":"santosh3007"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2022-10-21"},{"lineNumber":111,"author":{"gitId":"santosh3007"},"content":"            throw new AssertionError(\"Autocomplete should not fail.\", e);","lastModifiedDate":"2022-10-21"},{"lineNumber":112,"author":{"gitId":"santosh3007"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":113,"author":{"gitId":"santosh3007"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":114,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":115,"author":{"gitId":"santosh3007"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":116,"author":{"gitId":"santosh3007"},"content":"    public void autocomplete_validCommandWithPrefix_success() {","lastModifiedDate":"2022-10-21"},{"lineNumber":117,"author":{"gitId":"santosh3007"},"content":"        String expectedSuggestion \u003d AddTaskCommand.COMMAND_WORD + \" \" + PREFIX_NAME;","lastModifiedDate":"2022-10-26"},{"lineNumber":118,"author":{"gitId":"santosh3007"},"content":"        try {","lastModifiedDate":"2022-10-21"},{"lineNumber":119,"author":{"gitId":"santosh3007"},"content":"            assertEquals(expectedSuggestion, commandSuggestor.autocompleteCommand(\"add_task \",","lastModifiedDate":"2022-10-21"},{"lineNumber":120,"author":{"gitId":"santosh3007"},"content":"                    commandSuggestor.suggestCommand(\"add_task \")));","lastModifiedDate":"2022-10-21"},{"lineNumber":121,"author":{"gitId":"santosh3007"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2022-10-21"},{"lineNumber":122,"author":{"gitId":"santosh3007"},"content":"            throw new AssertionError(\"Autocomplete should not fail.\", e);","lastModifiedDate":"2022-10-21"},{"lineNumber":123,"author":{"gitId":"santosh3007"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":124,"author":{"gitId":"santosh3007"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":125,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":126,"author":{"gitId":"santosh3007"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":127,"author":{"gitId":"santosh3007"},"content":"    public void autocomplete_validCommandWithNoArgs_success() {","lastModifiedDate":"2022-10-26"},{"lineNumber":128,"author":{"gitId":"santosh3007"},"content":"        String expectedSuggestion \u003d ListTaskCommand.COMMAND_WORD + \" \";","lastModifiedDate":"2022-10-28"},{"lineNumber":129,"author":{"gitId":"santosh3007"},"content":"        try {","lastModifiedDate":"2022-10-26"},{"lineNumber":130,"author":{"gitId":"santosh3007"},"content":"            assertEquals(expectedSuggestion, commandSuggestor.autocompleteCommand(\"list_t\",","lastModifiedDate":"2022-10-26"},{"lineNumber":131,"author":{"gitId":"santosh3007"},"content":"                    commandSuggestor.suggestCommand(\"list_t\")));","lastModifiedDate":"2022-10-26"},{"lineNumber":132,"author":{"gitId":"santosh3007"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2022-10-26"},{"lineNumber":133,"author":{"gitId":"santosh3007"},"content":"            throw new AssertionError(\"Autocomplete should not fail.\", e);","lastModifiedDate":"2022-10-26"},{"lineNumber":134,"author":{"gitId":"santosh3007"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":135,"author":{"gitId":"santosh3007"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":136,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":137,"author":{"gitId":"santosh3007"},"content":"}","lastModifiedDate":"2022-10-21"}],"authorContributionMap":{"jasonqiu212":2,"santosh3007":135}},{"path":"src/test/java/swift/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.logic.commands;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-10-01"},{"lineNumber":6,"author":{"gitId":"santosh3007"},"content":"import static swift.logic.parser.CliSyntax.PREFIX_CONTACT;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-01"},{"lineNumber":8,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-01"},{"lineNumber":9,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-01"},{"lineNumber":10,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-01"},{"lineNumber":11,"author":{"gitId":"peppapighs"},"content":"import static swift.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"ShenyiCui"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"peppapighs"},"content":"import swift.commons.core.index.Index;","lastModifiedDate":"2022-10-01"},{"lineNumber":19,"author":{"gitId":"peppapighs"},"content":"import swift.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-01"},{"lineNumber":20,"author":{"gitId":"peppapighs"},"content":"import swift.model.AddressBook;","lastModifiedDate":"2022-10-01"},{"lineNumber":21,"author":{"gitId":"peppapighs"},"content":"import swift.model.Model;","lastModifiedDate":"2022-10-01"},{"lineNumber":22,"author":{"gitId":"peppapighs"},"content":"import swift.model.person.Person;","lastModifiedDate":"2022-10-01"},{"lineNumber":23,"author":{"gitId":"jasonqiu212"},"content":"import swift.model.person.PersonNameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"ShenyiCui"},"content":"import swift.model.task.Task;","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"peppapighs"},"content":"import swift.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2022-10-01"},{"lineNumber":26,"author":{"gitId":"santosh3007"},"content":"import swift.testutil.EditTaskDescriptorBuilder;","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"santosh3007"},"content":"    public static final int VALID_CONTACT_INDEX \u003d 0;","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"santosh3007"},"content":"    public static final int VALID_CONTACT_ONE_BASED_INDEX \u003d 1;","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"santosh3007"},"content":"    public static final String CONTACT_INDEX_TASK1 \u003d \" \" + PREFIX_CONTACT + VALID_CONTACT_ONE_BASED_INDEX;","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"santosh3007"},"content":"    public static final String INVALID_CONTACT_INDEX \u003d \" \" + PREFIX_CONTACT + \"a\"; // \u0027a\u0027 not allowed in index","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":68,"author":{"gitId":"yunruu"},"content":"    public static final EditContactCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"yunruu"},"content":"    public static final EditContactCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":80,"author":{"gitId":"ShenyiCui"},"content":"    public static final String VALID_TASK_NAME_1 \u003d \"Buy Milk\";","lastModifiedDate":"2022-10-23"},{"lineNumber":81,"author":{"gitId":"ShenyiCui"},"content":"    public static final String VALID_TASK_NAME_2 \u003d \"CS2103T\";","lastModifiedDate":"2022-10-23"},{"lineNumber":82,"author":{"gitId":"santosh3007"},"content":"    public static final String VALID_TASK_NAME_3 \u003d \"Finish Assignment\";","lastModifiedDate":"2022-10-12"},{"lineNumber":83,"author":{"gitId":"jasonqiu212"},"content":"    public static final String VALID_TASK_NAME_4 \u003d \"CS2101\";","lastModifiedDate":"2022-10-26"},{"lineNumber":84,"author":{"gitId":"jasonqiu212"},"content":"    public static final String VALID_TASK_NAME_5 \u003d \"CS3230\";","lastModifiedDate":"2022-10-26"},{"lineNumber":85,"author":{"gitId":"jasonqiu212"},"content":"    public static final String VALID_DESCRIPTION_1 \u003d \"Finish tutorial\";","lastModifiedDate":"2022-10-26"},{"lineNumber":86,"author":{"gitId":"jasonqiu212"},"content":"    public static final String VALID_DESCRIPTION_2 \u003d \"Meeting link: https://www.example.com\";","lastModifiedDate":"2022-10-26"},{"lineNumber":87,"author":{"gitId":"jasonqiu212"},"content":"    public static final String EMPTY_DESCRIPTION \u003d null;","lastModifiedDate":"2022-10-26"},{"lineNumber":88,"author":{"gitId":"jasonqiu212"},"content":"    public static final String VALID_DEADLINE_1 \u003d \"12-12-2022 1200\";","lastModifiedDate":"2022-10-26"},{"lineNumber":89,"author":{"gitId":"jasonqiu212"},"content":"    public static final String VALID_DEADLINE_2 \u003d \"12-06-2022 1800\";","lastModifiedDate":"2022-10-26"},{"lineNumber":90,"author":{"gitId":"jasonqiu212"},"content":"    public static final String EMPTY_DEADLINE \u003d null;","lastModifiedDate":"2022-10-26"},{"lineNumber":91,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":92,"author":{"gitId":"santosh3007"},"content":"    public static final EditTaskCommand.EditTaskDescriptor DESC_TASK_1;","lastModifiedDate":"2022-10-12"},{"lineNumber":93,"author":{"gitId":"santosh3007"},"content":"    public static final EditTaskCommand.EditTaskDescriptor DESC_TASK_2;","lastModifiedDate":"2022-10-12"},{"lineNumber":94,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":95,"author":{"gitId":"santosh3007"},"content":"    static {","lastModifiedDate":"2022-10-12"},{"lineNumber":96,"author":{"gitId":"santosh3007"},"content":"        DESC_TASK_1 \u003d new EditTaskDescriptorBuilder().withName(VALID_TASK_NAME_1).build();","lastModifiedDate":"2022-10-12"},{"lineNumber":97,"author":{"gitId":"santosh3007"},"content":"        DESC_TASK_2 \u003d new EditTaskDescriptorBuilder().withName(VALID_TASK_NAME_2).build();","lastModifiedDate":"2022-10-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":121,"author":{"gitId":"yunruu"},"content":"                                            CommandType commandType, Model expectedModel) {","lastModifiedDate":"2022-10-27"},{"lineNumber":122,"author":{"gitId":"yunruu"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage, commandType);","lastModifiedDate":"2022-10-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":136,"author":{"gitId":"santosh3007"},"content":"        List\u003cPerson\u003e expectedFilteredPersonList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2022-10-12"},{"lineNumber":137,"author":{"gitId":"santosh3007"},"content":"        List\u003cTask\u003e expectedFilteredTaskList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredTaskList());","lastModifiedDate":"2022-10-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":141,"author":{"gitId":"santosh3007"},"content":"        assertEquals(expectedFilteredPersonList, actualModel.getFilteredPersonList());","lastModifiedDate":"2022-10-12"},{"lineNumber":142,"author":{"gitId":"santosh3007"},"content":"        assertEquals(expectedFilteredTaskList, actualModel.getFilteredTaskList());","lastModifiedDate":"2022-10-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":153,"author":{"gitId":"jasonqiu212"},"content":"        model.updateFilteredPersonList(new PersonNameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2022-10-10"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":158,"author":{"gitId":"ShenyiCui"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":159,"author":{"gitId":"ShenyiCui"},"content":"     * Updates {@code model}\u0027s filtered list to show only the task at the given {@code targetIndex} in the","lastModifiedDate":"2022-10-10"},{"lineNumber":160,"author":{"gitId":"ShenyiCui"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2022-10-10"},{"lineNumber":161,"author":{"gitId":"ShenyiCui"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":162,"author":{"gitId":"ShenyiCui"},"content":"    public static void showTaskAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2022-10-10"},{"lineNumber":163,"author":{"gitId":"ShenyiCui"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredTaskList().size());","lastModifiedDate":"2022-10-10"},{"lineNumber":164,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":165,"author":{"gitId":"ShenyiCui"},"content":"        Task task \u003d model.getFilteredTaskList().get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-10"},{"lineNumber":166,"author":{"gitId":"ShenyiCui"},"content":"        Predicate\u003cTask\u003e isSameTask \u003d (t) -\u003e t.equals(task);","lastModifiedDate":"2022-10-10"},{"lineNumber":167,"author":{"gitId":"ShenyiCui"},"content":"        model.updateFilteredTaskList(isSameTask);","lastModifiedDate":"2022-10-10"},{"lineNumber":168,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":169,"author":{"gitId":"ShenyiCui"},"content":"        assertEquals(1, model.getFilteredTaskList().size());","lastModifiedDate":"2022-10-10"},{"lineNumber":170,"author":{"gitId":"ShenyiCui"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":171,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"ShenyiCui":18,"jasonqiu212":10,"santosh3007":18,"peppapighs":13,"-":109,"yunruu":4}},{"path":"src/test/java/swift/logic/commands/DeleteContactCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.logic.commands;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-01"},{"lineNumber":6,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-01"},{"lineNumber":7,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2022-10-01"},{"lineNumber":8,"author":{"gitId":"ShenyiCui"},"content":"import static swift.testutil.TypicalPersonIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"ShenyiCui"},"content":"import static swift.testutil.TypicalPersonIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"peppapighs"},"content":"import static swift.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-10-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"peppapighs"},"content":"import swift.commons.core.Messages;","lastModifiedDate":"2022-10-01"},{"lineNumber":15,"author":{"gitId":"peppapighs"},"content":"import swift.commons.core.index.Index;","lastModifiedDate":"2022-10-01"},{"lineNumber":16,"author":{"gitId":"peppapighs"},"content":"import swift.model.Model;","lastModifiedDate":"2022-10-01"},{"lineNumber":17,"author":{"gitId":"peppapighs"},"content":"import swift.model.ModelManager;","lastModifiedDate":"2022-10-01"},{"lineNumber":18,"author":{"gitId":"peppapighs"},"content":"import swift.model.UserPrefs;","lastModifiedDate":"2022-10-01"},{"lineNumber":19,"author":{"gitId":"peppapighs"},"content":"import swift.model.person.Person;","lastModifiedDate":"2022-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"jasonqiu212"},"content":"public class DeleteContactCommandTest {","lastModifiedDate":"2022-10-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"jasonqiu212"},"content":"        DeleteContactCommand deleteContactCommand \u003d new DeleteContactCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2022-10-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"jasonqiu212"},"content":"        String expectedMessage \u003d String.format(DeleteContactCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2022-10-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"yunruu"},"content":"        CommandResult commandResult \u003d new CommandResult(expectedMessage, CommandType.CONTACTS);","lastModifiedDate":"2022-10-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"yunruu"},"content":"        assertCommandSuccess(deleteContactCommand, model, commandResult, expectedModel);","lastModifiedDate":"2022-10-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"jasonqiu212"},"content":"        DeleteContactCommand deleteContactCommand \u003d new DeleteContactCommand(outOfBoundIndex);","lastModifiedDate":"2022-10-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"jasonqiu212"},"content":"        assertCommandFailure(deleteContactCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"jasonqiu212"},"content":"        DeleteContactCommand deleteContactCommand \u003d new DeleteContactCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2022-10-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"jasonqiu212"},"content":"        String expectedMessage \u003d String.format(DeleteContactCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2022-10-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":61,"author":{"gitId":"yunruu"},"content":"        CommandResult commandResult \u003d new CommandResult(expectedMessage, CommandType.CONTACTS);","lastModifiedDate":"2022-10-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"yunruu"},"content":"        assertCommandSuccess(deleteContactCommand, model, commandResult, expectedModel);","lastModifiedDate":"2022-10-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"jasonqiu212"},"content":"        DeleteContactCommand deleteContactCommand \u003d new DeleteContactCommand(outOfBoundIndex);","lastModifiedDate":"2022-10-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"jasonqiu212"},"content":"        assertCommandFailure(deleteContactCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"jasonqiu212"},"content":"        DeleteContactCommand deleteFirstCommand \u003d new DeleteContactCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2022-10-21"},{"lineNumber":86,"author":{"gitId":"jasonqiu212"},"content":"        DeleteContactCommand deleteSecondCommand \u003d new DeleteContactCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2022-10-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"jasonqiu212"},"content":"        DeleteContactCommand deleteFirstCommandCopy \u003d new DeleteContactCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2022-10-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"ShenyiCui":2,"jasonqiu212":12,"peppapighs":11,"-":84,"yunruu":4}},{"path":"src/test/java/swift/logic/commands/DeleteTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ShenyiCui"},"content":"package swift.logic.commands;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"ShenyiCui"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"ShenyiCui"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"ShenyiCui"},"content":"import static swift.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"ShenyiCui"},"content":"import static swift.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"ShenyiCui"},"content":"import static swift.logic.commands.CommandTestUtil.showTaskAtIndex;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"ShenyiCui"},"content":"import static swift.testutil.TypicalTaskIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"ShenyiCui"},"content":"import static swift.testutil.TypicalTaskIndexes.INDEX_SECOND_TASK;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"ShenyiCui"},"content":"import static swift.testutil.TypicalTasks.getTypicalAddressBook;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"ShenyiCui"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"ShenyiCui"},"content":"import swift.commons.core.Messages;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"ShenyiCui"},"content":"import swift.commons.core.index.Index;","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"ShenyiCui"},"content":"import swift.model.Model;","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"ShenyiCui"},"content":"import swift.model.ModelManager;","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"ShenyiCui"},"content":"import swift.model.UserPrefs;","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"ShenyiCui"},"content":"import swift.model.task.Task;","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"ShenyiCui"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"ShenyiCui"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"ShenyiCui"},"content":" * {@code DeleteTaskCommand}.","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"ShenyiCui"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"ShenyiCui"},"content":"public class DeleteTaskCommandTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"ShenyiCui"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"ShenyiCui"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"ShenyiCui"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"ShenyiCui"},"content":"        Task taskToDelete \u003d model.getFilteredTaskList().get(INDEX_FIRST_TASK.getZeroBased());","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"ShenyiCui"},"content":"        DeleteTaskCommand deleteTaskCommand \u003d new DeleteTaskCommand(INDEX_FIRST_TASK);","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"ShenyiCui"},"content":"        String expectedMessage \u003d String.format(DeleteTaskCommand.MESSAGE_DELETE_TASK_SUCCESS, taskToDelete);","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"yunruu"},"content":"        CommandResult commandResult \u003d new CommandResult(expectedMessage, CommandType.TASKS);","lastModifiedDate":"2022-10-27"},{"lineNumber":36,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"ShenyiCui"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"ShenyiCui"},"content":"        expectedModel.deleteTask(taskToDelete);","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"yunruu"},"content":"        assertCommandSuccess(deleteTaskCommand, model, commandResult, expectedModel);","lastModifiedDate":"2022-10-26"},{"lineNumber":41,"author":{"gitId":"ShenyiCui"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"ShenyiCui"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"ShenyiCui"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"ShenyiCui"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredTaskList().size() + 1);","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"ShenyiCui"},"content":"        DeleteTaskCommand deleteTaskCommand \u003d new DeleteTaskCommand(outOfBoundIndex);","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"ShenyiCui"},"content":"        assertCommandFailure(deleteTaskCommand, model, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"ShenyiCui"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"ShenyiCui"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"ShenyiCui"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"ShenyiCui"},"content":"        showTaskAtIndex(model, INDEX_FIRST_TASK);","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"ShenyiCui"},"content":"        Task taskToDelete \u003d model.getFilteredTaskList().get(INDEX_FIRST_TASK.getZeroBased());","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"ShenyiCui"},"content":"        DeleteTaskCommand deleteTaskCommand \u003d new DeleteTaskCommand(INDEX_FIRST_TASK);","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"ShenyiCui"},"content":"        String expectedMessage \u003d String.format(DeleteTaskCommand.MESSAGE_DELETE_TASK_SUCCESS, taskToDelete);","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"yunruu"},"content":"        CommandResult commandResult \u003d new CommandResult(expectedMessage, CommandType.TASKS);","lastModifiedDate":"2022-10-27"},{"lineNumber":61,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":62,"author":{"gitId":"ShenyiCui"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"ShenyiCui"},"content":"        expectedModel.deleteTask(taskToDelete);","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"ShenyiCui"},"content":"        showNoTask(expectedModel);","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"yunruu"},"content":"        assertCommandSuccess(deleteTaskCommand, model, commandResult, expectedModel);","lastModifiedDate":"2022-10-26"},{"lineNumber":67,"author":{"gitId":"ShenyiCui"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"ShenyiCui"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"ShenyiCui"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"ShenyiCui"},"content":"        showTaskAtIndex(model, INDEX_FIRST_TASK);","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"ShenyiCui"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_TASK;","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"ShenyiCui"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"ShenyiCui"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getTaskList().size());","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"ShenyiCui"},"content":"        DeleteTaskCommand deleteTaskCommand \u003d new DeleteTaskCommand(outOfBoundIndex);","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"ShenyiCui"},"content":"        assertCommandFailure(deleteTaskCommand, model, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"ShenyiCui"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"ShenyiCui"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"ShenyiCui"},"content":"    public void equals() {","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"ShenyiCui"},"content":"        DeleteTaskCommand deleteFirstTaskCommand \u003d new DeleteTaskCommand(INDEX_FIRST_TASK);","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"ShenyiCui"},"content":"        DeleteTaskCommand deleteSecondTaskCommand \u003d new DeleteTaskCommand(INDEX_SECOND_TASK);","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":87,"author":{"gitId":"ShenyiCui"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-10"},{"lineNumber":88,"author":{"gitId":"ShenyiCui"},"content":"        assertTrue(deleteFirstTaskCommand.equals(deleteFirstTaskCommand));","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":90,"author":{"gitId":"ShenyiCui"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-10"},{"lineNumber":91,"author":{"gitId":"ShenyiCui"},"content":"        DeleteTaskCommand deleteFirstTaskCommandCopy \u003d new DeleteTaskCommand(INDEX_FIRST_TASK);","lastModifiedDate":"2022-10-10"},{"lineNumber":92,"author":{"gitId":"ShenyiCui"},"content":"        assertTrue(deleteFirstTaskCommand.equals(deleteFirstTaskCommandCopy));","lastModifiedDate":"2022-10-10"},{"lineNumber":93,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":94,"author":{"gitId":"ShenyiCui"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":95,"author":{"gitId":"ShenyiCui"},"content":"        assertFalse(deleteFirstTaskCommand.equals(1));","lastModifiedDate":"2022-10-10"},{"lineNumber":96,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":97,"author":{"gitId":"ShenyiCui"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":98,"author":{"gitId":"ShenyiCui"},"content":"        assertFalse(deleteFirstTaskCommand.equals(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":99,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":100,"author":{"gitId":"ShenyiCui"},"content":"        // different task -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":101,"author":{"gitId":"ShenyiCui"},"content":"        assertFalse(deleteFirstTaskCommand.equals(deleteSecondTaskCommand));","lastModifiedDate":"2022-10-10"},{"lineNumber":102,"author":{"gitId":"ShenyiCui"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":103,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":104,"author":{"gitId":"ShenyiCui"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":105,"author":{"gitId":"ShenyiCui"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2022-10-10"},{"lineNumber":106,"author":{"gitId":"ShenyiCui"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":107,"author":{"gitId":"ShenyiCui"},"content":"    private void showNoTask(Model model) {","lastModifiedDate":"2022-10-10"},{"lineNumber":108,"author":{"gitId":"ShenyiCui"},"content":"        model.updateFilteredTaskList(p -\u003e false);","lastModifiedDate":"2022-10-10"},{"lineNumber":109,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":110,"author":{"gitId":"ShenyiCui"},"content":"        assertTrue(model.getFilteredTaskList().isEmpty());","lastModifiedDate":"2022-10-10"},{"lineNumber":111,"author":{"gitId":"ShenyiCui"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":112,"author":{"gitId":"ShenyiCui"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"ShenyiCui":107,"yunruu":5}},{"path":"src/test/java/swift/logic/commands/EditContactCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.logic.commands;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2022-10-01"},{"lineNumber":6,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2022-10-01"},{"lineNumber":7,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-10-01"},{"lineNumber":8,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-10-01"},{"lineNumber":9,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-01"},{"lineNumber":10,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-01"},{"lineNumber":11,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-01"},{"lineNumber":12,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2022-10-01"},{"lineNumber":13,"author":{"gitId":"ShenyiCui"},"content":"import static swift.testutil.TypicalPersonIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"ShenyiCui"},"content":"import static swift.testutil.TypicalPersonIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"peppapighs"},"content":"import static swift.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"peppapighs"},"content":"import swift.commons.core.Messages;","lastModifiedDate":"2022-10-01"},{"lineNumber":20,"author":{"gitId":"peppapighs"},"content":"import swift.commons.core.index.Index;","lastModifiedDate":"2022-10-01"},{"lineNumber":21,"author":{"gitId":"yunruu"},"content":"import swift.logic.commands.EditContactCommand.EditPersonDescriptor;","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"peppapighs"},"content":"import swift.model.AddressBook;","lastModifiedDate":"2022-10-01"},{"lineNumber":23,"author":{"gitId":"peppapighs"},"content":"import swift.model.Model;","lastModifiedDate":"2022-10-01"},{"lineNumber":24,"author":{"gitId":"peppapighs"},"content":"import swift.model.ModelManager;","lastModifiedDate":"2022-10-01"},{"lineNumber":25,"author":{"gitId":"peppapighs"},"content":"import swift.model.UserPrefs;","lastModifiedDate":"2022-10-01"},{"lineNumber":26,"author":{"gitId":"peppapighs"},"content":"import swift.model.person.Person;","lastModifiedDate":"2022-10-01"},{"lineNumber":27,"author":{"gitId":"peppapighs"},"content":"import swift.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2022-10-01"},{"lineNumber":28,"author":{"gitId":"peppapighs"},"content":"import swift.testutil.PersonBuilder;","lastModifiedDate":"2022-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"yunruu"},"content":"public class EditContactCommandTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"yunruu"},"content":"        EditContactCommand editContactCommand \u003d new EditContactCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"yunruu"},"content":"        String expectedMessage \u003d String.format(EditContactCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"yunruu"},"content":"        CommandResult commandResult \u003d new CommandResult(expectedMessage, CommandType.CONTACTS);","lastModifiedDate":"2022-10-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"yunruu"},"content":"        assertCommandSuccess(editContactCommand, model, commandResult, expectedModel);","lastModifiedDate":"2022-10-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"yunruu"},"content":"        EditContactCommand editContactCommand \u003d new EditContactCommand(indexLastPerson, descriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"yunruu"},"content":"        String expectedMessage \u003d String.format(EditContactCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":68,"author":{"gitId":"yunruu"},"content":"        CommandResult commandResult \u003d new CommandResult(expectedMessage, CommandType.CONTACTS);","lastModifiedDate":"2022-10-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"yunruu"},"content":"        assertCommandSuccess(editContactCommand, model, commandResult, expectedModel);","lastModifiedDate":"2022-10-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":78,"author":{"gitId":"yunruu"},"content":"        EditContactCommand editContactCommand \u003d new EditContactCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"yunruu"},"content":"        String expectedMessage \u003d String.format(EditContactCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"yunruu"},"content":"        CommandResult commandResult \u003d new CommandResult(expectedMessage, CommandType.CONTACTS);","lastModifiedDate":"2022-10-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":87,"author":{"gitId":"yunruu"},"content":"        assertCommandSuccess(editContactCommand, model, commandResult, expectedModel);","lastModifiedDate":"2022-10-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"yunruu"},"content":"        EditContactCommand editContactCommand \u003d new EditContactCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2022-10-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":99,"author":{"gitId":"yunruu"},"content":"        String expectedMessage \u003d String.format(EditContactCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2022-10-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"yunruu"},"content":"        CommandResult commandResult \u003d new CommandResult(expectedMessage, CommandType.CONTACTS);","lastModifiedDate":"2022-10-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":106,"author":{"gitId":"yunruu"},"content":"        assertCommandSuccess(editContactCommand, model, commandResult, expectedModel);","lastModifiedDate":"2022-10-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"yunruu"},"content":"        EditContactCommand editContactCommand \u003d new EditContactCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"yunruu"},"content":"        assertCommandFailure(editContactCommand, model, EditContactCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2022-10-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":124,"author":{"gitId":"yunruu"},"content":"        EditContactCommand editContactCommand \u003d new EditContactCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2022-10-10"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":127,"author":{"gitId":"yunruu"},"content":"        assertCommandFailure(editContactCommand, model, EditContactCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2022-10-10"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"yunruu"},"content":"        EditContactCommand editContactCommand \u003d new EditContactCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":136,"author":{"gitId":"yunruu"},"content":"        assertCommandFailure(editContactCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-10"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":150,"author":{"gitId":"yunruu"},"content":"        EditContactCommand editContactCommand \u003d new EditContactCommand(outOfBoundIndex,","lastModifiedDate":"2022-10-10"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":153,"author":{"gitId":"yunruu"},"content":"        assertCommandFailure(editContactCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-10"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"yunruu"},"content":"        final EditContactCommand standardCommand \u003d new EditContactCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2022-10-10"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"yunruu"},"content":"        EditContactCommand commandWithSameValues \u003d new EditContactCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":175,"author":{"gitId":"yunruu"},"content":"        assertFalse(standardCommand.equals(new EditContactCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2022-10-10"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":178,"author":{"gitId":"yunruu"},"content":"        assertFalse(standardCommand.equals(new EditContactCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2022-10-10"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"ShenyiCui":2,"peppapighs":19,"-":130,"yunruu":30}},{"path":"src/test/java/swift/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.logic.commands;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2022-10-01"},{"lineNumber":6,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2022-10-01"},{"lineNumber":7,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-10-01"},{"lineNumber":8,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-10-01"},{"lineNumber":9,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-10-01"},{"lineNumber":10,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-10-01"},{"lineNumber":11,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"yunruu"},"content":"import swift.logic.commands.EditContactCommand.EditPersonDescriptor;","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"peppapighs"},"content":"import swift.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2022-10-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"peppapighs":9,"-":48,"yunruu":1}},{"path":"src/test/java/swift/logic/commands/EditTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"santosh3007"},"content":"package swift.logic.commands;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"santosh3007"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"santosh3007"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"santosh3007"},"content":"import static swift.logic.commands.CommandTestUtil.DESC_TASK_1;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"santosh3007"},"content":"import static swift.logic.commands.CommandTestUtil.DESC_TASK_2;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"santosh3007"},"content":"import static swift.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"santosh3007"},"content":"import static swift.logic.commands.CommandTestUtil.VALID_TASK_NAME_3;","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"santosh3007"},"content":"import static swift.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"santosh3007"},"content":"import static swift.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"santosh3007"},"content":"import static swift.logic.commands.CommandTestUtil.showTaskAtIndex;","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"santosh3007"},"content":"import static swift.testutil.TypicalTaskIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"santosh3007"},"content":"import static swift.testutil.TypicalTaskIndexes.INDEX_SECOND_TASK;","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"santosh3007"},"content":"import static swift.testutil.TypicalTasks.getTypicalAddressBook;","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"santosh3007"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"santosh3007"},"content":"import swift.commons.core.Messages;","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"santosh3007"},"content":"import swift.commons.core.index.Index;","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"santosh3007"},"content":"import swift.logic.commands.EditTaskCommand.EditTaskDescriptor;","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"santosh3007"},"content":"import swift.model.AddressBook;","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"santosh3007"},"content":"import swift.model.Model;","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"santosh3007"},"content":"import swift.model.ModelManager;","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"santosh3007"},"content":"import swift.model.UserPrefs;","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"santosh3007"},"content":"import swift.model.task.Task;","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"santosh3007"},"content":"import swift.testutil.EditTaskDescriptorBuilder;","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"santosh3007"},"content":"import swift.testutil.TaskBuilder;","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"santosh3007"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"santosh3007"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"santosh3007"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"santosh3007"},"content":"public class EditTaskCommandTest {","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"santosh3007"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"santosh3007"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"santosh3007"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"santosh3007"},"content":"        Task editedTask \u003d new TaskBuilder().build();","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"santosh3007"},"content":"        EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder(editedTask).build();","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"santosh3007"},"content":"        EditTaskCommand editTaskCommand \u003d new EditTaskCommand(INDEX_FIRST_TASK, descriptor);","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"santosh3007"},"content":"        String expectedMessage \u003d String.format(EditTaskCommand.MESSAGE_EDIT_TASK_SUCCESS, editedTask);","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"yunruu"},"content":"        CommandResult commandResult \u003d new CommandResult(expectedMessage, CommandType.TASKS);","lastModifiedDate":"2022-10-27"},{"lineNumber":45,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":46,"author":{"gitId":"santosh3007"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"santosh3007"},"content":"        System.out.println(model.getFilteredTaskList());","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"santosh3007"},"content":"        expectedModel.setTask(model.getFilteredTaskList().get(0), editedTask);","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"yunruu"},"content":"        assertCommandSuccess(editTaskCommand, model, commandResult, expectedModel);","lastModifiedDate":"2022-10-26"},{"lineNumber":51,"author":{"gitId":"santosh3007"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"santosh3007"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"santosh3007"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"santosh3007"},"content":"        Index indexLastTask \u003d Index.fromOneBased(model.getFilteredTaskList().size());","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"santosh3007"},"content":"        Task lastTask \u003d model.getFilteredTaskList().get(indexLastTask.getZeroBased());","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"santosh3007"},"content":"        TaskBuilder taskInList \u003d new TaskBuilder(lastTask);","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"peppapighs"},"content":"        Task editedTask \u003d taskInList.withTaskName(VALID_TASK_NAME_3).build();","lastModifiedDate":"2022-10-15"},{"lineNumber":60,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"peppapighs"},"content":"        EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder().withName(VALID_TASK_NAME_3).build();","lastModifiedDate":"2022-10-15"},{"lineNumber":62,"author":{"gitId":"santosh3007"},"content":"        EditTaskCommand editTaskCommand \u003d new EditTaskCommand(indexLastTask, descriptor);","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"santosh3007"},"content":"        String expectedMessage \u003d String.format(EditTaskCommand.MESSAGE_EDIT_TASK_SUCCESS, editedTask);","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"yunruu"},"content":"        CommandResult commandResult \u003d new CommandResult(expectedMessage, CommandType.TASKS);","lastModifiedDate":"2022-10-27"},{"lineNumber":67,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":68,"author":{"gitId":"santosh3007"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-10-12"},{"lineNumber":69,"author":{"gitId":"santosh3007"},"content":"        expectedModel.setTask(lastTask, editedTask);","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":71,"author":{"gitId":"yunruu"},"content":"        assertCommandSuccess(editTaskCommand, model, commandResult, expectedModel);","lastModifiedDate":"2022-10-26"},{"lineNumber":72,"author":{"gitId":"santosh3007"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":73,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":74,"author":{"gitId":"santosh3007"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":75,"author":{"gitId":"santosh3007"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-10-12"},{"lineNumber":76,"author":{"gitId":"santosh3007"},"content":"        EditTaskCommand editTaskCommand \u003d new EditTaskCommand(INDEX_FIRST_TASK, new EditTaskDescriptor());","lastModifiedDate":"2022-10-12"},{"lineNumber":77,"author":{"gitId":"santosh3007"},"content":"        Task editedTask \u003d model.getFilteredTaskList().get(INDEX_FIRST_TASK.getZeroBased());","lastModifiedDate":"2022-10-12"},{"lineNumber":78,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":79,"author":{"gitId":"santosh3007"},"content":"        String expectedMessage \u003d String.format(EditTaskCommand.MESSAGE_EDIT_TASK_SUCCESS, editedTask);","lastModifiedDate":"2022-10-12"},{"lineNumber":80,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":81,"author":{"gitId":"yunruu"},"content":"        CommandResult commandResult \u003d new CommandResult(expectedMessage, CommandType.TASKS);","lastModifiedDate":"2022-10-27"},{"lineNumber":82,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":83,"author":{"gitId":"santosh3007"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-10-12"},{"lineNumber":84,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":85,"author":{"gitId":"yunruu"},"content":"        assertCommandSuccess(editTaskCommand, model, commandResult, expectedModel);","lastModifiedDate":"2022-10-26"},{"lineNumber":86,"author":{"gitId":"santosh3007"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":87,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":88,"author":{"gitId":"santosh3007"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":89,"author":{"gitId":"santosh3007"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2022-10-12"},{"lineNumber":90,"author":{"gitId":"santosh3007"},"content":"        showTaskAtIndex(model, INDEX_FIRST_TASK);","lastModifiedDate":"2022-10-12"},{"lineNumber":91,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":92,"author":{"gitId":"santosh3007"},"content":"        Task taskInFilteredList \u003d model.getFilteredTaskList().get(INDEX_FIRST_TASK.getZeroBased());","lastModifiedDate":"2022-10-12"},{"lineNumber":93,"author":{"gitId":"santosh3007"},"content":"        Task editedTask \u003d new TaskBuilder(taskInFilteredList).withTaskName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-10-12"},{"lineNumber":94,"author":{"gitId":"santosh3007"},"content":"        EditTaskCommand editTaskCommand \u003d new EditTaskCommand(INDEX_FIRST_TASK,","lastModifiedDate":"2022-10-12"},{"lineNumber":95,"author":{"gitId":"santosh3007"},"content":"                new EditTaskDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2022-10-12"},{"lineNumber":96,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":97,"author":{"gitId":"santosh3007"},"content":"        String expectedMessage \u003d String.format(EditTaskCommand.MESSAGE_EDIT_TASK_SUCCESS, editedTask);","lastModifiedDate":"2022-10-12"},{"lineNumber":98,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":99,"author":{"gitId":"yunruu"},"content":"        CommandResult commandResult \u003d new CommandResult(expectedMessage, CommandType.TASKS);","lastModifiedDate":"2022-10-27"},{"lineNumber":100,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":101,"author":{"gitId":"santosh3007"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-10-12"},{"lineNumber":102,"author":{"gitId":"santosh3007"},"content":"        expectedModel.setTask(model.getFilteredTaskList().get(0), editedTask);","lastModifiedDate":"2022-10-12"},{"lineNumber":103,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":104,"author":{"gitId":"yunruu"},"content":"        assertCommandSuccess(editTaskCommand, model, commandResult, expectedModel);","lastModifiedDate":"2022-10-26"},{"lineNumber":105,"author":{"gitId":"santosh3007"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":106,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":107,"author":{"gitId":"santosh3007"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":108,"author":{"gitId":"santosh3007"},"content":"    public void execute_duplicateTaskUnfilteredList_failure() {","lastModifiedDate":"2022-10-12"},{"lineNumber":109,"author":{"gitId":"jasonqiu212"},"content":"        Task firstTask \u003d model.getFilteredTaskList().get(INDEX_FIRST_TASK.getZeroBased());","lastModifiedDate":"2022-10-28"},{"lineNumber":110,"author":{"gitId":"santosh3007"},"content":"        EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder(firstTask).build();","lastModifiedDate":"2022-10-12"},{"lineNumber":111,"author":{"gitId":"jasonqiu212"},"content":"        EditTaskCommand editTaskCommand \u003d new EditTaskCommand(INDEX_SECOND_TASK, descriptor);","lastModifiedDate":"2022-10-28"},{"lineNumber":112,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":113,"author":{"gitId":"santosh3007"},"content":"        assertCommandFailure(editTaskCommand, model, EditTaskCommand.MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2022-10-12"},{"lineNumber":114,"author":{"gitId":"santosh3007"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":115,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":116,"author":{"gitId":"santosh3007"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":117,"author":{"gitId":"santosh3007"},"content":"    public void execute_duplicateTaskFilteredList_failure() {","lastModifiedDate":"2022-10-12"},{"lineNumber":118,"author":{"gitId":"jasonqiu212"},"content":"        showTaskAtIndex(model, INDEX_SECOND_TASK);","lastModifiedDate":"2022-10-28"},{"lineNumber":119,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":120,"author":{"gitId":"santosh3007"},"content":"        // edit task in filtered list into a duplicate in address book","lastModifiedDate":"2022-10-12"},{"lineNumber":121,"author":{"gitId":"santosh3007"},"content":"        Task taskInList \u003d model.getAddressBook().getTaskList().get(INDEX_SECOND_TASK.getZeroBased());","lastModifiedDate":"2022-10-12"},{"lineNumber":122,"author":{"gitId":"santosh3007"},"content":"        EditTaskCommand editTaskCommand \u003d new EditTaskCommand(INDEX_FIRST_TASK,","lastModifiedDate":"2022-10-12"},{"lineNumber":123,"author":{"gitId":"santosh3007"},"content":"                new EditTaskDescriptorBuilder(taskInList).build());","lastModifiedDate":"2022-10-12"},{"lineNumber":124,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":125,"author":{"gitId":"santosh3007"},"content":"        assertCommandFailure(editTaskCommand, model, EditTaskCommand.MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2022-10-12"},{"lineNumber":126,"author":{"gitId":"santosh3007"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":127,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":128,"author":{"gitId":"santosh3007"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":129,"author":{"gitId":"santosh3007"},"content":"    public void execute_invalidTaskIndexUnfilteredList_failure() {","lastModifiedDate":"2022-10-12"},{"lineNumber":130,"author":{"gitId":"santosh3007"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredTaskList().size() + 1);","lastModifiedDate":"2022-10-12"},{"lineNumber":131,"author":{"gitId":"santosh3007"},"content":"        EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-10-12"},{"lineNumber":132,"author":{"gitId":"santosh3007"},"content":"        EditTaskCommand editTaskCommand \u003d new EditTaskCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2022-10-12"},{"lineNumber":133,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":134,"author":{"gitId":"santosh3007"},"content":"        assertCommandFailure(editTaskCommand, model, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-12"},{"lineNumber":135,"author":{"gitId":"santosh3007"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":136,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":137,"author":{"gitId":"santosh3007"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":138,"author":{"gitId":"santosh3007"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2022-10-12"},{"lineNumber":139,"author":{"gitId":"santosh3007"},"content":"     * but smaller than size of address book","lastModifiedDate":"2022-10-12"},{"lineNumber":140,"author":{"gitId":"santosh3007"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":141,"author":{"gitId":"santosh3007"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":142,"author":{"gitId":"santosh3007"},"content":"    public void execute_invalidTaskIndexFilteredList_failure() {","lastModifiedDate":"2022-10-12"},{"lineNumber":143,"author":{"gitId":"santosh3007"},"content":"        showTaskAtIndex(model, INDEX_FIRST_TASK);","lastModifiedDate":"2022-10-12"},{"lineNumber":144,"author":{"gitId":"santosh3007"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_TASK;","lastModifiedDate":"2022-10-12"},{"lineNumber":145,"author":{"gitId":"santosh3007"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2022-10-12"},{"lineNumber":146,"author":{"gitId":"santosh3007"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getTaskList().size());","lastModifiedDate":"2022-10-12"},{"lineNumber":147,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":148,"author":{"gitId":"santosh3007"},"content":"        EditTaskCommand editTaskCommand \u003d new EditTaskCommand(outOfBoundIndex,","lastModifiedDate":"2022-10-12"},{"lineNumber":149,"author":{"gitId":"santosh3007"},"content":"                new EditTaskDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2022-10-12"},{"lineNumber":150,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":151,"author":{"gitId":"santosh3007"},"content":"        assertCommandFailure(editTaskCommand, model, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-12"},{"lineNumber":152,"author":{"gitId":"santosh3007"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":153,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":154,"author":{"gitId":"santosh3007"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":155,"author":{"gitId":"santosh3007"},"content":"    public void equals() {","lastModifiedDate":"2022-10-12"},{"lineNumber":156,"author":{"gitId":"santosh3007"},"content":"        final EditTaskCommand standardCommand \u003d new EditTaskCommand(INDEX_FIRST_TASK, DESC_TASK_1);","lastModifiedDate":"2022-10-12"},{"lineNumber":157,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":158,"author":{"gitId":"santosh3007"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-12"},{"lineNumber":159,"author":{"gitId":"santosh3007"},"content":"        EditTaskDescriptor copyDescriptor \u003d new EditTaskDescriptor(DESC_TASK_1);","lastModifiedDate":"2022-10-12"},{"lineNumber":160,"author":{"gitId":"santosh3007"},"content":"        EditTaskCommand commandWithSameValues \u003d new EditTaskCommand(INDEX_FIRST_TASK, copyDescriptor);","lastModifiedDate":"2022-10-12"},{"lineNumber":161,"author":{"gitId":"santosh3007"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2022-10-12"},{"lineNumber":162,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":163,"author":{"gitId":"santosh3007"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-12"},{"lineNumber":164,"author":{"gitId":"santosh3007"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2022-10-12"},{"lineNumber":165,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":166,"author":{"gitId":"santosh3007"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-12"},{"lineNumber":167,"author":{"gitId":"santosh3007"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2022-10-12"},{"lineNumber":168,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":169,"author":{"gitId":"santosh3007"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-12"},{"lineNumber":170,"author":{"gitId":"santosh3007"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2022-10-12"},{"lineNumber":171,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":172,"author":{"gitId":"santosh3007"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2022-10-12"},{"lineNumber":173,"author":{"gitId":"santosh3007"},"content":"        assertFalse(standardCommand.equals(new EditTaskCommand(INDEX_SECOND_TASK, DESC_TASK_1)));","lastModifiedDate":"2022-10-12"},{"lineNumber":174,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":175,"author":{"gitId":"santosh3007"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2022-10-12"},{"lineNumber":176,"author":{"gitId":"santosh3007"},"content":"        assertFalse(standardCommand.equals(new EditTaskCommand(INDEX_FIRST_TASK, DESC_TASK_2)));","lastModifiedDate":"2022-10-12"},{"lineNumber":177,"author":{"gitId":"santosh3007"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":178,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":179,"author":{"gitId":"santosh3007"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"jasonqiu212":3,"santosh3007":162,"peppapighs":2,"yunruu":12}},{"path":"src/test/java/swift/logic/commands/EditTaskDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"santosh3007"},"content":"package swift.logic.commands;","lastModifiedDate":"2022-10-24"},{"lineNumber":2,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":3,"author":{"gitId":"santosh3007"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-24"},{"lineNumber":4,"author":{"gitId":"santosh3007"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-24"},{"lineNumber":5,"author":{"gitId":"santosh3007"},"content":"import static swift.logic.commands.CommandTestUtil.DESC_TASK_1;","lastModifiedDate":"2022-10-24"},{"lineNumber":6,"author":{"gitId":"santosh3007"},"content":"import static swift.logic.commands.CommandTestUtil.DESC_TASK_2;","lastModifiedDate":"2022-10-24"},{"lineNumber":7,"author":{"gitId":"santosh3007"},"content":"import static swift.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-10-24"},{"lineNumber":8,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":9,"author":{"gitId":"santosh3007"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-24"},{"lineNumber":10,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":11,"author":{"gitId":"santosh3007"},"content":"import swift.logic.commands.EditTaskCommand.EditTaskDescriptor;","lastModifiedDate":"2022-10-24"},{"lineNumber":12,"author":{"gitId":"santosh3007"},"content":"import swift.testutil.EditTaskDescriptorBuilder;","lastModifiedDate":"2022-10-24"},{"lineNumber":13,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":14,"author":{"gitId":"santosh3007"},"content":"public class EditTaskDescriptorTest {","lastModifiedDate":"2022-10-24"},{"lineNumber":15,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":16,"author":{"gitId":"santosh3007"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":17,"author":{"gitId":"santosh3007"},"content":"    public void equals() {","lastModifiedDate":"2022-10-24"},{"lineNumber":18,"author":{"gitId":"santosh3007"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-24"},{"lineNumber":19,"author":{"gitId":"santosh3007"},"content":"        EditTaskDescriptor descriptorWithSameValues \u003d new EditTaskDescriptor(DESC_TASK_1);","lastModifiedDate":"2022-10-24"},{"lineNumber":20,"author":{"gitId":"santosh3007"},"content":"        assertTrue(DESC_TASK_1.equals(descriptorWithSameValues));","lastModifiedDate":"2022-10-24"},{"lineNumber":21,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":22,"author":{"gitId":"santosh3007"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-24"},{"lineNumber":23,"author":{"gitId":"santosh3007"},"content":"        assertTrue(DESC_TASK_1.equals(DESC_TASK_1));","lastModifiedDate":"2022-10-24"},{"lineNumber":24,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":25,"author":{"gitId":"santosh3007"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-24"},{"lineNumber":26,"author":{"gitId":"santosh3007"},"content":"        assertFalse(DESC_TASK_1.equals(null));","lastModifiedDate":"2022-10-24"},{"lineNumber":27,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":28,"author":{"gitId":"santosh3007"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-24"},{"lineNumber":29,"author":{"gitId":"santosh3007"},"content":"        assertFalse(DESC_TASK_1.equals(5));","lastModifiedDate":"2022-10-24"},{"lineNumber":30,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":31,"author":{"gitId":"santosh3007"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2022-10-24"},{"lineNumber":32,"author":{"gitId":"santosh3007"},"content":"        assertFalse(DESC_TASK_1.equals(DESC_TASK_2));","lastModifiedDate":"2022-10-24"},{"lineNumber":33,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":34,"author":{"gitId":"santosh3007"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2022-10-24"},{"lineNumber":35,"author":{"gitId":"santosh3007"},"content":"        EditTaskDescriptor editedAmy \u003d new EditTaskDescriptorBuilder(","lastModifiedDate":"2022-10-24"},{"lineNumber":36,"author":{"gitId":"santosh3007"},"content":"                DESC_TASK_1).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-10-24"},{"lineNumber":37,"author":{"gitId":"santosh3007"},"content":"        assertFalse(DESC_TASK_1.equals(editedAmy));","lastModifiedDate":"2022-10-24"},{"lineNumber":38,"author":{"gitId":"santosh3007"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":39,"author":{"gitId":"santosh3007"},"content":"}","lastModifiedDate":"2022-10-24"}],"authorContributionMap":{"santosh3007":39}},{"path":"src/test/java/swift/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.logic.commands;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-01"},{"lineNumber":4,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2022-10-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"peppapighs"},"content":"import swift.model.Model;","lastModifiedDate":"2022-10-01"},{"lineNumber":9,"author":{"gitId":"peppapighs"},"content":"import swift.model.ModelManager;","lastModifiedDate":"2022-10-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"yunruu"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, CommandType.EXIT);","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"peppapighs":5,"-":14,"yunruu":1}},{"path":"src/test/java/swift/logic/commands/FindContactCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.logic.commands;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"peppapighs"},"content":"import static swift.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2022-10-01"},{"lineNumber":7,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-01"},{"lineNumber":8,"author":{"gitId":"peppapighs"},"content":"import static swift.testutil.TypicalPersons.CARL;","lastModifiedDate":"2022-10-01"},{"lineNumber":9,"author":{"gitId":"peppapighs"},"content":"import static swift.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2022-10-01"},{"lineNumber":10,"author":{"gitId":"peppapighs"},"content":"import static swift.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2022-10-01"},{"lineNumber":11,"author":{"gitId":"peppapighs"},"content":"import static swift.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-10-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"peppapighs"},"content":"import swift.model.Model;","lastModifiedDate":"2022-10-01"},{"lineNumber":19,"author":{"gitId":"peppapighs"},"content":"import swift.model.ModelManager;","lastModifiedDate":"2022-10-01"},{"lineNumber":20,"author":{"gitId":"peppapighs"},"content":"import swift.model.UserPrefs;","lastModifiedDate":"2022-10-01"},{"lineNumber":21,"author":{"gitId":"jasonqiu212"},"content":"import swift.model.person.PersonNameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"jasonqiu212"},"content":"public class FindContactCommandTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"jasonqiu212"},"content":"        PersonNameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"jasonqiu212"},"content":"                new PersonNameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"jasonqiu212"},"content":"        PersonNameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"jasonqiu212"},"content":"                new PersonNameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"jasonqiu212"},"content":"        FindContactCommand findFirstCommand \u003d new FindContactCommand(firstPredicate);","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"jasonqiu212"},"content":"        FindContactCommand findSecondCommand \u003d new FindContactCommand(secondPredicate);","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"jasonqiu212"},"content":"        FindContactCommand findFirstCommandCopy \u003d new FindContactCommand(firstPredicate);","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"yunruu"},"content":"        CommandResult commandResult \u003d new CommandResult(expectedMessage, CommandType.CONTACTS);","lastModifiedDate":"2022-10-27"},{"lineNumber":61,"author":{"gitId":"jasonqiu212"},"content":"        PersonNameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"jasonqiu212"},"content":"        FindContactCommand command \u003d new FindContactCommand(predicate);","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"yunruu"},"content":"        assertCommandSuccess(command, model, commandResult, expectedModel);","lastModifiedDate":"2022-10-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"yunruu"},"content":"        CommandResult commandResult \u003d new CommandResult(expectedMessage, CommandType.CONTACTS);","lastModifiedDate":"2022-10-27"},{"lineNumber":72,"author":{"gitId":"jasonqiu212"},"content":"        PersonNameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"jasonqiu212"},"content":"        FindContactCommand command \u003d new FindContactCommand(predicate);","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"yunruu"},"content":"        assertCommandSuccess(command, model, commandResult, expectedModel);","lastModifiedDate":"2022-10-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":82,"author":{"gitId":"jasonqiu212"},"content":"    private PersonNameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"jasonqiu212"},"content":"        return new PersonNameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"jasonqiu212":15,"peppapighs":10,"-":56,"yunruu":4}},{"path":"src/test/java/swift/logic/commands/FindTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jasonqiu212"},"content":"package swift.logic.commands;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"jasonqiu212"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"jasonqiu212"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"jasonqiu212"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"jasonqiu212"},"content":"import static swift.commons.core.Messages.MESSAGE_TASKS_LISTED_OVERVIEW;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"jasonqiu212"},"content":"import static swift.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"jasonqiu212"},"content":"import static swift.testutil.TypicalTasks.BUY_MILK;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"jasonqiu212"},"content":"import static swift.testutil.TypicalTasks.CS2103T;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"jasonqiu212"},"content":"import static swift.testutil.TypicalTasks.getTypicalAddressBook;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"jasonqiu212"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"jasonqiu212"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"jasonqiu212"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"jasonqiu212"},"content":"import swift.model.Model;","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"jasonqiu212"},"content":"import swift.model.ModelManager;","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"jasonqiu212"},"content":"import swift.model.UserPrefs;","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"jasonqiu212"},"content":"import swift.model.task.TaskNameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"jasonqiu212"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"jasonqiu212"},"content":" * Contains integration tests (interaction with the Model) for {@code FindTaskCommand}.","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"jasonqiu212"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"jasonqiu212"},"content":"public class FindTaskCommandTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"jasonqiu212"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"jasonqiu212"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"jasonqiu212"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"jasonqiu212"},"content":"    public void equals() {","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"jasonqiu212"},"content":"        TaskNameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"jasonqiu212"},"content":"                new TaskNameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"jasonqiu212"},"content":"        TaskNameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"jasonqiu212"},"content":"                new TaskNameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"jasonqiu212"},"content":"        FindTaskCommand findFirstCommand \u003d new FindTaskCommand(firstPredicate);","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"jasonqiu212"},"content":"        FindTaskCommand findSecondCommand \u003d new FindTaskCommand(secondPredicate);","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"jasonqiu212"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"jasonqiu212"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"jasonqiu212"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"jasonqiu212"},"content":"        FindTaskCommand findFirstCommandCopy \u003d new FindTaskCommand(firstPredicate);","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"jasonqiu212"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"jasonqiu212"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"jasonqiu212"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"jasonqiu212"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"jasonqiu212"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"jasonqiu212"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"jasonqiu212"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"jasonqiu212"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"jasonqiu212"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"jasonqiu212"},"content":"    public void execute_zeroKeywords_noTasksFound() {","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"jasonqiu212"},"content":"        String expectedMessage \u003d String.format(MESSAGE_TASKS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":60,"author":{"gitId":"yunruu"},"content":"        CommandResult commandResult \u003d new CommandResult(expectedMessage, CommandType.TASKS);","lastModifiedDate":"2022-10-27"},{"lineNumber":61,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":62,"author":{"gitId":"jasonqiu212"},"content":"        TaskNameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"jasonqiu212"},"content":"        FindTaskCommand command \u003d new FindTaskCommand(predicate);","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"jasonqiu212"},"content":"        expectedModel.updateFilteredTaskList(predicate);","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"yunruu"},"content":"        assertCommandSuccess(command, model, commandResult, expectedModel);","lastModifiedDate":"2022-10-26"},{"lineNumber":66,"author":{"gitId":"jasonqiu212"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredTaskList());","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"jasonqiu212"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"jasonqiu212"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"jasonqiu212"},"content":"    public void execute_multipleKeywords_multipleTasksFound() {","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"jasonqiu212"},"content":"        String expectedMessage \u003d String.format(MESSAGE_TASKS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":73,"author":{"gitId":"yunruu"},"content":"        CommandResult commandResult \u003d new CommandResult(expectedMessage, CommandType.TASKS);","lastModifiedDate":"2022-10-27"},{"lineNumber":74,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":75,"author":{"gitId":"jasonqiu212"},"content":"        TaskNameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Milk CS2103T\");","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"jasonqiu212"},"content":"        FindTaskCommand command \u003d new FindTaskCommand(predicate);","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"jasonqiu212"},"content":"        expectedModel.updateFilteredTaskList(predicate);","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"yunruu"},"content":"        assertCommandSuccess(command, model, commandResult, expectedModel);","lastModifiedDate":"2022-10-26"},{"lineNumber":79,"author":{"gitId":"jasonqiu212"},"content":"        assertEquals(Arrays.asList(CS2103T, BUY_MILK), model.getFilteredTaskList());","lastModifiedDate":"2022-10-28"},{"lineNumber":80,"author":{"gitId":"jasonqiu212"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"jasonqiu212"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"jasonqiu212"},"content":"     * Parses {@code userInput} into a {@code TaskNameContainsKeywordsPredicate}.","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"jasonqiu212"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"jasonqiu212"},"content":"    private TaskNameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"jasonqiu212"},"content":"        return new TaskNameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2022-10-10"},{"lineNumber":87,"author":{"gitId":"jasonqiu212"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":88,"author":{"gitId":"jasonqiu212"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"jasonqiu212":80,"yunruu":8}},{"path":"src/test/java/swift/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.logic.commands;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-01"},{"lineNumber":4,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2022-10-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"peppapighs"},"content":"import swift.model.Model;","lastModifiedDate":"2022-10-01"},{"lineNumber":9,"author":{"gitId":"peppapighs"},"content":"import swift.model.ModelManager;","lastModifiedDate":"2022-10-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"yunruu"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, CommandType.HELP);","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"peppapighs":5,"-":14,"yunruu":1}},{"path":"src/test/java/swift/logic/commands/ListContactCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.logic.commands;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-01"},{"lineNumber":4,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2022-10-01"},{"lineNumber":5,"author":{"gitId":"yunruu"},"content":"import static swift.logic.commands.ListContactCommand.MESSAGE_SUCCESS;","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"ShenyiCui"},"content":"import static swift.testutil.TypicalPersonIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"peppapighs"},"content":"import static swift.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-10-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"peppapighs"},"content":"import swift.model.Model;","lastModifiedDate":"2022-10-01"},{"lineNumber":13,"author":{"gitId":"peppapighs"},"content":"import swift.model.ModelManager;","lastModifiedDate":"2022-10-01"},{"lineNumber":14,"author":{"gitId":"peppapighs"},"content":"import swift.model.UserPrefs;","lastModifiedDate":"2022-10-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"peppapighs"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListContactCommand.","lastModifiedDate":"2022-10-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"yunruu"},"content":"public class ListContactCommandTest {","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":32,"author":{"gitId":"yunruu"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_SUCCESS, CommandType.CONTACTS);","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"yunruu"},"content":"        assertCommandSuccess(new ListContactCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2022-10-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":39,"author":{"gitId":"yunruu"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_SUCCESS, CommandType.CONTACTS);","lastModifiedDate":"2022-10-27"},{"lineNumber":40,"author":{"gitId":"yunruu"},"content":"        assertCommandSuccess(new ListContactCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2022-10-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"ShenyiCui":1,"peppapighs":8,"-":27,"yunruu":6}},{"path":"src/test/java/swift/logic/commands/ListTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yunruu"},"content":"package swift.logic.commands;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"yunruu"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"yunruu"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"yunruu"},"content":"import static swift.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"yunruu"},"content":"import static swift.logic.commands.CommandTestUtil.showTaskAtIndex;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"yunruu"},"content":"import static swift.testutil.TypicalTaskIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"yunruu"},"content":"import static swift.testutil.TypicalTasks.getTypicalAddressBook;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"yunruu"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"yunruu"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"yunruu"},"content":"import swift.commons.core.Messages;","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"yunruu"},"content":"import swift.model.Model;","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"yunruu"},"content":"import swift.model.ModelManager;","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"yunruu"},"content":"import swift.model.UserPrefs;","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"yunruu"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"yunruu"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListContactCommand.","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"yunruu"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"yunruu"},"content":"public class ListTaskCommandTest {","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"yunruu"},"content":"    private Model model;","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"yunruu"},"content":"    private Model expectedModel;","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"yunruu"},"content":"    @BeforeEach","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"yunruu"},"content":"    public void setUp() {","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"yunruu"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"yunruu"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"yunruu"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"yunruu"},"content":"    public void equals() {","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"yunruu"},"content":"        ListTaskCommand firstCommand \u003d new ListTaskCommand();","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"yunruu"},"content":"        ListTaskCommand secondCommand \u003d new ListTaskCommand();","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"yunruu"},"content":"        // same object list command -\u003e returns true","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"yunruu"},"content":"        assertEquals(firstCommand, secondCommand);","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"yunruu"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"yunruu"},"content":"        assertNotEquals(firstCommand, null);","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"yunruu"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"yunruu"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"jasonqiu212"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_TASKS_LISTED_OVERVIEW, 4);","lastModifiedDate":"2022-10-26"},{"lineNumber":47,"author":{"gitId":"yunruu"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage, CommandType.TASKS);","lastModifiedDate":"2022-10-27"},{"lineNumber":48,"author":{"gitId":"yunruu"},"content":"        assertCommandSuccess(new ListTaskCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2022-10-26"},{"lineNumber":49,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"yunruu"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"yunruu"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"yunruu"},"content":"        showTaskAtIndex(model, INDEX_FIRST_TASK);","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"jasonqiu212"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_TASKS_LISTED_OVERVIEW, 4);","lastModifiedDate":"2022-10-26"},{"lineNumber":55,"author":{"gitId":"yunruu"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage, CommandType.TASKS);","lastModifiedDate":"2022-10-27"},{"lineNumber":56,"author":{"gitId":"yunruu"},"content":"        assertCommandSuccess(new ListTaskCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2022-10-26"},{"lineNumber":57,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"yunruu"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"jasonqiu212":2,"yunruu":56}},{"path":"src/test/java/swift/logic/commands/MarkTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"santosh3007"},"content":"package swift.logic.commands;","lastModifiedDate":"2022-11-06"},{"lineNumber":2,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":3,"author":{"gitId":"santosh3007"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-11-06"},{"lineNumber":4,"author":{"gitId":"santosh3007"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-11-06"},{"lineNumber":5,"author":{"gitId":"santosh3007"},"content":"import static swift.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-11-06"},{"lineNumber":6,"author":{"gitId":"santosh3007"},"content":"import static swift.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-11-06"},{"lineNumber":7,"author":{"gitId":"santosh3007"},"content":"import static swift.testutil.TypicalTaskIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2022-11-06"},{"lineNumber":8,"author":{"gitId":"santosh3007"},"content":"import static swift.testutil.TypicalTaskIndexes.INDEX_SECOND_TASK;","lastModifiedDate":"2022-11-06"},{"lineNumber":9,"author":{"gitId":"santosh3007"},"content":"import static swift.testutil.TypicalTasks.getTypicalAddressBook;","lastModifiedDate":"2022-11-06"},{"lineNumber":10,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":11,"author":{"gitId":"santosh3007"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-11-06"},{"lineNumber":12,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":13,"author":{"gitId":"santosh3007"},"content":"import swift.commons.core.Messages;","lastModifiedDate":"2022-11-06"},{"lineNumber":14,"author":{"gitId":"santosh3007"},"content":"import swift.commons.core.index.Index;","lastModifiedDate":"2022-11-06"},{"lineNumber":15,"author":{"gitId":"santosh3007"},"content":"import swift.model.AddressBook;","lastModifiedDate":"2022-11-06"},{"lineNumber":16,"author":{"gitId":"santosh3007"},"content":"import swift.model.Model;","lastModifiedDate":"2022-11-06"},{"lineNumber":17,"author":{"gitId":"santosh3007"},"content":"import swift.model.ModelManager;","lastModifiedDate":"2022-11-06"},{"lineNumber":18,"author":{"gitId":"santosh3007"},"content":"import swift.model.UserPrefs;","lastModifiedDate":"2022-11-06"},{"lineNumber":19,"author":{"gitId":"santosh3007"},"content":"import swift.model.task.Task;","lastModifiedDate":"2022-11-06"},{"lineNumber":20,"author":{"gitId":"santosh3007"},"content":"import swift.testutil.TaskBuilder;","lastModifiedDate":"2022-11-06"},{"lineNumber":21,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":22,"author":{"gitId":"santosh3007"},"content":"/**","lastModifiedDate":"2022-11-06"},{"lineNumber":23,"author":{"gitId":"santosh3007"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2022-11-06"},{"lineNumber":24,"author":{"gitId":"santosh3007"},"content":" * {@code MarkTaskCommand}.","lastModifiedDate":"2022-11-06"},{"lineNumber":25,"author":{"gitId":"santosh3007"},"content":" */","lastModifiedDate":"2022-11-06"},{"lineNumber":26,"author":{"gitId":"santosh3007"},"content":"public class MarkTaskCommandTest {","lastModifiedDate":"2022-11-06"},{"lineNumber":27,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":28,"author":{"gitId":"santosh3007"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-11-06"},{"lineNumber":29,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":30,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":31,"author":{"gitId":"santosh3007"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":32,"author":{"gitId":"santosh3007"},"content":"    public void execute_validIndex_success() {","lastModifiedDate":"2022-11-06"},{"lineNumber":33,"author":{"gitId":"santosh3007"},"content":"        Index indexLastTask \u003d Index.fromOneBased(model.getFilteredTaskList().size());","lastModifiedDate":"2022-11-06"},{"lineNumber":34,"author":{"gitId":"santosh3007"},"content":"        Task lastTask \u003d model.getFilteredTaskList().get(indexLastTask.getZeroBased());","lastModifiedDate":"2022-11-06"},{"lineNumber":35,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":36,"author":{"gitId":"santosh3007"},"content":"        TaskBuilder taskInList \u003d new TaskBuilder(lastTask);","lastModifiedDate":"2022-11-06"},{"lineNumber":37,"author":{"gitId":"santosh3007"},"content":"        Task markedTask \u003d taskInList.withIsDone(true).build();","lastModifiedDate":"2022-11-06"},{"lineNumber":38,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":39,"author":{"gitId":"santosh3007"},"content":"        MarkTaskCommand markTaskCommand \u003d new MarkTaskCommand(indexLastTask);","lastModifiedDate":"2022-11-06"},{"lineNumber":40,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":41,"author":{"gitId":"santosh3007"},"content":"        String expectedMessage \u003d","lastModifiedDate":"2022-11-06"},{"lineNumber":42,"author":{"gitId":"santosh3007"},"content":"                String.format(MarkTaskCommand.MESSAGE_MARK_TASK_SUCCESS, markedTask);","lastModifiedDate":"2022-11-06"},{"lineNumber":43,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":44,"author":{"gitId":"santosh3007"},"content":"        CommandResult commandResult \u003d new CommandResult(expectedMessage, CommandType.TASKS);","lastModifiedDate":"2022-11-06"},{"lineNumber":45,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":46,"author":{"gitId":"santosh3007"},"content":"        Model expectedModel \u003d","lastModifiedDate":"2022-11-06"},{"lineNumber":47,"author":{"gitId":"santosh3007"},"content":"                new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-11-06"},{"lineNumber":48,"author":{"gitId":"santosh3007"},"content":"        expectedModel.setTask(lastTask, markedTask);","lastModifiedDate":"2022-11-06"},{"lineNumber":49,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":50,"author":{"gitId":"santosh3007"},"content":"        assertCommandSuccess(markTaskCommand, model, commandResult, expectedModel);","lastModifiedDate":"2022-11-06"},{"lineNumber":51,"author":{"gitId":"santosh3007"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":52,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":53,"author":{"gitId":"santosh3007"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":54,"author":{"gitId":"santosh3007"},"content":"    public void execute_invalidIndex_failure() {","lastModifiedDate":"2022-11-06"},{"lineNumber":55,"author":{"gitId":"santosh3007"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredTaskList().size() + 1);","lastModifiedDate":"2022-11-06"},{"lineNumber":56,"author":{"gitId":"santosh3007"},"content":"        MarkTaskCommand markTaskCommand \u003d new MarkTaskCommand(outOfBoundIndex);","lastModifiedDate":"2022-11-06"},{"lineNumber":57,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":58,"author":{"gitId":"santosh3007"},"content":"        assertCommandFailure(markTaskCommand, model,","lastModifiedDate":"2022-11-06"},{"lineNumber":59,"author":{"gitId":"santosh3007"},"content":"                Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2022-11-06"},{"lineNumber":60,"author":{"gitId":"santosh3007"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":61,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":62,"author":{"gitId":"santosh3007"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":63,"author":{"gitId":"santosh3007"},"content":"    public void execute_markedTask_failure() {","lastModifiedDate":"2022-11-06"},{"lineNumber":64,"author":{"gitId":"santosh3007"},"content":"        Index indexLastTask \u003d Index.fromOneBased(model.getFilteredTaskList().size());","lastModifiedDate":"2022-11-06"},{"lineNumber":65,"author":{"gitId":"santosh3007"},"content":"        Task lastTask \u003d model.getFilteredTaskList().get(indexLastTask.getZeroBased());","lastModifiedDate":"2022-11-06"},{"lineNumber":66,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":67,"author":{"gitId":"santosh3007"},"content":"        TaskBuilder taskInList \u003d new TaskBuilder(lastTask);","lastModifiedDate":"2022-11-06"},{"lineNumber":68,"author":{"gitId":"santosh3007"},"content":"        Task markedTask \u003d taskInList.withIsDone(true).build();","lastModifiedDate":"2022-11-06"},{"lineNumber":69,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":70,"author":{"gitId":"santosh3007"},"content":"        model.setTask(lastTask, markedTask);","lastModifiedDate":"2022-11-06"},{"lineNumber":71,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":72,"author":{"gitId":"santosh3007"},"content":"        MarkTaskCommand markTaskCommand \u003d new MarkTaskCommand(indexLastTask);","lastModifiedDate":"2022-11-06"},{"lineNumber":73,"author":{"gitId":"santosh3007"},"content":"        assertCommandFailure(markTaskCommand, model, MarkTaskCommand.MESSAGE_TASK_ALREADY_COMPLETED);","lastModifiedDate":"2022-11-06"},{"lineNumber":74,"author":{"gitId":"santosh3007"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":75,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":76,"author":{"gitId":"santosh3007"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":77,"author":{"gitId":"santosh3007"},"content":"    public void equals() {","lastModifiedDate":"2022-11-06"},{"lineNumber":78,"author":{"gitId":"santosh3007"},"content":"        MarkTaskCommand markFirstTaskCommand \u003d new MarkTaskCommand(INDEX_FIRST_TASK);","lastModifiedDate":"2022-11-06"},{"lineNumber":79,"author":{"gitId":"santosh3007"},"content":"        MarkTaskCommand markSecondTaskCommand \u003d new MarkTaskCommand(INDEX_SECOND_TASK);","lastModifiedDate":"2022-11-06"},{"lineNumber":80,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":81,"author":{"gitId":"santosh3007"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-11-06"},{"lineNumber":82,"author":{"gitId":"santosh3007"},"content":"        assertTrue(markFirstTaskCommand.equals(markFirstTaskCommand));","lastModifiedDate":"2022-11-06"},{"lineNumber":83,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":84,"author":{"gitId":"santosh3007"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-11-06"},{"lineNumber":85,"author":{"gitId":"santosh3007"},"content":"        MarkTaskCommand markFirstTaskCommandCopy \u003d new MarkTaskCommand(INDEX_FIRST_TASK);","lastModifiedDate":"2022-11-06"},{"lineNumber":86,"author":{"gitId":"santosh3007"},"content":"        assertTrue(markFirstTaskCommand.equals(markFirstTaskCommandCopy));","lastModifiedDate":"2022-11-06"},{"lineNumber":87,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":88,"author":{"gitId":"santosh3007"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-11-06"},{"lineNumber":89,"author":{"gitId":"santosh3007"},"content":"        assertFalse(markFirstTaskCommand.equals(1));","lastModifiedDate":"2022-11-06"},{"lineNumber":90,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":91,"author":{"gitId":"santosh3007"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-11-06"},{"lineNumber":92,"author":{"gitId":"santosh3007"},"content":"        assertFalse(markFirstTaskCommand.equals(null));","lastModifiedDate":"2022-11-06"},{"lineNumber":93,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":94,"author":{"gitId":"santosh3007"},"content":"        // different task -\u003e returns false","lastModifiedDate":"2022-11-06"},{"lineNumber":95,"author":{"gitId":"santosh3007"},"content":"        assertFalse(markFirstTaskCommand.equals(markSecondTaskCommand));","lastModifiedDate":"2022-11-06"},{"lineNumber":96,"author":{"gitId":"santosh3007"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":97,"author":{"gitId":"santosh3007"},"content":"}","lastModifiedDate":"2022-11-06"}],"authorContributionMap":{"santosh3007":97}},{"path":"src/test/java/swift/logic/commands/SelectContactCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ShenyiCui"},"content":"package swift.logic.commands;","lastModifiedDate":"2022-10-23"},{"lineNumber":2,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":3,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":4,"author":{"gitId":"ShenyiCui"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-23"},{"lineNumber":5,"author":{"gitId":"ShenyiCui"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-23"},{"lineNumber":6,"author":{"gitId":"ShenyiCui"},"content":"import static swift.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-23"},{"lineNumber":7,"author":{"gitId":"ShenyiCui"},"content":"import static swift.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-23"},{"lineNumber":8,"author":{"gitId":"ShenyiCui"},"content":"import static swift.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2022-10-23"},{"lineNumber":9,"author":{"gitId":"ShenyiCui"},"content":"import static swift.testutil.TypicalIntegratedAddressBook.PERSON1_UUID;","lastModifiedDate":"2022-10-23"},{"lineNumber":10,"author":{"gitId":"ShenyiCui"},"content":"import static swift.testutil.TypicalIntegratedAddressBook.PERSON2_UUID;","lastModifiedDate":"2022-10-23"},{"lineNumber":11,"author":{"gitId":"ShenyiCui"},"content":"import static swift.testutil.TypicalIntegratedAddressBook.TASK3_UUID;","lastModifiedDate":"2022-10-23"},{"lineNumber":12,"author":{"gitId":"ShenyiCui"},"content":"import static swift.testutil.TypicalIntegratedAddressBook.getTypicalAddressBook;","lastModifiedDate":"2022-10-23"},{"lineNumber":13,"author":{"gitId":"ShenyiCui"},"content":"import static swift.testutil.TypicalPersonIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-23"},{"lineNumber":14,"author":{"gitId":"ShenyiCui"},"content":"import static swift.testutil.TypicalPersonIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2022-10-23"},{"lineNumber":15,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":16,"author":{"gitId":"ShenyiCui"},"content":"import java.util.UUID;","lastModifiedDate":"2022-10-23"},{"lineNumber":17,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":18,"author":{"gitId":"ShenyiCui"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-23"},{"lineNumber":19,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":20,"author":{"gitId":"ShenyiCui"},"content":"import swift.commons.core.Messages;","lastModifiedDate":"2022-10-23"},{"lineNumber":21,"author":{"gitId":"ShenyiCui"},"content":"import swift.commons.core.index.Index;","lastModifiedDate":"2022-10-23"},{"lineNumber":22,"author":{"gitId":"ShenyiCui"},"content":"import swift.model.Model;","lastModifiedDate":"2022-10-23"},{"lineNumber":23,"author":{"gitId":"ShenyiCui"},"content":"import swift.model.ModelManager;","lastModifiedDate":"2022-10-23"},{"lineNumber":24,"author":{"gitId":"ShenyiCui"},"content":"import swift.model.UserPrefs;","lastModifiedDate":"2022-10-23"},{"lineNumber":25,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":26,"author":{"gitId":"ShenyiCui"},"content":"/**","lastModifiedDate":"2022-10-23"},{"lineNumber":27,"author":{"gitId":"ShenyiCui"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2022-10-23"},{"lineNumber":28,"author":{"gitId":"ShenyiCui"},"content":" * {@code SelectContactCommand}.","lastModifiedDate":"2022-10-23"},{"lineNumber":29,"author":{"gitId":"ShenyiCui"},"content":" */","lastModifiedDate":"2022-10-23"},{"lineNumber":30,"author":{"gitId":"ShenyiCui"},"content":"public class SelectContactCommandTest {","lastModifiedDate":"2022-10-23"},{"lineNumber":31,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":32,"author":{"gitId":"ShenyiCui"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-23"},{"lineNumber":33,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":34,"author":{"gitId":"ShenyiCui"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":35,"author":{"gitId":"ShenyiCui"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2022-10-23"},{"lineNumber":36,"author":{"gitId":"ShenyiCui"},"content":"        SelectContactCommand selectContactCommand \u003d new SelectContactCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2022-10-23"},{"lineNumber":37,"author":{"gitId":"ShenyiCui"},"content":"        String expectedMessage \u003d SelectContactCommand.MESSAGE_SELECT_CONTACT_SUCCESS;","lastModifiedDate":"2022-10-23"},{"lineNumber":38,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":39,"author":{"gitId":"yunruu"},"content":"        CommandResult commandResult \u003d new CommandResult(expectedMessage, CommandType.SELECT_CONTACT);","lastModifiedDate":"2022-10-27"},{"lineNumber":40,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":41,"author":{"gitId":"ShenyiCui"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-23"},{"lineNumber":42,"author":{"gitId":"ShenyiCui"},"content":"        expectedModel.updateFilteredPersonList((p) -\u003e p.getId().equals(UUID.fromString(PERSON2_UUID)));","lastModifiedDate":"2022-10-23"},{"lineNumber":43,"author":{"gitId":"ShenyiCui"},"content":"        expectedModel.updateFilteredTaskList((t) -\u003e t.getId().equals(UUID.fromString(TASK3_UUID)));","lastModifiedDate":"2022-10-23"},{"lineNumber":44,"author":{"gitId":"ShenyiCui"},"content":"        expectedModel.updateFilteredBridgeList((b) -\u003e b.getPersonId().equals(UUID.fromString(PERSON2_UUID)));","lastModifiedDate":"2022-10-23"},{"lineNumber":45,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":46,"author":{"gitId":"yunruu"},"content":"        assertCommandSuccess(selectContactCommand, model, commandResult, expectedModel);","lastModifiedDate":"2022-10-26"},{"lineNumber":47,"author":{"gitId":"ShenyiCui"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":48,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":49,"author":{"gitId":"ShenyiCui"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":50,"author":{"gitId":"ShenyiCui"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2022-10-23"},{"lineNumber":51,"author":{"gitId":"ShenyiCui"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredTaskList().size() + 1);","lastModifiedDate":"2022-10-23"},{"lineNumber":52,"author":{"gitId":"ShenyiCui"},"content":"        SelectContactCommand selectContactCommand \u003d new SelectContactCommand(outOfBoundIndex);","lastModifiedDate":"2022-10-23"},{"lineNumber":53,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":54,"author":{"gitId":"ShenyiCui"},"content":"        assertCommandFailure(selectContactCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-23"},{"lineNumber":55,"author":{"gitId":"ShenyiCui"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":56,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":57,"author":{"gitId":"ShenyiCui"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":58,"author":{"gitId":"ShenyiCui"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2022-10-23"},{"lineNumber":59,"author":{"gitId":"ShenyiCui"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2022-10-23"},{"lineNumber":60,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":61,"author":{"gitId":"ShenyiCui"},"content":"        SelectContactCommand selectContactCommand \u003d new SelectContactCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2022-10-23"},{"lineNumber":62,"author":{"gitId":"ShenyiCui"},"content":"        String expectedMessage \u003d SelectContactCommand.MESSAGE_SELECT_CONTACT_SUCCESS;","lastModifiedDate":"2022-10-23"},{"lineNumber":63,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":64,"author":{"gitId":"yunruu"},"content":"        CommandResult commandResult \u003d new CommandResult(expectedMessage, CommandType.SELECT_CONTACT);","lastModifiedDate":"2022-10-27"},{"lineNumber":65,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":66,"author":{"gitId":"ShenyiCui"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-23"},{"lineNumber":67,"author":{"gitId":"ShenyiCui"},"content":"        expectedModel.updateFilteredPersonList((p) -\u003e p.getId().equals(UUID.fromString(PERSON1_UUID)));","lastModifiedDate":"2022-10-23"},{"lineNumber":68,"author":{"gitId":"ShenyiCui"},"content":"        expectedModel.updateFilteredTaskList((t) -\u003e !t.getId().equals(UUID.fromString(TASK3_UUID)));","lastModifiedDate":"2022-10-23"},{"lineNumber":69,"author":{"gitId":"ShenyiCui"},"content":"        expectedModel.updateFilteredBridgeList((b) -\u003e b.getPersonId().equals(UUID.fromString(PERSON1_UUID)));","lastModifiedDate":"2022-10-23"},{"lineNumber":70,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":71,"author":{"gitId":"yunruu"},"content":"        assertCommandSuccess(selectContactCommand, model, commandResult, expectedModel);","lastModifiedDate":"2022-10-26"},{"lineNumber":72,"author":{"gitId":"ShenyiCui"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":73,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":74,"author":{"gitId":"ShenyiCui"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":75,"author":{"gitId":"ShenyiCui"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2022-10-23"},{"lineNumber":76,"author":{"gitId":"ShenyiCui"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2022-10-23"},{"lineNumber":77,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":78,"author":{"gitId":"ShenyiCui"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2022-10-23"},{"lineNumber":79,"author":{"gitId":"ShenyiCui"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2022-10-23"},{"lineNumber":80,"author":{"gitId":"ShenyiCui"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getTaskList().size());","lastModifiedDate":"2022-10-23"},{"lineNumber":81,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":82,"author":{"gitId":"ShenyiCui"},"content":"        SelectContactCommand selectContactCommand \u003d new SelectContactCommand(outOfBoundIndex);","lastModifiedDate":"2022-10-23"},{"lineNumber":83,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":84,"author":{"gitId":"ShenyiCui"},"content":"        assertCommandFailure(selectContactCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-23"},{"lineNumber":85,"author":{"gitId":"ShenyiCui"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":86,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":87,"author":{"gitId":"ShenyiCui"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":88,"author":{"gitId":"ShenyiCui"},"content":"    public void equals() {","lastModifiedDate":"2022-10-23"},{"lineNumber":89,"author":{"gitId":"ShenyiCui"},"content":"        SelectContactCommand selectFirstContactCommand \u003d new SelectContactCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2022-10-23"},{"lineNumber":90,"author":{"gitId":"ShenyiCui"},"content":"        SelectContactCommand selectSecondContactCommand \u003d new SelectContactCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2022-10-23"},{"lineNumber":91,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":92,"author":{"gitId":"ShenyiCui"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-23"},{"lineNumber":93,"author":{"gitId":"ShenyiCui"},"content":"        assertTrue(selectFirstContactCommand.equals(selectFirstContactCommand));","lastModifiedDate":"2022-10-23"},{"lineNumber":94,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":95,"author":{"gitId":"ShenyiCui"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-23"},{"lineNumber":96,"author":{"gitId":"ShenyiCui"},"content":"        SelectContactCommand selectFirstContactCommandCopy \u003d new SelectContactCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2022-10-23"},{"lineNumber":97,"author":{"gitId":"ShenyiCui"},"content":"        assertTrue(selectFirstContactCommand.equals(selectFirstContactCommandCopy));","lastModifiedDate":"2022-10-23"},{"lineNumber":98,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":99,"author":{"gitId":"ShenyiCui"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-23"},{"lineNumber":100,"author":{"gitId":"ShenyiCui"},"content":"        assertFalse(selectFirstContactCommand.equals(1));","lastModifiedDate":"2022-10-23"},{"lineNumber":101,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":102,"author":{"gitId":"ShenyiCui"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-23"},{"lineNumber":103,"author":{"gitId":"ShenyiCui"},"content":"        assertFalse(selectFirstContactCommand.equals(null));","lastModifiedDate":"2022-10-23"},{"lineNumber":104,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":105,"author":{"gitId":"ShenyiCui"},"content":"        // different task -\u003e returns false","lastModifiedDate":"2022-10-23"},{"lineNumber":106,"author":{"gitId":"ShenyiCui"},"content":"        assertFalse(selectFirstContactCommand.equals(selectSecondContactCommand));","lastModifiedDate":"2022-10-23"},{"lineNumber":107,"author":{"gitId":"ShenyiCui"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":108,"author":{"gitId":"ShenyiCui"},"content":"}","lastModifiedDate":"2022-10-23"}],"authorContributionMap":{"ShenyiCui":102,"yunruu":6}},{"path":"src/test/java/swift/logic/commands/SelectTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yunruu"},"content":"package swift.logic.commands;","lastModifiedDate":"2022-10-24"},{"lineNumber":2,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":3,"author":{"gitId":"yunruu"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-24"},{"lineNumber":4,"author":{"gitId":"yunruu"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-24"},{"lineNumber":5,"author":{"gitId":"yunruu"},"content":"import static swift.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-24"},{"lineNumber":6,"author":{"gitId":"yunruu"},"content":"import static swift.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-24"},{"lineNumber":7,"author":{"gitId":"yunruu"},"content":"import static swift.logic.commands.CommandTestUtil.showTaskAtIndex;","lastModifiedDate":"2022-10-24"},{"lineNumber":8,"author":{"gitId":"yunruu"},"content":"import static swift.testutil.TypicalIntegratedAddressBook.PERSON1_UUID;","lastModifiedDate":"2022-10-24"},{"lineNumber":9,"author":{"gitId":"yunruu"},"content":"import static swift.testutil.TypicalIntegratedAddressBook.PERSON2_UUID;","lastModifiedDate":"2022-10-24"},{"lineNumber":10,"author":{"gitId":"yunruu"},"content":"import static swift.testutil.TypicalIntegratedAddressBook.TASK1_UUID;","lastModifiedDate":"2022-10-24"},{"lineNumber":11,"author":{"gitId":"yunruu"},"content":"import static swift.testutil.TypicalIntegratedAddressBook.TASK3_UUID;","lastModifiedDate":"2022-10-24"},{"lineNumber":12,"author":{"gitId":"yunruu"},"content":"import static swift.testutil.TypicalIntegratedAddressBook.getTypicalAddressBook;","lastModifiedDate":"2022-10-24"},{"lineNumber":13,"author":{"gitId":"yunruu"},"content":"import static swift.testutil.TypicalTaskIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"yunruu"},"content":"import static swift.testutil.TypicalTaskIndexes.INDEX_SECOND_TASK;","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"yunruu"},"content":"import static swift.testutil.TypicalTaskIndexes.INDEX_THIRD_TASK;","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":17,"author":{"gitId":"yunruu"},"content":"import java.util.UUID;","lastModifiedDate":"2022-10-24"},{"lineNumber":18,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":19,"author":{"gitId":"yunruu"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-24"},{"lineNumber":20,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":21,"author":{"gitId":"yunruu"},"content":"import swift.commons.core.Messages;","lastModifiedDate":"2022-10-24"},{"lineNumber":22,"author":{"gitId":"yunruu"},"content":"import swift.commons.core.index.Index;","lastModifiedDate":"2022-10-24"},{"lineNumber":23,"author":{"gitId":"yunruu"},"content":"import swift.model.Model;","lastModifiedDate":"2022-10-24"},{"lineNumber":24,"author":{"gitId":"yunruu"},"content":"import swift.model.ModelManager;","lastModifiedDate":"2022-10-24"},{"lineNumber":25,"author":{"gitId":"yunruu"},"content":"import swift.model.UserPrefs;","lastModifiedDate":"2022-10-24"},{"lineNumber":26,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":27,"author":{"gitId":"yunruu"},"content":"/**","lastModifiedDate":"2022-10-24"},{"lineNumber":28,"author":{"gitId":"yunruu"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2022-10-24"},{"lineNumber":29,"author":{"gitId":"yunruu"},"content":" * {@code SelectTaskCommand}.","lastModifiedDate":"2022-10-24"},{"lineNumber":30,"author":{"gitId":"yunruu"},"content":" */","lastModifiedDate":"2022-10-24"},{"lineNumber":31,"author":{"gitId":"yunruu"},"content":"public class SelectTaskCommandTest {","lastModifiedDate":"2022-10-24"},{"lineNumber":32,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":33,"author":{"gitId":"yunruu"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-24"},{"lineNumber":34,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":35,"author":{"gitId":"yunruu"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":36,"author":{"gitId":"yunruu"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2022-10-24"},{"lineNumber":37,"author":{"gitId":"yunruu"},"content":"        SelectTaskCommand selectTaskCommand \u003d new SelectTaskCommand(INDEX_THIRD_TASK);","lastModifiedDate":"2022-10-24"},{"lineNumber":38,"author":{"gitId":"yunruu"},"content":"        String expectedMessage \u003d SelectTaskCommand.MESSAGE_SELECT_TASK_SUCCESS;","lastModifiedDate":"2022-10-24"},{"lineNumber":39,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":40,"author":{"gitId":"yunruu"},"content":"        CommandResult commandResult \u003d new CommandResult(expectedMessage, CommandType.SELECT_TASK);","lastModifiedDate":"2022-10-27"},{"lineNumber":41,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":42,"author":{"gitId":"yunruu"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-24"},{"lineNumber":43,"author":{"gitId":"yunruu"},"content":"        expectedModel.updateFilteredPersonList((p) -\u003e p.getId().equals(UUID.fromString(PERSON2_UUID)));","lastModifiedDate":"2022-10-24"},{"lineNumber":44,"author":{"gitId":"yunruu"},"content":"        expectedModel.updateFilteredTaskList((t) -\u003e t.getId().equals(UUID.fromString(TASK3_UUID)));","lastModifiedDate":"2022-10-24"},{"lineNumber":45,"author":{"gitId":"yunruu"},"content":"        expectedModel.updateFilteredBridgeList((b) -\u003e b.getTaskId().equals(UUID.fromString(TASK3_UUID)));","lastModifiedDate":"2022-10-24"},{"lineNumber":46,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":47,"author":{"gitId":"yunruu"},"content":"        assertCommandSuccess(selectTaskCommand, model, commandResult, expectedModel);","lastModifiedDate":"2022-10-26"},{"lineNumber":48,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":49,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":50,"author":{"gitId":"yunruu"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":51,"author":{"gitId":"yunruu"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2022-10-24"},{"lineNumber":52,"author":{"gitId":"yunruu"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredTaskList().size() + 1);","lastModifiedDate":"2022-10-24"},{"lineNumber":53,"author":{"gitId":"yunruu"},"content":"        SelectTaskCommand selectTaskCommand \u003d new SelectTaskCommand(outOfBoundIndex);","lastModifiedDate":"2022-10-24"},{"lineNumber":54,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":55,"author":{"gitId":"yunruu"},"content":"        assertCommandFailure(selectTaskCommand, model, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-24"},{"lineNumber":56,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":57,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":58,"author":{"gitId":"yunruu"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":59,"author":{"gitId":"yunruu"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2022-10-24"},{"lineNumber":60,"author":{"gitId":"yunruu"},"content":"        showTaskAtIndex(model, INDEX_FIRST_TASK);","lastModifiedDate":"2022-10-24"},{"lineNumber":61,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":62,"author":{"gitId":"yunruu"},"content":"        SelectTaskCommand selectTaskCommand \u003d new SelectTaskCommand(INDEX_FIRST_TASK);","lastModifiedDate":"2022-10-24"},{"lineNumber":63,"author":{"gitId":"yunruu"},"content":"        String expectedMessage \u003d SelectTaskCommand.MESSAGE_SELECT_TASK_SUCCESS;","lastModifiedDate":"2022-10-24"},{"lineNumber":64,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":65,"author":{"gitId":"yunruu"},"content":"        CommandResult commandResult \u003d new CommandResult(expectedMessage, CommandType.SELECT_TASK);","lastModifiedDate":"2022-10-27"},{"lineNumber":66,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":67,"author":{"gitId":"yunruu"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-24"},{"lineNumber":68,"author":{"gitId":"yunruu"},"content":"        expectedModel.updateFilteredPersonList(p -\u003e p.getId().equals(UUID.fromString(PERSON1_UUID)));","lastModifiedDate":"2022-10-24"},{"lineNumber":69,"author":{"gitId":"yunruu"},"content":"        expectedModel.updateFilteredTaskList(t -\u003e t.getId().equals(UUID.fromString(TASK1_UUID)));","lastModifiedDate":"2022-10-24"},{"lineNumber":70,"author":{"gitId":"yunruu"},"content":"        expectedModel.updateFilteredBridgeList(b -\u003e b.getTaskId().equals(UUID.fromString(TASK1_UUID)));","lastModifiedDate":"2022-10-24"},{"lineNumber":71,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":72,"author":{"gitId":"yunruu"},"content":"        assertCommandSuccess(selectTaskCommand, model, commandResult, expectedModel);","lastModifiedDate":"2022-10-26"},{"lineNumber":73,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":74,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":75,"author":{"gitId":"yunruu"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":76,"author":{"gitId":"yunruu"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2022-10-24"},{"lineNumber":77,"author":{"gitId":"yunruu"},"content":"        showTaskAtIndex(model, INDEX_FIRST_TASK);","lastModifiedDate":"2022-10-24"},{"lineNumber":78,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":79,"author":{"gitId":"yunruu"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_TASK;","lastModifiedDate":"2022-10-24"},{"lineNumber":80,"author":{"gitId":"yunruu"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2022-10-24"},{"lineNumber":81,"author":{"gitId":"yunruu"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getTaskList().size());","lastModifiedDate":"2022-10-24"},{"lineNumber":82,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":83,"author":{"gitId":"yunruu"},"content":"        SelectTaskCommand selectTaskCommand \u003d new SelectTaskCommand(outOfBoundIndex);","lastModifiedDate":"2022-10-24"},{"lineNumber":84,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":85,"author":{"gitId":"yunruu"},"content":"        assertCommandFailure(selectTaskCommand, model, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-24"},{"lineNumber":86,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":87,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":88,"author":{"gitId":"yunruu"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":89,"author":{"gitId":"yunruu"},"content":"    public void equals() {","lastModifiedDate":"2022-10-24"},{"lineNumber":90,"author":{"gitId":"yunruu"},"content":"        SelectTaskCommand selectFirstTaskCommand \u003d new SelectTaskCommand(INDEX_FIRST_TASK);","lastModifiedDate":"2022-10-24"},{"lineNumber":91,"author":{"gitId":"yunruu"},"content":"        SelectTaskCommand selectSecondTaskCommand \u003d new SelectTaskCommand(INDEX_SECOND_TASK);","lastModifiedDate":"2022-10-24"},{"lineNumber":92,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":93,"author":{"gitId":"yunruu"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-24"},{"lineNumber":94,"author":{"gitId":"yunruu"},"content":"        assertTrue(selectFirstTaskCommand.equals(selectFirstTaskCommand));","lastModifiedDate":"2022-10-24"},{"lineNumber":95,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":96,"author":{"gitId":"yunruu"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-24"},{"lineNumber":97,"author":{"gitId":"yunruu"},"content":"        SelectTaskCommand selectFirstTaskCommandCopy \u003d new SelectTaskCommand(INDEX_FIRST_TASK);","lastModifiedDate":"2022-10-24"},{"lineNumber":98,"author":{"gitId":"yunruu"},"content":"        assertTrue(selectFirstTaskCommand.equals(selectFirstTaskCommandCopy));","lastModifiedDate":"2022-10-24"},{"lineNumber":99,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":100,"author":{"gitId":"yunruu"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-24"},{"lineNumber":101,"author":{"gitId":"yunruu"},"content":"        assertFalse(selectFirstTaskCommand.equals(1));","lastModifiedDate":"2022-10-24"},{"lineNumber":102,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":103,"author":{"gitId":"yunruu"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-24"},{"lineNumber":104,"author":{"gitId":"yunruu"},"content":"        assertFalse(selectFirstTaskCommand.equals(null));","lastModifiedDate":"2022-10-24"},{"lineNumber":105,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":106,"author":{"gitId":"yunruu"},"content":"        // different task -\u003e returns false","lastModifiedDate":"2022-10-24"},{"lineNumber":107,"author":{"gitId":"yunruu"},"content":"        assertFalse(selectFirstTaskCommand.equals(selectSecondTaskCommand));","lastModifiedDate":"2022-10-24"},{"lineNumber":108,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":109,"author":{"gitId":"yunruu"},"content":"}","lastModifiedDate":"2022-10-24"}],"authorContributionMap":{"yunruu":109}},{"path":"src/test/java/swift/logic/commands/UnassignCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ShenyiCui"},"content":"package swift.logic.commands;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":3,"author":{"gitId":"ShenyiCui"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"ShenyiCui"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"ShenyiCui"},"content":"import static swift.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"ShenyiCui"},"content":"import static swift.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"ShenyiCui"},"content":"import static swift.testutil.TypicalIntegratedAddressBook.getTypicalAddressBook;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"ShenyiCui"},"content":"import static swift.testutil.TypicalPersonIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"ShenyiCui"},"content":"import static swift.testutil.TypicalPersonIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"ShenyiCui"},"content":"import static swift.testutil.TypicalTaskIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"ShenyiCui"},"content":"import static swift.testutil.TypicalTaskIndexes.INDEX_SECOND_TASK;","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"ShenyiCui"},"content":"import static swift.testutil.TypicalTaskIndexes.INDEX_THIRD_TASK;","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"ShenyiCui"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"ShenyiCui"},"content":"import swift.commons.core.Messages;","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"ShenyiCui"},"content":"import swift.commons.core.index.Index;","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"ShenyiCui"},"content":"import swift.model.Model;","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"ShenyiCui"},"content":"import swift.model.ModelManager;","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"ShenyiCui"},"content":"import swift.model.UserPrefs;","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"ShenyiCui"},"content":"import swift.model.bridge.PersonTaskBridge;","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"ShenyiCui"},"content":"import swift.model.person.Person;","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"ShenyiCui"},"content":"import swift.model.task.Task;","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"ShenyiCui"},"content":"/**","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"ShenyiCui"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"ShenyiCui"},"content":" * {@code UnassignCommand}.","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"ShenyiCui"},"content":" */","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"ShenyiCui"},"content":"public class UnassignCommandTest {","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"ShenyiCui"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"ShenyiCui"},"content":"    @Test","lastModifiedDate":"2022-10-27"},{"lineNumber":34,"author":{"gitId":"ShenyiCui"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2022-10-27"},{"lineNumber":35,"author":{"gitId":"ShenyiCui"},"content":"        UnassignCommand unassignCommand \u003d new UnassignCommand(INDEX_FIRST_PERSON, INDEX_FIRST_TASK);","lastModifiedDate":"2022-10-27"},{"lineNumber":36,"author":{"gitId":"ShenyiCui"},"content":"        Person expectedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-10-27"},{"lineNumber":37,"author":{"gitId":"ShenyiCui"},"content":"        Task expectedTask \u003d model.getFilteredTaskList().get(INDEX_FIRST_TASK.getZeroBased());","lastModifiedDate":"2022-10-27"},{"lineNumber":38,"author":{"gitId":"ShenyiCui"},"content":"        String expectedMessage \u003d String.format(UnassignCommand.MESSAGE_UNASSIGN_SUCCESS, expectedTask, expectedPerson);","lastModifiedDate":"2022-10-27"},{"lineNumber":39,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":40,"author":{"gitId":"ShenyiCui"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-27"},{"lineNumber":41,"author":{"gitId":"ShenyiCui"},"content":"        PersonTaskBridge target \u003d new PersonTaskBridge(expectedPerson.getId(), expectedTask.getId());","lastModifiedDate":"2022-10-27"},{"lineNumber":42,"author":{"gitId":"ShenyiCui"},"content":"        expectedModel.deleteBridge(target);","lastModifiedDate":"2022-10-27"},{"lineNumber":43,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":44,"author":{"gitId":"ShenyiCui"},"content":"        assertCommandSuccess(unassignCommand, model, expectedMessage, CommandType.UNASSIGN, expectedModel);","lastModifiedDate":"2022-10-27"},{"lineNumber":45,"author":{"gitId":"ShenyiCui"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":46,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":47,"author":{"gitId":"ShenyiCui"},"content":"    @Test","lastModifiedDate":"2022-10-27"},{"lineNumber":48,"author":{"gitId":"ShenyiCui"},"content":"    public void execute_bridgeDoesNotExist_throwsCommandException() {","lastModifiedDate":"2022-10-27"},{"lineNumber":49,"author":{"gitId":"ShenyiCui"},"content":"        UnassignCommand unassign \u003d new UnassignCommand(INDEX_FIRST_PERSON, INDEX_THIRD_TASK);","lastModifiedDate":"2022-10-27"},{"lineNumber":50,"author":{"gitId":"ShenyiCui"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-27"},{"lineNumber":51,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":52,"author":{"gitId":"ShenyiCui"},"content":"        assertCommandFailure(unassign, expectedModel, UnassignCommand.MESSAGE_BRIDGE_DOESNT_EXIST);","lastModifiedDate":"2022-10-27"},{"lineNumber":53,"author":{"gitId":"ShenyiCui"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":54,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":55,"author":{"gitId":"ShenyiCui"},"content":"    @Test","lastModifiedDate":"2022-10-27"},{"lineNumber":56,"author":{"gitId":"ShenyiCui"},"content":"    public void execute_invalidPersonIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2022-10-27"},{"lineNumber":57,"author":{"gitId":"ShenyiCui"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2022-10-27"},{"lineNumber":58,"author":{"gitId":"ShenyiCui"},"content":"        UnassignCommand unassignCommand \u003d new UnassignCommand(outOfBoundIndex, INDEX_FIRST_TASK);","lastModifiedDate":"2022-10-27"},{"lineNumber":59,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":60,"author":{"gitId":"ShenyiCui"},"content":"        assertCommandFailure(unassignCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-27"},{"lineNumber":61,"author":{"gitId":"ShenyiCui"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":62,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":63,"author":{"gitId":"ShenyiCui"},"content":"    @Test","lastModifiedDate":"2022-10-27"},{"lineNumber":64,"author":{"gitId":"ShenyiCui"},"content":"    public void execute_invalidTaskIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2022-10-27"},{"lineNumber":65,"author":{"gitId":"ShenyiCui"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredTaskList().size() + 1);","lastModifiedDate":"2022-10-27"},{"lineNumber":66,"author":{"gitId":"ShenyiCui"},"content":"        UnassignCommand unassignCommand \u003d new UnassignCommand(INDEX_FIRST_PERSON, outOfBoundIndex);","lastModifiedDate":"2022-10-27"},{"lineNumber":67,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":68,"author":{"gitId":"ShenyiCui"},"content":"        assertCommandFailure(unassignCommand, model, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-27"},{"lineNumber":69,"author":{"gitId":"ShenyiCui"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":70,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":71,"author":{"gitId":"ShenyiCui"},"content":"    @Test","lastModifiedDate":"2022-10-27"},{"lineNumber":72,"author":{"gitId":"ShenyiCui"},"content":"    public void equals() {","lastModifiedDate":"2022-10-27"},{"lineNumber":73,"author":{"gitId":"ShenyiCui"},"content":"        UnassignCommand unassignCommand1 \u003d new UnassignCommand(INDEX_FIRST_PERSON, INDEX_FIRST_TASK);","lastModifiedDate":"2022-10-27"},{"lineNumber":74,"author":{"gitId":"ShenyiCui"},"content":"        UnassignCommand unassignCommand2 \u003d new UnassignCommand(INDEX_SECOND_PERSON, INDEX_SECOND_TASK);","lastModifiedDate":"2022-10-27"},{"lineNumber":75,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":76,"author":{"gitId":"ShenyiCui"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-27"},{"lineNumber":77,"author":{"gitId":"ShenyiCui"},"content":"        assertTrue(unassignCommand1.equals(unassignCommand1));","lastModifiedDate":"2022-10-27"},{"lineNumber":78,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":79,"author":{"gitId":"ShenyiCui"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-27"},{"lineNumber":80,"author":{"gitId":"ShenyiCui"},"content":"        UnassignCommand assignCommand3 \u003d new UnassignCommand(INDEX_FIRST_PERSON, INDEX_FIRST_TASK);","lastModifiedDate":"2022-10-27"},{"lineNumber":81,"author":{"gitId":"ShenyiCui"},"content":"        assertTrue(unassignCommand1.equals(assignCommand3));","lastModifiedDate":"2022-10-27"},{"lineNumber":82,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":83,"author":{"gitId":"ShenyiCui"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-27"},{"lineNumber":84,"author":{"gitId":"ShenyiCui"},"content":"        assertFalse(unassignCommand1.equals(1));","lastModifiedDate":"2022-10-27"},{"lineNumber":85,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":86,"author":{"gitId":"ShenyiCui"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-27"},{"lineNumber":87,"author":{"gitId":"ShenyiCui"},"content":"        assertFalse(unassignCommand1.equals(null));","lastModifiedDate":"2022-10-27"},{"lineNumber":88,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":89,"author":{"gitId":"ShenyiCui"},"content":"        // different task -\u003e returns false","lastModifiedDate":"2022-10-27"},{"lineNumber":90,"author":{"gitId":"ShenyiCui"},"content":"        assertFalse(unassignCommand1.equals(unassignCommand2));","lastModifiedDate":"2022-10-27"},{"lineNumber":91,"author":{"gitId":"ShenyiCui"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":92,"author":{"gitId":"ShenyiCui"},"content":"}","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"ShenyiCui":92}},{"path":"src/test/java/swift/logic/commands/UnmarkTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"santosh3007"},"content":"package swift.logic.commands;","lastModifiedDate":"2022-11-06"},{"lineNumber":2,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":3,"author":{"gitId":"santosh3007"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-11-06"},{"lineNumber":4,"author":{"gitId":"santosh3007"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-11-06"},{"lineNumber":5,"author":{"gitId":"santosh3007"},"content":"import static swift.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-11-06"},{"lineNumber":6,"author":{"gitId":"santosh3007"},"content":"import static swift.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-11-06"},{"lineNumber":7,"author":{"gitId":"santosh3007"},"content":"import static swift.testutil.TypicalTaskIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2022-11-06"},{"lineNumber":8,"author":{"gitId":"santosh3007"},"content":"import static swift.testutil.TypicalTaskIndexes.INDEX_SECOND_TASK;","lastModifiedDate":"2022-11-06"},{"lineNumber":9,"author":{"gitId":"santosh3007"},"content":"import static swift.testutil.TypicalTasks.getTypicalAddressBook;","lastModifiedDate":"2022-11-06"},{"lineNumber":10,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":11,"author":{"gitId":"santosh3007"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-11-06"},{"lineNumber":12,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":13,"author":{"gitId":"santosh3007"},"content":"import swift.commons.core.Messages;","lastModifiedDate":"2022-11-06"},{"lineNumber":14,"author":{"gitId":"santosh3007"},"content":"import swift.commons.core.index.Index;","lastModifiedDate":"2022-11-06"},{"lineNumber":15,"author":{"gitId":"santosh3007"},"content":"import swift.model.AddressBook;","lastModifiedDate":"2022-11-06"},{"lineNumber":16,"author":{"gitId":"santosh3007"},"content":"import swift.model.Model;","lastModifiedDate":"2022-11-06"},{"lineNumber":17,"author":{"gitId":"santosh3007"},"content":"import swift.model.ModelManager;","lastModifiedDate":"2022-11-06"},{"lineNumber":18,"author":{"gitId":"santosh3007"},"content":"import swift.model.UserPrefs;","lastModifiedDate":"2022-11-06"},{"lineNumber":19,"author":{"gitId":"santosh3007"},"content":"import swift.model.task.Task;","lastModifiedDate":"2022-11-06"},{"lineNumber":20,"author":{"gitId":"santosh3007"},"content":"import swift.testutil.TaskBuilder;","lastModifiedDate":"2022-11-06"},{"lineNumber":21,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":22,"author":{"gitId":"santosh3007"},"content":"/**","lastModifiedDate":"2022-11-06"},{"lineNumber":23,"author":{"gitId":"santosh3007"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2022-11-06"},{"lineNumber":24,"author":{"gitId":"santosh3007"},"content":" * {@code UnmarkTaskCommand}.","lastModifiedDate":"2022-11-06"},{"lineNumber":25,"author":{"gitId":"santosh3007"},"content":" */","lastModifiedDate":"2022-11-06"},{"lineNumber":26,"author":{"gitId":"santosh3007"},"content":"public class UnmarkTaskCommandTest {","lastModifiedDate":"2022-11-06"},{"lineNumber":27,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":28,"author":{"gitId":"santosh3007"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-11-06"},{"lineNumber":29,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":30,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":31,"author":{"gitId":"santosh3007"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":32,"author":{"gitId":"santosh3007"},"content":"    public void execute_validIndex_success() {","lastModifiedDate":"2022-11-06"},{"lineNumber":33,"author":{"gitId":"santosh3007"},"content":"        Index indexLastTask \u003d Index.fromOneBased(model.getFilteredTaskList().size());","lastModifiedDate":"2022-11-06"},{"lineNumber":34,"author":{"gitId":"santosh3007"},"content":"        Task unmarkedTask \u003d model.getFilteredTaskList().get(indexLastTask.getZeroBased());","lastModifiedDate":"2022-11-06"},{"lineNumber":35,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":36,"author":{"gitId":"santosh3007"},"content":"        TaskBuilder taskInList \u003d new TaskBuilder(unmarkedTask);","lastModifiedDate":"2022-11-06"},{"lineNumber":37,"author":{"gitId":"santosh3007"},"content":"        Task markedTask \u003d taskInList.withIsDone(true).build();","lastModifiedDate":"2022-11-06"},{"lineNumber":38,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":39,"author":{"gitId":"santosh3007"},"content":"        model.setTask(unmarkedTask, markedTask);","lastModifiedDate":"2022-11-06"},{"lineNumber":40,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":41,"author":{"gitId":"santosh3007"},"content":"        UnmarkTaskCommand unmarkTaskCommand \u003d new UnmarkTaskCommand(indexLastTask);","lastModifiedDate":"2022-11-06"},{"lineNumber":42,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":43,"author":{"gitId":"santosh3007"},"content":"        String expectedMessage \u003d","lastModifiedDate":"2022-11-06"},{"lineNumber":44,"author":{"gitId":"santosh3007"},"content":"                String.format(UnmarkTaskCommand.MESSAGE_UNMARK_TASK_SUCCESS, unmarkedTask);","lastModifiedDate":"2022-11-06"},{"lineNumber":45,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":46,"author":{"gitId":"santosh3007"},"content":"        CommandResult commandResult \u003d new CommandResult(expectedMessage, CommandType.TASKS);","lastModifiedDate":"2022-11-06"},{"lineNumber":47,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":48,"author":{"gitId":"santosh3007"},"content":"        Model expectedModel \u003d","lastModifiedDate":"2022-11-06"},{"lineNumber":49,"author":{"gitId":"santosh3007"},"content":"                new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-11-06"},{"lineNumber":50,"author":{"gitId":"santosh3007"},"content":"        expectedModel.setTask(markedTask, unmarkedTask);","lastModifiedDate":"2022-11-06"},{"lineNumber":51,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":52,"author":{"gitId":"santosh3007"},"content":"        assertCommandSuccess(unmarkTaskCommand, model, commandResult, expectedModel);","lastModifiedDate":"2022-11-06"},{"lineNumber":53,"author":{"gitId":"santosh3007"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":54,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":55,"author":{"gitId":"santosh3007"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":56,"author":{"gitId":"santosh3007"},"content":"    public void execute_invalidIndex_failure() {","lastModifiedDate":"2022-11-06"},{"lineNumber":57,"author":{"gitId":"santosh3007"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredTaskList().size() + 1);","lastModifiedDate":"2022-11-06"},{"lineNumber":58,"author":{"gitId":"santosh3007"},"content":"        UnmarkTaskCommand unmarkTaskCommand \u003d new UnmarkTaskCommand(outOfBoundIndex);","lastModifiedDate":"2022-11-06"},{"lineNumber":59,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":60,"author":{"gitId":"santosh3007"},"content":"        assertCommandFailure(unmarkTaskCommand, model,","lastModifiedDate":"2022-11-06"},{"lineNumber":61,"author":{"gitId":"santosh3007"},"content":"                Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2022-11-06"},{"lineNumber":62,"author":{"gitId":"santosh3007"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":63,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":64,"author":{"gitId":"santosh3007"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":65,"author":{"gitId":"santosh3007"},"content":"    public void execute_markedTask_failure() {","lastModifiedDate":"2022-11-06"},{"lineNumber":66,"author":{"gitId":"santosh3007"},"content":"        Index indexLastTask \u003d Index.fromOneBased(model.getFilteredTaskList().size());","lastModifiedDate":"2022-11-06"},{"lineNumber":67,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":68,"author":{"gitId":"santosh3007"},"content":"        UnmarkTaskCommand unmarkTaskCommand \u003d new UnmarkTaskCommand(indexLastTask);","lastModifiedDate":"2022-11-06"},{"lineNumber":69,"author":{"gitId":"santosh3007"},"content":"        assertCommandFailure(unmarkTaskCommand, model,","lastModifiedDate":"2022-11-06"},{"lineNumber":70,"author":{"gitId":"santosh3007"},"content":"                UnmarkTaskCommand.MESSAGE_TASK_ALREADY_INCOMPLETE);","lastModifiedDate":"2022-11-06"},{"lineNumber":71,"author":{"gitId":"santosh3007"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":72,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":73,"author":{"gitId":"santosh3007"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":74,"author":{"gitId":"santosh3007"},"content":"    public void equals() {","lastModifiedDate":"2022-11-06"},{"lineNumber":75,"author":{"gitId":"santosh3007"},"content":"        UnmarkTaskCommand unmarkFirstTaskCommand \u003d new UnmarkTaskCommand(INDEX_FIRST_TASK);","lastModifiedDate":"2022-11-06"},{"lineNumber":76,"author":{"gitId":"santosh3007"},"content":"        UnmarkTaskCommand unmarkSecondTaskCommand \u003d new UnmarkTaskCommand(INDEX_SECOND_TASK);","lastModifiedDate":"2022-11-06"},{"lineNumber":77,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":78,"author":{"gitId":"santosh3007"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-11-06"},{"lineNumber":79,"author":{"gitId":"santosh3007"},"content":"        assertTrue(unmarkFirstTaskCommand.equals(unmarkFirstTaskCommand));","lastModifiedDate":"2022-11-06"},{"lineNumber":80,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":81,"author":{"gitId":"santosh3007"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-11-06"},{"lineNumber":82,"author":{"gitId":"santosh3007"},"content":"        UnmarkTaskCommand unmarkFirstTaskCommandCopy \u003d new UnmarkTaskCommand(INDEX_FIRST_TASK);","lastModifiedDate":"2022-11-06"},{"lineNumber":83,"author":{"gitId":"santosh3007"},"content":"        assertTrue(unmarkFirstTaskCommand.equals(unmarkFirstTaskCommandCopy));","lastModifiedDate":"2022-11-06"},{"lineNumber":84,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":85,"author":{"gitId":"santosh3007"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-11-06"},{"lineNumber":86,"author":{"gitId":"santosh3007"},"content":"        assertFalse(unmarkFirstTaskCommand.equals(1));","lastModifiedDate":"2022-11-06"},{"lineNumber":87,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":88,"author":{"gitId":"santosh3007"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-11-06"},{"lineNumber":89,"author":{"gitId":"santosh3007"},"content":"        assertFalse(unmarkFirstTaskCommand.equals(null));","lastModifiedDate":"2022-11-06"},{"lineNumber":90,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":91,"author":{"gitId":"santosh3007"},"content":"        // different task -\u003e returns false","lastModifiedDate":"2022-11-06"},{"lineNumber":92,"author":{"gitId":"santosh3007"},"content":"        assertFalse(unmarkFirstTaskCommand.equals(unmarkSecondTaskCommand));","lastModifiedDate":"2022-11-06"},{"lineNumber":93,"author":{"gitId":"santosh3007"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":94,"author":{"gitId":"santosh3007"},"content":"}","lastModifiedDate":"2022-11-06"}],"authorContributionMap":{"santosh3007":94}},{"path":"src/test/java/swift/logic/parser/AddContactCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.logic.parser;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":3,"author":{"gitId":"peppapighs"},"content":"import static swift.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-01"},{"lineNumber":4,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2022-10-01"},{"lineNumber":5,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2022-10-01"},{"lineNumber":6,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2022-10-01"},{"lineNumber":7,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2022-10-01"},{"lineNumber":8,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2022-10-01"},{"lineNumber":9,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2022-10-01"},{"lineNumber":10,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2022-10-01"},{"lineNumber":11,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2022-10-01"},{"lineNumber":12,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2022-10-01"},{"lineNumber":13,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-10-01"},{"lineNumber":14,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2022-10-01"},{"lineNumber":15,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2022-10-01"},{"lineNumber":16,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2022-10-01"},{"lineNumber":17,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2022-10-01"},{"lineNumber":18,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2022-10-01"},{"lineNumber":19,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2022-10-01"},{"lineNumber":20,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2022-10-01"},{"lineNumber":21,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-10-01"},{"lineNumber":22,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-10-01"},{"lineNumber":23,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-10-01"},{"lineNumber":24,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-10-01"},{"lineNumber":25,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2022-10-01"},{"lineNumber":26,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-01"},{"lineNumber":27,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-01"},{"lineNumber":28,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-01"},{"lineNumber":29,"author":{"gitId":"peppapighs"},"content":"import static swift.testutil.TypicalPersons.AMY;","lastModifiedDate":"2022-10-01"},{"lineNumber":30,"author":{"gitId":"peppapighs"},"content":"import static swift.testutil.TypicalPersons.BOB;","lastModifiedDate":"2022-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"ShenyiCui"},"content":"import swift.logic.commands.AddContactCommand;","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"peppapighs"},"content":"import swift.model.person.Address;","lastModifiedDate":"2022-10-01"},{"lineNumber":36,"author":{"gitId":"peppapighs"},"content":"import swift.model.person.Email;","lastModifiedDate":"2022-10-01"},{"lineNumber":37,"author":{"gitId":"peppapighs"},"content":"import swift.model.person.Person;","lastModifiedDate":"2022-10-01"},{"lineNumber":38,"author":{"gitId":"jasonqiu212"},"content":"import swift.model.person.PersonName;","lastModifiedDate":"2022-10-26"},{"lineNumber":39,"author":{"gitId":"peppapighs"},"content":"import swift.model.person.Phone;","lastModifiedDate":"2022-10-01"},{"lineNumber":40,"author":{"gitId":"peppapighs"},"content":"import swift.model.tag.Tag;","lastModifiedDate":"2022-10-01"},{"lineNumber":41,"author":{"gitId":"peppapighs"},"content":"import swift.testutil.PersonBuilder;","lastModifiedDate":"2022-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"jasonqiu212"},"content":"public class AddContactCommandParserTest {","lastModifiedDate":"2022-10-21"},{"lineNumber":44,"author":{"gitId":"jasonqiu212"},"content":"    private AddContactCommandParser parser \u003d new AddContactCommandParser();","lastModifiedDate":"2022-10-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2018-07-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":52,"author":{"gitId":"ShenyiCui"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddContactCommand(expectedPerson));","lastModifiedDate":"2022-10-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":56,"author":{"gitId":"ShenyiCui"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddContactCommand(expectedPerson));","lastModifiedDate":"2022-10-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":60,"author":{"gitId":"ShenyiCui"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddContactCommand(expectedPerson));","lastModifiedDate":"2022-10-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":64,"author":{"gitId":"ShenyiCui"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddContactCommand(expectedPerson));","lastModifiedDate":"2022-10-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2017-12-23"},{"lineNumber":68,"author":{"gitId":"ShenyiCui"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddContactCommand(expectedPerson));","lastModifiedDate":"2022-10-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2018-07-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":74,"author":{"gitId":"ShenyiCui"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, new AddContactCommand(expectedPersonMultipleTags));","lastModifiedDate":"2022-10-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-07-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY,","lastModifiedDate":"2017-12-23"},{"lineNumber":82,"author":{"gitId":"ShenyiCui"},"content":"                new AddContactCommand(expectedPerson));","lastModifiedDate":"2022-10-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":87,"author":{"gitId":"ShenyiCui"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddContactCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":114,"author":{"gitId":"jasonqiu212"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, PersonName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2017-12-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2017-12-23"},{"lineNumber":134,"author":{"gitId":"jasonqiu212"},"content":"                PersonName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2017-12-23"},{"lineNumber":139,"author":{"gitId":"ShenyiCui"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddContactCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"ShenyiCui":10,"jasonqiu212":5,"peppapighs":36,"-":90}},{"path":"src/test/java/swift/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.logic.parser;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"peppapighs"},"content":"import static swift.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-01"},{"lineNumber":6,"author":{"gitId":"peppapighs"},"content":"import static swift.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2022-10-01"},{"lineNumber":7,"author":{"gitId":"peppapighs"},"content":"import static swift.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-01"},{"lineNumber":8,"author":{"gitId":"ShenyiCui"},"content":"import static swift.testutil.TypicalPersonIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"peppapighs"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"ShenyiCui"},"content":"import swift.logic.commands.AddContactCommand;","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"peppapighs"},"content":"import swift.logic.commands.AddTaskCommand;","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"peppapighs"},"content":"import swift.logic.commands.ClearCommand;","lastModifiedDate":"2022-10-01"},{"lineNumber":20,"author":{"gitId":"jasonqiu212"},"content":"import swift.logic.commands.DeleteContactCommand;","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"yunruu"},"content":"import swift.logic.commands.EditContactCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"yunruu"},"content":"import swift.logic.commands.EditContactCommand.EditPersonDescriptor;","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"peppapighs"},"content":"import swift.logic.commands.ExitCommand;","lastModifiedDate":"2022-10-01"},{"lineNumber":24,"author":{"gitId":"jasonqiu212"},"content":"import swift.logic.commands.FindContactCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"peppapighs"},"content":"import swift.logic.commands.HelpCommand;","lastModifiedDate":"2022-10-01"},{"lineNumber":26,"author":{"gitId":"peppapighs"},"content":"import swift.logic.commands.ListContactCommand;","lastModifiedDate":"2022-10-08"},{"lineNumber":27,"author":{"gitId":"yunruu"},"content":"import swift.logic.commands.ListTaskCommand;","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"ShenyiCui"},"content":"import swift.logic.commands.SelectContactCommand;","lastModifiedDate":"2022-10-23"},{"lineNumber":29,"author":{"gitId":"peppapighs"},"content":"import swift.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-01"},{"lineNumber":30,"author":{"gitId":"peppapighs"},"content":"import swift.model.person.Person;","lastModifiedDate":"2022-10-01"},{"lineNumber":31,"author":{"gitId":"jasonqiu212"},"content":"import swift.model.person.PersonNameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"peppapighs"},"content":"import swift.model.task.Task;","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"peppapighs"},"content":"import swift.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2022-10-01"},{"lineNumber":34,"author":{"gitId":"peppapighs"},"content":"import swift.testutil.PersonBuilder;","lastModifiedDate":"2022-10-01"},{"lineNumber":35,"author":{"gitId":"peppapighs"},"content":"import swift.testutil.PersonUtil;","lastModifiedDate":"2022-10-01"},{"lineNumber":36,"author":{"gitId":"peppapighs"},"content":"import swift.testutil.TaskBuilder;","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"peppapighs"},"content":"import swift.testutil.TaskUtil;","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"ShenyiCui"},"content":"        AddContactCommand command \u003d (AddContactCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2022-10-06"},{"lineNumber":47,"author":{"gitId":"ShenyiCui"},"content":"        assertEquals(new AddContactCommand(person), command);","lastModifiedDate":"2022-10-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"jasonqiu212"},"content":"        DeleteContactCommand command \u003d (DeleteContactCommand) parser.parseCommand(","lastModifiedDate":"2022-10-21"},{"lineNumber":59,"author":{"gitId":"jasonqiu212"},"content":"                DeleteContactCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2022-10-21"},{"lineNumber":60,"author":{"gitId":"jasonqiu212"},"content":"        assertEquals(new DeleteContactCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2022-10-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"yunruu"},"content":"        EditContactCommand command \u003d (EditContactCommand) parser.parseCommand(EditContactCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":69,"author":{"gitId":"yunruu"},"content":"        assertEquals(new EditContactCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":81,"author":{"gitId":"jasonqiu212"},"content":"        FindContactCommand command \u003d (FindContactCommand) parser.parseCommand(","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"jasonqiu212"},"content":"                FindContactCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"jasonqiu212"},"content":"        assertEquals(new FindContactCommand(new PersonNameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"ShenyiCui"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":93,"author":{"gitId":"ShenyiCui"},"content":"    public void parseCommand_selectContact() throws Exception {","lastModifiedDate":"2022-10-23"},{"lineNumber":94,"author":{"gitId":"ShenyiCui"},"content":"        SelectContactCommand command \u003d (SelectContactCommand) parser.parseCommand(","lastModifiedDate":"2022-10-23"},{"lineNumber":95,"author":{"gitId":"ShenyiCui"},"content":"                SelectContactCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2022-10-23"},{"lineNumber":96,"author":{"gitId":"ShenyiCui"},"content":"        assertEquals(new SelectContactCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2022-10-23"},{"lineNumber":97,"author":{"gitId":"ShenyiCui"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":98,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"peppapighs"},"content":"        assertTrue(parser.parseCommand(ListContactCommand.COMMAND_WORD) instanceof ListContactCommand);","lastModifiedDate":"2022-10-08"},{"lineNumber":102,"author":{"gitId":"peppapighs"},"content":"        assertTrue(parser.parseCommand(ListContactCommand.COMMAND_WORD + \" 3\") instanceof ListContactCommand);","lastModifiedDate":"2022-10-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"peppapighs"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":106,"author":{"gitId":"peppapighs"},"content":"    public void parseCommand_add_task() throws Exception {","lastModifiedDate":"2022-10-06"},{"lineNumber":107,"author":{"gitId":"peppapighs"},"content":"        Task task \u003d new TaskBuilder().build();","lastModifiedDate":"2022-10-06"},{"lineNumber":108,"author":{"gitId":"peppapighs"},"content":"        AddTaskCommand command \u003d (AddTaskCommand) parser.parseCommand(TaskUtil.getAddTaskCommand(task));","lastModifiedDate":"2022-10-06"},{"lineNumber":109,"author":{"gitId":"peppapighs"},"content":"        assertEquals(new AddTaskCommand(task, new HashSet\u003c\u003e()), command);","lastModifiedDate":"2022-10-16"},{"lineNumber":110,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":111,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":112,"author":{"gitId":"yunruu"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":113,"author":{"gitId":"yunruu"},"content":"    public void parseCommand_list_task() throws Exception {","lastModifiedDate":"2022-10-11"},{"lineNumber":114,"author":{"gitId":"yunruu"},"content":"        assertTrue(parser.parseCommand(ListTaskCommand.COMMAND_WORD) instanceof ListTaskCommand);","lastModifiedDate":"2022-10-11"},{"lineNumber":115,"author":{"gitId":"yunruu"},"content":"        assertTrue(parser.parseCommand(ListTaskCommand.COMMAND_WORD + \" 3\") instanceof ListTaskCommand);","lastModifiedDate":"2022-10-11"},{"lineNumber":116,"author":{"gitId":"yunruu"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":117,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"ShenyiCui":12,"jasonqiu212":9,"peppapighs":27,"-":69,"yunruu":11}},{"path":"src/test/java/swift/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.logic.parser;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  some random string /t tag with leading and trailing spaces \";","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2017-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2016-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2017-05-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2017-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2017-05-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2016-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"peppapighs":1,"-":149}},{"path":"src/test/java/swift/logic/parser/AssignCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.logic.parser;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":3,"author":{"gitId":"peppapighs"},"content":"import static swift.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.parser.CliSyntax.PREFIX_CONTACT;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.parser.CliSyntax.PREFIX_TASK;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"peppapighs"},"content":"import static swift.testutil.TypicalPersonIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"peppapighs"},"content":"import static swift.testutil.TypicalTaskIndexes.INDEX_SECOND_TASK;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"peppapighs"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"peppapighs"},"content":"import swift.logic.commands.AssignCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"peppapighs"},"content":"public class AssignCommandParserTest {","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"peppapighs"},"content":"    private AssignCommandParser parser \u003d new AssignCommandParser();","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"peppapighs"},"content":"    @Test","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"peppapighs"},"content":"    public void parse_validArgs_returnsAssignCommand() {","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"peppapighs"},"content":"        assertParseSuccess(parser, \" \" + PREFIX_CONTACT + \"1 \" + PREFIX_TASK + \"2\",","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"peppapighs"},"content":"                new AssignCommand(INDEX_FIRST_PERSON, INDEX_SECOND_TASK));","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"peppapighs"},"content":"    @Test","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"peppapighs"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"peppapighs"},"content":"        assertParseFailure(parser, \"a\", String","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"peppapighs"},"content":"                .format(MESSAGE_INVALID_COMMAND_FORMAT, AssignCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"peppapighs"},"content":"}","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"peppapighs":30}},{"path":"src/test/java/swift/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.logic.parser;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"peppapighs"},"content":"import swift.logic.commands.Command;","lastModifiedDate":"2022-10-01"},{"lineNumber":6,"author":{"gitId":"peppapighs"},"content":"import swift.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static void assertParseSuccess(Parser\u003c? extends Command\u003e parser, String userInput,","lastModifiedDate":"2022-02-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            Command expectedCommand) {","lastModifiedDate":"2022-02-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static void assertParseFailure(Parser\u003c? extends Command\u003e parser, String userInput, String expectedMessage) {","lastModifiedDate":"2022-02-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"peppapighs":3,"-":36}},{"path":"src/test/java/swift/logic/parser/DeleteContactCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.logic.parser;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"peppapighs"},"content":"import static swift.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-01"},{"lineNumber":4,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-01"},{"lineNumber":5,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-01"},{"lineNumber":6,"author":{"gitId":"ShenyiCui"},"content":"import static swift.testutil.TypicalPersonIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"jasonqiu212"},"content":"import swift.logic.commands.DeleteContactCommand;","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"jasonqiu212"},"content":" * outside the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"jasonqiu212"},"content":"public class DeleteContactCommandParserTest {","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"jasonqiu212"},"content":"    private DeleteContactCommandParser parser \u003d new DeleteContactCommandParser();","lastModifiedDate":"2022-10-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"jasonqiu212"},"content":"        assertParseSuccess(parser, \"1\", new DeleteContactCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2022-10-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"jasonqiu212"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-21"},{"lineNumber":31,"author":{"gitId":"jasonqiu212"},"content":"                DeleteContactCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"ShenyiCui":1,"jasonqiu212":7,"peppapighs":4,"-":21}},{"path":"src/test/java/swift/logic/parser/DeleteTaskCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ShenyiCui"},"content":"package swift.logic.parser;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"ShenyiCui"},"content":"import static swift.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"ShenyiCui"},"content":"import static swift.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"ShenyiCui"},"content":"import static swift.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"ShenyiCui"},"content":"import static swift.testutil.TypicalTaskIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"ShenyiCui"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"ShenyiCui"},"content":"import swift.logic.commands.DeleteTaskCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"ShenyiCui"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"ShenyiCui"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"ShenyiCui"},"content":" * outside of the DeleteTaskCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"ShenyiCui"},"content":" * same path through the DeleteTaskCommand, and therefore we test only one of them.","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"ShenyiCui"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"ShenyiCui"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"ShenyiCui"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"ShenyiCui"},"content":"public class DeleteTaskCommandParserTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"ShenyiCui"},"content":"    private DeleteTaskCommandParser parser \u003d new DeleteTaskCommandParser();","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"ShenyiCui"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"ShenyiCui"},"content":"    public void parse_validArgs_returnsDeleteTaskCommand() {","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"ShenyiCui"},"content":"        assertParseSuccess(parser, \"1\", new DeleteTaskCommand(INDEX_FIRST_TASK));","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"ShenyiCui"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"ShenyiCui"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"ShenyiCui"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"ShenyiCui"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"ShenyiCui"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"ShenyiCui"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"ShenyiCui":32}},{"path":"src/test/java/swift/logic/parser/EditContactCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.logic.parser;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"peppapighs"},"content":"import static swift.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-01"},{"lineNumber":4,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2022-10-01"},{"lineNumber":5,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2022-10-01"},{"lineNumber":6,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2022-10-01"},{"lineNumber":7,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2022-10-01"},{"lineNumber":8,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2022-10-01"},{"lineNumber":9,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2022-10-01"},{"lineNumber":10,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2022-10-01"},{"lineNumber":11,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2022-10-01"},{"lineNumber":12,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2022-10-01"},{"lineNumber":13,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-10-01"},{"lineNumber":14,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2022-10-01"},{"lineNumber":15,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2022-10-01"},{"lineNumber":16,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2022-10-01"},{"lineNumber":17,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2022-10-01"},{"lineNumber":18,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2022-10-01"},{"lineNumber":19,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-10-01"},{"lineNumber":20,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2022-10-01"},{"lineNumber":21,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-10-01"},{"lineNumber":22,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2022-10-01"},{"lineNumber":23,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2022-10-01"},{"lineNumber":24,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-10-01"},{"lineNumber":25,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2022-10-01"},{"lineNumber":26,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-01"},{"lineNumber":27,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-01"},{"lineNumber":28,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-01"},{"lineNumber":29,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-01"},{"lineNumber":30,"author":{"gitId":"ShenyiCui"},"content":"import static swift.testutil.TypicalPersonIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"ShenyiCui"},"content":"import static swift.testutil.TypicalPersonIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"ShenyiCui"},"content":"import static swift.testutil.TypicalPersonIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"peppapighs"},"content":"import swift.commons.core.index.Index;","lastModifiedDate":"2022-10-01"},{"lineNumber":37,"author":{"gitId":"yunruu"},"content":"import swift.logic.commands.EditContactCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"yunruu"},"content":"import swift.logic.commands.EditContactCommand.EditPersonDescriptor;","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"peppapighs"},"content":"import swift.model.person.Address;","lastModifiedDate":"2022-10-01"},{"lineNumber":40,"author":{"gitId":"peppapighs"},"content":"import swift.model.person.Email;","lastModifiedDate":"2022-10-01"},{"lineNumber":41,"author":{"gitId":"jasonqiu212"},"content":"import swift.model.person.PersonName;","lastModifiedDate":"2022-10-24"},{"lineNumber":42,"author":{"gitId":"peppapighs"},"content":"import swift.model.person.Phone;","lastModifiedDate":"2022-10-01"},{"lineNumber":43,"author":{"gitId":"peppapighs"},"content":"import swift.model.tag.Tag;","lastModifiedDate":"2022-10-01"},{"lineNumber":44,"author":{"gitId":"peppapighs"},"content":"import swift.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2022-10-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"yunruu"},"content":"public class EditContactCommandParserTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"yunruu"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditContactCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"yunruu"},"content":"    private EditContactCommandParser parser \u003d new EditContactCommandParser();","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"yunruu"},"content":"        assertParseFailure(parser, \"1\", EditContactCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"jasonqiu212"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, PersonName.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2022-10-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2018-09-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2017-07-06"},{"lineNumber":105,"author":{"gitId":"jasonqiu212"},"content":"                PersonName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2017-06-06"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"yunruu"},"content":"        EditContactCommand expectedCommand \u003d new EditContactCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"yunruu"},"content":"        EditContactCommand expectedCommand \u003d new EditContactCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"yunruu"},"content":"        EditContactCommand expectedCommand \u003d new EditContactCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"yunruu"},"content":"        expectedCommand \u003d new EditContactCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"yunruu"},"content":"        expectedCommand \u003d new EditContactCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":158,"author":{"gitId":"yunruu"},"content":"        expectedCommand \u003d new EditContactCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"yunruu"},"content":"        expectedCommand \u003d new EditContactCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2017-05-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2017-05-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2017-05-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2017-05-04"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"yunruu"},"content":"        EditContactCommand expectedCommand \u003d new EditContactCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"yunruu"},"content":"        EditContactCommand expectedCommand \u003d new EditContactCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-05-25"},{"lineNumber":194,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":196,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":197,"author":{"gitId":"yunruu"},"content":"        expectedCommand \u003d new EditContactCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2017-05-04"},{"lineNumber":207,"author":{"gitId":"yunruu"},"content":"        EditContactCommand expectedCommand \u003d new EditContactCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"ShenyiCui":3,"jasonqiu212":3,"peppapighs":34,"-":154,"yunruu":17}},{"path":"src/test/java/swift/logic/parser/EditTaskCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"santosh3007"},"content":"package swift.logic.parser;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"santosh3007"},"content":"import static swift.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"santosh3007"},"content":"import static swift.logic.commands.CommandTestUtil.CONTACT_INDEX_TASK1;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"santosh3007"},"content":"import static swift.logic.commands.CommandTestUtil.INVALID_CONTACT_INDEX;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"santosh3007"},"content":"import static swift.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"santosh3007"},"content":"import static swift.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"santosh3007"},"content":"import static swift.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"santosh3007"},"content":"import static swift.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"santosh3007"},"content":"import static swift.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"santosh3007"},"content":"import static swift.testutil.TypicalTaskIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"santosh3007"},"content":"import static swift.testutil.TypicalTaskIndexes.INDEX_SECOND_TASK;","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"santosh3007"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"santosh3007"},"content":"import swift.commons.core.index.Index;","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"santosh3007"},"content":"import swift.logic.commands.EditTaskCommand;","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"santosh3007"},"content":"import swift.logic.commands.EditTaskCommand.EditTaskDescriptor;","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"jasonqiu212"},"content":"import swift.model.person.PersonName;","lastModifiedDate":"2022-10-24"},{"lineNumber":20,"author":{"gitId":"santosh3007"},"content":"import swift.testutil.EditTaskDescriptorBuilder;","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"santosh3007"},"content":"public class EditTaskCommandParserTest {","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"santosh3007"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"santosh3007"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditTaskCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"santosh3007"},"content":"    private EditTaskCommandParser parser \u003d new EditTaskCommandParser();","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"santosh3007"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"santosh3007"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"santosh3007"},"content":"        // no index specified","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"santosh3007"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"santosh3007"},"content":"        // no field specified","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"santosh3007"},"content":"        assertParseFailure(parser, \"1\", EditTaskCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"santosh3007"},"content":"        // no index and no field specified","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"santosh3007"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"santosh3007"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"santosh3007"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"santosh3007"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"santosh3007"},"content":"        // negative index","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"santosh3007"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"santosh3007"},"content":"        // zero index","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"santosh3007"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"santosh3007"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"santosh3007"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"santosh3007"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"santosh3007"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"santosh3007"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"santosh3007"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"santosh3007"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"jasonqiu212"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, PersonName.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2022-10-24"},{"lineNumber":59,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"santosh3007"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"jasonqiu212"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + CONTACT_INDEX_TASK1 , PersonName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-24"},{"lineNumber":62,"author":{"gitId":"santosh3007"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"santosh3007"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"santosh3007"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"santosh3007"},"content":"        Index targetIndex \u003d INDEX_SECOND_TASK;","lastModifiedDate":"2022-10-12"},{"lineNumber":67,"author":{"gitId":"santosh3007"},"content":"        String userInput \u003d targetIndex.getOneBased() + CONTACT_INDEX_TASK1 + NAME_DESC_AMY;","lastModifiedDate":"2022-10-12"},{"lineNumber":68,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":69,"author":{"gitId":"peppapighs"},"content":"        EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2022-10-15"},{"lineNumber":70,"author":{"gitId":"santosh3007"},"content":"        EditTaskCommand expectedCommand \u003d new EditTaskCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-12"},{"lineNumber":71,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":72,"author":{"gitId":"peppapighs"},"content":"        // assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-15"},{"lineNumber":73,"author":{"gitId":"santosh3007"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":74,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":75,"author":{"gitId":"santosh3007"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":76,"author":{"gitId":"santosh3007"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2022-10-12"},{"lineNumber":77,"author":{"gitId":"santosh3007"},"content":"        Index targetIndex \u003d INDEX_FIRST_TASK;","lastModifiedDate":"2022-10-12"},{"lineNumber":78,"author":{"gitId":"santosh3007"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2022-10-12"},{"lineNumber":79,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":80,"author":{"gitId":"santosh3007"},"content":"        EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2022-10-12"},{"lineNumber":81,"author":{"gitId":"santosh3007"},"content":"        EditTaskCommand expectedCommand \u003d new EditTaskCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-12"},{"lineNumber":82,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":83,"author":{"gitId":"peppapighs"},"content":"        // assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-15"},{"lineNumber":84,"author":{"gitId":"santosh3007"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":85,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":86,"author":{"gitId":"santosh3007"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":87,"author":{"gitId":"santosh3007"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2022-10-12"},{"lineNumber":88,"author":{"gitId":"santosh3007"},"content":"        // name","lastModifiedDate":"2022-10-12"},{"lineNumber":89,"author":{"gitId":"santosh3007"},"content":"        Index targetIndex \u003d INDEX_FIRST_TASK;","lastModifiedDate":"2022-10-12"},{"lineNumber":90,"author":{"gitId":"santosh3007"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2022-10-12"},{"lineNumber":91,"author":{"gitId":"santosh3007"},"content":"        EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2022-10-12"},{"lineNumber":92,"author":{"gitId":"santosh3007"},"content":"        EditTaskCommand expectedCommand \u003d new EditTaskCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-12"},{"lineNumber":93,"author":{"gitId":"santosh3007"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-12"},{"lineNumber":94,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":95,"author":{"gitId":"santosh3007"},"content":"        // contact index","lastModifiedDate":"2022-10-12"},{"lineNumber":96,"author":{"gitId":"santosh3007"},"content":"        userInput \u003d targetIndex.getOneBased() + CONTACT_INDEX_TASK1;","lastModifiedDate":"2022-10-12"},{"lineNumber":97,"author":{"gitId":"peppapighs"},"content":"        descriptor \u003d new EditTaskDescriptorBuilder().build();","lastModifiedDate":"2022-10-15"},{"lineNumber":98,"author":{"gitId":"santosh3007"},"content":"        expectedCommand \u003d new EditTaskCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-12"},{"lineNumber":99,"author":{"gitId":"peppapighs"},"content":"        // assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-15"},{"lineNumber":100,"author":{"gitId":"santosh3007"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":101,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":102,"author":{"gitId":"santosh3007"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":103,"author":{"gitId":"santosh3007"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2022-10-12"},{"lineNumber":104,"author":{"gitId":"santosh3007"},"content":"        Index targetIndex \u003d INDEX_FIRST_TASK;","lastModifiedDate":"2022-10-12"},{"lineNumber":105,"author":{"gitId":"santosh3007"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY + CONTACT_INDEX_TASK1 + NAME_DESC_AMY","lastModifiedDate":"2022-10-12"},{"lineNumber":106,"author":{"gitId":"santosh3007"},"content":"                + CONTACT_INDEX_TASK1 + CONTACT_INDEX_TASK1;","lastModifiedDate":"2022-10-12"},{"lineNumber":107,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":108,"author":{"gitId":"peppapighs"},"content":"        EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2022-10-15"},{"lineNumber":109,"author":{"gitId":"santosh3007"},"content":"        EditTaskCommand expectedCommand \u003d new EditTaskCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-12"},{"lineNumber":110,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":111,"author":{"gitId":"peppapighs"},"content":"        // assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-15"},{"lineNumber":112,"author":{"gitId":"santosh3007"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":113,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":114,"author":{"gitId":"santosh3007"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":115,"author":{"gitId":"santosh3007"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2022-10-12"},{"lineNumber":116,"author":{"gitId":"santosh3007"},"content":"        // no other valid values specified","lastModifiedDate":"2022-10-12"},{"lineNumber":117,"author":{"gitId":"santosh3007"},"content":"        Index targetIndex \u003d INDEX_FIRST_TASK;","lastModifiedDate":"2022-10-12"},{"lineNumber":118,"author":{"gitId":"santosh3007"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_CONTACT_INDEX + CONTACT_INDEX_TASK1;","lastModifiedDate":"2022-10-12"},{"lineNumber":119,"author":{"gitId":"peppapighs"},"content":"        EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder().build();","lastModifiedDate":"2022-10-15"},{"lineNumber":120,"author":{"gitId":"santosh3007"},"content":"        EditTaskCommand expectedCommand \u003d new EditTaskCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-12"},{"lineNumber":121,"author":{"gitId":"peppapighs"},"content":"        // assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-15"},{"lineNumber":122,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":123,"author":{"gitId":"santosh3007"},"content":"        // other valid values specified","lastModifiedDate":"2022-10-12"},{"lineNumber":124,"author":{"gitId":"santosh3007"},"content":"        userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY + INVALID_CONTACT_INDEX + CONTACT_INDEX_TASK1;","lastModifiedDate":"2022-10-12"},{"lineNumber":125,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":126,"author":{"gitId":"peppapighs"},"content":"        descriptor \u003d new EditTaskDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2022-10-15"},{"lineNumber":127,"author":{"gitId":"santosh3007"},"content":"        expectedCommand \u003d new EditTaskCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-12"},{"lineNumber":128,"author":{"gitId":"peppapighs"},"content":"        // assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-15"},{"lineNumber":129,"author":{"gitId":"santosh3007"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":130,"author":{"gitId":"santosh3007"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"jasonqiu212":3,"santosh3007":116,"peppapighs":11}},{"path":"src/test/java/swift/logic/parser/FindContactCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.logic.parser;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"peppapighs"},"content":"import static swift.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-01"},{"lineNumber":4,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-01"},{"lineNumber":5,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"jasonqiu212"},"content":"import swift.logic.commands.FindContactCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"jasonqiu212"},"content":"import swift.model.person.PersonNameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"jasonqiu212"},"content":"public class FindContactCommandParserTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"jasonqiu212"},"content":"    private FindContactCommandParser parser \u003d new FindContactCommandParser();","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"jasonqiu212"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"jasonqiu212"},"content":"                FindContactCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"jasonqiu212"},"content":"        FindContactCommand expectedFindContactCommand \u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"jasonqiu212"},"content":"                new FindContactCommand(new PersonNameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"jasonqiu212"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindContactCommand);","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"jasonqiu212"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindContactCommand);","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"jasonqiu212":10,"peppapighs":4,"-":20}},{"path":"src/test/java/swift/logic/parser/FindTaskCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jasonqiu212"},"content":"package swift.logic.parser;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"jasonqiu212"},"content":"import static swift.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"jasonqiu212"},"content":"import static swift.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"jasonqiu212"},"content":"import static swift.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"jasonqiu212"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"jasonqiu212"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"jasonqiu212"},"content":"import swift.logic.commands.FindTaskCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"jasonqiu212"},"content":"import swift.model.task.TaskNameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"jasonqiu212"},"content":"public class FindTaskCommandParserTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"jasonqiu212"},"content":"    private FindTaskCommandParser parser \u003d new FindTaskCommandParser();","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"jasonqiu212"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"jasonqiu212"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"jasonqiu212"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"jasonqiu212"},"content":"                FindTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"jasonqiu212"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"jasonqiu212"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"jasonqiu212"},"content":"    public void parse_validArgs_returnsFindTaskCommand() {","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"jasonqiu212"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"jasonqiu212"},"content":"        FindTaskCommand expectedFindTaskCommand \u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"jasonqiu212"},"content":"                new FindTaskCommand(new TaskNameContainsKeywordsPredicate(Arrays.asList(\"discuss\", \"meeting\")));","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"jasonqiu212"},"content":"        assertParseSuccess(parser, \"discuss meeting\", expectedFindTaskCommand);","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"jasonqiu212"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"jasonqiu212"},"content":"        assertParseSuccess(parser, \" \\n discuss \\n \\t meeting  \\t\", expectedFindTaskCommand);","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"jasonqiu212"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"jasonqiu212"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"jasonqiu212":35}},{"path":"src/test/java/swift/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.logic.parser;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2022-10-01"},{"lineNumber":6,"author":{"gitId":"peppapighs"},"content":"import static swift.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-01"},{"lineNumber":7,"author":{"gitId":"ShenyiCui"},"content":"import static swift.testutil.TypicalPersonIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"peppapighs"},"content":"import swift.commons.core.index.Index;","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"peppapighs"},"content":"import swift.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-01"},{"lineNumber":18,"author":{"gitId":"peppapighs"},"content":"import swift.model.person.Address;","lastModifiedDate":"2022-10-01"},{"lineNumber":19,"author":{"gitId":"peppapighs"},"content":"import swift.model.person.Email;","lastModifiedDate":"2022-10-01"},{"lineNumber":20,"author":{"gitId":"jasonqiu212"},"content":"import swift.model.person.PersonName;","lastModifiedDate":"2022-10-24"},{"lineNumber":21,"author":{"gitId":"peppapighs"},"content":"import swift.model.person.Phone;","lastModifiedDate":"2022-10-01"},{"lineNumber":22,"author":{"gitId":"peppapighs"},"content":"import swift.model.tag.Tag;","lastModifiedDate":"2022-10-01"},{"lineNumber":23,"author":{"gitId":"peppapighs"},"content":"import swift.model.task.TaskName;","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"peppapighs"},"content":"    private static final String VALID_INDEX_1 \u003d \"1\";","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"peppapighs"},"content":"    private static final String VALID_INDEX_2 \u003d \"2\";","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"peppapighs"},"content":"    private static final String VALID_INDEX_3 \u003d \"3\";","lastModifiedDate":"2022-10-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":64,"author":{"gitId":"peppapighs"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":65,"author":{"gitId":"peppapighs"},"content":"    public void parseIndices_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":66,"author":{"gitId":"peppapighs"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseIndices(null));","lastModifiedDate":"2022-10-16"},{"lineNumber":67,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":68,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":69,"author":{"gitId":"peppapighs"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":70,"author":{"gitId":"peppapighs"},"content":"    public void parseIndices_collectionWithValidIndices_returnsIndexSet() throws Exception {","lastModifiedDate":"2022-10-16"},{"lineNumber":71,"author":{"gitId":"peppapighs"},"content":"        Set\u003cIndex\u003e actualIndexSet \u003d ParserUtil.parseIndices(Arrays.asList(VALID_INDEX_1, VALID_INDEX_2, VALID_INDEX_3));","lastModifiedDate":"2022-10-16"},{"lineNumber":72,"author":{"gitId":"peppapighs"},"content":"        Set\u003cIndex\u003e expectedIndexSet \u003d new HashSet\u003cIndex\u003e(Arrays.asList(","lastModifiedDate":"2022-10-16"},{"lineNumber":73,"author":{"gitId":"peppapighs"},"content":"                ParserUtil.parseIndex(VALID_INDEX_1),","lastModifiedDate":"2022-10-16"},{"lineNumber":74,"author":{"gitId":"peppapighs"},"content":"                ParserUtil.parseIndex(VALID_INDEX_2),","lastModifiedDate":"2022-10-16"},{"lineNumber":75,"author":{"gitId":"peppapighs"},"content":"                ParserUtil.parseIndex(VALID_INDEX_3)));","lastModifiedDate":"2022-10-16"},{"lineNumber":76,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":77,"author":{"gitId":"peppapighs"},"content":"        assertEquals(actualIndexSet, expectedIndexSet);","lastModifiedDate":"2022-10-16"},{"lineNumber":78,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":79,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":92,"author":{"gitId":"jasonqiu212"},"content":"        PersonName expectedName \u003d new PersonName(VALID_NAME);","lastModifiedDate":"2022-10-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":99,"author":{"gitId":"jasonqiu212"},"content":"        PersonName expectedName \u003d new PersonName(VALID_NAME);","lastModifiedDate":"2022-10-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":217,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":218,"author":{"gitId":"peppapighs"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":219,"author":{"gitId":"peppapighs"},"content":"    public void parseTaskName_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-06"},{"lineNumber":220,"author":{"gitId":"peppapighs"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTaskName((String) null));","lastModifiedDate":"2022-10-06"},{"lineNumber":221,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":222,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":223,"author":{"gitId":"peppapighs"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":224,"author":{"gitId":"peppapighs"},"content":"    public void parseTaskName_invalidValue_throwsParseException() {","lastModifiedDate":"2022-10-06"},{"lineNumber":225,"author":{"gitId":"peppapighs"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTaskName(INVALID_NAME));","lastModifiedDate":"2022-10-06"},{"lineNumber":226,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":227,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":228,"author":{"gitId":"peppapighs"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":229,"author":{"gitId":"peppapighs"},"content":"    public void parseTaskName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2022-10-06"},{"lineNumber":230,"author":{"gitId":"peppapighs"},"content":"        TaskName expectedName \u003d new TaskName(VALID_NAME);","lastModifiedDate":"2022-10-06"},{"lineNumber":231,"author":{"gitId":"peppapighs"},"content":"        assertEquals(expectedName, ParserUtil.parseTaskName(VALID_NAME));","lastModifiedDate":"2022-10-06"},{"lineNumber":232,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":233,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":234,"author":{"gitId":"peppapighs"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":235,"author":{"gitId":"peppapighs"},"content":"    public void parseTaskName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2022-10-06"},{"lineNumber":236,"author":{"gitId":"peppapighs"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2022-10-06"},{"lineNumber":237,"author":{"gitId":"peppapighs"},"content":"        TaskName expectedName \u003d new TaskName(VALID_NAME);","lastModifiedDate":"2022-10-06"},{"lineNumber":238,"author":{"gitId":"peppapighs"},"content":"        assertEquals(expectedName, ParserUtil.parseTaskName(nameWithWhitespace));","lastModifiedDate":"2022-10-06"},{"lineNumber":239,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":240,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"ShenyiCui":1,"jasonqiu212":3,"peppapighs":52,"-":184}},{"path":"src/test/java/swift/logic/parser/SelectContactCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ShenyiCui"},"content":"package swift.logic.parser;","lastModifiedDate":"2022-10-23"},{"lineNumber":2,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":3,"author":{"gitId":"ShenyiCui"},"content":"import static swift.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-23"},{"lineNumber":4,"author":{"gitId":"ShenyiCui"},"content":"import static swift.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-23"},{"lineNumber":5,"author":{"gitId":"ShenyiCui"},"content":"import static swift.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-23"},{"lineNumber":6,"author":{"gitId":"ShenyiCui"},"content":"import static swift.testutil.TypicalTaskIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2022-10-23"},{"lineNumber":7,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":8,"author":{"gitId":"ShenyiCui"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-23"},{"lineNumber":9,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":10,"author":{"gitId":"ShenyiCui"},"content":"import swift.logic.commands.SelectContactCommand;","lastModifiedDate":"2022-10-23"},{"lineNumber":11,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":12,"author":{"gitId":"ShenyiCui"},"content":"/**","lastModifiedDate":"2022-10-23"},{"lineNumber":13,"author":{"gitId":"ShenyiCui"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2022-10-23"},{"lineNumber":14,"author":{"gitId":"ShenyiCui"},"content":" * outside of the SelectContactCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2022-10-23"},{"lineNumber":15,"author":{"gitId":"ShenyiCui"},"content":" * same path through the SelectContactCommand, and therefore we test only one of them.","lastModifiedDate":"2022-10-23"},{"lineNumber":16,"author":{"gitId":"ShenyiCui"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2022-10-23"},{"lineNumber":17,"author":{"gitId":"ShenyiCui"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2022-10-23"},{"lineNumber":18,"author":{"gitId":"ShenyiCui"},"content":" */","lastModifiedDate":"2022-10-23"},{"lineNumber":19,"author":{"gitId":"ShenyiCui"},"content":"public class SelectContactCommandParserTest {","lastModifiedDate":"2022-10-23"},{"lineNumber":20,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":21,"author":{"gitId":"ShenyiCui"},"content":"    private SelectContactCommandParser parser \u003d new SelectContactCommandParser();","lastModifiedDate":"2022-10-23"},{"lineNumber":22,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":23,"author":{"gitId":"ShenyiCui"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":24,"author":{"gitId":"ShenyiCui"},"content":"    public void parse_validArgs_returnsSelectContactCommand() {","lastModifiedDate":"2022-10-23"},{"lineNumber":25,"author":{"gitId":"ShenyiCui"},"content":"        assertParseSuccess(parser, \"1\", new SelectContactCommand(INDEX_FIRST_TASK));","lastModifiedDate":"2022-10-23"},{"lineNumber":26,"author":{"gitId":"ShenyiCui"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":27,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":28,"author":{"gitId":"ShenyiCui"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":29,"author":{"gitId":"ShenyiCui"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2022-10-23"},{"lineNumber":30,"author":{"gitId":"ShenyiCui"},"content":"        assertParseFailure(parser, \"a\", String","lastModifiedDate":"2022-10-23"},{"lineNumber":31,"author":{"gitId":"ShenyiCui"},"content":"                .format(MESSAGE_INVALID_COMMAND_FORMAT, SelectContactCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-23"},{"lineNumber":32,"author":{"gitId":"ShenyiCui"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":33,"author":{"gitId":"ShenyiCui"},"content":"}","lastModifiedDate":"2022-10-23"}],"authorContributionMap":{"ShenyiCui":33}},{"path":"src/test/java/swift/logic/parser/UnassignCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ShenyiCui"},"content":"package swift.logic.parser;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":3,"author":{"gitId":"ShenyiCui"},"content":"import static swift.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"ShenyiCui"},"content":"import static swift.logic.parser.CliSyntax.PREFIX_CONTACT;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"ShenyiCui"},"content":"import static swift.logic.parser.CliSyntax.PREFIX_TASK;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"ShenyiCui"},"content":"import static swift.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"ShenyiCui"},"content":"import static swift.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"ShenyiCui"},"content":"import static swift.testutil.TypicalPersonIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"ShenyiCui"},"content":"import static swift.testutil.TypicalTaskIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"ShenyiCui"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"ShenyiCui"},"content":"import swift.logic.commands.UnassignCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"ShenyiCui"},"content":"public class UnassignCommandParserTest {","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"ShenyiCui"},"content":"    private UnassignCommandParser parser \u003d new UnassignCommandParser();","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"ShenyiCui"},"content":"    @Test","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"ShenyiCui"},"content":"    public void parse_validArgs_returnsAssignCommand() {","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"ShenyiCui"},"content":"        assertParseSuccess(parser, \" \" + PREFIX_CONTACT + \"1 \" + PREFIX_TASK + \"1\",","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"ShenyiCui"},"content":"                new UnassignCommand(INDEX_FIRST_PERSON, INDEX_FIRST_TASK));","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"ShenyiCui"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"ShenyiCui"},"content":"    @Test","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"ShenyiCui"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"ShenyiCui"},"content":"        assertParseFailure(parser, \"a\", String","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"ShenyiCui"},"content":"                .format(MESSAGE_INVALID_COMMAND_FORMAT, UnassignCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"ShenyiCui"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"ShenyiCui"},"content":"}","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"ShenyiCui":30}},{"path":"src/test/java/swift/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.model;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-01"},{"lineNumber":7,"author":{"gitId":"peppapighs"},"content":"import static swift.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-01"},{"lineNumber":8,"author":{"gitId":"peppapighs"},"content":"import static swift.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-10-01"},{"lineNumber":9,"author":{"gitId":"peppapighs"},"content":"import static swift.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-10-01"},{"lineNumber":10,"author":{"gitId":"peppapighs"},"content":"import static swift.testutil.TypicalTasks.BUY_MILK;","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"ShenyiCui"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"peppapighs"},"content":"import swift.model.bridge.PersonTaskBridge;","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"peppapighs"},"content":"import swift.model.person.Person;","lastModifiedDate":"2022-10-01"},{"lineNumber":23,"author":{"gitId":"peppapighs"},"content":"import swift.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2022-10-01"},{"lineNumber":24,"author":{"gitId":"peppapighs"},"content":"import swift.model.task.Task;","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"peppapighs"},"content":"import swift.model.task.exceptions.DuplicateTaskException;","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"peppapighs"},"content":"import swift.testutil.PersonBuilder;","lastModifiedDate":"2022-10-01"},{"lineNumber":27,"author":{"gitId":"peppapighs"},"content":"import swift.testutil.TypicalBridges;","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"peppapighs"},"content":"        assertEquals(Collections.emptyList(), addressBook.getTaskList());","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"ShenyiCui"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE)","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"ShenyiCui"},"content":"            .withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"peppapighs"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons, Arrays.asList(), Arrays.asList());","lastModifiedDate":"2022-10-15"},{"lineNumber":57,"author":{"gitId":"ShenyiCui"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"ShenyiCui"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE)","lastModifiedDate":"2022-10-09"},{"lineNumber":78,"author":{"gitId":"ShenyiCui"},"content":"            .withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-10-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"ShenyiCui"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":88,"author":{"gitId":"peppapighs"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":89,"author":{"gitId":"peppapighs"},"content":"    public void resetData_withDuplicateTask_throwsDuplicateTaskException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":90,"author":{"gitId":"peppapighs"},"content":"        List\u003cTask\u003e newTasks \u003d Arrays.asList(BUY_MILK, BUY_MILK);","lastModifiedDate":"2022-10-06"},{"lineNumber":91,"author":{"gitId":"peppapighs"},"content":"        AddressBookStub newData \u003d new AddressBookStub(Arrays.asList(), newTasks, Arrays.asList());","lastModifiedDate":"2022-10-15"},{"lineNumber":92,"author":{"gitId":"ShenyiCui"},"content":"        assertThrows(DuplicateTaskException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2022-10-10"},{"lineNumber":93,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":94,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":95,"author":{"gitId":"peppapighs"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":96,"author":{"gitId":"peppapighs"},"content":"    public void hasTask_nullTask_throwsNullPointerException() {","lastModifiedDate":"2022-10-06"},{"lineNumber":97,"author":{"gitId":"peppapighs"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasTask(null));","lastModifiedDate":"2022-10-06"},{"lineNumber":98,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":99,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":100,"author":{"gitId":"peppapighs"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":101,"author":{"gitId":"peppapighs"},"content":"    public void hasTask_taskNotInAddressBook_returnsFalse() {","lastModifiedDate":"2022-10-06"},{"lineNumber":102,"author":{"gitId":"peppapighs"},"content":"        assertFalse(addressBook.hasTask(BUY_MILK));","lastModifiedDate":"2022-10-06"},{"lineNumber":103,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":104,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":105,"author":{"gitId":"peppapighs"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":106,"author":{"gitId":"peppapighs"},"content":"    public void hasTask_taskInAddressBook_returnsTrue() {","lastModifiedDate":"2022-10-06"},{"lineNumber":107,"author":{"gitId":"peppapighs"},"content":"        addressBook.addTask(BUY_MILK);","lastModifiedDate":"2022-10-06"},{"lineNumber":108,"author":{"gitId":"peppapighs"},"content":"        assertTrue(addressBook.hasTask(BUY_MILK));","lastModifiedDate":"2022-10-06"},{"lineNumber":109,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":110,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":111,"author":{"gitId":"peppapighs"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":112,"author":{"gitId":"peppapighs"},"content":"    public void getTaskList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-06"},{"lineNumber":113,"author":{"gitId":"ShenyiCui"},"content":"        assertThrows(","lastModifiedDate":"2022-10-09"},{"lineNumber":114,"author":{"gitId":"ShenyiCui"},"content":"            UnsupportedOperationException.class, () -\u003e addressBook.getTaskList().remove(0)","lastModifiedDate":"2022-10-10"},{"lineNumber":115,"author":{"gitId":"ShenyiCui"},"content":"        );","lastModifiedDate":"2022-10-09"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":118,"author":{"gitId":"peppapighs"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":119,"author":{"gitId":"peppapighs"},"content":"    public void hasBridge_nullBridge_throwsNullPointerException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":120,"author":{"gitId":"peppapighs"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasBridge(null));","lastModifiedDate":"2022-10-16"},{"lineNumber":121,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":122,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":123,"author":{"gitId":"peppapighs"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":124,"author":{"gitId":"peppapighs"},"content":"    public void hasBridge_bridgeNotInAddressBook_returnsFalse() {","lastModifiedDate":"2022-10-16"},{"lineNumber":125,"author":{"gitId":"peppapighs"},"content":"        assertFalse(addressBook.hasBridge(TypicalBridges.DEFAULT_BRIDGE_1));","lastModifiedDate":"2022-10-16"},{"lineNumber":126,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":127,"author":{"gitId":"peppapighs"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":128,"author":{"gitId":"peppapighs"},"content":"    public void hasBridge_bridgeInAddressBook_returnsTrue() {","lastModifiedDate":"2022-10-16"},{"lineNumber":129,"author":{"gitId":"peppapighs"},"content":"        addressBook.addBridge(TypicalBridges.DEFAULT_BRIDGE_1);","lastModifiedDate":"2022-10-16"},{"lineNumber":130,"author":{"gitId":"peppapighs"},"content":"        assertTrue(addressBook.hasBridge(TypicalBridges.DEFAULT_BRIDGE_1));","lastModifiedDate":"2022-10-16"},{"lineNumber":131,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":132,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":133,"author":{"gitId":"peppapighs"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":134,"author":{"gitId":"peppapighs"},"content":"    public void getBridgeList_modifyBridge_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":135,"author":{"gitId":"peppapighs"},"content":"        assertThrows(","lastModifiedDate":"2022-10-16"},{"lineNumber":136,"author":{"gitId":"peppapighs"},"content":"            UnsupportedOperationException.class, () -\u003e addressBook.getBridgeList().remove(0)","lastModifiedDate":"2022-10-16"},{"lineNumber":137,"author":{"gitId":"peppapighs"},"content":"        );","lastModifiedDate":"2022-10-16"},{"lineNumber":138,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":139,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":141,"author":{"gitId":"peppapighs"},"content":"    * A stub ReadOnlyAddressBook whose persons/tasks list can violate interface constraints.","lastModifiedDate":"2022-10-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    */","lastModifiedDate":"2016-12-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":144,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":146,"author":{"gitId":"peppapighs"},"content":"        private final ObservableList\u003cTask\u003e tasks \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-05"},{"lineNumber":147,"author":{"gitId":"peppapighs"},"content":"        private final ObservableList\u003cPersonTaskBridge\u003e bridges \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":149,"author":{"gitId":"peppapighs"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons, Collection\u003cTask\u003e tasks, Collection\u003cPersonTaskBridge\u003e bridges) {","lastModifiedDate":"2022-10-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":151,"author":{"gitId":"peppapighs"},"content":"            this.tasks.setAll(tasks);","lastModifiedDate":"2022-10-06"},{"lineNumber":152,"author":{"gitId":"peppapighs"},"content":"            this.bridges.setAll(bridges);","lastModifiedDate":"2022-10-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":159,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":160,"author":{"gitId":"peppapighs"},"content":"        @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":161,"author":{"gitId":"peppapighs"},"content":"        public ObservableList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2022-10-05"},{"lineNumber":162,"author":{"gitId":"peppapighs"},"content":"            return tasks;","lastModifiedDate":"2022-10-05"},{"lineNumber":163,"author":{"gitId":"peppapighs"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":164,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":165,"author":{"gitId":"peppapighs"},"content":"        @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":166,"author":{"gitId":"peppapighs"},"content":"        public ObservableList\u003cPersonTaskBridge\u003e getBridgeList() {","lastModifiedDate":"2022-10-15"},{"lineNumber":167,"author":{"gitId":"peppapighs"},"content":"            return bridges;","lastModifiedDate":"2022-10-15"},{"lineNumber":168,"author":{"gitId":"peppapighs"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"ShenyiCui":14,"peppapighs":77,"-":79}},{"path":"src/test/java/swift/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.model;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"ShenyiCui"},"content":"import static swift.model.Model.PREDICATE_SHOW_ALL_PEOPLE;","lastModifiedDate":"2022-10-23"},{"lineNumber":7,"author":{"gitId":"peppapighs"},"content":"import static swift.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-01"},{"lineNumber":8,"author":{"gitId":"peppapighs"},"content":"import static swift.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-10-01"},{"lineNumber":9,"author":{"gitId":"peppapighs"},"content":"import static swift.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2022-10-01"},{"lineNumber":10,"author":{"gitId":"peppapighs"},"content":"import static swift.testutil.TypicalTasks.BUY_MILK;","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"peppapighs"},"content":"import java.util.UUID;","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"peppapighs"},"content":"import swift.commons.core.GuiSettings;","lastModifiedDate":"2022-10-01"},{"lineNumber":20,"author":{"gitId":"peppapighs"},"content":"import swift.model.bridge.PersonTaskBridge;","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"jasonqiu212"},"content":"import swift.model.person.PersonNameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"peppapighs"},"content":"import swift.testutil.AddressBookBuilder;","lastModifiedDate":"2022-10-01"},{"lineNumber":23,"author":{"gitId":"peppapighs"},"content":"import swift.testutil.PersonBuilder;","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"peppapighs"},"content":"import swift.testutil.TaskBuilder;","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"peppapighs"},"content":"import swift.testutil.TypicalBridges;","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"ShenyiCui"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":103,"author":{"gitId":"ShenyiCui"},"content":"    public void getFilteredBridgeList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-23"},{"lineNumber":104,"author":{"gitId":"ShenyiCui"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredBridgeList().remove(0));","lastModifiedDate":"2022-10-23"},{"lineNumber":105,"author":{"gitId":"ShenyiCui"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":106,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":107,"author":{"gitId":"peppapighs"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":108,"author":{"gitId":"peppapighs"},"content":"    public void hasTask_nullTask_throwsNullPointerException() {","lastModifiedDate":"2022-10-06"},{"lineNumber":109,"author":{"gitId":"peppapighs"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasTask(null));","lastModifiedDate":"2022-10-06"},{"lineNumber":110,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":111,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":112,"author":{"gitId":"peppapighs"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":113,"author":{"gitId":"peppapighs"},"content":"    public void hasTask_taskNotInAddressBook_returnsFalse() {","lastModifiedDate":"2022-10-06"},{"lineNumber":114,"author":{"gitId":"peppapighs"},"content":"        assertFalse(modelManager.hasTask(BUY_MILK));","lastModifiedDate":"2022-10-06"},{"lineNumber":115,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":116,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":117,"author":{"gitId":"peppapighs"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":118,"author":{"gitId":"peppapighs"},"content":"    public void hasTask_taskInAddressBook_returnsTrue() {","lastModifiedDate":"2022-10-06"},{"lineNumber":119,"author":{"gitId":"peppapighs"},"content":"        modelManager.addTask(BUY_MILK);","lastModifiedDate":"2022-10-06"},{"lineNumber":120,"author":{"gitId":"peppapighs"},"content":"        assertTrue(modelManager.hasTask(BUY_MILK));","lastModifiedDate":"2022-10-06"},{"lineNumber":121,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":122,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":123,"author":{"gitId":"peppapighs"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":124,"author":{"gitId":"peppapighs"},"content":"    public void hasBridge_nullBridge_throwsNullPointerException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":125,"author":{"gitId":"peppapighs"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasBridge(null));","lastModifiedDate":"2022-10-16"},{"lineNumber":126,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":127,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":128,"author":{"gitId":"peppapighs"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":129,"author":{"gitId":"peppapighs"},"content":"    public void hasBridge_taskNotInAddressBook_returnsFalse() {","lastModifiedDate":"2022-10-16"},{"lineNumber":130,"author":{"gitId":"peppapighs"},"content":"        assertFalse(modelManager.hasBridge(TypicalBridges.DEFAULT_BRIDGE_1));","lastModifiedDate":"2022-10-16"},{"lineNumber":131,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":132,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":133,"author":{"gitId":"peppapighs"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":134,"author":{"gitId":"peppapighs"},"content":"    public void hasBridge_bridgeInAddressBookAddBridge_returnsTrue() {","lastModifiedDate":"2022-10-16"},{"lineNumber":135,"author":{"gitId":"peppapighs"},"content":"        modelManager.addBridge(TypicalBridges.DEFAULT_BRIDGE_1);","lastModifiedDate":"2022-10-16"},{"lineNumber":136,"author":{"gitId":"peppapighs"},"content":"        assertTrue(modelManager.hasBridge(TypicalBridges.DEFAULT_BRIDGE_1));","lastModifiedDate":"2022-10-16"},{"lineNumber":137,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":138,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":139,"author":{"gitId":"peppapighs"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":140,"author":{"gitId":"peppapighs"},"content":"    public void hasBridge_bridgeInAddressBookAddPersonTask_returnsTrue() {","lastModifiedDate":"2022-10-16"},{"lineNumber":141,"author":{"gitId":"peppapighs"},"content":"        modelManager.addBridge(","lastModifiedDate":"2022-10-16"},{"lineNumber":142,"author":{"gitId":"peppapighs"},"content":"                TypicalBridges.getTypicalAddressBook().getPersonList().get(0),","lastModifiedDate":"2022-10-16"},{"lineNumber":143,"author":{"gitId":"peppapighs"},"content":"                TypicalBridges.getTypicalAddressBook().getTaskList().get(0));","lastModifiedDate":"2022-10-16"},{"lineNumber":144,"author":{"gitId":"peppapighs"},"content":"        assertTrue(modelManager.hasBridge(new PersonTaskBridge(","lastModifiedDate":"2022-10-16"},{"lineNumber":145,"author":{"gitId":"peppapighs"},"content":"                UUID.fromString(PersonBuilder.DEFAULT_UUID), UUID.fromString(TaskBuilder.DEFAULT_ID))));","lastModifiedDate":"2022-10-16"},{"lineNumber":146,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":147,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":148,"author":{"gitId":"peppapighs"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":149,"author":{"gitId":"peppapighs"},"content":"    public void addBridge_nullBridge_throwsNullPointerException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":150,"author":{"gitId":"peppapighs"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.addBridge(null));","lastModifiedDate":"2022-10-16"},{"lineNumber":151,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":152,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":153,"author":{"gitId":"peppapighs"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":154,"author":{"gitId":"peppapighs"},"content":"    public void addBridge_nullPersonAndTask_throwsNullPointerException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":155,"author":{"gitId":"peppapighs"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.addBridge(null, null));","lastModifiedDate":"2022-10-16"},{"lineNumber":156,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":157,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":183,"author":{"gitId":"jasonqiu212"},"content":"        modelManager.updateFilteredPersonList(new PersonNameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2022-10-10"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":187,"author":{"gitId":"ShenyiCui"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PEOPLE);","lastModifiedDate":"2022-10-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":194,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"ShenyiCui":7,"jasonqiu212":2,"peppapighs":63,"-":122}},{"path":"src/test/java/swift/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.model;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"peppapighs"},"content":"import static swift.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"peppapighs":2,"-":19}},{"path":"src/test/java/swift/model/bridge/PersonTaskBridgeListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.model.bridge;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"peppapighs"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"peppapighs"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"peppapighs"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"peppapighs"},"content":"import static swift.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"peppapighs"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-22"},{"lineNumber":9,"author":{"gitId":"peppapighs"},"content":"import java.util.List;","lastModifiedDate":"2022-10-22"},{"lineNumber":10,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":11,"author":{"gitId":"peppapighs"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"peppapighs"},"content":"import swift.model.bridge.exceptions.BridgeNotFoundException;","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"peppapighs"},"content":"import swift.model.bridge.exceptions.DuplicateBridgeException;","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"peppapighs"},"content":"import swift.testutil.PersonBuilder;","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"peppapighs"},"content":"import swift.testutil.TaskBuilder;","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"peppapighs"},"content":"import swift.testutil.TypicalBridges;","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"peppapighs"},"content":"public class PersonTaskBridgeListTest {","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"peppapighs"},"content":"    private final PersonTaskBridgeList bridges \u003d new PersonTaskBridgeList();","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"peppapighs"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"peppapighs"},"content":"    public void contains_nullBridge_throwsNullPointerException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"peppapighs"},"content":"        assertThrows(NullPointerException.class, () -\u003e bridges.contains(null));","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"peppapighs"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"peppapighs"},"content":"    public void contains_bridgeNotInList_returnsFalse() {","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"peppapighs"},"content":"        assertFalse(bridges.contains(TypicalBridges.DEFAULT_BRIDGE_1));","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":32,"author":{"gitId":"peppapighs"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"peppapighs"},"content":"    public void contains_bridgeInList_returnsTrue() {","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"peppapighs"},"content":"        bridges.add(TypicalBridges.DEFAULT_BRIDGE_1);","lastModifiedDate":"2022-10-16"},{"lineNumber":35,"author":{"gitId":"peppapighs"},"content":"        assertTrue(bridges.contains(TypicalBridges.DEFAULT_BRIDGE_1));","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"peppapighs"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":39,"author":{"gitId":"peppapighs"},"content":"    public void add_nullBridge_throwsNullPointerException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"peppapighs"},"content":"        assertThrows(NullPointerException.class, () -\u003e bridges.add(null));","lastModifiedDate":"2022-10-16"},{"lineNumber":41,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":42,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":43,"author":{"gitId":"peppapighs"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":44,"author":{"gitId":"peppapighs"},"content":"    public void add_duplicateTask_throwsDuplicateBridgeException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":45,"author":{"gitId":"peppapighs"},"content":"        bridges.add(TypicalBridges.DEFAULT_BRIDGE_1);","lastModifiedDate":"2022-10-16"},{"lineNumber":46,"author":{"gitId":"peppapighs"},"content":"        assertThrows(DuplicateBridgeException.class, () -\u003e bridges.add(TypicalBridges.DEFAULT_BRIDGE_1));","lastModifiedDate":"2022-10-16"},{"lineNumber":47,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":48,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":49,"author":{"gitId":"peppapighs"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":50,"author":{"gitId":"peppapighs"},"content":"    public void remove_nullBridge_throwsNullPointerException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":51,"author":{"gitId":"peppapighs"},"content":"        assertThrows(NullPointerException.class, () -\u003e bridges.remove(null));","lastModifiedDate":"2022-10-16"},{"lineNumber":52,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":53,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":54,"author":{"gitId":"peppapighs"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":55,"author":{"gitId":"peppapighs"},"content":"    public void remove_bridgeNotInList_throwsBridgeNotFoundException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":56,"author":{"gitId":"peppapighs"},"content":"        assertThrows(BridgeNotFoundException.class, () -\u003e bridges.remove(TypicalBridges.DEFAULT_BRIDGE_1));","lastModifiedDate":"2022-10-16"},{"lineNumber":57,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":58,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":59,"author":{"gitId":"peppapighs"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":60,"author":{"gitId":"peppapighs"},"content":"    public void remove_existingBridge_removesBridge() {","lastModifiedDate":"2022-10-16"},{"lineNumber":61,"author":{"gitId":"peppapighs"},"content":"        bridges.add(TypicalBridges.DEFAULT_BRIDGE_1);","lastModifiedDate":"2022-10-16"},{"lineNumber":62,"author":{"gitId":"peppapighs"},"content":"        bridges.remove(TypicalBridges.DEFAULT_BRIDGE_1);","lastModifiedDate":"2022-10-16"},{"lineNumber":63,"author":{"gitId":"peppapighs"},"content":"        PersonTaskBridgeList expectedUniqueBridgeList \u003d new PersonTaskBridgeList();","lastModifiedDate":"2022-10-16"},{"lineNumber":64,"author":{"gitId":"peppapighs"},"content":"        assertEquals(bridges, expectedUniqueBridgeList);","lastModifiedDate":"2022-10-16"},{"lineNumber":65,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":66,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":67,"author":{"gitId":"peppapighs"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":68,"author":{"gitId":"peppapighs"},"content":"    public void removePerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":69,"author":{"gitId":"peppapighs"},"content":"        assertThrows(NullPointerException.class, () -\u003e bridges.removePerson(null));","lastModifiedDate":"2022-10-16"},{"lineNumber":70,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":71,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":72,"author":{"gitId":"peppapighs"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":73,"author":{"gitId":"peppapighs"},"content":"    public void removePerson_existingBridge_removesBridge() {","lastModifiedDate":"2022-10-16"},{"lineNumber":74,"author":{"gitId":"peppapighs"},"content":"        bridges.add(TypicalBridges.DEFAULT_BRIDGE_1);","lastModifiedDate":"2022-10-16"},{"lineNumber":75,"author":{"gitId":"peppapighs"},"content":"        bridges.removePerson(new PersonBuilder().withId(\"c4c645da-27b3-454d-9428-5295a6ee1f33\").build());","lastModifiedDate":"2022-10-16"},{"lineNumber":76,"author":{"gitId":"peppapighs"},"content":"        PersonTaskBridgeList expectedUniqueBridgeList \u003d new PersonTaskBridgeList();","lastModifiedDate":"2022-10-16"},{"lineNumber":77,"author":{"gitId":"peppapighs"},"content":"        assertEquals(bridges, expectedUniqueBridgeList);","lastModifiedDate":"2022-10-16"},{"lineNumber":78,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":79,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":80,"author":{"gitId":"peppapighs"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":81,"author":{"gitId":"peppapighs"},"content":"    public void removeTask_nullTask_throwsNullPointerException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":82,"author":{"gitId":"peppapighs"},"content":"        assertThrows(NullPointerException.class, () -\u003e bridges.removeTask(null));","lastModifiedDate":"2022-10-16"},{"lineNumber":83,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":84,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":85,"author":{"gitId":"peppapighs"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":86,"author":{"gitId":"peppapighs"},"content":"    public void removeTask_existingBridge_removesBridge() {","lastModifiedDate":"2022-10-16"},{"lineNumber":87,"author":{"gitId":"peppapighs"},"content":"        bridges.add(TypicalBridges.DEFAULT_BRIDGE_1);","lastModifiedDate":"2022-10-16"},{"lineNumber":88,"author":{"gitId":"peppapighs"},"content":"        bridges.removeTask(new TaskBuilder().withId(\"bfbf250c-fd58-49b4-be15-ca12095ca2ee\").build());","lastModifiedDate":"2022-10-16"},{"lineNumber":89,"author":{"gitId":"peppapighs"},"content":"        PersonTaskBridgeList expectedUniqueBridgeList \u003d new PersonTaskBridgeList();","lastModifiedDate":"2022-10-16"},{"lineNumber":90,"author":{"gitId":"peppapighs"},"content":"        assertEquals(bridges, expectedUniqueBridgeList);","lastModifiedDate":"2022-10-16"},{"lineNumber":91,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":92,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":93,"author":{"gitId":"peppapighs"},"content":"    @Test","lastModifiedDate":"2022-10-22"},{"lineNumber":94,"author":{"gitId":"peppapighs"},"content":"    public void setBridges_uniqueTaskList_replacesOwnListWithProvidedUniqueTaskList() {","lastModifiedDate":"2022-10-22"},{"lineNumber":95,"author":{"gitId":"peppapighs"},"content":"        bridges.add(TypicalBridges.DEFAULT_BRIDGE_1);","lastModifiedDate":"2022-10-22"},{"lineNumber":96,"author":{"gitId":"peppapighs"},"content":"        PersonTaskBridgeList expectedBridgeList \u003d new PersonTaskBridgeList();","lastModifiedDate":"2022-10-22"},{"lineNumber":97,"author":{"gitId":"peppapighs"},"content":"        expectedBridgeList.add(TypicalBridges.DEFAULT_BRIDGE_2);","lastModifiedDate":"2022-10-22"},{"lineNumber":98,"author":{"gitId":"peppapighs"},"content":"        bridges.setBridges(List.of(TypicalBridges.DEFAULT_BRIDGE_2));","lastModifiedDate":"2022-10-22"},{"lineNumber":99,"author":{"gitId":"peppapighs"},"content":"        assertEquals(expectedBridgeList, bridges);","lastModifiedDate":"2022-10-22"},{"lineNumber":100,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":101,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":102,"author":{"gitId":"peppapighs"},"content":"    @Test","lastModifiedDate":"2022-10-22"},{"lineNumber":103,"author":{"gitId":"peppapighs"},"content":"    public void setBridges_nullList_throwsNullPointerException() {","lastModifiedDate":"2022-10-22"},{"lineNumber":104,"author":{"gitId":"peppapighs"},"content":"        assertThrows(NullPointerException.class, () -\u003e bridges.setBridges(null));","lastModifiedDate":"2022-10-22"},{"lineNumber":105,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":106,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":107,"author":{"gitId":"peppapighs"},"content":"    @Test","lastModifiedDate":"2022-10-22"},{"lineNumber":108,"author":{"gitId":"peppapighs"},"content":"    public void setBridges_listWithDuplicateTasks_throwsDuplicateTaskException() {","lastModifiedDate":"2022-10-22"},{"lineNumber":109,"author":{"gitId":"peppapighs"},"content":"        List\u003cPersonTaskBridge\u003e listWithDuplicateTasks \u003d Arrays","lastModifiedDate":"2022-10-22"},{"lineNumber":110,"author":{"gitId":"peppapighs"},"content":"                .asList(TypicalBridges.DEFAULT_BRIDGE_1, TypicalBridges.DEFAULT_BRIDGE_1);","lastModifiedDate":"2022-10-22"},{"lineNumber":111,"author":{"gitId":"peppapighs"},"content":"        assertThrows(DuplicateBridgeException.class, () -\u003e bridges.setBridges(listWithDuplicateTasks));","lastModifiedDate":"2022-10-22"},{"lineNumber":112,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":113,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":114,"author":{"gitId":"peppapighs"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":115,"author":{"gitId":"peppapighs"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":116,"author":{"gitId":"peppapighs"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e bridges","lastModifiedDate":"2022-10-16"},{"lineNumber":117,"author":{"gitId":"peppapighs"},"content":"                .asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2022-10-16"},{"lineNumber":118,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":119,"author":{"gitId":"peppapighs"},"content":"}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"peppapighs":119}},{"path":"src/test/java/swift/model/bridge/PersonTaskBridgeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.model.bridge;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"peppapighs"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"jasonqiu212"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-11-06"},{"lineNumber":5,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"peppapighs"},"content":"import java.util.UUID;","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"peppapighs"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"peppapighs"},"content":"public class PersonTaskBridgeTest {","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"peppapighs"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"peppapighs"},"content":"    public void getPersonId_validPersonId_returnsPersonId() {","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"peppapighs"},"content":"        UUID personId \u003d UUID.randomUUID();","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"peppapighs"},"content":"        UUID taskId \u003d UUID.randomUUID();","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"peppapighs"},"content":"        PersonTaskBridge personTaskBridge \u003d new PersonTaskBridge(personId, taskId);","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"peppapighs"},"content":"        assertEquals(personId, personTaskBridge.getPersonId());","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"peppapighs"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"peppapighs"},"content":"    public void getTaskId_validTaskId_returnsTaskId() {","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"peppapighs"},"content":"        UUID personId \u003d UUID.randomUUID();","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"peppapighs"},"content":"        UUID taskId \u003d UUID.randomUUID();","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"peppapighs"},"content":"        PersonTaskBridge personTaskBridge \u003d new PersonTaskBridge(personId, taskId);","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"peppapighs"},"content":"        assertEquals(taskId, personTaskBridge.getTaskId());","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":27,"author":{"gitId":"jasonqiu212"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":28,"author":{"gitId":"jasonqiu212"},"content":"    public void equals_null_false() {","lastModifiedDate":"2022-11-06"},{"lineNumber":29,"author":{"gitId":"jasonqiu212"},"content":"        UUID personId \u003d UUID.randomUUID();","lastModifiedDate":"2022-11-06"},{"lineNumber":30,"author":{"gitId":"jasonqiu212"},"content":"        UUID taskId \u003d UUID.randomUUID();","lastModifiedDate":"2022-11-06"},{"lineNumber":31,"author":{"gitId":"jasonqiu212"},"content":"        assertNotEquals(new PersonTaskBridge(personId, taskId), null);","lastModifiedDate":"2022-11-06"},{"lineNumber":32,"author":{"gitId":"jasonqiu212"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":33,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":34,"author":{"gitId":"jasonqiu212"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":35,"author":{"gitId":"jasonqiu212"},"content":"    public void equals_differentPersonIdAndTaskId_false() {","lastModifiedDate":"2022-11-06"},{"lineNumber":36,"author":{"gitId":"jasonqiu212"},"content":"        UUID personOneId \u003d UUID.fromString(\"6517916e-80c0-40e1-ac13-7cb870f57d80\");","lastModifiedDate":"2022-11-06"},{"lineNumber":37,"author":{"gitId":"jasonqiu212"},"content":"        UUID personTwoId \u003d UUID.fromString(\"049fb6e6-7e43-4075-a1e3-faad028faa0f\");","lastModifiedDate":"2022-11-06"},{"lineNumber":38,"author":{"gitId":"jasonqiu212"},"content":"        UUID taskOneId \u003d UUID.fromString(\"5f3f93b9-d839-4d5c-b197-9f3e53ebbb71\");","lastModifiedDate":"2022-11-06"},{"lineNumber":39,"author":{"gitId":"jasonqiu212"},"content":"        UUID taskTwoId \u003d UUID.fromString(\"f2d431ed-1793-4761-9121-3652441e0ea2\");","lastModifiedDate":"2022-11-06"},{"lineNumber":40,"author":{"gitId":"jasonqiu212"},"content":"        assertNotEquals(new PersonTaskBridge(personOneId, taskOneId), new PersonTaskBridge(personTwoId, taskTwoId));","lastModifiedDate":"2022-11-06"},{"lineNumber":41,"author":{"gitId":"jasonqiu212"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":42,"author":{"gitId":"peppapighs"},"content":"}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"jasonqiu212":17,"peppapighs":25}},{"path":"src/test/java/swift/model/person/AddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.model.person;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"peppapighs"},"content":"import static swift.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class AddressTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Address(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidAddress \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Address(invalidAddress));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidAddress() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null address","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Address.isValidAddress(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // valid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"-\")); // one character","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\")); // long address","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"peppapighs":2,"-":34}},{"path":"src/test/java/swift/model/person/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.model.person;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"peppapighs"},"content":"import static swift.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"peppapighs":2,"-":66}},{"path":"src/test/java/swift/model/person/PersonNameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.model.person;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"peppapighs"},"content":"import swift.testutil.PersonBuilder;","lastModifiedDate":"2022-10-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"jasonqiu212"},"content":"public class PersonNameContainsKeywordsPredicateTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"jasonqiu212"},"content":"        PersonNameContainsKeywordsPredicate","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"jasonqiu212"},"content":"                firstPredicate \u003d new PersonNameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"jasonqiu212"},"content":"        PersonNameContainsKeywordsPredicate","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"jasonqiu212"},"content":"                secondPredicate \u003d new PersonNameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"jasonqiu212"},"content":"        PersonNameContainsKeywordsPredicate","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"jasonqiu212"},"content":"                firstPredicateCopy \u003d new PersonNameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"jasonqiu212"},"content":"        PersonNameContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"jasonqiu212"},"content":"                new PersonNameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"jasonqiu212"},"content":"        predicate \u003d new PersonNameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"jasonqiu212"},"content":"        predicate \u003d new PersonNameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"jasonqiu212"},"content":"        predicate \u003d new PersonNameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"jasonqiu212"},"content":"        PersonNameContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"jasonqiu212"},"content":"                new PersonNameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"jasonqiu212"},"content":"        predicate \u003d new PersonNameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"jasonqiu212"},"content":"        predicate \u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"jasonqiu212"},"content":"                new PersonNameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2017-06-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"jasonqiu212":17,"peppapighs":2,"-":62}},{"path":"src/test/java/swift/model/person/PersonNameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jasonqiu212"},"content":"package swift.model.person;","lastModifiedDate":"2022-10-24"},{"lineNumber":2,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":3,"author":{"gitId":"jasonqiu212"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-24"},{"lineNumber":4,"author":{"gitId":"jasonqiu212"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-24"},{"lineNumber":5,"author":{"gitId":"jasonqiu212"},"content":"import static swift.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-24"},{"lineNumber":6,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":7,"author":{"gitId":"jasonqiu212"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-24"},{"lineNumber":8,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":9,"author":{"gitId":"jasonqiu212"},"content":"public class PersonNameTest {","lastModifiedDate":"2022-10-24"},{"lineNumber":10,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":11,"author":{"gitId":"jasonqiu212"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":12,"author":{"gitId":"jasonqiu212"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-24"},{"lineNumber":13,"author":{"gitId":"jasonqiu212"},"content":"        assertThrows(NullPointerException.class, () -\u003e new PersonName(null));","lastModifiedDate":"2022-10-24"},{"lineNumber":14,"author":{"gitId":"jasonqiu212"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":15,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":16,"author":{"gitId":"jasonqiu212"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":17,"author":{"gitId":"jasonqiu212"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-24"},{"lineNumber":18,"author":{"gitId":"jasonqiu212"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2022-10-24"},{"lineNumber":19,"author":{"gitId":"jasonqiu212"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new PersonName(invalidName));","lastModifiedDate":"2022-10-24"},{"lineNumber":20,"author":{"gitId":"jasonqiu212"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":21,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":22,"author":{"gitId":"jasonqiu212"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":23,"author":{"gitId":"jasonqiu212"},"content":"    public void isValidName() {","lastModifiedDate":"2022-10-24"},{"lineNumber":24,"author":{"gitId":"jasonqiu212"},"content":"        // null name","lastModifiedDate":"2022-10-24"},{"lineNumber":25,"author":{"gitId":"jasonqiu212"},"content":"        assertThrows(NullPointerException.class, () -\u003e PersonName.isValidName(null));","lastModifiedDate":"2022-10-24"},{"lineNumber":26,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":27,"author":{"gitId":"jasonqiu212"},"content":"        // invalid name","lastModifiedDate":"2022-10-24"},{"lineNumber":28,"author":{"gitId":"jasonqiu212"},"content":"        assertFalse(PersonName.isValidName(\"\")); // empty string","lastModifiedDate":"2022-10-24"},{"lineNumber":29,"author":{"gitId":"jasonqiu212"},"content":"        assertFalse(PersonName.isValidName(\" \")); // spaces only","lastModifiedDate":"2022-10-24"},{"lineNumber":30,"author":{"gitId":"jasonqiu212"},"content":"        assertFalse(PersonName.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2022-10-24"},{"lineNumber":31,"author":{"gitId":"jasonqiu212"},"content":"        assertFalse(PersonName.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2022-10-24"},{"lineNumber":32,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":33,"author":{"gitId":"jasonqiu212"},"content":"        // valid name","lastModifiedDate":"2022-10-24"},{"lineNumber":34,"author":{"gitId":"jasonqiu212"},"content":"        assertTrue(PersonName.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2022-10-24"},{"lineNumber":35,"author":{"gitId":"jasonqiu212"},"content":"        assertTrue(PersonName.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2022-10-24"},{"lineNumber":36,"author":{"gitId":"jasonqiu212"},"content":"        assertTrue(PersonName.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2022-10-24"},{"lineNumber":37,"author":{"gitId":"jasonqiu212"},"content":"        assertTrue(PersonName.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2022-10-24"},{"lineNumber":38,"author":{"gitId":"jasonqiu212"},"content":"        assertTrue(PersonName.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2022-10-24"},{"lineNumber":39,"author":{"gitId":"jasonqiu212"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":40,"author":{"gitId":"jasonqiu212"},"content":"}","lastModifiedDate":"2022-10-24"}],"authorContributionMap":{"jasonqiu212":40}},{"path":"src/test/java/swift/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.model.person;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-10-01"},{"lineNumber":6,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-10-01"},{"lineNumber":7,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-10-01"},{"lineNumber":8,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-10-01"},{"lineNumber":9,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-01"},{"lineNumber":10,"author":{"gitId":"peppapighs"},"content":"import static swift.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-01"},{"lineNumber":11,"author":{"gitId":"peppapighs"},"content":"import static swift.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-10-01"},{"lineNumber":12,"author":{"gitId":"peppapighs"},"content":"import static swift.testutil.TypicalPersons.BOB;","lastModifiedDate":"2022-10-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":16,"author":{"gitId":"peppapighs"},"content":"import swift.testutil.PersonBuilder;","lastModifiedDate":"2022-10-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"yunruu"},"content":"        // same name, all attributes same, except tags -\u003e returns true","lastModifiedDate":"2022-11-03"},{"lineNumber":35,"author":{"gitId":"yunruu"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-11-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"yunruu"},"content":"        // same name, one attribute excluding tag different -\u003e returns false","lastModifiedDate":"2022-11-03"},{"lineNumber":39,"author":{"gitId":"yunruu"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2022-11-03"},{"lineNumber":40,"author":{"gitId":"yunruu"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2022-11-03"},{"lineNumber":41,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":42,"author":{"gitId":"yunruu"},"content":"        // same name, all other attributes different -\u003e returns false","lastModifiedDate":"2022-11-03"},{"lineNumber":43,"author":{"gitId":"yunruu"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2022-11-03"},{"lineNumber":44,"author":{"gitId":"yunruu"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-11-03"},{"lineNumber":45,"author":{"gitId":"yunruu"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2022-11-03"},{"lineNumber":46,"author":{"gitId":"yunruu"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"peppapighs":10,"-":78,"yunruu":11}},{"path":"src/test/java/swift/model/person/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.model.person;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"peppapighs"},"content":"import static swift.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"peppapighs":2,"-":38}},{"path":"src/test/java/swift/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.model.person;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-10-01"},{"lineNumber":7,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-01"},{"lineNumber":8,"author":{"gitId":"peppapighs"},"content":"import static swift.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-01"},{"lineNumber":9,"author":{"gitId":"peppapighs"},"content":"import static swift.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-10-01"},{"lineNumber":10,"author":{"gitId":"peppapighs"},"content":"import static swift.testutil.TypicalPersons.BOB;","lastModifiedDate":"2022-10-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"peppapighs"},"content":"import swift.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2022-10-01"},{"lineNumber":19,"author":{"gitId":"peppapighs"},"content":"import swift.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2022-10-01"},{"lineNumber":20,"author":{"gitId":"peppapighs"},"content":"import swift.testutil.PersonBuilder;","lastModifiedDate":"2022-10-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"yunruu"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-11-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":170,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"peppapighs":9,"-":160,"yunruu":1}},{"path":"src/test/java/swift/model/tag/TagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.model.tag;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":3,"author":{"gitId":"jasonqiu212"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-11-06"},{"lineNumber":4,"author":{"gitId":"jasonqiu212"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-11-06"},{"lineNumber":5,"author":{"gitId":"peppapighs"},"content":"import static swift.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class TagTest {","lastModifiedDate":"2017-12-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Tag(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidTagName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidTagName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidTagName() {","lastModifiedDate":"2017-12-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null tag name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Tag.isValidTagName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":28,"author":{"gitId":"jasonqiu212"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":29,"author":{"gitId":"jasonqiu212"},"content":"    public void equals_sameObject_true() {","lastModifiedDate":"2022-11-06"},{"lineNumber":30,"author":{"gitId":"jasonqiu212"},"content":"        Tag tag \u003d new Tag(\"Developer\");","lastModifiedDate":"2022-11-06"},{"lineNumber":31,"author":{"gitId":"jasonqiu212"},"content":"        assertEquals(tag, tag);","lastModifiedDate":"2022-11-06"},{"lineNumber":32,"author":{"gitId":"jasonqiu212"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":33,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":34,"author":{"gitId":"jasonqiu212"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":35,"author":{"gitId":"jasonqiu212"},"content":"    public void equals_null_false() {","lastModifiedDate":"2022-11-06"},{"lineNumber":36,"author":{"gitId":"jasonqiu212"},"content":"        Tag tag \u003d new Tag(\"Developer\");","lastModifiedDate":"2022-11-06"},{"lineNumber":37,"author":{"gitId":"jasonqiu212"},"content":"        assertNotEquals(tag, null);","lastModifiedDate":"2022-11-06"},{"lineNumber":38,"author":{"gitId":"jasonqiu212"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":39,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":40,"author":{"gitId":"jasonqiu212"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":41,"author":{"gitId":"jasonqiu212"},"content":"    public void equals_sameTagName_true() {","lastModifiedDate":"2022-11-06"},{"lineNumber":42,"author":{"gitId":"jasonqiu212"},"content":"        assertEquals(new Tag(\"Developer\"), new Tag(\"Developer\"));","lastModifiedDate":"2022-11-06"},{"lineNumber":43,"author":{"gitId":"jasonqiu212"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":44,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":45,"author":{"gitId":"jasonqiu212"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":46,"author":{"gitId":"jasonqiu212"},"content":"    public void equals_differentTagName_false() {","lastModifiedDate":"2022-11-06"},{"lineNumber":47,"author":{"gitId":"jasonqiu212"},"content":"        assertNotEquals(new Tag(\"Developer\"), new Tag(\"Friend\"));","lastModifiedDate":"2022-11-06"},{"lineNumber":48,"author":{"gitId":"jasonqiu212"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-12-04"}],"authorContributionMap":{"jasonqiu212":23,"peppapighs":2,"-":24}},{"path":"src/test/java/swift/model/task/DeadlineTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jasonqiu212"},"content":"package swift.model.task;","lastModifiedDate":"2022-11-06"},{"lineNumber":2,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":3,"author":{"gitId":"jasonqiu212"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-11-06"},{"lineNumber":4,"author":{"gitId":"jasonqiu212"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-11-06"},{"lineNumber":5,"author":{"gitId":"jasonqiu212"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-11-06"},{"lineNumber":6,"author":{"gitId":"jasonqiu212"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-11-06"},{"lineNumber":7,"author":{"gitId":"jasonqiu212"},"content":"import static swift.testutil.Assert.assertThrows;","lastModifiedDate":"2022-11-06"},{"lineNumber":8,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":9,"author":{"gitId":"jasonqiu212"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-11-06"},{"lineNumber":10,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":11,"author":{"gitId":"jasonqiu212"},"content":"public class DeadlineTest {","lastModifiedDate":"2022-11-06"},{"lineNumber":12,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":13,"author":{"gitId":"jasonqiu212"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":14,"author":{"gitId":"jasonqiu212"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-11-06"},{"lineNumber":15,"author":{"gitId":"jasonqiu212"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Deadline(null));","lastModifiedDate":"2022-11-06"},{"lineNumber":16,"author":{"gitId":"jasonqiu212"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":17,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":18,"author":{"gitId":"jasonqiu212"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":19,"author":{"gitId":"jasonqiu212"},"content":"    public void constructor_invalidDeadline_throwsIllegalArgumentException() {","lastModifiedDate":"2022-11-06"},{"lineNumber":20,"author":{"gitId":"jasonqiu212"},"content":"        String invalidDeadline \u003d \"invalid\";","lastModifiedDate":"2022-11-06"},{"lineNumber":21,"author":{"gitId":"jasonqiu212"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Deadline(invalidDeadline));","lastModifiedDate":"2022-11-06"},{"lineNumber":22,"author":{"gitId":"jasonqiu212"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":23,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":24,"author":{"gitId":"jasonqiu212"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":25,"author":{"gitId":"jasonqiu212"},"content":"    public void isValidDeadline_invalidDeadline_false() {","lastModifiedDate":"2022-11-06"},{"lineNumber":26,"author":{"gitId":"jasonqiu212"},"content":"        // null name","lastModifiedDate":"2022-11-06"},{"lineNumber":27,"author":{"gitId":"jasonqiu212"},"content":"        assertThrows(NullPointerException.class, () -\u003e Deadline.isValidDeadline(null));","lastModifiedDate":"2022-11-06"},{"lineNumber":28,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":29,"author":{"gitId":"jasonqiu212"},"content":"        // invalid deadline","lastModifiedDate":"2022-11-06"},{"lineNumber":30,"author":{"gitId":"jasonqiu212"},"content":"        assertFalse(Deadline.isValidDeadline(\"\")); // empty string","lastModifiedDate":"2022-11-06"},{"lineNumber":31,"author":{"gitId":"jasonqiu212"},"content":"        assertFalse(Deadline.isValidDeadline(\" \")); // spaces only","lastModifiedDate":"2022-11-06"},{"lineNumber":32,"author":{"gitId":"jasonqiu212"},"content":"        assertFalse(Deadline.isValidDeadline(\"milk\")); // alphabets only","lastModifiedDate":"2022-11-06"},{"lineNumber":33,"author":{"gitId":"jasonqiu212"},"content":"        assertFalse(Deadline.isValidDeadline(\"12345\")); // numbers only","lastModifiedDate":"2022-11-06"},{"lineNumber":34,"author":{"gitId":"jasonqiu212"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":35,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":36,"author":{"gitId":"jasonqiu212"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":37,"author":{"gitId":"jasonqiu212"},"content":"    public void isValidDeadline_validDeadline_true() {","lastModifiedDate":"2022-11-06"},{"lineNumber":38,"author":{"gitId":"jasonqiu212"},"content":"        assertTrue(Deadline.isValidDeadline(\"12-12-2001 1200\"));","lastModifiedDate":"2022-11-06"},{"lineNumber":39,"author":{"gitId":"jasonqiu212"},"content":"        assertTrue(Deadline.isValidDeadline(\"06-05-2020 2359\"));","lastModifiedDate":"2022-11-06"},{"lineNumber":40,"author":{"gitId":"jasonqiu212"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":41,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":42,"author":{"gitId":"jasonqiu212"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":43,"author":{"gitId":"jasonqiu212"},"content":"    public void equals_sameObject_true() {","lastModifiedDate":"2022-11-06"},{"lineNumber":44,"author":{"gitId":"jasonqiu212"},"content":"        Deadline deadline \u003d new Deadline(\"12-12-2001 1200\");","lastModifiedDate":"2022-11-06"},{"lineNumber":45,"author":{"gitId":"jasonqiu212"},"content":"        assertEquals(deadline, deadline);","lastModifiedDate":"2022-11-06"},{"lineNumber":46,"author":{"gitId":"jasonqiu212"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":47,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":48,"author":{"gitId":"jasonqiu212"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":49,"author":{"gitId":"jasonqiu212"},"content":"    public void equals_null_false() {","lastModifiedDate":"2022-11-06"},{"lineNumber":50,"author":{"gitId":"jasonqiu212"},"content":"        Deadline deadline \u003d new Deadline(\"12-12-2001 1200\");","lastModifiedDate":"2022-11-06"},{"lineNumber":51,"author":{"gitId":"jasonqiu212"},"content":"        assertNotEquals(deadline, null);","lastModifiedDate":"2022-11-06"},{"lineNumber":52,"author":{"gitId":"jasonqiu212"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":53,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":54,"author":{"gitId":"jasonqiu212"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":55,"author":{"gitId":"jasonqiu212"},"content":"    public void equals_sameDeadline_true() {","lastModifiedDate":"2022-11-06"},{"lineNumber":56,"author":{"gitId":"jasonqiu212"},"content":"        assertEquals(new Deadline(\"12-12-2001 1200\"), new Deadline(\"12-12-2001 1200\"));","lastModifiedDate":"2022-11-06"},{"lineNumber":57,"author":{"gitId":"jasonqiu212"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":58,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":59,"author":{"gitId":"jasonqiu212"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":60,"author":{"gitId":"jasonqiu212"},"content":"    public void equals_differentDeadline_false() {","lastModifiedDate":"2022-11-06"},{"lineNumber":61,"author":{"gitId":"jasonqiu212"},"content":"        assertNotEquals(new Deadline(\"12-12-2001 1200\"), new Deadline(\"13-05-2020 2359\"));","lastModifiedDate":"2022-11-06"},{"lineNumber":62,"author":{"gitId":"jasonqiu212"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":63,"author":{"gitId":"jasonqiu212"},"content":"}","lastModifiedDate":"2022-11-06"}],"authorContributionMap":{"jasonqiu212":63}},{"path":"src/test/java/swift/model/task/DescriptionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jasonqiu212"},"content":"package swift.model.task;","lastModifiedDate":"2022-11-06"},{"lineNumber":2,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":3,"author":{"gitId":"jasonqiu212"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-11-06"},{"lineNumber":4,"author":{"gitId":"jasonqiu212"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-11-06"},{"lineNumber":5,"author":{"gitId":"jasonqiu212"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-11-06"},{"lineNumber":6,"author":{"gitId":"jasonqiu212"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-11-06"},{"lineNumber":7,"author":{"gitId":"jasonqiu212"},"content":"import static swift.testutil.Assert.assertThrows;","lastModifiedDate":"2022-11-06"},{"lineNumber":8,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":9,"author":{"gitId":"jasonqiu212"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-11-06"},{"lineNumber":10,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":11,"author":{"gitId":"jasonqiu212"},"content":"public class DescriptionTest {","lastModifiedDate":"2022-11-06"},{"lineNumber":12,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":13,"author":{"gitId":"jasonqiu212"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":14,"author":{"gitId":"jasonqiu212"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-11-06"},{"lineNumber":15,"author":{"gitId":"jasonqiu212"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Description(null));","lastModifiedDate":"2022-11-06"},{"lineNumber":16,"author":{"gitId":"jasonqiu212"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":17,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":18,"author":{"gitId":"jasonqiu212"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":19,"author":{"gitId":"jasonqiu212"},"content":"    public void constructor_invalidDescription_throwsIllegalArgumentException() {","lastModifiedDate":"2022-11-06"},{"lineNumber":20,"author":{"gitId":"jasonqiu212"},"content":"        String invalidDescription \u003d \"~\";","lastModifiedDate":"2022-11-06"},{"lineNumber":21,"author":{"gitId":"jasonqiu212"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Description(invalidDescription));","lastModifiedDate":"2022-11-06"},{"lineNumber":22,"author":{"gitId":"jasonqiu212"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":23,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":24,"author":{"gitId":"jasonqiu212"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":25,"author":{"gitId":"jasonqiu212"},"content":"    public void isValidDescription_invalidDescription_false() {","lastModifiedDate":"2022-11-06"},{"lineNumber":26,"author":{"gitId":"jasonqiu212"},"content":"        // null name","lastModifiedDate":"2022-11-06"},{"lineNumber":27,"author":{"gitId":"jasonqiu212"},"content":"        assertThrows(NullPointerException.class, () -\u003e Description.isValidDescription(null));","lastModifiedDate":"2022-11-06"},{"lineNumber":28,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":29,"author":{"gitId":"jasonqiu212"},"content":"        // invalid name","lastModifiedDate":"2022-11-06"},{"lineNumber":30,"author":{"gitId":"jasonqiu212"},"content":"        assertFalse(Description.isValidDescription(\"~milk\")); // contains illegal symbol","lastModifiedDate":"2022-11-06"},{"lineNumber":31,"author":{"gitId":"jasonqiu212"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":32,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":33,"author":{"gitId":"jasonqiu212"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":34,"author":{"gitId":"jasonqiu212"},"content":"    public void isValidDescription_validDescription_true() {","lastModifiedDate":"2022-11-06"},{"lineNumber":35,"author":{"gitId":"jasonqiu212"},"content":"        assertTrue(Description.isValidDescription(\"\")); // empty string","lastModifiedDate":"2022-11-06"},{"lineNumber":36,"author":{"gitId":"jasonqiu212"},"content":"        assertTrue(Description.isValidDescription(\" \")); // spaces only","lastModifiedDate":"2022-11-06"},{"lineNumber":37,"author":{"gitId":"jasonqiu212"},"content":"        assertTrue(Description.isValidDescription(\"buy milk\")); // alphabets only","lastModifiedDate":"2022-11-06"},{"lineNumber":38,"author":{"gitId":"jasonqiu212"},"content":"        assertTrue(Description.isValidDescription(\"12345\")); // numbers only","lastModifiedDate":"2022-11-06"},{"lineNumber":39,"author":{"gitId":"jasonqiu212"},"content":"        assertTrue(Description.isValidDescription(\"2nd time!\")); // alphanumeric characters and symbols","lastModifiedDate":"2022-11-06"},{"lineNumber":40,"author":{"gitId":"jasonqiu212"},"content":"        assertTrue(Description.isValidDescription(\"Buy Milk\")); // with capital letters","lastModifiedDate":"2022-11-06"},{"lineNumber":41,"author":{"gitId":"jasonqiu212"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":42,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":43,"author":{"gitId":"jasonqiu212"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":44,"author":{"gitId":"jasonqiu212"},"content":"    public void equals_sameObject_true() {","lastModifiedDate":"2022-11-06"},{"lineNumber":45,"author":{"gitId":"jasonqiu212"},"content":"        Description description \u003d new Description(\"Buy some milk\");","lastModifiedDate":"2022-11-06"},{"lineNumber":46,"author":{"gitId":"jasonqiu212"},"content":"        assertEquals(description, description);","lastModifiedDate":"2022-11-06"},{"lineNumber":47,"author":{"gitId":"jasonqiu212"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":48,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":49,"author":{"gitId":"jasonqiu212"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":50,"author":{"gitId":"jasonqiu212"},"content":"    public void equals_null_false() {","lastModifiedDate":"2022-11-06"},{"lineNumber":51,"author":{"gitId":"jasonqiu212"},"content":"        Description description \u003d new Description(\"Buy some milk\");","lastModifiedDate":"2022-11-06"},{"lineNumber":52,"author":{"gitId":"jasonqiu212"},"content":"        assertNotEquals(description, null);","lastModifiedDate":"2022-11-06"},{"lineNumber":53,"author":{"gitId":"jasonqiu212"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":54,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":55,"author":{"gitId":"jasonqiu212"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":56,"author":{"gitId":"jasonqiu212"},"content":"    public void equals_sameDescription_true() {","lastModifiedDate":"2022-11-06"},{"lineNumber":57,"author":{"gitId":"jasonqiu212"},"content":"        assertEquals(new Description(\"Buy some milk\"), new Description(\"Buy some milk\"));","lastModifiedDate":"2022-11-06"},{"lineNumber":58,"author":{"gitId":"jasonqiu212"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":59,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":60,"author":{"gitId":"jasonqiu212"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":61,"author":{"gitId":"jasonqiu212"},"content":"    public void equals_differentDescription_false() {","lastModifiedDate":"2022-11-06"},{"lineNumber":62,"author":{"gitId":"jasonqiu212"},"content":"        assertNotEquals(new Description(\"Buy some milk\"), new Description(\"Grade assignment\"));","lastModifiedDate":"2022-11-06"},{"lineNumber":63,"author":{"gitId":"jasonqiu212"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":64,"author":{"gitId":"jasonqiu212"},"content":"}","lastModifiedDate":"2022-11-06"}],"authorContributionMap":{"jasonqiu212":64}},{"path":"src/test/java/swift/model/task/TaskNameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jasonqiu212"},"content":"package swift.model.task;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"jasonqiu212"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"jasonqiu212"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"jasonqiu212"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"jasonqiu212"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"jasonqiu212"},"content":"import java.util.List;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"jasonqiu212"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"jasonqiu212"},"content":"import swift.testutil.TaskBuilder;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"jasonqiu212"},"content":"public class TaskNameContainsKeywordsPredicateTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"jasonqiu212"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"jasonqiu212"},"content":"    public void equals() {","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"jasonqiu212"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"jasonqiu212"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"jasonqiu212"},"content":"        TaskNameContainsKeywordsPredicate","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"jasonqiu212"},"content":"                firstPredicate \u003d new TaskNameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"jasonqiu212"},"content":"        TaskNameContainsKeywordsPredicate","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"jasonqiu212"},"content":"                secondPredicate \u003d new TaskNameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"jasonqiu212"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"jasonqiu212"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"jasonqiu212"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"jasonqiu212"},"content":"        TaskNameContainsKeywordsPredicate","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"jasonqiu212"},"content":"                firstPredicateCopy \u003d new TaskNameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"jasonqiu212"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"jasonqiu212"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"jasonqiu212"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"jasonqiu212"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"jasonqiu212"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"jasonqiu212"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"jasonqiu212"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"jasonqiu212"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"jasonqiu212"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"jasonqiu212"},"content":"    public void test_taskNameContainsKeywords_returnsTrue() {","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"jasonqiu212"},"content":"        // One keyword","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"jasonqiu212"},"content":"        TaskNameContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"jasonqiu212"},"content":"                new TaskNameContainsKeywordsPredicate(Collections.singletonList(\"discuss\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"jasonqiu212"},"content":"        assertTrue(predicate.test(new TaskBuilder().withTaskName(\"discuss meeting\").build()));","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"jasonqiu212"},"content":"        // Multiple keywords","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"jasonqiu212"},"content":"        predicate \u003d new TaskNameContainsKeywordsPredicate(Arrays.asList(\"discuss\", \"meeting\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"jasonqiu212"},"content":"        assertTrue(predicate.test(new TaskBuilder().withTaskName(\"discuss meeting\").build()));","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"jasonqiu212"},"content":"        // Only one matching keyword","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"jasonqiu212"},"content":"        predicate \u003d new TaskNameContainsKeywordsPredicate(Arrays.asList(\"discuss\", \"football\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"jasonqiu212"},"content":"        assertTrue(predicate.test(new TaskBuilder().withTaskName(\"discuss meeting\").build()));","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"jasonqiu212"},"content":"        // Mixed-case keywords","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"jasonqiu212"},"content":"        predicate \u003d new TaskNameContainsKeywordsPredicate(Arrays.asList(\"dIsCuSs\", \"mEeTiNg\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"jasonqiu212"},"content":"        assertTrue(predicate.test(new TaskBuilder().withTaskName(\"discuss meeting\").build()));","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"jasonqiu212"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"jasonqiu212"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"jasonqiu212"},"content":"    public void test_taskNameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"jasonqiu212"},"content":"        // Zero keywords","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"jasonqiu212"},"content":"        TaskNameContainsKeywordsPredicate predicate \u003d new TaskNameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"jasonqiu212"},"content":"        assertFalse(predicate.test(new TaskBuilder().withTaskName(\"discuss meeting\").build()));","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"jasonqiu212"},"content":"        // Non-matching keyword","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"jasonqiu212"},"content":"        predicate \u003d new TaskNameContainsKeywordsPredicate(Arrays.asList(\"football\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"jasonqiu212"},"content":"        assertFalse(predicate.test(new TaskBuilder().withTaskName(\"discuss meeting\").build()));","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"jasonqiu212"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"jasonqiu212"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"jasonqiu212":74}},{"path":"src/test/java/swift/model/task/TaskNameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.model.task;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"jasonqiu212"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-11-06"},{"lineNumber":4,"author":{"gitId":"peppapighs"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"jasonqiu212"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-11-06"},{"lineNumber":6,"author":{"gitId":"peppapighs"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"peppapighs"},"content":"import static swift.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"peppapighs"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"peppapighs"},"content":"public class TaskNameTest {","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"peppapighs"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"peppapighs"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"peppapighs"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TaskName(null));","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"peppapighs"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"peppapighs"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"peppapighs"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"peppapighs"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new TaskName(invalidName));","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"peppapighs"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"peppapighs"},"content":"    public void isValidName() {","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"peppapighs"},"content":"        // null name","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"peppapighs"},"content":"        assertThrows(NullPointerException.class, () -\u003e TaskName.isValidName(null));","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"peppapighs"},"content":"        // invalid name","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"peppapighs"},"content":"        assertFalse(TaskName.isValidName(\"\")); // empty string","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"peppapighs"},"content":"        assertFalse(TaskName.isValidName(\" \")); // spaces only","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"peppapighs"},"content":"        assertFalse(TaskName.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"peppapighs"},"content":"        assertFalse(TaskName.isValidName(\"milk*\")); // contains non-alphanumeric characters","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"peppapighs"},"content":"        // valid name","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"peppapighs"},"content":"        assertTrue(TaskName.isValidName(\"buy milk\")); // alphabets only","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"peppapighs"},"content":"        assertTrue(TaskName.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"peppapighs"},"content":"        assertTrue(TaskName.isValidName(\"buy milk for the 2nd time\")); // alphanumeric characters","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"peppapighs"},"content":"        assertTrue(TaskName.isValidName(\"Buy Milk\")); // with capital letters","lastModifiedDate":"2022-10-06"},{"lineNumber":40,"author":{"gitId":"peppapighs"},"content":"        assertTrue(TaskName.isValidName(\"Buy Milk for the 2nd time\")); // long names","lastModifiedDate":"2022-10-06"},{"lineNumber":41,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":42,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":43,"author":{"gitId":"jasonqiu212"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":44,"author":{"gitId":"jasonqiu212"},"content":"    public void equals_sameObject_true() {","lastModifiedDate":"2022-11-06"},{"lineNumber":45,"author":{"gitId":"jasonqiu212"},"content":"        TaskName name \u003d new TaskName(\"Buy milk\");","lastModifiedDate":"2022-11-06"},{"lineNumber":46,"author":{"gitId":"jasonqiu212"},"content":"        assertEquals(name, name);","lastModifiedDate":"2022-11-06"},{"lineNumber":47,"author":{"gitId":"jasonqiu212"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":48,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":49,"author":{"gitId":"jasonqiu212"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":50,"author":{"gitId":"jasonqiu212"},"content":"    public void equals_null_false() {","lastModifiedDate":"2022-11-06"},{"lineNumber":51,"author":{"gitId":"jasonqiu212"},"content":"        TaskName name \u003d new TaskName(\"Buy milk\");","lastModifiedDate":"2022-11-06"},{"lineNumber":52,"author":{"gitId":"jasonqiu212"},"content":"        assertNotEquals(name, null);","lastModifiedDate":"2022-11-06"},{"lineNumber":53,"author":{"gitId":"jasonqiu212"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":54,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":55,"author":{"gitId":"jasonqiu212"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":56,"author":{"gitId":"jasonqiu212"},"content":"    public void equals_sameTaskName_true() {","lastModifiedDate":"2022-11-06"},{"lineNumber":57,"author":{"gitId":"jasonqiu212"},"content":"        assertEquals(new TaskName(\"Buy milk\"), new TaskName(\"Buy milk\"));","lastModifiedDate":"2022-11-06"},{"lineNumber":58,"author":{"gitId":"jasonqiu212"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":59,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":60,"author":{"gitId":"jasonqiu212"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":61,"author":{"gitId":"jasonqiu212"},"content":"    public void equals_differentTaskName_false() {","lastModifiedDate":"2022-11-06"},{"lineNumber":62,"author":{"gitId":"jasonqiu212"},"content":"        assertNotEquals(new TaskName(\"Buy milk\"), new TaskName(\"CS2103T\"));","lastModifiedDate":"2022-11-06"},{"lineNumber":63,"author":{"gitId":"jasonqiu212"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":64,"author":{"gitId":"peppapighs"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"jasonqiu212":24,"peppapighs":40}},{"path":"src/test/java/swift/model/task/TaskTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.model.task;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"peppapighs"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"peppapighs"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"peppapighs"},"content":"import static swift.testutil.TypicalTasks.BUY_MILK;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"peppapighs"},"content":"import static swift.testutil.TypicalTasks.CS2103T;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"peppapighs"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"peppapighs"},"content":"import swift.testutil.TaskBuilder;","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"peppapighs"},"content":"public class TaskTest {","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"peppapighs"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"peppapighs"},"content":"    public void equals() {","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"peppapighs"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"peppapighs"},"content":"        Task buyMilkCopy \u003d new TaskBuilder(BUY_MILK).build();","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"peppapighs"},"content":"        assertTrue(BUY_MILK.equals(buyMilkCopy));","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"peppapighs"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"peppapighs"},"content":"        assertTrue(BUY_MILK.equals(BUY_MILK));","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"peppapighs"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"peppapighs"},"content":"        assertFalse(BUY_MILK.equals(null));","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"peppapighs"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"peppapighs"},"content":"        assertFalse(BUY_MILK.equals(5));","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"peppapighs"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"peppapighs"},"content":"        assertFalse(BUY_MILK.equals(CS2103T));","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"peppapighs"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"peppapighs":32}},{"path":"src/test/java/swift/model/task/UniqueTaskListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.model.task;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"peppapighs"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"peppapighs"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"peppapighs"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"peppapighs"},"content":"import static swift.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"peppapighs"},"content":"import static swift.testutil.TypicalTasks.BUY_MILK;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"peppapighs"},"content":"import static swift.testutil.TypicalTasks.CS2103T;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"peppapighs"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"peppapighs"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"peppapighs"},"content":"import java.util.List;","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"peppapighs"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"peppapighs"},"content":"import swift.model.task.exceptions.DuplicateTaskException;","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"peppapighs"},"content":"import swift.model.task.exceptions.TaskNotFoundException;","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"peppapighs"},"content":"public class UniqueTaskListTest {","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"peppapighs"},"content":"    private final UniqueTaskList uniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"peppapighs"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"peppapighs"},"content":"    public void contains_nullTask_throwsNullPointerException() {","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"peppapighs"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.contains(null));","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"peppapighs"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"peppapighs"},"content":"    public void contains_taskNotInList_returnsFalse() {","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"peppapighs"},"content":"        assertFalse(uniqueTaskList.contains(BUY_MILK));","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"peppapighs"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"peppapighs"},"content":"    public void contains_taskInList_returnsTrue() {","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"peppapighs"},"content":"        uniqueTaskList.add(BUY_MILK);","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"peppapighs"},"content":"        assertTrue(uniqueTaskList.contains(BUY_MILK));","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"peppapighs"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":40,"author":{"gitId":"peppapighs"},"content":"    public void add_nullTask_throwsNullPointerException() {","lastModifiedDate":"2022-10-06"},{"lineNumber":41,"author":{"gitId":"peppapighs"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.add(null));","lastModifiedDate":"2022-10-06"},{"lineNumber":42,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":43,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":44,"author":{"gitId":"peppapighs"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":45,"author":{"gitId":"peppapighs"},"content":"    public void add_duplicateTask_throwsDuplicateTaskException() {","lastModifiedDate":"2022-10-06"},{"lineNumber":46,"author":{"gitId":"peppapighs"},"content":"        uniqueTaskList.add(BUY_MILK);","lastModifiedDate":"2022-10-06"},{"lineNumber":47,"author":{"gitId":"peppapighs"},"content":"        assertThrows(DuplicateTaskException.class, () -\u003e uniqueTaskList.add(BUY_MILK));","lastModifiedDate":"2022-10-06"},{"lineNumber":48,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":49,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":50,"author":{"gitId":"peppapighs"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":51,"author":{"gitId":"peppapighs"},"content":"    public void setTask_nullTargetTask_throwsNullPointerException() {","lastModifiedDate":"2022-10-06"},{"lineNumber":52,"author":{"gitId":"peppapighs"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.setTask(null, BUY_MILK));","lastModifiedDate":"2022-10-06"},{"lineNumber":53,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":54,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":55,"author":{"gitId":"peppapighs"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":56,"author":{"gitId":"peppapighs"},"content":"    public void setTask_nullEditedTask_throwsNullPointerException() {","lastModifiedDate":"2022-10-06"},{"lineNumber":57,"author":{"gitId":"peppapighs"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.setTask(BUY_MILK, null));","lastModifiedDate":"2022-10-06"},{"lineNumber":58,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":59,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":60,"author":{"gitId":"peppapighs"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":61,"author":{"gitId":"peppapighs"},"content":"    public void setTask_targetTaskNotInList_throwsTaskNotFoundException() {","lastModifiedDate":"2022-10-06"},{"lineNumber":62,"author":{"gitId":"peppapighs"},"content":"        assertThrows(TaskNotFoundException.class, () -\u003e uniqueTaskList.setTask(BUY_MILK, BUY_MILK));","lastModifiedDate":"2022-10-06"},{"lineNumber":63,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":64,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":65,"author":{"gitId":"peppapighs"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":66,"author":{"gitId":"peppapighs"},"content":"    public void setTask_editedTaskIsSameTask_success() {","lastModifiedDate":"2022-10-06"},{"lineNumber":67,"author":{"gitId":"peppapighs"},"content":"        uniqueTaskList.add(BUY_MILK);","lastModifiedDate":"2022-10-06"},{"lineNumber":68,"author":{"gitId":"peppapighs"},"content":"        uniqueTaskList.setTask(BUY_MILK, BUY_MILK);","lastModifiedDate":"2022-10-06"},{"lineNumber":69,"author":{"gitId":"peppapighs"},"content":"        UniqueTaskList expectedUniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2022-10-06"},{"lineNumber":70,"author":{"gitId":"peppapighs"},"content":"        expectedUniqueTaskList.add(BUY_MILK);","lastModifiedDate":"2022-10-06"},{"lineNumber":71,"author":{"gitId":"peppapighs"},"content":"        assertEquals(expectedUniqueTaskList, uniqueTaskList);","lastModifiedDate":"2022-10-06"},{"lineNumber":72,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":73,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":74,"author":{"gitId":"peppapighs"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":75,"author":{"gitId":"peppapighs"},"content":"    public void setTask_editedTaskHasDifferentNameOrOwner_success() {","lastModifiedDate":"2022-10-06"},{"lineNumber":76,"author":{"gitId":"peppapighs"},"content":"        uniqueTaskList.add(BUY_MILK);","lastModifiedDate":"2022-10-06"},{"lineNumber":77,"author":{"gitId":"peppapighs"},"content":"        uniqueTaskList.setTask(BUY_MILK, CS2103T);","lastModifiedDate":"2022-10-06"},{"lineNumber":78,"author":{"gitId":"peppapighs"},"content":"        UniqueTaskList expectedUniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2022-10-06"},{"lineNumber":79,"author":{"gitId":"peppapighs"},"content":"        expectedUniqueTaskList.add(CS2103T);","lastModifiedDate":"2022-10-06"},{"lineNumber":80,"author":{"gitId":"peppapighs"},"content":"        assertEquals(expectedUniqueTaskList, uniqueTaskList);","lastModifiedDate":"2022-10-06"},{"lineNumber":81,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":82,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":83,"author":{"gitId":"peppapighs"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":84,"author":{"gitId":"peppapighs"},"content":"    public void setTask_editedTaskHasNonUniqueNameAndOwner_throwsDuplicateTaskException() {","lastModifiedDate":"2022-10-06"},{"lineNumber":85,"author":{"gitId":"peppapighs"},"content":"        uniqueTaskList.add(BUY_MILK);","lastModifiedDate":"2022-10-06"},{"lineNumber":86,"author":{"gitId":"peppapighs"},"content":"        uniqueTaskList.add(CS2103T);","lastModifiedDate":"2022-10-06"},{"lineNumber":87,"author":{"gitId":"peppapighs"},"content":"        assertThrows(DuplicateTaskException.class, () -\u003e uniqueTaskList.setTask(BUY_MILK, CS2103T));","lastModifiedDate":"2022-10-06"},{"lineNumber":88,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":89,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":90,"author":{"gitId":"peppapighs"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":91,"author":{"gitId":"peppapighs"},"content":"    public void remove_nullTask_throwsNullPointerException() {","lastModifiedDate":"2022-10-06"},{"lineNumber":92,"author":{"gitId":"peppapighs"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.remove(null));","lastModifiedDate":"2022-10-06"},{"lineNumber":93,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":94,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":95,"author":{"gitId":"peppapighs"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":96,"author":{"gitId":"peppapighs"},"content":"    public void remove_taskDoesNotExist_throwsTaskNotFoundException() {","lastModifiedDate":"2022-10-06"},{"lineNumber":97,"author":{"gitId":"peppapighs"},"content":"        assertThrows(TaskNotFoundException.class, () -\u003e uniqueTaskList.remove(BUY_MILK));","lastModifiedDate":"2022-10-06"},{"lineNumber":98,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":99,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":100,"author":{"gitId":"peppapighs"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":101,"author":{"gitId":"peppapighs"},"content":"    public void remove_existingTask_removesTask() {","lastModifiedDate":"2022-10-06"},{"lineNumber":102,"author":{"gitId":"peppapighs"},"content":"        uniqueTaskList.add(BUY_MILK);","lastModifiedDate":"2022-10-06"},{"lineNumber":103,"author":{"gitId":"peppapighs"},"content":"        uniqueTaskList.remove(BUY_MILK);","lastModifiedDate":"2022-10-06"},{"lineNumber":104,"author":{"gitId":"peppapighs"},"content":"        UniqueTaskList expectedUniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2022-10-06"},{"lineNumber":105,"author":{"gitId":"peppapighs"},"content":"        assertEquals(expectedUniqueTaskList, uniqueTaskList);","lastModifiedDate":"2022-10-06"},{"lineNumber":106,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":107,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":108,"author":{"gitId":"peppapighs"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":109,"author":{"gitId":"peppapighs"},"content":"    public void setTasks_nullUniqueTaskList_throwsNullPointerException() {","lastModifiedDate":"2022-10-06"},{"lineNumber":110,"author":{"gitId":"peppapighs"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.setTasks((UniqueTaskList) null));","lastModifiedDate":"2022-10-06"},{"lineNumber":111,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":112,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":113,"author":{"gitId":"peppapighs"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":114,"author":{"gitId":"peppapighs"},"content":"    public void setTasks_uniqueTaskList_replacesOwnListWithProvidedUniqueTaskList() {","lastModifiedDate":"2022-10-06"},{"lineNumber":115,"author":{"gitId":"peppapighs"},"content":"        uniqueTaskList.add(BUY_MILK);","lastModifiedDate":"2022-10-06"},{"lineNumber":116,"author":{"gitId":"peppapighs"},"content":"        UniqueTaskList expectedUniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2022-10-06"},{"lineNumber":117,"author":{"gitId":"peppapighs"},"content":"        expectedUniqueTaskList.add(CS2103T);","lastModifiedDate":"2022-10-06"},{"lineNumber":118,"author":{"gitId":"peppapighs"},"content":"        uniqueTaskList.setTasks(expectedUniqueTaskList);","lastModifiedDate":"2022-10-06"},{"lineNumber":119,"author":{"gitId":"peppapighs"},"content":"        assertEquals(expectedUniqueTaskList, uniqueTaskList);","lastModifiedDate":"2022-10-06"},{"lineNumber":120,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":121,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":122,"author":{"gitId":"peppapighs"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":123,"author":{"gitId":"peppapighs"},"content":"    public void setTasks_nullList_throwsNullPointerException() {","lastModifiedDate":"2022-10-06"},{"lineNumber":124,"author":{"gitId":"peppapighs"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.setTasks((List\u003cTask\u003e) null));","lastModifiedDate":"2022-10-06"},{"lineNumber":125,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":126,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":127,"author":{"gitId":"peppapighs"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":128,"author":{"gitId":"peppapighs"},"content":"    public void setTasks_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2022-10-06"},{"lineNumber":129,"author":{"gitId":"peppapighs"},"content":"        uniqueTaskList.add(BUY_MILK);","lastModifiedDate":"2022-10-06"},{"lineNumber":130,"author":{"gitId":"peppapighs"},"content":"        List\u003cTask\u003e taskList \u003d Collections.singletonList(CS2103T);","lastModifiedDate":"2022-10-06"},{"lineNumber":131,"author":{"gitId":"peppapighs"},"content":"        uniqueTaskList.setTasks(taskList);","lastModifiedDate":"2022-10-06"},{"lineNumber":132,"author":{"gitId":"peppapighs"},"content":"        UniqueTaskList expectedUniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2022-10-06"},{"lineNumber":133,"author":{"gitId":"peppapighs"},"content":"        expectedUniqueTaskList.add(CS2103T);","lastModifiedDate":"2022-10-06"},{"lineNumber":134,"author":{"gitId":"peppapighs"},"content":"        assertEquals(expectedUniqueTaskList, uniqueTaskList);","lastModifiedDate":"2022-10-06"},{"lineNumber":135,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":136,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":137,"author":{"gitId":"peppapighs"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":138,"author":{"gitId":"peppapighs"},"content":"    public void setTasks_listWithDuplicateTasks_throwsDuplicateTaskException() {","lastModifiedDate":"2022-10-06"},{"lineNumber":139,"author":{"gitId":"peppapighs"},"content":"        List\u003cTask\u003e listWithDuplicateTasks \u003d Arrays.asList(BUY_MILK, BUY_MILK);","lastModifiedDate":"2022-10-06"},{"lineNumber":140,"author":{"gitId":"peppapighs"},"content":"        assertThrows(DuplicateTaskException.class, () -\u003e uniqueTaskList.setTasks(listWithDuplicateTasks));","lastModifiedDate":"2022-10-06"},{"lineNumber":141,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":142,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":143,"author":{"gitId":"peppapighs"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":144,"author":{"gitId":"peppapighs"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-06"},{"lineNumber":145,"author":{"gitId":"peppapighs"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2022-10-06"},{"lineNumber":146,"author":{"gitId":"peppapighs"},"content":"            -\u003e uniqueTaskList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2022-10-06"},{"lineNumber":147,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":148,"author":{"gitId":"peppapighs"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"peppapighs":148}},{"path":"src/test/java/swift/model/util/SampleDataUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.model.util;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"peppapighs"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"peppapighs"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"peppapighs"},"content":"import swift.model.AddressBook;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"peppapighs"},"content":"class SampleDataUtilTest {","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"peppapighs"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"peppapighs"},"content":"    public void getSampleAddressBook_success() {","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"peppapighs"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"jasonqiu212"},"content":"        addressBook.setPersons(SampleDataUtil.getSamplePersons());","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"jasonqiu212"},"content":"        addressBook.setTasks(SampleDataUtil.getSampleTasks());","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"jasonqiu212"},"content":"        addressBook.setBridges(SampleDataUtil.getSamplePersonTaskBridge());","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"peppapighs"},"content":"        assertEquals(addressBook, SampleDataUtil.getSampleAddressBook());","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"peppapighs"},"content":"}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"jasonqiu212":4,"peppapighs":15}},{"path":"src/test/java/swift/storage/JsonAdaptedBridgeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jasonqiu212"},"content":"package swift.storage;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":3,"author":{"gitId":"jasonqiu212"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-11-07"},{"lineNumber":4,"author":{"gitId":"jasonqiu212"},"content":"import static swift.storage.JsonAdaptedBridge.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2022-11-07"},{"lineNumber":5,"author":{"gitId":"jasonqiu212"},"content":"import static swift.testutil.Assert.assertThrows;","lastModifiedDate":"2022-11-07"},{"lineNumber":6,"author":{"gitId":"jasonqiu212"},"content":"import static swift.testutil.TypicalBridges.DEFAULT_BRIDGE_1;","lastModifiedDate":"2022-11-07"},{"lineNumber":7,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":8,"author":{"gitId":"jasonqiu212"},"content":"import java.util.UUID;","lastModifiedDate":"2022-11-07"},{"lineNumber":9,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":10,"author":{"gitId":"jasonqiu212"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-11-07"},{"lineNumber":11,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":12,"author":{"gitId":"jasonqiu212"},"content":"import swift.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-11-07"},{"lineNumber":13,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":14,"author":{"gitId":"jasonqiu212"},"content":"public class JsonAdaptedBridgeTest {","lastModifiedDate":"2022-11-07"},{"lineNumber":15,"author":{"gitId":"jasonqiu212"},"content":"    private static final String INVALID_PERSON_ID \u003d \"invalid\";","lastModifiedDate":"2022-11-07"},{"lineNumber":16,"author":{"gitId":"jasonqiu212"},"content":"    private static final String INVALID_TASK_ID \u003d \"invalid\";","lastModifiedDate":"2022-11-07"},{"lineNumber":17,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":18,"author":{"gitId":"jasonqiu212"},"content":"    private static final String VALID_PERSON_ID \u003d DEFAULT_BRIDGE_1.getPersonId().toString();","lastModifiedDate":"2022-11-07"},{"lineNumber":19,"author":{"gitId":"jasonqiu212"},"content":"    private static final String VALID_TASK_ID \u003d DEFAULT_BRIDGE_1.getTaskId().toString();","lastModifiedDate":"2022-11-07"},{"lineNumber":20,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":21,"author":{"gitId":"jasonqiu212"},"content":"    @Test","lastModifiedDate":"2022-11-07"},{"lineNumber":22,"author":{"gitId":"jasonqiu212"},"content":"    public void toModelType_validBridgeDetails_returnsBridge() throws Exception {","lastModifiedDate":"2022-11-07"},{"lineNumber":23,"author":{"gitId":"jasonqiu212"},"content":"        JsonAdaptedBridge bridge \u003d new JsonAdaptedBridge(DEFAULT_BRIDGE_1);","lastModifiedDate":"2022-11-07"},{"lineNumber":24,"author":{"gitId":"jasonqiu212"},"content":"        assertEquals(DEFAULT_BRIDGE_1, bridge.toModelType());","lastModifiedDate":"2022-11-07"},{"lineNumber":25,"author":{"gitId":"jasonqiu212"},"content":"    }","lastModifiedDate":"2022-11-07"},{"lineNumber":26,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":27,"author":{"gitId":"jasonqiu212"},"content":"    @Test","lastModifiedDate":"2022-11-07"},{"lineNumber":28,"author":{"gitId":"jasonqiu212"},"content":"    public void toModelType_invalidPersonId_throwsIllegalValueException() {","lastModifiedDate":"2022-11-07"},{"lineNumber":29,"author":{"gitId":"jasonqiu212"},"content":"        JsonAdaptedBridge bridge \u003d new JsonAdaptedBridge(INVALID_PERSON_ID, VALID_TASK_ID);","lastModifiedDate":"2022-11-07"},{"lineNumber":30,"author":{"gitId":"jasonqiu212"},"content":"        assertThrows(IllegalValueException.class, bridge::toModelType);","lastModifiedDate":"2022-11-07"},{"lineNumber":31,"author":{"gitId":"jasonqiu212"},"content":"    }","lastModifiedDate":"2022-11-07"},{"lineNumber":32,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":33,"author":{"gitId":"jasonqiu212"},"content":"    @Test","lastModifiedDate":"2022-11-07"},{"lineNumber":34,"author":{"gitId":"jasonqiu212"},"content":"    public void toModelType_nullPersonId_throwsIllegalValueException() {","lastModifiedDate":"2022-11-07"},{"lineNumber":35,"author":{"gitId":"jasonqiu212"},"content":"        JsonAdaptedBridge bridge \u003d new JsonAdaptedBridge(null, VALID_TASK_ID);","lastModifiedDate":"2022-11-07"},{"lineNumber":36,"author":{"gitId":"jasonqiu212"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, UUID.class.getSimpleName());","lastModifiedDate":"2022-11-07"},{"lineNumber":37,"author":{"gitId":"jasonqiu212"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, bridge::toModelType);","lastModifiedDate":"2022-11-07"},{"lineNumber":38,"author":{"gitId":"jasonqiu212"},"content":"    }","lastModifiedDate":"2022-11-07"},{"lineNumber":39,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":40,"author":{"gitId":"jasonqiu212"},"content":"    @Test","lastModifiedDate":"2022-11-07"},{"lineNumber":41,"author":{"gitId":"jasonqiu212"},"content":"    public void toModelType_invalidTaskId_throwsIllegalValueException() {","lastModifiedDate":"2022-11-07"},{"lineNumber":42,"author":{"gitId":"jasonqiu212"},"content":"        JsonAdaptedBridge bridge \u003d new JsonAdaptedBridge(VALID_PERSON_ID, INVALID_TASK_ID);","lastModifiedDate":"2022-11-07"},{"lineNumber":43,"author":{"gitId":"jasonqiu212"},"content":"        assertThrows(IllegalValueException.class, bridge::toModelType);","lastModifiedDate":"2022-11-07"},{"lineNumber":44,"author":{"gitId":"jasonqiu212"},"content":"    }","lastModifiedDate":"2022-11-07"},{"lineNumber":45,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":46,"author":{"gitId":"jasonqiu212"},"content":"    @Test","lastModifiedDate":"2022-11-07"},{"lineNumber":47,"author":{"gitId":"jasonqiu212"},"content":"    public void toModelType_nullTaskId_throwsIllegalValueException() {","lastModifiedDate":"2022-11-07"},{"lineNumber":48,"author":{"gitId":"jasonqiu212"},"content":"        JsonAdaptedBridge bridge \u003d new JsonAdaptedBridge(VALID_PERSON_ID, null);","lastModifiedDate":"2022-11-07"},{"lineNumber":49,"author":{"gitId":"jasonqiu212"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, UUID.class.getSimpleName());","lastModifiedDate":"2022-11-07"},{"lineNumber":50,"author":{"gitId":"jasonqiu212"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, bridge::toModelType);","lastModifiedDate":"2022-11-07"},{"lineNumber":51,"author":{"gitId":"jasonqiu212"},"content":"    }","lastModifiedDate":"2022-11-07"},{"lineNumber":52,"author":{"gitId":"jasonqiu212"},"content":"}","lastModifiedDate":"2022-11-07"}],"authorContributionMap":{"jasonqiu212":52}},{"path":"src/test/java/swift/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.storage;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"peppapighs"},"content":"import static swift.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2022-10-01"},{"lineNumber":5,"author":{"gitId":"peppapighs"},"content":"import static swift.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-01"},{"lineNumber":6,"author":{"gitId":"peppapighs"},"content":"import static swift.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2022-10-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"peppapighs"},"content":"import java.util.UUID;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"peppapighs"},"content":"import swift.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-01"},{"lineNumber":16,"author":{"gitId":"peppapighs"},"content":"import swift.model.person.Address;","lastModifiedDate":"2022-10-01"},{"lineNumber":17,"author":{"gitId":"peppapighs"},"content":"import swift.model.person.Email;","lastModifiedDate":"2022-10-01"},{"lineNumber":18,"author":{"gitId":"jasonqiu212"},"content":"import swift.model.person.PersonName;","lastModifiedDate":"2022-10-24"},{"lineNumber":19,"author":{"gitId":"peppapighs"},"content":"import swift.model.person.Phone;","lastModifiedDate":"2022-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"peppapighs"},"content":"    private static final String INVALID_ID \u003d \"hello world\";","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"peppapighs"},"content":"    private static final String VALID_ID \u003d BENSON.getId().toString();","lastModifiedDate":"2022-10-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"peppapighs"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":45,"author":{"gitId":"peppapighs"},"content":"    public void toModelType_invalidId_throwsIllegalValueException() {","lastModifiedDate":"2022-10-15"},{"lineNumber":46,"author":{"gitId":"peppapighs"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2022-10-15"},{"lineNumber":47,"author":{"gitId":"peppapighs"},"content":"                new JsonAdaptedPerson(INVALID_ID, VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2022-10-15"},{"lineNumber":48,"author":{"gitId":"peppapighs"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2022-10-15"},{"lineNumber":49,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":50,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":51,"author":{"gitId":"peppapighs"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":52,"author":{"gitId":"peppapighs"},"content":"    public void toModelType_nullId_throwsIllegalValueException() {","lastModifiedDate":"2022-10-15"},{"lineNumber":53,"author":{"gitId":"peppapighs"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2022-10-15"},{"lineNumber":54,"author":{"gitId":"peppapighs"},"content":"                VALID_TAGS);","lastModifiedDate":"2022-10-15"},{"lineNumber":55,"author":{"gitId":"peppapighs"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, UUID.class.getSimpleName());","lastModifiedDate":"2022-10-15"},{"lineNumber":56,"author":{"gitId":"peppapighs"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-10-15"},{"lineNumber":57,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":58,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"peppapighs"},"content":"                new JsonAdaptedPerson(VALID_ID, INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2022-10-15"},{"lineNumber":63,"author":{"gitId":"jasonqiu212"},"content":"        String expectedMessage \u003d PersonName.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-10-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"peppapighs"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_ID, null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2022-10-15"},{"lineNumber":70,"author":{"gitId":"peppapighs"},"content":"                VALID_TAGS);","lastModifiedDate":"2022-10-15"},{"lineNumber":71,"author":{"gitId":"jasonqiu212"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, PersonName.class.getSimpleName());","lastModifiedDate":"2022-10-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"peppapighs"},"content":"                new JsonAdaptedPerson(VALID_ID, VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2022-10-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"peppapighs"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_ID, VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2022-10-15"},{"lineNumber":86,"author":{"gitId":"peppapighs"},"content":"                VALID_TAGS);","lastModifiedDate":"2022-10-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"peppapighs"},"content":"                new JsonAdaptedPerson(VALID_ID, VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2022-10-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"peppapighs"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_ID, VALID_NAME, VALID_PHONE, null, VALID_ADDRESS,","lastModifiedDate":"2022-10-15"},{"lineNumber":102,"author":{"gitId":"peppapighs"},"content":"                VALID_TAGS);","lastModifiedDate":"2022-10-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"peppapighs"},"content":"                new JsonAdaptedPerson(VALID_ID, VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2022-10-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"peppapighs"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_ID, VALID_NAME, VALID_PHONE, VALID_EMAIL, null,","lastModifiedDate":"2022-10-15"},{"lineNumber":118,"author":{"gitId":"peppapighs"},"content":"                VALID_TAGS);","lastModifiedDate":"2022-10-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"peppapighs"},"content":"                new JsonAdaptedPerson(VALID_ID, VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, invalidTags);","lastModifiedDate":"2022-10-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"jasonqiu212":3,"peppapighs":39,"-":90}},{"path":"src/test/java/swift/storage/JsonAdaptedTaskTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jasonqiu212"},"content":"package swift.storage;","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":3,"author":{"gitId":"jasonqiu212"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-11-07"},{"lineNumber":4,"author":{"gitId":"jasonqiu212"},"content":"import static swift.storage.JsonAdaptedTask.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2022-11-07"},{"lineNumber":5,"author":{"gitId":"jasonqiu212"},"content":"import static swift.testutil.Assert.assertThrows;","lastModifiedDate":"2022-11-07"},{"lineNumber":6,"author":{"gitId":"jasonqiu212"},"content":"import static swift.testutil.TypicalTasks.CS2103T;","lastModifiedDate":"2022-11-07"},{"lineNumber":7,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":8,"author":{"gitId":"jasonqiu212"},"content":"import java.util.UUID;","lastModifiedDate":"2022-11-07"},{"lineNumber":9,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":10,"author":{"gitId":"jasonqiu212"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-11-07"},{"lineNumber":11,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":12,"author":{"gitId":"jasonqiu212"},"content":"import swift.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-11-07"},{"lineNumber":13,"author":{"gitId":"jasonqiu212"},"content":"import swift.model.task.Deadline;","lastModifiedDate":"2022-11-07"},{"lineNumber":14,"author":{"gitId":"jasonqiu212"},"content":"import swift.model.task.Description;","lastModifiedDate":"2022-11-07"},{"lineNumber":15,"author":{"gitId":"jasonqiu212"},"content":"import swift.model.task.TaskName;","lastModifiedDate":"2022-11-07"},{"lineNumber":16,"author":{"gitId":"jasonqiu212"},"content":"import swift.testutil.TaskBuilder;","lastModifiedDate":"2022-11-07"},{"lineNumber":17,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":18,"author":{"gitId":"jasonqiu212"},"content":"public class JsonAdaptedTaskTest {","lastModifiedDate":"2022-11-07"},{"lineNumber":19,"author":{"gitId":"jasonqiu212"},"content":"    private static final String INVALID_ID \u003d \"hello world\";","lastModifiedDate":"2022-11-07"},{"lineNumber":20,"author":{"gitId":"jasonqiu212"},"content":"    private static final String INVALID_NAME \u003d \"M@ke bread\";","lastModifiedDate":"2022-11-07"},{"lineNumber":21,"author":{"gitId":"jasonqiu212"},"content":"    private static final String INVALID_DESCRIPTION \u003d \"~milk\";","lastModifiedDate":"2022-11-07"},{"lineNumber":22,"author":{"gitId":"jasonqiu212"},"content":"    private static final String INVALID_DEADLINE \u003d \"11/11/2020 12:00\";","lastModifiedDate":"2022-11-07"},{"lineNumber":23,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":24,"author":{"gitId":"jasonqiu212"},"content":"    private static final String VALID_ID \u003d CS2103T.getId().toString();","lastModifiedDate":"2022-11-07"},{"lineNumber":25,"author":{"gitId":"jasonqiu212"},"content":"    private static final String VALID_NAME \u003d CS2103T.getName().toString();","lastModifiedDate":"2022-11-07"},{"lineNumber":26,"author":{"gitId":"jasonqiu212"},"content":"    private static final String VALID_DESCRIPTION \u003d CS2103T.getDescription().get().toString();","lastModifiedDate":"2022-11-07"},{"lineNumber":27,"author":{"gitId":"jasonqiu212"},"content":"    private static final String VALID_DEADLINE \u003d CS2103T.getDeadline().get().toString();","lastModifiedDate":"2022-11-07"},{"lineNumber":28,"author":{"gitId":"jasonqiu212"},"content":"    private static final boolean VALID_IS_DONE \u003d CS2103T.isDone();","lastModifiedDate":"2022-11-07"},{"lineNumber":29,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":30,"author":{"gitId":"jasonqiu212"},"content":"    @Test","lastModifiedDate":"2022-11-07"},{"lineNumber":31,"author":{"gitId":"jasonqiu212"},"content":"    public void toModelType_validTaskDetails_returnsTask() throws Exception {","lastModifiedDate":"2022-11-07"},{"lineNumber":32,"author":{"gitId":"jasonqiu212"},"content":"        JsonAdaptedTask task \u003d new JsonAdaptedTask(CS2103T);","lastModifiedDate":"2022-11-07"},{"lineNumber":33,"author":{"gitId":"jasonqiu212"},"content":"        assertEquals(CS2103T, task.toModelType());","lastModifiedDate":"2022-11-07"},{"lineNumber":34,"author":{"gitId":"jasonqiu212"},"content":"    }","lastModifiedDate":"2022-11-07"},{"lineNumber":35,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":36,"author":{"gitId":"jasonqiu212"},"content":"    @Test","lastModifiedDate":"2022-11-07"},{"lineNumber":37,"author":{"gitId":"jasonqiu212"},"content":"    public void toModelType_invalidId_throwsIllegalValueException() {","lastModifiedDate":"2022-11-07"},{"lineNumber":38,"author":{"gitId":"jasonqiu212"},"content":"        JsonAdaptedTask task \u003d","lastModifiedDate":"2022-11-07"},{"lineNumber":39,"author":{"gitId":"jasonqiu212"},"content":"                new JsonAdaptedTask(INVALID_ID, VALID_NAME, VALID_DESCRIPTION, VALID_DEADLINE, VALID_IS_DONE);","lastModifiedDate":"2022-11-07"},{"lineNumber":40,"author":{"gitId":"jasonqiu212"},"content":"        assertThrows(IllegalValueException.class, task::toModelType);","lastModifiedDate":"2022-11-07"},{"lineNumber":41,"author":{"gitId":"jasonqiu212"},"content":"    }","lastModifiedDate":"2022-11-07"},{"lineNumber":42,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":43,"author":{"gitId":"jasonqiu212"},"content":"    @Test","lastModifiedDate":"2022-11-07"},{"lineNumber":44,"author":{"gitId":"jasonqiu212"},"content":"    public void toModelType_nullId_throwsIllegalValueException() {","lastModifiedDate":"2022-11-07"},{"lineNumber":45,"author":{"gitId":"jasonqiu212"},"content":"        JsonAdaptedTask task \u003d new JsonAdaptedTask(null, VALID_NAME, VALID_DESCRIPTION, VALID_DEADLINE, VALID_IS_DONE);","lastModifiedDate":"2022-11-07"},{"lineNumber":46,"author":{"gitId":"jasonqiu212"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, UUID.class.getSimpleName());","lastModifiedDate":"2022-11-07"},{"lineNumber":47,"author":{"gitId":"jasonqiu212"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, task::toModelType);","lastModifiedDate":"2022-11-07"},{"lineNumber":48,"author":{"gitId":"jasonqiu212"},"content":"    }","lastModifiedDate":"2022-11-07"},{"lineNumber":49,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":50,"author":{"gitId":"jasonqiu212"},"content":"    @Test","lastModifiedDate":"2022-11-07"},{"lineNumber":51,"author":{"gitId":"jasonqiu212"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2022-11-07"},{"lineNumber":52,"author":{"gitId":"jasonqiu212"},"content":"        JsonAdaptedTask task \u003d","lastModifiedDate":"2022-11-07"},{"lineNumber":53,"author":{"gitId":"jasonqiu212"},"content":"                new JsonAdaptedTask(VALID_ID, INVALID_NAME, VALID_DESCRIPTION, VALID_DEADLINE, VALID_IS_DONE);","lastModifiedDate":"2022-11-07"},{"lineNumber":54,"author":{"gitId":"jasonqiu212"},"content":"        String expectedMessage \u003d TaskName.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-11-07"},{"lineNumber":55,"author":{"gitId":"jasonqiu212"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, task::toModelType);","lastModifiedDate":"2022-11-07"},{"lineNumber":56,"author":{"gitId":"jasonqiu212"},"content":"    }","lastModifiedDate":"2022-11-07"},{"lineNumber":57,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":58,"author":{"gitId":"jasonqiu212"},"content":"    @Test","lastModifiedDate":"2022-11-07"},{"lineNumber":59,"author":{"gitId":"jasonqiu212"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2022-11-07"},{"lineNumber":60,"author":{"gitId":"jasonqiu212"},"content":"        JsonAdaptedTask task \u003d new JsonAdaptedTask(VALID_ID, null, VALID_DESCRIPTION, VALID_DEADLINE, VALID_IS_DONE);","lastModifiedDate":"2022-11-07"},{"lineNumber":61,"author":{"gitId":"jasonqiu212"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, TaskName.class.getSimpleName());","lastModifiedDate":"2022-11-07"},{"lineNumber":62,"author":{"gitId":"jasonqiu212"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, task::toModelType);","lastModifiedDate":"2022-11-07"},{"lineNumber":63,"author":{"gitId":"jasonqiu212"},"content":"    }","lastModifiedDate":"2022-11-07"},{"lineNumber":64,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":65,"author":{"gitId":"jasonqiu212"},"content":"    @Test","lastModifiedDate":"2022-11-07"},{"lineNumber":66,"author":{"gitId":"jasonqiu212"},"content":"    public void toModelType_invalidDescription_throwsIllegalValueException() {","lastModifiedDate":"2022-11-07"},{"lineNumber":67,"author":{"gitId":"jasonqiu212"},"content":"        JsonAdaptedTask task \u003d","lastModifiedDate":"2022-11-07"},{"lineNumber":68,"author":{"gitId":"jasonqiu212"},"content":"                new JsonAdaptedTask(VALID_ID, VALID_NAME, INVALID_DESCRIPTION, VALID_DEADLINE, VALID_IS_DONE);","lastModifiedDate":"2022-11-07"},{"lineNumber":69,"author":{"gitId":"jasonqiu212"},"content":"        String expectedMessage \u003d Description.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-11-07"},{"lineNumber":70,"author":{"gitId":"jasonqiu212"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, task::toModelType);","lastModifiedDate":"2022-11-07"},{"lineNumber":71,"author":{"gitId":"jasonqiu212"},"content":"    }","lastModifiedDate":"2022-11-07"},{"lineNumber":72,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":73,"author":{"gitId":"jasonqiu212"},"content":"    @Test","lastModifiedDate":"2022-11-07"},{"lineNumber":74,"author":{"gitId":"jasonqiu212"},"content":"    public void toModelType_nullDescription_returnsTask() throws Exception {","lastModifiedDate":"2022-11-07"},{"lineNumber":75,"author":{"gitId":"jasonqiu212"},"content":"        JsonAdaptedTask task \u003d new JsonAdaptedTask(VALID_ID, VALID_NAME, null, VALID_DEADLINE, VALID_IS_DONE);","lastModifiedDate":"2022-11-07"},{"lineNumber":76,"author":{"gitId":"jasonqiu212"},"content":"        assertEquals(new TaskBuilder(CS2103T).withDescription(null).build(), task.toModelType());","lastModifiedDate":"2022-11-07"},{"lineNumber":77,"author":{"gitId":"jasonqiu212"},"content":"    }","lastModifiedDate":"2022-11-07"},{"lineNumber":78,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":79,"author":{"gitId":"jasonqiu212"},"content":"    @Test","lastModifiedDate":"2022-11-07"},{"lineNumber":80,"author":{"gitId":"jasonqiu212"},"content":"    public void toModelType_invalidDeadline_throwsIllegalValueException() {","lastModifiedDate":"2022-11-07"},{"lineNumber":81,"author":{"gitId":"jasonqiu212"},"content":"        JsonAdaptedTask task \u003d","lastModifiedDate":"2022-11-07"},{"lineNumber":82,"author":{"gitId":"jasonqiu212"},"content":"                new JsonAdaptedTask(VALID_ID, VALID_NAME, VALID_DESCRIPTION, INVALID_DEADLINE, VALID_IS_DONE);","lastModifiedDate":"2022-11-07"},{"lineNumber":83,"author":{"gitId":"jasonqiu212"},"content":"        String expectedMessage \u003d Deadline.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-11-07"},{"lineNumber":84,"author":{"gitId":"jasonqiu212"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, task::toModelType);","lastModifiedDate":"2022-11-07"},{"lineNumber":85,"author":{"gitId":"jasonqiu212"},"content":"    }","lastModifiedDate":"2022-11-07"},{"lineNumber":86,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":87,"author":{"gitId":"jasonqiu212"},"content":"    @Test","lastModifiedDate":"2022-11-07"},{"lineNumber":88,"author":{"gitId":"jasonqiu212"},"content":"    public void toModelType_nullDeadline_returnsTask() throws Exception {","lastModifiedDate":"2022-11-07"},{"lineNumber":89,"author":{"gitId":"jasonqiu212"},"content":"        JsonAdaptedTask task \u003d new JsonAdaptedTask(VALID_ID, VALID_NAME, VALID_DESCRIPTION, null, VALID_IS_DONE);","lastModifiedDate":"2022-11-07"},{"lineNumber":90,"author":{"gitId":"jasonqiu212"},"content":"        assertEquals(new TaskBuilder(CS2103T).withDeadline(null).build(), task.toModelType());","lastModifiedDate":"2022-11-07"},{"lineNumber":91,"author":{"gitId":"jasonqiu212"},"content":"    }","lastModifiedDate":"2022-11-07"},{"lineNumber":92,"author":{"gitId":"jasonqiu212"},"content":"}","lastModifiedDate":"2022-11-07"}],"authorContributionMap":{"jasonqiu212":92}},{"path":"src/test/java/swift/storage/JsonAddressBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.storage;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"peppapighs"},"content":"import static swift.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-01"},{"lineNumber":6,"author":{"gitId":"peppapighs"},"content":"import static swift.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-10-01"},{"lineNumber":7,"author":{"gitId":"peppapighs"},"content":"import static swift.testutil.TypicalPersons.HOON;","lastModifiedDate":"2022-10-01"},{"lineNumber":8,"author":{"gitId":"peppapighs"},"content":"import static swift.testutil.TypicalPersons.IDA;","lastModifiedDate":"2022-10-01"},{"lineNumber":9,"author":{"gitId":"peppapighs"},"content":"import static swift.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-10-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"peppapighs"},"content":"import swift.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-01"},{"lineNumber":19,"author":{"gitId":"peppapighs"},"content":"import swift.model.AddressBook;","lastModifiedDate":"2022-10-01"},{"lineNumber":20,"author":{"gitId":"peppapighs"},"content":"import swift.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-10-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorageTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonAddressBookStorageTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readAddressBook(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private java.util.Optional\u003cReadOnlyAddressBook\u003e readAddressBook(String filePath) throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return new JsonAddressBookStorage(Paths.get(filePath)).readAddressBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(readAddressBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"notJsonFormatAddressBook.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidPersonAddressBook_throwDataConversionException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidPersonAddressBook.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidAndValidPersonAddressBook_throwDataConversionException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidAndValidPersonAddressBook.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage jsonAddressBookStorage \u003d new JsonAddressBookStorage(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        original.addPerson(HOON);","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        original.removePerson(ALICE);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        original.addPerson(IDA);","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook().get(); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void saveAddressBook(ReadOnlyAddressBook addressBook, String filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            new JsonAddressBookStorage(Paths.get(filePath))","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                    .saveAddressBook(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(new AddressBook(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"peppapighs":9,"-":101}},{"path":"src/test/java/swift/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.storage;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"peppapighs"},"content":"import static swift.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"peppapighs"},"content":"import swift.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-01"},{"lineNumber":12,"author":{"gitId":"peppapighs"},"content":"import swift.commons.util.JsonUtil;","lastModifiedDate":"2022-10-01"},{"lineNumber":13,"author":{"gitId":"peppapighs"},"content":"import swift.model.AddressBook;","lastModifiedDate":"2022-10-01"},{"lineNumber":14,"author":{"gitId":"peppapighs"},"content":"import swift.testutil.TypicalBridges;","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"peppapighs"},"content":"import swift.testutil.TypicalPersons;","lastModifiedDate":"2022-10-01"},{"lineNumber":16,"author":{"gitId":"peppapighs"},"content":"import swift.testutil.TypicalTasks;","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"peppapighs"},"content":"    private static final Path TYPICAL_TASKS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalTasksAddressBook.json\");","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"peppapighs"},"content":"    private static final Path INVALID_TASKS_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidTasksAddressBook.json\");","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"peppapighs"},"content":"    private static final Path DUPLICATE_TASKS_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateTasksAddressBook.json\");","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"peppapighs"},"content":"    private static final Path TYPICAL_BRIDGES_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalBridgesAddressBook.json\");","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"peppapighs"},"content":"    private static final Path INVALID_BRIDGES_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidBridgesAddressBook.json\");","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"peppapighs"},"content":"    private static final Path DUPLICATE_BRIDGES_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateBridgesAddressBook.json\");","lastModifiedDate":"2022-10-16"},{"lineNumber":32,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        AddressBook typicalPersonsAddressBook \u003d TypicalPersons.getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(addressBookFromFile, typicalPersonsAddressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"peppapighs"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":58,"author":{"gitId":"peppapighs"},"content":"    public void toModelType_typicalTasksFile_success() throws Exception {","lastModifiedDate":"2022-10-06"},{"lineNumber":59,"author":{"gitId":"peppapighs"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_TASKS_FILE,","lastModifiedDate":"2022-10-06"},{"lineNumber":60,"author":{"gitId":"peppapighs"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2022-10-06"},{"lineNumber":61,"author":{"gitId":"peppapighs"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2022-10-06"},{"lineNumber":62,"author":{"gitId":"peppapighs"},"content":"        AddressBook typicalTasksAddressBook \u003d TypicalTasks.getTypicalAddressBook();","lastModifiedDate":"2022-10-06"},{"lineNumber":63,"author":{"gitId":"peppapighs"},"content":"        assertEquals(addressBookFromFile, typicalTasksAddressBook);","lastModifiedDate":"2022-10-06"},{"lineNumber":64,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":65,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":66,"author":{"gitId":"peppapighs"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":67,"author":{"gitId":"peppapighs"},"content":"    public void toModelType_invalidTasksFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2022-10-06"},{"lineNumber":68,"author":{"gitId":"peppapighs"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_TASKS_FILE,","lastModifiedDate":"2022-10-06"},{"lineNumber":69,"author":{"gitId":"peppapighs"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2022-10-06"},{"lineNumber":70,"author":{"gitId":"peppapighs"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2022-10-06"},{"lineNumber":71,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":72,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":73,"author":{"gitId":"peppapighs"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":74,"author":{"gitId":"peppapighs"},"content":"    public void toModelType_duplicateTasks_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2022-10-06"},{"lineNumber":75,"author":{"gitId":"peppapighs"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_TASKS_FILE,","lastModifiedDate":"2022-10-06"},{"lineNumber":76,"author":{"gitId":"peppapighs"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2022-10-06"},{"lineNumber":77,"author":{"gitId":"peppapighs"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_TASK,","lastModifiedDate":"2022-10-06"},{"lineNumber":78,"author":{"gitId":"peppapighs"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2022-10-06"},{"lineNumber":79,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":80,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":81,"author":{"gitId":"peppapighs"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":82,"author":{"gitId":"peppapighs"},"content":"    public void toModelType_typicalBridgesFile_success() throws Exception {","lastModifiedDate":"2022-10-16"},{"lineNumber":83,"author":{"gitId":"peppapighs"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_BRIDGES_FILE,","lastModifiedDate":"2022-10-16"},{"lineNumber":84,"author":{"gitId":"peppapighs"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2022-10-16"},{"lineNumber":85,"author":{"gitId":"peppapighs"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2022-10-16"},{"lineNumber":86,"author":{"gitId":"peppapighs"},"content":"        AddressBook typicalBridgesAddressBook \u003d TypicalBridges.getTypicalAddressBook();","lastModifiedDate":"2022-10-16"},{"lineNumber":87,"author":{"gitId":"peppapighs"},"content":"        assertEquals(addressBookFromFile, typicalBridgesAddressBook);","lastModifiedDate":"2022-10-16"},{"lineNumber":88,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":89,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":90,"author":{"gitId":"peppapighs"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":91,"author":{"gitId":"peppapighs"},"content":"    public void toModelType_invalidBridgesFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2022-10-16"},{"lineNumber":92,"author":{"gitId":"peppapighs"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_BRIDGES_FILE,","lastModifiedDate":"2022-10-16"},{"lineNumber":93,"author":{"gitId":"peppapighs"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2022-10-16"},{"lineNumber":94,"author":{"gitId":"peppapighs"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2022-10-16"},{"lineNumber":95,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":96,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":97,"author":{"gitId":"peppapighs"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":98,"author":{"gitId":"peppapighs"},"content":"    public void toModelType_duplicateBridges_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2022-10-16"},{"lineNumber":99,"author":{"gitId":"peppapighs"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_BRIDGES_FILE,","lastModifiedDate":"2022-10-16"},{"lineNumber":100,"author":{"gitId":"peppapighs"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2022-10-16"},{"lineNumber":101,"author":{"gitId":"peppapighs"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_BRIDGE,","lastModifiedDate":"2022-10-16"},{"lineNumber":102,"author":{"gitId":"peppapighs"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2022-10-16"},{"lineNumber":103,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"peppapighs":63,"-":41}},{"path":"src/test/java/swift/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.storage;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"peppapighs"},"content":"import static swift.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"peppapighs"},"content":"import swift.commons.core.GuiSettings;","lastModifiedDate":"2022-10-01"},{"lineNumber":16,"author":{"gitId":"peppapighs"},"content":"import swift.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-01"},{"lineNumber":17,"author":{"gitId":"peppapighs"},"content":"import swift.model.UserPrefs;","lastModifiedDate":"2022-10-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"addressbook.json\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"peppapighs":5,"-":118}},{"path":"src/test/java/swift/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.storage;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"peppapighs"},"content":"import static swift.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-10-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"peppapighs"},"content":"import swift.commons.core.GuiSettings;","lastModifiedDate":"2022-10-01"},{"lineNumber":14,"author":{"gitId":"peppapighs"},"content":"import swift.model.AddressBook;","lastModifiedDate":"2022-10-01"},{"lineNumber":15,"author":{"gitId":"peppapighs"},"content":"import swift.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-10-01"},{"lineNumber":16,"author":{"gitId":"peppapighs"},"content":"import swift.model.UserPrefs;","lastModifiedDate":"2022-10-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"jasonqiu212"},"content":"    @Test","lastModifiedDate":"2022-11-07"},{"lineNumber":51,"author":{"gitId":"jasonqiu212"},"content":"    public void getUserPrefsFilePath() {","lastModifiedDate":"2022-11-07"},{"lineNumber":52,"author":{"gitId":"jasonqiu212"},"content":"        assertNotNull(storageManager.getUserPrefsFilePath());","lastModifiedDate":"2022-11-07"},{"lineNumber":53,"author":{"gitId":"jasonqiu212"},"content":"    }","lastModifiedDate":"2022-11-07"},{"lineNumber":54,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jasonqiu212":5,"peppapighs":6,"-":62}},{"path":"src/test/java/swift/testutil/AddressBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.testutil;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"peppapighs"},"content":"import swift.model.AddressBook;","lastModifiedDate":"2022-10-01"},{"lineNumber":4,"author":{"gitId":"peppapighs"},"content":"import swift.model.person.Person;","lastModifiedDate":"2022-10-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A utility class to help with building Addressbook objects.","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" *     {@code AddressBook ab \u003d new AddressBookBuilder().withPerson(\"John\", \"Doe\").build();}","lastModifiedDate":"2018-03-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AddressBookBuilder {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private AddressBook addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public AddressBookBuilder() {","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        addressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public AddressBookBuilder(AddressBook addressBook) {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.addressBook \u003d addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Adds a new {@code Person} to the {@code AddressBook} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public AddressBookBuilder withPerson(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2016-09-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public AddressBook build() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"peppapighs":3,"-":31}},{"path":"src/test/java/swift/testutil/Assert.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.testutil;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2019-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.function.Executable;","lastModifiedDate":"2019-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A set of assertion methods useful for writing tests.","lastModifiedDate":"2017-07-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Assert {","lastModifiedDate":"2017-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception.","lastModifiedDate":"2019-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This is a wrapper method that invokes {@link Assertions#assertThrows(Class, Executable)}, to maintain consistency","lastModifiedDate":"2019-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * with our custom {@link #assertThrows(Class, String, Executable)} method.","lastModifiedDate":"2019-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * To standardize API calls in this project, users should use this method instead of","lastModifiedDate":"2019-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Assertions#assertThrows(Class, Executable)}.","lastModifiedDate":"2019-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception with the {@code expectedMessage}.","lastModifiedDate":"2019-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * If there\u0027s no need for the verification of the exception\u0027s error message, call","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * {@link #assertThrows(Class, Executable)} instead.","lastModifiedDate":"2019-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @see #assertThrows(Class, Executable)","lastModifiedDate":"2019-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, String expectedMessage,","lastModifiedDate":"2019-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Throwable thrownException \u003d Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedMessage, thrownException.getMessage());","lastModifiedDate":"2019-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-17"}],"authorContributionMap":{"peppapighs":1,"-":33}},{"path":"src/test/java/swift/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.testutil;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"yunruu"},"content":"import swift.logic.commands.EditContactCommand.EditPersonDescriptor;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"peppapighs"},"content":"import swift.model.person.Address;","lastModifiedDate":"2022-10-01"},{"lineNumber":9,"author":{"gitId":"peppapighs"},"content":"import swift.model.person.Email;","lastModifiedDate":"2022-10-01"},{"lineNumber":10,"author":{"gitId":"peppapighs"},"content":"import swift.model.person.Person;","lastModifiedDate":"2022-10-01"},{"lineNumber":11,"author":{"gitId":"jasonqiu212"},"content":"import swift.model.person.PersonName;","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"peppapighs"},"content":"import swift.model.person.Phone;","lastModifiedDate":"2022-10-01"},{"lineNumber":13,"author":{"gitId":"peppapighs"},"content":"import swift.model.tag.Tag;","lastModifiedDate":"2022-10-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":46,"author":{"gitId":"jasonqiu212"},"content":"        descriptor.setName(new PersonName(name));","lastModifiedDate":"2022-10-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"jasonqiu212":2,"peppapighs":6,"-":78,"yunruu":1}},{"path":"src/test/java/swift/testutil/EditTaskDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"santosh3007"},"content":"package swift.testutil;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"santosh3007"},"content":"import swift.logic.commands.EditTaskCommand.EditTaskDescriptor;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"santosh3007"},"content":"import swift.model.task.Task;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"santosh3007"},"content":"import swift.model.task.TaskName;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"santosh3007"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"santosh3007"},"content":" * A utility class to help with building EditTaskDescriptor objects.","lastModifiedDate":"2022-11-06"},{"lineNumber":9,"author":{"gitId":"santosh3007"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"santosh3007"},"content":"public class EditTaskDescriptorBuilder {","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"santosh3007"},"content":"    private EditTaskDescriptor descriptor;","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"santosh3007"},"content":"    public EditTaskDescriptorBuilder() {","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"santosh3007"},"content":"        descriptor \u003d new EditTaskDescriptor();","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"santosh3007"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"santosh3007"},"content":"    public EditTaskDescriptorBuilder(EditTaskDescriptor descriptor) {","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"santosh3007"},"content":"        this.descriptor \u003d new EditTaskDescriptor(descriptor);","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"santosh3007"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"santosh3007"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"santosh3007"},"content":"     * Returns an {@code EditTaskDescriptor} with fields containing {@code task}\u0027s details","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"santosh3007"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"santosh3007"},"content":"    public EditTaskDescriptorBuilder(Task task) {","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"santosh3007"},"content":"        descriptor \u003d new EditTaskDescriptor();","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"jasonqiu212"},"content":"        descriptor.setTaskName(task.getName());","lastModifiedDate":"2022-10-24"},{"lineNumber":28,"author":{"gitId":"jasonqiu212"},"content":"        descriptor.setDescription(task.getDescription().orElse(null));","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"jasonqiu212"},"content":"        descriptor.setDeadline(task.getDeadline().orElse(null));","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"santosh3007"},"content":"        descriptor.setIsDone(task.isDone());","lastModifiedDate":"2022-11-06"},{"lineNumber":31,"author":{"gitId":"santosh3007"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"santosh3007"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"santosh3007"},"content":"     * Sets the {@code Name} of the {@code EditTaskDescriptor} that we are building.","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"santosh3007"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"santosh3007"},"content":"    public EditTaskDescriptorBuilder withName(String name) {","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"santosh3007"},"content":"        descriptor.setTaskName(new TaskName(name));","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"santosh3007"},"content":"        return this;","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"santosh3007"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"santosh3007"},"content":"    /**","lastModifiedDate":"2022-11-06"},{"lineNumber":42,"author":{"gitId":"santosh3007"},"content":"     * Sets the {@code isDone} of the {@code EditTaskDescriptor} that we are building.","lastModifiedDate":"2022-11-06"},{"lineNumber":43,"author":{"gitId":"santosh3007"},"content":"     */","lastModifiedDate":"2022-11-06"},{"lineNumber":44,"author":{"gitId":"santosh3007"},"content":"    public EditTaskDescriptorBuilder withIsDone(boolean isDone) {","lastModifiedDate":"2022-11-06"},{"lineNumber":45,"author":{"gitId":"santosh3007"},"content":"        descriptor.setIsDone(isDone);","lastModifiedDate":"2022-11-06"},{"lineNumber":46,"author":{"gitId":"santosh3007"},"content":"        return this;","lastModifiedDate":"2022-11-06"},{"lineNumber":47,"author":{"gitId":"santosh3007"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":48,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":49,"author":{"gitId":"santosh3007"},"content":"    public EditTaskDescriptor build() {","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"santosh3007"},"content":"        return descriptor;","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"santosh3007"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"santosh3007"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"jasonqiu212":3,"santosh3007":49}},{"path":"src/test/java/swift/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.testutil;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"peppapighs"},"content":"import java.util.UUID;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":7,"author":{"gitId":"peppapighs"},"content":"import swift.model.person.Address;","lastModifiedDate":"2022-10-01"},{"lineNumber":8,"author":{"gitId":"peppapighs"},"content":"import swift.model.person.Email;","lastModifiedDate":"2022-10-01"},{"lineNumber":9,"author":{"gitId":"peppapighs"},"content":"import swift.model.person.Person;","lastModifiedDate":"2022-10-01"},{"lineNumber":10,"author":{"gitId":"jasonqiu212"},"content":"import swift.model.person.PersonName;","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"peppapighs"},"content":"import swift.model.person.Phone;","lastModifiedDate":"2022-10-01"},{"lineNumber":12,"author":{"gitId":"peppapighs"},"content":"import swift.model.tag.Tag;","lastModifiedDate":"2022-10-01"},{"lineNumber":13,"author":{"gitId":"peppapighs"},"content":"import swift.model.util.SampleDataUtil;","lastModifiedDate":"2022-10-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"ShenyiCui"},"content":"    public static final String DEFAULT_UUID \u003d \"c4c645da-27b3-454d-9428-5295a6ee1f33\";","lastModifiedDate":"2022-10-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"peppapighs"},"content":"    private UUID id;","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"jasonqiu212"},"content":"    private PersonName name;","lastModifiedDate":"2022-10-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":37,"author":{"gitId":"peppapighs"},"content":"        id \u003d UUID.fromString(DEFAULT_UUID);","lastModifiedDate":"2022-10-15"},{"lineNumber":38,"author":{"gitId":"jasonqiu212"},"content":"        name \u003d new PersonName(DEFAULT_NAME);","lastModifiedDate":"2022-10-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"peppapighs"},"content":"        id \u003d personToCopy.getId();","lastModifiedDate":"2022-10-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":57,"author":{"gitId":"peppapighs"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":58,"author":{"gitId":"peppapighs"},"content":"     * Sets the {@code UUID} of the {@code Person} that we are building.","lastModifiedDate":"2022-10-15"},{"lineNumber":59,"author":{"gitId":"peppapighs"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":60,"author":{"gitId":"peppapighs"},"content":"    public PersonBuilder withId(String id) {","lastModifiedDate":"2022-10-15"},{"lineNumber":61,"author":{"gitId":"peppapighs"},"content":"        this.id \u003d UUID.fromString(id);","lastModifiedDate":"2022-10-15"},{"lineNumber":62,"author":{"gitId":"peppapighs"},"content":"        return this;","lastModifiedDate":"2022-10-15"},{"lineNumber":63,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":64,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"jasonqiu212"},"content":"        this.name \u003d new PersonName(name);","lastModifiedDate":"2022-10-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":106,"author":{"gitId":"peppapighs"},"content":"        return new Person(id, name, phone, email, address, tags);","lastModifiedDate":"2022-10-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"jasonqiu212":4,"ShenyiCui":1,"peppapighs":20,"-":84}},{"path":"src/test/java/swift/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.testutil;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-10-01"},{"lineNumber":4,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-01"},{"lineNumber":5,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-01"},{"lineNumber":6,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-01"},{"lineNumber":7,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"ShenyiCui"},"content":"import swift.logic.commands.AddContactCommand;","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"yunruu"},"content":"import swift.logic.commands.EditContactCommand.EditPersonDescriptor;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"peppapighs"},"content":"import swift.model.person.Person;","lastModifiedDate":"2022-10-01"},{"lineNumber":14,"author":{"gitId":"peppapighs"},"content":"import swift.model.tag.Tag;","lastModifiedDate":"2022-10-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"ShenyiCui"},"content":"        return AddContactCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"ShenyiCui":2,"peppapighs":8,"-":51,"yunruu":1}},{"path":"src/test/java/swift/testutil/SerializableTestClass.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.testutil;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A class used to test serialization and deserialization","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class SerializableTestClass {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String JSON_STRING_REPRESENTATION \u003d String.format(\"{%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"  \\\"name\\\" : \\\"This is a test class\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"  \\\"listOfLocalDateTimes\\\" : \"","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"[ \\\"-999999999-01-01T00:00:00\\\", \\\"+999999999-12-31T23:59:59.999999999\\\", \"","lastModifiedDate":"2016-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"\\\"0001-01-01T01:01:00\\\" ],%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"  \\\"mapOfIntegerToString\\\" : {%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"    \\\"1\\\" : \\\"One\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"    \\\"2\\\" : \\\"Two\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    \\\"3\\\" : \\\"Three\\\"%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"  }%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"}\");","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String NAME_TEST_VALUE \u003d \"This is a test class\";","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private String name;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private List\u003cLocalDateTime\u003e listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private HashMap\u003cInteger, String\u003e mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getNameTestValue() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return NAME_TEST_VALUE;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static List\u003cLocalDateTime\u003e getListTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cLocalDateTime\u003e listOfLocalDateTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MIN);","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MAX);","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.of(1, 1, 1, 1, 1));","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static HashMap\u003cInteger, String\u003e getHashMapTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        HashMap\u003cInteger, String\u003e mapOfIntegerToString \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(1, \"One\");","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(2, \"Two\");","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(3, \"Three\");","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d getNameTestValue();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes \u003d getListTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        mapOfIntegerToString \u003d getHashMapTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getName() {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public List\u003cLocalDateTime\u003e getListOfLocalDateTimes() {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public HashMap\u003cInteger, String\u003e getMapOfIntegerToString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"peppapighs":1,"-":71}},{"path":"src/test/java/swift/testutil/TaskBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.testutil;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"jasonqiu212"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-26"},{"lineNumber":4,"author":{"gitId":"peppapighs"},"content":"import java.util.UUID;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"jasonqiu212"},"content":"import swift.model.task.Deadline;","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"jasonqiu212"},"content":"import swift.model.task.Description;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"peppapighs"},"content":"import swift.model.task.Task;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"peppapighs"},"content":"import swift.model.task.TaskName;","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"peppapighs"},"content":"/**","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"peppapighs"},"content":" * A utility class to help with building Task objects.","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"peppapighs"},"content":" */","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"peppapighs"},"content":"public class TaskBuilder {","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"ShenyiCui"},"content":"    public static final String DEFAULT_ID \u003d \"bfbf250c-fd58-49b4-be15-ca12095ca2ee\";","lastModifiedDate":"2022-10-23"},{"lineNumber":17,"author":{"gitId":"santosh3007"},"content":"    public static final String DEFAULT_TASK_NAME \u003d \"Default Task\";","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"jasonqiu212"},"content":"    public static final String DEFAULT_DESCRIPTION \u003d \"Default description\";","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"jasonqiu212"},"content":"    public static final String DEFAULT_DEADLINE \u003d \"12-12-2022 1200\";","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"santosh3007"},"content":"    public static final boolean DEFAULT_IS_DONE \u003d false;","lastModifiedDate":"2022-11-06"},{"lineNumber":21,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"peppapighs"},"content":"    private UUID id;","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"peppapighs"},"content":"    private TaskName taskName;","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"jasonqiu212"},"content":"    private Optional\u003cDescription\u003e description;","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"jasonqiu212"},"content":"    private Optional\u003cDeadline\u003e deadline;","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"santosh3007"},"content":"    private boolean isDone;","lastModifiedDate":"2022-11-06"},{"lineNumber":27,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"peppapighs"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"peppapighs"},"content":"     * Creates a {@code TaskBuilder} with the default details.","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"peppapighs"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"peppapighs"},"content":"    public TaskBuilder() {","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"peppapighs"},"content":"        id \u003d UUID.fromString(DEFAULT_ID);","lastModifiedDate":"2022-10-15"},{"lineNumber":33,"author":{"gitId":"peppapighs"},"content":"        taskName \u003d new TaskName(DEFAULT_TASK_NAME);","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"jasonqiu212"},"content":"        description \u003d Optional.of(new Description(DEFAULT_DESCRIPTION));","lastModifiedDate":"2022-10-26"},{"lineNumber":35,"author":{"gitId":"jasonqiu212"},"content":"        deadline \u003d Optional.of(new Deadline(DEFAULT_DEADLINE));","lastModifiedDate":"2022-10-26"},{"lineNumber":36,"author":{"gitId":"santosh3007"},"content":"        isDone \u003d DEFAULT_IS_DONE;","lastModifiedDate":"2022-11-06"},{"lineNumber":37,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"peppapighs"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":40,"author":{"gitId":"peppapighs"},"content":"     * Initializes the TaskBuilder with the data of {@code taskToCopy}.","lastModifiedDate":"2022-10-06"},{"lineNumber":41,"author":{"gitId":"peppapighs"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":42,"author":{"gitId":"peppapighs"},"content":"    public TaskBuilder(Task taskToCopy) {","lastModifiedDate":"2022-10-06"},{"lineNumber":43,"author":{"gitId":"peppapighs"},"content":"        id \u003d taskToCopy.getId();","lastModifiedDate":"2022-10-15"},{"lineNumber":44,"author":{"gitId":"jasonqiu212"},"content":"        taskName \u003d taskToCopy.getName();","lastModifiedDate":"2022-10-26"},{"lineNumber":45,"author":{"gitId":"jasonqiu212"},"content":"        description \u003d taskToCopy.getDescription();","lastModifiedDate":"2022-10-26"},{"lineNumber":46,"author":{"gitId":"jasonqiu212"},"content":"        deadline \u003d taskToCopy.getDeadline();","lastModifiedDate":"2022-10-26"},{"lineNumber":47,"author":{"gitId":"santosh3007"},"content":"        isDone \u003d taskToCopy.isDone();","lastModifiedDate":"2022-11-06"},{"lineNumber":48,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":49,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":50,"author":{"gitId":"peppapighs"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":51,"author":{"gitId":"peppapighs"},"content":"     * Sets the {@code UUID} of the {@code Task} that we are building.","lastModifiedDate":"2022-10-15"},{"lineNumber":52,"author":{"gitId":"peppapighs"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":53,"author":{"gitId":"peppapighs"},"content":"    public TaskBuilder withId(String id) {","lastModifiedDate":"2022-10-15"},{"lineNumber":54,"author":{"gitId":"peppapighs"},"content":"        this.id \u003d UUID.fromString(id);","lastModifiedDate":"2022-10-15"},{"lineNumber":55,"author":{"gitId":"peppapighs"},"content":"        return this;","lastModifiedDate":"2022-10-06"},{"lineNumber":56,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":57,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":58,"author":{"gitId":"peppapighs"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":59,"author":{"gitId":"peppapighs"},"content":"     * Sets the {@code TaskName} of the {@code Task} that we are building.","lastModifiedDate":"2022-10-15"},{"lineNumber":60,"author":{"gitId":"peppapighs"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":61,"author":{"gitId":"peppapighs"},"content":"    public TaskBuilder withTaskName(String taskName) {","lastModifiedDate":"2022-10-15"},{"lineNumber":62,"author":{"gitId":"peppapighs"},"content":"        this.taskName \u003d new TaskName(taskName);","lastModifiedDate":"2022-10-15"},{"lineNumber":63,"author":{"gitId":"peppapighs"},"content":"        return this;","lastModifiedDate":"2022-10-06"},{"lineNumber":64,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":65,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":66,"author":{"gitId":"jasonqiu212"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":67,"author":{"gitId":"jasonqiu212"},"content":"     * Sets the {@code Description} of the {@code Task} that we are building.","lastModifiedDate":"2022-10-26"},{"lineNumber":68,"author":{"gitId":"jasonqiu212"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":69,"author":{"gitId":"jasonqiu212"},"content":"    public TaskBuilder withDescription(String description) {","lastModifiedDate":"2022-10-26"},{"lineNumber":70,"author":{"gitId":"jasonqiu212"},"content":"        this.description \u003d Optional.ofNullable(description).map(Description::new);","lastModifiedDate":"2022-10-26"},{"lineNumber":71,"author":{"gitId":"jasonqiu212"},"content":"        return this;","lastModifiedDate":"2022-10-26"},{"lineNumber":72,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":73,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":74,"author":{"gitId":"jasonqiu212"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":75,"author":{"gitId":"jasonqiu212"},"content":"     * Sets the {@code Deadline} of the {@code Task} that we are building.","lastModifiedDate":"2022-10-26"},{"lineNumber":76,"author":{"gitId":"jasonqiu212"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":77,"author":{"gitId":"jasonqiu212"},"content":"    public TaskBuilder withDeadline(String deadline) {","lastModifiedDate":"2022-10-26"},{"lineNumber":78,"author":{"gitId":"jasonqiu212"},"content":"        this.deadline \u003d Optional.ofNullable(deadline).map(Deadline::new);","lastModifiedDate":"2022-10-26"},{"lineNumber":79,"author":{"gitId":"jasonqiu212"},"content":"        return this;","lastModifiedDate":"2022-10-26"},{"lineNumber":80,"author":{"gitId":"jasonqiu212"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":81,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":82,"author":{"gitId":"santosh3007"},"content":"    /**","lastModifiedDate":"2022-11-06"},{"lineNumber":83,"author":{"gitId":"santosh3007"},"content":"     * Sets the {@code isDone} of the {@code Task} that we are building.","lastModifiedDate":"2022-11-06"},{"lineNumber":84,"author":{"gitId":"santosh3007"},"content":"     */","lastModifiedDate":"2022-11-06"},{"lineNumber":85,"author":{"gitId":"santosh3007"},"content":"    public TaskBuilder withIsDone(boolean isDone) {","lastModifiedDate":"2022-11-06"},{"lineNumber":86,"author":{"gitId":"santosh3007"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-11-06"},{"lineNumber":87,"author":{"gitId":"santosh3007"},"content":"        return this;","lastModifiedDate":"2022-11-06"},{"lineNumber":88,"author":{"gitId":"santosh3007"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":89,"author":{"gitId":"santosh3007"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":90,"author":{"gitId":"jasonqiu212"},"content":"    public Task build() {","lastModifiedDate":"2022-10-26"},{"lineNumber":91,"author":{"gitId":"santosh3007"},"content":"        return new Task(id, taskName, description, deadline, isDone);","lastModifiedDate":"2022-11-06"},{"lineNumber":92,"author":{"gitId":"jasonqiu212"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":93,"author":{"gitId":"peppapighs"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"jasonqiu212":28,"ShenyiCui":1,"santosh3007":14,"peppapighs":50}},{"path":"src/test/java/swift/testutil/TaskUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.testutil;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"jasonqiu212"},"content":"import static swift.logic.parser.CliSyntax.PREFIX_DEADLINE;","lastModifiedDate":"2022-10-26"},{"lineNumber":4,"author":{"gitId":"jasonqiu212"},"content":"import static swift.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"peppapighs"},"content":"import swift.logic.commands.AddTaskCommand;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"peppapighs"},"content":"import swift.model.task.Task;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"peppapighs"},"content":"/**","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"peppapighs"},"content":" * A utility class for Task.","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"peppapighs"},"content":" */","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"peppapighs"},"content":"public class TaskUtil {","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"peppapighs"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"peppapighs"},"content":"     * Returns an add task command string for adding the {@code task}.","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"peppapighs"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"peppapighs"},"content":"    public static String getAddTaskCommand(Task task) {","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"peppapighs"},"content":"        return AddTaskCommand.COMMAND_WORD + \" \" + getTaskDetails(task);","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"peppapighs"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"peppapighs"},"content":"     * Returns the part of command string for the given {@code task}\u0027s details.","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"peppapighs"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"peppapighs"},"content":"    public static String getTaskDetails(Task task) {","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"jasonqiu212"},"content":"        String taskDetails \u003d PREFIX_NAME + task.getName().fullName;","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"jasonqiu212"},"content":"        if (task.getDescription().isPresent()) {","lastModifiedDate":"2022-10-26"},{"lineNumber":28,"author":{"gitId":"jasonqiu212"},"content":"            taskDetails +\u003d \" \" + PREFIX_DESCRIPTION + task.getDescription().get();","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"jasonqiu212"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"jasonqiu212"},"content":"        if (task.getDeadline().isPresent()) {","lastModifiedDate":"2022-10-26"},{"lineNumber":31,"author":{"gitId":"jasonqiu212"},"content":"            taskDetails +\u003d \" \" + PREFIX_DEADLINE + task.getDeadline().get();","lastModifiedDate":"2022-10-26"},{"lineNumber":32,"author":{"gitId":"jasonqiu212"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":33,"author":{"gitId":"jasonqiu212"},"content":"        return taskDetails;","lastModifiedDate":"2022-10-26"},{"lineNumber":34,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"peppapighs"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"jasonqiu212":10,"peppapighs":25}},{"path":"src/test/java/swift/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.testutil;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"peppapighs"},"content":"import swift.commons.core.index.Index;","lastModifiedDate":"2022-10-01"},{"lineNumber":9,"author":{"gitId":"peppapighs"},"content":"import swift.model.Model;","lastModifiedDate":"2022-10-01"},{"lineNumber":10,"author":{"gitId":"peppapighs"},"content":"import swift.model.person.Person;","lastModifiedDate":"2022-10-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns the middle index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2017-07-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(model.getFilteredPersonList().size() / 2);","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns the last index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2017-07-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns the person in the {@code model}\u0027s person list at {@code index}.","lastModifiedDate":"2017-07-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static Person getPerson(Model model, Index index) {","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList().get(index.getZeroBased());","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"peppapighs":4,"-":51}},{"path":"src/test/java/swift/testutil/TypicalBridges.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.testutil;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"peppapighs"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"peppapighs"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"peppapighs"},"content":"import java.util.List;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"peppapighs"},"content":"import java.util.UUID;","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"peppapighs"},"content":"import swift.model.AddressBook;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"peppapighs"},"content":"import swift.model.bridge.PersonTaskBridge;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"peppapighs"},"content":"/**","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"peppapighs"},"content":" * A utility class containing a list of {@code PersonTaskBridge} objects to be","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"peppapighs"},"content":" * used in tests.","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"peppapighs"},"content":" */","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"peppapighs"},"content":"public class TypicalBridges {","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"jasonqiu212"},"content":"    public static final String PERSON_ID_1 \u003d \"c4c645da-27b3-454d-9428-5295a6ee1f33\";","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"jasonqiu212"},"content":"    public static final String PERSON_ID_2 \u003d \"42d68acf-f3db-4c55-bbe6-4a3d1db64ac0\";","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"jasonqiu212"},"content":"    public static final String PERSON_ID_3 \u003d \"6a5f8ed7-2607-47d1-9faf-bf2437642985\";","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"jasonqiu212"},"content":"    public static final String TASK_ID_1 \u003d \"bfbf250c-fd58-49b4-be15-ca12095ca2ee\";","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"jasonqiu212"},"content":"    public static final String TASK_ID_2 \u003d \"41478d11-dbba-441f-ab0f-99ddf097eac1\";","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"jasonqiu212"},"content":"    public static final String TASK_ID_3 \u003d \"384308a6-6c01-4e7a-a9eb-8147f6502764\";","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"jasonqiu212"},"content":"    public static final String TASK_ID_4 \u003d \"8aa2ee94-728a-47b5-8864-474ea71612fb\";","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"peppapighs"},"content":"    public static final PersonTaskBridge DEFAULT_BRIDGE_1 \u003d new PersonTaskBridge(","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"jasonqiu212"},"content":"            UUID.fromString(PERSON_ID_1),","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"jasonqiu212"},"content":"            UUID.fromString(TASK_ID_1));","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"peppapighs"},"content":"    public static final PersonTaskBridge DEFAULT_BRIDGE_2 \u003d new PersonTaskBridge(","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"jasonqiu212"},"content":"            UUID.fromString(PERSON_ID_1),","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"jasonqiu212"},"content":"            UUID.fromString(TASK_ID_2));","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"jasonqiu212"},"content":"    public static final PersonTaskBridge DEFAULT_BRIDGE_3 \u003d new PersonTaskBridge(","lastModifiedDate":"2022-10-26"},{"lineNumber":31,"author":{"gitId":"jasonqiu212"},"content":"            UUID.fromString(PERSON_ID_2),","lastModifiedDate":"2022-10-26"},{"lineNumber":32,"author":{"gitId":"jasonqiu212"},"content":"            UUID.fromString(TASK_ID_3));","lastModifiedDate":"2022-10-26"},{"lineNumber":33,"author":{"gitId":"jasonqiu212"},"content":"    public static final PersonTaskBridge DEFAULT_BRIDGE_4 \u003d new PersonTaskBridge(","lastModifiedDate":"2022-10-26"},{"lineNumber":34,"author":{"gitId":"jasonqiu212"},"content":"            UUID.fromString(PERSON_ID_3),","lastModifiedDate":"2022-10-26"},{"lineNumber":35,"author":{"gitId":"jasonqiu212"},"content":"            UUID.fromString(TASK_ID_4));","lastModifiedDate":"2022-10-26"},{"lineNumber":36,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"peppapighs"},"content":"    private TypicalBridges() {} // prevents instantiation","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":39,"author":{"gitId":"peppapighs"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"peppapighs"},"content":"     * Returns an {@code AddressBook} with all the typical tasks.","lastModifiedDate":"2022-10-16"},{"lineNumber":41,"author":{"gitId":"peppapighs"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":42,"author":{"gitId":"peppapighs"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2022-10-16"},{"lineNumber":43,"author":{"gitId":"peppapighs"},"content":"        AddressBook ab \u003d TypicalTasks.getTypicalAddressBook();","lastModifiedDate":"2022-10-16"},{"lineNumber":44,"author":{"gitId":"jasonqiu212"},"content":"        ab.setBridges(getTypicalBridges());","lastModifiedDate":"2022-10-26"},{"lineNumber":45,"author":{"gitId":"peppapighs"},"content":"        return ab;","lastModifiedDate":"2022-10-16"},{"lineNumber":46,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":47,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":48,"author":{"gitId":"peppapighs"},"content":"    public static List\u003cPersonTaskBridge\u003e getTypicalBridges() {","lastModifiedDate":"2022-10-16"},{"lineNumber":49,"author":{"gitId":"jasonqiu212"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(DEFAULT_BRIDGE_1, DEFAULT_BRIDGE_2, DEFAULT_BRIDGE_3, DEFAULT_BRIDGE_4));","lastModifiedDate":"2022-10-26"},{"lineNumber":50,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":51,"author":{"gitId":"peppapighs"},"content":"}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"jasonqiu212":19,"peppapighs":32}},{"path":"src/test/java/swift/testutil/TypicalIntegratedAddressBook.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ShenyiCui"},"content":"package swift.testutil;","lastModifiedDate":"2022-10-23"},{"lineNumber":2,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":3,"author":{"gitId":"ShenyiCui"},"content":"import static swift.logic.commands.CommandTestUtil.VALID_TASK_NAME_1;","lastModifiedDate":"2022-10-23"},{"lineNumber":4,"author":{"gitId":"ShenyiCui"},"content":"import static swift.logic.commands.CommandTestUtil.VALID_TASK_NAME_2;","lastModifiedDate":"2022-10-23"},{"lineNumber":5,"author":{"gitId":"ShenyiCui"},"content":"import static swift.logic.commands.CommandTestUtil.VALID_TASK_NAME_3;","lastModifiedDate":"2022-10-23"},{"lineNumber":6,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":7,"author":{"gitId":"ShenyiCui"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-23"},{"lineNumber":8,"author":{"gitId":"ShenyiCui"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-23"},{"lineNumber":9,"author":{"gitId":"ShenyiCui"},"content":"import java.util.List;","lastModifiedDate":"2022-10-23"},{"lineNumber":10,"author":{"gitId":"ShenyiCui"},"content":"import java.util.UUID;","lastModifiedDate":"2022-10-23"},{"lineNumber":11,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":12,"author":{"gitId":"ShenyiCui"},"content":"import swift.model.AddressBook;","lastModifiedDate":"2022-10-23"},{"lineNumber":13,"author":{"gitId":"ShenyiCui"},"content":"import swift.model.bridge.PersonTaskBridge;","lastModifiedDate":"2022-10-23"},{"lineNumber":14,"author":{"gitId":"ShenyiCui"},"content":"import swift.model.person.Person;","lastModifiedDate":"2022-10-23"},{"lineNumber":15,"author":{"gitId":"ShenyiCui"},"content":"import swift.model.task.Task;","lastModifiedDate":"2022-10-23"},{"lineNumber":16,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":17,"author":{"gitId":"ShenyiCui"},"content":"/**","lastModifiedDate":"2022-10-23"},{"lineNumber":18,"author":{"gitId":"ShenyiCui"},"content":" * A utility class containing a list of {@code PersonTaskBridge} objects to be","lastModifiedDate":"2022-10-23"},{"lineNumber":19,"author":{"gitId":"ShenyiCui"},"content":" * used in tests.","lastModifiedDate":"2022-10-23"},{"lineNumber":20,"author":{"gitId":"ShenyiCui"},"content":" */","lastModifiedDate":"2022-10-23"},{"lineNumber":21,"author":{"gitId":"ShenyiCui"},"content":"public class TypicalIntegratedAddressBook {","lastModifiedDate":"2022-10-23"},{"lineNumber":22,"author":{"gitId":"ShenyiCui"},"content":"    public static final String PERSON1_UUID \u003d \"c4c645da-27b3-454d-9428-5295a6ee1f33\";","lastModifiedDate":"2022-10-23"},{"lineNumber":23,"author":{"gitId":"ShenyiCui"},"content":"    public static final String PERSON2_UUID \u003d \"5f3f93b9-d839-4d5c-b197-9f3e53ebbb71\";","lastModifiedDate":"2022-10-23"},{"lineNumber":24,"author":{"gitId":"ShenyiCui"},"content":"    public static final String TASK1_UUID \u003d \"bfbf250c-fd58-49b4-be15-ca12095ca2ee\";","lastModifiedDate":"2022-10-23"},{"lineNumber":25,"author":{"gitId":"ShenyiCui"},"content":"    public static final String TASK2_UUID \u003d \"41478d11-dbba-441f-ab0f-99ddf097eac1\";","lastModifiedDate":"2022-10-23"},{"lineNumber":26,"author":{"gitId":"ShenyiCui"},"content":"    public static final String TASK3_UUID \u003d \"ebda2eaf-9100-4de2-85c0-cb3efed5685c\";","lastModifiedDate":"2022-10-23"},{"lineNumber":27,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":28,"author":{"gitId":"ShenyiCui"},"content":"    public static final PersonTaskBridge DEFAULT_BRIDGE_1 \u003d new PersonTaskBridge(","lastModifiedDate":"2022-10-23"},{"lineNumber":29,"author":{"gitId":"ShenyiCui"},"content":"            UUID.fromString(PERSON1_UUID),","lastModifiedDate":"2022-10-23"},{"lineNumber":30,"author":{"gitId":"ShenyiCui"},"content":"            UUID.fromString(TASK1_UUID));","lastModifiedDate":"2022-10-23"},{"lineNumber":31,"author":{"gitId":"ShenyiCui"},"content":"    public static final PersonTaskBridge DEFAULT_BRIDGE_2 \u003d new PersonTaskBridge(","lastModifiedDate":"2022-10-23"},{"lineNumber":32,"author":{"gitId":"ShenyiCui"},"content":"            UUID.fromString(PERSON1_UUID),","lastModifiedDate":"2022-10-23"},{"lineNumber":33,"author":{"gitId":"ShenyiCui"},"content":"            UUID.fromString(TASK2_UUID));","lastModifiedDate":"2022-10-23"},{"lineNumber":34,"author":{"gitId":"ShenyiCui"},"content":"    public static final PersonTaskBridge DEFAULT_BRIDGE_3 \u003d new PersonTaskBridge(","lastModifiedDate":"2022-10-23"},{"lineNumber":35,"author":{"gitId":"ShenyiCui"},"content":"            UUID.fromString(PERSON2_UUID),","lastModifiedDate":"2022-10-23"},{"lineNumber":36,"author":{"gitId":"ShenyiCui"},"content":"            UUID.fromString(TASK3_UUID));","lastModifiedDate":"2022-10-23"},{"lineNumber":37,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":38,"author":{"gitId":"ShenyiCui"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2022-10-23"},{"lineNumber":39,"author":{"gitId":"ShenyiCui"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2022-10-23"},{"lineNumber":40,"author":{"gitId":"ShenyiCui"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2022-10-23"},{"lineNumber":41,"author":{"gitId":"ShenyiCui"},"content":"            .withTags(\"friends\")","lastModifiedDate":"2022-10-23"},{"lineNumber":42,"author":{"gitId":"ShenyiCui"},"content":"            .withId(PERSON1_UUID).build();","lastModifiedDate":"2022-10-23"},{"lineNumber":43,"author":{"gitId":"ShenyiCui"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2022-10-23"},{"lineNumber":44,"author":{"gitId":"ShenyiCui"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2022-10-23"},{"lineNumber":45,"author":{"gitId":"ShenyiCui"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2022-10-23"},{"lineNumber":46,"author":{"gitId":"ShenyiCui"},"content":"            .withTags(\"owesMoney\", \"friends\")","lastModifiedDate":"2022-10-23"},{"lineNumber":47,"author":{"gitId":"ShenyiCui"},"content":"            .withId(PERSON2_UUID).build();","lastModifiedDate":"2022-10-23"},{"lineNumber":48,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":49,"author":{"gitId":"ShenyiCui"},"content":"    public static final Task BUY_MILK \u003d new TaskBuilder()","lastModifiedDate":"2022-10-23"},{"lineNumber":50,"author":{"gitId":"ShenyiCui"},"content":"            .withTaskName(VALID_TASK_NAME_1)","lastModifiedDate":"2022-10-23"},{"lineNumber":51,"author":{"gitId":"ShenyiCui"},"content":"            .withId(TASK1_UUID).build();","lastModifiedDate":"2022-10-23"},{"lineNumber":52,"author":{"gitId":"ShenyiCui"},"content":"    public static final Task CS2103T \u003d new TaskBuilder()","lastModifiedDate":"2022-10-23"},{"lineNumber":53,"author":{"gitId":"ShenyiCui"},"content":"            .withTaskName(VALID_TASK_NAME_2)","lastModifiedDate":"2022-10-23"},{"lineNumber":54,"author":{"gitId":"ShenyiCui"},"content":"            .withId(TASK2_UUID).build();","lastModifiedDate":"2022-10-23"},{"lineNumber":55,"author":{"gitId":"ShenyiCui"},"content":"    public static final Task FINISH_ASSIGNMENT \u003d new TaskBuilder()","lastModifiedDate":"2022-10-23"},{"lineNumber":56,"author":{"gitId":"ShenyiCui"},"content":"            .withTaskName(VALID_TASK_NAME_3)","lastModifiedDate":"2022-10-23"},{"lineNumber":57,"author":{"gitId":"ShenyiCui"},"content":"            .withId(TASK3_UUID).build();","lastModifiedDate":"2022-10-23"},{"lineNumber":58,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":59,"author":{"gitId":"ShenyiCui"},"content":"    private TypicalIntegratedAddressBook() {} // prevents instantiation","lastModifiedDate":"2022-10-23"},{"lineNumber":60,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":61,"author":{"gitId":"ShenyiCui"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":62,"author":{"gitId":"ShenyiCui"},"content":"     * Returns an {@code AddressBook} with all the typical tasks.","lastModifiedDate":"2022-10-23"},{"lineNumber":63,"author":{"gitId":"ShenyiCui"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":64,"author":{"gitId":"ShenyiCui"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2022-10-23"},{"lineNumber":65,"author":{"gitId":"ShenyiCui"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2022-10-23"},{"lineNumber":66,"author":{"gitId":"ShenyiCui"},"content":"        for (PersonTaskBridge bridge : getTypicalBridges()) {","lastModifiedDate":"2022-10-23"},{"lineNumber":67,"author":{"gitId":"ShenyiCui"},"content":"            ab.addBridge(bridge);","lastModifiedDate":"2022-10-23"},{"lineNumber":68,"author":{"gitId":"ShenyiCui"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":69,"author":{"gitId":"ShenyiCui"},"content":"        for (Task task : getTypicalTasks()) {","lastModifiedDate":"2022-10-23"},{"lineNumber":70,"author":{"gitId":"ShenyiCui"},"content":"            ab.addTask(task);","lastModifiedDate":"2022-10-23"},{"lineNumber":71,"author":{"gitId":"ShenyiCui"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":72,"author":{"gitId":"ShenyiCui"},"content":"        for (Person person : getTypicalPeople()) {","lastModifiedDate":"2022-10-23"},{"lineNumber":73,"author":{"gitId":"ShenyiCui"},"content":"            ab.addPerson(person);","lastModifiedDate":"2022-10-23"},{"lineNumber":74,"author":{"gitId":"ShenyiCui"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":75,"author":{"gitId":"ShenyiCui"},"content":"        return ab;","lastModifiedDate":"2022-10-23"},{"lineNumber":76,"author":{"gitId":"ShenyiCui"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":77,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":78,"author":{"gitId":"ShenyiCui"},"content":"    public static List\u003cPersonTaskBridge\u003e getTypicalBridges() {","lastModifiedDate":"2022-10-23"},{"lineNumber":79,"author":{"gitId":"ShenyiCui"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(DEFAULT_BRIDGE_1, DEFAULT_BRIDGE_2, DEFAULT_BRIDGE_3));","lastModifiedDate":"2022-10-23"},{"lineNumber":80,"author":{"gitId":"ShenyiCui"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":81,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":82,"author":{"gitId":"ShenyiCui"},"content":"    public static List\u003cTask\u003e getTypicalTasks() {","lastModifiedDate":"2022-10-23"},{"lineNumber":83,"author":{"gitId":"ShenyiCui"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(BUY_MILK, CS2103T, FINISH_ASSIGNMENT));","lastModifiedDate":"2022-10-23"},{"lineNumber":84,"author":{"gitId":"ShenyiCui"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":85,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":86,"author":{"gitId":"ShenyiCui"},"content":"    public static List\u003cPerson\u003e getTypicalPeople() {","lastModifiedDate":"2022-10-23"},{"lineNumber":87,"author":{"gitId":"ShenyiCui"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON));","lastModifiedDate":"2022-10-23"},{"lineNumber":88,"author":{"gitId":"ShenyiCui"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":89,"author":{"gitId":"ShenyiCui"},"content":"}","lastModifiedDate":"2022-10-23"}],"authorContributionMap":{"ShenyiCui":89}},{"path":"src/test/java/swift/testutil/TypicalPersonIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.testutil;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"peppapighs"},"content":"import swift.commons.core.index.Index;","lastModifiedDate":"2022-10-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"ShenyiCui"},"content":" * A utility class containing a list of Person {@code Index} objects to be used in tests.","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"ShenyiCui"},"content":"public class TypicalPersonIndexes {","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Index INDEX_FIRST_PERSON \u003d Index.fromOneBased(1);","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Index INDEX_SECOND_PERSON \u003d Index.fromOneBased(2);","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Index INDEX_THIRD_PERSON \u003d Index.fromOneBased(3);","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"ShenyiCui":2,"peppapighs":2,"-":8}},{"path":"src/test/java/swift/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.testutil;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2022-10-01"},{"lineNumber":4,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-10-01"},{"lineNumber":5,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2022-10-01"},{"lineNumber":6,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-10-01"},{"lineNumber":7,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2022-10-01"},{"lineNumber":8,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-10-01"},{"lineNumber":9,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2022-10-01"},{"lineNumber":10,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-10-01"},{"lineNumber":11,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2022-10-01"},{"lineNumber":12,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"peppapighs"},"content":"import swift.model.AddressBook;","lastModifiedDate":"2022-10-01"},{"lineNumber":19,"author":{"gitId":"peppapighs"},"content":"import swift.model.person.Person;","lastModifiedDate":"2022-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"ShenyiCui"},"content":"    public static final String ALICE_UUID \u003d \"c4c645da-27b3-454d-9428-5295a6ee1f33\";","lastModifiedDate":"2022-10-23"},{"lineNumber":26,"author":{"gitId":"ShenyiCui"},"content":"    public static final String BENSON_UUID \u003d \"42d68acf-f3db-4c55-bbe6-4a3d1db64ac0\";","lastModifiedDate":"2022-10-23"},{"lineNumber":27,"author":{"gitId":"ShenyiCui"},"content":"    public static final String CARL_UUID \u003d \"6a5f8ed7-2607-47d1-9faf-bf2437642985\";","lastModifiedDate":"2022-10-23"},{"lineNumber":28,"author":{"gitId":"ShenyiCui"},"content":"    public static final String DANIEL_UUID \u003d \"fc3ad432-f7ed-403f-9236-18054ddd4b31\";","lastModifiedDate":"2022-10-23"},{"lineNumber":29,"author":{"gitId":"ShenyiCui"},"content":"    public static final String ELLE_UUID \u003d \"dbef9f04-d31a-42b4-b57a-4d2fd34444c3\";","lastModifiedDate":"2022-10-23"},{"lineNumber":30,"author":{"gitId":"ShenyiCui"},"content":"    public static final String FIONA_UUID \u003d \"79faf217-b266-4dd8-91a5-d801e87e5447\";","lastModifiedDate":"2022-10-23"},{"lineNumber":31,"author":{"gitId":"ShenyiCui"},"content":"    public static final String GEORGE_UUID \u003d \"14cec028-25a3-466d-8ffc-359dc1e2a585\";","lastModifiedDate":"2022-10-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"ShenyiCui"},"content":"            .withTags(\"friends\").withId(ALICE_UUID).build();","lastModifiedDate":"2022-10-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"ShenyiCui"},"content":"            .withTags(\"owesMoney\", \"friends\").withId(BENSON_UUID).build();","lastModifiedDate":"2022-10-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":42,"author":{"gitId":"ShenyiCui"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").withId(CARL_UUID).build();","lastModifiedDate":"2022-10-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":44,"author":{"gitId":"ShenyiCui"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"friends\")","lastModifiedDate":"2022-10-23"},{"lineNumber":45,"author":{"gitId":"ShenyiCui"},"content":"            .withId(DANIEL_UUID).build();","lastModifiedDate":"2022-10-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":47,"author":{"gitId":"ShenyiCui"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").withId(ELLE_UUID).build();","lastModifiedDate":"2022-10-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"ShenyiCui"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").withId(FIONA_UUID).build();","lastModifiedDate":"2022-10-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":51,"author":{"gitId":"ShenyiCui"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").withId(GEORGE_UUID).build();","lastModifiedDate":"2022-10-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2017-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"ShenyiCui":15,"peppapighs":13,"-":56}},{"path":"src/test/java/swift/testutil/TypicalTaskIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ShenyiCui"},"content":"package swift.testutil;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"ShenyiCui"},"content":"import swift.commons.core.index.Index;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"ShenyiCui"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"ShenyiCui"},"content":" * A utility class containing a list of Task {@code Index} objects to be used in tests.","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"ShenyiCui"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"ShenyiCui"},"content":"public class TypicalTaskIndexes {","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"ShenyiCui"},"content":"    public static final Index INDEX_FIRST_TASK \u003d Index.fromOneBased(1);","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"ShenyiCui"},"content":"    public static final Index INDEX_SECOND_TASK \u003d Index.fromOneBased(2);","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"yunruu"},"content":"    public static final Index INDEX_THIRD_TASK \u003d Index.fromOneBased(3);","lastModifiedDate":"2022-10-24"},{"lineNumber":12,"author":{"gitId":"ShenyiCui"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"ShenyiCui":11,"yunruu":1}},{"path":"src/test/java/swift/testutil/TypicalTasks.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.testutil;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"jasonqiu212"},"content":"import static swift.logic.commands.CommandTestUtil.EMPTY_DEADLINE;","lastModifiedDate":"2022-10-26"},{"lineNumber":4,"author":{"gitId":"jasonqiu212"},"content":"import static swift.logic.commands.CommandTestUtil.EMPTY_DESCRIPTION;","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"jasonqiu212"},"content":"import static swift.logic.commands.CommandTestUtil.VALID_DEADLINE_1;","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"jasonqiu212"},"content":"import static swift.logic.commands.CommandTestUtil.VALID_DEADLINE_2;","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"jasonqiu212"},"content":"import static swift.logic.commands.CommandTestUtil.VALID_DESCRIPTION_1;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"jasonqiu212"},"content":"import static swift.logic.commands.CommandTestUtil.VALID_DESCRIPTION_2;","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.commands.CommandTestUtil.VALID_TASK_NAME_1;","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"peppapighs"},"content":"import static swift.logic.commands.CommandTestUtil.VALID_TASK_NAME_2;","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"jasonqiu212"},"content":"import static swift.logic.commands.CommandTestUtil.VALID_TASK_NAME_4;","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"jasonqiu212"},"content":"import static swift.logic.commands.CommandTestUtil.VALID_TASK_NAME_5;","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"peppapighs"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"peppapighs"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"peppapighs"},"content":"import java.util.List;","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"peppapighs"},"content":"import swift.model.AddressBook;","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"peppapighs"},"content":"import swift.model.task.Task;","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"peppapighs"},"content":"/**","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"peppapighs"},"content":" * A utility class containing a list of {@code Task} objects to be used in tests.","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"peppapighs"},"content":" */","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"peppapighs"},"content":"public class TypicalTasks {","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"jasonqiu212"},"content":"    public static final String TASK_ID_1 \u003d \"bfbf250c-fd58-49b4-be15-ca12095ca2ee\";","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"jasonqiu212"},"content":"    public static final String TASK_ID_2 \u003d \"41478d11-dbba-441f-ab0f-99ddf097eac1\";","lastModifiedDate":"2022-10-26"},{"lineNumber":28,"author":{"gitId":"jasonqiu212"},"content":"    public static final String TASK_ID_3 \u003d \"384308a6-6c01-4e7a-a9eb-8147f6502764\";","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"jasonqiu212"},"content":"    public static final String TASK_ID_4 \u003d \"8aa2ee94-728a-47b5-8864-474ea71612fb\";","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"ShenyiCui"},"content":"    public static final Task BUY_MILK \u003d new TaskBuilder()","lastModifiedDate":"2022-10-23"},{"lineNumber":32,"author":{"gitId":"jasonqiu212"},"content":"            .withId(TASK_ID_1)","lastModifiedDate":"2022-10-26"},{"lineNumber":33,"author":{"gitId":"ShenyiCui"},"content":"            .withTaskName(VALID_TASK_NAME_1)","lastModifiedDate":"2022-10-23"},{"lineNumber":34,"author":{"gitId":"jasonqiu212"},"content":"            .withDescription(EMPTY_DESCRIPTION)","lastModifiedDate":"2022-10-26"},{"lineNumber":35,"author":{"gitId":"jasonqiu212"},"content":"            .withDeadline(VALID_DEADLINE_1)","lastModifiedDate":"2022-11-07"},{"lineNumber":36,"author":{"gitId":"jasonqiu212"},"content":"            .withIsDone(true).build();","lastModifiedDate":"2022-11-07"},{"lineNumber":37,"author":{"gitId":"ShenyiCui"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":38,"author":{"gitId":"ShenyiCui"},"content":"    public static final Task CS2103T \u003d new TaskBuilder()","lastModifiedDate":"2022-10-23"},{"lineNumber":39,"author":{"gitId":"jasonqiu212"},"content":"            .withId(TASK_ID_2)","lastModifiedDate":"2022-10-26"},{"lineNumber":40,"author":{"gitId":"ShenyiCui"},"content":"            .withTaskName(VALID_TASK_NAME_2)","lastModifiedDate":"2022-10-23"},{"lineNumber":41,"author":{"gitId":"jasonqiu212"},"content":"            .withDescription(VALID_DESCRIPTION_1)","lastModifiedDate":"2022-10-26"},{"lineNumber":42,"author":{"gitId":"jasonqiu212"},"content":"            .withDeadline(VALID_DEADLINE_2)","lastModifiedDate":"2022-11-07"},{"lineNumber":43,"author":{"gitId":"jasonqiu212"},"content":"            .withIsDone(false).build();","lastModifiedDate":"2022-11-07"},{"lineNumber":44,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":45,"author":{"gitId":"jasonqiu212"},"content":"    public static final Task CS2101 \u003d new TaskBuilder()","lastModifiedDate":"2022-10-26"},{"lineNumber":46,"author":{"gitId":"jasonqiu212"},"content":"            .withId(TASK_ID_3)","lastModifiedDate":"2022-10-26"},{"lineNumber":47,"author":{"gitId":"jasonqiu212"},"content":"            .withTaskName(VALID_TASK_NAME_4)","lastModifiedDate":"2022-10-26"},{"lineNumber":48,"author":{"gitId":"jasonqiu212"},"content":"            .withDescription(VALID_DESCRIPTION_2)","lastModifiedDate":"2022-10-26"},{"lineNumber":49,"author":{"gitId":"jasonqiu212"},"content":"            .withDeadline(EMPTY_DEADLINE)","lastModifiedDate":"2022-11-07"},{"lineNumber":50,"author":{"gitId":"jasonqiu212"},"content":"            .withIsDone(true).build();","lastModifiedDate":"2022-11-07"},{"lineNumber":51,"author":{"gitId":"jasonqiu212"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":52,"author":{"gitId":"jasonqiu212"},"content":"    public static final Task CS3230 \u003d new TaskBuilder()","lastModifiedDate":"2022-10-26"},{"lineNumber":53,"author":{"gitId":"jasonqiu212"},"content":"            .withId(TASK_ID_4)","lastModifiedDate":"2022-10-26"},{"lineNumber":54,"author":{"gitId":"jasonqiu212"},"content":"            .withTaskName(VALID_TASK_NAME_5)","lastModifiedDate":"2022-10-26"},{"lineNumber":55,"author":{"gitId":"jasonqiu212"},"content":"            .withDescription(EMPTY_DESCRIPTION)","lastModifiedDate":"2022-10-26"},{"lineNumber":56,"author":{"gitId":"jasonqiu212"},"content":"            .withDeadline(EMPTY_DEADLINE)","lastModifiedDate":"2022-11-07"},{"lineNumber":57,"author":{"gitId":"jasonqiu212"},"content":"            .withIsDone(false).build();","lastModifiedDate":"2022-11-07"},{"lineNumber":58,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":59,"author":{"gitId":"peppapighs"},"content":"    private TypicalTasks() {} // prevents instantiation","lastModifiedDate":"2022-10-06"},{"lineNumber":60,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":61,"author":{"gitId":"peppapighs"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":62,"author":{"gitId":"peppapighs"},"content":"     * Returns an {@code AddressBook} with all the typical tasks.","lastModifiedDate":"2022-10-06"},{"lineNumber":63,"author":{"gitId":"peppapighs"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":64,"author":{"gitId":"peppapighs"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2022-10-06"},{"lineNumber":65,"author":{"gitId":"peppapighs"},"content":"        AddressBook ab \u003d TypicalPersons.getTypicalAddressBook();","lastModifiedDate":"2022-10-06"},{"lineNumber":66,"author":{"gitId":"jasonqiu212"},"content":"        ab.setTasks(getTypicalTasks());","lastModifiedDate":"2022-10-26"},{"lineNumber":67,"author":{"gitId":"peppapighs"},"content":"        return ab;","lastModifiedDate":"2022-10-06"},{"lineNumber":68,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":69,"author":{"gitId":"peppapighs"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":70,"author":{"gitId":"peppapighs"},"content":"    public static List\u003cTask\u003e getTypicalTasks() {","lastModifiedDate":"2022-10-06"},{"lineNumber":71,"author":{"gitId":"jasonqiu212"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(BUY_MILK, CS2103T, CS2101, CS3230));","lastModifiedDate":"2022-10-26"},{"lineNumber":72,"author":{"gitId":"peppapighs"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":73,"author":{"gitId":"peppapighs"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"jasonqiu212":36,"ShenyiCui":5,"peppapighs":32}},{"path":"src/test/java/swift/ui/TestFxmlObject.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.ui;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.beans.DefaultProperty;","lastModifiedDate":"2016-12-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A test object which can be constructed via an FXML file.","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unlike other JavaFX classes, this class can be constructed without the JavaFX toolkit being initialized.","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"@DefaultProperty(\"text\")","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class TestFxmlObject {","lastModifiedDate":"2016-12-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private String text;","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public TestFxmlObject() {}","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public TestFxmlObject(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        setText(text);","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public String getText() {","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return text;","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setText(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.text \u003d text;","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-04-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                || (other instanceof TestFxmlObject // instanceof handles nulls","lastModifiedDate":"2017-04-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                        \u0026\u0026 text.equals(((TestFxmlObject) other).getText()));","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"peppapighs":1,"-":34}},{"path":"src/test/java/swift/ui/UiPartTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"peppapighs"},"content":"package swift.ui;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"peppapighs"},"content":"import static swift.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2019-04-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"peppapighs"},"content":"import swift.MainApp;","lastModifiedDate":"2022-10-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class UiPartTest {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String MISSING_FILE_PATH \u003d \"UiPartTest/missingFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_FILE_PATH \u003d \"UiPartTest/invalidFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_PATH \u003d \"UiPartTest/validFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_WITH_FX_ROOT_PATH \u003d \"UiPartTest/validFileWithFxRoot.fxml\";","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final TestFxmlObject VALID_FILE_ROOT \u003d new TestFxmlObject(\"Hello World!\");","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor_nullFileUrl_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_missingFileUrl_throwsAssertionError() throws Exception {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        URL missingFileUrl \u003d new URL(testFolder.toUri().toURL(), MISSING_FILE_PATH);","lastModifiedDate":"2019-04-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileUrl_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        URL invalidFileUrl \u003d getTestFileUrl(INVALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void constructor_validFileUrl_loadsFile() {","lastModifiedDate":"2016-12-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl).getRoot());","lastModifiedDate":"2016-12-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-11-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void constructor_validFileWithFxRootUrl_loadsFile() {","lastModifiedDate":"2017-11-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_WITH_FX_ROOT_PATH);","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        TestFxmlObject root \u003d new TestFxmlObject();","lastModifiedDate":"2017-11-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl, root).getRoot());","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void constructor_nullFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void constructor_missingFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileName_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private URL getTestFileUrl(String testFilePath) {","lastModifiedDate":"2016-12-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String testFilePathInView \u003d \"/view/\" + testFilePath;","lastModifiedDate":"2016-12-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        URL testFileUrl \u003d MainApp.class.getResource(testFilePathInView);","lastModifiedDate":"2016-12-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertNotNull(testFileUrl, testFilePathInView + \" does not exist.\");","lastModifiedDate":"2019-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return testFileUrl;","lastModifiedDate":"2016-12-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * UiPart used for testing.","lastModifiedDate":"2016-12-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * It should only be used with invalid FXML files or the valid file located at {@link VALID_FILE_PATH}.","lastModifiedDate":"2016-12-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class TestUiPart\u003cT\u003e extends UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @FXML","lastModifiedDate":"2016-12-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        private TestFxmlObject validFileRoot; // Check that @FXML annotations work","lastModifiedDate":"2016-12-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            super(fxmlFileName, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl);","lastModifiedDate":"2016-12-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            super(fxmlFileName);","lastModifiedDate":"2016-12-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"peppapighs":3,"-":111}},{"path":"src/test/resources/view/UiPartTest/validFile.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-12-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"peppapighs"},"content":"\u003c?import swift.ui.TestFxmlObject?\u003e","lastModifiedDate":"2022-10-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003eHello World!\u003c/TestFxmlObject\u003e","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"-":3,"peppapighs":1}},{"path":"src/test/resources/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":3,"author":{"gitId":"peppapighs"},"content":"\u003cfx:root type\u003d\"swift.ui.TestFxmlObject\" xmlns\u003d\"http://javafx.com/javafx\"","lastModifiedDate":"2022-10-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"-":5,"peppapighs":1}}]
